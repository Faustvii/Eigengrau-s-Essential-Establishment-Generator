var lib = (function (exports) {
  'use strict';

  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  let randomFn = (min, max) => {
    throw new Error('Function has not been set!');
  };

  function setRandom(fn) {
    randomFn = fn;
  }
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  function random(min, max) {
    if (Array.isArray(min)) {
      return min[randomFn(0, min.length - 1)];
    }

    if (typeof max === 'undefined') {
      return randomFn(0, min);
    }

    return randomFn(min, max);
  }

  const alchemistData = {
    rollData: {
      wealth: {
        description: 'How successful is the alchemist?',
        preceding: 'Alchemist Wealth:',
        rolls: [[95, 'kingly'], [80, 'aristocratic'], [70, 'wealthy'], [60, 'comfortable'], [50, 'modest'], [25, 'poor'], [15, 'squalid'], [0, 'destitute']]
      },
      size: {
        description: 'How large is the shop?',
        preceding: 'Alchemist Size:',
        rolls: [[95, 'cavernous'], [80, 'huge'], [70, 'quite large'], [60, 'large'], [50, 'spacious'], [40, 'average sized'], [30, 'somewhat cramped'], [20, 'small'], [10, 'tiny'], [0, 'extremely cramped']]
      },
      cleanliness: {
        description: 'How clean is the alchemist?',
        preceding: 'Alchemist Cleanliness:',
        rolls: [[80, 'fastidious'], [70, 'very tidy'], [60, 'tidy'], [50, 'reasonably tidy'], [40, 'somewhat messy'], [30, 'rather messy'], [20, 'very messy'], [10, 'extremely messy'], [0, 'dangerously messy']]
      },
      expertise: {
        description: 'How skilled is the alchemist? Can they make complex potions, or are they limited to a simple healing potion?',
        preceding: 'Potion Making Skills:',
        rolls: [[80, 'masterful'], [70, 'exceptional'], [60, 'superior quality'], [50, 'finely crafted'], [40, 'well crafted'], [30, 'sloppily made'], [20, 'somewhat amateur'], [10, 'amateur'], [0, 'blatantly amateur']]
      },
      reputation: {
        description: 'Is it well known, or is it a hobby shop?',
        preceding: 'Alchemist Reputation:',
        hasRolls: false
      },
      activity: {
        description: 'How busy is the alchemist?',
        preceding: 'Alchemist Activity:',
        hasRolls: false
      },
      priceModifier: {
        description: 'How do the prices here compare to your average alchemist?',
        preceding: 'Alchemist Price Modifier:',
        hasRolls: false
      }
    },
    get: {
      customers: [{
        relationshipDescription: 'customer',
        relationships: {
          building: {
            relationship: 'customer'
          },
          associatedNPC: {
            relationship: 'client',
            reciprocalRelationship: 'alchemist'
          }
        },

        description(building, npc) {
          return `${npc.firstName} purchases ${random(['herbs', 'some rare herbs', 'some reagents', 'salt', 'some spices', 'spices typically used in alchemy'])} from ${building.name} for cooking.`;
        }

      }, {
        relationshipDescription: 'weight-loss customer',
        relationships: {
          building: {
            relationship: 'weight-loss customer'
          },
          associatedNPC: {
            relationship: 'client',
            reciprocalRelationship: 'supplier of weight-loss medication'
          }
        },
        base: {
          weight: 'fat',
          note: '$currentNPC.firstName is trying to lose weight.'
        },

        description(building, npc) {
          return `${npc.firstName} purchases ${random(['herbs', 'some rare herbs', 'some reagents', 'salt', 'some spices', 'literal snake oil'])} from ${building.name} for weight loss purposes. It ${random(['doesn\'t seem to be working.', 'seems to be working?', 'is too early to tell if it is working or not.', 'is very clearly a scam.'])}`;
        }

      }, {
        relationshipDescription: 'discrete customer',
        relationships: {
          building: {
            relationship: 'discrete customer'
          },
          associatedNPC: {
            relationship: 'client',
            reciprocalRelationship: 'alchemist'
          }
        },

        description(building, npc) {
          return `${npc.firstName} secretly purchases ${random(['poison', 'some rare herbs used for poison', 'some reagents', 'unnamed powders', 'some things that could be considered dangerous', 'strange potions', 'potions', 'unnamed potions', 'glassware', 'glassware and alchemical reagents'])} from ${building.name}.`;
        }

      }, {
        relationshipDescription: 'lovestruck customer',
        relationships: {
          building: {
            relationship: 'lovestruck customer'
          },
          associatedNPC: {
            relationship: 'client',
            reciprocalRelationship: 'love potion supplier'
          }
        },

        description(building, npc) {
          return `${npc.firstName} secretly purchases ${random(['love potions', 'potions purported to beguile the imbiber', 'potions meant to make the drinker fall in love'])} from ${building.name}.`;
        }

      }, {
        relationshipDescription: 'detractor',
        relationships: {
          building: {
            relationship: 'detractor',
            reciprocalRelationship: 'target of ire'
          },
          associatedNPC: {
            relationship: 'target of ire',
            reciprocalRelationship: 'detractor'
          }
        },
        base: {
          background: 'acolyte'
        },

        description(building, npc) {
          return `${npc.firstName} is an outspoken detractor of ${building.name}, believing alchemy to be an abomination.`;
        }

      }, {
        relationshipDescription: 'client',
        relationships: {
          building: {
            relationship: 'client',
            reciprocalRelationship: 'supplier'
          },
          associatedNPC: {
            relationship: 'alchemist',
            reciprocalRelationship: 'client'
          }
        },
        base: {
          profession: 'merchant'
        },

        description(building, npc) {
          return `${npc.firstName} supplies ${random(['herbs', 'some rare herbs', 'some reagents', random(alchemistData.ingredients)])} to ${building.name}.`;
        }

      }],
      lookAround: alchemist => [{
        cleanliness: 80,
        wealth: 10,
        note: `Looking around, ${alchemist.name} is an extremely clean shop. Sheafs of paper are stacked in piles neatly, with recipes being used currently carefully placed on stands. The typical chemical burns that stain most alchemist shops are nowhere to be found.`
      }, {
        cleanliness: 70,
        wealth: 10,
        note: `Looking around, ${alchemist.name} is a very clean shop (as far as alchemist shops go). There are sheafs of paper, presumably recipes, neatly stacked on benches away from the ominous bubbling of pots that are brewing new concoctions.`
      }, {
        cleanliness: 60,
        wealth: 10,
        note: `Looking around, ${alchemist.name} is pretty clean, by alchemical standards. There's a decent sense of order, and sheafs of paper are for the most part kept away from the pots and jugs of strangely coloured brews that stand in a line on the desk.`
      }, {
        cleanliness: 50,
        wealth: 10,
        note: `Looking around, ${alchemist.name} is as clean as you'd expect for a shop that deals with magical, often volatile chemicals. There's some sense of order, with papers (presumably recipes) kept in stacks, some of them concerningly close to the pots and jugs of strangely coloured brews that clutter the desk.`
      }, {
        cleanliness: 40,
        wealth: 10,
        note: `Looking around, ${alchemist.name} is somewhat messy; a dangerous trait for a shop that deals with magical, often volatile chemicals. There's a vague sense of order, although the papers that are strewn around the room do little to help. There are pots and pans of mixtures yet to be decanted crowding the desk.`
      }, {
        cleanliness: 30,
        wealth: 10,
        note: `Looking around, ${alchemist.name} is rather messy; a dangerous trait for a shop that deals with magical, often volatile chemicals. There's little sense of order, and you accidentally step on a recipe as you make your way through the shop. There are pots and pans of mixtures yet to be decanted crowding the desk, leaving the currently brewing potions to take residence on the floor, where they could be easily knocked over.`
      }, {
        cleanliness: 20,
        wealth: 10,
        note: `Looking around, ${alchemist.name} is extremely messy; a very dangerous trait for a shop that deals with magical, often volatile chemicals. There's no sense of order, and you accidentally step in something that fizzled rather disconcertingly as you make your way through the shop. There are pots and pans of mixtures yet to be cleaned crowding the desk, leaving the currently brewing potions to take residence on the floor, where they could be easily knocked over.`
      }, {
        cleanliness: 10,
        wealth: 10,
        note: `Looking around, ${alchemist.name} must have had an explosion the day before; there is no other possible reason that a shop that deals with magical, often volatile chemicals would be so cluttered, crowded, and blatantly a danger to itself and the half-mile radius surrounding it. There are pots and pans of mixtures that have already spilt over crowding the desk, with potions that are currently brewing strewn around the floor. There's little hope to walk through the shop without putting your boot in something that you probably would prefer not to put it in. Just as you try and hesitate, you hear the distinct sound of 'no, please don't go!' come from the floorboards, which at first seemed to be sticky, but on closer inspection, was more... 'grabby'.`
      }],
      priceTalk: alchemist => [{
        priceModifier: 5,
        wealth: 80,
        priceTalk: 'Be warned, these prices might be... out of your range'
      }, {
        priceModifier: 5,
        wealth: 50,
        priceTalk: "Fair warning; the prices ain't what they used to be, by a long shot."
      }, {
        priceModifier: 5,
        wealth: 20,
        priceTalk: "I'm afraid that times are tough, there's a bit of a surcharge on the fun stuff."
      }, {
        priceModifier: 2,
        wealth: 80,
        priceTalk: 'Fair warning, premium products come with a premium price.'
      }, {
        priceModifier: 2,
        wealth: 50,
        priceTalk: "Fair warning; the prices ain't what they used to be."
      }, {
        priceModifier: 2,
        wealth: 20,
        priceTalk: "Things might be a wee bit more expensive than you're used to, but that's the cost of doing business at the moment."
      }, {
        priceModifier: -2,
        wealth: 80,
        priceTalk: 'These are priced to move, so I can make some space and get some new stock in.'
      }, {
        priceModifier: -2,
        wealth: 50,
        priceTalk: 'Priced to move!'
      }, {
        priceModifier: -2,
        wealth: 20,
        priceTalk: 'Priced to sell, so I can afford some new stock!'
      }, {
        priceModifier: -4,
        wealth: 80,
        priceTalk: "Everything must go! I'm getting in entirely new, custom stock in a couple day's time, and need the space clear."
      }, {
        priceModifier: -4,
        wealth: 50,
        priceTalk: "I've got a massive sale going on at the moment!"
      }, {
        priceModifier: -4,
        wealth: 20,
        priceTalk: `Everything must go- can't afford to keep ${alchemist.name} open much longer, so I'm getting rid of the final stock.`
      }]
    },
    name: {
      noun: ['Potion', 'Liquid', 'Fumes', 'Bottle', 'Vial', 'Firewater', 'Mortar and Pestle', 'Lab', 'Laboratory', 'Chemist', 'Alchemist', 'Brewer', 'Lotion', 'Wishes'],
      adjective: ['Bubbling', 'Spicy', 'Soggy', 'Fizzy', 'Liquid', 'Fluorescent', 'Clear', 'Alcoholic', 'Abyssal', 'Angelic', 'Elven', 'Measured', 'Marked', 'Glass', 'Glass', 'Copper', 'Corked', 'Burning', 'Red', 'Blue', 'Green', 'Gold', 'Yellow', 'Vile', 'Genuine', 'Original'],
      rider: ['Chemist', 'Alchemist', 'Potion Shop', 'Potionery', 'Ointmentary', 'Juice Bar', 'Lab', 'Laboratory', 'Secret Lair']
    },
    ingredients: ['bloodgrass', 'chromus slime', 'ephedra', 'emetic wax', 'fennel silk', 'gengko bush', 'hyacinth nectar', 'lavender sprigs', 'mandrake root', 'wild sageroot', 'arctic creeper', 'amanita cap', 'basilisk breath', 'cactus juice', 'drakus flower', 'harrada leaf', 'quicksilver lichen', 'radiant synthseed', 'spineflower berries', 'wyrmtongue petals', 'arrow root', 'blue toadshade', 'cosmos glond', "Devil's bloodleaf", "fiend's ivy", 'hydrathistle', 'ironwood heart', 'luminous cap dust', 'mortflesh powder', 'nightshade berries', 'primordial balm', 'rock vine', 'scilia beans', 'silver hibiscus', 'tail leaf', 'verdant nettle', 'voidroot', 'wispstalks', 'wrackwort bulbs']
  };

  function alchemistModifiers(alchemist) {
    alchemist.roll.activity += getSizeModifierForActivity(alchemist.roll.size);

    switch (alchemist.material.noun) {
      case 'hewn rock':
        alchemist.roll.cleanliness -= 4;
        alchemist.roll.wealth -= 2;
        break;

      case 'chiseled stone':
        alchemist.roll.cleanliness += 2;
        alchemist.roll.wealth += 4;
        break;

      case 'marble':
        alchemist.roll.cleanliness += 5;
        alchemist.roll.wealth += 6;
        break;
    }

    if (alchemist.roll.cleanliness > 80) {
      alchemist.roll.expertise += 10;
      alchemist.roll.activity += 6;
    } else if (alchemist.roll.cleanliness > 70) {
      alchemist.roll.expertise += 7;
      alchemist.roll.activity += 4;
    } else if (alchemist.roll.cleanliness > 60) {
      alchemist.roll.expertise += 3;
      alchemist.roll.activity += 3;
    } else if (alchemist.roll.cleanliness > 50) {
      alchemist.roll.expertise += 1;
    } else if (alchemist.roll.cleanliness > 40) {
      alchemist.roll.expertise -= 1;
    } else if (alchemist.roll.cleanliness > 30) {
      alchemist.roll.expertise -= 3;
      alchemist.roll.activity -= 2;
    } else if (alchemist.roll.cleanliness > 20) {
      alchemist.roll.expertise -= 5;
      alchemist.roll.activity -= 6;
    } else if (alchemist.roll.cleanliness <= 20) {
      alchemist.roll.expertise -= 7;
      alchemist.roll.activity -= 10;
    }

    if (alchemist.roll.wealth > 95) {
      alchemist.priceModifier += 4;
      alchemist.roll.size += 3;
      alchemist.roll.cleanliness += 15;
      alchemist.roll.reputation += 10;
    } else if (alchemist.roll.wealth > 80) {
      alchemist.priceModifier += 3;
      alchemist.roll.cleanliness += 10;
      alchemist.roll.reputation += 7;
    } else if (alchemist.roll.wealth > 70) {
      alchemist.priceModifier += 2;
      alchemist.roll.cleanliness += 6;
      alchemist.roll.reputation += 4;
    } else if (alchemist.roll.wealth > 60) {
      alchemist.priceModifier += 1;
      alchemist.roll.activity += 5;
      alchemist.roll.cleanliness += 4;
    } else if (alchemist.roll.wealth > 50) {
      alchemist.roll.activity += 5;
      alchemist.roll.reputation -= 5;
      alchemist.roll.cleanliness += 2;
    } else if (alchemist.roll.wealth > 30) {
      alchemist.priceModifier -= 1;
      alchemist.roll.reputation -= 7;
      alchemist.roll.cleanliness -= 15;
    } else if (alchemist.roll.wealth <= 30) {
      alchemist.priceModifier -= 2;
      alchemist.roll.reputation -= 10;
      alchemist.roll.cleanliness -= 25;
    }

    if (alchemist.roll.activity > 80) {
      alchemist.activity = 'extremely busy';
      alchemist.roll.reputation += 5;
      alchemist.roll.cleanliness -= 5;
    } else if (alchemist.roll.activity > 70) {
      alchemist.activity = 'very busy';
      alchemist.roll.reputation += 3;
      alchemist.roll.cleanliness -= 3;
    } else if (alchemist.roll.activity > 60) {
      alchemist.activity = 'rather busy';
      alchemist.roll.reputation += 2;
      alchemist.roll.cleanliness -= 2;
    } else if (alchemist.roll.activity > 50) {
      alchemist.activity = 'reasonably busy';
      alchemist.roll.reputation += 1;
      alchemist.roll.cleanliness -= 1;
    } else if (alchemist.roll.activity > 40) {
      alchemist.activity = 'not terribly busy';
      alchemist.roll.reputation -= 1;
      alchemist.roll.cleanliness += 1;
    } else if (alchemist.roll.activity > 30) {
      alchemist.activity = 'not busy';
      alchemist.roll.reputation -= 2;
      alchemist.roll.cleanliness += 2;
    } else if (alchemist.roll.activity > 20) {
      alchemist.activity = 'rather quiet';
      alchemist.roll.reputation -= 3;
      alchemist.roll.cleanliness += 3;
    } else if (alchemist.roll.activity <= 20) {
      alchemist.activity = 'very quiet';
      alchemist.roll.reputation -= 5;
      alchemist.roll.cleanliness += 5;
    }
  }

  function getSizeModifierForActivity(sizeRoll) {
    if (sizeRoll > 80) return -4;
    if (sizeRoll > 70) return -3;
    if (sizeRoll > 60) return -1;
    if (sizeRoll > 30) return +1;
    if (sizeRoll > 20) return +1;
    return +3;
  }

  function toUpperFirst(input) {
    return input.charAt(0).toUpperCase() + input.substr(1).toLowerCase();
  }
  function toTitleCase(input) {
    let str = input.replace(/([^\W_]+[^\s-]*) */g, txt => {
      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();
    }); // Certain minor words should be left lowercase unless
    // they are the first or last words in the string

    for (const lower of LOWER_CASE_WORDS) {
      str = str.replace(new RegExp(`\\s${lower}\\s`, 'g'), txt => txt.toLowerCase());
    } // Certain words such as initialisms or acronyms should be left uppercase


    for (const upper of UPPER_CASE_WORDS) {
      str = str.replace(new RegExp(`\\b${upper}\\b`, 'g'), upper.toUpperCase());
    }

    return str;
  }
  const LOWER_CASE_WORDS = ['A', 'An', 'The', 'And', 'But', 'Or', 'For', 'Nor', 'As', 'At', 'By', 'For', 'From', 'In', 'Into', 'Near', 'Of', 'On', 'Onto', 'To', 'With'];
  const UPPER_CASE_WORDS = ['Id', 'Tv', 'NPC', 'NPCs'];

  function createAlchemistName(chemistFirstName) {
    const {
      name
    } = alchemistData;
    return toTitleCase(random([`The ${random(name.adjective)} ${random(name.noun)}`, `${chemistFirstName} and ${random(name.adjective)}`, `The ${random(name.noun)} and ${random(name.adjective)}`, `The ${random(name.adjective)} ${random(name.rider)}`, `${random(name.adjective)} ${random(name.noun)}`, `The ${random(name.adjective)} Alchemist`]));
  }

  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  let randomFloatFn = (...args) => {
    throw new Error('Function has not been set!');
  };

  function setRandomFloat(fn) {
    randomFloatFn = fn;
  }
  function randomFloat(min, max) {
    if (typeof max === 'undefined') {
      return randomFloatFn(min);
    }

    return randomFloatFn(min, max);
  }

  // operations, by chapel; for sugarcube 2.x
  /**
   * Range of fairmath.
   */

  const fmRange = [0, 100];
  /**
    I couldn't decide on which syntax mode was best, especially for dice.
    So I wound up including a bunch of options, and they all work essentially the same way.
    Though the dice 'parser' [e.g. dice('string')] syntax and the shortcuts [e.g. x.fm(), x.d()]
    perform slightly worse / are slightly slower than the other potential syntax modes.
    Supported syntax:
      1. the dice roller: (all the following work and are all equivalent to '3d6+10')
        a. dice(3, 6) + 10
        b. dice('3d6 + 10')
        c. dice('3d6+10')
        d. dice('3d6') + 10
        e. !!! dice('3d6' + 10) -- Will roll 3 610-sided dice; the parser can't accept mixed arguments
      2. the fairmath system (based on the ChoiceScript stats system)
        a. fm(50, 40)      [=70]
      3. Notes.
        a. be careful! rolling dice with floating point numbers or negatives will cause errors
        b. likewise, fairmath will spit out errors if it's given bizarre numbers

    Options:
      fmRange   : move the minimum and maximum range for the fairmath system, if you need to
            note that the results are constrained by this range, but can never actually hit it
            that is, [0, 100] will limit the actual numbers to 1-99,
            [10, 45] would limit the results to 11-44, etc.
  */

  /* DICE */

  const diceHelpers = {
    processDice: (a, b) => {
      // find the number of dice and the type of die
      let roll = [];
      let result = 0;

      if (typeof a === 'string') {
        roll = a.split('d');
      } else if (typeof a === 'number' && b) {
        roll = [a, b];
      } else if (Array.isArray(a) && a.length >= 2) {
        a.length = 2;
        roll = a;
      } else {
        throw new TypeError('diceHelpers.processDice(): could not process arguments...');
      }
      /*
        we're going to roll each die. we could generate a number
        between the max and min possible simply enough,
        but real dice have weights -- rolling 3d6 is far more likely to result
        in 10 or 11 than in 3 or 18, and pure randomization will not emulate this
      */


      for (let i = 0; i < roll[0]; i++) {
        const die = Math.floor(randomFloat(1) * roll[1]) + 1;
        result += die;
      } // this preliminary result ignores modifiers; it only rolls the dice


      return result;
    },
    processString: string => {
      // remove all whitespace and trim
      const trimmed = string.trim().replace(/\s/g, ''); // check for and return the parts of the roll (2 chunks: '1d6' and '+6')

      const parsed = trimmed.match(/(\d*d\d*)(.*)/);

      if (parsed) {
        const [, roll, modifier] = parsed;
        return [roll, Number(modifier)]; // send the data off as an array
      }

      throw new Error('Invalid parsed result.');
    },
    roll: (a, b) => {
      if (typeof a === 'string') {
        const result = diceHelpers.processString(a);
        /*
          The expression below rolls the dice and adds the modifier,
          which must be additive (i.e. +5 or -5, but never *5).
        */

        return diceHelpers.processDice(result[0]) + result[1];
      } // just run it, it'll toss out its own errors


      return diceHelpers.processDice(a, b);
    }
  };
  function dice(a, b) {
    return diceHelpers.roll(a, b);
  }
  /* FAIRMATH */
  // fairmath method; fairmath(base, value)

  function fm(base, val) {
    // errors
    const [rangeStart, rangeEnd] = fmRange;

    if (val == null || typeof val !== 'number' || val > 100 || val < -100) {
      throw new TypeError('fairmath given incorrect argument or an argument that is out of the valid 0-100 range.');
    }

    if (base < rangeStart || base > rangeEnd) {
      console.warn('Clamping a roll of ', base);
      base = clamp$1(Math.trunc(base), rangeStart, rangeEnd);
    } // a 0 increase or decrease; just trunc and clamp


    if (val === 0) {
      return clamp$1(Math.trunc(base), rangeStart, rangeEnd);
    } // number is negative, representing a decrease


    if (val < 0) {
      // make positive for the math below
      val = val * -1;
      return clamp$1(Math.trunc(base - (base - rangeStart) * (val / rangeEnd)), rangeStart, rangeEnd);
    } // number is positive, representing an increase


    if (val > 0) {
      return clamp$1(Math.trunc(base + (rangeEnd - base) * (val / rangeEnd)), rangeStart, rangeEnd);
    } // something inexplicable happened


    throw new Error('fairmath encountered an unspecified error.');
  }
  /**
   * Returns a number whose value is limited to the given range.
   *
   * Example: limit the output of this computation to between 0 and 255
   * (x * 255).clamp(0, 255)
   *
   * @param min The lower boundary of the output range
   * @param max The upper boundary of the output range
   * @returns A number in the range [min, max]
   */

  function clamp$1(value, min, max) {
    return Math.min(Math.max(value, min), max);
  }

  const raceTraits = {
    'dragonborn': {
      muscleMass: 11,
      bmiModifier: 650,
      ageTraits: {
        'ageDescriptors': [[100, 'ancient'], [90, 'incredibly elderly'], [80, 'vulnerably elderly'], [75, 'withered'], [70, 'elderly'], [65, 'weathered'], [60, 'aged'], [55, 'old'], [50, 'middle aged'], [45, 'middle aged'], [40, 'early middle aged'], [37, 'adult'], [35, 'mid thirties'], [32, 'earlyish thirties'], [30, 'prime adult aged'], [26, 'young adult'], [24, 'youthful adult'], [22, 'relatively young'], [20, 'surprisingly young'], [19, 'nineteen year old'], [18, 'barely adult aged'], [17, 'late teenager'], [16, 'teenager'], [15, 'young teenager'], [14, 'adolescent'], [12, 'prepubescent'], [10, 'child'], [8, 'young child'], [6, 'toddler'], [0, 'newborn']],
        'elderly': {
          baseAge: 50,
          ageModifier: () => dice(3, 10)
        },
        'settled adult': {
          baseAge: 20,
          ageModifier: () => dice(3, 10)
        },
        'young adult': {
          baseAge: 13,
          ageModifier: () => dice(2, 4)
        },
        'child': {
          baseAge: 4,
          ageModifier: () => dice(3, 4)
        }
      },
      genderTraits: {
        entity: {},
        nonbinary: {},
        woman: {
          firstName: ['Akra', 'Aasathra', 'Antrara', 'Arava', 'Biri', 'Blendaeth', 'Burana', 'Chassath', 'Daar', 'Dentratha', 'Doudra', 'Driindar', 'Eggren', 'Farideh', 'Findex', 'Furrele', 'Gesrethe', 'Gilkass', 'Harann', 'Havilar', 'Hethress', 'Hillanot', 'Jaxi', 'Jezean', 'Jheri', 'Kadana', 'Kava', 'Koflnn', 'Megren', 'Mijira', 'Mishann', 'Nala', 'Nuthra', 'Perra', 'Pogranix', 'Pyxrin', 'Quespa', 'Raiann', 'Rezena', 'Ruloth', 'Saphara', 'Savaran', 'Sora', 'Surina', 'Synthrin', 'Tatyan', 'Thava', 'Uadflt', 'Vezera', 'Zykrofl'],
          beardProbability: 0,
          baseHeight: 60,
          baseWeight: 130,
          heightModifier: () => dice(2, 8),
          weightModifier: () => dice(2, 6)
        },
        man: {
          firstName: ['Adrex', 'Arjhan', 'Azzakh', 'Balasar', 'Baradad', 'Bharash', 'Bidreked', 'Dadalan', 'Dazzazn', 'Direcris', 'Donaar', 'Fax', 'Gargax', 'Ghesh', 'Gorbundus', 'Greethen', 'Heskan', 'Hirrathak', 'Illdrex', 'Kaladan', 'Kerkad', 'Kiirith', 'Kriv', 'Maagog', 'Medrash', 'Mehen', 'Mozikth', 'Mreksh', 'Mugrunden', 'Nadarr', 'Nithther', 'Norkruuth', 'Nykkan', 'Pandjed', 'Patrin', 'Pijjink', 'Quarethon', 'Rathkran', 'Rhogar', 'Rivaan', 'Sethrekar', 'Shamash', 'Shedinn', 'Srorthen', 'Tarhun', 'Torinn', 'Trynnicus', 'Valorean', 'Vrondiss', 'Zedaar'],
          beardProbability: 10,
          baseHeight: 62,
          baseWeight: 160,
          heightModifier: () => dice(2, 8),
          weightModifier: () => dice(2, 6)
        }
      },
      lastName: ['Akambheryliiax', 'Argenthrixus', 'Baharoosh', 'Beryntolthropal', 'Bhenkumbyrznaax', 'Caavylteradyn', 'Chumbyxirinnish', 'Clethtinthiallor', 'Daardendrian', 'Delmirev', 'Dhyrktelonis', 'Ebynichtomonis', 'Esstyrlynn', 'Fharngnarthnost', 'Ghaallixirn', 'Grrrmmballhyst', 'Gygazzylyshrift', 'Hashphronyxadyn', 'Hshhsstoroth', 'lmbixtellrhyst', 'Jerynomonis', 'Jharthraxyn', 'Kerrhylon', 'Kimbatuul', 'Lhamboldennish', 'Linxakasendalor', 'Mohradyllion', 'Mystan', 'Nemmonis', 'Norixius', 'Ophinshtalajiir', 'Orexijandilin', 'Pfaphnyrennish', 'Phrahdrandon', 'Pyraxtallinost', 'Qyxpahrgh', 'Raghthroknaar', 'Shestendeliath', 'Skaarzborroosh', 'Sumnarghthrysh', 'Tiammanthyilish', 'Turnuroth', 'Umbyrphrael', 'Vangdondalor', 'Verthisathurgiesh', 'Wiwyrholdalphiax', 'Wystongjiir', 'Xephyrbahnor', 'Yarjerit', 'Zzzxaaxthroth'],
      eyes: ['yellow', 'amber', 'yellow', 'amber', 'brown', 'hazel', 'green', 'blue', 'gray', 'aqua', 'red', 'purple', 'aqua', 'red', 'purple', 'gold', 'gold'],
      raceWords: {
        raceName: 'dragonborn',
        racePlural: 'drakes',
        raceSingular: 'dragonborn',
        raceAdjective: 'draconian',
        raceLanguage: 'Draconic'
      },
      knownLanguages: ['Common', 'Draconic'],
      beard: ['scraggly beard', 'long, flowing beard', 'five o clock shadow', 'neckbeard', 'well-groomed moustache', 'goatee', 'well-loved beard, with ornamental beads woven into it', 'smattering of hairs on his face', 'bit of peach fuzz on his chin', 'long, luxurious beard', 'long, well-kempt beard', 'rather wild, unkempt beard', 'dreadful beard'],
      abilities: {
        'Draconic Ancestry': "You have draconic ancestry. Choose one type of dragon from the Draconic Ancestry table. Your breath weapon and damage resistance are determined by the dragon type, as shown in the table. (Player's Handbook p. 34)",
        'Breath Weapon': "You can use your action to exhale destructive energy. Your draconic ancestry determines the size, shape, and damage type of the exhalation.,,When you use your breath weapon, each creature in the area of the exhalation must make a saving throw, the type of which is determined by your draconic ancestry. The DC for this saving throw equals 8 + your Constitution modifier + your proficiency bonus. A creature takes 2d6 damage on a failed save, and half as much damage on a successful one. The damage increases to 3d6 at 6th level, 4d6 at 11th level, and 5d6 at 16th level.,,After you use your breath weapon, you can't use it again until you complete a short or long rest.",
        'Damage Resistance': 'You have resistance to the damage type associated with your draconic ancestry.'
      }
    },
    'dwarf': {
      muscleMass: 11,
      bmiModifier: 500,
      ageTraits: {
        'ageDescriptors': [[400, 'ancient'], [300, 'ancient'], [250, 'incredibly elderly'], [200, 'vulnerably elderly'], [190, 'withered'], [180, 'elderly'], [170, 'weathered'], [160, 'aged'], [150, 'old'], [140, 'middle aged'], [80, 'middle aged'], [50, 'early middle aged'], [40, 'adult'], [35, 'mid thirties'], [32, 'earlyish thirties'], [30, 'prime adult aged'], [26, 'young adult'], [24, 'youthful adult'], [22, 'relatively young'], [20, 'surprisingly young'], [19, 'nineteen year old'], [18, 'barely adult aged'], [17, 'late teenager'], [16, 'teenager'], [15, 'young teenager'], [14, 'adolescent'], [12, 'prepubescent'], [10, 'child'], [8, 'young child'], [6, 'toddler'], [0, 'newborn']],
        'elderly': {
          baseAge: 197,
          ageModifier: () => dice(3, 50)
        },
        'settled adult': {
          baseAge: 50,
          ageModifier: () => dice(3, 50)
        },
        'young adult': {
          baseAge: 15,
          ageModifier: () => dice(4, 8)
        },
        'child': {
          baseAge: 4,
          ageModifier: () => dice(3, 6)
        }
      },
      genderTraits: {
        woman: {
          firstName: ['Anbera', 'Artin', 'Audhild', 'Balifra', 'Barbena', 'Bardryn', 'Bolhild', 'Dagnal', 'Dafifi', 'Delre', 'Diesa', 'Hdeth', 'Eridred', 'Falkrann', 'Fallthra', 'Finelien', 'Gillydd', 'Gunnloa', 'Gurdis', 'Helgret', 'Helja', 'Hihna', 'Illde', 'Jarana', 'Kathra', 'Kilia', 'Kristryd', 'Liftrasa', 'Marastyr', 'Mardred', 'Morana', 'Nalaed', 'Nora', 'Nurkara', 'Orifi', 'Ovina', 'Riswynn', 'Sannl', 'Therlin', 'Thodris', 'Torbera', 'Tordrid', 'Torgga', 'Urshar', 'Valida', 'Vistra', 'Vonana', 'Werydd', 'Whurdred', 'Yurgunn'],
          beardProbability: 20,
          baseHeight: 43,
          baseWeight: 120,
          heightModifier: () => dice(2, 4),
          weightModifier: () => dice(2, 6)
        },
        man: {
          firstName: ['Adrik', 'Alberich', 'Baern', 'Barendd', 'Beloril', 'Brottor', 'Dain', 'Dalgal', 'Darrak', 'Delg', 'Duergath', 'Dworic', 'Eberk', 'Einkil', 'Elaim', 'Erias', 'Fallond', 'Fargrim', 'Gardain', 'Garur', 'Gimgen', 'Gimurt', 'Harbek', 'Kildrak', 'Kilvar', 'Morgran', 'Morkral', 'Nalral', 'Nordak', 'Nuraval', 'Oloric', 'Olunt', 'Orsik', 'Oskar', 'Rangfim', 'Reirak', 'Rurik', 'Taklinn', 'Thoradin', 'Thorin', 'Thradal', 'Tordek', 'Traubon', 'Travok', 'Ulfgar', 'Urain', 'Veit', 'Vonbin', 'Vondal', 'Whurbin'],
          beardProbability: 96,
          baseHeight: 45,
          baseWeight: 150,
          heightModifier: () => dice(2, 4),
          weightModifier: () => dice(2, 6)
        },
        entity: {},
        nonbinary: {
          firstName: ['Adzin', 'Dorn', 'Dorft']
        }
      },
      lastName: ['Aranore', 'Balderk', 'Battlehammer', 'Bigtoe', 'Bloodkith', 'Bofdarm', 'Brawnanvil', 'Brazzik', 'Broodfist', 'Burrowfound', 'Caebrek', 'Daerdahk', 'Dankil', 'Daraln', 'Deepdelver', 'Durthane', 'Eversharp', 'FaHack', 'Fire-forge', 'Foamtankard', 'Frostbeard', 'Glanhig', 'Goblinbane', 'Goldfinder', 'Gorunn', 'Graybeard', 'Hammerstone', 'Helcral', 'Holderhek', 'Ironfist', 'Loderr', 'Lutgehr', 'Morigak', 'Orcfoe', 'Rakankrak', 'RubyEye', 'Rumnaheim', 'Silveraxe', 'Silverstone', 'Steelfist', 'Stoutale', 'Strakeln', 'Strongheart', 'Thrahak', 'Torevir', 'Torunn', 'Trollbleeder', 'Trueanvil', 'Trueblood', 'Ungart'],
      eyes: ['yellow', 'amber', 'brown', 'dark brown', 'hazel', 'green', 'blue', 'gray', 'brown', 'dark brown', 'hazel', 'green', 'blue', 'gray', 'aqua'],
      raceWords: {
        raceName: 'dwarf',
        racePlural: 'dwarves',
        raceSingular: 'dwarf',
        raceAdjective: 'dwarven',
        raceLanguage: 'Dwarven'
      },
      knownLanguages: ['Common', 'Dwarvish'],
      beard: ['scraggly beard', 'long, flowing beard', 'well-groomed beard going down to his chest', 'goatee', 'goatee that seems to be trying to level up into a beard', 'well-loved beard, with ornamental beads woven into it', 'long, luxurious beard', 'long, well-kempt beard', 'rather wild, unkempt beard', 'dreadful beard'],
      abilities: {
        'Darkvision': "Accustomed to life underground, you have superior vision in dark and dim conditions. You can see in dim light within 60 feet of you as if it were bright light, and in darkness as if it were dim light. You can't discern color in darkness, only shades of gray.",
        'Dwarven Resilience': 'You have advantage on saving throws against poison, and you have resistance against poison damage.',
        'Dwarven Combat Training': 'You have proficiency with the battleaxe, handaxe, light hammer, and warhammer.',
        'Tool Proficiency': "You gain proficiency with the artisan's tools of your choice: smith's tools, brewer's supplies, or mason's tools.",
        'Stonecunning': 'Whenever you make an Intelligence (History) check related to the origin of stonework, you are considered proficient in the History skill and add double your proficiency bonus to the check, instead of your normal proficiency bonus.',
        'Dwarven Toughness': 'Your hit point maximum increases by 1, and it increases by 1 every time you gain a level.'
      }
    },
    'elf': {
      muscleMass: 9,
      bmiModifier: 703,
      ageTraits: {
        'ageDescriptors': [[1000, 'ancient'], [900, 'incredibly elderly'], [800, 'vulnerably elderly'], [750, 'withered'], [700, 'elderly'], [650, 'weathered'], [600, 'aged'], [550, 'old'], [500, 'middle aged'], [450, 'middle aged'], [400, 'early middle aged'], [370, 'adult'], [350, 'mid thirties'], [320, 'earlyish three hundreds'], [300, 'prime adult aged'], [250, 'young adult'], [200, 'youthful adult'], [180, 'relatively young'], [150, 'surprisingly young'], [120, 'barely ten dozen years old'], [100, 'barely adult aged'], [80, 'young'], [60, 'youngster'], [40, 'adolescent'], [30, 'prepubescent'], [20, 'child'], [15, 'young child'], [10, 'toddler'], [0, 'newborn']],
        'elderly': {
          baseAge: 650,
          ageModifier: () => dice(3, 50)
        },
        'settled adult': {
          baseAge: 450,
          ageModifier: () => dice(3, 75)
        },
        'young adult': {
          baseAge: 100,
          ageModifier: () => dice(4, 75)
        },
        'child': {
          baseAge: 10,
          ageModifier: () => dice(4, 20)
        }
      },
      genderTraits: {
        entity: {},
        nonbinary: {},
        woman: {
          firstName: ['Adria', 'Ahinar', 'Althaea', 'Anastrianna', 'Andraste', 'Antinua', 'Arara', 'Baelitae', 'Bethrynna', 'Birel', 'Caelynn', 'Chaedi', 'Claira', 'Dara', 'Drusilia', 'Elama', 'Enna', 'Faral', 'Felosial', 'Hatae', 'Ielenia', 'Ilanis', 'Irann', 'Jarsali', 'Jelenneth', 'Keyleth', 'Leshanna', 'Lia', 'Maiathah', 'Malquis', 'Meriele', 'Mialee', 'Myathethil', 'Naivara', 'Quelenna', 'Quillathe', 'Ridaro', 'Sariel', 'Shanairla', 'Shava', 'Silaqui', 'Sumnes', 'Theirastra', 'Thiala', 'Tiaathque', 'Traulam', 'Vadania', 'Valanthe', 'Valna', 'Xanaphia'],
          beardProbability: 0,
          baseHeight: 61,
          baseWeight: 90,
          heightModifier: () => dice(2, 10),
          weightModifier: () => dice(1, 4)
        },
        man: {
          firstName: ['Adran', 'Aelar', 'Aerdeth', 'Ahvain', 'Aramil', 'Arannis', 'Aust', 'Azaki', 'Beiro', 'Berrian', 'Caeldrim', 'Carric', 'Dayereth', 'Dreali', 'Efieril', 'Eiravel', 'Enialis', 'Erdan', 'Erevan', 'Fivin', 'Galinndan', 'Gennal', 'Hadarai', 'Halimath', 'Heian', 'Himo', 'Immeral', 'Ivellios', 'Korfel', 'Lamlis', 'Laucian', 'Lucan', 'Mindartis', 'Naal', 'Nutae', 'Paelias', 'Peren', 'Quarion', 'Riardon', 'Rolen', 'Soveliss', 'Suhnae', 'Thamior', 'Tharivol', 'Theren', 'Theriatis', 'Thervan', 'Uthemar', 'Vanuath', 'Varis'],
          beardProbability: 25,
          baseHeight: 62,
          baseWeight: 100,
          heightModifier: () => dice(2, 10),
          weightModifier: () => dice(1, 4)
        }
      },
      lastName: ['Aloro', 'Amakiir', 'Amastacia', 'Ariessus', 'Arnuanna', 'Berevan', 'Caerdonel', 'Caphaxath', 'Casilltenirra', 'Cithreth', 'Dalanthan', 'Eathalena', 'Erenaeth', 'Ethanasath', 'Fasharash', 'Firahel', 'Floshern', 'Galanodel', 'Goltorah', 'Hanali', 'Holimion', 'Horineth', 'Iathrana', 'temnr', 'lranapha', 'Koehlanna', 'Lathalas', 'Liadon', 'Meliamne', 'Mellerelel', 'Mystralath', 'Nalio', 'Netyoive', 'Ofandrus', 'Ostoroth', 'Othronus', 'Qualanthri', 'Raethran', 'Rothenel', 'Selevarun', 'Siannodel', 'Suithrasas', 'Sylvaranth', 'Teinithra', 'Tiltathana', 'Wasanthi', 'Withrethin', 'Xiloscient', 'Xistsrith', 'Yaeldrin'],
      eyes: ['yellow', 'amber', 'brown', 'hazel', 'green', 'blue', 'gray', 'aqua', 'purple', 'pale brown', 'pale blue', 'pale green', 'ash gray'],
      raceWords: {
        raceName: 'elf',
        racePlural: 'elves',
        raceSingular: 'elf',
        raceAdjective: 'elfish',
        raceLanguage: 'Elvish'
      },
      knownLanguages: ['Common', 'Elvish'],
      beard: ['scraggly beard', 'long, flowing beard', 'five o clock shadow', 'neckbeard', 'well-groomed moustache', 'goatee', 'well-loved beard, with ornamental beads woven into it', 'smattering of hairs on his face', 'bit of peach fuzz on his chin', 'long, luxurious beard', 'long, well-kempt beard', 'rather wild, unkempt beard', 'dreadful beard'],
      abilities: {
        'Darkvision': "Accustomed to twilit forests and the night sky, you have superior vision in dark and dim conditions. You can see in dim light within 60 feet of you as if it were bright light, and in darkness as if it were dim light. You can't discern color in darkness, only shades of gray.",
        'Keen Senses': 'You have proficiency in the Perception skill.',
        'Fey Ancestry': "You have advantage on saving throws against being charmed, and magic can't put you to sleep.",
        'Trance': "Elves don't need to sleep. Instead, they meditate deeply, remaining semiconscious, for 4 hours a day. (The Common word for such meditation is 'trance') While meditating, you can dream after a fashion; such dreams are actually mental exercises that have become reflexive through years of practice. After resting in this way, you gain the same benefit that a human does from 8 hours of sleep.",
        'Elf Weapon Training': 'You have proficiency with the longsword, shortsword, shortbow, and longbow.',
        'Cantrip': 'You know one cantrip of your choice from the wizard spell list. Intelligence is your spellcasting ability for it.'
      }
    },
    'gnome': {
      muscleMass: 10,
      bmiModifier: 703,
      ageTraits: {
        'ageDescriptors': [[500, 'ancient'], [440, 'incredibly elderly'], [400, 'vulnerably elderly'], [360, 'withered'], [320, 'elderly'], [280, 'weathered'], [230, 'aged'], [180, 'old'], [130, 'middle aged'], [80, 'middle aged'], [50, 'early middle aged'], [40, 'adult'], [35, 'mid thirties'], [32, 'earlyish thirties'], [30, 'prime adult aged'], [26, 'young adult'], [24, 'youthful adult'], [22, 'relatively young'], [20, 'surprisingly young'], [19, 'nineteen year old'], [18, 'barely adult aged'], [17, 'late teenager'], [16, 'teenager'], [15, 'young teenager'], [14, 'adolescent'], [12, 'prepubescent'], [10, 'child'], [8, 'young child'], [6, 'toddler'], [0, 'newborn']],
        'elderly': {
          baseAge: 200,
          ageModifier: () => dice(3, 100)
        },
        'settled adult': {
          baseAge: 40,
          ageModifier: () => dice(3, 75)
        },
        'young adult': {
          baseAge: 18,
          ageModifier: () => dice(2, 10)
        },
        'child': {
          baseAge: 6,
          ageModifier: () => dice(2, 6)
        }
      },
      genderTraits: {
        entity: {},
        nonbinary: {},
        woman: {
          firstName: ['Abalaba', 'Bimpnottin', 'Breena', 'Buvvie', 'Callybon', 'Caramip', 'Carlin', 'Cumpen', 'Dalaba', 'Donella', 'Duvamil', 'Ella', 'Ellyjoybell', 'Ellywick', 'Enidda', 'Lilli', 'Loopmottin', 'Lorilla', 'Luthra', 'Mardnab', 'Meena', 'Menny', 'Mumpena', 'Nissa', 'Numba', 'Nyx', 'Oda', 'Oppah', 'Orla', 'Panana', 'Pynfle', 'Quilla', 'Ranala', 'Reddlepop', 'Roywyn', 'Salanop', 'Shamil', 'Sifiress', 'Symma', 'Tana', 'Tenena', 'Tervaround', 'Tippletoe', 'Ulia', 'Unvera', 'Veloptima', 'Virra', 'Waywocket', 'Yebe', 'Zanna'],
          beardProbability: 1,
          baseHeight: 35,
          baseWeight: 30,
          heightModifier: () => dice(2, 4),
          weightModifier: () => dice(1, 1)
        },
        man: {
          firstName: ['Alston', 'Alvyn', 'Anverth', 'Arumawann', 'Bilbron', 'Boddynock', 'Brocc', 'Burgell', 'Cockaby', 'Crampernap', 'Dabbledob', 'Delebean', 'Dimble', 'Eberdeb', 'Eldon', 'Erky', 'Fablen', 'Fibblestib', 'Fonkin', 'Frouse', 'Frug', 'Gerbo', 'Gimble', 'Glim', 'lgden', 'Jabble', 'Jebeddo', 'Kellen', 'Kipper', 'Namfoodle', 'Oppleby', 'Orryn', 'Paggen', 'PaHabar', 'Pog', 'Qualen', 'Ribbles', 'Rimple', 'Roondar', 'Sappw', 'Seebo', 'Senteq', 'Sindri', 'Umpen', 'Warryn', 'Wiggens', 'Wobbles', 'Wrenn', 'Zaffrab', 'Zook'],
          beardProbability: 63,
          baseHeight: 36,
          baseWeight: 35,
          heightModifier: () => dice(2, 10),
          weightModifier: () => dice(1, 1)
        }
      },
      lastName: ['Albaratie', 'Bafflestone', 'Beren', 'Boondiggles', 'Cobblelob', 'Daergel', 'Dunben', 'Fabblestabble', 'Fapplestamp', 'Fiddlefen', 'Folkor', 'Garrick', 'Gimlen', 'Glittergern', 'Gobblefirn', 'Gummen', 'Horcusporcus', 'Humplebumple', 'Ironhide', 'Leffery', 'Lingenhall', 'Loofollue', 'Maekkelferce', 'Miggledy', 'Munggen', 'Murnig', 'Musgraben', 'Nackle', 'Ningel', 'Nopenstallen', 'Nucklestamp', 'Offund', 'Oomtrowl', 'Pilwicken', 'Pingun', 'Quillsharpener', 'Raulnor', 'Reese', 'Rofierton', 'Scheppen', 'Shadowcloak', 'Silverthread', 'Sympony', 'Tarkelby', 'Timbers', 'Turen', 'Umbodoben', 'Waggletop', 'Welber', 'Wildwander'],
      eyes: ['yellow', 'amber', 'brown', 'hazel', 'green', 'blue', 'gray', 'aqua', 'red', 'purple', 'pale brown', 'pale blue', 'pale green', 'ash gray'],
      raceWords: {
        raceName: 'gnome',
        racePlural: 'gnomes',
        raceSingular: 'gnome',
        raceAdjective: 'gnomish',
        raceLanguage: 'Gnomish'
      },
      knownLanguages: ['Common', 'Gnomish'],
      beard: ['scraggly beard', 'long, flowing beard', 'five o clock shadow', 'neckbeard', 'well-groomed moustache', 'goatee', 'well-loved beard, with ornamental beads woven into it', 'smattering of hairs on his face', 'bit of peach fuzz on his chin', 'long, luxurious beard', 'long, well-kempt beard', 'rather wild, unkempt beard', 'dreadful beard'],
      abilities: {
        'Darkvision': "Accustomed to life underground, you have superior vision in dark and dim conditions. You can see in dim light within 60 feet of you as if it were bright light, and in darkness as if it were dim light. You can't discern color in darkness, only shades of gray.",
        'Gnome Cunning': 'You have advantage on all Intelligence, Wisdom, and Charisma saving throws against magic.',
        "Artificer's Lore": 'Whenever you make an Intelligence (History) check related to magic items, alchemical objects, or technological devices, you can add twice your proficiency bonus, instead of any proficiency bonus you normally apply.',
        'Tinker': "You have proficiency with artisan's tools (tinker's tools). Using those tools, you can spend 1 hour and 10 gp worth of materials to construct a Tiny clockwork device (AC 5, 1 hp). The device ceases to function after 24 hours (unless you spend 1 hour repairing it to keep the device functioning), or when you use your action to dismantle it; at that time, you can reclaim the materials used to create it. You can have up to three such devices active at a time.,,When you create a device, choose one of the following options:,,Clockwork Toy. This toy is a clockwork animal, monster, or person, such as a frog, mouse, bird, dragon, or soldier. When placed on the ground, the toy moves 5 feet across the ground on each of your turns in a random direction. It makes noises as appropriate to the creature it represents.,,Fire Starter. The device produces a miniature flame, which you can use to light a candle, torch, or campfire. Using the device requires your action.,,Music Box. When opened, this music box plays a single song at a moderate volume. The box stops playing when it reaches the song's end or when it is closed."
      }
    },
    'goblin': {
      muscleMass: 9,
      bmiModifier: 703,
      ageTraits: {
        'ageDescriptors': [[100, 'ancient'], [90, 'incredibly elderly'], [70, 'vulnerably elderly'], [65, 'withered'], [60, 'elderly'], [55, 'weathered'], [53, 'aged'], [50, 'old'], [45, 'middle aged'], [40, 'middle aged'], [35, 'early middle aged'], [20, 'adult'], [18, 'prime adult aged'], [16, 'young adult'], [15, 'youthful adult'], [14, 'relatively young'], [13, 'surprisingly young'], [12, 'barely adult aged'], [11, 'youngster'], [8, 'adolescent'], [7, 'prepubescent'], [3, 'child'], [2, 'young child'], [1, 'toddler'], [0, 'newborn']],
        'elderly': {
          baseAge: 50,
          ageModifier: () => dice(3, 4)
        },
        'settled adult': {
          baseAge: 30,
          ageModifier: () => dice(3, 10)
        },
        'young adult': {
          baseAge: 20,
          ageModifier: () => dice(4, 5)
        },
        'child': {
          baseAge: 5,
          ageModifier: () => dice(3, 4)
        }
      },
      genderTraits: {
        entity: {},
        nonbinary: {},
        woman: {
          firstName: ['Quiss', 'Wawa', 'Spork', 'Turnaround', 'Barfknees', 'Knifey', 'Cowshout', 'Spank', 'Stumpy', 'Backwater', 'Crowlaw', 'Clockwind', 'Burtlan', 'Smee', 'Macintosh', 'Sexpants', 'Crab', 'Muckman', 'Dirtwallow', 'Crooknose', 'Beetlepocket', 'Sticky', 'Vraaz', 'Vick', 'Brackish', 'Pondjohn', 'Waxmuncher', 'Wicklicker', 'Candleear', 'Grimm', 'Portho', 'Odo', 'Fleshgutter', 'Slugsnatcher', 'Milksalt', 'Stewslosh', 'Cast Iron', 'Dutch', 'Squirrelskinner', 'Froggrope', 'Topsyturvy', 'Lardmouth', 'Thighflayer', 'Sinew', 'Hypotenoose', 'Gallow'],
          beardProbability: 0,
          baseHeight: 43,
          baseWeight: 50,
          heightModifier: () => dice(2, 4),
          weightModifier: () => dice(2, 6)
        },
        man: {
          firstName: ['Boblin', 'Borkle', 'Marrow', 'Tododon', 'Sparkmack', 'Svish', 'Mogglewog', 'Bendigo', 'Jare', 'Peacho', 'Lock', 'Shock', 'Barrel', 'Snik', 'Snak', 'Gordo', 'Nipmonger', 'Riddle', 'Spip', 'Kaa', 'Bonegrundle', 'Yaxmax', 'Tamborine', 'Riggity', 'Fishspleen', 'Bladder Dan', 'Mumblemorg', 'Piss Jar', 'Kettle', 'Gnogin', 'Eee', 'Rattrap', 'Bigsmalls', 'Pork', 'Fwip', 'Gong', 'Zaza', 'Meeg', 'Meeg Two', 'Meeg Three', 'Spud', 'Uvano', 'Pingpang', 'Bowel', 'Ham', 'Gritgrash', 'Countbean', 'Sap Sam', 'Leek Leek', 'Bwob', 'Parsnip Jr.', 'Parsnip Sr,', 'Fat Cat', 'Eyemasher'],
          beardProbability: 24,
          baseHeight: 45,
          baseWeight: 55,
          heightModifier: () => dice(2, 4),
          weightModifier: () => dice(3, 6)
        }
      },
      lastName: ['Blackbug', 'Dizkat', 'Fatbrag', 'Mousebones', 'Bloodbug', 'Bickdig', 'Moutgat', 'Gutmouse', 'Morkdog', 'Digbit', 'Ziktag', 'Zotpot', 'Zitpit', 'Zoop', 'Zoopoop', 'Mazz', 'Mazztazz', 'Morkdork', 'Gork', 'Flork', 'Hork', 'Dork', 'Zork', 'Lork', 'Dikzat', 'Zokdit'],
      eyes: ['yellow', 'amber', 'brown', 'dark brown', 'hazel', 'red', 'blood red', 'dark red'],
      raceWords: {
        raceName: 'goblin',
        racePlural: 'goblins',
        raceSingular: 'goblin',
        raceAdjective: 'goblinoid',
        raceLanguage: 'Goblin'
      },
      knownLanguages: ['Common', 'Goblin'],
      beard: ['scraggly beard', 'long, flowing beard', 'goatee', 'goatee that seems to be trying to level up into a beard', 'rather wild, unkempt beard', 'dreadful beard'],
      abilities: {
        Darkvision: "Accustomed to life underground, you have superior vision in dark and dim conditions. You can see in dim light within 60 feet of you as if it were bright light, and in darkness as if it were dim light. You can't discern color in darkness, only shades of gray."
      }
    },
    'half-elf': {
      muscleMass: 10,
      bmiModifier: 703,
      viableBreedingPartners: ['human', 'elf', 'half-elf', 'half-orc'],
      ageTraits: {
        'ageDescriptors': [[220, 'positively ancient'], [200, 'ancient'], [180, 'vulnerably elderly'], [150, 'withered'], [130, 'elderly'], [110, 'weathered'], [100, 'aged'], [90, 'old'], [80, 'middle aged'], [60, 'middle aged'], [50, 'early middle aged'], [40, 'adult'], [35, 'mid thirties'], [32, 'earlyish thirties'], [30, 'prime adult aged'], [26, 'young adult'], [24, 'youthful adult'], [22, 'relatively young'], [20, 'surprisingly young'], [19, 'nineteen year old'], [18, 'barely adult aged'], [17, 'late teenager'], [16, 'teenager'], [15, 'young teenager'], [14, 'adolescent'], [12, 'prepubescent'], [10, 'child'], [8, 'young child'], [6, 'toddler'], [0, 'newborn']],
        'elderly': {
          baseAge: 150,
          ageModifier: () => dice(3, 10)
        },
        'settled adult': {
          baseAge: 50,
          ageModifier: () => dice(3, 50)
        },
        'young adult': {
          baseAge: 20,
          ageModifier: () => dice(3, 10)
        },
        'child': {
          baseAge: 6,
          ageModifier: () => dice(3, 4)
        }
      },
      genderTraits: {
        entity: {},
        nonbinary: {},
        woman: {
          firstName: ['Abigayl', 'Aebria', 'Aeobreia', 'Breia', 'Aedria', 'Aodreia', 'Dreia', 'Aeliya', 'Aliya', 'Aella', 'Aemilya', 'Aemma', 'Aemy', 'Amy', 'Ami', 'Aeria', 'Arya', 'Aeva', 'Aevelyn', 'Evylann', 'Alaexa', 'Alyxa', 'Alina', 'Aelina', 'Aelinea', 'Allisann', 'Allysann', 'Alyce', 'Alys', 'Alysea', 'Alyssia', 'Aelyssa', 'Amelya', 'Maelya', 'Andreya', 'Aendrea', 'Arianna', 'Aryanna', 'Arielle', 'Aryell', 'Ariella', 'Ashlena', 'Aurora', 'Avaery', 'Avyrie', 'Bella', 'Baella', 'Brooklinea', 'Bryanna', 'Brynna', 'Brinna', 'Caemila', 'Chloe', 'Chloeia', 'Claira', 'Clayre', 'Clayra', 'Delyla', 'Dalyla', 'Elisybeth', 'Aelisabeth', 'Ellia', 'Ellya', 'Elyana', 'Eliana', 'Eva', 'Falyne', 'Genaesis', 'Genaesys', 'Gianna', 'Jianna', 'Janna', 'Graece', 'Grassa', 'Haenna', 'Hanna', 'Halya', 'Harperia', 'Peria', 'Hazyl', 'Hazel', 'Jasmyne', 'Jasmine', 'Jocelyne', 'Joceline', 'Celine', 'Kaelia', 'Kaelya', 'Kathryne', 'Kathrine', 'Kayla', 'Kaila', 'Kymber', 'Kimbera', 'Layla', 'Laylanna', 'Leia', 'Leya', 'Leah', 'Lilia', 'Lylia', 'Luna', 'Maedisa', 'Maelania', 'Melania', 'Maya', 'Mya', 'Myla', 'Milae', 'Naomi', 'Naome', 'Natalya', 'Talya', 'Nathylie', 'Nataliae', 'Thalia', 'Nicola', 'Nikola', 'Nycola', 'Olivya', 'Alivya', 'Penelope', 'Paenelope', 'Pynelope', 'Rianna', 'Ryanna', 'Ruby', 'Ryla', 'Samaentha', 'Samytha', 'Sara', 'Sarah', 'Savannia', 'Scarletta', 'Sharlotta', 'Caerlotta', 'Sophya', 'Stella', 'Stylla', 'Valentyna', 'Valerya', 'Valeria', 'Valia', 'Valea', 'Victorya', 'Vilettia', 'Ximena', 'Imaena', 'Ysabel', 'Zoe', 'Zoeia', 'Zoea', 'Zoesia'],
          beardProbability: 0,
          baseHeight: 61,
          baseWeight: 90,
          heightModifier: () => dice(2, 8),
          weightModifier: () => dice(2, 4)
        },
        man: {
          firstName: ['Adran', 'Aelar', 'Aerdeth', 'Ahvain', 'Aramil', 'Arannis', 'Aust', 'Azaki', 'Beiro', 'Berrian', 'Caeldrim', 'Carric', 'Dayereth', 'Dreali', 'Efieril', 'Eiravel', 'Enialis', 'Erdan', 'Erevan', 'Fivin', 'Galinndan', 'Gennal', 'Hadarai', 'Halimath', 'Heian', 'Himo', 'Immeral', 'Ivellios', 'Korfel', 'Lamlis', 'Laucian', 'Lucan', 'Mindartis', 'Naal', 'Nutae', 'Paelias', 'Peren', 'Quarion', 'Riardon', 'Rolen', 'Soveliss', 'Suhnae', 'Thamior', 'Tharivol', 'Theren', 'Theriatis', 'Thervan', 'Uthemar', 'Vanuath', 'Varis'],
          beardProbability: 43,
          baseHeight: 62,
          baseWeight: 110,
          heightModifier: () => dice(2, 8),
          weightModifier: () => dice(2, 4)
        }
      },
      lastName: ['Alder', 'Ash', 'Ashdown', 'Atwood', 'Barnes', 'Becker', 'Berry', 'Briar', 'Briggs', 'Brock', 'Brook', 'Bundy', 'Burnside', 'Burroughs', 'Bush', 'Butcher', 'Butler', 'Clay', 'Court', 'Cox', 'Croft', 'Cross', 'Crump', 'Dale', 'Deane', 'Delaney', 'Dike', 'Dodd', 'Ford', 'Forrest', 'Fox', 'Freeman', 'Garside', 'Gorsuch', 'Graves', 'Green', 'Greeves', 'Gross', 'Grove', 'Grover', 'Hall', 'Hawthorne', 'Hazel', 'Head', 'Heather', 'Hill', 'Holley', 'Holmes', 'Holt', 'Homer', 'Hooke', 'Hope', 'House', 'Howe', 'Hume', 'Hyde', 'Johnston', 'Kaye', 'Keats', 'Kerry', 'Kirk', 'Lamb', 'Layne', 'Lea', 'Lowell', 'March', 'Marsh', 'Marshal', 'Martin', 'May', 'Millerchip', 'Mills', 'Moore', 'Newby', 'Paine', 'Paxton', 'Perrin', 'Pike', 'Pitt', 'Preacher', 'Provost', 'Purple', 'Ridge', 'Rock', 'Rose', 'Rowen', 'Sangster', 'Sellers', 'Shaw', 'Short', 'Thorne', 'Underwood', 'Walsh', 'Wells', 'West', 'Whitney', 'Wilde', 'Wood', 'Wragge', 'Wynne'],
      eyes: ['yellow', 'amber', 'brown', 'hazel', 'green', 'blue', 'gray', 'aqua', 'red', 'purple', 'pale brown', 'pale blue', 'pale green', 'ash gray'],
      raceWords: {
        raceName: 'half-elf',
        racePlural: 'half-elves',
        raceSingular: 'half-elf',
        raceAdjective: 'elfish',
        raceLanguage: 'Elven'
      },
      knownLanguages: ['Common', 'Elvish'],
      beard: ['scraggly beard', 'long, flowing beard', 'five o clock shadow', 'neckbeard', 'well-groomed moustache', 'goatee', 'well-loved beard, with ornamental beads woven into it', 'smattering of hairs on his face', 'bit of peach fuzz on his chin', 'long, luxurious beard', 'long, well-kempt beard', 'rather wild, unkempt beard', 'dreadful beard'],
      abilities: {
        'Darkvision': "Thanks to your elf blood, you have superior vision in dark and dim conditions. You can see in dim light within 60 feet of you as if it were bright light, and in darkness as if it were dim light. You can't discern color in darkness, only shades of gray.",
        'Fey Ancestry': "You have advantage on saving throws against being charmed, and magic can't put you to sleep.",
        'Skill Versatility': 'You gain proficiency in two skills of your choice.',
        'Languages': 'You can speak, read, and write Common, Elvish, and one extra language of your choice.'
      }
    },
    'halfling': {
      muscleMass: 9,
      bmiModifier: 703,
      ageTraits: {
        'ageDescriptors': [[230, 'ancient'], [200, 'incredibly elderly'], [180, 'vulnerably elderly'], [150, 'withered'], [130, 'elderly'], [110, 'weathered'], [100, 'aged'], [90, 'old'], [80, 'middle aged'], [60, 'middle aged'], [50, 'early middle aged'], [40, 'adult'], [35, 'mid thirties'], [32, 'earlyish thirties'], [30, 'prime adult aged'], [26, 'young adult'], [24, 'youthful adult'], [22, 'relatively young'], [20, 'surprisingly young'], [19, 'nineteen year old'], [18, 'barely adult aged'], [17, 'late teenager'], [16, 'teenager'], [15, 'young teenager'], [14, 'adolescent'], [12, 'prepubescent'], [10, 'child'], [8, 'young child'], [6, 'toddler'], [0, 'newborn']],
        'elderly': {
          baseAge: 65,
          ageModifier: () => dice(3, 10)
        },
        'settled adult': {
          baseAge: 30,
          ageModifier: () => dice(3, 10)
        },
        'young adult': {
          baseAge: 16,
          ageModifier: () => dice(2, 12)
        },
        'child': {
          baseAge: 4,
          ageModifier: () => dice(2, 6)
        }
      },
      genderTraits: {
        entity: {},
        nonbinary: {},
        woman: {
          firstName: ['Alain', 'Andry', 'Anne', 'Bella', 'Blossom', 'Bree', 'Callie', 'Chenna', 'Cora', 'Dee', 'Dell', 'Eida', 'Eran', 'Euphamia', 'Georgina', 'Gynnie', 'Harriet', 'Jasmine', 'Jillian', 'Jo', 'Kithri', 'Lavinia', 'Lidda', 'Maegan', 'Marigold', 'Merla', 'Myria', 'Nedda', 'Nikki', 'Nora', 'Olivia', 'Paela', 'Pearl', 'Pennie', 'Philomena', 'Portia', 'Robbie', 'Rose', 'Saral', 'Seraphina', 'Shaena', 'Stacee', 'Tawna', 'Thea', 'Trym', 'Tyna', 'Vani', 'Verna', 'Wella', 'Willow'],
          beardProbability: 0,
          baseHeight: 30,
          baseWeight: 25,
          heightModifier: () => dice(2, 4),
          weightModifier: () => dice(1, 1)
        },
        man: {
          firstName: ['Alton', 'Ander', 'Bernie', 'Bobbin', 'Cade', 'Callus', 'Corrin', 'Dannad', 'Danniel', 'Eddie', 'Egart', 'Eldon', 'Errich', 'Fildo', 'Finnan', 'Franklin', 'Garret', 'Garth', 'Gilbert', 'Gob', 'Harol', 'Igor', 'Jasper', 'Keith', 'Kevin', 'Lazam', 'Lerry', 'Lindal', 'Lyle', 'Merric', 'Mican', 'Milo', 'Morrin', 'Nebin', 'Nevil', 'Osborn', 'Ostran', 'Oswalt', 'Perrin', 'Poppy', 'Reed', 'Roscoe', 'Sam', 'Shardon', 'Tye', 'Ulmo', 'Wellby', 'Wendel', 'Wenner', 'Wes'],
          beardProbability: 15,
          baseHeight: 32,
          baseWeight: 25,
          heightModifier: () => dice(2, 4),
          weightModifier: () => dice(1, 1)
        }
      },
      lastName: ['Appleblossom', 'Bigheart', 'Brightmoon', 'Brushgather', 'Cherrycheeks', 'Copperkettle', 'Deephollow', 'Elderberry', 'Fastfoot', 'Fastrabbit', 'Glenfellow', 'Goldfound', 'Goodbarrel', 'Goodearth', 'Goodbottle', 'Greenleaf', 'High-hill', 'Hilltopple', 'Hogcollar', 'Honeypot', 'Jamjar', 'Kettlewhistle', 'Leagallow', 'littlefoot', 'Nimblefingers', 'Porridgepot', 'Quickstep', 'Reedfellow', 'Shadowquick', 'Silvereyes', 'Smoothhands', 'Stonebridge', 'Stoutbridge', 'Stoutman', 'Strongbones', 'Sunmeadow', 'Swiftwhistle', 'Tallfellow', 'Tealeaf', 'Tenpenny', 'Thistletop', 'Thorngage', 'Tosscobble', 'Underbough', 'Underfoot', 'Warmwater', 'Whispermouse', 'Wildcloak', 'Wildheart', 'Wiseacre'],
      eyes: ['yellow', 'amber', 'brown', 'hazel', 'green', 'blue', 'gray', 'aqua', 'red', 'purple', 'pale brown', 'pale blue', 'pale green', 'ash gray'],
      raceWords: {
        raceName: 'halfling',
        racePlural: 'hobbits',
        raceSingular: 'halfling',
        raceAdjective: 'halfling',
        raceLanguage: 'Halfling'
      },
      knownLanguages: ['Common', 'Halfling'],
      beard: ['scraggly beard', 'long, flowing beard', 'five o clock shadow', 'neckbeard', 'well-groomed moustache', 'goatee', 'well-loved beard, with ornamental beads woven into it', 'smattering of hairs on his face', 'bit of peach fuzz on his chin', 'long, luxurious beard', 'long, well-kempt beard', 'rather wild, unkempt beard', 'dreadful beard'],
      abilities: {
        'Lucky': 'When you roll a 1 on an attack roll, ability check, or saving throw, you can reroll the die and must use the new roll.',
        'Brave': 'You have advantage on saving throws against being frightened.',
        'Halfling': 'Nimbleness You can move through the space of any creature that is of a size larger than yours.',
        'Naturally Stealthy': 'You can attempt to hide even when you are obscured only by a creature that is at least one size larger than you.'
      }
    },
    'half-orc': {
      muscleMass: 12,
      bmiModifier: 600,
      viableBreedingPartners: ['human', 'orc', 'half-elf', 'half-orc'],
      ageTraits: {
        'ageDescriptors': [[100, 'ancient'], [90, 'incredibly elderly'], [80, 'vulnerably elderly'], [75, 'withered'], [70, 'elderly'], [65, 'weathered'], [60, 'aged'], [55, 'old'], [50, 'middle aged'], [45, 'middle aged'], [40, 'early middle aged'], [37, 'adult'], [35, 'mid thirties'], [32, 'earlyish thirties'], [30, 'prime adult aged'], [26, 'young adult'], [24, 'youthful adult'], [22, 'relatively young'], [20, 'surprisingly young'], [19, 'nineteen year old'], [18, 'barely adult aged'], [17, 'late teenager'], [16, 'teenager'], [15, 'young teenager'], [14, 'adolescent'], [12, 'prepubescent'], [10, 'child'], [8, 'young child'], [6, 'toddler'], [0, 'newborn']],
        'elderly': {
          baseAge: 57,
          ageModifier: () => dice(3, 6)
        },
        'settled adult': {
          baseAge: 45,
          ageModifier: () => dice(3, 6)
        },
        'young adult': {
          baseAge: 15,
          ageModifier: () => dice(3, 12)
        },
        'child': {
          baseAge: 3,
          ageModifier: () => dice(3, 4)
        }
      },
      genderTraits: {
        entity: {},
        nonbinary: {},
        woman: {
          firstName: ['Arha', 'Baggi', 'Bendoo', 'Bilga', 'Brakka', 'Creega', 'Drenna', 'Ekk', 'Emen', 'Engong', 'Fistula', 'Gaaki', 'Gorga', 'Grai', 'Greeba', 'Grigi', 'Gynk', 'Hrathy', 'Huru', 'Ilga', 'Kabbarg', 'Kansif', 'Lagazi', 'Lexre', 'Murgen', 'Murook', 'Myev', 'Nagarette', 'Neega', 'Nella', 'Nogu', 'Oolah', 'Ootah', 'Ovak', 'Ownka', 'Puyet', 'Reeza', 'Shautha', 'Silgre', 'Sutha', 'Tagga', 'Tawar', 'Tomph', 'Ubada', 'Vanchu', 'Vola', 'Volen', 'Vorka', 'Yevelda', 'Zagga'],
          beardProbability: 0,
          baseHeight: 53,
          baseWeight: 150,
          heightModifier: () => dice(2, 10),
          weightModifier: () => dice(2, 6)
        },
        man: {
          firstName: ['Argran', 'Braak', 'Brug', 'Cagak', 'Dench', 'Dorn', 'Dren', 'Druuk', 'Feng', 'Gell', 'Gnarsh', 'Grurnbar', 'Gubrash', 'Hagren', 'Henk', 'Hogar', 'Holg', 'Imsh', 'Karash', 'Karg', 'Keth', 'Korag', 'Krusk', 'Lubash', 'Megged', 'Mhurren', 'Mhflord', 'Morg', 'Nil', 'Nybarg', 'Odorr', 'Ohr', 'Rendar', 'Resh', 'Ront', 'Rrath', 'Sark', 'Scrag', 'Sheggen', 'Shump', 'Tanglar', 'Tarak', 'Thrag', 'Thokk', 'Trag', 'Ugarth', 'Varg', 'Vilberg', 'Yurk', 'Zed'],
          beardProbability: 40,
          baseHeight: 58,
          baseWeight: 110,
          heightModifier: () => dice(2, 10),
          weightModifier: () => dice(2, 6)
        }
      },
      lastName: ['Gultch', 'Goresmasher', 'Karaktoth', 'Krokk', 'Bogdoth', 'Bracka', 'Dargakk', 'Darknath', "Gul'Tchanth", 'Prathka', 'Rathkann', 'Rangakk'],
      eyes: ['yellow', 'amber', 'orange', 'brown', 'hazel', 'yellow', 'amber', 'orange', 'brown', 'hazel', 'green', 'blue', 'gray', 'aqua', 'red'],
      raceWords: {
        raceName: 'half-orc',
        racePlural: 'half-orcs',
        raceSingular: 'half-orc',
        raceAdjective: 'orcish',
        raceLanguage: 'Orcish'
      },
      knownLanguages: ['Common', 'Orc'],
      beard: ['scraggly beard', 'long, flowing beard', 'five o clock shadow', 'neckbeard', 'well-groomed moustache', 'goatee', 'well-loved beard, with ornamental beads woven into it', 'smattering of hairs on his face', 'bit of peach fuzz on his chin', 'long, luxurious beard', 'long, well-kempt beard', 'rather wild, unkempt beard', 'dreadful beard'],
      abilities: {
        'Darkvision': "Thanks to your orc blood, you have superior vision in dark and dim conditions. You can see in dim light within 60 feet of you as if it were bright light, and in darkness as if it were dim light. You can't discern color in darkness, only shades of gray.",
        'Menacing': 'You gain proficiency in the Intimidation skill.',
        'Relentless Endurance': "When you are reduced to 0 hit points but not killed outright, you can drop to 1 hit point instead. You can't use this feature again until you finish a long rest.",
        'Savage Attacks': "When you score a critical hit with a melee weapon attack, you can roll one of the weapon's damage dice one additional time and add it to the extra damage of the critical hit."
      }
    },
    'human': {
      muscleMass: 10,
      bmiModifier: 703,
      viableBreedingPartners: ['human', 'elf', 'orc', 'half-elf', 'half-orc', 'tiefling'],
      ageTraits: {
        'ageDescriptors': [[100, 'ancient'], [90, 'incredibly elderly'], [80, 'vulnerably elderly'], [75, 'withered'], [70, 'elderly'], [65, 'weathered'], [60, 'aged'], [55, 'old'], [50, 'middle aged'], [45, 'middle aged'], [40, 'early middle aged'], [37, 'adult'], [35, 'mid thirties'], [32, 'earlyish thirties'], [30, 'prime adult aged'], [26, 'young adult'], [24, 'youthful adult'], [22, 'relatively young'], [20, 'surprisingly young'], [19, 'nineteen year old'], [18, 'barely adult aged'], [17, 'late teenager'], [16, 'teenager'], [15, 'young teenager'], [14, 'adolescent'], [12, 'prepubescent'], [10, 'child'], [8, 'young child'], [6, 'toddler'], [0, 'newborn']],
        'elderly': {
          baseAge: 65,
          ageModifier: () => dice(3, 10)
        },
        'settled adult': {
          baseAge: 30,
          ageModifier: () => dice(3, 15)
        },
        'young adult': {
          baseAge: 15,
          ageModifier: () => dice(3, 6)
        },
        'child': {
          baseAge: 4,
          ageModifier: () => dice(3, 4)
        }
      },
      genderTraits: {
        entity: {},
        nonbinary: {},
        woman: {
          beardProbability: 0,
          baseHeight: 53,
          baseWeight: 85,
          heightModifier: () => dice(2, 10),
          weightModifier: () => dice(2, 4),
          firstName: ['Abigayl', 'Aebria', 'Aeobreia', 'Breia', 'Aedria', 'Aodreia', 'Dreia', 'Aeliya', 'Aliya', 'Aella', 'Aemilya', 'Aemma', 'Aemy', 'Amy', 'Ami', 'Aeria', 'Arya', 'Aeva', 'Aevelyn', 'Evylann', 'Alaexa', 'Alyxa', 'Alina', 'Aelina', 'Aelinea', 'Allisann', 'Allysann', 'Alyce', 'Alys', 'Alysea', 'Alyssia', 'Aelyssa', 'Amelya', 'Maelya', 'Andreya', 'Aendrea', 'Arianna', 'Aryanna', 'Arielle', 'Aryell', 'Ariella', 'Ashlena', 'Aurora', 'Avaery', 'Avyrie', 'Bella', 'Baella', 'Brooklinea', 'Bryanna', 'Brynna', 'Brinna', 'Caemila', 'Chloe', 'Chloeia', 'Claira', 'Clayre', 'Clayra', 'Delyla', 'Dalyla', 'Elisybeth', 'Aelisabeth', 'Ellia', 'Ellya', 'Elyana', 'Eliana', 'Eva', 'Falyne', 'Genaesis', 'Genaesys', 'Gianna', 'Jianna', 'Janna', 'Graece', 'Grassa', 'Haenna', 'Hanna', 'Halya', 'Harperia', 'Peria', 'Hazyl', 'Hazel', 'Jasmyne', 'Jasmine', 'Jocelyne', 'Joceline', 'Celine', 'Kaelia', 'Kaelya', 'Kathryne', 'Kathrine', 'Kayla', 'Kaila', 'Kymber', 'Kimbera', 'Layla', 'Laylanna', 'Leia', 'Leya', 'Leah', 'Lilia', 'Lylia', 'Luna', 'Maedisa', 'Maelania', 'Melania', 'Maya', 'Mya', 'Myla', 'Milae', 'Naomi', 'Naome', 'Natalya', 'Talya', 'Nathylie', 'Nataliae', 'Thalia', 'Nicola', 'Nikola', 'Nycola', 'Olivya', 'Alivya', 'Penelope', 'Paenelope', 'Pynelope', 'Rianna', 'Ryanna', 'Ruby', 'Ryla', 'Samaentha', 'Samytha', 'Sara', 'Sarah', 'Savannia', 'Scarletta', 'Sharlotta', 'Caerlotta', 'Sophya', 'Stella', 'Stylla', 'Valentyna', 'Valerya', 'Valeria', 'Valia', 'Valea', 'Victorya', 'Vilettia', 'Ximena', 'Imaena', 'Ysabel', 'Zoe', 'Zoeia', 'Zoea', 'Zoesia']
        },
        man: {
          beardProbability: 40,
          baseHeight: 58,
          baseWeight: 120,
          heightModifier: () => dice(2, 10),
          weightModifier: () => dice(2, 4),
          firstName: ['Aaryn', 'Aaro', 'Aarus', 'Abramus', 'Abrahm', 'Abyl', 'Abelus', 'Adannius', 'Adanno', 'Aedam', 'Adym', 'Adamus', 'Aedrian', 'Aedrio', 'Aedyn', 'Aidyn', 'Aelijah', 'Elyjah', 'Aendro', 'Androe', 'Aenry', 'Hynroe', 'Hynrus', 'Aethan', 'Aethyn', 'Aevan', 'Evyn', 'Evanus', 'Alecks', 'Alyx', 'Alexandyr', 'Xandyr', 'Alyn', 'Alaen', 'Andrus', 'Aendrus', 'Anglo', 'Aenglo', 'Anglus', 'Antony', 'Antonyr', 'Astyn', 'Astinus', 'Axelus', 'Axyl', 'Benjamyn', 'Benjamyr', 'Braidyn', 'Brydus', 'Braddeus', 'Brandyn', 'Braendyn', 'Bryus', 'Bryne', 'Bryn', 'Branus', 'Caeleb', 'Caelyb', 'Caerlos', 'Carlus', 'Cameryn', 'Camerus', 'Cartus', 'Caertero', 'Charlus', 'Chaerles', 'Chyrles', 'Christophyr', 'Christo', 'Chrystian', 'Chrystan', 'Connorus', 'Connyr', 'Daemian', 'Damyan', 'Daenyel', 'Danyel', 'Davyd', 'Daevo', 'Dominac', 'Dylaen', 'Dylus', 'Elius', 'Aeli', 'Elyas', 'Helius', 'Helian', 'Emilyan', 'Emilanus', 'Emmanus', 'Emynwell', 'Ericus', 'Eryc', 'Eryck', 'Ezekius', 'Zeckus', 'Ezekio', 'Ezrus', 'Yzra', 'Gabrael', 'Gaebriel', 'Gael', 'Gayl', 'Gayel', 'Gaeus', 'Gavyn', 'Gaevyn', 'Goshwa', 'Joshoe', 'Graysus', 'Graysen', 'Gwann', 'Ewan', 'Gwyllam', 'Gwyllem', 'Haddeus', 'Hudsyn', 'Haesoe', 'Haesys', 'Haesus', 'Handus', 'Handyr', 'Hantus', 'Huntyr', 'Haroldus', 'Haryld', 'Horgus', 'Horus', 'Horys', 'Horyce', 'Hosea', 'Hosius', 'Iaen', 'Yan', 'Ianus', 'Ivaen', 'Yvan', 'Jaecoby', 'Jaecob', 'Jaeden', 'Jaedyn', 'Jaeremiah', 'Jeremus', 'Jasyn', 'Jaesen', 'Jaxon', 'Jaxyn', 'Jaxus', 'Johnus', 'Jonus', 'Jonaeth', 'Jonathyn', 'Jordus', 'Jordyn', 'Josaeth', 'Josephus', 'Josaeus', 'Josayah', 'Jovanus', 'Giovan', 'Julyan', 'Julyo', 'Jyck', 'Jaeck', 'Jacus', 'Kaevin', 'Kevyn', 'Vinkus', 'Laevi', 'Levy', 'Levius', 'Landyn', 'Laendus', 'Leo', 'Leonus', 'Leonaerdo', 'Leonyrdo', 'Lynardus', 'Lincon', 'Lyncon', 'Linconus', 'Logaen', 'Logus', 'Louis', 'Lucius', 'Lucae', 'Lucaen', 'Lucaes', 'Lucoe', 'Lucus', 'Lyam', 'Maeson', 'Masyn', 'Maetho', 'Mathoe', 'Matteus', 'Matto', 'Maxus', 'Maximus', 'Maximo', 'Maxymer', 'Mychael', 'Mygwell', 'Miglus', 'Mythro', 'Mithrus', 'Naemo', 'Naethyn', 'Nathanus', 'Naethynel', 'Nicholaes', 'Nycholas', 'Nicholys', 'Nicolus', 'Nolyn', 'Nolanus', 'Olivyr', 'Alivyr', 'Olivus', 'Oscarus', 'Oscoe', 'Raen', 'Ryn', 'Robertus', 'Robett', 'Bertus', 'Romyn', 'Romanus', 'Ryderus', 'Ridyr', 'Samwell', 'Saemuel', 'Santegus', 'Santaegus', 'Sybasten', 'Bastyen', 'Tago', 'Aemo', 'Tagus', 'Theodorus', 'Theodus', 'Thaeodore', 'Thomys', 'Thomas', 'Tommus', 'Tylus', 'Tilyr', 'Uwyn', 'Oewyn', 'Victor', 'Victyr', 'Victorus', 'Vincynt', 'Vyncent', 'Vincentus', 'Wyttus', 'Wyaett', 'Xavius', 'Havius', 'Xavyer', 'Yago', 'Tyago', 'Tyego', 'Ysaac', 'Aisaac', 'Ysaiah', 'Aisiah', 'Siahus', 'Zacharus', 'Zachar', 'Zachaery']
        }
      },
      lastName: ['Alder', 'Ash', 'Ashdown', 'Atwood', 'Barnes', 'Becker', 'Berry', 'Briar', 'Briggs', 'Brock', 'Brook', 'Bundy', 'Burnside', 'Burroughs', 'Bush', 'Butcher', 'Butler', 'Clay', 'Court', 'Cox', 'Croft', 'Cross', 'Crump', 'Dale', 'Deane', 'Delaney', 'Dike', 'Dodd', 'Ford', 'Forrest', 'Fox', 'Freeman', 'Garside', 'Gorsuch', 'Graves', 'Green', 'Greeves', 'Gross', 'Grove', 'Grover', 'Hall', 'Hawthorne', 'Hazel', 'Head', 'Heather', 'Hill', 'Holley', 'Holmes', 'Holt', 'Homer', 'Hooke', 'Hope', 'House', 'Howe', 'Hume', 'Hyde', 'Johnston', 'Kaye', 'Keats', 'Kerry', 'Kirk', 'Lamb', 'Layne', 'Lea', 'Lowell', 'March', 'Marsh', 'Marshal', 'Martin', 'May', 'Millerchip', 'Mills', 'Moore', 'Newby', 'Paine', 'Paxton', 'Perrin', 'Pike', 'Pitt', 'Preacher', 'Provost', 'Purple', 'Ridge', 'Rock', 'Rose', 'Rowen', 'Sangster', 'Sellers', 'Shaw', 'Short', 'Thorne', 'Underwood', 'Walsh', 'Wells', 'West', 'Whitney', 'Wilde', 'Wood', 'Wragge', 'Wynne'],
      eyes: ['yellow', 'amber', 'brown', 'hazel', 'green', 'blue', 'gray', 'aqua', 'brown', 'hazel', 'green', 'blue', 'gray', 'aqua', 'purple', 'pale brown', 'pale blue', 'pale green', 'ash gray'],
      raceWords: {
        raceName: 'human',
        racePlural: 'humans',
        raceSingular: 'person',
        raceAdjective: 'human',
        raceLanguage: 'Common'
      },
      knownLanguages: ['Common'],
      beard: ['scraggly beard', 'long, flowing beard', 'five o clock shadow', 'neckbeard', 'well-groomed moustache', 'goatee', 'well-loved beard, with ornamental beads woven into it', 'smattering of hairs on his face', 'bit of peach fuzz on his chin', 'long, luxurious beard', 'long, well-kempt beard', 'rather wild, unkempt beard', 'dreadful beard'],
      abilities: {
        'Ability Score': 'Increase Two different ability scores of your choice increase by 1.',
        'Skills': 'You gain proficiency in one skill of your choice.',
        'Feat': 'You gain one feat of your choice.'
      }
    },
    'tiefling': {
      muscleMass: 10,
      bmiModifier: 703,
      viableBreedingPartners: ['human', 'tiefling'],
      ageTraits: {
        'ageDescriptors': [[100, 'ancient'], [90, 'incredibly elderly'], [80, 'vulnerably elderly'], [75, 'withered'], [70, 'elderly'], [65, 'weathered'], [60, 'aged'], [55, 'old'], [50, 'middle aged'], [45, 'middle aged'], [40, 'early middle aged'], [37, 'adult'], [35, 'mid thirties'], [32, 'earlyish thirties'], [30, 'prime adult aged'], [26, 'young adult'], [24, 'youthful adult'], [22, 'relatively young'], [20, 'surprisingly young'], [19, 'nineteen year old'], [18, 'barely adult aged'], [17, 'late teenager'], [16, 'teenager'], [15, 'young teenager'], [14, 'adolescent'], [12, 'prepubescent'], [10, 'child'], [8, 'young child'], [6, 'toddler'], [0, 'newborn']],
        'elderly': {
          baseAge: 70,
          ageModifier: () => dice(3, 10)
        },
        'settled adult': {
          baseAge: 40,
          ageModifier: () => dice(3, 10)
        },
        'young adult': {
          baseAge: 18,
          ageModifier: () => dice(3, 12)
        },
        'child': {
          baseAge: 4,
          ageModifier: () => dice(3, 4)
        }
      },
      genderTraits: {
        entity: {},
        nonbinary: {},
        woman: {
          firstName: ['Akta', 'Anakis', 'Armara', 'Astaro', 'Aym', 'Azza', 'Beleth', 'Bryseis', 'Bune', 'Criella', 'Damaia', 'Decarabia', 'Ea', 'Gadreel', 'Gomory', 'Hecat', 'Ishte', 'Jezebeth', 'Kali', 'Kalista', 'Kasdeya', 'Lerissa', 'Lilith', 'Makaria', 'Manea', 'Markosian', 'Mastema', 'Namnah', 'Nemem', 'Nija', 'Orianna', 'Osah', 'Phelaia', 'Prosperine', 'Purah', 'Pyra', 'Pyranna', 'Ronobe', 'Ronwe', 'Seddit', 'Seere', 'Sekhmet', 'Semyaza', 'Shava', 'Shax', 'Sorath', 'Uzza', 'Vapula', 'Vepar', 'Verin'],
          beardProbability: 0,
          baseHeight: 54,
          baseWeight: 85,
          heightModifier: () => dice(2, 8),
          weightModifier: () => dice(2, 4)
        },
        man: {
          firstName: ['Abad', 'Ahrun', 'Akwmn', 'Anmon', 'Andram', 'Astar', 'Bmam', 'Barakas', 'Bathin', 'Cann', 'Chem', 'Chner', 'Cressel', 'Danmkos', 'Ekmnon', 'Euron', 'Fennz', 'Forcas', 'Habor', 'Iados', 'Kauon', 'Leucs', 'Manmen', 'Mantus', 'Marbas', 'Melech', 'Merihim', 'Modean', 'Mordai', 'Mormo', 'Morthos', 'Nicor', 'Nirgel', 'Oriax', 'Paynon', 'Pelaios', 'Purson', 'Qemud', 'Raam', 'Rimmon', 'Sammal', 'Skamos', 'Tethren', 'Thamuz', 'Therai', 'Valafar', 'Vassago', 'Xappan', 'Zepar', 'Zephan'],
          beardProbability: 40,
          baseHeight: 58,
          baseWeight: 120,
          heightModifier: () => dice(2, 8),
          weightModifier: () => dice(2, 4)
        }
      },
      lastName: ['Amarzian', 'Carnago', 'Domarien', 'Iscitan', 'Meluzan', 'Menetrian', 'Paradas', 'Romazi', 'Sarzan', 'Serechor', 'Shadowhorn', 'Szereban', 'Torzalan', 'Trelenus', 'Trevethor', 'Tryphon', 'Vadu', 'Vrago'],
      eyes: ['yellow', 'amber', 'brown', 'hazel', 'green', 'blue', 'aqua', 'red', 'purple', 'pale brown', 'pale blue', 'pale green', 'ash gray', 'violet red', 'aquamarine', 'deep blue', 'spring green', 'sea green', 'emerald green'],
      raceWords: {
        raceName: 'tiefling',
        racePlural: 'tieflings',
        raceSingular: 'tiefling',
        raceAdjective: 'devilish',
        raceLanguage: 'Infernal'
      },
      knownLanguages: ['Common', 'Infernal'],
      beard: ['scraggly beard', 'long, flowing beard', 'five o clock shadow', 'neckbeard', 'well-groomed moustache', 'goatee', 'well-loved beard, with ornamental beads woven into it', 'smattering of hairs on his face', 'bit of peach fuzz on his chin', 'long, luxurious beard', 'long, well-kempt beard', 'rather wild, unkempt beard', 'dreadful beard'],
      abilities: {
        'Darkvision': "Thanks to your infernal heritage, you have superior vision in dark and dim conditions. You can see in dim light within 60 feet of you as if it were bright light, and in darkness as if it were dim light. You can't discern color in darkness, only shades of gray.",
        'Hellish Resistance': 'You have resistance to fire damage.',
        'Infernal Legacy': 'You know the thaumaturgy cantrip. Once you reach 3rd level, you can cast the hellish rebuke spell as a 2nd-level spell; you must finish a long rest in order to cast the spell again using this trait. Once you reach 5th level, you can also cast the darkness spell; you must finish a long rest in order to cast the spell again using this trait. Charisma is your spellcasting ability for these spells.'
      }
    },
    'orc': {
      muscleMass: 12,
      bmiModifier: 600,
      viableBreedingPartners: ['human', 'orc', 'half-orc'],
      ageTraits: {
        'ageDescriptors': [[100, 'ancient'], [90, 'incredibly elderly'], [80, 'vulnerably elderly'], [75, 'withered'], [70, 'elderly'], [65, 'weathered'], [60, 'aged'], [55, 'old'], [50, 'middle aged'], [45, 'middle aged'], [40, 'early middle aged'], [37, 'adult'], [35, 'mid thirties'], [32, 'earlyish thirties'], [30, 'prime adult aged'], [26, 'young adult'], [24, 'youthful adult'], [22, 'relatively young'], [20, 'surprisingly young'], [19, 'nineteen year old'], [18, 'barely adult aged'], [17, 'late teenager'], [16, 'teenager'], [15, 'young teenager'], [14, 'adolescent'], [12, 'prepubescent'], [10, 'child'], [8, 'young child'], [6, 'toddler'], [0, 'newborn']],
        'elderly': {
          baseAge: 57,
          ageModifier: () => dice(3, 6)
        },
        'settled adult': {
          baseAge: 45,
          ageModifier: () => dice(3, 6)
        },
        'young adult': {
          baseAge: 15,
          ageModifier: () => dice(3, 12)
        },
        'child': {
          baseAge: 3,
          ageModifier: () => dice(3, 4)
        }
      },
      genderTraits: {
        entity: {},
        nonbinary: {},
        woman: {
          firstName: ['Arha', 'Baggi', 'Bendoo', 'Bilga', 'Brakka', 'Creega', 'Drenna', 'Ekk', 'Emen', 'Engong', 'Fistula', 'Gaaki', 'Gorga', 'Grai', 'Greeba', 'Grigi', 'Gynk', 'Hrathy', 'Huru', 'Ilga', 'Kabbarg', 'Kansif', 'Lagazi', 'Lexre', 'Murgen', 'Murook', 'Myev', 'Nagarette', 'Neega', 'Nella', 'Nogu', 'Oolah', 'Ootah', 'Ovak', 'Ownka', 'Puyet', 'Reeza', 'Shautha', 'Silgre', 'Sutha', 'Tagga', 'Tawar', 'Tomph', 'Ubada', 'Vanchu', 'Vola', 'Volen', 'Vorka', 'Yevelda', 'Zagga'],
          beardProbability: 0,
          baseHeight: 53,
          baseWeight: 150,
          heightModifier: () => dice(2, 10),
          weightModifier: () => dice(2, 6)
        },
        man: {
          firstName: ['Argran', 'Braak', 'Brug', 'Cagak', 'Dench', 'Dorn', 'Dren', 'Druuk', 'Feng', 'Gell', 'Gnarsh', 'Grurnbar', 'Gubrash', 'Hagren', 'Henk', 'Hogar', 'Holg', 'Imsh', 'Karash', 'Karg', 'Keth', 'Korag', 'Krusk', 'Lubash', 'Megged', 'Mhurren', 'Mhflord', 'Morg', 'Nil', 'Nybarg', 'Odorr', 'Ohr', 'Rendar', 'Resh', 'Ront', 'Rrath', 'Sark', 'Scrag', 'Sheggen', 'Shump', 'Tanglar', 'Tarak', 'Thrag', 'Thokk', 'Trag', 'Ugarth', 'Varg', 'Vilberg', 'Yurk', 'Zed'],
          beardProbability: 60,
          baseHeight: 58,
          baseWeight: 110,
          heightModifier: () => dice(2, 10),
          weightModifier: () => dice(2, 6)
        }
      },
      lastName: ['Gultch', 'Goresmasher', 'Karaktoth', 'Krokk', 'Bogdoth', 'Bracka', 'Dargakk', 'Darknath', "Gul'Tchanth", 'Prathka', 'Rathkann', 'Rangakk'],
      eyes: ['yellow', 'amber', 'orange', 'brown', 'hazel', 'yellow', 'amber', 'orange', 'brown', 'hazel', 'green', 'blue', 'gray', 'aqua', 'red'],
      raceWords: {
        raceName: 'half-orc',
        racePlural: 'half-orcs',
        raceSingular: 'half-orc',
        raceAdjective: 'orcish',
        raceLanguage: 'Orcish'
      },
      knownLanguages: ['Common', 'Orc'],
      beard: ['scraggly beard', 'long, flowing beard', 'five o clock shadow', 'neckbeard', 'well-groomed moustache', 'goatee', 'well-loved beard, with ornamental beads woven into it', 'smattering of hairs on his face', 'bit of peach fuzz on his chin', 'long, luxurious beard', 'long, well-kempt beard', 'rather wild, unkempt beard', 'dreadful beard'],
      abilities: {
        'Darkvision': "Thanks to your orc blood, you have superior vision in dark and dim conditions. You can see in dim light within 60 feet of you as if it were bright light, and in darkness as if it were dim light. You can't discern color in darkness, only shades of gray.",
        'Menacing': 'You gain proficiency in the Intimidation skill.',
        'Relentless Endurance': "When you are reduced to 0 hit points but not killed outright, you can drop to 1 hit point instead. You can't use this feature again until you finish a long rest.",
        'Savage Attacks': "When you score a critical hit with a melee weapon attack, you can roll one of the weapon's damage dice one additional time and add it to the extra damage of the critical hit."
      }
    },
    'lizardfolk': {
      muscleMass: 12,
      bmiModifier: 600,
      viableBreedingPartners: ['lizardfolk'],
      ageTraits: {
        'ageDescriptors': [[100, 'ancient'], [90, 'incredibly elderly'], [80, 'vulnerably elderly'], [75, 'withered'], [70, 'elderly'], [65, 'weathered'], [60, 'aged'], [55, 'old'], [50, 'middle aged'], [45, 'middle aged'], [40, 'early middle aged'], [37, 'adult'], [35, 'mid thirties'], [32, 'earlyish thirties'], [30, 'prime adult aged'], [26, 'young adult'], [24, 'youthful adult'], [22, 'relatively young'], [20, 'surprisingly young'], [19, 'nineteen year old'], [18, 'barely adult aged'], [17, 'late teenager'], [16, 'teenager'], [15, 'young teenager'], [14, 'adolescent'], [12, 'prepubescent'], [10, 'child'], [8, 'young child'], [6, 'toddler'], [0, 'newborn']],
        'elderly': {
          baseAge: 60,
          ageModifier: () => dice(3, 10)
        },
        'settled adult': {
          baseAge: 30,
          ageModifier: () => dice(3, 15)
        },
        'young adult': {
          baseAge: 15,
          ageModifier: () => dice(3, 6)
        },
        'child': {
          baseAge: 4,
          ageModifier: () => dice(3, 4)
        }
      },
      genderTraits: {
        entity: {},
        nonbinary: {},
        woman: {
          firstName: ['Achuak', 'Aesthyr', 'Athear', 'Caesin', 'Darastrix', 'Edar', 'Irhtos', 'Isk', 'Jhank', 'Kepesk', 'Kethend', 'Kosj', 'Kothar', 'Mirik', 'Othokent', 'Throden', 'Usk', 'Ulhar', 'Vignar', 'Vorel'],
          beardProbability: 0,
          baseHeight: 65,
          baseWeight: 200,
          heightModifier: () => dice(2, 10),
          weightModifier: () => dice(2, 6)
        },
        man: {
          firstName: ['Achuak', 'Aryte', 'Arytiss', 'Baeshra', 'Darastrix', 'Garurt', 'Jhank', 'Kepesk', 'Korth', 'Kosj', 'Litrix', 'Mirik', 'Othokent', 'Sauriv', 'Thurkear', 'Usk', 'Valignat', 'Vargach', 'Verthica', 'Vutha', 'Vyth'],
          beardProbability: 0,
          baseHeight: 65,
          baseWeight: 210,
          heightModifier: () => dice(2, 10),
          weightModifier: () => dice(2, 6)
        }
      },
      lastName: [''],
      eyes: ['yellow'],
      raceWords: {
        raceName: 'lizardfolk',
        racePlural: 'lizardfolk',
        raceSingular: 'lizardfolk',
        raceAdjective: 'lizardfolk',
        raceLanguage: 'Draconic'
      },
      knownLanguages: ['Common', 'Draconic'],
      beard: [''],
      abilities: {
        'Cunning Artisan': "As part of a short rest, you can harvest bone and hide from a slain beast, construct, dragon, monstrosity, or plant creature of size Small or larger to create one of the following items: a shield, a club, a javelin, or 1d4 darts or blowgun needles. To use this trait, you need a blade, such as a dagger, or appropriate artisan's tools, such as leatherworker's tools.",
        'Hold Breath': 'You can hold your breath for up to 15 minutes at a time.',
        "Hunter's Lore": 'You gain proficiency with two of the following skills of your choice: Animal Handling, Nature, Perception, Stealth, and Survival.',
        'Natural Armor': "You have tough, scaly skin. When you aren't wearing armor, your AC is 13 + your Dexterity modifier. You can use your natural armor to determine your AC if the armor you wear would leave you with a lower AC. A shield's benefits apply as normal while you use your natural armor.",
        'Hungry Jaws': "In battle, you can throw yourself into a vicious feeding frenzy. As a bonus action, you can make a special attack with your bite. If the attack hits, it deals its normal damage, and you gain temporary hit points (minimum of 1) equal to your Constitution modifier, and you can't use this trait again until you finish a short or long rest."
      }
    }
  };

  /**
   * @param specs Object containing elements as properties and their weight as value
   */

  function weightRandom(specs) {
    const specsKeys = keys(specs);
    let totalWeight = 0;

    for (const prop of specsKeys) {
      totalWeight += validateWeight(specs[prop]);
    }

    const value = randomFloat(1);
    let sum = 0;

    for (const prop of specsKeys) {
      sum += validateWeight(specs[prop]) / totalWeight;
      if (value <= sum) return prop;
    }

    console.error('Invalid random roll!');
    return specsKeys[specsKeys.length - 1];
  }
  function validateWeight(weight) {
    if (typeof weight === 'number') {
      return weight;
    }

    throw new TypeError(`Weight "${weight}" is not a number.`);
  }

  /**
   * An alternative, stricter typed version of `Object.keys`.
   *
   * @example
   * const obj = { a: 0, b: 1 }
   * Object.keys(obj) // string[]
   * keys(obj) // "a" | "b"
   */

  function keys(object) {
    return Object.keys(object);
  }
  /**
   * An alternative to `Object.assign`,
   * which asserts that the properties are added to the type.
   *
   * @example
   * const obj = { a: 0, b: 1}
   * assign(obj, { c: 2 }) // Typescript now knows that c is available.
   */

  function assign(target, source) {
    Object.assign(target, source);
  }
  /**
   * Freezes objects to prevent accidental mutation.
   * To improve speed, it does not apply in production mode.
   */

  function freeze(obj) {

    return Object.freeze(obj);
  }
  /**
   * Recursive variant of `freeze`
   */

  function deepFreeze(obj) {

    for (const key of keys(obj)) {
      if (Object.isFrozen(obj[key])) {
        continue;
      }

      if (typeof obj[key] === 'object') {
        deepFreeze(obj[key]);
      }
    }

    return freeze(obj);
  }
  /**
   * Error class for assertion errors.
   */

  class AssertionError extends Error {}
  /**
   * Asserts that a condition is true.
   * Any code after this assertion will consider the condition to be true.
   * See https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-7.html#assertion-functions
   *
   * @example
   * // Before, 'value' is of an unknown type.
   * assert(typeof value === 'string')
   * // After, 'value' is known to be a string.
   */

  function assert(condition, message) {
    if (!condition) {
      throw new AssertionError(message);
    }
  }
  /**
   * Returns the first element of an array or string.
   */

  function first(array) {
    return array[0];
  }
  /**
   * Returns the last element of an array.
   */

  function last(array) {
    return array[array.length - 1];
  }
  function clamp(value, min, max) {
    if (!min) min = 0;
    if (!max) max = 100;
    return Math.min(Math.max(value, min), max);
  }
  /**
   * Somewhat low quality UUID generation,
   * based on the seeded randomness.
   */

  function getUUID() {
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, char => {
      const randomValue = randomFloat(16) | 0;
      const value = char === 'x' ? randomValue : randomValue & 0x3 | 0x8;
      return value.toString(16);
    });
  }
  function isDefined(value) {
    return typeof value !== 'undefined';
  }
  function isUndefined(value) {
    return typeof value === 'undefined';
  }
  /**
   * Removes a value from the array.
   */

  function removeFromArray(array, value) {
    array.splice(array.indexOf(value), 1);
  }
  /**
   * Uses a predicate callback to remove a value from an array.
   */

  function removeFromArrayByPredicate(array, predicate) {
    array.splice(array.findIndex(predicate), 1);
  }
  /**
   * Calls a function N number of times.
   */

  function repeat(fn, times) {
    for (let i = 0; i < times; i++) fn(i);
  }
  function capitalizeFirstLetter(text) {
    return text.charAt(0).toUpperCase() + text.slice(1);
  }
  function sumWeights(defaultWeights, customWeights) {
    const finalWeights = {};

    for (const name of keys(customWeights)) {
      const weight = validateWeight(customWeights[name]);
      const defaultWeight = defaultWeights[name] ?? 0;
      finalWeights[name] = defaultWeight + weight;
    }

    return finalWeights;
  }

  /* eslint-disable @typescript-eslint/no-non-null-assertion */

  const _overrides = new Map(); // lifted from: https://github.com/tandrewnichols/indefinite/blob/master/lib/irregular-words.js


  const _defaultIrregulars = [// e
  'eunuch', 'eucalyptus', 'eugenics', 'eulogy', 'euphemism', 'euphony', 'euphoria', 'eureka', 'european', 'euphemistic', 'euphonic', 'euphoric', 'euphemistically', 'euphonically', 'euphorically', // h
  'heir', 'heiress', 'herb', 'homage', 'honesty', 'honor', 'honour', 'hour', 'honest', 'honorous', 'honestly', 'hourly', // o
  'one', 'ouija', 'once', // u
  'ubiquitous', 'ugandan', 'ukrainian', 'unanimous', 'unicameral', 'unified', 'unique', 'unisex', 'universal', 'urinal', 'urological', 'useful', 'useless', 'usurious', 'usurped', 'utilitarian', 'utopic', 'ubiquitously', 'unanimously', 'unicamerally', 'uniquely', 'universally', 'urologically', 'usefully', 'uselessly', 'usuriously'];
  const _validArticles = ['a', 'an'];
  const _vowels = /[aeiou8]/i;
  const _acronyms = /[A-Z]+$/;
  const _irregularAcronyms = /[UFHLMNRSX]/;
  const _punctuation = /[.,\/#!$%\^&\*;:{}=\-_`~()]/g;

  function _switch(article) {
    return article === 'a' ? 'an' : 'a';
  }

  function _isAcronym(word, article) {
    if (_acronyms.test(word) && _irregularAcronyms.test(first(word))) {
      return _switch(article);
    }

    return false;
  }

  function _isDefaultIrregular(word, article) {
    if (_defaultIrregulars.includes(word.toLowerCase())) {
      return _switch(article);
    }

    return false;
  }
  /**
   * Must be called in story JS or StoryInit, as the override map isn't stateful.
   */


  function addOverride(article, word, caseSensitive) {
    // check args
    if (!word || typeof word !== 'string') {
      const message = 'cannot add article override -> invalid word';
      console.error(message);
      return message;
    }

    if (article && typeof article === 'string') {
      // clean up article
      article = article.toLowerCase().trim();
    }

    if (!_validArticles.includes(article)) {
      const message = 'cannot add article override -> invalid article, must be "a" or "an"';
      console.error(message);
      return message;
    } // clean up phrase


    word = word.trim();

    _overrides.set(caseSensitive ? word : word.toLowerCase(), {
      article,
      caseSensitive: !!caseSensitive
    });
  }

  function _checkOverrides(word) {
    word = word.trim(); // check user-defined overrides

    const check = word.toLowerCase();

    if (_overrides.has(check) || _overrides.has(word)) {
      const override = _overrides.get(check) || _overrides.get(word); // check if we require an exact (case-sensitive) match


      if (override.caseSensitive && !_overrides.has(word)) {
        return null;
      } // return the article


      return override.article;
    } // return nothing, passing on to built-in article checks


    return null;
  }

  function _checkVowels(word) {
    // select the article based on vowels
    const article = _vowels.test(first(word)) ? 'an' : 'a'; // check for irregular words, then acronyms

    return _isDefaultIrregular(word, article) || _isAcronym(word, article) || article;
  }

  function find(word) {
    if (!word || typeof word !== 'string') {
      return;
    }

    let cleanedWord = word.trim().split(' ')[0].trim();
    cleanedWord = cleanedWord.replace(_punctuation, '');
    return _checkOverrides(cleanedWord) || _checkVowels(cleanedWord);
  }

  function article(word, upper) {
    if (!word || typeof word !== 'string') {
      console.error(`"${word}" is not in an acceptable format.`);
      return word; // ? just throw back whatever we got
    }

    const article = find(word) || ''; // return article, capitalized if requested, appended to the original phrase

    return `${upper ? capitalizeFirstLetter(article) : article} ${word}`;
  }

  const articles = {
    find,
    output: article,
    override: addOverride
  };

  const DEFAULT_PROBABILITY = 10;
  /**
   * @param town Needed because everything needs town to evaluate
   *
   * @param args The object containing the objects that you're drawing from
   *
   * @param obj The optional npc, building, or whatever that is needed for functions.
   *
   * @param exclusionFunction The optional global exclusion testing function;
   * this is for things like pulling just the paper type objects from plothooks.
   * Saves on LoC. Leave exclusionFunction blank if everything in your object is
   * always going to be allowed.
   *
   * @param output What should be outputted at the end. Set to 'object' to return the whole object.
   * defaultProbability is the optional default unit. You won't usually need to supply this.
   */

  const weightedRandomFetcher = (town, args, obj, exclusionFunction, output = 'function') => {
    console.groupCollapsed('Running a weighted random search...');
    console.log({
      args,
      obj,
      exclusionFunction,
      output
    });
    const pool = [];
    let totalWeight = 0;
    let argArray;

    if (typeof args === 'object') {
      argArray = Object.values(args);
    } else {
      argArray = args;
    }

    for (const arg of argArray) {
      let isValid;
      let fnValid;

      if (typeof arg.exclusions === 'function' && obj) {
        isValid = arg.exclusions(town, obj);
      } else {
        isValid = true;
      }

      if (typeof arg.probability === 'number' && arg.probability <= 0) {
        isValid = false;
      }

      if (typeof exclusionFunction === 'function') {
        fnValid = exclusionFunction(town, arg);
      } else {
        fnValid = true;
      }

      if (isValid === true && fnValid === true) {
        pool.push(arg);
        totalWeight += arg.probability || DEFAULT_PROBABILITY;
      }
    }

    let random = Math.floor(randomFloat(1) * totalWeight);
    let selected;

    for (const item of pool) {
      random -= item.probability || DEFAULT_PROBABILITY;

      if (random < 0) {
        selected = item;
        break;
      }
    }

    console.log(selected);
    console.groupEnd();

    if (typeof selected === 'undefined') {
      throw new Error('Selected is not defined.');
    } // If the string 'object' is passed, then it returns the object itself.


    if (output === 'object') {
      return selected;
    }

    const property = selected[output];

    if (!property) {
      throw new Error(`The randomly fetched object does not have the property ${output}.`);
    }

    if (typeof property === 'function') {
      const value = property(town, obj);
      console.log(value);
      return value;
    }

    console.log(property);
    return property;
  };

  const roads = {
    /**
     * Adds checks for road duplication; use this one for assigning to randomly generated buildings.
     */
    assign: (town, building) => {
      console.groupCollapsed('Assigning a road...');
      let road;

      if (random(100) < townData.type[town.type].roadDuplication) {
        const tempRoad = roads.findExisting(town);
        if (tempRoad) road = tempRoad; // if it doesn't find a suitable road, make a new one.
        // @ts-expect-error Road might be defined if it's selected above.

        if (!road) {
          road = roads.create(town, {
            type: random(roads.width.largeRoads),
            rolls: {
              width: random(80, 100),
              wealth: random(1, 100)
            }
          });
          town.roads[road.key] = road;
        }
      } else {
        road = roads.create(town);
        town.roads[road.key] = road;
      }

      if (road && building) {
        roads.addBuilding(town, road, building);
      }

      console.log(road);
      console.groupEnd();
      return road;
    },
    findExisting: town => {
      console.log('Searching for an existing road...');

      for (const key in town.roads) {
        if (town.roads[key].currentOccupancy >= town.roads[key].capacity) {
          console.log(`${town.roads[key].name} is at its capacity of ${town.roads[key].capacity}!`);
          continue;
        } else if (town.roads[key].currentOccupancy < town.roads[key].capacity) {
          return town.roads[key];
        }
      }

      return undefined;
    },

    /** Creates the road */
    create: (town, opts) => {
      // ______ is a ${width} ${type}. It is ${material} which ${is named after | road description }.
      console.log('Creating a road...');
      const roadPrefix = roads.name.create(town);
      console.log('Finding a type...');
      const type = weightedRandomFetcher(town, roads.name.type, null, undefined, 'object');
      const feature = roads.get.features(type);
      const widthRoll = type.width();
      const [, width] = roads.width.rolls.find(([threshold]) => {
        return threshold <= widthRoll;
      }) || last(roads.width.rolls);
      const road = {
        prefix: capitalizeFirstLetter(roadPrefix.prefix),
        key: getUUID(),
        passageName: 'RoadProfile',
        width,
        objectType: 'road',
        feature,
        namesake: roadPrefix.namesake || undefined,
        type: capitalizeFirstLetter(type.name),
        wordNoun: type.wordNoun || type.name,
        hasTraffic: type.hasTraffic || true,
        isDeadEnd: type.hasTraffic || false,
        rolls: {
          width: widthRoll,
          wealth: random(1, 100)
        },
        currentOccupancy: 0,
        inhabitants: {
          npcs: {},
          buildings: {},
          factions: {}
        },
        ...opts
      };
      assign(road, {
        name: toTitleCase(`${road.prefix} ${road.type}`),
        tier: getBuildingTier(town.roll.wealth, road.rolls.wealth),
        capacity: roads.width.getCapacity(road)
      });
      const material = roads.material.get(town, road);

      if (typeof material.roadMaterialTypes === 'undefined') {
        throw new Error('Could not get array of road material types.');
      }

      const constructionMethod = random(material.roadMaterialTypes);
      assign(road, {
        constructionMethod: roads.material.types[constructionMethod].type,
        materialUsed: material.noun
      });
      const materialUsedDescriptor = getUsedMaterialDescriptor(road);
      assign(road, {
        materialDescription: random(roads.material.types[constructionMethod].description)
      });
      assign(road, {
        description: `${road.name} is ${articles.output(`${road.width} ${materialUsedDescriptor}`)} ${road.wordNoun}. It is ${road.materialDescription} ${road.feature} `
      });

      if (road.namesake?.reason) {
        road.description += road.namesake.reason;
      }

      if (type.precedingText) {
        road.precedingText = type.precedingText(town, road);
      } else {
        road.precedingText = roads.precedingText.default(town, road);
      }

      return road;
    },
    name: {
      create(town) {
        console.log('Creating a road name...');
        const probabilities = {
          properNoun: 5,
          firstName: 2,
          lastName: 2
        };
        const selected = weightRandom(probabilities);
        const namesake = createNamesake(town);
        console.log('selected ', selected);
        let road;

        switch (selected) {
          case 'firstName':
            road = {
              prefix: random(1, 100) > 60 ? `${namesake.firstName}'s` : namesake.firstName,
              canBePossessive: true,
              isUnique: false,
              namesake
            };
            break;

          case 'lastName':
            road = {
              prefix: random(1, 100) > 90 ? `${namesake.lastName}'s` : namesake.lastName,
              canBePossessive: true,
              isUnique: false,
              namesake
            };
            break;

          default:
            road = weightedRandomFetcher(town, properNouns, undefined, undefined, 'object');
        }

        assign(road, {
          roadNameType: selected
        });

        if (road.namesake && !road.namesake.reason) {
          road.namesake.reason = roads.namesakes.reason(town, road.namesake);
        }

        return road;
      },

      type: {
        street: {
          name: 'street',

          width() {
            return random(0, 90);
          },

          probability: 8,
          wordNoun: 'street'
        },
        lane: {
          name: 'lane',

          width() {
            return random(5, 40);
          },

          features: ['Houses lean over into the street on both sides, limiting the amount of sun that is visible.', 'Laundry lines are strung between windows across the road.', 'There is a table with a pitcher of water out the front of one of the houses.', 'A swing hangs from a lone tree.'],
          probability: 5,
          wordNoun: 'lane'
        },
        road: {
          name: 'road',
          probability: 10,

          width() {
            return random(10, 90);
          },

          wordNoun: 'road',
          features: ['There is a large rock to the side of the road.', 'The road has a groove along the middle designating which side people should travel on.', 'The road has the occasional pothole.', 'There are some potholes which litter the road.']
        },
        square: {
          name: 'square',

          width() {
            return random(92, 99);
          },

          hasTraffic: false,
          wordNoun: 'square',
          probability: 2,
          features: ['It looks like the square is an excellent place to meet friends, with several tables set up in the middle for the public to use.', 'The square has a handy map board in the middle, detailing where everything is.', 'There is a statue of someone dead and important in the middle of the square.', 'There are the occasional street sellers hawking their goods in the square.'],

          precedingText(town, road) {
            const text = [{
              function() {
                return `<<profile '${road.key}'>> houses`;
              }

            }, {
              function() {
                return `The former site of a building, the now clear <<profile '${road.key}'>> is home to`;
              }

            }, {
              function() {
                return `There's a nice little square, <<profile '${road.key}'>>, where there is`;
              }

            }];
            const result = weightedRandomFetcher(town, text, road, undefined, 'function');
            return result;
          }

        },
        way: {
          name: 'way',
          probability: 2,

          width() {
            return random(0, 80);
          },

          wordNoun: 'road'
        },
        crescent: {
          name: 'crescent',

          width() {
            return random(40, 80);
          },

          probability: 1,
          wordNoun: 'road',
          features: ['A row of houses and buildings is splayed out, with enough room for a horse and cart to turn around.', 'An arch of houses is punctuated by a single large tree in between them, with a picnic table beneath it.'],

          precedingText(town, road) {
            const isTheRoad = random([`is the ${road.wordNoun} <<profile '${road.key}'>>. On it is`, `is the ${road.wordNoun} <<profile '${road.key}'>>, on which is`, `is the ${road.wordNoun} <<profile '${road.key}'>>, where there is`]);
            const text = [{
              function() {
                return `Further into the residential area ${isTheRoad}`;
              }

            }, {
              function() {
                return `At the bottom of a hill ${isTheRoad}`;
              }

            }, {
              function() {
                return `At the top of a small hill ${isTheRoad}`;
              }

            }];
            const result = weightedRandomFetcher(town, text, road, undefined, 'function');
            return result;
          }

        },
        close: {
          name: 'close',
          isDeadEnd: true,

          width() {
            return random(40, 80);
          },

          probability: 2,
          wordNoun: 'cul-de-sac',

          precedingText(town, road) {
            const isTheRoad = random([`is the ${road.wordNoun} <<profile '${road.key}'>>. Just near the end of the road is`, `is the ${road.wordNoun} <<profile '${road.key}'>>. Perhaps twenty paces from the end of it is`, `is the ${road.wordNoun} <<profile '${road.key}'>>. Near the end is`]);
            const text = [{
              function() {
                return `The street <<profile '${road.key}'>> comes to an abrupt end, terminating in`;
              }

            }, {
              function() {
                return `At the bottom of a hill ${isTheRoad}`;
              }

            }, {
              function() {
                return `At the top of a small hill ${isTheRoad}`;
              }

            }];
            const result = weightedRandomFetcher(town, text, road, undefined, 'function');
            return result;
          }

        },
        wynd: {
          name: 'wynd',

          width() {
            return random(30);
          },

          hasTraffic: false,
          probability: 1,
          wordNoun: 'road',

          precedingText(town, road) {
            const isTheRoad = random([`is the ${road.wordNoun} <<profile '${road.key}'>>. Just near the end of the road is`, `is the ${road.wordNoun} <<profile '${road.key}'>>. Perhaps twenty paces from the end of it is`, `is the ${road.wordNoun} <<profile '${road.key}'>>. Near the end is`]);
            const text = [{
              function() {
                return `The road <<profile '${road.key}'>> twists around, with many turns. On the side is`;
              }

            }, {
              function() {
                return `The road <<profile '${road.key}'>> is quite windy indeed. Nestled in between a bend is`;
              }

            }, {
              function() {
                return `Snaking along ${isTheRoad}`;
              }

            }];
            const result = weightedRandomFetcher(town, text, road, undefined, 'function');
            return result;
          }

        },
        row: {
          name: 'row',
          probability: 1,

          width() {
            return random(0, 80);
          },

          wordNoun: 'road',

          precedingText(town, road) {
            const isTheRoad = roads.precedingText.isTheRoad(town, road);
            const text = [{
              function() {
                return `<<profile '${road.key}'>> is home to`;
              }

            }, {
              function() {
                return `Slightly further afield is <<profile '${road.key}'>>, where there is`;
              }

            }, {
              function() {
                return `Running parallel to other roads ${isTheRoad}`;
              }

            }];
            const result = weightedRandomFetcher(town, text, road, undefined, 'function');
            return result;
          }

        },
        dyke: {
          name: 'dyke',

          width() {
            return random(0, 60);
          },

          features: ['The land on either side is rather soggy and prone to being water-logged.', 'Weeds grow rampant along the sides of the road, fed by the water running off to the sides.'],
          probability: 1,
          wordNoun: 'road'
        },
        avenue: {
          name: 'avenue',

          width() {
            return random(40, 80);
          },

          features: ['A line of trees dots the sides.', 'A couple of sad looking trees dot the sides of the road.', 'Wrought iron oil-burning street lamps illuminate the broad avenue well into the late evening hours.'],
          probability: 1,
          wordNoun: 'road',

          precedingText(town, road) {
            const text = [{
              function() {
                return `<<profile '${road.key}'>> is a nice looking street, which houses`;
              }

            }, {
              function() {
                return `There's a couple houses along <<profile '${road.key}'>>, and nestled in between them is`;
              }

            }, {
              function() {
                return `There's an island in the middle of <<profile '${road.key}'>>, where there is`;
              }

            }];
            const result = weightedRandomFetcher(town, text, road, undefined, 'function');
            return result;
          }

        },
        alley: {
          name: 'alley',

          width() {
            return random(0, 40);
          },

          features: ['There is a pile of rotten logs to the side.', 'Several barrels are stacked haphazardly.', 'There are some vegetable scraps that have clearly been dumped out of a window', 'There are some empty alcohol bottles on the ground.'],
          hasTraffic: false,
          probability: 1,
          wordNoun: 'alley',

          exclusions(town) {
            return town.population > 4000;
          },

          precedingText(town, road) {
            const isTheRoad = roads.precedingText.isTheRoad(town, road);
            const text = [{
              function() {
                return `<<profile '${road.key}'>> is a relatively shady looking alleyway, which houses`;
              }

            }, {
              function() {
                return `Running alongside two rows of buildings is <<profile '${road.key}'>>. One of the spaces is filled by`;
              }

            }, {
              function() {
                return `There's a little alley, which ${isTheRoad}`;
              }

            }];
            const result = weightedRandomFetcher(town, text, road, undefined, 'function');
            return result;
          }

        },
        drive: {
          name: 'drive',
          features: ['There is a nice looking house at the end of the road.', 'There is a collection of three slightly larger than average houses bundled at the end of the drive.'],

          width() {
            return random(40, 80);
          },

          probability: 1,
          wordNoun: 'road',
          isDeadEnd: true,

          precedingText(town, road) {
            const isTheRoad = roads.precedingText.isTheRoad(town, road);
            const text = [{
              function() {
                return `<<profile '${road.key}'>> looks to be residential. There is, however, `;
              }

            }, {
              function() {
                return `There's a couple houses along <<profile '${road.key}'>>, and nestled in between them is`;
              }

            }, {
              function() {
                return `There's a little dead end for houses, which ${isTheRoad}`;
              }

            }];
            const result = weightedRandomFetcher(town, text, road, undefined, 'function');
            return result;
          }

        },
        boulevard: {
          name: 'boulevard',

          width() {
            return random(50, 90);
          },

          features: ['There is a median through the middle of the road.', 'Trees are planted along the sides.'],
          probability: 1,
          wordNoun: 'road',

          precedingText(town, road) {
            const isTheRoad = roads.precedingText.isTheRoad(town, road);
            const text = [{
              function() {
                return `Off a junction is <<profile '${road.key}'>>, where there is`;
              }

            }, {
              function() {
                return `A side street in the ${town.type} leads to another, which in turn ${isTheRoad}`;
              }

            }, {
              function() {
                return `There's a clear space in ${town.name}, which ${isTheRoad}`;
              }

            }];
            const result = weightedRandomFetcher(town, text, road, undefined, 'function');
            return result;
          }

        },
        plaza: {
          name: 'plaza',

          width() {
            return random(50, 90);
          },

          probability: 1,
          wordNoun: 'road',
          features: ['There are some street sellers hawking their wares in the plaza.', 'There\'s a well in the centre of the plaza.'],

          precedingText(town, road) {
            const isTheRoad = roads.precedingText.isTheRoad(town, road);
            const text = [{
              function() {
                return `In the heart of the ${town.type} is <<profile '${road.key}'>>, where there is`;
              }

            }, {
              function() {
                return `In the centre of the ${town.type} ${isTheRoad}`;
              }

            }, {
              function() {
                return `There's a clear space in ${town.name}, which ${isTheRoad}`;
              }

            }];
            const result = weightedRandomFetcher(town, text, road, undefined, 'function');
            return result;
          }

        },
        track: {
          name: 'track',

          width() {
            return random(0, 50);
          },

          probability: 1,
          material: 'dirt',
          wordNoun: 'track',
          features: ['It\'s obvious that this track is shared by some of the local wildlife as well.', 'There\'s some native plants growing along the side of the track.', 'There are some edible native fruits growing on the side of the track.', 'It\'s a desire path, which has been trodden into submission.'],

          exclusions(town) {
            return town.population < 500;
          },

          precedingText(town, road) {
            const isTheRoad = roads.precedingText.isTheRoad(town, road);
            const text = [{
              function() {
                return `Further out of the ${town.type} is <<profile '${road.key}'>>, where there is`;
              }

            }, {
              function() {
                return `Out of the ${town.type} proper ${isTheRoad}`;
              }

            }, {
              function() {
                return `At the top of a small hill outside of ${town.name} ${isTheRoad}`;
              }

            }];
            const result = weightedRandomFetcher(town, text, road, undefined, 'function');
            return result;
          }

        },
        trail: {
          name: 'trail',

          width() {
            return random(0, 40);
          },

          probability: 1,
          material: 'dirt',
          wordNoun: 'trail',
          features: ['There are some animal droppings on the trail.', 'There\'s a half-rotted rabbit which clearly met an untimely demise that has been kicked to the side of the trail.', 'There is a tiny little skeleton of some small mammal buried in the grass.', 'The weeds are thick, and in parts it is difficult to actually discern where the trail is.', 'The weeds threaten to overthrow the trail\'s relative order.'],

          exclusions(town) {
            return town.population < 500;
          },

          precedingText(town, road) {
            const isTheRoad = roads.precedingText.isTheRoad(town, road);
            const text = [{
              function() {
                return `Further out of the ${town.type} is <<profile '${road.key}'>>, where there is`;
              }

            }, {
              function() {
                return `Out of the ${town.type} proper ${isTheRoad}`;
              }

            }, {
              function() {
                return `At the top of a small hill outside of ${town.name} ${isTheRoad}`;
              }

            }];
            const result = weightedRandomFetcher(town, text, road, undefined, 'function');
            return result;
          }

        }
      }
    },
    get: {
      features(type) {
        const roadType = roads.name.type[type.name];

        if (roadType.features && random(100) > 50) {
          return random(roadType.features);
        }

        return random(roads.features);
      }

    },
    features: ['Helpful sign posts are dotted along the road pointing out the names of other streets.', 'Grated storm drains at regular intervals grant access to the sewer system.', 'There are rows of potted plants and herbs, the produce of which people are free to pick at their leisure.', "There's a letterbox at the end of the drive for an impressive looking house.", "There's a wagon with a cracked wheel by the side of the road.", 'The street is covered with painted footsteps, a coloured trail seemingly leading off to notable buildings.', 'Deep ditches border the road, carrying waste and refuse down the hill.', 'There\'s a bench on the side of the road, with the wood being smoothed out from many sittings.', 'There\'s a laundry line connecting two houses that are slightly closer together than usual.', 'A crude drawing of an animal carved into a brick wall, affectionately labeled “R.G. Was here.”', 'A tree has a little heart carved into it, with the name Claire inside.', 'One of the houses on the side leans concerningly far over the road.'],
    namesakes: {
      reason(town, namesake) {
        const fullName = `${namesake.firstName} ${namesake.lastName}`;
        const race = namesake.race;
        const namedAfter = random(['It was named after', 'It has been named after', 'Its name comes from', 'The name comes from', "The road's name comes from", 'The road was named after']);
        const raceOutput = articles.output(race);
        const raceAdjectiveOutput = articles.output(raceTraits[race].raceWords.raceAdjective);
        return random([`${namedAfter} ${fullName}, who was ${raceOutput} who ruled wisely for many years.`, `${namedAfter} ${fullName}, who was ${raceOutput} who bought the naming rights to the road.`, `${namedAfter} ${fullName}, who was ${raceOutput} who brought riches to the people of ${town.name}.`, `${namedAfter} ${fullName}, who was the person who built the road.`, `${namedAfter} ${fullName}, ${raceOutput} who sat on the council for many years.`, `${namedAfter} ${fullName}, ${raceOutput} who cared for orphans.`, `${namedAfter} ${fullName}, ${raceOutput} who lived there before setting off into the world, becoming relatively famous.`, `${namedAfter} ${fullName}, ${raceOutput} who produced a staggering ${random(12, 21)} children.`, `${namedAfter} ${fullName}, ${raceOutput} who once killed an ogre that was threatening the ${town.type} of ${town.name} with a sling.`, `${namedAfter} ${fullName}, ${raceOutput} who helped establish the ${town.type} of ${town.name}.`, `${namedAfter} ${fullName}, ${raceOutput} who was one of the first settlers of ${town.name}.`, `${namedAfter} ${fullName}, ${raceOutput} who lived in ${town.name} for many, many years, maintaining the oral history.`, `${namedAfter} ${fullName}, ${raceAdjectiveOutput} judge who was renowned in ${town.name} for being totally impartial and fair.`, `${namedAfter} ${fullName}, ${raceAdjectiveOutput} guard who was renowned in ${town.name} for capturing dangerous criminals.`, `${namedAfter} ${fullName}, ${raceAdjectiveOutput} politician who was beloved in ${town.name} for various social reforms.`, `${namedAfter} ${fullName}, ${raceAdjectiveOutput} soldier who prevented a war.`, `${namedAfter} ${fullName}, ${raceAdjectiveOutput} messenger who delivered a critical message to the guards of ${town.name} after three days of non-stop running.`, `${namedAfter} ${fullName}, who fought with the council for many years to have the road renamed after them.`, `${namedAfter} ${fullName}, who was a well respected local who was killed in war.`, `${namedAfter} ${fullName}, who was a very respected local who was captured in war, but did not reveal any secrets while being tortured.`, `${namedAfter} ${fullName}, who was a much beloved prostitute, one of whose clients bought the road as a thankyou.`, `${namedAfter} ${fullName}, who was an adventurer who killed the hags that had stolen some of the children of ${town.name}.`, `${namedAfter} somebody who changed the street name as a prank- it stuck, and never got changed back.`, `${namedAfter} a much loved dog.`, `${namedAfter} a much loved cat.`, `${namedAfter} the ${namesake.lastName} family who have lived there for generations.`, `${namedAfter} the ${namesake.lastName} family who wield an amount of political power.`]);
      }

    },
    precedingText: {
      default(town, road) {
        const isTheRoad = roads.precedingText.isTheRoad(town, road);
        const text = [{
          function() {
            return `The ${road.wordNoun} <<profile '${road.key}'>> comes to an abrupt end, terminating in`;
          }

        }, {
          function() {
            return `At the bottom of a hill ${isTheRoad}`;
          }

        }, {
          function() {
            return `Further towards the centre of ${town.name} ${isTheRoad}`;
          }

        }, {
          function() {
            return `Nearby ${isTheRoad}`;
          }

        }, {
          function() {
            return `On <<profile '${road.key}'>> is`;
          }

        }, {
          function() {
            return `Along <<profile '${road.key}'>> is`;
          }

        }, {
          function() {
            return `Over on <<profile '${road.key}'>> is`;
          }

        }, {
          function() {
            return `At the top of a small hill ${isTheRoad}`;
          }

        }];
        const result = weightedRandomFetcher(town, text, road, undefined, 'function');
        return result;
      },

      isTheRoad(town, road, overrides) {
        let pre = [`is the ${road.wordNoun}`, 'is'];
        let after = ['. Along it is', '. Nearby is', '. Near it is', ', and nearby is'];

        if (overrides) {
          if (overrides.pre) pre = overrides.pre;
          if (overrides.after) after = overrides.after;
        }

        return `${random(pre)} <<profile '${road.key}'>>${random(after)} `;
      }

    },
    width: {
      /**
       * @example [size, number of buildings allowed]
       * @description So not everything is all on the same bloody street.
      */
      capacity: [[90, 20], [50, 10], [40, 7], [20, 4], [0, 2]],

      getCapacity(road) {
        let allowableNumber = roads.width.capacity.find(number => {
          return road.rolls.width >= number[0];
        });
        console.log(allowableNumber);
        if (!allowableNumber) allowableNumber = [0, 1];
        return allowableNumber[1];
      },

      rolls: [[100, 'courtyard-sized'], [90, 'wide, multi-lane'], [80, 'rather wide'], [70, 'wide'], [60, 'broad'], [50, ''], [35, 'narrow'], [30, 'rather narrow'], [25, 'very narrow'], [10, 'path-sized'], [0, 'claustrophobically narrow']],
      largeRoads: ['plaza', 'road', 'row', 'crescent', 'way', 'square']
    },
    material: {
      get(town, road) {
        console.log('Getting road material...');
        const tempMaterials = {}; // cloning town.materialProbability so we can mutate it

        keys(town.materialProbability).forEach(key => {
          tempMaterials[key] = town.materialProbability[key];
        });

        for (const material of keys(tempMaterials)) {
          console.log(material);

          if (!tempMaterials[material].roadMaterialTypes) {
            delete tempMaterials[material];
            continue;
          }

          if (tempMaterials[material].tier.indexOf(road.tier) !== -1) {
            tempMaterials[material].probability = 5;
          }
        }

        if (tempMaterials[town.townMaterial]) {
          tempMaterials[town.townMaterial].probability = 80;
        }

        return weightedRandomFetcher(town, tempMaterials, undefined, roads.material.exclusions, 'object');
      },

      exclusions(town, arg) {
        return !!arg.roadMaterialTypes;
      },

      types: {
        dirt: {
          type: 'dirt',
          description: ['two thin lines of dirt road with grass growing around and in between them.', 'well trodden, though slightly muddy.', 'a desire path, with the grass just gently trodden down.', 'made of dirt that has been gently packed down.', 'made of dirt that has been packed down.', 'made of dirt that has been packed down. Unfortunately, it was done a long time ago, and is deteriorating slightly.']
        },
        gravel: {
          type: 'gravel',
          description: ['made of noisy and shifting gravel. Better watch your footing.', 'a loose gravel that was taken from a river bed.', 'made of colourful rocks and pebbles.', 'made of poorly packed gravel, which shifts around under foot.']
        },
        pavement: {
          type: 'paved',
          description: ['a misshapen and uneven cobblestone.', 'made of polished marble, intricately paved to form repeating geometric pattern.', 'made of broad flagstones, hewn perfectly flat and level.', 'made of rough, slightly uneven stones previously used as ballast in ships.']
        },
        brick: {
          type: 'brick',
          description: ['paved with moss covered bricks, of all different shapes and sizes.', 'paved with deep red bricks, some stamped with the town seal.', 'missing several bricks in places. Grass shoots up in the voids, threatening to take over the road.', 'freshly laid. You can see where the sand is still settling into the cracks to hold them in place.', 'an arrangement of baked moss and artichoke coloured bricks, made from compressed Gnomegrass and Eldenoak sap mixture.']
        }
      }
    },
    deleteInhabitant: (town, road, key) => {
      if (Object.keys(road.inhabitants.buildings).contains(key)) roads.deleteBuilding(town, road, findInArray(town.buildings, 'key', key)); // if (Object.keys(road.inhabitants.factions).contains(key)) roads.deleteFaction(town, road, town.factions[key])
    },
    addBuilding: (town, road, building) => {
      road.currentOccupancy += building.roadSizeRequirement || Math.max(2, building.roll.size / 5);
      road.inhabitants.buildings[building.key] = building.type;
      building.road = road.key;
    },
    deleteBuilding: (town, road, building) => {
      road.currentOccupancy -= building.roadSizeRequirement || Math.max(2, building.roll.size / 5);
      building.road = getBuildingRoad(building, town).key;
    } // deleteFaction: (town: Town, road: Road, faction: Faction) => {
    // road.currentOccupancy -= faction.roadSizeRequirement || Math.max(2, faction.roll.size / 5)
    // faction.road = getFactionRoad(faction, town).key
    // }

  };
  const properNouns = {
    main: {
      prefix: 'main',
      isUnique: true,
      probability: 20,
      isBuilding: false
    },
    keep: {
      prefix: 'keep',
      isUnique: false,
      isBuilding: false
    },
    king: {
      prefix: 'king',
      canBePossessive: true,
      isUnique: false,
      isBuilding: false
    },
    queen: {
      prefix: 'queen',
      canBePossessive: true,
      isUnique: false,
      isBuilding: false
    },
    prince: {
      prefix: 'prince',
      canBePossessive: true,
      isUnique: false,
      isBuilding: false
    },
    princess: {
      prefix: 'princess',
      canBePossessive: true,
      isUnique: false,
      isBuilding: false
    },
    lord: {
      prefix: 'lord',
      isUnique: false,
      isBuilding: false
    },
    ladies: {
      prefix: 'ladies',
      isUnique: false,
      isBuilding: false
    },
    noble: {
      prefix: 'noble',
      canBePossessive: true,
      isUnique: false,
      isBuilding: false
    },
    duke: {
      prefix: 'duke',
      canBePossessive: true,
      isUnique: false,
      isBuilding: false
    },
    duchess: {
      prefix: 'duchess',
      canBePossessive: true,
      isUnique: false,
      isBuilding: false
    },
    rogue: {
      prefix: 'rogue',
      canBePossessive: true,
      isUnique: false,
      isBuilding: false
    },
    priest: {
      prefix: 'priest',
      canBePossessive: true,
      isUnique: false,
      isBuilding: false
    },
    abbott: {
      prefix: 'abbott',
      canBePossessive: true,
      isUnique: false,
      isBuilding: false
    },
    pope: {
      prefix: 'pope',
      isUnique: false,
      isBuilding: false
    },
    spring: {
      prefix: 'spring',
      canBePossessive: true,
      isUnique: false,
      isBuilding: false
    },
    winter: {
      prefix: 'winter',
      canBePossessive: true,
      isUnique: false,
      isBuilding: false
    },
    summer: {
      prefix: 'summer',
      canBePossessive: true,
      isUnique: false,
      isBuilding: false
    },
    autumn: {
      prefix: 'autumn',
      canBePossessive: true,
      isUnique: false,
      isBuilding: false
    },
    castle: {
      prefix: 'castle',
      isBuilding: 'castle',
      isUnique: false
    },
    butcher: {
      prefix: 'butcher',
      isBuilding: 'butcher',
      canBePossessive: true,
      probability: 20,
      isUnique: false
    },
    tailor: {
      prefix: 'tailor',
      isBuilding: 'tailor',
      canBePossessive: true,
      probability: 20,
      isUnique: false
    },
    smith: {
      prefix: 'smith',
      isBuilding: 'smithy',
      canBePossessive: true,
      probability: 20,
      isUnique: false
    },
    potter: {
      prefix: 'potter',
      isBuilding: 'potter',
      canBePossessive: true,
      probability: 20,
      isUnique: false
    },
    baker: {
      prefix: 'baker',
      isBuilding: 'bakery',
      canBePossessive: true,
      probability: 20,
      isUnique: false
    },
    farrier: {
      prefix: 'farrier',
      isBuilding: 'smithy',
      canBePossessive: true,
      probability: 20,
      isUnique: false
    },
    fisher: {
      prefix: 'fisher',
      canBePossessive: true,
      probability: 20,
      isUnique: false,
      isBuilding: false
    },
    old: {
      prefix: 'old',
      probability: 20,
      isUnique: false,
      isBuilding: false
    },
    new: {
      prefix: 'new',
      probability: 20,
      isUnique: false,
      isBuilding: false
    },
    common: {
      prefix: 'common',
      probability: 20,
      isUnique: false,
      isBuilding: false
    },
    high: {
      prefix: 'high',
      probability: 20,
      isUnique: false,
      isBuilding: false
    },
    low: {
      prefix: 'low',
      probability: 20,
      isUnique: false,
      isBuilding: false
    },
    north: {
      prefix: 'north',
      isUnique: false,
      isBuilding: false
    },
    south: {
      prefix: 'south',
      isUnique: false,
      isBuilding: false
    },
    west: {
      prefix: 'west',
      isUnique: false,
      isBuilding: false
    },
    east: {
      prefix: 'east',
      isUnique: false,
      isBuilding: false
    }
  };

  function getUsedMaterialDescriptor(road) {
    if (['gravel', 'dirt'].includes(road.constructionMethod)) {
      return `${road.constructionMethod} and ${road.materialUsed}`;
    }

    if (['brick'].includes(road.constructionMethod)) {
      return `${road.materialUsed} ${road.constructionMethod}`;
    }

    return `${road.constructionMethod} ${road.materialUsed}`;
  }

  function createBuilding(town, type, base = {}) {
    console.log('Creating base building...');
    console.log(base);
    const building = {
      key: getUUID(),
      objectType: 'building',
      road: '',
      type,
      roll: {
        magic: Math.floor(randomFloat(1) * 80) + 20,
        size: Math.floor(randomFloat(1) * 80) + 20,
        diversity: Math.floor(randomFloat(1) * 80) + 20,
        wealth: random(1, 100),
        population: random(1, 100),
        reputation: random(1, 100),
        sin: random(1, 100),
        roughness: random(1, 100),
        cleanliness: random(1, 100),
        expertise: random(1, 100),
        activity: random(1, 100)
      },
      priceModifier: getPriceModifier(),
      material: {
        noun: '',
        probability: 0
      },
      ...base
    }; // Not sure why we need to typecast this.

    clampRolls(building.roll);

    if (base.road) {
      console.log('Road defined!');
      lib.roads.addBuilding(town, town.roads[base.road], building);
    }

    if (!building.road) building.road = getBuildingRoad(building, town).key;
    assign(building, {
      material: generateBuildingMaterial(town, town.townMaterial, building.roll.wealth)
    });
    return building;
  }
  function getBuildingRoad(building, town) {
    if (building.parentKey) {
      console.log('Has a parent!');
      const parentBuilding = findBuilding(town, building.parentKey);
      if (parentBuilding) return town.roads[parentBuilding.road];
    }

    return roads.assign(town, building);
  }

  function getPriceModifier() {
    return Math.clamp(Math.floor(randomFloat(1) * 8) - random([0, 10]), -10, 10);
  }

  function generateBuildingMaterial(town, mainMaterial, buildingWealth) {
    // Set probability for other buildings depending on the building 'tier'
    const buildingTier = getBuildingTier(town.roll.wealth, buildingWealth);

    for (const material of Object.keys(town.materialProbability)) {
      if (town.materialProbability[material].tier.indexOf(buildingTier) !== -1) {
        town.materialProbability[material].probability = 5;
      }
    }

    town.materialProbability[mainMaterial].probability = 80;
    const tempMaterial = weightedRandomFetcher(town, town.materialProbability, undefined, undefined, 'object');
    return tempMaterial;
  }
  function getBuildingTier(townWealth, buildingWealth) {
    const wealth = townWealth + buildingWealth * 0.2;

    if (wealth >= 70) {
      return 3;
    }

    if (wealth >= 50 && wealth < 70) {
      return 2;
    }

    if (wealth < 50) {
      return 1;
    }

    return 0;
  }

  function createReciprocalRelationship(town, entity, npc, options) {
    if (!entity || !npc || !options) {
      console.error('Not enough parameters passed.');
    }

    const isBetweenSameEntityAndNPC = relation => {
      return relation.otherKey === entity.key && relation.npcKey === npc.key;
    };

    const updateRelation = relation => {
      if (isBetweenSameEntityAndNPC(relation)) {
        assign(relation, {
          relationship: options.relationship,
          reciprocalRelationship: options.reciprocalRelationship,
          description: getDescription()
        });
      }
    };

    const getDescription = () => {
      if (typeof options.description === 'function') {
        return options.description(entity, npc);
      }

      return options.description || null;
    }; // If there is already an existing relationship between the two,
    // test to see if the relationship needs updating.


    for (const relation of town.buildingRelations.concat(town.buildingRelations)) {
      updateRelation(relation);
    }

    const finished = {
      key: getUUID(),
      otherKey: entity.key,
      npcKey: npc.key,
      relationship: options.relationship,
      reciprocalRelationship: options.reciprocalRelationship,
      description: getDescription()
    };

    if (entity.objectType === 'building') {
      town.buildingRelations.push(finished);
    } else if (entity.objectType === 'faction') {
      town.factionRelations.push(finished);
    }
  }

  const structureData = {
    colour: ['red', 'blue', 'grey', 'black', 'white', 'yellow', 'orange'],
    rollData: {
      size: {
        rolls: [[99, 'cavernous'], [95, 'cavernous'], [80, 'huge'], [70, 'quite large'], [60, 'large'], [50, 'spacious'], [40, 'average sized'], [30, 'somewhat cramped'], [20, 'small'], [10, 'tiny'], [0, 'extremely cramped']]
      }
    },
    material: {
      rollData: {
        wealth: {
          rolls: [[99, 'very solid'], [90, 'solid'], [80, 'finely crafted'], [70, 'well built'], [60, 'decently built'], [50, 'ageing'], [30, 'poorly made'], [20, 'run down'], [10, 'crumbling'], [0, 'structurally unsound'], [-100, 'death-trap tier'] // FIXME currently defineRollDataGetter.js is mishandling rolls that are lower than any of the items.
          ]
        }
      },
      types: {
        'log': {
          probability: 10,
          tier: [1, 2],
          noun: 'log'
        },
        'split log': {
          probability: 10,
          tier: [1, 2],
          noun: 'split log'
        },
        'wood': {
          probability: 10,
          tier: [1, 2],
          noun: 'wood',
          alwaysAvailable: true
        },
        'timber': {
          probability: 10,
          tier: [1, 2],
          noun: 'timber',
          alwaysAvailable: true
        },
        'plank': {
          probability: 10,
          tier: [1, 2],
          noun: 'plank',
          alwaysAvailable: true
        },
        'terra cotta': {
          probability: 30,
          tier: [1],
          noun: 'terra cotta'
        },
        'adobe': {
          probability: 30,
          tier: [1],
          noun: 'adobe'
        },
        'daub': {
          probability: 30,
          tier: [1],
          noun: 'daub'
        },
        'cob': {
          probability: 5,
          tier: [1],
          noun: 'cob'
        },
        'plaster': {
          probability: 30,
          tier: [3],
          noun: 'plaster'
        },
        'rock': {
          probability: 10,
          tier: [1],
          noun: 'rock',
          roadMaterialTypes: ['pavement', 'gravel']
        },
        'straw': {
          probability: 15,
          tier: [1],
          noun: 'straw'
        },
        'hewn rock': {
          probability: 5,
          tier: [2],
          noun: 'hewn rock',
          roadMaterialTypes: ['gravel']
        },
        'stone': {
          probability: 5,
          tier: [2],
          noun: 'stone',
          roadMaterialTypes: ['pavement', 'gravel']
        },
        'brick': {
          probability: 1,
          tier: [3],
          noun: 'brick',
          roadMaterialTypes: ['brick']
        },
        'clay': {
          probability: 5,
          tier: [1],
          noun: 'clay',
          canBeUsedAsRoad: true,
          roadMaterialTypes: ['dirt']
        },
        'cobblestone': {
          probability: 5,
          tier: [1],
          noun: 'cobblestone',
          roadMaterialTypes: ['gravel']
        },
        'limestone': {
          probability: 5,
          tier: [3],
          noun: 'limestone',
          canBeUsedAsRoad: true,
          roadMaterialTypes: ['pavement', 'brick', 'gravel']
        },
        'gypsum': {
          probability: 5,
          tier: [3],
          noun: 'gypsum',
          canBeUsedAsRoad: true,
          roadMaterialTypes: ['dirt']
        }
      }
    },
    roof: {
      colour: ['red', 'blue', 'grey', 'black', 'white', 'yellow', 'orange'],
      rollData: {
        wealth: {
          rolls: [[99, 'immaculately maintained'], [90, 'perfectly maintained'], [80, 'well maintained'], [60, 'weathered'], [40, 'shabby'], [30, 'moss covered'], [20, 'patchy'], [0, 'hole riddled'], [-100, 'hole riddled']]
        }
      },
      types: {
        thatch: {
          probability: 40,
          noun: 'thatch',
          verb: 'thatched'
        },
        straw: {
          probability: 30,
          noun: 'straw',
          verb: 'straw'
        },
        plank: {
          probability: 20,
          noun: 'plank',
          verb: 'planked'
        },
        tile: {
          probability: 25,
          canBeColoured: true,
          noun: 'tile',
          verb: 'tiled'
        },
        shingle: {
          probability: 10,
          canBeColoured: true,
          noun: 'shingle',
          verb: 'shingled'
        }
      }
    }
  };

  function createStructure(town, building) {
    const {
      output
    } = articles;
    console.groupCollapsed(`Creating the structure for ${output(building.wordNoun || 'building')}`);
    building.wordNoun = building.wordNoun || 'building';
    const structure = building.structure || {
      descriptor: '',
      descriptors: [],
      material: {
        noun: ''
      },
      roof: {}
    };

    if (!structure.material.noun) {
      const material = weightedRandomFetcher(town, structureData.material.types, null, undefined, 'object');
      structure.material.noun = material.noun;
    }

    const roof = weightedRandomFetcher(town, structureData.roof.types, null, undefined, 'object');

    if (roof.canBeColoured) {
      const colour = random(structureData.roof.colour);
      assign(structure.roof, {
        colour,
        verb: `${colour} ${roof.verb}`,
        noun: `${colour} ${roof.noun}`
      });
    } else {
      assign(structure.roof, {
        verb: roof.verb,
        noun: roof.noun
      });
    }

    console.log('before roof'); // FIXME: structure.roof does not have a rolls record, and this cannot be used defineRollDataGetter.
    // defineRollDataGetter(structure.roof, structureData.roof.rollData.wealth.rolls, 'wealth', 'wealth', null, building.roll)

    console.log('after roof'); // FIXME: structure.material does not have a rolls record, and this cannot be used defineRollDataGetter.
    // defineRollDataGetter(structure.material, structureData.material.rollData.wealth.rolls, 'wealth', 'wealth', null, building.roll)

    console.log('after material');
    assign(structure.material, {
      wealth: 'shabby'
    });
    assign(structure.roof, {
      wealth: 'decently built'
    });
    const descriptors = [`${output(structure.material.noun)} ${[building.wordNoun, 'building'].random()} with ${output(structure.roof.wealth)} ${structure.roof.verb} roof`, `${output(structure.material.wealth)} ${structure.material.noun} ${[building.wordNoun, 'building'].random()} with ${output(structure.roof.wealth)} ${structure.roof.verb} roof`];

    if (building.size) {
      addUniqueDescriptor(descriptors, `${output(building.size)} and ${structure.material.wealth} ${structure.material.noun} ${building.wordNoun} with ${output(structure.roof.verb)} roof`);
    }

    structure.descriptor = random(descriptors);
    console.log(structure);
    console.groupEnd();
    assign(building, {
      structure
    });
  }

  function addUniqueDescriptor(descriptors, description) {
    if (descriptors.includes(description)) {
      console.log('Throwing out duplicate description...');
      return;
    }

    descriptors.push(description);
  }

  function* cullBuildings(buildingsToCreate) {
    const buildingsTally = {};

    for (const building of buildingsToCreate) {
      if (buildingsTally[building.buildingType]) {
        buildingsTally[building.buildingType] += 1;
      } else {
        buildingsTally[building.buildingType] = 1;
      }
    }

    for (const building of buildingsToCreate) {
      const randomRoll = random(100);
      const numberToBeat = 80; // the idea here is that since the arrays are in order of rarest to most common,
      // if an archbishop DOES spawn, it'll be guaranteed
      // TODO: make the number to beat slightly lower, but increment with each addition

      if (buildingsTally[building.buildingType] < 2) {
        yield building;
        continue;
      }

      if (randomRoll > numberToBeat) {
        yield building;
        continue;
      }
    }
  }

  /**
   * If supplied just the building, it finds the indexes of all relationships with the building as the otherKey
   *
   * If supplied the npc, it finds the indexes of all with the npc as the npcKey
   *
   * providing both will only find the index of that relationship
   */
  function findReciprocalRelationships(town, entity, npc, target = 'both') {
    console.groupCollapsed('findReciprocalRelationships');

    if (!town) {
      console.error('Not enough parameters passed.');
    }

    let pool = [];

    switch (target) {
      case 'building':
        pool = town.buildingRelations;
        break;

      case 'faction':
        pool = town.factionRelations;
        break;

      default:
        pool = town.buildingRelations.concat(town.factionRelations);
    }

    console.log('pool', pool);
    const foundRelationships = pool.filter(relation => {
      if (entity && npc) {
        return relation.otherKey === entity.key && relation.npcKey === npc.key;
      }

      if (entity) {
        return relation.otherKey === entity.key;
      }

      if (npc) {
        return relation.npcKey === npc.key;
      }

      return false;
    });
    console.log('array', foundRelationships);
    console.groupEnd();
    return foundRelationships;
  }
  function findIndexOfReciprocalRelationship(town, entity, npc) {
    const foundRelationshipsIndex = town.buildingRelations.concat(town.factionRelations).findIndex(relation => {
      if (entity && npc) {
        return relation.otherKey === entity.key && relation.npcKey === npc.key;
      }

      if (entity) {
        return relation.otherKey === entity.key;
      }

      if (npc) {
        return relation.npcKey === npc.key;
      }

      return false;
    });
    return foundRelationshipsIndex;
  }

  function deleteReciprocalRelationship(town, building, npc) {
    const relationships = findReciprocalRelationships(town, building, npc, 'building');

    for (const relationship of relationships) {
      const index = town.buildingRelations.findIndex(({
        key
      }) => {
        return relationship.key === key;
      });
      if (index) town.buildingRelations.splice(index, 1);
      const factionIndex = town.factionRelations.findIndex(({
        key
      }) => {
        return relationship.key === key;
      });
      if (factionIndex) town.factionRelations.splice(factionIndex, 1);
    }
  }

  function findBuilding(town, key) {
    console.log('Finding a building;', key);
    return town.buildings.find(building => building.key === key);
  }
  function findBuildingIndex(town, key) {
    console.log('Finding index of a building;', key);
    return town.buildings.findIndex(building => building.key === key);
  }

  function getSellingTalk(town, building, associatedNPC) {
    //
    const talk = {
      smithy: {
        default: '"Sure, what is it you\'re after?"',
        wealth: {
          city: [[90, `"Here at ${building.name}, we have everything you could possibly need- adventurers are our bread and butter."`], [70, '"We cater specifically to adventurers, so I think that we should be able to accomodate whatever it is you need!"'], [50, '"We love getting adventurers- plenty of good wares, if you have the coin."'], [40, '"If you\'re looking to commission something, I happen to have a slot free."'], [30, '"Please, look around and feel free to ask any questions. We would love your custom."'], [20, '"I was beginning to wonder if we would ever get any adventurers in! About time, the bills have been piling up."'], [10, '"We don\'t usually get adventurers that often, you\'re so often our biggest sales of the year!"'], [0, '"If you are in the market for commissioning something, we sure could use the money..."']],
          town: [[90, `"As you can see, we are well stocked and happy to take on any commissions that you might have, assuming that we have the time, of course." ${associatedNPC.firstName} says somewhat flippantly- business seems to be booming.`], [70, '"Well, what is it that you need? We have a couple jobs to do, but I might be able to fit you in."'], [50, '"So, what can I do for you? We have a free slot, if you are looking to commission something."'], [40, `"Is there anything that you are looking for in particular?", the ${associatedNPC.age} ${associatedNPC.manwoman} says. "We could do a commission for you?" ${associatedNPC.heshe} adds, hopefully.`], [30, `"If there's anything that you need, please don't hesitate to ask." ${associatedNPC.firstName} says, making an effort to be attentive.`], [20, `"If you have any specific requests, we would love to be able to accomodate your business." ${associatedNPC.firstName} says.`], [10, `"As you might have noticed, we're not entertaining a lot of business at the moment." ${associatedNPC.firstName} says, adding "Unless you're looking to change that, of course."`], [0, `"As you can see, we don't exactly get a lot of custom." ${associatedNPC.firstName} says dryly, seemingly resigned to ${associatedNPC.hisher} bad business.`]],
          village: [[90, '"Take a look yourself- I\'ve got some big orders to fill in the meantime."'], [70, `"Let me know if you have any questions." the ${associatedNPC.descriptor} says.`], [50, `"Let me know if there's anything you need help with!" The ${associatedNPC.descriptor} says chirpily.`], [40, `"Take a look around, it's all pretty typical stuff, really." The ${associatedNPC.descriptor} says.`], [30, `"Let me know if there's anything that you want, I'll be in the back." The ${associatedNPC.descriptor} says, leaving you to browse the wares.`], [20, `"If you see anything that's of interest, let me know.", the ${associatedNPC.age} ${associatedNPC.manwoman} says. "Or, I could probably do a commission, if the price is right."`], [10, `"I don't know if you're going to find anything terribly interesting, but feel free to look around." the ${associatedNPC.descriptor} says.`], [0, `"If you're in need of a good shovel, you've come to the right place." The ${associatedNPC.descriptor} says, apparently well aware that the smithy isn't exactly doing too well.`]],
          hamlet: [[90, `"If you happen to find something that's of interest, then that's all dandy. I'm pretty busy with orders at the moment, though." The ${associatedNPC.descriptor} says. It appears ${associatedNPC.heshe} is quite busy indeed.`], [70, `"Let me know if you need any help- we've got the best hunting traps money can buy!" The ${associatedNPC.descriptor} says. It's not quite apparent whether ${associatedNPC.heshe} is being facetious.`], [50, `"If you happen to be in need of some horseshoes, you've come to the right place!" The ${associatedNPC.descriptor} says. It's not quite apparent whether ${associatedNPC.heshe} is being facetious.`], [40, '"I can\'t promise that there\'s much that you\'ll find terribly interesting."'], [30, `"There's not much, so don't expect much- I mostly work for the farmers, alright?" The ${associatedNPC.descriptor} says, seeming to preempt any complaints about the lack of variety.`], [20, `"It's not like we're a big fancy city blacksmith for bespoke armour or anything, so don't expect too much." The ${associatedNPC.descriptor} says reproachfully.`], [10, `"I can't say that there's a lot on offer, but feel free to browse around." The ${associatedNPC.descriptor} says, apparently well aware that the smithy isn't exactly doing too well.`], [0, `"I'm not sure what you might find of interest- just a bunch of horseshoes and nails. Be my guest, though." The ${associatedNPC.descriptor} says, apparently well aware that the smithy isn't exactly doing too well.`]]
        }
      }
    };

    if (!talk[building.type]) {
      console.error(`No building type of ${building.type} for selling chat!`);
      return "What is it you're looking for?";
    }

    if (!talk[building.type].wealth[town.type]) {
      console.error(`No town type of ${town.type} for selling chat for ${building.type}!`);
      return talk[building.type].default;
    }

    const table = talk[building.type].wealth[town.type];
    let results;

    for (const [num, description] of table) {
      if (building.roll.wealth > num) {
        results = description;
      }
    }

    if (!results) results = talk[building.type].default;
    return results;
  }

  const bandits = {
    create: base => ({
      $uuid: getUUID(),
      $type: 'bandits',
      business: random(data$e.business),
      colours: random(data$e.colours),
      symbol: random(data$e.symbol),
      leader: random(data$e.leader),
      type: random(data$e.type),
      goals: random(data$e.goals),
      weapons: random(data$e.weapons),
      lair: random(data$e.lair),
      fearedBy: random(data$e.fearedBy),
      ...base
    }),
    readout: bandits => {
      return `These bandits are ${bandits.type} whose primary business is ${bandits.business}. Their leader is ${bandits.leader}, who wants ${bandits.goals}. Their symbol is ${bandits.symbol} on a ${bandits.colours} background. They are feared by ${bandits.fearedBy}, and they use ${bandits.weapons}. Their base of operations is ${bandits.lair}`;
    }
  };
  const data$e = {
    business: ["poaching from the sovereign's preserve or a prominent noble’s lands", 'harboring fugitives', 'harassing government officials and nobles who pass along the road', 'robbing caravans carrying gems, precious metals, and exotic goods', 'holding up incoming or outgoing ships or wagons', 'smuggling smokeleaf; a hallucinogenic mushroom', 'smuggling sleepysalt (a downer)', 'smuggling sharpsugar (an upper)', 'smuggling rare antiquities', 'smuggling stolen goods', 'smuggling exotic beasts', 'smuggling foreign harlots', 'smuggling fugitives', 'smuggling slaves', 'serving as muscle for shady merchants and/or brothel-keepers'],
    colours: ['black', 'gold', 'forest green', 'bronze', 'tan', 'khaki', 'brown', 'beaver', 'dark grey', 'gunmetal', 'maroon', 'dark brown', 'chocolate', 'olive green'],
    symbol: ['a skull', 'an arrow', 'a dagger', 'a goblet', 'the moon', 'a star', 'a snake', 'a badger', 'a spider', 'a rat'],
    leader: ['a dangerous megalomaniac', 'a charismatic demagogue', 'a mysterious foreigner', 'a talented thief', 'a member of a prominent family', 'a ruthless killer', 'a femme fatale', 'a charming rogue', 'a dashing swashbuckler', 'a brutish thug'],
    type: ['out-of-work artisans', 'displaced peasants', 'desperate peasants', 'escaped slaves', 'combat veterans', 'foreign refugees', 'goals', 'domination of the region’s trade'],
    goals: ['domination of the region’s trade', 'sabotage of the region’s trade', 'revenge against a rival band of outlaws', 'revenge against the region’s elite', 'a rebellion against the region’s elite', 'equality and freedom for all', 'a wealthy and peaceful retirement', 'violence to slake their bloodlust'],
    weapons: ['wooden clubs', 'over-sized daggers', 'shortbows and arrows', 'longbows and arrows', 'daggers and crossbows', 'axes and knives', 'sticks and stones', 'shortswords', 'brass knuckles', 'daggers and sling shots'],
    lair: ['the residence of a prominent noble', 'the village’s market square', 'a wayside inn', 'a tavern', 'a brothel', 'an old lighthouse', 'an abandoned cabin', 'a waterfall', 'a cave', 'a dense forest'],
    fearedBy: ['ambassadors and tax collectors', 'merchants and peddlers', 'politicians and magistrates', 'guards and sheriffs', 'soldiers and warriors', 'nobles and wealthy travelers', 'knights and loyalists', 'peasants and farmers', 'priests and sages', 'women and children']
  };

  const bunny = {
    create: base => ({
      $uuid: getUUID(),
      $type: 'bunny',
      size: random(data$d.size),
      coat: random(data$d.coat),
      favouriteFood: random(data$d.favouriteFood),
      markings: random(data$d.markings),
      ...base
    }),
    readout: bunny => {
      return `This bunny is ${bunny.size}, and has a ${bunny.coat} coat, with ${bunny.markings}. It loves ${bunny.favouriteFood}.`;
    }
  };
  const data$d = {
    size: ['all skin and bones', 'a little scrawny', 'pretty average in size', 'a little long and lanky', 'fat', 'extremely fat', 'teacup size', 'twice the normal size', 'absolutely massive'],
    coat: ['fluffy white', 'short and black', 'solid grey', 'grey and black spotted', 'chocolate', 'dappled grey', 'chocolate tortiseshell', 'grey tortiseshell', 'cream colored', 'dappled brown', 'frosted pearl', 'gray', 'sable', 'sandy', 'pearly'],
    favouriteFood: ['kale', 'arugula', 'rhubarb', 'carrots', 'celery', 'broccoli', 'lettuce', 'apple slices', 'onion leaves', 'potato leaves', 'asparagus'],
    markings: ['black toes on one foot', 'white toes on one foot', 'extremely long ears', 'a white tail', 'a black tail', 'no left ear', 'a scarred ear', 'a patch of missing fur', 'a twitchy pink nose', 'a black nose', 'a pink and black nose']
  };

  /**
   * This handles setting up getters and setters for attributes like wealth,
   * cleanliness and such.
   *
   * It expects the `obj` (the one that is getting the attributes), and the
   * `rolls` (the one that is providing the descriptions).
   *
   * It needs the propName to be exact, unless the optional `keyName` is specified.
   * This is for when you might want to tie several properties to the same attribute,
   * i.e. cleanliness controlling bedleanliness.
   *
   * The `index` is an optional argument, which tells the function to look at
   * a different location in the array for the string. This is most useful for
   * when you have multiple descriptions tied to the same thing
   * (long and short descriptions, or cleanliness controlling bedCleanliness as well.)
   */
  function defineRollDataGetter(obj, rolls, propName, keyName = propName, index = 1, rollLocation = obj.roll) {
    console.groupCollapsed('DefineRollDataGetters'); // eslint-disable-next-line prefer-rest-params

    console.log(arguments);

    if (!obj[propName]) {
      // eslint-disable-next-line @typescript-eslint/no-explicit-any
      obj[propName] = '';
    }

    Object.defineProperty(obj, propName, {
      get() {
        if (this.name) {
          console.log(`Fetching ${this.name} ${propName}.`);
        }

        const rollArray = rolls;
        let result = rollArray.find(desc => {
          if (rollLocation) {
            return desc[0] <= rollLocation[keyName];
          } else {
            return desc[0] <= this.roll[keyName];
          }
        });

        if (typeof result === 'undefined') {
          console.log(`Failed to get a descriptor that matched the roll of ${this.roll[propName]} for ${propName}.`);
          result = last(rollArray);
        }

        const resultValue = result[index];

        if (Array.isArray(resultValue)) {
          result[index] = random(resultValue);
        } // eslint-disable-next-line @typescript-eslint/ban-ts-comment
        // @ts-ignore


        this[`_${propName}`] = resultValue || result;
        return this[`_${propName}`];
      },

      set(val) {
        console.log(`Setting ${this.name} ${propName}.`);
        const rollArray = rolls;
        assert(Array.isArray(rollArray));
        let result = rollArray.find(desc => {
          if (rollLocation) {
            return desc[0] <= rollLocation[keyName];
          } else {
            return desc[0] <= this.roll[keyName];
          }
        });

        if (result === undefined) {
          console.log(`Failed to get a descriptor that matched the roll of ${this.roll[propName]} for ${propName}.`);
          result = last(rollArray);
        }

        this[`_${propName}`] = val || result[index];
        return this[`_${propName}`];
      }

    });
    console.groupEnd();
  }

  const cabin = {
    create: base => {
      const cabin = {
        $uuid: getUUID(),
        $type: 'cabin',
        material: random(['wooden', 'wooden', 'wooden', 'stone']),
        feature: random(features),
        insideFeature: random(insideFeatures),
        size: '',
        cleanliness: '',
        bedCleanliness: '',
        roll: {
          size: random(1, 100),
          cleanliness: random(1, 100),
          bedCleanliness: random(1, 100)
        },
        ...base
      };
      setRollGetters(cabin);
      return cabin;
    },
    readout: cabin => {
      return `The ${cabin.material} ${cabin.wordNoun || cabin.$type} is ${cabin.size}. ${cabin.feature} Inside, it is ${cabin.cleanliness}. ${cabin.insideFeature} There is a bed, which is ${cabin.bedCleanliness}.`;
    }
  };
  const features = ['The door has deep scratch marks in it.', 'There is a pair of large boots by the door.', 'The steps leading to the door are rather dirty.', 'The chimney has a bird nesting in it.', 'The windows are rather grotty, with cobwebs all over.', 'There is a rusty shovel leaning against the door.', 'There is an empty water bowl next to the door.'];
  const insideFeatures = ['There are seemingly hundreds of dishes stacked, in desperate need of a clean.', 'There is a toy pram in the corner of the room.', 'A decorative tapestry is hanging up on one of the walls.', 'There is a rather impressive bookcase in the corner of the room.', 'There is a hunk of bread lying on the table.', 'The room feels cramped, with tables and chairs cluttering everything up.', 'The room feels spacious, with a single table and chair in the corner.', 'There is a huge cast iron pot sitting in the fireplace.', 'Dried herbs sit in bunches on the table.'];

  function setRollGetters(cabin) {
    for (const propName of keys(rollData)) {
      defineRollDataGetter(cabin, rollData[propName].rolls, propName);
    }
  }

  const rollData = {
    size: {
      rolls: [[95, 'huge'], [80, 'quite large'], [70, 'large'], [60, 'spacious'], [50, 'relatively spacious'], [40, 'average sized'], [30, 'somewhat cramped'], [20, 'small'], [10, 'tiny'], [0, 'extremely cramped']]
    },
    cleanliness: {
      rolls: [[80, 'absolutely spotless'], [75, 'spotless'], [70, 'nice and well cleaned'], [60, 'hygienic'], [50, 'decently hygienic'], [40, 'slightly grubby'], [30, 'quite dirty'], [20, 'filthy'], [10, 'rather filthy'], [0, 'absolutely putrid']]
    },
    bedCleanliness: {
      rolls: [[90, 'perfectly prepared, with fresh sheets and a lemon scent in the air of the room'], [80, 'recently prepared and well cleaned'], [70, 'freshly cleaned and neat'], [60, 'tidy and neat'], [50, 'reasonably clean'], [40, 'somewhat tidy'], [30, 'disgusting'], [20, 'teeming with rats'], [10, 'rather filthy'], [0, 'festering with bugs']]
    }
  };

  const cat = {
    create: base => ({
      $type: 'cat',
      $uuid: getUUID(),
      size: random(data$c.size),
      coat: random(data$c.coat),
      eyes: random(data$c.eyes),
      breedSkill: random(data$c.breedSkill),
      favouriteFood: random(data$c.favouriteFood),
      markings: random(data$c.markings),
      habit: random(data$c.habit),
      talent: random(data$c.talent),
      ...base
    }),
    readout: cat => {
      return `This cat is ${cat.size}, and has a ${cat.coat} coat, with ${cat.eyes} and ${cat.markings}. This breed was bred ${cat.breedSkill}. And this cat has ${cat.habit}. It loves ${cat.favouriteFood}, and it is particularly good at ${cat.talent}.`;
    }
  };
  const data$c = {
    size: ['all skin and bones', 'a little scrawny', 'pretty average in size', 'a little long and lanky', 'fat', 'extremely fat'],
    coat: ['solid white', 'solid black', 'solid grey', 'grey and black spotted tabby', 'orange and black spotted tabby', 'grey and black striped tabby', 'orange and white striped tabby', 'orange and white striped tabby', 'grey and black blotched tabby', 'black and white bicolor', 'white and orange bicolor', 'calico'],
    eyes: ['yellow eyes', 'golden brown eyes', 'copper brown eyes', 'dull green eyes', 'bright green eyes', 'brilliant gold eyes', 'copper eyes', 'bright blue eyes', 'pale blue eyes', 'bluish grey eyes', 'one blue eye and one golden brown eye', 'one blue eye and one copper brown eye'],
    breedSkill: ['to hunt mice in granaries', 'to hunt mice in urban dwellings', 'to hunt rats aboard ships', 'to hunt rats and mice in barns', 'to hunt birds on rooftops', 'to hunt snakes and lizards', 'to sit on laps', "for no particular reason; it's ancestors were semi-feral village cats", "for no particular reason; it's ancestors were semi-feral city cats", "for no reason at all; it's ancestors were wild animals"],
    favouriteFood: ['warm milk', 'mice', 'baby mice', 'songbirds', 'pigeon', 'chicken', 'sardines', 'tuna', 'salmon', 'bacon'],
    markings: ['white or black toes on one foot', 'extremely long whiskers', 'a white or black tipped tail', 'no tail', 'a broken tail', 'a scarred ear', 'a patch of missing fur', 'a pink nose', 'a black nose', 'a pink and black nose'],
    habit: ['a habit of hiding whenever it first meets someone', 'a habit of begging for food', 'a mistrustful demeanor, even toward people it knows well', 'a playful demeanor, always chasing its tail', 'a curious demeanor, always sneaking up and pouncing on things', 'a noisy yowl when it is sad', 'a cute little meow when it is content', 'a habit of purring and rubbing against your leg', 'a habit of hissing at any who approach it', 'a friendly demeanor, provided you have food'],
    talent: ['scratching', 'hissing', 'purring', 'climbing trees', 'climbing walls', 'catching mice', 'catching fish', 'catching birds', 'avoiding you', 'ignoring you']
  };

  const cavern = {
    create: base => ({
      $uuid: getUUID(),
      $type: 'cavern',
      entrance: random(data$b.entrance),
      landmark: random(data$b.landmark),
      feature: random(data$b.feature),
      walls: random(data$b.walls),
      ceiling: random(data$b.ceiling),
      hazards: random(data$b.hazards),
      ...base
    }),
    readout: cavern => {
      return `The ${cavern.$type} entrance is ${cavern.entrance}. As you enter, you see ${cavern.landmark}, and ${cavern.feature}. The walls are ${cavern.walls}, and the ceiling above is ${cavern.ceiling}.`;
    }
  };
  const data$b = {
    entrance: ['wide and tall, letting much daylight into the entry chamber', 'a wide sinkhole', 'an easy to spot, narrow passage', 'a steep, slippery sloped tunnel', 'a man-made tunnel', 'a collapsed tunnel, impassable without excavation', 'marked with several warning signs', 'hidden by some boulders', 'hidden by a waterfall', 'hidden by a rocky overhang', 'hidden by a hillock', 'hidden by a briar patch', 'hidden by a curtain of moss', 'hidden by some enormous ancient tree roots', 'hidden by some overgrown vines', 'up a cliff face', 'down a deep hole', 'in an underwater tunnel'],
    landmark: ['a trickle of water flowing down the walls and across the floor', 'an underground lake of potable water', 'a pool of stagnant water', 'a natural bridge over a chasm', 'a narrow chasm with walls close enough to climb between', 'a deep chasm with no bottom in sight', 'a shaft in the ceiling with no light coming from it', 'a shaft in the ceiling with dim light coming from it', 'a group of stalagmites arranged in a circle', 'an arrangement of two large stalactites and two large stalagmites, reminiscent of fangs in a yawning mouth', 'a pair of natural columns', 'a large stalactite that has broken off from the ceiling and fallen to the floor', 'an array of many small stalactites spreading across the ceiling', 'a damp wall covered in soft mold', 'a recess in the wall, covered in slimy mold', 'a large patch of glowing fungus', 'a large patch of small mushrooms', 'a group of enormous mushrooms', 'a large cavern with a strong echo', 'a claustrophobic tunnel with a low ceiling'],
    feature: ['a cache of abandoned, decrepit mining equipment', 'some old dry bones', 'many bones underfoot', 'evidence of a recent encampment', 'an enormous spider web', 'a wide slippery patch of mold on the floor', 'the clatter of rocks falling', 'loose stones underfoot', 'an unstable ceiling', 'a distant sound—a scream, hammers at work, footsteps, or drums', 'the name of a previous traveler carved into a wall', 'several ancient runes carved into the wall'],
    walls: ['slightly damp', 'dripping wet', 'slick with mold', 'covered in soft fungi', 'dry as a bone', 'rough and dry', 'dry and smooth', 'jagged', 'pockmarked', 'crumbling, with loose bits flaking off', 'crumbling, with large chunks falling off at a touch', 'covered in an unidentifiable slime'],
    ceiling: ['uncomfortably close to your head', 'covered in stalactites (watch your head!)', 'smooth as glass', 'rough and jagged', 'connected to the floor by natural columns', 'so high it’s difficult to see'],
    hazards: ['a colony of poisonous mushrooms', 'a patch of toxic mold', 'the ceiling caves in', 'several rocks tumble down a sloped wall', 'the floor is very slippery', 'your foot misses the floor as you step into a pit or chasm']
  };

  const cheese = {
    create: base => ({
      $uuid: getUUID(),
      $type: 'cheese',
      colour: random(data$a.colours),
      texture: random(data$a.textures),
      taste: random(data$a.tastes),
      smell: random(data$a.smells),
      cost: random(data$a.costs),
      ...base
    }),
    readout: cheese => {
      return `This cheese is ${cheese.colour}. It smells ${cheese.smell}. The taste is ${cheese.taste}, with a texture that is ${cheese.texture}.`;
    }
  };
  const data$a = {
    colours: ['pale grey, with dark flecks', 'bright yellow', 'warm yellow', 'spotty yellow', 'pale yellow', 'light green', 'light greenish-yellow', 'white, with blue spots', 'white, with a purple rind', 'yellow, with a black waxy rind', 'dark, almost brown'],
    textures: ['crumbly, with a texture similar to plaster', 'rubbery, and squeaks while you eat it', 'rubbery, and squeaks rather disconcertingly while you eat it', 'crumbly, with bits going everywhere', 'somewhat rubbery', 'somewhat stringy', 'slightly stringy', 'rubbery, like a piece of leather that has been soaking in some greasy sludge', 'soft and spongey, with the occassional... crunch', 'soft, springy, and moist', 'gooey', 'moist and delicious', 'almost liquid once you bite through the rind', 'rock hard', 'mildly grainy', 'slippery', 'melted and gooey'],
    tastes: ['sharp', 'sharp and salty', 'somewhat bland', 'inoffensively mild', "salty, like a cow's salt-lick", 'rich and creamy', 'creamy, with hints of oak', 'strong, slightly salty, and extremely more-ish', 'smokey, with hints of rum', 'smokey, with hints of chili', 'salty, but immediately the spice from the peppers takes over', "bitter, with the rind tasting somewhere between a burnt log and dead bug, but the taste isn't entirely unpleasant", "a warm and smooth creaminess which envelopes your taste buds like a mother's embrace", 'entirely bland', 'incredibly and painfully sour', 'somehow meaty', 'earthy and buttery, like sautéed mushrooms', 'like it has bits of berries mixed in'],
    smells: ["pungent, as if it was the result of somebody's terrible diet decisions", 'somewhat sweet, with a heady aroma', 'like the ass of a cow in cheese form', "like the best parts of a farm's stable", 'like freshly baled hay', 'like freshly cut grass', 'like a lemon tree', 'like fresh cream', 'like a rotting corpse', 'like a roast duck filled with spices', 'like a delicious slice of bread toasted over a fire', 'like a slice of bread left in the fire far too long', 'smoky and savory', "like a halfling's sweaty foot", 'like an open sewer'],
    costs: [1, 2, 3, 4, 5, 6, 6, 6, 7, 7, 7, 8, 9, 10, 10, 10, 11, 11, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]
  };

  const ghost = {
    create: base => ({
      $uuid: getUUID(),
      $type: 'ghost',
      profession: random(data$9.profession),
      cause: random(data$9.cause),
      reason: random(data$9.reason),
      release: random(data$9.release),
      reaction: random(data$9.reaction),
      ...base
    }),
    readout: ghost => {
      return `This ghost was once ${ghost.profession}. They died from ${ghost.cause}, and linger on in this life ${ghost.reason}. They can move on if ${ghost.release}. It is ${ghost.reaction} towards the living.`;
    }
  };
  const data$9 = {
    profession: ['a farmer', 'a herder', 'a miner', 'a fisher', 'a slave', 'a servant', 'a laborer', 'an unskilled worker', 'a beggar', 'an urchin', 'a noble', 'a knight', 'an artist', 'a craftsman', 'a merchant', 'a shopkeeper', 'a barkeep', 'a barmaid', 'a barbarian', 'a gladiator', 'a minstrel', 'a singer', 'a priest', 'a monk', 'an herbalist', 'a healer', 'a soldier', 'a sellsword', 'a cultist', 'a preacher', 'a hunter', 'an assassin', 'a thief', 'a bandit', 'a smuggler', 'a con artist', 'a sailor', 'pirate', 'an alchemist', 'a seer'],
    cause: ['hanging', 'strangulation', 'beheading', 'a stab wound', 'beating', 'blunt trauma', 'being crushed', 'drowning', 'a plague', 'a gastrointestinal illness', 'a respiratory illness', 'an infected wound', 'poisoning', 'falling from a great height', 'a horse or wagon accident', 'a venereal disease', 'an allergic reaction', 'shock', 'a heart attack', 'stroke', 'liver failure', 'old age', 'natural causes', 'unknown causes', 'under mysterious circumstances'],
    reason: ['to seek vengeance', 'to pine for lost love', 'to bemoan lost treasure', 'out of pure hatred of the living', 'out of jealousy of the living', 'to covet the belongings of a specific individual', 'to provide protection to a specific someone', 'to warn a specific someone against danger', 'to warn everyone against a specific danger', 'to torment a specific someone', 'to torment members of a specific group', 'to torment anyone who crosses its path'],
    release: ["someone helps it achieve it's goal", 'it saves the life of at least one other person', 'it achieves its goal on its own', 'it is destroyed', 'it is driven from its current location', "it is given evidence of events that happened after the person's death", "it is made aware of the circumstances of the person's death", "it is forced to visit the location of the person's death", 'it is given the opportunity to speak to a loved one', 'it sufficiently satisfies its lust for blood', 'it sufficiently satisfies its lust for human touch', 'the hells freeze over'],
    reaction: ['hostile and aggressive', 'hostile and suspicious', 'nervous and frightened', 'mostly indifferent', 'completely indifferent', 'curious but suspicious', 'curious and playful', 'desperate and aggressive']
  };

  const goblin = {
    create: base => ({
      $uuid: getUUID(),
      $type: 'goblin',
      type: random(data$8.type),
      carry: random(data$8.carry),
      wears: random(data$8.wears),
      faceFeature: random(data$8.faceFeature),
      feature: random(data$8.feature),
      looks: random(data$8.looks),
      talent: random(data$8.talent),
      ...base
    }),
    readout: goblin => {
      return `This goblin is ${goblin.type}, and has a ${goblin.faceFeature}. It wields ${goblin.carry} and wears ${goblin.wears}. This goblin is particularly good at ${goblin.talent}, and has ${goblin.feature}. Currently, it is looking to ${goblin.looks}`;
    }
  };
  const data$8 = {
    type: ['a miner', 'a forager', 'a warrior', 'a scout', 'a trapmaker', 'an archer', 'an assassin', 'a hexer', 'a wolf-rider', 'a sneak', 'an armorer', 'a cook', 'a builder', 'a beastshifter', 'a skullcrusher', 'a thug', 'a warpriest', 'a prankster', 'a blackblade', 'a worthless nobody'],
    talent: ['being sneaky', 'not being seen', 'tracking foes', 'building traps', 'avoiding traps', 'repairing traps', 'foraging for food and water', 'wrangling beasts', 'digging tunnels', 'crafting arms and armor', 'crushing skulls', 'cutting throats'],
    carry: ['a rusty sword', 'a finely-made sword', 'a spiked club', 'a wicked looking axe', 'a spear decorated with feathers', 'several polished daggers', 'a large, serrated dagger', 'a pair of curved daggers', 'a cracked wooden shield', 'a shield, emblazoned with the gangs’ symbol', 'arrows fletched with crow feathers', 'arrows fletched with hawk feathers'],
    wears: ['armor with greasy stains', 'patched leather armor', 'piecemeal chain armor', 'a leather helm', 'a large skull as a helm', 'a wolf-face helm', 'a lanyard of severed ears', 'a big hoop earring', 'a shiny silver belt', 'a wolf skin', 'a black cloak with a hood', 'a large belt purse'],
    faceFeature: ['blue warpaint', 'an eyepatch', 'burn scars', 'only one ear', 'no front teeth', 'an unusal tattoo on the forehead', 'stitches closing a wound on the jaw', 'a topknot above it', 'several muddy smudges', 'a boil oozing pus', 'a wisp of a mustache', 'amazing sideburns'],
    feature: ['an unsettling stare', 'a lean and hungry look', 'a maniacal laugh', 'a mad cackling laugh', 'a high-pitched twittering laugh', 'a tendency to snicker at everything', 'a nervous twitch', 'a difficult time standing still', 'a waddle', 'a limp', 'an unsavory habit of drooling', 'a habit of sniffing loudly'],
    looks: ['find something to eat', 'find something to drink', 'find some coins or gems to steal', 'warn the gang of monster hunters in the area', 'warn the gang of a savage beast in the area', 'report to the gang as to where to find treasure', "prove its mettle to the gang's boss", "avoid notice by the gang's boss", 'avoid notice by anyone', 'leave the gang entirely', 'play a cruel prank', 'swap distasteful jokes']
  };

  const goblins = {
    create: base => ({
      $uuid: getUUID(),
      $type: 'goblins',
      business: random(data$7.business),
      symbol: random(data$7.symbol),
      colour: random(data$7.colour),
      lairLocation: random(data$7.lairLocation),
      lairType: random(data$7.lairType),
      target: random(data$7.target),
      currentTarget: random(data$7.currentTarget),
      leaderType: random(data$7.leader),
      goals: random(data$7.goals),
      tactics: random(data$7.tactics),
      accompaniedBy: random(data$7.accompaniedBy),
      pets: random(data$7.pets),
      ...base
    }),
    readout: goblins => {
      return `These goblins primarily deal with ${goblins.business}. Their symbol is ${goblins.symbol}, and their colours are primarily ${goblins.colour}. Their lair is ${goblins.lairType}, located ${goblins.lairLocation}. Their leader is ${goblins.leaderType}, who wants ${goblins.goals}. They like to target ${goblins.target}, and are currently planning a raid on ${goblins.currentTarget}. They fight with ${goblins.tactics}, and occasionally enlist help from ${goblins.accompaniedBy}. They have some ${goblins.pets} as pets.`;
    }
  };
  const data$7 = {
    business: ['raiding villages and farms', 'burglarizing storehouses and shops', 'harassing anyone who passes through their territory', 'robbing caravans carrying gems, precious metals, and exotic goods', 'holding up traders’ ships or wagons', 'smuggling smokeleaf; a hallucinogenic mushroom', 'smuggling sleepysalt (a downer)', 'smuggling sharpsugar (an upper)', 'smuggling exotic beasts', 'smuggling foreign harlots', 'smuggling fugitives', 'smuggling slaves', 'serving as muscle for evildoers', 'mining and crafting', 'pranks and hijinks'],
    symbol: ['a skull', 'an arrow', 'a dagger', 'the moon', 'a star', 'a snake', 'a spider', 'a rat', 'a wolf', 'a bat'],
    colour: ['black', 'dark brown', 'crimson', 'grey', 'gold', 'khaki', 'dark green', 'white', 'dark green and gold', 'black and gold', 'dark brown and grey', 'grey and white', 'black and grey', 'black and white', 'black and crimson', 'dark brown and crimson', 'crimson and khaki', 'dark brown and khaki', 'khaki and dark green', 'dark green and crimson'],
    lairLocation: ['in a dark and haunted forest', 'in an enchanted forest', 'along a mountain pass', 'high in the mountains', 'beneath a bustling city', 'near a quiet farm village'],
    lairType: ['a series of natural caverns', 'an abandoned mine', 'a mine in which the goblins are actively digging', 'an underground fortress', 'a semi-organized military encampment', 'a crude encampment'],
    target: ['fishermen and sailors', 'beggars and drunks', 'merchants and moneychangers', 'young noblemen', 'young noblewomen', 'old noblewomen', 'gamblers and thieves', 'priests and monks', 'priestesses', 'constables and sheriffs', 'castle or town guards', 'cooks and scullery maids', 'barkeeps and barmaids', 'harlots and madames', 'circus performers', 'foreign travelers and peasant girls', 'young children', 'miners and prospectors', 'elves and rangers', 'dwarves and gnomes'],
    currentTarget: ['the residence of the leader or a senior gangmember', "an artisan's shop or guildhall", "a merchant's office", 'a tavern or inn', 'a brothel', 'a warehouse or shipyard', 'a temple complex or shrine', 'the town hall', 'a shantytown', 'the residence of a wealthy individual or prominent citizen'],
    leader: ['an egotistical goblin warrior', 'a charismatic goblin rogue', 'a mysterious goblin shaman', 'a talented goblin thief', 'a well-known goblin war hero', 'a ruthless goblin hexer', 'a cunning gobliness', 'a brutal hobgoblin warpriest', 'a brilliant hobgoblin warlord', 'a calculating bugbear assassin'],
    goals: ['disruption of the region’s politics', 'disruption of the region’s trade', 'revenge against a specific organization', 'revenge against a rival goblin gang', 'spreading chaos and destruction', 'possession of a powerful artifact'],
    tactics: ['swarm tactics', 'hit-and-run tactics', 'ambush tactics', 'choreographed maneuvers', 'unpredictable maneuvers', 'lots of smiles and jokes', 'lots of fancy footwork', 'lots of screaming and shouting', 'kicking and stomping', 'lots of head-butting', 'lots of biting and scratching', 'laying traps'],
    accompaniedBy: ['hobgoblin mercenaries', 'bugbear thugs', 'ogre savages', 'orc berserkers', 'trolls', 'other goblin gangs'],
    pets: ['wolves', 'wargs', 'giant spiders', 'boars', 'giant bats', 'dire rats']
  };

  const horse = {
    create: base => ({
      $uuid: getUUID(),
      $type: 'horse',
      gender: random(data$6.gender),
      eyes: random(data$6.eyes),
      type: random(data$6.type),
      quality: random(data$6.quality),
      colour: random(data$6.colour),
      flaw: random(data$6.flaw),
      flawSeverity: random(data$6.flawSeverity),
      feature: random(data$6.feature),
      personality: random(data$6.personality),
      behaviour: random(data$6.behaviour),
      ...base
    }),
    readout: horse => {
      return `This horse is ${horse.gender} ${horse.type}, and is ${horse.quality}. It has a ${horse.colour} coat, with ${horse.feature} and ${horse.eyes}. It is ${horse.flaw}, which is ${horse.flawSeverity}. It is ${horse.personality}, and ${horse.behaviour}.`;
    }
  };
  const data$6 = {
    type: ['pony; stout and suitable for small riders and narrow trails', 'dray; reliable and suitable for pulling plows and wagons', 'garron; hardy and well-suited for harsh weather and terrain', 'palfrey; tireless and well-suited for long journeys', 'rounsey; medium-sized and suitable for riding or for battle', 'courser; swift and well-suited for hunting or for battle', 'a charger; solid and suitable for jousting or for battle', 'destrier; huge and well-suited for jousting or for battle'],
    gender: ['a colt', 'a young gelding', 'an old gelding', 'a stallion', 'a yearling', 'a filly', 'a young mare', 'an old mare'],
    quality: ['a stot; this animal is completely useless', 'a canner; this animal is good for nothing but meat', 'a hack; this animal is mediocre, but useful', 'a hard keeper; this animal requires extra food to maintain its strength and endurance .', 'an easy keeper; this animal requires little food to maintain its strength and endurance', 'of middling quality; acceptable for its breed', 'of high quality; a very good animal for its breed', 'of the highest quality; a paragon of its breed'],
    colour: ['bay', 'black', 'buckskin', 'chestnut', 'gray', 'piebald', 'roan', 'white'],
    eyes: ['light brown eyes', 'brown eyes', 'dark brown eyes', 'green eyes', 'hazel eyes', 'amber eyes', 'brown and blue eyes', 'blue eyes'],
    flaw: ['pigeon toed', 'splay footed', 'mule footed (narrow feet)', 'mushroom footed (large feet)', 'barrel chested', 'narrow chested', 'steep rumped', 'slab sided'],
    flawSeverity: ['imperceptible to all but the most expert horsemasters and riders', 'barely noticeable', "not a hindrance to the horse's performance", 'something the horse can make up for with its other qualities', 'something that sufficient training can overcome', 'something that makes riding the horse a little difficult', 'something that makes riding the horse a little embarrassing', "a severe hindrance to the horse's performance"],
    feature: ['one eye that is blind or nearly blind', 'pig eyes (small eyes)', 'large ears', 'small ears', 'a wry tail (tail carried to one side)', 'a clipped tail', 'a scar above one forehoof', 'a shaggy mane'],
    personality: ['eager to please', 'social', 'gentle', 'aloof', 'unimpressed', 'fearful', 'challenging', 'foul-tempered'],
    behaviour: ['nickers when anxious', 'whinnies when anxious', 'bucks when impatient', 'stamps when impatient', 'froths when tired', 'snorts when tired', 'stamps when content', 'snorts when content']
  };

  const ogre = {
    create: base => ({
      $uuid: getUUID(),
      $type: 'ogre',
      hair: random(data$5.hair),
      type: random(data$5.type),
      eyes: random(data$5.eyes),
      skill: random(data$5.skill),
      quirk: random(data$5.quirk),
      carry: random(data$5.carry),
      look: random(data$5.look),
      misfortune: random(data$5.misfortune),
      ...base
    }),
    readout: ogre => {
      return `This ogre is a ${ogre.type}, and carries ${ogre.carry}. It's hair is ${ogre.hair}, and its eyes are ${ogre.eyes}. It is particularly good at ${ogre.skill}, and frequently ${ogre.quirk}. A long time ago, it was ${ogre.misfortune}. Currently, it is looking for a ${ogre.look}`;
    }
  };
  const data$5 = {
    hair: ['long and stringy', 'wispy and thin', 'dark and matted', 'a tangled mess', 'cut unevenly', 'gone; the ogre is bald'],
    eyes: ['mismatched colors', 'mismatched sizes', 'dark and menacing', 'wide and vacant', 'scarred; one eye is missing', 'crossed'],
    type: ['berserker', 'chanter', 'hunter', 'scavenger', 'thug', 'warrior'],
    skill: ['crushing skulls', 'breaking wooden doors', 'bending metal bars', 'roasting meat', 'frightening people', 'sitting very, very still'],
    quirk: ['scratches itself', 'gets distracted by food', 'guffaws', 'loses its temper', 'picks its teeth', 'yawns'],
    carry: ['a sharp spear', 'a heavy club', 'a spiked club', 'a sackful of trinkets', 'a necklace of bones', 'a string of severed ears'],
    look: ['easy meal', 'fatty meal', 'steady meal ticket', 'fight it can win', 'shiny bauble', 'object its chief asked for, but the ogre can’t remember what it was'],
    misfortune: ['pressed into service in an orkish army', 'tricked into doing some dirty work by some goblins', 'charmed by a witch', 'badly burned in a fire', 'imprisoned in a cold, dark cell', 'bested by a rival for the affections of another ogre']
  };

  const orcs = {
    create: base => ({
      $uuid: getUUID(),
      $type: 'orcs',
      type: random(data$4.type),
      symbol: random(data$4.symbol),
      value: random(data$4.value),
      meat: random(data$4.meat),
      fear: random(data$4.fear),
      notorious: random(data$4.notorious),
      knownFor: random(data$4.knownFor),
      attitude: random(data$4.attitude),
      leader: random(data$4.leader),
      goals: random(data$4.goals),
      tactics: random(data$4.tactics),
      pets: random(data$4.pets),
      slaves: random(data$4.slaves),
      weapons: random(data$4.weapons),
      ...base
    }),
    readout: orcs => {
      return `These orcs are ${orcs.type}, known for ${orcs.knownFor}. Their symbol is ${orcs.symbol}, and they value ${orcs.value}. Their favourite food is is ${orcs.meat}, and they fear ${orcs.fear}. Their leader is ${orcs.leader}, who wants ${orcs.goals}. They are ${orcs.attitude}, and are notorious for ${orcs.notorious}. They fight with ${orcs.weapons}, with ${orcs.tactics}. They have pet ${orcs.pets}, and keep some ${orcs.slaves} as slaves.`;
    }
  };
  const data$4 = {
    type: ['nomadic hunters, following game', 'raiders displaced from their native lands', 'in exile from their native lands', 'in the service of a sovereign warlord', 'a loose confederacy of tribes and families related by blood', 'degenerate survivors from a broken army', 'disorganizes; a clan of competing warriors', 'a tight-knit war band', 'bent on sowing chaos and mayhem', 'raiders after supplies and slaves', 'marching to war under the leadership of a great chief', 'on an errand for an evil wizard or other powerful being'],
    value: ['bravery', 'strength', 'wisdom', 'virility', 'honoring the gods', 'honoring their ancestors', 'battle-scars', 'survival', 'kill counts', 'scalps', 'steel', 'meat'],
    symbol: ['bats', 'blood', 'bones', 'corpses', 'crows', 'flames', 'ghosts', 'scorpions', 'skulls', 'vultures', 'clouds', 'lightning', 'moon', 'snow', 'stars', 'sun', 'arrows', 'axes', 'fists', 'spears', 'stones', 'swords', 'bears', 'boars', 'eagles', 'horses', 'lions', 'owls', 'snakes', 'wolves'],
    leader: ['a well-respected chief', 'a charismatic warlord', 'a mysterious shaman', 'a descendent of an honored hero', 'a ruthless killer', 'a brutish thug', 'an impatient young warrior', 'a wise old chief', 'a celebrated war hero', 'a prolific lover'],
    meat: ['dwarves and halflings', 'beggars and thieves', 'merchants and caravan guards', 'noblemen', 'noblewomen', 'priests and priestesses', 'slaves', 'circusfolk and minstrels', 'foreign travelers', 'peasant women', 'young children', 'elves and pixies'],
    fear: ['men armored in steel', 'human women', 'spellcasters', 'dwarves', 'elves', 'goblinoids', 'reptilian humanoids', 'blizzards', 'earthquakes', 'floods', 'thunderstorms', 'volcanoes', 'typhoons', 'the gods', 'aberrant evils', 'dragons'],
    notorious: ['never leaving survivors', 'feeding prisoners to wild beasts', 'tattooing or branding prisoners', 'scalping enemies', 'flaying enemies', 'raiding and burning villages', 'plundering merchant caravans', 'eating prisoners raw', 'claiming prisoners as slaves', 'taking prisoners as wives, concubines, or catamites'],
    knownFor: ['screaming and shouting during battle', 'convening with ghosts and spirits', 'ritual animal sacrifice under the new moon', 'ritual humanoid sacrifice deep within the earth', 'ritualistic blood-letting', 'ritualistic sexual acts under the full moon', 'eating unusually-prepared meats', 'prolific amounts of drinking', 'never cutting their hair', 'shaving their heads and bodies', 'wearing long top-knots or braids', 'bathing and perfuming their bodies'],
    attitude: ['rowdy and festive', 'joyful and eager to fight', 'relaxed and carefree', 'frightened and suspicious', 'hostile and suspicious', 'hostile and eager to fight'],
    goals: ['upheaval of the region’s politics', 'disruption of the region’s trade', 'revenge against another civilization', 'revenge against a rival orkish clan', 'spreading chaos and destruction', 'possession of a powerful artifact'],
    tactics: ['hit-and-run tactics', 'ambush tactics', 'unpredictable maneuvers', 'lots of screaming and shouting', 'kicking and stomping', 'lots of head-butting', 'lots of biting and scratching', 'eating', 'looting corpses', 're-forming ranks', 'arguing among themselves'],
    pets: ['boars', 'dire rats', 'giant lizards', 'ogres', 'wargs', 'wolves'],
    slaves: ['dwarves', 'gnomes', 'goblins', 'halflings', 'humans', 'kobolds', 'undead servitors', 'nothing; the orcs eat any captives they take', 'nothing; the orcs leave no survivors', 'nothing; the orcs believe in freedom for all beings'],
    weapons: ['spears and large hunting knives', 'spears and javelins', 'exotic, curved blades and several bolas', 'huge, curved blades', 'exotic, curved blades and blowguns', 'pikes and shortswords', 'pikes and short bows', 'battleaxes and throwing axes', 'battleaxes and longbows', 'longswords and longbows', 'jagged greatswords and shortbows', 'greataxes and javelins']
  };

  const pastry = {
    create: base => {
      const type = random(keys(types));
      const typeData = types[type];
      const pastry = {
        $type: 'pastry',
        $uuid: getUUID(),
        type,
        precedingWord: random(typeData.precedingWord),
        cooking: random(typeData.cooking),
        quality1: random(typeData.qualities),
        quality2: random(typeData.qualities)
      }; // Replace the secondary quality
      // if it's the same as the primary one.

      if (pastry.quality1 === pastry.quality2) {
        for (const quality of typeData.qualities) {
          if (quality !== pastry.quality1) {
            assign(pastry, {
              quality2: quality
            });
            break;
          }
        }
      }

      assign(pastry, {
        accoutrement: getAccoutrement(typeData.qualities),
        aroma: random(descriptors.aroma[pastry.quality1]),
        cookingDescriptor: random(descriptors.cooking[pastry.cooking])
      });

      if (typeData.synonyms) {
        assign(pastry, {
          synonym: random(typeData.synonyms)
        });
      }

      if (base) {
        assign(pastry, base);
      }

      return pastry;
    },
    readout: pastry => {
      const quality1 = random(descriptors.quality[pastry.quality1]);
      const quality2 = random(descriptors.quality[pastry.quality2]);
      return `This ${pastry.precedingWord} ${pastry.synonym || pastry.type} is ${quality1} and ${quality2}. ${pastry.cookingDescriptor} and ${pastry.aroma}. ${random(['', '', `It is served with ${articles.output(pastry.accoutrement || 'jam')}.`])}`;
    }
  };

  function getAccoutrement(qualities) {
    if (qualities.includes('sweet') && qualities.includes('savoury')) {
      const quality = random(['sweet', 'savoury']);
      return random(descriptors.accoutrements[quality]);
    }

    if (qualities.includes('sweet')) {
      return random(descriptors.accoutrements.sweet);
    }

    if (qualities.includes('savoury')) {
      return random(descriptors.accoutrements.savoury);
    }
  }

  const descriptors = {
    quality: {
      // this [type] is ______ and _____
      sweet: ['cloyingly sweet', 'sweet', 'tastefully sweet', 'deliciously sweet', 'honeyed', 'honey and toffee flavoured', 'decadent', 'treacly'],
      airy: ['pillowy', 'airy', 'light', 'melt-in-your-mouth', 'delicate', 'tasteful'],
      savoury: ['aromatic', 'salted', 'lightly salted', 'infused with olive oil', 'made with a browned butter', 'cooked with brown butter'],
      nourishing: ['hearty', 'apparently very tasty', 'substantial', 'filling', 'nourishing', 'healthy', 'nutritious', 'solid', 'generously portioned'],
      sour: ['tart', 'sour', 'lemony', 'sharp', 'acetic', 'flavoured with lemons', 'citrus flavoured']
    },
    cooking: {
      // [cookingDescriptor] and [aroma]
      sticky: ['The glaze on top has an appetising sheen', 'It glistens in the sun', 'It sparkles with sticky sugary goodness'],
      icing: ['The icing has been generously applied on the top', 'There is a healthy layer of icing on the top', 'The icing has hardened slightly and has formed a sugary shell', 'The icing is rich and smooth', 'The icing is decorated in a nice pattern', 'The icing looks a little gritty'],
      baked: ["It's a pleasant brown colour", 'It looks perfectly cooked', "It's a pale blonde colour", 'It has a poofy-ness to it that is quite appetizing'],
      crust: ["There's a gorgeous brown crust on the bottom", 'Looking at the crust, it appears to be slightly underdone', 'The crust looks to be thin and delicate,']
    },
    aroma: {
      // [cookingDescriptor] and [aroma]
      sweet: ['smells faintly of brown butter', 'smells of brown sugar', 'smells faintly of molasses', 'smells of some spice', 'the scent of honey fills your nose as you smell it', 'smells like honey', 'smells like caramel', 'smells sugary'],
      airy: ['smells of vanilla', 'smells like a summer breeze', 'smells of wild flowers', 'smells of delicious fruit'],
      savoury: ['smells nutty', 'smells like home', 'smells like a nice warm fire'],
      nourishing: ['smells of deeply complex spices', 'the scent of vanilla fills your nose', 'smells like olives and herbs', 'has a pleasant aroma to it', "has a 'freshly baked' scent", 'the scent of it fills your nose, since it has been baked fresh'],
      sour: ['you can smell lemons in the air', 'the scent of citrus fills your nostrils', 'smells sweeter the closer you get', 'has a floral scent to it', 'has a lovely fresh scent', 'has a delightfully lemony smell']
    },
    accoutrements: {
      // it is served with ____
      sweet: ['dollop of whipped cream', 'tiny little marshmallow on the side', 'tiny chocolate mint', 'spoonful of honey'],
      savoury: ['cup of tea', 'biscuit', 'edible flower', 'bread']
    }
  };
  const types = {
    // this [type] is [qualityDescriptor] and [qualityDescriptor]. [cookingDescriptor] and [aroma]. It costs [cost]( and is served with an [accoutrement])
    bread: {
      qualities: ['nourishing', 'savoury'],
      precedingWord: ['nut', 'unleavened', 'sourdough', 'date', 'walnut', 'pecan', 'oat'],
      cooking: ['baked', 'crust']
    },
    cake: {
      qualities: ['sweet', 'airy'],
      cooking: ['icing'],
      precedingWord: ['chocolate', 'vanilla', 'yellow', 'sponge', 'bundt', 'carrot', '']
    },
    fruitcake: {
      synonyms: ['cake'],
      qualities: ['sour', 'airy'],
      cooking: ['icing'],
      precedingWord: ['lemon', 'vanilla', 'fruit', 'raisin']
    },
    cookie: {
      qualities: ['savoury', 'sweet', 'nourishing'],
      precedingWord: ['chocolate', 'lemon', 'oat', 'cocoa', 'oatmeal', 'peanut butter', 'vanilla', 'biscotti', 'tea', 'shortbread', 'snickerdoodle'],
      cooking: ['baked', 'icing']
    },
    tart: {
      qualities: ['sweet', 'sour'],
      precedingWord: ['lemon', 'raspberry', 'blackberry', 'orange', 'treacle', 'citrus', 'apple', 'berry', 'cherry', 'egg'],
      cooking: ['sticky', 'baked', 'crust']
    },
    pie: {
      qualities: ['sweet', 'sour'],
      precedingWord: ['lemon', 'blackberry', 'apple and blackberry', 'apple and raspberry', 'raspberry', 'rhubarb', 'strawberry', 'sugar', 'walnut', 'pumpkin', 'citrus', 'apple', 'berry', 'cherry', 'pecan'],
      cooking: ['sticky', 'baked', 'crust']
    }
  };

  const spider = {
    create: base => ({
      $uuid: getUUID(),
      $type: 'spider',
      colour: random(data$3.colour),
      markings: random(data$3.markings()),
      eyes: random(data$3.eyes),
      mouth: random(data$3.mouth),
      poison: random(data$3.poison),
      tactics: random(data$3.tactics),
      webs: random(data$3.webs),
      habitat: random(data$3.habitat),
      ...base
    }),
    readout: spider => {
      return `This spider is ${spider.colour}, and has ${spider.markings}, with ${spider.eyes} and a mouth ${spider.mouth}. This breed thrives in ${spider.habitat}, and their poison causes ${spider.poison}.Their webs are ${spider.webs}. It prefers to ${spider.tactics}`;
    }
  };
  const data$3 = {
    colour: ['black', 'dark grey', 'dark brown', 'black and brown', 'black and grey', 'pale brown', 'brown and grey', 'reddish brown'],
    markings: () => ['pale banding on its legs', 'dark banding on its legs', `bright ${random(['orange', 'red', 'white', 'yellow'])} banding on its legs`, 'pale stripes down its abdomen', 'dark stripes down its abdomen', `a distinct, crimson ${random(['arrowhead', 'pair of eye-like spots', 'hourglass', 'star'])} on its abdomen`, `a distinct, ${random(['black', 'dark grey'])} ${random(['arrowhead', 'pair of eye-like spots', 'hourglass', 'star'])} on its abdomen`, 'no obvious markings'],
    eyes: ['dull and black', 'reflective and black', 'dark grey, almost black', 'dark red', 'bright red', 'pearly white'],
    mouth: ['flanked by fangs, dripping venom', 'flanked by hooked fangs', 'flanked by hairy chelicerae, each ending in a sharp fang', 'flanked by chelicerae, covered in hair that hides any fangs', 'hungrily opening and closing', 'yawning open'],
    poison: ['paralysis', 'loss of consciousness', 'nausea', 'headache', 'loss of coordination', 'blindness', 'dizziness', 'shortness of breath'],
    tactics: ['pick off weak, easy prey', 'pursue its prey until the opportune time to strike', 'lay web traps and wait', 'incapacitate prey, wrap it in webbing and carry it off to its larder', 'ambush prey in territory the spider knows well', 'poison its prey and then retreat, following the prey until it falls'],
    webs: ['sheet-like webs', 'webs with radial symmetry', 'webs with triangular symmetry', 'webs with hexagonal symmetry', 'webs with irregular shapes', 'almost no webs; the spider is constantly on the move and on the hunt'],
    habitat: ['in caverns', 'on cliff-sides', 'on the forest floor', 'in grasslands', 'in jungles', 'in rocky deserts', 'in rotting logs', 'in shallow burrows', 'in swamps', 'in treetops']
  };

  const tree = {
    create: base => {
      const biome = biomes[base?.biome || random(keys(biomes))];
      return {
        $uuid: getUUID(),
        $type: 'tree',
        species: random(biome.species),
        size: random(biome.size),
        feature: random(biome.feature),
        ...base
      };
    },
    readout: tree => {
      return `The ${tree.species} tree is ${tree.size} ${tree.feature}`;
    }
  };
  const biomes = {
    forest: {
      species: ['oak', 'oak', 'oak', 'pine', 'maple', 'birch', 'ash', 'elm', 'fir', 'spruce', 'sycamore', 'alder', 'cypress', 'yew'],
      // a tree that is _______
      size: ['positively huge.', 'as thick as a barrel.', 'so tall that you have to crane your neck back to see the top of it.', 'at least a hundred years old, with an impressive number of branches.', 'huge, even compared to the other trees in the forest.', 'as thick as a man, and twice as tall.', 'half as thick as a man. It looks somewhat weedy.', 'comparatively young; many of the other trees nearby are taller.', 'little more than a stump, save for one limb which keeps its tree status.', 'rather tall, but not very thick; it sways in the wind in such a way that it makes you a little uncomfortable.', 'barely as tall as a man; this was relatively recently planted, and has not had time to grow.'],
      feature: ['Near the base, one can see some initials have been etched into the bark.', 'It is slightly stunted; you can see some burn marks on it.', 'It is slightly mangled, with a couple limbs missing.', 'It has some scratch marks near the base of it.', 'It looks like it has been used as a scratching post for a large creature.', 'There are some feasome looking claw marks halfway up the trunk.']
    },
    mountain: {
      species: ['oak', 'oak', 'oak', 'pine', 'maple', 'birch', 'ash', 'elm', 'fir', 'spruce', 'sycamore', 'alder', 'cypress', 'yew'],
      // a tree that is _______
      size: ['positively huge', 'as thick as a barrel.', 'so tall that you have to crane your neck back to see the top of it.', 'at least a hundred years old, with an impressive number of branches.', 'huge, even compared to the other trees on this side of the mountain.', 'as thick as a man, and twice as tall.', 'half as thick as a man. It looks somewhat weedy.', 'comparatively young; many of the other trees nearby are taller.', 'slightly stunted; you can see some burn marks on it.', 'slightly mangled, with a couple limbs missing.', 'little more than a stump, save for one limb which keeps its tree status.', 'rather tall, but not very thick; it sways in the wind in such a way that it makes you a little uncomfortable.', 'barely as tall as a man; this was relatively recently planted, and has not had time to grow.'],
      feature: ['Near the base, one can see some initials have been etched into the bark.', 'It is slightly stunted; you can see some burn marks on it.', 'It is slightly mangled, with a couple limbs missing.', 'It has some scratch marks near the base of it.', 'It looks like it has been used as a scratching post for a large creature.', 'There are some feasome looking claw marks halfway up the trunk.', 'You can see some marks where climbing gear had been forced into the tree a long time ago.', 'You can see some bird has made this tree its home.', 'The crunch of egg shells under foot tell you that this was once home to a bird nest.']
    },
    desert: {
      species: ['oak', 'oak', 'oak', 'pine', 'maple', 'birch', 'ash', 'elm', 'fir', 'spruce', 'sycamore', 'alder', 'cypress', 'yew'],
      // a tree that is _______
      size: ['as thick as a barrel.', 'so tall that you have to crane your neck back to see the top of it.', 'at least a hundred years old, with an impressive number of branches.', 'huge, but even more impressive with no other trees in sight.', 'as thick as a man, and twice as tall.', 'half as thick as a man. It looks somewhat weedy due to the poor conditions that it has been growing in.', 'comparatively young; it looks to have been planted by a traveler.', 'little more than a stump, save for one limb which keeps its tree status.', 'rather tall, but not very thick; it sticks out like a sore thumb against the flat horizon.', 'barely as tall as a man; this was relatively recently planted, and has had neither the time nor water to grow.'],
      feature: ['Near the base, one can see some initials have been etched into the bark.', 'It is slightly stunted; you can see some burn marks on it.', 'There are some nasty scorch marks on the side of it.', 'It is slightly mangled, with a couple limbs missing.', 'It has some scratch marks near the base of it.', 'It looks like it has been used as a scratching post for a large creature.', 'There are some feasome looking claw marks halfway up the trunk.', 'You can see some marks where climbing gear had been forced into the tree a long time ago for a better view of the horizon.', 'You can see some bird has made this tree its home.', 'The crunch of egg shells under foot tell you that this was once home to a bird nest.']
    },
    plains: {
      species: ['oak', 'oak', 'oak', 'pine', 'maple', 'birch', 'ash', 'elm', 'fir', 'spruce', 'sycamore', 'alder', 'cypress', 'yew'],
      // a tree that is _______
      size: ['as thick as a barrel.', 'so tall that you have to crane your neck back to see the top of it.', 'at least a hundred years old, with an impressive number of branches.', 'huge, even compared to the other trees on the horizon.', 'as thick as a man, and twice as tall.', 'half as thick as a man. It looks somewhat weedy.', 'comparatively young; it looks to have been planted by a traveler.', 'little more than a stump, save for one limb which keeps its tree status.', 'rather tall, but not very thick; it sways in the wind in such a way that it makes you a little uncomfortable.', 'barely as tall as a man; this was relatively recently planted, and has not had time to grow.'],
      feature: ['Near the base, one can see some initials have been etched into the bark.', 'It is slightly stunted; you can see some burn marks on it.', 'It is slightly mangled, with a couple limbs missing.', 'It has some scratch marks near the base of it.', 'It looks like it has been used as a scratching post for a large creature.', 'There are some feasome looking claw marks halfway up the trunk.', 'You can see some marks where climbing gear had been forced into the tree a long time ago.', 'You can see some bird has made this tree its home.', 'The crunch of egg shells under foot tell you that this was once home to a bird nest.']
    }
  };

  const wolf = {
    create: base => ({
      $uuid: getUUID(),
      $type: 'wolf',
      colour: random(data$2.colour),
      markings: random(data$2.markings()),
      eyes: random(data$2.eyes),
      manner: random(data$2.manner),
      prey: random(data$2.prey),
      tactics: random(data$2.tactics),
      packStatus: random(data$2.packStatus),
      habitat: random(data$2.habitat),
      ...base
    }),
    readout: wolf => {
      return `This wolf is ${wolf.colour}, and has ${wolf.markings} coat, with ${wolf.eyes}. It is ${wolf.manner}, and is ${wolf.packStatus}. This breed thrives in ${wolf.habitat}. It prefers to ${wolf.tactics}, and if given the choice, it prefers ${wolf.prey}`;
    }
  };
  const data$2 = {
    colour: ['black', 'dark grey', 'dark brown', 'black and brown', 'black and grey', 'pale brown', 'brown and grey', 'reddish brown', 'sandy brown', 'white'],
    markings: () => ['white or pale fur on each paw', 'white or pale fur on one paw', 'white or pale fur around the face and muzzle', 'black or dark fur around the face and muzzle', `a banded pattern on its back${random(['dark grey', 'pale grey', 'reddish brown', 'sandy brown'])}`, 'lighter fur on its belly', 'darker fur on its belly', `a distinct, ${random(['white', 'pale grey'])} ${random(['arrowhead', 'pair of eye-like spots', 'hourglass', 'star'])} on its chest`, `a scar from a past injury on its ${random(['flank', 'foreleg', 'hindleg', 'snout', 'eye', 'ear'])}`, 'no obvious markings'],
    eyes: ['reflective and black', 'pale grey', 'brownish grey', 'dark grey', 'dark brown', 'golden brown', 'light brown', 'red', 'yellow', 'green', 'pale blue', 'dark blue'],
    manner: ['panting lightly', 'panting heavily, its tongue lolling out of its mouth', 'salivating', 'hungrily licking its chops', 'yawning', 'watching curiously', 'watching warily', 'pacing nervously', 'whining softly', 'watching with ears perked and hackles raised', 'growling low, giving warning', 'standing perfectly still, ready to lunge'],
    tactics: ['pick off weak, easy prey', 'stalk its prey until the opportune time to strike', 'harrying its prey over long distances until the prey is exhausted', 'chase its prey to a place where its packmates are waiting in ambush', 'wait in ambush while one or more of its packmates chases the prey to it', 'choose its prey and to run it down'],
    prey: ['rabbit', 'squirrel', 'pheasant', 'goose', 'deer', 'sheep', 'chicken', 'carrion', 'human flesh', "scraps from a roadside inn's refuse heap"],
    packStatus: ['the alpha of a large pack', 'the alpha of a small pack', 'the beta of its pack, patiently waiting for the alpha to fail', 'the beta of its pack, constantly challenging the alpha', 'somewhere in the middle of the pack order, looking for opportunities to ascend', 'somewhere in the middle of the pack order, satisfied to follow the alpha', 'the omega of a large pack', 'the omega of a small pack', 'one of a mated pair', 'a lone predator'],
    habitat: ['in canyonlands', 'in grassy hills', 'in forested hills', 'on grassy plains', 'in ancient forests', 'in young forests', 'in rocky deserts', 'in the foothills of mountains', 'in mountain passes', 'in frozen lands']
  };

  function createAllies(faction) {
    console.log('finding allies...');
    const sizeRoll = fm(faction.roll.size, random([20, -20]));
    const groupList = ['commoners', 'knights', 'politicians', 'thieves', 'merchants', 'wizards', 'rangers', 'seers', 'priests', 'monks', 'assassins', 'artisans', 'nobles', 'bards', 'mercenaries', 'bandits', 'craftsmen', 'scholars'];
    const groupSizeModifier = sizeRoll - 50 + (faction.roll.reputation - 50 + (faction.roll.size - 50));
    const allies = [];

    if (sizeRoll >= 90) {
      faction.alliesDescription = 'an immense number of people to rely on for aid';
      repeat(() => getAllyGroup(random(-10, 15)), 5);
    } else if (sizeRoll >= 80) {
      faction.alliesDescription = 'many allies';
      repeat(() => getAllyGroup(random(-15, 15)), 5);
    } else if (sizeRoll >= 70) {
      faction.alliesDescription = 'a considerable number of allies';
      repeat(() => getAllyGroup(random(-20, 15)), 4);
    } else if (sizeRoll >= 60) {
      faction.alliesDescription = 'a decent number of allies';
      repeat(() => getAllyGroup(15), 3);
    } else if (sizeRoll >= 50) {
      faction.alliesDescription = 'some strong allies';
      repeat(() => getAllyGroup(10), 2);
    } else if (sizeRoll >= 40) {
      faction.alliesDescription = 'a handful of trusted allies';
      getAllyGroup(10);
      getAllyGroup(-10);
    } else if (sizeRoll >= 30) {
      faction.alliesDescription = 'a couple trusted allies';
      getAllyGroup(-15);
    } else if (sizeRoll >= 20) {
      faction.alliesDescription = 'few allies';
      getAllyGroup(10);
    } else if (sizeRoll < 20) {
      faction.alliesDescription = 'barely any allies';
      getAllyGroup(10);
    }

    function getAllyGroup(bonus) {
      const groupSizeRoll = dice(2, 50) + groupSizeModifier + bonus;
      const tempGroupSize = getGroupSize$1(groupSizeRoll);
      let tempGroup = random(groupList);
      removeFromArray(groupList, tempGroup);

      if (tempGroup === faction.type) {
        tempGroup = `fellow ${tempGroup}`;
      }

      allies.push(tempGroupSize + tempGroup);
    }

    faction.allies = allies;
  }

  function getGroupSize$1(roll) {
    if (roll >= 90) return 'a veritable army of ';
    if (roll >= 80) return 'a guild of ';
    if (roll >= 70) return 'a large number of ';
    if (roll >= 60) return 'quite a few ';
    if (roll >= 50) return 'more than a couple ';
    if (roll >= 40) return 'a couple ';
    if (roll >= 30) return 'some ';
    if (roll >= 20) return 'a few ';
    if (roll >= 10) return 'a handful of ';
    return 'three or four ';
  }

  function createLeaderGroup(faction) {
    if (faction.leadershipType !== 'group') {
      throw new Error('Incompatible faction leadership type.');
    }

    faction.roll.meetingAccessibility = dice(2, 50);
    faction.roll.meetingRegularity = dice(2, 50) + fm(faction.roll.stability, -50);
    faction.leaderGroupSize = dice(3, 4);
    faction.meetingRegularity = getMeetingRegularity(faction.roll.meetingRegularity);
    faction.meetingAccessibility = getMeetingAccessibility(faction.roll.meetingAccessibility);
    faction.leaderGroupTitle = getLeaderGroupTitle(faction.leaderGroupSize);
  }

  function getMeetingRegularity(roll) {
    if (roll > 95) return 'every day, at 5pm sharp';
    if (roll > 90) return 'every other day';
    if (roll > 80) return 'every third day';
    if (roll > 70) return 'every week';
    if (roll > 60) return 'every ten days';
    if (roll > 55) return 'whenever a meeting is called';
    if (roll > 50) return 'once a fortnight';
    if (roll > 45) return 'once every three weeks';
    if (roll > 40) return 'once a month';
    if (roll > 30) return 'whenever a leader calls them';
    if (roll > 20) return 'whenever three of the leaders happen to be together';
    if (roll > 10) return 'once in a blue moon';
    return 'at literally any time';
  }

  function getMeetingAccessibility(roll) {
    if (roll > 95) return 'announced well ahead of time and are open to anyone';
    if (roll > 90) return 'announced ahead of time and are open to anyone';
    if (roll > 80) return 'are open to anyone';
    if (roll > 70) return 'are open to senior members';
    if (roll > 60) return 'are open to members';
    if (roll > 55) return 'are open to people accompanied by a member';
    if (roll > 50) return 'are not usually open to non-members';
    if (roll > 45) return 'are not open to non-members';
    if (roll > 40) return 'are held behind closed doors';
    if (roll > 30) return 'are open to those that can find them';
    if (roll > 20) return 'are invite-only';
    if (roll > 10) return 'closed to all';
    return 'closed and held in secret';
  }

  function getLeaderGroupTitle(groupSize) {
    if (groupSize > 11) return 'cabinet';
    if (groupSize > 8) return 'board';
    if (groupSize > 3) return 'committee';
    if (groupSize > 2) return 'triumvirate';
    throw new Error('Invalid group size.');
  }

  const factionData = {
    rollData: {
      reputation: {
        rolls: [[95, 'excellent'], [90, 'very good'], [80, 'quite good'], [70, 'good'], [60, 'above average'], [55, 'slightly above average'], [50, 'average'], [45, 'slightly below average'], [40, 'poor'], [30, 'quite poor'], [20, 'very poor'], [10, 'extremely poor']]
      },
      resources: {
        rolls: [[95, 'limitless'], [90, 'near limitless'], [80, 'extensive'], [70, 'significant'], [60, 'many'], [55, 'decent'], [50, 'average'], [45, 'slightly below average'], [40, 'somewhat limited'], [30, 'limited'], [20, 'quite poor'], [10, 'extremely poor'], [5, 'destitute']]
      }
    },
    resources: {
      forms: {
        physical: {
          // They have _____ ${resource}
          rolls: [[90, 'veritable warehouses full of'], [70, 'a room full of'], [50, 'a significant number of'], [30, 'a handful of'], [10, 'one or two valuable']]
        },
        money: {
          // They have _____ ${resource}
          rolls: [[90, 'a bank full of'], [70, 'chests full of'], [50, 'a chest of'], [30, 'a couple pouches of'], [10, 'barely enough']]
        },
        paper: {
          rolls: [[90, 'shelves upon shelves of'], [70, 'binders full of'], [50, 'sheafs of'], [30, 'a drawer of'], [10, 'a handful of']]
        },
        knowledge: {
          rolls: [[90, 'an almost omniscient knowledge of'], [70, 'some extremely rare'], [50, 'some rare'], [30, 'some secret'], [10, 'some relatively easy to discover']]
        },
        people: {
          rolls: [[90, 'scores upon scores of'], [70, 'a crowd of'], [50, 'a fair few'], [30, 'a handful of'], [10, 'one or two']]
        },
        animal: {
          rolls: [[90, "a damn zoo's worth of"], [70, 'a menagerie'], [50, 'a couple'], [30, 'three'], [10, 'one or two']]
        }
      },
      types: {
        'artifacts': {
          isDefault: true,
          form: 'physical'
        },
        'blackmail material': {
          isDefault: true,
          form: 'paper'
        },
        'gold': {
          isDefault: true,
          form: 'money'
        },
        'contacts': {
          isDefault: true,
          form: 'people'
        },
        'favours': {
          isDefault: true,
          form: 'people'
        },
        'debtors': {
          isDefault: true,
          form: 'people'
        },
        'gems': {
          isDefault: true,
          form: 'physical'
        },
        'magic scrolls': {
          isMagic: true,
          isDefault: true,
          form: 'paper'
        },
        'magical trinkets': {
          isMagic: true,
          isDefault: true,
          form: 'physical'
        },
        'magical weapons': {
          isMagic: true,
          isDefault: true,
          form: 'physical'
        },
        'magical instruments': {
          isMagic: true,
          isArt: true,
          form: 'physical'
        },
        'magical contraptions': {
          isMagic: true,
          form: 'physical'
        },
        'old favours': {
          isDefault: true,
          form: 'people'
        },
        'trade goods': {
          isDefault: true,
          form: 'physical'
        },
        'masterpieces': {
          isArt: true,
          form: 'physical'
        },
        'stolen goods': {
          form: 'physical'
        },
        'important manuscripts': {
          form: 'paper'
        },
        'political influence': {
          form: 'people'
        },
        'foreign goods': {
          form: 'physical'
        },
        'holy relics': {
          isReligious: true,
          form: 'physical'
        },
        'sacred texts': {
          isReligious: true,
          form: 'paper'
        },
        'tame animals': {
          form: 'animal'
        }
      }
    },
    types: {
      artisans: {
        type: 'artisans',
        leader: {
          format: {
            group: 3,
            individual: 5
          },
          qualification: {
            'the wealthiest of the group': 1,
            'the strongest of the group': 1,
            'able to rise to power by completing a masterpiece': 2,
            'able to rise to power by completing an ordeal': 1,
            'the most charismatic of the group': 1,
            'democratically elected': 1,
            'able to oust the previous leadership': 1,
            'able to rise to power through nepotism': 3,
            'promoted by being the most powerful in the group': 1
          },
          base: {
            title: 'Aesthetician',
            hasClass: false,
            profession: 'artisan',
            background: 'guild artisan'
          }
        },
        wordNoun: 'guild',
        probability: 5,
        alliesList: {
          hitmen: 2,
          nobles: 4
        },
        rivalsList: {
          nobles: 1,
          commoners: 1,
          bandits: 4,
          assassins: 3
        },
        joiningRequirement: {
          'a display of skill': 3,
          'some social status': 3,
          'an excellent reputation': 3
        },
        joiningInitiation: {
          'a simple form to be filled': 2,
          'an oath to be taken': 1,
          'a secret ritual': 1
        },
        members: {
          membershipIsMutuallyExclusive: false,
          membershipIsTotallyExclusive: false,
          professions: ['painter', 'dancer', 'bard', 'artisan', 'model', 'rope walker', 'furniture artisan', 'musician', 'playwright', 'poet', 'singer', 'skald', 'stage magician', 'theater director', 'stagehand', 'talent scout', 'actor', 'jester', 'minstrel', 'sculptor', 'writer', 'acrobat', 'trapezist', 'arranger', 'celebrity', 'choirmaster', 'clown', 'comedian', 'conductor', 'contortionist', 'curator', 'costumer', 'equilibrist', 'fashion designer', 'glass painter', 'juggler', 'limner', 'makeup artist']
        },
        membersTrait: {
          'the ring that members are given': 1,
          'their excessively bureaucratic tendencies': 1,
          'their absentmindedness': 1,
          'their egos': 1,
          'their attention to detail': 1,
          'their creativity': 1,
          'their lust for fame': 1,
          'their pride': 1
        },
        names: {
          main: ['Creators', 'Visionaries', 'Artisans', 'Artists'],
          adjective: ['Creative', 'Inspired', 'Bohemian', 'Unpaid', 'God-Touched'],
          group: ['Society', 'Group', 'League', 'Collective', 'Brothers', 'Brotherhood', 'Order'],
          unique: ['The Cubists', 'The Impressionables', 'The Impressionists', 'The Romanticists', 'The Dirty Paintings', 'The Dirty Painters', 'The Dirty Paint Club']
        },
        motivation: {
          money: 5,
          fame: 3,
          glory: 3,
          vengeance: 1,
          politics: 1
        },
        resources: {
          'artifacts': 3,
          'magical trinkets': 3,
          'masterpieces': 3
        }
      },
      assassins: {
        type: 'assassins',
        leader: {
          format: {
            group: 2,
            individual: 5
          },
          qualification: {
            'the wealthiest of the group': 1,
            'the strongest of the group': 2,
            'able to rise to power by completing an ordeal': 1,
            'the most charismatic of the group': 1,
            'democratically elected': 1,
            'able to oust the previous leadership': 3,
            'able to rise to power through nepotism': 3,
            'promoted by being the most powerful in the group': 3
          },
          base: {
            hasClass: true,
            title: 'High Assassin',
            profession: 'rogue',
            background: ['charlatan', 'soldier', 'criminal']
          }
        },
        wordNoun: 'company',
        probability: 4,
        alliesList: {
          thieves: 3,
          urchins: 3,
          bandits: 3
        },
        rivalsList: {
          scholars: 2,
          mercenaries: 3
        },
        joiningRequirement: {
          'referral by an existing member': 1,
          'referral by several members': 1,
          'endorsement by the current leader': 1,
          'a display of skill': 2,
          'a display of loyalty': 1,
          'a display of bravery': 1
        },
        joiningInitiation: {
          'a secret task': 2,
          'an oath to be taken': 2,
          'a secret ritual': 2
        },
        members: {
          membershipIsMutuallyExclusive: true,
          membershipIsTotallyExclusive: false,
          professions: ['assassin', 'rogue', 'poisoner']
        },
        membersTrait: {
          'the ring that members are given': 1,
          "absolutely nothing; they're completely anonymous": 1,
          'their black sashes': 1,
          'their tendency to blink quickly': 1,
          'their quick tempers': 1
        },
        names: {
          main: ['Dagger', 'Knife', 'Executioners', 'Hangmen', 'Hitmen', 'Killers', 'Doctors'],
          adjective: ['Cunning', 'Discreet', 'Quiet', 'Bloody', 'Rusted', 'Poisoned', 'Defiled'],
          group: ['Society', 'Group', 'League', 'Collective', 'Brothers', 'Brotherhood', 'Order'],
          unique: ['Dead Is Dead', 'The Killers', 'The Slayers', 'The Big Game Players', 'The Blood Club', 'The League of Silence', 'The Silencers', 'The Whispers', 'The Shadow Faction', 'Shadowfront']
        },
        motivation: {
          money: 3,
          fame: 1,
          power: 3,
          glory: 1,
          vengeance: 3,
          politics: 3
        },
        resources: {
          'blackmail material': 4,
          'stolen goods': 4,
          'contacts': 3
        }
      },
      bandits: {
        type: 'bandits',
        leader: {
          format: {
            group: 2,
            individual: 5
          },
          qualification: {
            'the wealthiest of the group': 1,
            'the strongest of the group': 2,
            'able to rise to power by completing an ordeal': 3,
            'the most charismatic of the group': 1,
            'democratically elected': 1,
            'able to oust the previous leadership': 1,
            'able to rise to power through nepotism': 3,
            'promoted by being the most powerful in the group': 1
          },
          base: {
            title: 'Chief',
            hasClass: true,
            profession: 'fighter',
            background: ['soldier', 'charlatan', 'criminal']
          }
        },
        wordNoun: 'gang',
        probability: 2,
        alliesList: {
          hitmen: 4,
          urchins: 2
        },
        rivalsList: {
          commoners: 5,
          bandits: 3,
          mercenaries: 5
        },
        joiningRequirement: {
          'referral by an existing member': 1,
          'referral by several members': 1,
          'endorsement by the current leader': 1,
          'a display of skill': 2,
          'a display of loyalty': 1,
          'a display of bravery': 1
        },
        joiningInitiation: {
          'a secret task': 2,
          'an oath to be taken': 2,
          'a secret ritual': 2
        },
        members: {
          membershipIsMutuallyExclusive: true,
          membershipIsTotallyExclusive: false,
          professions: ['thief', 'smuggler', 'marauder', 'kidnapper', 'highwayman', 'fugitive', 'burglar', 'bandit']
        },
        membersTrait: {
          'the ring that members are given': 1,
          'their excessively bureaucratic tendencies': 1,
          'their distinctive headgear': 1,
          'their white horses': 1,
          'their love of a good fight': 3,
          'being ruthless in combat': 1,
          'following any order given to them': 1,
          'fighting to the death': 1
        },
        names: {
          main: ['Ravens', 'Crows', 'Jackals', 'Flesh', 'Knife', 'Club', 'Axe', 'Sword', 'Vultures', 'Dingoes', 'Tigers'],
          adjective: ['Cutthroat', 'Backstabbing', 'Two Timing', 'Orphaned', 'Dead', 'Brutal', 'Bleeding', 'Bloodied', 'Razor', 'Serrated'],
          group: ['Gang', 'Sons', 'Clan', 'Vassals'],
          unique: ['Tunnel Snakes', 'Moonrunners', 'The Orphans', 'Turnbull ACs', 'VanCortlandt Rangers', 'The Destroyers', 'The Jones Street Boys', 'Saracens', "Satan's Mothers", 'The Warriors', 'Baseball Furies', 'Boppers', 'Electric Eliminators', 'Gramercy Riffs', 'Hi-Hats', 'Hurricanes', 'Lizzies', 'Panzers', 'Punks', 'Rogues', 'Savage Huns', 'The VanBuren Boys']
        },
        motivation: {
          money: 3,
          fame: 1,
          power: 3,
          glory: 1,
          vengeance: 3,
          politics: 3
        },
        resources: {
          'magical weapons': 3,
          'gold': 3,
          'blackmail material': 4,
          'stolen goods': 5
        }
      },
      bards: {
        type: 'bards',
        leader: {
          format: {
            group: 5,
            individual: 3
          },
          qualification: {
            'the wealthiest of the group': 1,
            'the strongest of the group': 1,
            'able to rise to power by completing a masterpiece': 2,
            'able to rise to power by completing an ordeal': 1,
            'the most charismatic of the group': 1,
            'democratically elected': 1,
            'able to oust the previous leadership': 1,
            'able to rise to power through nepotism': 3,
            'promoted by being the most powerful in the group': 1
          },
          base: {
            title: 'Maestro',
            hasClass: true,
            profession: 'bard',
            background: 'entertainer'
          }
        },
        wordNoun: 'college',
        probability: 5,
        alliesList: {
          priests: 1,
          urchins: 2,
          nobles: 3
        },
        rivalsList: {
          bandits: 4
        },
        joiningRequirement: {
          'a display of skill': 3,
          'some social status': 3,
          'an excellent reputation': 3
        },
        joiningInitiation: {
          'a simple form to be filled': 2,
          'an oath to be taken': 1,
          'a secret ritual': 1
        },
        members: {
          membershipIsMutuallyExclusive: true,
          membershipIsTotallyExclusive: false,
          professions: ['bard', 'singer', 'musician', 'arranger', 'composer', 'copyist', 'instrument Maker', 'playwright', 'luthier']
        },
        membersTrait: {
          'the ring that members are given': 1,
          'their excessively bureaucratic tendencies': 1,
          'their absentmindedness': 1,
          'their egos': 1,
          'their attention to detail': 1,
          'their creativity': 1,
          'their lust for fame': 1,
          'their pride': 1,
          'their terrible ballads': 1,
          'their limerick rhyming': 1,
          'their funky harmonies': 1,
          'their use of tritone substitution and negative harmony': 1,
          'their stochastically generated microtonal four-voice fugues': 1
        },
        names: {
          main: ['Rehearsals', 'Musicians', 'Bards', 'Harmonies', 'Poems', 'Ballads', 'Arias', 'Lutes', 'Minstrels'],
          adjective: ['Tuneful', 'Melodious', 'Inspired', 'Twelve Tone', 'Busking'],
          group: ['Symphony', 'Quartet', 'Ensemble', 'Society', 'Group', 'League', 'Collective', 'Brothers', 'Brotherhood', 'Order'],
          unique: ['Copperback', 'The Tumbling Pebbles', 'King', 'Megabeggars', 'The Wu Tang Clang', 'Earth, Wind and Shire', 'Iron Wench', 'Sex Crossbows', 'Def leprechaun']
        },
        motivation: {
          money: 3,
          fame: 5,
          glory: 3,
          politics: 1
        },
        resources: {
          'gold': 3,
          'contacts': 5,
          'old favours': 4,
          'important manuscripts': 4,
          'masterpieces': 3,
          'magical instruments': 3
        }
      },
      clergy: {
        type: 'clergy',
        leader: {
          format: {
            group: 5,
            individual: 3
          },
          qualification: {
            'the wealthiest of the group': 1,
            'able to rise to power by communing with a deity': 4,
            'able to rise to power by completing an ordeal': 1,
            'the most charismatic of the group': 1,
            'democratically elected': 1,
            'able to oust the previous leadership': 1,
            'able to rise to power through nepotism': 3,
            'promoted by being the most powerful in the group': 1
          },
          base: {
            title: 'Clergyman',
            hasClass: true,
            profession: 'cleric'
          }
        },
        wordNoun: 'church',
        probability: 5,
        alliesList: {
          mercenaries: 1,
          commoners: 1,
          nobles: 1,
          artisans: 1,
          seers: 1
        },
        rivalsList: {
          assassins: 1,
          bards: 1,
          thieves: 1,
          commoners: 1
        },
        joiningRequirement: {
          'holy deeds': 1,
          'a show of faith': 1,
          'a good deed': 1,
          'a generous tithe': 1
        },
        joiningInitiation: {
          'sacraments and rituals': 1,
          'a blessing from the head priest': 1
        },
        members: {
          membershipIsMutuallyExclusive: true,
          membershipIsTotallyExclusive: true,
          professions: ['priest', 'pilgrim', 'nun', 'friar', 'clergyman', 'theologian', 'templar', 'sexton', 'prophet', 'pardoner', 'missionary', 'inquisitor', 'high priest', 'exorcist', 'diviner', 'deacon', 'confessor', 'cardinal', 'cantor', 'bishop', 'archbishop', 'almoner', 'acolyte', 'abbot']
        },
        membersTrait: {
          'amulets with a holy sigil': 1,
          'the ring that members are given': 1,
          'wearing flowing white robes': 1,
          'a holy symbol tattooed on their face': 1
        },
        names: {
          main: ['Mother', 'Father', 'Lord'],
          adjective: ['Heavenly', 'Merciful', 'Holy', 'Righteous', 'Saintly'],
          group: ['Church', 'Convent', 'Congregation', 'Clergy'],
          unique: ["The Lord's Chosen", 'The Greater Good', 'The Greatest Good', 'The Convent', 'The Clergy']
        },
        motivation: {
          devotion: 3,
          power: 1,
          politics: 1
        },
        resources: {
          contacts: 1
        }
      },
      commoners: {
        type: 'commoners',
        leader: {
          format: {
            group: 5,
            individual: 3
          },
          qualification: {
            'the wealthiest of the group': 1,
            'the most charismatic of the group': 4,
            'democratically elected': 6,
            'able to oust the previous leadership': 4,
            'able to rise to power through nepotism': 3,
            'promoted by being the most powerful in the group': 1
          },
          base: {
            title: 'Secretary',
            hasClass: false,
            profession: 'politician'
          }
        },
        wordNoun: 'union',
        probability: 5,
        alliesList: {
          mercenaries: 1,
          commoners: 5,
          artisans: 1,
          seers: 1,
          craftsman: 2
        },
        rivalsList: {
          assassins: 1,
          bards: 1,
          thieves: 1,
          nobles: 5
        },
        joiningRequirement: {
          'a show of solidarity': 1,
          'a show of charity': 1,
          'a good deed': 1,
          'a generous donation': 1
        },
        joiningInitiation: {
          'a tattooing': 1,
          'a pledge': 1
        },
        members: {
          membershipIsMutuallyExclusive: true,
          membershipIsTotallyExclusive: false,
          professions: ['animal handler', "blacksmith's assistant", 'brickmason', 'caravanner', 'chef', 'cook', 'cooper', 'cowherd', 'glovemaker', 'herbalist', 'inventor', 'jeweller', 'librarian', 'locksmith', 'masseur', 'merchant', 'minister', 'mortician', 'nurse', 'patissier', 'scholar', "ship's captain", 'silversmith', 'spice merchant', 'stone mason', 'shopkeep', 'teacher', 'veterinarian', 'vintner', 'woodcarver', 'writer', 'falconer', 'florist', 'forester', 'gamekeeper', 'horse trainer', 'prospector', 'general contractor', 'glass painter', 'artisan', 'accountant', 'interpreter', 'coinsmith', 'furniture artisan', 'lapidary', 'assay master', 'conservationist', 'notary', 'orator', 'trainer']
        },
        membersTrait: {
          'amulets with a sigil': 1,
          'the ring that members are given': 1,
          'the zealous attitude': 1
        },
        names: {
          main: ['People', 'Workers', 'Salarymen', 'Labourers', 'Commoners', 'Folk'],
          adjective: ['United', 'Indivisable', 'Undisputed', 'Unified', 'Fair', 'Righteous', 'Common Sense', 'Triumphant'],
          group: ['Collective', 'Union', 'Coalition', 'Society', 'Association', 'Front'],
          unique: ['The United People\'s Front']
        },
        motivation: {
          power: 2,
          politics: 4
        },
        resources: {
          contacts: 3
        }
      },
      craftsmen: {
        type: 'craftsmen',
        leader: {
          format: {
            group: 5,
            individual: 3
          },
          qualification: {
            'the wealthiest of the group': 3,
            'able to rise to power by completing an ordeal': 1,
            'the most charismatic of the group': 1,
            'democratically elected': 1,
            'able to oust the previous leadership': 1,
            'able to rise to power through nepotism': 3,
            'promoted by being the most powerful in the group': 1
          },
          base: {
            title: 'Master',
            hasClass: false,
            profession: 'craftsman',
            background: 'guild artisan'
          }
        },
        wordNoun: 'guild',
        probability: 5,
        alliesList: {
          priests: 1,
          nobles: 3,
          artisans: 2,
          seers: 1,
          commoners: 3
        },
        rivalsList: {
          commoners: 2,
          bandits: 3
        },
        joiningRequirement: {
          'some social status': 1,
          'a display of skill': 3,
          'referral by an existing member': 1
        },
        joiningInitiation: {
          'a simple form to be filled': 2,
          'an oath to be taken': 1,
          'a secret ritual': 1
        },
        members: {
          membershipIsMutuallyExclusive: false,
          membershipIsTotallyExclusive: false,
          professions: ['potter', 'perfumer', 'locksmith', 'leatherworker', 'jeweller', 'hatter', 'goldsmith', 'silversmith', 'glovemaker', 'furrier', 'cobbler', 'craftsman', 'clock maker', 'carpenter', 'blacksmith', 'armorer', 'apprentice', 'wheelwright', 'weaponsmith', 'tinker', 'printer', 'optician', 'luthier', 'lapidary', 'instrument Maker', 'glassblower', 'furniture artisan', 'engraver']
        },
        membersTrait: {
          'the ring that members are given': 1,
          'their excessively bureaucratic tendencies': 1,
          'their absentmindedness': 1,
          'their egos': 1,
          'their attention to detail': 1,
          'their creativity': 1,
          'their lust for fame': 1,
          'their pride': 1
        },
        names: {
          main: ['Creators', 'Visionaries', 'Crafters', 'Craftsmen'],
          adjective: ['Creative', 'Inspired', 'Bohemian', 'Unpaid', 'God-Touched'],
          group: ['Society', 'Group', 'League', 'Collective', 'Brothers', 'Brotherhood', 'Order', 'Workshop', 'Factory'],
          unique: ['The Clicks of the Spring', 'The Offerman Order', 'The Blessed Workshop', 'The Factory']
        },
        motivation: {
          money: 5,
          fame: 1,
          power: 3,
          glory: 1,
          vengeance: 3,
          politics: 1
        },
        resources: {
          'gold': 3,
          'contacts': 3,
          'important manuscripts': 4,
          'masterpieces': 3,
          'artifacts': 3,
          'magical contraptions': 3
        }
      },
      druids: {
        type: 'druids',
        leader: {
          format: {
            group: 5,
            individual: 3
          },
          qualification: {
            'the wealthiest of the group': 3,
            'able to rise to power by completing an ordeal': 1,
            'the most charismatic of the group': 1,
            'democratically elected': 1,
            'able to oust the previous leadership': 1,
            'able to rise to power through nepotism': 3,
            'promoted by being the most powerful in the group': 1
          },
          base: {
            hasClass: true,
            profession: 'druid'
          }
        },
        wordNoun: 'grove',
        probability: 5,
        alliesList: {
          bards: 1,
          rangers: 1
        },
        rivalsList: {
          assassins: 1,
          wizards: 1
        },
        joiningRequirement: {
          'become a druid': 1,
          'give up all worldly possessions': 1
        },
        joiningInitiation: {
          'fight a bear with your bare hands': 1
        },
        members: {
          membershipIsMutuallyExclusive: true,
          membershipIsTotallyExclusive: false,
          professions: ['druid', 'ranger', 'forester', 'fowler', 'forager', 'arborist']
        },
        membersTrait: {
          'brown and dirty robes': 1,
          'leathery tanned skin': 1
        },
        names: {
          main: ['Green', 'Wild', 'Forest', 'Stream', 'Sky'],
          adjective: ['Holy', 'Great', 'Wide', 'Open'],
          group: ['Coven', 'Circle', 'Tribe', 'Grove'],
          unique: ['Circle of the Green']
        },
        motivation: {
          'peace': 1,
          'growth of nature': 1,
          'love of nature': 1
        },
        resources: {
          'tame animals': 5
        }
      },
      foreigners: {
        type: 'foreigners',
        leader: {
          format: {
            group: 5,
            individual: 3
          },
          qualification: {
            'incredibly well spoken': 2,
            'fluent in common, though with a strong accent': 2,
            'the best dressed of the group': 1,
            'the most charismatic of the group': 1,
            'chosen by his government as a representative': 1,
            'incredibly beautiful and charming': 1,
            'driven and ambitious': 1,
            'the fattest man you have ever seen': 1,
            'able to rise to power through nepotism': 1,
            'the most intelligent man in the room': 1
          },
          base: {
            hasClass: false,
            profession: 'diplomat',
            background: 'noble'
          }
        },
        wordNoun: 'embassy',
        probability: 2,
        alliesList: {
          merchants: 2,
          mercenaries: 1,
          commoners: 1,
          nobles: 3,
          artisans: 2,
          craftsmen: 2
        },
        rivalsList: {
          wizards: 1,
          assassins: 2,
          commoners: 3,
          priests: 1
        },
        joiningRequirement: {
          'familial ties to their home country': 1,
          'an expressed desire for citizenship': 1,
          'a bond of kinship': 1
        },
        joiningInitiation: {
          'complex citizenship paperwork': 2,
          'an oath of fealty to their king': 1,
          'a sufficiently large bribe': 1
        },
        members: {
          membershipIsMutuallyExclusive: false,
          membershipIsTotallyExclusive: false,
          professions: ['noble', 'diplomat', 'missionary', 'exile', 'merchant']
        },
        membersTrait: {
          'their tattoos and facial piercings': 1,
          'their outlandish clothes': 1,
          'their strangely colored hair': 1,
          'their orange clothes': 1,
          'their large earrings': 1,
          'their gaudy jewellery': 1
        },
        names: {
          main: ['Peoples', 'Citizens', 'Lords', 'Peoples'],
          adjective: ['Foreign', 'Distant', 'External', 'Alien', 'Foreign'],
          group: ['Embassy', 'Embassy', 'Embassy', 'Consulate', 'Legation', 'Ministry', 'Diplomatic Mission'],
          unique: ["Citizen's Permanent Mission", 'Alien Consulate General']
        },
        motivation: {
          'power': 1,
          'peace': 1,
          'connections': 1,
          'political power': 1
        },
        resources: {
          'contacts': 3,
          'political influence': 1,
          'foreign goods': 2
        }
      },
      guards: {
        type: 'guards',
        leader: {
          format: {
            group: 1,
            individual: 5
          },
          qualification: {
            'the wealthiest of the group': 1,
            'the strongest of the group': 2,
            'able to rise to power by completing an ordeal': 3,
            'the most charismatic of the group': 1,
            'democratically elected': 1,
            'able to oust the previous leadership': 1,
            'able to rise to power through nepotism': 3,
            'promoted by being the most powerful in the group': 1
          },
          base: {
            title: 'Captain',
            hasClass: true,
            profession: 'fighter',
            background: 'soldier'
          }
        },
        wordNoun: 'watch',
        probability: 5,
        livery: {
          colours: {
            primary: ['black', 'red', 'scarlet', 'forest green', 'royal blue', 'light blue', 'magenta', 'pale yellow', 'brown', 'dark grey', 'gunmetal', 'maroon', 'navy blue', 'steel', 'olive green', 'orange', 'sun yellow', 'purple', 'aquamarine', 'turquoise', 'lime green', 'teal', 'deep indigo', 'violet', 'white'],
            secondary: ['black', 'gold', 'silver', 'white', 'pearl white', 'purple', 'tan', 'olive green', 'dark turquoise', 'light brown']
          },
          insignia: ['a skull', 'a bow & arrow', 'an eagle', 'a star', 'an axe', 'a set of crossed spears', 'a shield', 'a ghost', 'a clenched fist', 'a flame', 'an arrow', 'a dagger', 'a sword', 'a hammer', 'the sun', 'the moon', 'a bat', 'a bull', 'a dragon', 'a falcon', 'a lion', 'a raven', 'a scorpion', 'a snake', 'a vulture', 'a wolf', 'a stag', 'a sunburst', 'three waves', 'two fighting lions', 'a leaping fish', 'two crossed scimitars', 'a crown', 'a rose', 'a squid', 'an octopus', 'a spider', 'a stallion']
        },
        alliesList: {
          hitmen: 4,
          nobles: 4,
          commoners: 2,
          mercenaries: 1,
          merchants: 1,
          military: 3
        },
        rivalsList: {
          bandits: 3,
          assassins: 4,
          thieves: 3
        },
        joiningRequirement: {
          'some social status': 1,
          'referral by an existing member': 1,
          'a display of bravery': 2
        },
        joiningInitiation: {
          'a simple form to be filled': 2,
          'an oath to be taken': 1,
          'a secret ritual': 1
        },
        members: {
          membershipIsMutuallyExclusive: true,
          membershipIsTotallyExclusive: true,
          professions: ['fighter', 'guard', 'city watch', 'captain', 'warmage', 'mercenary', 'medic', 'lieutenant']
        },
        membersTrait: {
          'the ring that members are given': 1,
          'their excessively bureaucratic tendencies': 1,
          'their distinctive headgear': 1,
          'their white horses': 1,
          'their love of a good fight': 3,
          'being ruthless in combat': 1,
          'following any order given to them': 1,
          'fighting to the death': 1
        },
        names: {
          main: ['Hand', 'Fist', 'Gauntlet', 'Glove', 'Hammer', 'Shield', 'Cloak', 'Dagger', 'Mace', 'Sword', 'Truncheon', 'Club', 'Maul', 'Wand'],
          adjective: ['Black', 'White', 'Shining', 'Just', 'Tall', 'Impenetrable', 'Unbreakable', 'Brass', 'Bronze', 'Blue', 'Strong', 'Mighty', 'Lawful'],
          alternateAdjective: ['Justice', 'Righteousness', 'Law', 'Order', 'Safety', 'Strength'],
          group: ['Regiment', 'Guard', 'Officers', 'Guardsmen', 'Protectors', 'Protectorate', 'Defenders', 'Watch', 'Watchers', 'Watchmen', 'Police', 'Peacemen', 'Axemen', 'Swordsmen', 'Pikesmen', 'Squad', 'Battalion', 'Battlesquad', 'Fighters', 'Keepers'],
          unique: ['The Steel Hydras', 'The Silver Hippogryphs', 'The Black Glove of Anubis', "Hera's Tears", 'The Rabid Possums', 'Macguffins, Ltd.', 'The Wayfaring Strangers', 'Valiant, Inc.', 'Blood of the Gordon', 'The Green Hand', 'The Tomb Raiders', 'The Order of the Obsidian Flame', "The King's Ransom", 'The Golden Guardians', 'Dragonfire, Inc.', 'Path of the Righteous Man', 'Hellraisers for Hire', 'Band of the Crimson Lion', 'Company of Champions', 'The Covenant of the Shield', 'Crusaders of the Everlasting Chalice', 'The Iron Fang', 'The Sapphire Guard', 'The Azure Guild', 'Goblincleavers', 'The Redcrest Five', 'Necessary Chaotic Neutral', 'Magic Item and Artifact Retrieval Specialists', 'The Dungeon Delvers', 'Brave Crusaders', 'Daring Champions']
        },
        motivation: {
          money: 6,
          fame: 1,
          power: 1,
          glory: 1,
          politics: 1
        },
        resources: {
          'magical weapons': 3,
          'gold': 3,
          'old favours': 3
        }
      },
      mercenaries: {
        type: 'mercenaries',
        leader: {
          format: {
            group: 2,
            individual: 5
          },
          qualification: {
            'the wealthiest of the group': 1,
            'the strongest of the group': 2,
            'able to rise to power by completing an ordeal': 3,
            'the most charismatic of the group': 1,
            'democratically elected': 1,
            'able to oust the previous leadership': 1,
            'able to rise to power through nepotism': 3,
            'promoted by being the most powerful in the group': 1
          },
          base: {
            title: 'Commander',
            hasClass: true,
            profession: 'fighter',
            background: 'soldier'
          }
        },
        wordNoun: 'company',
        probability: 3,
        alliesList: {
          hitmen: 4,
          nobles: 4,
          bandits: 3
        },
        rivalsList: {
          bandits: 3,
          assassins: 4
        },
        joiningRequirement: {
          'some social status': 1,
          'referral by an existing member': 1,
          'a display of bravery': 2
        },
        joiningInitiation: {
          'a simple form to be filled': 2,
          'an oath to be taken': 1,
          'a secret ritual': 1
        },
        members: {
          membershipIsMutuallyExclusive: true,
          membershipIsTotallyExclusive: true,
          professions: ['fighter', 'captain', 'warmage', 'special force soldier', 'sapper', 'runner', 'sergeant', 'quartermaster', 'mercenary', 'medic', 'marshall', 'marksman', 'lieutenant', 'fifer', 'commissar', 'cavalier', 'privateer', 'general']
        },
        membersTrait: {
          'the ring that members are given': 1,
          'their excessively bureaucratic tendencies': 1,
          'their distinctive headgear': 1,
          'their white horses': 1,
          'their love of a good fight': 3,
          'being ruthless in combat': 1,
          'following any order given to them': 1,
          'fighting to the death': 1
        },
        names: {
          main: ['Hand', 'Fist', 'Gauntlet', 'Glove', 'Hammer', 'Shield', 'Cloak', 'Dagger', 'Mace', 'Sword'],
          adjective: ['Black', 'White', 'Shining', 'Just', 'Tall', 'Impenetrable', 'Unbreakable', 'Brass', 'Bronze', 'Blue', 'Strong', 'Mighty'],
          group: ['Axemen', 'Swordsmen', 'Pikesmen', 'Squad', 'Battalion', 'Battlesquad', 'Fighters'],
          unique: ['The Steel Hydras', 'The Silver Hippogryphs', 'The Black Glove of Anubis', "Hera's Tears", 'The Rabid Possums', 'Macguffins, Ltd.', 'The Wayfaring Strangers', 'Valiant, Inc.', 'Blood of the Gordon', 'The Green Hand', 'The Tomb Raiders', 'The Order of the Obsidian Flame', "The King's Ransom", 'The Golden Guardians', 'Dragonfire, Inc.', 'Path of the Righteous Man', 'Hellraisers for Hire', 'Band of the Crimson Lion', 'Company of Champions', 'The Covenant of the Shield', 'Crusaders of the Everlasting Chalice', 'The Iron Fang', 'The Sapphire Guard', 'The Azure Guild', 'Goblincleavers', 'The Redcrest Five', 'Necessary Chaotic Neutral', 'Magic Item and Artifact Retrieval Specialists', 'The Dungeon Delvers', 'Brave Crusaders', 'Daring Champions']
        },
        motivation: {
          money: 6,
          fame: 1,
          power: 1,
          glory: 1,
          politics: 1
        },
        resources: {
          'magical weapons': 3,
          'gold': 3,
          'old favours': 3
        }
      },
      merchants: {
        type: 'merchants',
        leader: {
          format: {
            group: 2,
            individual: 5
          },
          qualification: {
            'the wealthiest of the group': 3,
            'able to rise to power by completing an ordeal': 1,
            'the most charismatic of the group': 1,
            'democratically elected': 1,
            'able to oust the previous leadership': 1,
            'able to rise to power through nepotism': 3,
            'promoted by being the most powerful in the group': 1
          },
          base: {
            title: 'Executive Officer',
            hasClass: false,
            profession: 'merchant',
            background: ['merchant', 'charlatan', 'noble']
          }
        },
        wordNoun: 'guild',
        probability: 10,
        alliesList: {
          priests: 2,
          hitmen: 3,
          nobles: 3,
          artisans: 3,
          mercenaries: 4,
          craftsmen: 4,
          commoners: 2
        },
        rivalsList: {
          commoners: 2,
          priests: 2,
          assassins: 3
        },
        joiningRequirement: {
          'some social status': 2,
          'an excellent reputation': 2
        },
        joiningInitiation: {
          'a simple form to be filled': 2,
          'an oath to be taken': 1
        },
        members: {
          membershipIsMutuallyExclusive: true,
          membershipIsTotallyExclusive: false,
          professions: ['noble', 'merchant', 'apothecarist', 'bookseller', 'butcher', 'fishmonger', 'ice seller', 'patissier', 'spice merchant', 'street seller', 'shopkeep', 'wood seller', 'banker', 'chandler', 'grocer', 'minister']
        },
        membersTrait: {
          'the ring that members are given': 1,
          'their excessively bureaucratic tendencies': 1,
          'their purple robes': 1,
          'their gaudy jewellery': 1,
          'the fact that a member is always closely followed by a boy carrying a chest': 1
        },
        names: {
          main: ['Merchants', 'Company', 'Sellers and Buyers', 'Traders', 'Dealers', 'Brokers', 'Pedlars', 'Hawkers', 'Distributors'],
          adjective: ['Shrewd', 'Thrifty', 'Golden Spoon', 'Rich', 'Miserly'],
          group: ['Society', 'Group', 'League', 'Collective', 'Brothers', 'Brotherhood', 'Order'],
          unique: ['Amazang', 'Goodest Purchase', 'Nasduq Traders', 'Fence Street Bets', 'Personal Financers']
        },
        motivation: {
          money: 5,
          power: 1,
          glory: 1,
          vengeance: 1,
          politics: 3
        },
        resources: {
          'trade goods': 5,
          'gold': 4,
          'debtors': 6
        }
      },
      military: {
        type: 'military',
        leader: {
          format: {
            group: 1,
            individual: 5
          },
          qualification: {
            'the wealthiest of the group': 1,
            'the strongest of the group': 2,
            'able to rise to power by completing an ordeal': 3,
            'the most charismatic of the group': 1,
            'democratically elected': 1,
            'able to oust the previous leadership': 1,
            'able to rise to power through nepotism': 3,
            'promoted by being the most powerful in the group': 1
          },
          base: {
            title: 'Commander',
            hasClass: true,
            profession: 'fighter',
            background: ['soldier', 'soldier', 'noble']
          }
        },
        wordNoun: 'army',
        probability: 3,
        alliesList: {
          hitmen: 4,
          nobles: 4,
          bandits: 3
        },
        rivalsList: {
          bandits: 3,
          assassins: 4
        },
        joiningRequirement: {
          'some social status': 1,
          'referral by an existing member': 1,
          'a display of bravery': 2
        },
        joiningInitiation: {
          'a simple form to be filled': 2,
          'an oath to be taken': 1,
          'a secret ritual': 1
        },
        members: {
          membershipIsMutuallyExclusive: true,
          membershipIsTotallyExclusive: true,
          professions: ['fighter', 'captain', 'warmage', 'special force soldier', 'sapper', 'runner', 'sergeant', 'quartermaster', 'medic', 'marshall', 'marksman', 'lieutenant', 'fifer', 'commissar', 'cavalier', 'general']
        },
        membersTrait: {
          'the ring that members are given': 1,
          'their excessively bureaucratic tendencies': 1,
          'their distinctive headgear': 1,
          'their white horses': 1,
          'their love of a good fight': 3,
          'being ruthless in combat': 1,
          'following any order given to them': 1,
          'fighting to the death': 1
        },
        names: {
          main: ['Hand', 'Fist', 'Gauntlet', 'Glove', 'Hammer', 'Shield', 'Cloak', 'Dagger', 'Mace', 'Sword'],
          adjective: ['Black', 'White', 'Shining', 'Just', 'Tall', 'Impenetrable', 'Unbreakable', 'Brass', 'Bronze', 'Blue', 'Strong', 'Mighty', 'Death'],
          group: ['Axemen', 'Swordsmen', 'Pikesmen', 'Squad', 'Battalion', 'Battlesquad', 'Fighters'],
          unique: ['The Steel Hydras', 'The Silver Hippogryphs', 'The Black Glove of Anubis', "Hera's Tears", 'The Rabid Possums', 'Macguffins, Ltd.', 'The Wayfaring Strangers', 'Valiant, Inc.', 'Blood of the Gordon', 'The Green Hand', 'The Tomb Raiders', 'The Order of the Obsidian Flame', "The King's Ransom", 'The Golden Guardians', 'Dragonfire, Inc.', 'Path of the Righteous Man', 'Hellraisers for Hire', 'Band of the Crimson Lion', 'Company of Champions', 'The Covenant of the Shield', 'Crusaders of the Everlasting Chalice', 'The Iron Fang', 'The Sapphire Guard', 'The Azure Guild', 'Goblincleavers', 'The Redcrest Five', 'Necessary Chaotic Neutral', 'Magic Item and Artifact Retrieval Specialists', 'The Dungeon Delvers', 'Brave Crusaders', 'Daring Champions']
        },
        motivation: {
          money: 6,
          fame: 1,
          power: 4,
          glory: 3,
          politics: 1
        },
        resources: {
          'magical weapons': 3,
          'gold': 3,
          'old favours': 3
        }
      },
      monks: {
        type: 'monks',
        leader: {
          format: {
            group: 1,
            individual: 5
          },
          qualification: {
            'the poorest of the group': 1,
            'the strongest of the group': 2,
            'able to rise to power by completing an ordeal involving fasting for over a month': 1,
            'the most charismatic of the group': 1,
            'democratically elected': 1,
            'able to oust the previous leadership': 1,
            'able to rise to power through nepotism': 3,
            'promoted by being the most powerful in the group': 1
          },
          base: {
            title: 'High Monk',
            hasClass: true,
            profession: 'monk',
            background: ['acolyte', 'sage']
          }
        },
        wordNoun: 'group',
        probability: 4,
        alliesList: {
          priests: 4,
          artisans: 2
        },
        rivalsList: {
          artisans: 1,
          priests: 2,
          bandits: 3
        },
        joiningRequirement: {
          'some social status': 1,
          'referral by an existing member': 1,
          'a display of skill': 2
        },
        joiningInitiation: {
          'a simple form to be filled': 2,
          'an oath to be taken': 1,
          'a secret ritual': 1
        },
        members: {
          membershipIsMutuallyExclusive: true,
          membershipIsTotallyExclusive: true,
          professions: ['monk', 'hermit']
        },
        membersTrait: {
          'the ring that members are given': 1,
          'their excessively bureaucratic tendencies': 1,
          'their shaved heads': 1,
          'their malnutrition': 1,
          'their calm presence': 1,
          'their know-it-all answers': 1,
          'their terrible jokes': 1,
          'their amazing beer': 1,
          'the tankard that all members carry': 1
        },
        names: {
          main: ['Monks', 'Robes', 'Stone', 'Rock'],
          adjective: ['Understanding', 'Meditating', 'Calm', 'Unmoving'],
          group: ['Society', 'Group', 'League', 'Collective', 'Brothers', 'Brotherhood', 'Order'],
          unique: ['Ommmm', 'The Holy Loincloth', 'The Purposely Unwashed']
        },
        motivation: {
          money: 3,
          knowledge: 2,
          fame: 1,
          power: 3,
          glory: 1,
          vengeance: 3,
          politics: 2
        },
        resources: {
          'artifacts': 3,
          'holy relics': 3,
          'gold': 3,
          'sacred texts': 4
        }
      },
      nobles: {
        type: 'nobles',
        leader: {
          format: {
            group: 1,
            individual: 5
          },
          qualification: {
            'the wealthiest of the group': 3,
            'able to rise to power by completing an ordeal': 1,
            'the most charismatic of the group': 1,
            'democratically elected': 1,
            'able to oust the previous leadership': 1,
            'able to rise to power through nepotism': 3,
            'promoted by being the most powerful in the group': 1
          },
          base: {
            title: 'Lord',
            hasClass: false,
            background: 'noble'
          }
        },
        wordNoun: 'society',
        probability: 8,
        alliesList: {
          hitmen: 4,
          seers: 3
        },
        rivalsList: {
          commoners: 5,
          bandits: 4,
          assassins: 4
        },
        joiningRequirement: {
          'some social status': 3,
          'an excellent reputation': 3
        },
        joiningInitiation: {
          'a simple form to be filled': 2,
          'an oath to be taken': 1,
          'a secret ritual': 1
        },
        members: {
          membershipIsMutuallyExclusive: false,
          membershipIsTotallyExclusive: false,
          professions: ['noble']
        },
        membersTrait: {
          'the ring that members are given': 1,
          'their excessively bureaucratic tendencies': 1,
          'their absentmindedness': 1,
          'their egos': 1,
          'their attention to detail': 1,
          'their creativity': 1,
          'their lust for fame': 1,
          'their pride': 1
        },
        names: {
          main: ['Ladies', 'People', 'Men', 'Lords', 'Heirs', 'Land Owners', 'Barons', 'Tycoons', 'Nobles', 'Gentlemen'],
          adjective: ['Sophisticated', 'Intelligent', 'Refined', 'Cultured', 'Wealthy', 'Distinguished'],
          group: ['Society', 'Group', 'Dinner Club', 'League', 'Club'],
          unique: ['The People Hunters', 'The Fur Coat Enthusiasts', 'The Heir Apparents', 'The Dead Parents Club', 'The High Horse']
        },
        motivation: {
          money: 3,
          fame: 1,
          power: 4,
          glory: 1,
          vengeance: 3,
          politics: 5
        },
        resources: {
          'gold': 3,
          'contacts': 5,
          'old favours': 4,
          'important manuscripts': 4,
          'masterpieces': 3
        }
      },
      priests: {
        type: 'priests',
        leader: {
          format: {
            group: 1,
            individual: 5
          },
          qualification: {
            'the wealthiest of the group': 1,
            'the holiest of the group': 2,
            'able to rise to power by completing an ordeal': 1,
            'the most charismatic of the group': 1,
            'democratically elected': 1,
            'able to oust the previous leadership': 1,
            'able to rise to power through nepotism': 3,
            'promoted by being the most powerful in the group': 1
          },
          base: {
            title: 'The Holy',
            hasClass: true,
            profession: 'cleric',
            background: ['acolyte', 'sage']
          }
        },
        wordNoun: 'college',
        probability: 5,
        alliesList: {
          nobles: 3,
          artisans: 2
        },
        rivalsList: {
          artisans: 1,
          bandits: 4
        },
        joiningRequirement: {
          'some social status': 1,
          'referral by an existing member': 1,
          'a display of skill': 2
        },
        joiningInitiation: {
          'a simple form to be filled': 2,
          'an oath to be taken': 2,
          'a secret ritual': 2
        },
        members: {
          membershipIsMutuallyExclusive: true,
          membershipIsTotallyExclusive: false,
          professions: ['priest', 'pilgrim', 'friar', 'clergyman', 'theologian', 'templar', 'sexton', 'prophet', 'pardoner', 'missionary', 'inquisitor', 'high priest', 'exorcist', 'diviner', 'deacon', 'confessor', 'cardinal', 'cantor', 'bishop', 'archbishop', 'almoner', 'acolyte', 'abbot']
        },
        membersTrait: {
          'the ring that members are given': 1,
          'their excessively bureaucratic tendencies': 1,
          'the walking sticks that all members carry': 1,
          'the beards that they grow': 1,
          'the grey robes they wear': 1,
          'the amulet they wear': 1
        },
        names: {
          main: ['Priests', 'Clergy', 'Churchpeople', 'People of the Cloth', 'Robes', 'Incense', 'Elders', 'Preachers'],
          adjective: ['Holy', 'Faithful', 'Caring', 'Civil', 'Devout', 'Devoted', 'Compassionate'],
          group: ['Society', 'Group', 'League', 'Servants', 'Collective', 'Brothers', 'Brotherhood', 'Brotherhood', 'Priesthood', 'Order'],
          unique: ['Definitely Not A Tax Haven', 'Repent Now', 'The Church of the Real God Unlike Those Fake Gods', 'The Church of the Real God', 'The Gods']
        },
        motivation: {
          money: 3,
          knowledge: 2,
          fame: 1,
          power: 3,
          glory: 1,
          vengeance: 3,
          politics: 4
        },
        resources: {
          'artifacts': 3,
          'holy relics': 3,
          'gold': 3,
          'sacred texts': 4
        }
      },
      rangers: {
        type: 'rangers',
        leader: {
          format: {
            group: 4,
            individual: 5
          },
          qualification: {
            'the wealthiest of the group': 1,
            'the strongest of the group': 2,
            'able to rise to power by completing an ordeal': 3,
            'the most charismatic of the group': 1,
            'democratically elected': 1,
            'able to oust the previous leadership': 1,
            'able to rise to power through nepotism': 3,
            'promoted by being the most powerful in the group': 1
          },
          base: {
            title: 'Lord Ranger',
            hasClass: true,
            profession: 'ranger',
            background: ['outlander', 'hermit']
          }
        },
        wordNoun: 'guild',
        probability: 4,
        alliesList: {
          priests: 2,
          nobles: 2,
          seers: 2
        },
        rivalsList: {
          bandits: 4,
          mercenaries: 3
        },
        joiningRequirement: {
          'some social status': 1,
          'referral by an existing member': 1,
          'a display of bravery': 2
        },
        joiningInitiation: {
          'a simple form to be filled': 2,
          'an oath to be taken': 1,
          'a secret ritual': 1
        },
        members: {
          membershipIsMutuallyExclusive: true,
          membershipIsTotallyExclusive: false,
          professions: ['druid', 'ranger', 'forester', 'fowler', 'forager', 'arborist']
        },
        membersTrait: {
          'the ring that members are given': 1,
          'their pet ferrets': 1,
          'their pet sparrows': 1,
          'the twigs that are strewn throughout their hair': 1,
          'their terrible smell': 1,
          'the lack of footwear': 1
        },
        names: {
          main: ['Wilderness', 'Woods', 'Lands', 'Forests', 'Trees', 'Animals'],
          adjective: ['Tree Loving', 'Padfoot', 'Barefoot', 'Protective', 'Watchful', 'Careful', 'Honest'],
          group: ['Society', 'Group', 'Collective', 'Brothers', 'Brotherhood', 'Order', 'Protectors', 'Defenders', 'Conservationists', 'Guardians'],
          unique: ['Feathers, Fur and Friends', 'Boy Scouts', 'Primitive Technologists']
        },
        motivation: {
          money: 1,
          knowledge: 3,
          fame: 1,
          power: 3,
          glory: 3,
          vengeance: 1,
          politics: 3
        },
        resources: {
          'old favours': 4,
          'tame animals': 4,
          'contacts': 3
        }
      },
      scholars: {
        type: 'scholars',
        leader: {
          format: {
            group: 4,
            individual: 5
          },
          qualification: {
            'the wealthiest of the group': 1,
            'the strongest of the group': 2,
            'able to rise to power by completing an ordeal': 1,
            'the most charismatic of the group': 1,
            'democratically elected': 1,
            'able to oust the previous leadership': 1,
            'able to rise to power through nepotism': 3,
            'promoted by being the most powerful in the group': 1
          },
          base: {
            title: 'Chief Scholar',
            hasClass: false,
            profession: 'professor',
            background: ['sage', 'acolyte']
          }
        },
        wordNoun: 'guild',
        probability: 3,
        alliesList: {
          priests: 3,
          nobles: 2,
          artisans: 2,
          seers: 1
        },
        rivalsList: {
          seers: 1,
          priests: 3,
          commoners: 1,
          bandits: 3,
          assassins: 3
        },
        joiningRequirement: {
          'some social status': 1,
          'a display of skill': 3,
          'referral by an existing member': 1
        },
        joiningInitiation: {
          'a simple form to be filled': 2,
          'an oath to be taken': 1,
          'a secret ritual': 1
        },
        members: {
          membershipIsMutuallyExclusive: false,
          membershipIsTotallyExclusive: false,
          professions: ['political dissident', 'scholar', 'cartographer', 'mathematician', 'horologist', 'entomologism', 'engineer', 'drakologist', 'dean', 'chemist', 'botanist', 'astronomer', 'assayer', 'archaeologist', 'anthropologist', 'abecedarian', 'teacher', 'student', 'professor', 'philosopher', 'linguist', 'librarian', 'historian']
        },
        membersTrait: {
          'the ring that members are given': 1,
          'their excessively bureaucratic tendencies': 1,
          'their absentmindedness': 1,
          'their egos': 1,
          'their attention to detail': 1,
          'their creativity': 1,
          'their lust for fame': 1,
          'their pride': 1
        },
        names: {
          main: ['Scroll Keepers', 'Book Keepers', 'Collectors', 'Librarians', 'Knowledge Holders', 'Proof Readers', 'Academics'],
          adjective: ['Scholarly', 'Indentured', 'Absent Minded', 'Knowledgeable', 'Intelligent', 'Unknown', 'Eldritch', 'Memorized', 'Cited'],
          group: ['Society', 'Candidates', 'Academy', 'University', 'Club', 'Scholarly Group', 'League', 'Collective', 'Brothers', 'Brotherhood', 'Order'],
          unique: ['Citation Needed', 'Indentured Candidates', 'The Cultists of Weekee', 'Encyclopaedia Uninformatica']
        },
        motivation: {
          money: 2,
          fame: 3,
          knowledge: 4,
          power: 3,
          glory: 1,
          vengeance: 2,
          politics: 2
        },
        resources: {
          'gold': 3,
          'contacts': 5,
          'old favours': 4,
          'important manuscripts': 4
        }
      },
      seers: {
        type: 'seers',
        leader: {
          format: {
            group: 4,
            individual: 5
          },
          qualification: {
            'the wealthiest of the group': 1,
            'the strongest of the group': 2,
            'able to rise to power by completing an ordeal': 1,
            'the most charismatic of the group': 1,
            'democratically elected': 1,
            'able to oust the previous leadership': 1,
            'able to rise to power through nepotism': 3,
            'promoted by being the most powerful in the group': 1
          },
          base: {
            title: 'High Seer',
            hasClass: false,
            profession: 'seer',
            background: ['acolyte', 'sage']
          }
        },
        wordNoun: 'guild',
        probability: 3,
        alliesList: {
          priests: 4,
          nobles: 4
        },
        rivalsList: {
          scholars: 4
        },
        joiningRequirement: {
          'some social status': 1,
          'a display of skill': 3,
          'referral by an existing member': 1
        },
        joiningInitiation: {
          'a simple form to be filled': 2,
          'an oath to be taken': 1,
          'a secret ritual': 1
        },
        members: {
          membershipIsMutuallyExclusive: true,
          membershipIsTotallyExclusive: false,
          professions: ['pilgrim', 'medium', 'friar', 'clergyman', 'theologian', 'templar', 'sexton', 'prophet', 'missionary', 'inquisitor', 'high priest', 'diviner', 'deacon', 'cardinal', 'cantor', 'bishop', 'archbishop', 'acolyte', 'abbot']
        },
        membersTrait: {
          'the ring that members are given': 1,
          'their excessively bureaucratic tendencies': 1,
          'the vacant look that members have': 1,
          'the vacant stare that members pull (in order to fit in with the others)': 1,
          'the plain robes they wear': 1,
          'the bright blue coloured sashes they wear': 1
        },
        names: {
          main: ['Seers', 'Predictionists', 'Future Seers', 'Observers', 'Eyes', 'Historians'],
          adjective: ['All Seeing', 'All Knowing', 'Watchful', 'Future'],
          group: ['Society', 'Group', 'Collective', 'Brothers', 'Brotherhood', 'Order'],
          unique: ['We Looked Into The Future To Find Our Name And This Was The Name So I Guess This Is The Name', 'Seers of the Obscene', 'Seers of the Scenic']
        },
        motivation: {
          money: 2,
          knowledge: 4,
          fame: 1,
          power: 2,
          glory: 1,
          vengeance: 1,
          politics: 3
        },
        resources: {
          'artifacts': 4,
          'blackmail material': 4
        }
      },
      thieves: {
        type: 'thieves',
        leader: {
          format: {
            group: 1,
            individual: 5
          },
          qualification: {
            'the most skilled of the group': 1,
            'able to rise to power by completing an ordeal': 2,
            'the most charismatic of the group': 1,
            'democratically elected': 1,
            'able to oust the previous leadership': 3,
            'able to rise to power through nepotism': 3,
            'promoted by being the most powerful in the group': 1
          },
          base: {
            title: 'High Rogue',
            hasClass: true,
            profession: 'rogue',
            background: ['charlatan', 'criminal']
          }
        },
        wordNoun: 'guild',
        probability: 10,
        alliesList: {
          thieves: 3,
          urchins: 3,
          hitmen: 2,
          assassins: 2,
          bandits: 3
        },
        rivalsList: {
          priests: 3,
          commoners: 4
        },
        joiningRequirement: {
          'referral by an existing member': 1,
          'referral by several members': 1,
          'endorsement by the current leader': 1,
          'a display of skill': 2,
          'a display of loyalty': 1,
          'a display of bravery': 1
        },
        joiningInitiation: {
          'a heist': 1,
          'a secret task': 1,
          'a secret ritual': 2
        },
        members: {
          membershipIsMutuallyExclusive: true,
          membershipIsTotallyExclusive: false,
          professions: ['thief', 'burglar', 'highwayman', 'rogue', 'assassin', 'bandit', 'conman', 'fence', 'gamefighter', 'cutpurse', 'crime boss', 'drug dealer', 'drug lord', 'extortioner', 'forger', 'fugitive', 'kidnapper', 'loan shark', 'grave robber', 'poacher', 'smuggler', 'gambler']
        },
        membersTrait: {
          'a missing earlobe': 1,
          "absolutely nothing; they're completely anonymous": 1,
          'a dagger given to ever member': 1,
          'a ring given to every member': 1,
          'a grey hood': 1,
          'their lack of manners': 1,
          'their bad stench': 1,
          'their rabble-rousing tendencies': 1
        },
        names: {
          main: ['Cutpurses', 'Pilferers', 'Thieves', 'Rogues', 'Property Reappropriaters'],
          adjective: ['Clever', 'Sneaky', 'Cunning', 'Conniving', 'Honest', 'Black', 'Invisible', 'Silent'],
          group: ['Society', 'Group', 'League', 'Collective', 'Brothers', 'Brotherhood', 'Order'],
          unique: ['Silent Movers', 'Silent Partners', 'The Tip-Toe Club', 'Good Fences', 'League of Lifters and Grifters', 'The Neighborhood Watch', 'The Unseen Hand', 'The Kleptocrats', 'The Riverside Raiders', 'Black Market Mayhem', 'The Boondock Burglars', 'The Dock Workers', 'Pickpockets Anonymous']
        },
        motivation: {
          money: 5,
          fame: 1,
          power: 3,
          glory: 1,
          vengeance: 3,
          politics: 1
        },
        resources: {
          'blackmail material': 4,
          'stolen goods': 4,
          'contacts': 3
        }
      },
      wizards: {
        type: 'wizards',
        leader: {
          format: {
            group: 5,
            individual: 5
          },
          qualification: {
            'the wealthiest of the group': 1,
            'the strongest of the group': 2,
            'able to rise to power by completing an ordeal': 1,
            'the most charismatic of the group': 1,
            'democratically elected': 1,
            'able to oust the previous leadership': 1,
            'able to rise to power through nepotism': 3,
            'promoted by being the most powerful in the group': 1
          },
          base: {
            title: 'Archmage',
            hasClass: true,
            profession: 'wizard',
            background: ['acolyte', 'sage']
          }
        },
        wordNoun: 'college',
        probability: 10,
        alliesList: {
          nobles: 2,
          artisans: 2,
          seers: 1
        },
        rivalsList: {
          seers: 1,
          priests: 4,
          assassins: 2
        },
        joiningRequirement: {
          'some social status': 1,
          'a display of skill': 3
        },
        joiningInitiation: {
          'a simple form to be filled': 2,
          'an oath to be taken': 1,
          'a secret ritual': 1
        },
        members: {
          membershipIsMutuallyExclusive: true,
          membershipIsTotallyExclusive: false,
          professions: ['wizard', 'sorcerer', 'archmage', 'abjurer', 'mage', 'medium', 'artificer', 'conjuror', 'elementalist', 'enchanter', 'evoker', 'hearth witch', 'illusionist', 'meteorologist', 'ritualist', 'runecaster', 'sage', 'shapeshifter', 'summoner', 'transmuter', 'witchdoctor', 'witch', 'wordsmith', 'warmage', 'necromancer']
        },
        membersTrait: {
          'their lack of table manners': 1,
          'their extreme interest in the oddities of the arcane': 1,
          'the blue robes they wear': 1,
          'the sash that members are given': 1,
          'the ring that members are given': 1,
          'their excessively bureaucratic tendencies': 1
        },
        names: {
          main: ['Prestidigitators', 'Illusionists', 'Casters', 'Magic Users', 'Diviners', 'Evokers', 'Necromancers', 'Abjurers', 'Scroll Keepers', 'Book Keepers', 'Collectors', 'Librarians'],
          adjective: ['Arcane', 'Magical', 'Scholarly', 'Absent Minded', 'Knowledgeable', 'Intelligent', 'Unknown', 'Eldritch', 'Memorized'],
          group: ['Society', 'Academy', 'University', 'Club', 'Scholarly Group', 'League', 'Collective', 'Brothers', 'Brotherhood', 'Order'],
          unique: ['We Make Magic!', 'The Academy', 'The Arcane Order', 'Adepts Anonymous', 'The Callers Club', 'The Union of Universal Magic', 'The University of the Unusual and Unexplained', 'The College of Conjurers', "Necromancers' Network", "The Evokers' League", 'The Nation of Abjuration', "Seers' and Company", 'The Illusory Faction', 'Spellcasters Anonymous']
        },
        motivation: {
          money: 2,
          fame: 3,
          knowledge: 4,
          power: 3,
          glory: 1,
          vengeance: 2,
          politics: 2
        },
        resources: {
          'magic scrolls': 4,
          'magical trinkets': 4
        }
      }
    }
  };

  function createLivery(type) {
    const typeData = factionData.types[type];

    if (typeData.livery == null) {
      return;
    }

    const livery = {
      colours: {
        primary: random(typeData.livery.colours.primary),
        secondary: random(typeData.livery.colours.secondary)
      },
      insignia: random(typeData.livery.insignia)
    };
    return livery;
  }
  function readoutLivery(livery) {
    return `${livery.colours.primary} and ${livery.colours.secondary} livery adorned with an image of ${livery.insignia}`;
  }

  function createRivals(faction) {
    console.log('accruing enemies...');
    const sizeRoll = dice(2, 50);
    const defaultWeightedGroups = {
      artisans: 1,
      assassins: 1,
      bandits: 1,
      bards: 1,
      commoners: 1,
      craftsmen: 1,
      knights: 1,
      mercenaries: 1,
      merchants: 1,
      monks: 1,
      nobles: 1,
      politicians: 1,
      priests: 1,
      rangers: 1,
      scholars: 1,
      seers: 1,
      thieves: 1,
      wizards: 1
    };
    const groupSizeModifier = sizeRoll - 50 + (faction.roll.reputation - 50 + (faction.roll.influence - 50));
    const rivals = []; // This is where weighting different groups happens.
    // Needs updating with each new faction.

    const weightedGroups = sumWeights(defaultWeightedGroups, factionData.types[faction.type].rivalsList);

    if (sizeRoll >= 90) {
      faction.rivalsDescription = 'managed to become almost universally disliked';
      repeat(() => getRivalGroup(20), 6);
    } else if (sizeRoll >= 80) {
      faction.rivalsDescription = 'enemies around every corner';
      repeat(() => getRivalGroup(25), 5);
    } else if (sizeRoll >= 70) {
      faction.rivalsDescription = 'some fearsome enemies';
      repeat(() => getRivalGroup(20), 4);
    } else if (sizeRoll >= 60) {
      faction.rivalsDescription = 'more enemies than one would expect';
      repeat(() => getRivalGroup(15), 3);
    } else if (sizeRoll >= 50) {
      faction.rivalsDescription = 'some enemies';
      repeat(() => getRivalGroup(10), 2);
    } else if (sizeRoll >= 40) {
      faction.rivalsDescription = 'a handful of rivals';
      getRivalGroup(10);
      getRivalGroup(-10);
    } else if (sizeRoll >= 30) {
      faction.rivalsDescription = 'a couple enemies';
      getRivalGroup(-15);
    } else if (sizeRoll >= 20) {
      faction.rivalsDescription = 'few rivals';
      getRivalGroup(10);
    } else if (sizeRoll < 20) {
      faction.rivalsDescription = 'barely any rivals';
      getRivalGroup(10);
    }

    function getRivalGroup(bonus) {
      const groupSizeRoll = dice(2, 50) + (groupSizeModifier + bonus);
      const tempGroupSize = getGroupSize(groupSizeRoll);
      let tempGroup = weightRandom(weightedGroups);
      weightedGroups[tempGroup] = validateWeight(weightedGroups[tempGroup]) - 1;

      if (tempGroup === faction.type) {
        tempGroup = `rival ${tempGroup}`;
      }

      rivals.push(tempGroupSize + tempGroup);
    }

    faction.rivals = rivals;
  }

  function getGroupSize(roll) {
    if (roll >= 90) return 'a guild of ';
    if (roll >= 80) return 'a veritable army of ';
    if (roll >= 70) return 'a large number of ';
    if (roll >= 60) return 'quite a few ';
    if (roll >= 50) return 'more than a couple ';
    if (roll >= 40) return 'a couple ';
    if (roll >= 30) return 'some ';
    if (roll >= 20) return 'a few ';
    if (roll >= 10) return 'a handful of ';
    return 'three or four ';
  }

  function setFactionAge(faction) {
    const ranks = [[95, 'ancient'], [90, 'extremely old'], [80, 'very old'], [70, 'quite old'], [60, 'well established'], [55, 'somewhat old'], [50, 'relatively new'], [45, 'recently established'], [40, 'new'], [30, 'quite new'], [20, 'very new'], [10, 'brand new'], [5, 'unknown'], [0, 'well established']];
    faction.age = 'well established';

    for (const [num, description] of ranks) {
      if (faction.roll.age > num) {
        faction.age = description;
        return;
      }
    }
  }

  function setFactionInfluence(faction) {
    console.log('assigning influence...');
    const ageModifier = getAgeModifier$3(faction.roll.age);
    faction.roll.influence += fm(faction.roll.influence, ageModifier);
    faction.influence = getFactionInfluence(faction.roll.influence);
  }

  function getAgeModifier$3(roll) {
    if (roll > 95) return 15;
    if (roll > 90) return 10;
    if (roll > 80) return 8;
    if (roll > 70) return 6;
    if (roll > 60) return 4;
    if (roll > 55) return 2;
    if (roll > 50) return 1;
    if (roll > 45) return -1;
    if (roll > 40) return -2;
    if (roll > 30) return -4;
    if (roll > 20) return -6;
    if (roll > 10) return -8;
    return -10;
  }

  function getFactionInfluence(roll) {
    if (roll > 95) return 'excellent';
    if (roll > 90) return 'very good';
    if (roll > 80) return 'quite good';
    if (roll > 70) return 'good';
    if (roll > 60) return 'above average';
    if (roll > 55) return 'slightly above average';
    if (roll > 50) return 'average';
    if (roll > 45) return 'slightly below average';
    if (roll > 40) return 'poor';
    if (roll > 30) return 'quite poor';
    if (roll > 20) return 'very poor';
    if (roll > 10) return 'extremely poor';
    return 'abysmal';
  }

  function setFactionJoinStats(faction) {
    console.log('determining joining stats...');
    const defaultWeightedJoiningRequirement = {
      'a display of bravery': 1,
      'a display of loyalty': 1,
      'a display of skill': 1,
      'a favour to be done': 1,
      'an excellent reputation': 1,
      'endorsement by the current leader': 1,
      'referral by an existing member': 1,
      'referral by several members': 1,
      'some social status': 1,
      'to be called on for a favour': 1
    };
    const defaultWeightedJoiningInitiation = {
      'a mission': 1,
      'a secret ritual': 1,
      'a secret task': 1,
      'a simple form to be filled': 1,
      'an oath to be taken': 1,
      'nothing particularly interesting': 1
    }; // TODO: Create tasks for each type of guild, plus requirement

    const weightedJoiningRequirement = sumWeights(defaultWeightedJoiningRequirement, factionData.types[faction.type].joiningRequirement);
    const weightedJoiningInitiation = sumWeights(defaultWeightedJoiningInitiation, factionData.types[faction.type].joiningInitiation);

    if (!faction.joiningRequirement) {
      assign(faction, {
        joiningRequirement: weightRandom(weightedJoiningRequirement),
        joiningInitiation: weightRandom(weightedJoiningInitiation)
      });
    }

    faction.joiningFee = getJoiningFee(faction.roll.joiningFee);
  }

  function getJoiningFee(roll) {
    if (roll > 95) return `absolutely anything; they could demand two thousand gold, or ${random(['a frog named Roberta', 'an egg from a rooster', "a sparrow's tooth", 'the head of a king', 'a hair off your head', 'a toenail', "your lover's dreams", 'the leaf of a forgotten tree', 'an eyelash from a badger'])}`;
    if (roll > 90) return 'five hundred gold pieces, plus a tremendous task';
    if (roll > 80) return "five hundred gold pieces, provided there's an empty slot";
    if (roll > 70) return 'five hundred gold pieces';
    if (roll > 60) return "three hundred gold pieces, provided there's an empty slot";
    if (roll > 55) return "two hundred gold pieces, provided there's an empty slot";
    if (roll > 50) return 'two hundred gold pieces';
    if (roll > 45) return 'a hundred gold pieces';
    if (roll > 40) return 'fifty gold pieces';
    if (roll > 30) return 'twenty gold pieces';
    if (roll > 20) return 'ten gold pieces';
    if (roll > 10) return 'a single gold piece';
    return 'a single copper, as a show of faith';
  }

  function setFactionMisc(faction) {
    faction.misc = random(['currently recruiting', 'adjusting to a change in leadership', 'extremely secretive', 'for the current political regime', 'against the current political regime', 'highly involved in the local community', 'involved with a certain bloodline', 'recently associated in allegations of bribery', 'distrusted by those in power', 'distrusted by the people', 'suspected in the disappearance of a well known figure', 'rumoured to dabble in forbidden magics', 'rumoured to be under investigation', 'rumoured to own a powerful artifact', 'rumoured to employ dangerous criminals', 'rumoured to help lucky commoners']);
  }

  function setFactionName(town, faction) {
    console.log(`Naming the ${faction.type} faction`);
    const data = factionData.types[faction.type];
    const name = toTitleCase(random([`The ${random(data.names.group)} of ${random(data.names.adjective)} ${random(data.names.main)}`, `The ${random(data.names.group)} of ${random(data.names.main)}`, `The ${random(data.names.adjective)} ${random(data.names.group)}`, `The ${random(data.names.main)} of ${town.name}`, `The ${town.name} ${random(data.names.main)}`, random(data.names.unique)]));
    console.log(`Named the ${faction.type} ${name}`);
    return name;
  }

  function setFactionReputation(faction) {
    console.log('assigning a reputation...');
    const ageModifier = getAgeModifier$2(faction);
    faction.roll.reputation += fm(faction.roll.reputation, ageModifier);
    faction.reputation = getFactionReputation(faction.roll.reputation);
  }

  function getAgeModifier$2(faction) {
    /**
     * @description [age, result]
     */
    const ages = [[95, 30], [90, 28], [80, 25], [70, 20], [60, 10], [55, 5], [50, 1], [45, -5], [40, -10], [30, -15], [20, -20], [10, -25], [5, -30], [0, -30]];

    for (const [num, description] of ages) {
      if (faction.roll.age > num) {
        return description;
      }
    }

    return 0;
  }

  function getFactionReputation(roll) {
    for (const [num, description] of factionData.rollData.reputation.rolls) {
      if (roll > num) {
        return description;
      }
    }

    return 'average';
  }

  function setFactionResources(faction) {
    console.log('assigning resources...');
    defineRollDataGetter(faction, factionData.rollData.resources.rolls, 'resourcesDescription', 'resources');
    faction.resources.list = [];
    const availableResources = {};

    for (const resource of keys(factionData.resources.types)) {
      if (factionData.resources.types[resource].isDefault) {
        availableResources[resource] = factionData.resources.types[resource].probability || 10;
      }
    }

    console.log(availableResources);
    sumWeights(availableResources, factionData.types[faction.type].resources);
    const ageModifier = getAgeModifier$1(faction.roll.age);
    faction.roll.resources += fm(faction.roll.resources, ageModifier);

    if (faction.roll.resources > 95) {
      getResources(faction, availableResources, dice(2, 20));
      getResources(faction, availableResources, dice(2, 20));
      repeat(() => getResources(faction, availableResources, random(-10, 15)), 3);
    } else if (faction.roll.resources > 90) {
      getResources(faction, availableResources, dice(2, 20));
      getResources(faction, availableResources, dice(2, 10));
      repeat(() => getResources(faction, availableResources, random(-10, 5)), 2);
    } else if (faction.roll.resources > 80) {
      getResources(faction, availableResources, dice(2, 20));
      getResources(faction, availableResources, dice(2, 10));
      repeat(() => getResources(faction, availableResources, random(-15, 5)), 2);
    } else if (faction.roll.resources > 70) {
      getResources(faction, availableResources, dice(2, 20));
      getResources(faction, availableResources, dice(2, 10));
      repeat(() => getResources(faction, availableResources, random(-20, 5)), 2);
    } else if (faction.roll.resources > 60) {
      getResources(faction, availableResources, dice(2, 20));
      getResources(faction, availableResources, dice(2, 10));
      repeat(() => getResources(faction, availableResources, random(-10, 5)), 1);
    } else if (faction.roll.resources > 55) {
      getResources(faction, availableResources, dice(2, 20));
      getResources(faction, availableResources, dice(2, 10));
      repeat(() => getResources(faction, availableResources, random(-15, 5)), 1);
    } else if (faction.roll.resources > 50) {
      getResources(faction, availableResources, dice(2, 20));
      getResources(faction, availableResources, dice(1, 10));
      repeat(() => getResources(faction, availableResources, random(-20, 5)), 1);
    } else if (faction.roll.resources > 45) {
      getResources(faction, availableResources, random(10, 15));
      getResources(faction, availableResources, random(-20, 5));
      getResources(faction, availableResources, random(-20, -5));
    } else if (faction.roll.resources > 40) {
      getResources(faction, availableResources, random(5, 15));
      getResources(faction, availableResources, random(-20, 0));
    } else if (faction.roll.resources > 30) {
      getResources(faction, availableResources, random(5, 10));
      getResources(faction, availableResources, random(-20, 0));
    } else if (faction.roll.resources > 20) {
      getResources(faction, availableResources, random(5, 15));
      getResources(faction, availableResources, random(-20, 0));
    } else if (faction.roll.resources > 10) {
      getResources(faction, availableResources, random(-15, 5));
      getResources(faction, availableResources, random(-20, 0));
    } else if (faction.roll.resources <= 5) {
      getResources(faction, availableResources, random(-20, -10));
      getResources(faction, availableResources, random(-30, -10));
    } else {
      getResources(faction, availableResources, random(-20, 0));
    }
  }

  function getResources(faction, availableResources, bonus) {
    console.log('get resources...');
    const factionSizeModifier = (faction.roll.size - 30) / 2;
    const sizeRoll = clamp(fm(dice(2, 30), clamp(factionSizeModifier + bonus)));
    const resource = getResourceName(availableResources);
    /** we need to make sure that we don't generate multiple of the same type */

    delete availableResources[resource];
    const form = factionData.resources.types[resource].form;
    const resourceSize = getResourceSize(factionData.resources.forms[form].rolls, sizeRoll);
    faction.resources.list.push({
      roll: sizeRoll,
      type: resource,
      amount: resourceSize
    });
  }

  function getAgeModifier$1(roll) {
    console.log('get age modifier...');
    if (roll > 95) return 15;
    if (roll > 90) return 10;
    if (roll > 80) return 8;
    if (roll > 70) return 6;
    if (roll > 60) return 4;
    if (roll > 55) return 2;
    if (roll > 50) return 1;
    if (roll > 45) return -1;
    if (roll > 40) return -2;
    if (roll > 30) return -4;
    if (roll > 20) return -6;
    if (roll > 10) return -8;
    return -10;
  }

  function getResourceSize(table, roll) {
    console.log('get resource size...');
    let result = table.find(desc => {
      return desc[0] <= roll;
    });
    if (!result) result = [0, 'some'];
    return result[1];
  }

  function getResourceName(container) {
    console.log('get resource name...');
    console.log(container);
    const resource = weightRandom(container);
    return resource;
  }

  function setFactionSize(town, faction) {
    console.log('calculating size...');
    faction.roll.size += getAgeModifier(faction.roll.age);
    faction.roll.size += getPopulationModifier$1(town.population);
    faction.size = getFactionSize(faction.roll.size);
  }

  function getAgeModifier(roll) {
    if (roll > 95) return 20;
    if (roll > 90) return 15;
    if (roll > 80) return 12;
    if (roll > 70) return 10;
    if (roll > 60) return 5;
    if (roll > 55) return 2;
    if (roll > 50) return 1;
    if (roll > 45) return -2;
    if (roll > 40) return -5;
    if (roll > 30) return -10;
    if (roll > 20) return -15;
    if (roll > 10) return -20;
    return -25;
  }

  function getPopulationModifier$1(population) {
    if (population > 6000) return 25;
    if (population > 5800) return 22;
    if (population > 5400) return 20;
    if (population > 5000) return 15;
    if (population > 4500) return 10;
    if (population > 4000) return 5;
    if (population > 3500) return 5;
    if (population > 3000) return 5;
    if (population > 2500) return 5;
    if (population > 2000) return -5;
    if (population > 1500) return -15;
    if (population > 1000) return -25;
    return -30;
  }

  function getFactionSize(roll) {
    if (roll > 95) return 'huge';
    if (roll > 90) return 'very large';
    if (roll > 80) return 'quite large';
    if (roll > 70) return 'large';
    if (roll > 60) return 'above average sized';
    if (roll > 55) return 'slightly above average sized';
    if (roll > 50) return 'average sized';
    if (roll > 45) return 'slightly below average sized';
    if (roll > 40) return 'somewhat small';
    if (roll > 30) return 'quite small';
    if (roll > 20) return 'very small';
    if (roll > 10) return 'tiny';
    return 'miniscule';
  }

  function setFactionStability(faction) {
    console.log('determining stability...');
    faction.stability = getFactionStability(faction.roll.stability);
  }

  function getFactionStability(roll) {
    if (roll > 95) return 'rock solid';
    if (roll > 90) return 'very stable';
    if (roll > 80) return 'quite stable';
    if (roll > 70) return 'stable';
    if (roll > 60) return 'mostly stable';
    if (roll > 55) return 'relatively stable';
    if (roll > 50) return 'stable';
    if (roll > 45) return 'relatively unstable';
    if (roll > 40) return 'somewhat unstable';
    if (roll > 30) return 'quite unstable';
    if (roll > 20) return 'very unstable';
    if (roll > 10) return 'rapidly disintegrating';
    return 'falling to pieces';
  }

  /**
   * Constrains every property of a record to be a certain type,
   * while still allowing for the keys to be unique values.
   *
   * @example
   * interface Person {
   *   name: string
   * }
   *
   * const people = constrainRecord<Person>()({
   *   dwight: { name: "Dwight" },
   *   angela: { name: "Angela" }
   * })
   *
   * people.dwight // Infers the type correctly.
   */
  function constrainRecord() {
    return function constrainer(record) {
      return record;
    };
  }

  const factionSliders = constrainRecord()({
    influence: {
      name: 'Influence',
      description: 'How influential is this faction?',
      preceding: 'Faction Influence:'
    },
    reputation: {
      name: 'Reputation',
      description: 'How well known is this faction?',
      preceding: 'Faction Reputation:'
    },
    age: {
      name: 'Age',
      description: 'How old is this faction?',
      preceding: 'Faction Age:'
    },
    size: {
      name: 'Size',
      description: 'How large is this faction?',
      preceding: 'Faction Size:'
    },
    stability: {
      name: 'Stability',
      description: 'How stable is this faction? Is there much in-fighting?',
      preceding: 'Faction Stability:'
    },
    resources: {
      name: 'Resources',
      description: "How many resources are at this faction's disposal?",
      preceding: 'Faction Resources:'
    },
    joiningFee: {
      name: 'Joining Fee',
      description: 'How expensive is it to join this faction?',
      preceding: 'Faction Joining Fee:'
    },
    leaderBribes: {
      name: 'Leader Bribes',
      description: 'How often do leaders turn down bribes?',
      preceding: 'Faction Leader Bribes:'
    },
    leaderCompetence: {
      name: 'Leader Competence',
      description: 'How competent is the leadership?',
      preceding: 'Faction Leader Competence:'
    }
  });

  const guardhouseData = {
    name: {
      wordNoun: ['watchtower', 'barracks', 'garrison', 'quarters', 'fort', 'station', 'command post', 'office', 'command'],
      adjective: ['yellow', 'green', 'blue', 'red', 'black', 'white', 'grey', 'grim', 'silent', 'watchful', 'dark', 'ancient', 'old', 'new', 'bronze', 'iron', 'sterling']
    },
    notableFeature: [// the guardhouse is known for
    {
      function() {
        return 'housing the entire list of laws of the town, codified into stone tablets available for anyone to view in the foyer, signifying that the law is for everyone.';
      }

    }, {
      function() {
        return 'a large broken stone statue which is displayed by the foyer. It is kept there for its historical and cultural significance.';
      }

    }, {
      function() {
        return 'a small complex by the side is a cooperative of the town, a popular place to shop and chat. Guards and townsfolk are seen operating it together.';
      }

    }, {
      function() {
        return 'a bathing pool in the courtyard which is free for citizens to use, safe in the knowledge that their possessions are kept in the guardhouse, away from sticky fingers.';
      }

    }, {
      function() {
        return 'The entire list of laws of the town, codified into stone tablets available for anyone to view in the foyer, signifying that the law is for everyone.';
      }

    }, {
      function() {
        return 'being incredibly fortified; after protests, the guards fortified the building, which made the citizenry protest even more, with the situation soon spiraling out of control.';
      }

    }, {
      function() {
        return 'housing a huge vault that wealthy or high ranking visitors to the town can store valuable items in during their stay, knowing it is under constant guard.';
      }

    }, {
      function() {
        return 'also housing the civil and criminal court building.';
      }

    }, {
      exclusions(town) {
        return town.economicIdeology !== 'primitivism' && town.roll.sin > 50;
      },

      function() {
        return "the town's moneylenders also occupy the same building. The townsfolk often look to it with disgust as moneylender and guard are often a pair.";
      }

    }],
    evidenceLocker: {
      // Inside the evidence locker, there is ___
      items: [{
        function() {
          return 'some confiscated weaponry from captured bandits. One of the weapons is highly personalised and decorated.';
        }

      }, {
        function() {
          return 'an object given by a concerned townsperson. The object was discovered by the townsperson recently, and they were reportedly immensely disturbed as they dropped it off.';
        }

      }, {
        function() {
          return 'a caged animal that was taken from a swindling vendor. One of the guards has acquired a fondness for it.';
        }

      }, {
        function() {
          return "an excellently forged letter from someone important. It's location suggests it was forgotten or misplaced before it could be destroyed.";
        }

      }, {
        function() {
          return 'a barrel that hides contraband underneath a thin layer of cured meat.';
        }

      }, {
        function() {
          return 'a lone sending stone. Its pair is nowhere to be seen.';
        }

      }, {
        function() {
          return 'a couple of improperly made potions or draughts. It was taken from a illicit alchemist working for a syndicate.';
        }

      }, {
        function() {
          return "a broken cloak which still has vague traces of magic. It's decorated with religious symbols.";
        }

      }, {
        function() {
          return 'forfeited precious goods from a merchant. The goods were stolen to be resold at a black market';
        }

      }, {
        function() {
          return "an exotic plant, confiscated from a traveller. It's apparently dear to them, and they were last seen shouting expletives at the building.";
        }

      }, {
        function() {
          return 'some bloodstained and ripped clothing that was found in an alleyway. The owner has yet to be found and noone has come forward with clues.';
        }

      }, {
        function() {
          return 'a scroll for a dangerous spell that was found being carried by a novice spellcaster';
        }

      }, {
        function() {
          return 'a small bag of gold coins stamped with the seal of a city that fell to ruin centuries ago, discovered in the rags of a man who starved to death in an alleyway.';
        }

      }, {
        function() {
          return 'a list of persons that a corrupt guard might have been given to create or plant incriminating evidence on.';
        }

      }, {
        function() {
          return 'some confiscated weaponry from captured bandits. One of the weapons is highly personalised and decorated.';
        }

      }, {
        function() {
          return 'some documents in foreign writing or language. Kept in a small scroll case.';
        }

      }, {
        function() {
          return 'some used bindings, showing a lot of damage. Different from those used by the guards.';
        }

      }, {
        function() {
          return 'some gaudy outfit, the style and make of which are rare in the general area.';
        }

      }, {
        function() {
          return 'some pendant. The symbols relate to an important organisation.';
        }

      }, {
        function() {
          return 'a cane with a hidden compartment. It belonged to a noble of ill repute.';
        }

      }]
    },
    get: {
      /** @example `At the moment, ______ */
      event: (town, guardhouse) => [{
        exclusions(town) {
          return town.roll.law > 50;
        },

        function() {
          return 'an execution is taking place.';
        }

      }, {
        function() {
          return "a guard is taking down a witness's statement.";
        }

      }, {
        function() {
          return "a guard is holding a child's hand, who appears to be slightly lost.";
        }

      }, {
        function() {
          return 'a duo of two people in handcuffs are currently trying to throw each other under the bus.';
        }

      }, {
        function() {
          return 'a celebration is taking place; the guardhouse is decked in cheer and decor, the joyous noise audible outside.';
        }

      }, {
        exclusions(town, guardhouse) {
          return guardhouse.roll.expertise > 60;
        },

        function() {
          return 'a community program is going on. Townsfolk of all ages are seen inside, eagerly waiting. One of the guards is currently leading a small discussion.';
        }

      }, {
        exclusions(town, guardhouse) {
          return guardhouse.roll.expertise < 50;
        },

        function() {
          return "a sizable number of people in the midst of a heated discussion. They're threatening something if their demands aren't accepted.";
        }

      }, {
        function() {
          return `a person of authority is performing an inspection of ${guardhouse.name}.`;
        }

      }, {
        function() {
          return "a noble is arguing about some fine which was levied against them- they clearly don't think that it's fair.";
        }

      }, {
        exclusions(town, guardhouse) {
          return guardhouse.roll.expertise < 50;
        },

        function() {
          return "a noble is arguing about some fine which was levied against them- they clearly don't think that it's fair, and after some money exchanges hands, it appears that the fine has been reduced in severity.";
        }

      }, {
        function(town, guardhouse) {
          if (guardhouse.roll.expertise > 80) return 'a husband and wife are shouting, trying to get into the guard house, but are being blocked. They are screaming about the guards ignoring their child who has gone missing. The guards are patiently explaining something to them- it seems that they are quite used to the pair.';
          if (guardhouse.roll.expertise > 50) return 'a husband and wife are shouting, trying to get into the guard house, but are being blocked. They are screaming about the guards ignoring their child who has gone missing, but the guards are totally disinterested- a stark contrast to the frantic parents, they seem unperturbed, even annoyed.';
          if (guardhouse.roll.expertise <= 50) return 'a husband and wife are shouting, trying to get into the guard house, but are being blocked. They are screaming about the guards ignoring their child who has gone missing, but the guards are actively jeering, seeming to take some amusement in the couples pleading.';
        }

      }],
      officeItems: [// There is ____
      'a fine looking sword which has a gem embedded in the pommel- looks mostly decorative, but could definitely hurt someone if it was put to use.', 'a bookshelf full of anti-magic books to prevent people from escaping the jail cells.', 'a small painted portrait of the captains family.', 'a wall scroll with major city laws written on it.', 'a map of the city with pinpoints in it showing the location of murders that all have something in common.', "a row of small honorary nameplates with names of former guards. They're nailed neatly around the room, plated in precious metal.", "a small cabinet with cloth draped over it. It's tucked into the corner wall, easily missed in plain sight.", "a small bust placed on the desk. It's clearly expensive and symbolic.", "a small shrine to a deity. It's well kept and maintained.", "an amulet on the desk. The chain is polished from wear. It's been left out possibly accidentally."],
      officeDescription: guardhouse => [{
        wealth: 90,
        size: 10,
        description: "This seems to be less of a functioning constabulary office, and more of a person's private weapons range; all manner of shiny, expensive stabby toys line the walls."
      }, {
        wealth: 90,
        size: 30,
        description: "This is a small, but very well funded office. There are rows of weapons, armour, and other peace-keeping related items lining the walls, and there's a rather nice oak table in the centre of the room. It almost gives off the vibe of a boy's clubhouse."
      }, {
        wealth: 90,
        size: 90,
        description: 'One could easily mistake this guardhouse for a castle. The tall stone walls are immaculately maintained. Inside, there is a large courtyard with several training dummies, an armory with neatly maintained weapons and armor, and a well organized office with many desks.'
      }, {
        wealth: 90,
        size: 70,
        description: 'This office is a large hall. Most of the space is filled with training areas or tables. On the far wall, there are a series of massive desks covered in papers and writing supplies. An array of clean and polished weapons and armor dominates one of the other walls.'
      }, {
        wealth: 90,
        size: 50,
        description: 'This office fits in with the rest of the town. One room is devoted to all manner of supplies, from weapons and armor to chains and barricades. It appears to be excellently stocked. The other room is mainly used for bookkeeping, with a large array of neatly bound books that detail all manner of useful information. It is dominated by several large bookshelves and an immaculately maintained desk.'
      }, {
        wealth: 70,
        size: 90,
        description: 'This office is a large building containing several inter-connected rooms. There are rooms for training, storage, bookkeeping, and rest. Each room seems to be well-maintained, but all furniture is of middling quality. Most of the funds seem to have been directed to the upkeep of the building. The armory and bookkeeping room both appear to be in good shape.'
      }, {
        wealth: 70,
        size: 70,
        description: 'This large office appears to have been the common room of an inn in the past. Several tables with chairs have been placed around the office, and there is a roaring fire in the hearth. Along one wall, a repurposed bar is used as a desk, with the cabinets behind the bar being used for the storage of books. The storage room is in the back where the kitchen used to be, and has a variety of simple weapons. Most of the weapons are servicable, but nothing more.'
      }, {
        wealth: 70,
        size: 50,
        description: 'The two rooms of this office are connected by a small doorway. One room seems to mainly be used as a meeting or bookkeeping area. It contains a squat table covered in papers, with several writing implements scattered around. The other room seems to be used for storage, and is stocked with weapons and supplies. Most of the weapons seem to be well-maintained, but there are not a large number of spare weapons. The supplies are useful but limited.'
      }, {
        wealth: 70,
        size: 30,
        description: "This constable's office looks almost like a dining room. A large table of fine make surrounded by chairs sits at the centre, and books are piled in the middle. The books appear to have been cheaply bound, likely by a member of the guard rather than a professional binder. There are a few weapons in the corner, and they seem usable but not extraordinary."
      }, {
        wealth: 70,
        size: 10,
        description: 'This office is a small but well-stocked booth. A few well-polished weapons are propped up against the walls. They seem well-made, but not of the highest quality. A small but servicable desk sits below a tiny window.'
      }, {
        wealth: 50,
        size: 90,
        description: 'There are a variety of rooms in this office, but only around half of them are actively used. The unused rooms are slightly dusty, and are primarily used for storage. The rooms that appear to see frequent use are the armory, main desk, and training room. These rooms all seem well maintained, but perhaps in need of a bit more money. The weapons and armor in the armory are of common but sturdy make, and contain no expensive materials.'
      }, {
        wealth: 50,
        size: 70,
        description: "This constable's office is fairly large and rather well-organized. There are several tables and chairs that seem to have been scrapped together, and most of the furniture in general seems to be made on a budget. There is a small training circle and a reasonably large weapons rack. The weapons are simple wooden weapons, but are clearly regularly used and maintained. There are a few pieces of leather armor lying around, but nothing more expensive than that."
      }, {
        wealth: 50,
        size: 50,
        description: 'This office is almost the picture of an average guardhouse. A simple desk and several old shelves sit in one room. In the other room, there is a neat rack of weapons. Most of the weapons appear to have been maintained, but they were clearly made with an eye for cost over quality.'
      }, {
        wealth: 50,
        size: 30,
        description: 'While this office is only one room, the space seems to have been used well. A writing desk with scattered papers sits in one corner, and the other wall has a small collection of weapons. There is also a small table in the center of the room, likely used for meals. All of the weapons look like they were cheaply made, but they seem usuable enough.'
      }, {
        wealth: 50,
        size: 10,
        description: 'This tiny room has a single chair and a club hanging on the wall. Fitting several people into this room would be uncomfortable, and there are minimal decorations. The club and chair both seem to be of decent quality. While there is no desk for writing, there are a few writing tools and a slab of wood that could be used as a writing surface.'
      }, {
        wealth: 30,
        size: 90,
        description: 'This office seems almost awkwardly large, as the vast majority of the space is not used. Most of the rooms are currently empty, and are filled with dust. There is a reasonably large writing desk of poor make in one of the rooms. The desk is covered in books, loose papers, and a few writing tools. There is also an armory, but it contains only a few wooden clubs and quarterstaffs.'
      }, {
        wealth: 30,
        size: 70,
        description: 'This office is made up of three rooms, with one room for training, another for bookkeeping, and the last as an armory. The training room is entirely empty, and seems to be rarely used. The bookkeeping room contains a tiny desk and a few papers but little else. The armory contains a few clubs.'
      }, {
        wealth: 30,
        size: 50,
        description: 'This office was once made of two rooms, but the wall between them seems to have collapsed at some point. Most of the wall wreckage has been cleared away, but it still looks quite odd. The merged room has one table with a few roughly bound books and an old writing tool. There are also a few wooden weapons lying around, but they seem to just be roughly carved pieces of scrap wood.'
      }, {
        wealth: 30,
        size: 30,
        description: 'This office is small but serviceable. There are two wooden weapons of poor make hung on the wall. There is one tiny desk, and an old book, but no writing tools. One of the corners of the room seems to be in danger of collapse.'
      }, {
        wealth: 30,
        size: 10,
        description: "This constable's office seems to have been almost an afterthought. The office is tiny and shoddy, but usable. The office contains only a chair and an old quarterstaff."
      }, {
        wealth: 10,
        size: 90,
        description: 'This is an immense constable office, but it is squalid and rotting. Parts of the walls have collapsed, and only some of the space is usable. There is no equipment in sight, and the few desks in the rooms are on the verge of collapse.'
      }, {
        wealth: 10,
        size: 70,
        description: 'While this office is large, most of the space is entirely unused. All of the desks have been shoved into one room, and all of the equipment has been pushed into another room. The desks and equipment are both minimal and poorly maintained.'
      }, {
        wealth: 10,
        size: 50,
        description: 'This office consists of two rooms, but one is unusable due to a broken floor. The other room seems to be used for bookkeeping. Most of the books are not bound, and are just stacks of paper. Several of them seem to be heavily stained or otherwise damaged. There are no supplies or weapons to be found, other than a few rations of food and a broken dagger.'
      }, {
        wealth: 10,
        size: 30,
        description: 'The size of a small room, this office seems almost abandoned. There appears to be a massive spider web in the corner, and there are several layers of dust on many surfaces. There is one table in the room that seems used, but it seems rather unstable. There is a large spear sitting in the corner, but the wood is rotten and the metal looks rusted.'
      }, {
        wealth: 10,
        size: 10,
        description: 'This is a tiny hole in the wall that serves as the local constabulary. There are a few heavily rusted weapons piled in the corner, but no furniture.'
      }],

      /** @example `In the holding cell is ${reason}` */
      holdingCell: [{
        reason: 'a gnome dressed in black rogues gear caught beating up a man in an alley. She claims she was stopping him from committing a crime.',
        base: {
          race: 'gnome',
          gender: 'woman',
          profession: 'rogue'
        }
      }, {
        reason: "a man caught trying to drink some of the alchemist's potions to get high.",
        base: {
          gender: 'man',
          calmTrait: 'curious about narcotics'
        }
      }, {
        reason: 'a drunken half-orc, sleeping it off after starting a huge bar brawl.',
        base: {
          race: 'half-orc'
        }
      }, {
        reason: 'the wife of a merchant accused of trying to poison her husband.',
        base: {
          gender: 'woman'
        }
      }, {
        reason: 'a clerk from the Gold Exchange caught embezzling to fund his gambling addiction.',
        base: {
          gender: 'man',
          profession: 'clerk',
          stressTrait: 'reckless',
          calmTrait: 'happy-go-lucky'
        }
      }, {
        reason: 'an itinerant alchemist who sold potions that did not work as advertised',
        base: {
          profession: 'alchemist'
        }
      }, {
        reason: 'the village idiot.',
        base: {
          calmTrait: 'simple',
          stressTrait: 'confused'
        }
      }, {
        reason: 'a dirty guard. He still bears some symbols that identify him.',
        base: {
          gender: 'man',
          profession: 'guard'
        }
      }, {
        reason: 'someone arrested for a very minor offense. She seems impatient and frustrated.',
        base: {
          gender: 'woman'
        }
      }, {
        reason: 'a traveler that was arrested for disturbing the peace. He seems unaware of his crime.',
        base: {
          profession: 'tourist'
        }
      }, {
        reason: 'a convicted murderer. The crime was ambiguous, and he confessed.',
        base: {
          gender: 'man'
        }
      }, {
        reason: 'a person claiming to be someone else. Arrested after the other called the guards on him.',
        base: {
          gender: 'man',
          note: 'May, or may not be a doppelganger.'
        }
      }, {
        reason: "a woman claiming the town was influenced by mind manipulating magic. The guards insist she's insane.",
        base: {
          gender: 'woman',
          stressTrait: 'paranoid',
          calmTrait: 'creative'
        }
      }, {
        reason: 'a youth, sulking in the corner. The guards claim he is an accomplice to a recent crime.',
        base: {
          ageStage: 'child',
          gender: 'man'
        }
      }, {
        reason: 'a mysterious person. He claims he is imprisoned for a crime. The guards refute it and claim he refuses to leave the cell.',
        base: {
          gender: 'man'
        }
      }, {
        reason: 'a bard, imprisoned for playing a raunchy tune within earshot of a very uptight sergeant.',
        base: {
          profession: 'bard'
        }
      }, {
        reason: 'a criminal who is refusing to talk, fearing retribution.',
        base: {
          background: 'criminal'
        }
      }],
      customers: [{
        relationshipDescription: 'guard',
        relationships: {
          building: {
            relationship: 'guard',
            reciprocalRelationship: 'place of work'
          },
          associatedNPC: {
            relationship: 'peer'
          }
        },
        base: {
          profession: 'guard'
        },

        description(building, npc) {
          return `${npc.firstName} works in ${building.name}.`;
        }

      }, {
        relationshipDescription: 'prisoner',
        relationships: {
          building: {
            relationship: 'prisoner',
            reciprocalRelationship: 'place of imprisonment'
          },
          associatedNPC: {
            relationship: 'captor'
          }
        },
        base: {
          professionSector: 'crime'
        },

        description(building, npc) {
          return `${npc.firstName} is a captured criminal being held in ${building.name} awaiting trial.`;
        }

      }, {
        relationshipDescription: 'investigator',
        relationships: {
          building: {
            relationship: 'investigator',
            reciprocalRelationship: 'place of work'
          },
          associatedNPC: {
            relationship: 'peer'
          }
        },
        base: {
          profession: 'investigator'
        },

        description(building, npc) {
          return `${npc.firstName} works on cases in ${building.name}.`;
        }

      }, {
        relationshipDescription: 'kidnapper',
        relationships: {
          building: {
            relationship: 'kidnapper',
            reciprocalRelationship: 'sends letters of demand'
          },
          associatedNPC: {
            relationship: 'contact point'
          }
        },
        base: {
          profession: 'kidnapper'
        },

        description(building, npc) {
          return `${npc.firstName} is kidnapping children, and sending ransom letters to ${building.name}.`;
        }

      }, {
        relationshipDescription: 'fugitive',
        relationships: {
          building: {
            relationship: 'fugitive',
            reciprocalRelationship: 'pursuant body'
          },
          associatedNPC: {
            relationship: 'lead investigator'
          }
        },
        base: {
          profession: 'fugitive'
        },

        description(building, npc) {
          return `${npc.firstName} is a dangerous fugitive being hunted down by ${building.name}.`;
        }

      }, {
        relationshipDescription: 'wanted criminal',
        relationships: {
          building: {
            relationship: 'wanted criminal',
            reciprocalRelationship: 'pursuant body'
          },
          associatedNPC: {
            relationship: 'lead investigator'
          }
        },
        base: {
          professionSector: 'crime'
        },

        description(building, npc) {
          return `${npc.firstName} is a wanted criminal being hunted down by ${building.name}.`;
        }

      }, {
        relationshipDescription: 'informant',
        relationships: {
          building: {
            relationship: 'informant',
            reciprocalRelationship: 'informee'
          },
          associatedNPC: {
            relationship: 'lead investigator'
          }
        },
        base: {
          professionSector: 'crime'
        },

        description(building, npc) {
          return `${npc.firstName} is an informant who is assisting ${building.name} with their investigations.`;
        }

      }]
    },
    rollData: {
      wealth: {
        description: 'How well are they funded?',
        preceding: 'Guardhouse Wealth:',
        rolls: [[95, 'kingly'], [80, 'aristocratic'], [70, 'wealthy'], [60, 'comfortable'], [50, 'modest'], [25, 'poor'], [15, 'squalid'], [0, 'destitute']]
      },
      size: {
        description: 'How large is it?',
        preceding: 'Guardhouse Size:',
        rolls: [[95, 'cavernous'], [80, 'huge'], [70, 'quite large'], [60, 'large'], [50, 'spacious'], [40, 'average sized'], [30, 'somewhat cramped'], [20, 'small'], [10, 'tiny'], [0, 'extremely cramped']]
      },
      cleanliness: {
        description: 'How clean is the guardhouse? What about the cells?',
        preceding: 'Guardhouse:',

        /** @example `The guardhouse is ______` */
        rolls: [[90, 'fastidious- even the prisoner cells are clean.'], [70, 'very tidy. The prisoner cells are in pretty good condition, and quite liveable.'], [60, 'tidy, although the cells are in need of a sweeping.'], [50, 'reasonably tidy, though the cells have the occasional rat.'], [40, 'somewhat messy, with the worst of it concentrated in the cells, which are in need of a deep clean.'], [30, 'rather messy- especially the cells, which are positively disgusting.'], [20, 'very messy, and the cells are even worse, with a fecal aroma wafting out.'], [10, 'in dire need of a cleaner; blood spatters have seeped in, and the cells are filthy.'], [0, 'apparently a crime scene in itself, with blood stains everywhere. The cells must be unimaginably bad.']]
      },
      expertise: {
        description: 'How well trained are the guards?',
        preceding: 'Guardhouse Training:',

        /** @example `The guards are _____` */
        rolls: [[80, 'consummate professionals'], [70, 'professional'], [60, 'reasonably professional'], [50, 'as professional as one could expect'], [40, 'mostly professional, though the occasional bad eggs causes a public scandal now and then'], [30, 'not exactly known for their professionalism'], [20, 'not very professional, and are known for not being very good at their jobs'], [10, 'basically amateurs, with no real procedures or trainings'], [0, 'basically playing dress-ups, with virtually no interest in actual policing']]
      },
      reputation: {
        description: 'Is it known for applying the law equally, or is it a crime den?',
        preceding: 'Guardhouse Reputation:',
        hasRolls: false
      },
      magic: {
        description: 'How likely is it to find magic here?',
        preceding: 'Guardhouse Magic:',
        hasRolls: false
      },
      activity: {
        description: 'How busy is the store?',
        preceding: 'Guardhouse Activity:',
        hasRolls: false
      }
    }
  };

  const flora = {
    flower: {
      // Stemmed, non-shrub flowers plural
      stemP: ['daisies', 'asters', 'begonias', 'bellflowers', 'bluebells', 'buttercups', 'lillies', 'daffodils', 'irises', 'marigolds', 'gardenias', 'geraniums', 'goldenrods', 'hibiscuses', 'honeysuckle', 'hydrangeas', 'poppies', 'irises', 'lavender', 'moonflowers', 'orchids', 'pansies', 'petunias', 'pointsettias', 'roses', 'snapdragon', 'tulips', 'violets'],
      // Stemmed, non-shrub flowers singular
      stemS: ['daisy', 'aster', 'begonia', 'bellflower', 'bluebell', 'buttercup', 'lilly', 'daffodil', 'iris', 'marigold', 'gardenia', 'geranium', 'goldenrod', 'hibiscus', 'honeysuckle', 'hydrangea', 'poppy', 'iris', 'lavender', 'moonflower', 'orchid', 'pansy', 'petunia', 'pointsettia', 'rose', 'snapdragon', 'tulip', 'violet', 'peony', 'sunflower'],
      // Common flowering shrubs and bushes
      bush: ['hydrangea', 'azalea', 'hibiscus', 'sweetshrub', 'butterfly', 'rhododendron', 'lilac', 'deutzia', 'pearl', 'spirea', 'forsythia', 'summersweet']
    },
    fruit: {
      // list of more common fruits, plural
      fruitP: ['apples', 'almonds', 'apricots', 'bananas', 'blackberries', 'blueberries', 'boysenberries', 'cherries', 'coconuts', 'dates', 'dragonfruits', 'elderberries', 'figs', 'gooseberries', 'grapes', 'raisins', 'honeyberries', 'juniper berries', 'kiwis', 'lemons', 'limes', 'mangos', 'honeydews', 'watermelons', 'mulberries', 'nectarines', 'oranges', 'papayas', 'peaches', 'pears', 'plums', 'prunes', 'pineapples', 'pomegranites', 'raspberries', 'star fruits', 'strawberries'],
      // list of more common fruits, singular
      fruitS: ['apple', 'almond', 'apricot', 'banana', 'blackberry', 'blueberry', 'boysenberry', 'cherry', 'coconut', 'date', 'dragonfruit', 'elderberry', 'fig', 'gooseberry', 'grape', 'raisin', 'honneyberry', 'juniper berry', 'kiwi', 'lemon', 'lime', 'mango', 'honeydew', 'watermelon', 'mulberry', 'nectarine', 'orange', 'papaya', 'peach', 'pear', 'plum', 'prune', 'pineapple', 'pomegranite', 'raspberry', 'star fruit', 'strawberry'],
      // list of more common fruit trees
      tree: ['apple', 'almond', 'apricot', 'cherry', 'orange', 'lemon', 'lime', 'elderberry', 'fig', 'mango', 'olive', 'mulberry', 'peach', 'plum', 'pomegranate', 'walnut', 'chestnut']
    },
    vegetable: {
      // list of common vegetables, plural
      vegetableP: ['potatoes', 'corn', 'carrots', 'broccoli', 'green beans', 'garlics', 'cucumbers', 'spinach', 'onions', 'sweet potatoes', 'mushrooms', 'peas', 'asparaguses', 'cauliflowers', 'bell peppers', 'heads of lettuce', 'olives', 'avocadoes', 'cabbages', 'zucchinis', 'celery', 'jalapeños', 'chives', 'okra', 'collard greens', 'sugar beets', 'beets', 'artichokes', 'tomatoes', 'radishes', 'pumpkins', 'turnips', 'rutabagas', 'eggplants', 'parsnips', 'beans', 'squashes', 'shallots'],
      // list of common vegetables, singular
      vegetableS: ['potato', 'corn', 'carrot', 'broccoli', 'green bean', 'garlic', 'cucumber', 'spinach', 'onion', 'sweet potato', 'mushroom', 'pea', 'asparagus', 'cauliflower', 'bell pepper', 'lettuce', 'olive', 'avocado', 'cabbage', 'zucchini', 'celery', 'jalapeño', 'chive', 'okra', 'collard green', 'sugar beet', 'beet', 'artichoke', 'tomato', 'radish', 'pumpkin', 'turnip', 'rutabaga', 'eggplant', 'parsnip', 'bean', 'squash', 'shallot']
    },
    tree: {
      typeS: ['red maple', 'beech', 'spruce', 'ash', 'black cherry', 'oak', 'pine', 'maple', 'elm', 'fir', 'black walnut', 'birch', 'sycamore', 'alder', 'cedar', 'willow', 'red pine', 'silver birch', 'blue spruce', 'white oak', 'black spruce', 'hickory', 'cypress', 'scarlet oak', 'aspen', 'poplar', 'redwoord', 'cedar'],
      // common tree types with proper articles
      typeArticle: ['a red maple', 'a beech', 'a spruce', 'an ash', 'a black cherry', 'an oak', 'a pine', 'a maple', 'an elm', 'a fir', 'a black walnut', 'a birch', 'a sycamore', 'an alder', 'a cedar', 'a willow', 'a red pine', 'a silver birch', 'a blue spruce', 'a white oak', 'a black spruce', 'a hickory', 'a cypress', 'a scarlet oak', 'an aspen', 'a poplar', 'a redwoord', 'a cedar']
    }
  };

  var yellow = {
  	properties: {
  		isNatural: true,
  		isPlant: true,
  		isMineral: true,
  		isPaint: true
  	},
  	colour: [
  		"ivory",
  		"cream",
  		"yellow",
  		"beige",
  		"peridot",
  		"citrine",
  		"dark yellow",
  		"light yellow",
  		"bright yellow",
  		"pastel yellow",
  		"gold",
  		"lemon yellow"
  	],
  	coloured: [
  		"daffodil",
  		"lemon",
  		"dandelion",
  		"straw",
  		"brass",
  		"banana",
  		"canary",
  		"corn",
  		"gold",
  		"cheese",
  		"butter",
  		"amber"
  	]
  };
  var orange = {
  	properties: {
  		isNatural: true,
  		isPlant: false,
  		isMineral: false,
  		isPaint: true
  	},
  	colour: [
  		"vermillion",
  		"ochre",
  		"orange",
  		"burnt orange",
  		"sherbert orange",
  		"ginger",
  		"amber",
  		"light orange",
  		"dark orange",
  		"bright orange",
  		"pastel orange",
  		"carrot orange",
  		"mahogany",
  		"sunglow orange",
  		"pumpkin orange"
  	],
  	coloured: [
  		"orangutan",
  		"carrot",
  		"tangerine",
  		"apricot",
  		"sandstone",
  		"honey",
  		"marmalade",
  		"apricot",
  		"pumpkin",
  		"poppy",
  		"marigold"
  	]
  };
  var red = {
  	properties: {
  		isNatural: true,
  		isPlant: false,
  		isMineral: true,
  		isPaint: true
  	},
  	colour: [
  		"red",
  		"bright red",
  		"fiery red",
  		"auburn",
  		"crimson",
  		"oxblood red",
  		"vermillion",
  		"maroon",
  		"carmine",
  		"dark red",
  		"light red",
  		"pale red",
  		"pastel red",
  		"apricot",
  		"burgundy",
  		"blood red",
  		"cardinal",
  		"coral",
  		"pink",
  		"mystic red",
  		"rose red",
  		"scarlet",
  		"rust",
  		"salmon"
  	],
  	coloured: [
  		"rose",
  		"tomato",
  		"blood",
  		"fire",
  		"rust",
  		"coral",
  		"apple",
  		"chili",
  		"raspberry",
  		"watermelon",
  		"fig",
  		"cranberry",
  		"cherry",
  		"ruby",
  		"cardinal"
  	]
  };
  var purple = {
  	properties: {
  		isNatural: false,
  		isPlant: false,
  		isMineral: true,
  		isPaint: false
  	},
  	colour: [
  		"tyrian purple",
  		"royal purple",
  		"electric purple",
  		"purple",
  		"mauve",
  		"violet",
  		"pale purple",
  		"dark purple",
  		"light purple",
  		"bright purple",
  		"dull purple",
  		"bright violet",
  		"lavendar",
  		"lilac",
  		"pale plum",
  		"pastel purple",
  		"amethyst"
  	],
  	coloured: [
  		"thistle",
  		"orchid",
  		"blackberry",
  		"eggplant",
  		"lilac",
  		"plum",
  		"grape",
  		"iris",
  		"lavendar",
  		"amethyst"
  	]
  };
  var blue = {
  	properties: {
  		isNatural: false,
  		isPlant: false,
  		isMineral: true,
  		isPaint: false
  	},
  	colour: [
  		"light blue",
  		"blue",
  		"dark blue",
  		"deep blue",
  		"navy blue",
  		"cerulean",
  		"azure",
  		"indigo",
  		"turquoise",
  		"periwinkle",
  		"teal",
  		"capri",
  		"royal blue",
  		"sapphire",
  		"pastel blue"
  	],
  	coloured: [
  		"denim",
  		"sapphire",
  		"sea",
  		"storm",
  		"sky",
  		"peacock",
  		"topaz"
  	]
  };
  var green = {
  	properties: {
  		isNatural: true,
  		isPlant: true,
  		isMineral: true,
  		isPaint: true
  	},
  	colour: [
  		"green",
  		"olive",
  		"sage",
  		"emerald",
  		"lime",
  		"chartreuse",
  		"mint",
  		"seafoam green",
  		"pear green",
  		"apple green",
  		"bright green",
  		"dark green",
  		"forest green",
  		"light green",
  		"celadon",
  		"pastel green"
  	],
  	coloured: [
  		"seafoam",
  		"shamrock",
  		"seaweed",
  		"pear",
  		"pickle",
  		"leaf",
  		"grass",
  		"frog",
  		"turtle",
  		"moss"
  	]
  };
  var brown = {
  	properties: {
  		isNatural: true,
  		isPlant: true,
  		isMineral: true,
  		isPaint: true
  	},
  	colour: [
  		"brown",
  		"umber",
  		"chocolate",
  		"caramel",
  		"burnt butter",
  		"mud brown",
  		"tan",
  		"dark brown",
  		"rust brown",
  		"sandy brown",
  		"bronze",
  		"sepia",
  		"pastel brown"
  	],
  	coloured: [
  		"acorn",
  		"almond",
  		"baked bread",
  		"bark",
  		"beeswax",
  		"coffee",
  		"ale",
  		"pecan",
  		"mocha",
  		"cork",
  		"wood",
  		"tea"
  	]
  };
  var black = {
  	properties: {
  		isNatural: false,
  		isPlant: false,
  		isMineral: true,
  		isPaint: false
  	},
  	colour: [
  		"onyx",
  		"ebony",
  		"charcoal",
  		"licorice",
  		"black",
  		"slate"
  	],
  	coloured: [
  		"charcoal",
  		"licorice",
  		"iron",
  		"burnt bread",
  		"obsidian",
  		"crow",
  		"soot",
  		"ink",
  		"raven",
  		"storm cloud"
  	]
  };
  var white = {
  	properties: {
  		isNatural: false,
  		isPlant: false,
  		isMineral: false,
  		isPaint: true
  	},
  	colour: [
  		"white",
  		"ghost white",
  		"pure white",
  		"pearl white",
  		"floral white",
  		"vanilla",
  		"seashell",
  		"snow white",
  		"ivory"
  	],
  	coloured: [
  		"cloud",
  		"eggshell",
  		"champagne",
  		"bone",
  		"snow",
  		"tooth",
  		"ivory",
  		"cotton",
  		"dandelion",
  		"chalk",
  		"swan",
  		"milk",
  		"sheep",
  		"pearl",
  		"lotus"
  	]
  };
  var jsonData$5 = {
  	yellow: yellow,
  	orange: orange,
  	red: red,
  	purple: purple,
  	blue: blue,
  	green: green,
  	brown: brown,
  	black: black,
  	white: white
  };

  const colours = jsonData$5;
  function createColour(filters = {}) {
    const {
      banned = [],
      ...properties
    } = filters;
    const available = keys(colours).filter(colour => {
      if (banned.includes(colour)) {
        return false;
      }

      return keys(properties).every(property => {
        return colours[colour].properties[property] === properties[property];
      });
    });
    const selected = colours[random(available)];
    const randomColour = random(selected.colour);
    const randomColoured = random(selected.coloured);
    return random([randomColour, `${randomColoured} coloured`]);
  }
  /**
   * Returns all available colours and variants.
   */

  function getAllColours() {
    return Object.values(colours).reduce((all, colourData) => {
      return all.concat(colourData.colour);
    }, []);
  }

  const generalStore = {
    goods: {
      'food staples': ['beans', 'milk', 'flour', 'oil', 'butter'],
      'tools': ['hammers', 'nails', 'wood', 'quills', 'rope'],
      'luxuries': ['honey', 'chocolate'],
      'fabrics': ['backpacks', 'canvas', 'thread', 'down feathers'],
      'cleaning supplies': ['rags', 'soap', 'brushes', 'lye', 'salt']
    },
    crud: ['rusty knives', 'dull knives', 'mismatched armor', 'shattered shields', 'tattered leather armor', 'wooden practice swords', 'broken swords', 'axe handles', 'arrowheads', 'goose feathers', 'turkey feathers', 'dulled spear points', 'worn-out hammers', 'steel nails', 'rusted hinges', 'broken doorknobs', 'assorted keys', 'empty glass bottles', 'broken glass', 'empty cans', 'blank parchment', 'lists and inventories', 'legal case files', 'decaying books', 'extra copies of a useless book', 'dried-up ink wells', 'used quills', 'empty glass vials', 'cork vial stoppers', 'discarded alchemical laboratory equipment', 'incomprehensible notes on alchemy', 'grocery lists and recipes', 'hand-written memoir of an ineffective bureaucrat', 'collection of of sappy love letters', 'crumbling sheet music', 'broken musical instruments', 'spare brass parts', 'scrap copper', 'old dried fish', 'human bones', 'some unidentifiable bones', 'teeth', 'blood-soaked rags', 'oily rags', 'tattered banners', 'tattered sails', 'winches and pulleys', 'some frayed rope', 'a length of chain in an impossible knot', 'dented helms', 'assorted strips of leather', 'wood chips', 'iron filings', 'steel slag', 'ant-ridden flour', 'maggot-ridden meat', 'mold-covered cheese', 'bottles of over-ripe wine', 'ceramic mugs', 'glass mugs', 'plates and bowls', 'low-end steel cutlery', "some old children's clothes", "worn-out children's shoes", 'boots with holes', "well-worn men's clothes", 'moth-eaten dresses', 'broken jars of pickled foodstuffs', 'empty gunnysacks', 'cured meat that is hard as a rock', 'bits of broken furniture', 'some tattered blankets', 'leaky oil lanterns', 'worms', 'mice', 'roaches', 'beetles', 'a mysterious powder', 'a mysterious crystalline substance', 'a mysterious viscous liquid', 'cat toys', 'leashes, collars, and whips', 'horseshoes', 'a heavy apron', 'rag dolls', 'wicker dolls', 'ripped and broken baskets', 'undyed wool', 'thin cotton cloth', 'needles, threads, and spare bits of cloth', 'vials of brightly colored powders', 'vials of brightly colored liquids', 'paintings of poor quality', 'sculptures and figurines of middling quality', 'incomplete chess sets', 'playing cards and betting chips', 'bent and broken wands', 'cracked and broken orbs', 'saintly relics and pungent incense', 'brushes of various sorts'],
    idle: ['sitting, with a piece of bread in hand', 'sitting, mug in hand', 'reading some letter intently', 'chewing on a piece of hay', 'sharpening a knife', 'cutting an apple into bite sized pieces', 'biting into an apple', "reading a book titled '<<print lib.books.pun.random()>>'", 're-stocking one of the shelves', 'posing near the front of the store for some sort of painting', 'polishing a grappling hook', 'helping a customer preview a variety of torches', 're-arranging several shelves to make room for new product', 'packing a healing kit with fresh bandages', 'coiling up a long length of hemp rope', 'hanging up some freshly washed shirts', 'filling several leather flasks with oil from a large barrel with a tap', 'locking up a case that looks to be full of maps', 'placing a sign in the window for an upcoming sale', 'taking down signs from a previous sale', 'talking with a merchant about a new shipment', 'complaining to a merchant about a recent shipment they were brought', 'wrapping a thick branch in fatty cloths', 'sewing a hole up in an old looking backpack', 'helping a customer pick the right candle for them', 'stacking up boxes of goods behind the shop counter', 'ringing up another customer who seems to have purchased an odd assortment of goods', 'chatting with a local guard about protection', 'dealing with some shady looking characters', 'handing money over to a very imposing looking man', 'polishing an assortment of empty vials and jars on a shelf', 'arguing with a customer about prices', 'trying to convince a customer they need more rope if they want to buy a grappling hook', 'explaining to a customer all the different uses of a two person tent', 'signing off on a fresh delivery of goods'],
    rollData: {
      wealth: {
        description: 'How well is the business doing?',
        preceding: 'General Store Wealth:',
        rolls: [[95, 'kingly'], [80, 'aristocratic'], [70, 'wealthy'], [60, 'comfortable'], [50, 'modest'], [25, 'poor'], [15, 'squalid'], [0, 'destitute']]
      },
      size: {
        description: 'How large is it?',
        preceding: 'General Store Size:',
        rolls: [[95, 'cavernous'], [80, 'huge'], [70, 'quite large'], [60, 'large'], [50, 'spacious'], [40, 'average sized'], [30, 'somewhat cramped'], [20, 'small'], [10, 'tiny'], [0, 'extremely cramped']]
      },
      cleanliness: {
        description: 'How clean is the store?',
        preceding: 'General Store:',
        rolls: [[80, 'fastidious'], [70, 'very tidy'], [60, 'tidy'], [50, 'reasonably tidy'], [40, 'somewhat messy'], [30, 'rather messy'], [20, 'very messy'], [10, 'extremely messy'], [0, 'dangerously messy']]
      },
      expertise: {
        description: 'How well made are the goods it sells?',
        preceding: 'General Store:',
        isHidden: true,
        rolls: [[80, 'masterful'], [70, 'exceptional'], [60, 'superior quality'], [50, 'finely crafted'], [40, 'well crafted'], [30, 'sloppily made'], [20, 'somewhat amateur'], [10, 'amateur'], [0, 'blatantly amateur']]
      },
      reputation: {
        description: 'Is it well known, or is it a hobby shop?',
        preceding: 'General Store Reputation:',
        hasRolls: false
      },
      magic: {
        description: 'How likely is it to find magic here?',
        preceding: 'General Store Magic:',
        hasRolls: false
      },
      activity: {
        description: 'How busy is the store?',
        preceding: 'General Store Activity:',
        hasRolls: false
      },
      priceModifier: {
        description: 'How do the prices here compare to your average general store?',
        preceding: 'General Store Price Modifier:',
        hasRolls: false
      }
    },
    get: {
      customers: [{
        relationshipDescription: 'customer',
        relationships: {
          building: {
            relationship: 'customer',
            reciprocalRelationship: ''
          },
          associatedNPC: {
            relationship: 'shopkeep',
            reciprocalRelationship: 'customer'
          }
        },

        description(building, npc) {
          return `${npc.firstName} purchases ${random(['herbs', 'vegetables', 'staple foods', 'spices', 'utensils', ''])} from ${building.name} for cooking.`;
        }

      }, {
        relationshipDescription: 'former customer',
        relationships: {
          building: {
            relationship: 'former customer',
            reciprocalRelationship: 'boycotter'
          },
          associatedNPC: {
            relationship: 'target of boycott',
            reciprocalRelationship: 'boycotter'
          }
        },

        description(building, npc) {
          return `${npc.firstName} no longer buys anything from ${building.name} because ${random(['the prices were too high', 'of a perceived insult', 'the goods were cheaper elsewhere', `${npc.heshe} believes that ${building.associatedNPC.firstName} was rude.`, `${building.associatedNPC.firstName} was rude to ${npc.himher}`])}.`;
        }

      }, {
        relationshipDescription: 'client',
        relationships: {
          building: {
            relationship: 'client',
            reciprocalRelationship: 'supplier'
          },
          associatedNPC: {
            relationship: 'shopkeep',
            reciprocalRelationship: 'customer'
          }
        },
        base: {
          profession: 'merchant'
        },

        description(building, npc) {
          return `${npc.firstName} buys ${random(['food staples', 'tools', 'luxuries', 'fabrics', 'cleaning supplies'])} from ${building.name}.`;
        }

      }, {
        relationshipDescription: 'fish supplier',
        relationships: {
          building: {
            relationship: 'fish supplier',
            reciprocalRelationship: 'client'
          },
          associatedNPC: {
            relationship: 'supplier of fish',
            reciprocalRelationship: 'shopkeep'
          }
        },
        base: {
          profession: 'fisherman'
        },

        description(building, npc) {
          return `${npc.firstName} sells ${npc.hisher} fish to ${building.name}.`;
        }

      }, {
        relationshipDescription: 'produce supplier',
        relationships: {
          building: {
            relationship: 'produce supplier',
            reciprocalRelationship: 'client'
          },
          associatedNPC: {
            relationship: 'produce supplier',
            reciprocalRelationship: 'shopkeep'
          }
        },
        base: {
          profession: 'gardener'
        },

        description(building, npc) {
          return `${npc.firstName} sells ${npc.hisher} vegetables to ${building.name}.`;
        }

      }, {
        relationshipDescription: 'milk supplier',
        relationships: {
          building: {
            relationship: 'milk supplier',
            reciprocalRelationship: 'client'
          },
          associatedNPC: {
            relationship: 'shopkeep',
            reciprocalRelationship: 'supplier'
          }
        },
        base: {
          profession: 'dairymaid'
        },

        description(building, npc) {
          return `${npc.firstName} sells milk to ${building.name}.`;
        }

      }, {
        relationshipDescription: 'blacksmith',
        relationships: {
          building: {
            relationship: 'blacksmith',
            reciprocalRelationship: 'client'
          },
          associatedNPC: {
            relationship: 'shopkeep',
            reciprocalRelationship: 'supplier'
          }
        },
        base: {
          profession: 'blacksmith'
        },

        description(building, npc) {
          return `${npc.firstName} sells ${npc.hisher} wares to ${building.name}.`;
        }

      }],

      say(generalStore) {
        const goods = random(['crowbar', 'grappling hook', 'hammer', 'lantern', 'pickaxe', 'cooking pot', 'backpack', 'bedroll', 'book', 'glass bottle', 'bucket', 'candle', 'ink pen', 'fishing tackle', 'fishing bait', 'rope', 'traveling sack', 'shovel', 'waterskin', 'tent', 'hatchet', 'oil bottle']);
        return random([`asks what ${generalStore.associatedNPC.heshe} can do for you`, 'tells you everything you see just came in on a fresh shipment', `lets you know that all ${goods}s are 20% off`, `warns you that ${generalStore.associatedNPC.heshe} is down to ${generalStore.associatedNPC.hisher} last ${goods}`, 'says the whole store is currently 10% off', `tells you the store is closing soon because ${generalStore.associatedNPC.heshe} ${random(['wants to go home', 'has to start on a long journey', 'has to meet someone for a new shipment of goods', `has to go to take care of ${generalStore.associatedNPC.hisher} family`, 'is tired and bored for the day'])}`, 'asks what it is you need today', `apologizes for being totally out of ${goods}s today`, `says a fresh shipment of ${goods}s are coming in tomorrow morning`, `warns you that you may want to buy a medical kit as there has been a recent outbreak of flu in town according to ${generalStore.associatedNPC.himher}`, "apologizes for currently being low on all of the shop's stock", `says you look like you could really use a nice ${goods}`, `lets you know that the store is currently having a ${random(['buy two get one free', 'buy one get one free', 'buy one get one 50% off', 'buy one get one 25% off', 'buy two pay for three', 'two for one', 'three for one'])} deal`]);
      },

      shopkeepNote(generalStore) {
        const shopkeep = generalStore.associatedNPC;
        const shopkeepNote = ['does not seem to belong there, and looks very uncomfortable', 'is unusually friendly, and never seems to stop smiling', 'does not seem to want any business', `can tell a story behind everything ${shopkeep.heshe} sells`, `seems a little bit shady in ${generalStore.associatedNPC.hisher} dealings`, 'is a rather forceful salesman', `has a pungent and offensive smell about ${generalStore.associatedNPC.himher}`, `insists ${shopkeep.heshe} is from an ancient line of powerful merchants`, `dresses ${random(['much better than expected', 'like a filthy beggar', `like ${generalStore.associatedNPC.heshe} is true royalty`, 'in rather colorfgul garb'])}`, 'looks like a beggar, but speaks like a noble', 'is a very smooth salesperson and tries to talk you into several items', 'is a sly and quite shrewd merchant who seems to know just what you want', 'is clearly trying to get you to buy more than you need', 'seems very excited to have customers', 'seems annoyed to have customers in the shop', 'speaks to every customer in a very monotone voice', 'keeps eyeing the front entrance', 'seems to really enjoy running the shop', 'seems rather unhappy to be here', 'is very helpful and well informed about all the goods in the shop', 'is a rather useless salesperson who knows very little about the shop merchandise', 'looks extremely tired and anxious', "doesn't seem to be very capable in the sales department", 'is very passive and does not come to check if you need help', 'seems to follow you around the shop as you browse', 'eyes you warely as you move around the store', 'is acting strangely cold, and never seems to blink'];
        return `${shopkeep.firstName} ${random(shopkeepNote)}`;
      },

      note(generalStore) {
        const shopkeep = generalStore.associatedNPC;
        const colour1 = random(random([colours.yellow, colours.orange, colours.red, colours.purple, colours.blue, colours.green, colours.brown, colours.black, colours.white]).colour);
        const colour2 = random(random([colours.yellow, colours.orange, colours.red, colours.purple, colours.blue, colours.green, colours.brown, colours.black, colours.white]).colour);
        return random([// You notice __
        `it looks like ${shopkeep.firstName}, the shopkeep, lives in a room attached to the shop`, 'a bell rings every time someone enters the shop', 'some of the items on sale here are oddly magical (or non-magical)', 'once you enter that you feel an unseen presence watching you', ' there are magical barriers prevent people from handling the merchandise', 'a goblin is handling some of the wares', 'an ogre is leashed to one of the walls', 'a couple dogs keep an eye on you, while chewing on a bone', 'a cat follows you around the shop trying to brush up against your leg', 'a goat seems to be keeping guard outside the shop', 'a rats nest is forming in a secluded corner', 'a talking bird insists on yelling obscenities at you', 'many items are being packed for sale', 'a new shipment has just arrived, and is being stocked', 'noises from the roof or room above the shop', 'the floor is cracked and worn down', 'a shop assistant is cleaning up an item that was ruined on the shop floor', 'a shop assistant is arguing with an employee about something', 'a monkey that follows you and tries to hand you merchandise', 'there are footprints on the floor that lead directly into a wall', 'a raven tries to steal items from your bag while you look around', "the shopkeep's young children are trying unsuccessfully at a hard sale", "items on shelves change places when you're not looking", 'a calming music is playing throughout the shop', 'some of the items sold here appear to have been stolen', 'the shop is only open during the dark of the night', 'one of the customers is trying to shoplift while the shopkeep is helping someone else', 'the shop has a strong odor of mildew', 'a ghost is browsing the merchandise on one of the back shelves', 'a legendary weapon is on display, but not for sale', `colorful murals of ${random(['plants', 'flowers', 'animals', 'stars', 'trees', 'mountains', 'the sky', 'birds', 'beetles', 'the ocean', 'deserts', 'geometric shapes', 'organic shapes'])} line the walls`, 'constables of the local guard, $town.guard.name are interviewing everyone in the shop', 'several small cages with pure white rats are sitting on a table near the front door', 'a strange green goop is leaking from one wall', 'a large collection of cobwebs have formed in every corner of the shop', 'a pair of eyes float above the counter, slowly looking from one side of the shop to the other over and over', 'a low growl is emitting from beneath a large trapdoor in the floor', `the front window of the shop has ${random(['plants', 'flowers', 'animals', 'stars', 'trees', 'mountains', 'the sky', 'birds', 'beetles', 'the ocean', 'deserts', 'geometric shapes', 'organic shapes'])} painted on it`, 'the store is lit by jars full of glowing bugs hanging from the ceiling', 'there is a small rack on the shop counter that is stocked with a biography of the shop owner', 'a small fireplace in the corner of the shop is blazing warmly', `the head of ${random(['a lion', 'a rhino', 'an eagle', 'an ostritch', 'a gopher', 'a boar', 'a cougar', 'a bear', 'a vulture', 'a python', 'a beaver', 'a moose', 'a deer', 'a swordfish', 'an elk', 'an owl', 'a troll', 'a goblin', 'a wolf', 'a coyote', 'a camel'])} is mounted on the wall on a ${random(['crude', 'fine', 'nice', 'fancy', 'clunky', 'cracked', 'dusty', 'poor'])} looking plaque`, 'there is a small shelf filled with different colored lumpy candles labeled "Homemade Candles" ', 'a large oil painting of the shop owner hangs from the wall', 'all of the windows in the shop are covered by thick furs making the room rather dark', 'the windows are all blacked out and the room is lit by glowing mushrooms', `a large group of ${random(['owls', 'hawks', 'vultures', 'parakeets', 'crows', 'ravens', 'canaries', 'finches', 'parrots', 'bluejays', 'kingfishers', 'kookaburras', 'pigeons', 'doves', 'swallows', 'sparrows'])} are roosting in the rafters of the shop`, `several large pots full of ${random(flora.flower.stemP)} are placed around the shop`, 'the shelves of this shop are looking a little bare', 'a large glass orb sitting on a plush pillow is on a wide table in the middle of the shop', 'the shop counter is embedded with coins from all different regions', `there's a row of leatherbound books about ${random(['monsters', 'beasts', 'jewels', 'gems', 'art', 'painting', 'hunting', 'tracking', 'dungeoneering', 'arcane arts', 'blacksmithing', 'poisons', 'plants', 'farming', 'martial arts', 'ancient swords', 'ancient relics', 'magical items', 'cartography', 'sailing', 'insects', 'birds', 'religions', 'regional history', 'poetry'])}filling a nearby shelf`, `a taxidermied ${random(['lion', 'rhino', 'eagle', 'ostritch', 'gopher', 'boar', 'cougar', 'bear', 'vulture', 'python', 'beaver', 'moose', 'deer', 'swordfish', 'elk', 'owl', 'troll', 'goblin', 'wolf', 'coyote', 'camel', 'cat', 'dog', 'duck', 'pig'])} is standing in one corner of the shop`, `all of the walls are painted ${articles.output(colour1)} colour${random(['', '', '', ` with ${colour2} coloured accents`, `, and the ceiling is ${colour2} coloured`, `, and the floors have been painted a ${colour2} color`])}`, `the shop counter is painted a nice ${colour1} colour`, 'a small silver bell sits on the shop counter in case the shop keeper is not around', `the shop is lit from above by a large glowing orb emitting a ${random(['dim', 'strong', 'low', 'pulsing', 'flickering'])} ${colour1} coloured light`]);
      },

      priceTalk(generalStore) {
        return [{
          priceModifier: 5,
          wealth: 80,
          priceTalk: 'Be warned, these prices might be... out of your range'
        }, {
          priceModifier: 5,
          wealth: 50,
          priceTalk: "Fair warning; the prices ain't what they used to be, by a long shot."
        }, {
          priceModifier: 5,
          wealth: 20,
          priceTalk: "I'm afraid that times are tough, there's a bit of a surcharge on the fun stuff."
        }, {
          priceModifier: 2,
          wealth: 80,
          priceTalk: 'Fair warning, premium products come with a premium price.'
        }, {
          priceModifier: 2,
          wealth: 50,
          priceTalk: "Fair warning; the prices ain't what they used to be."
        }, {
          priceModifier: 2,
          wealth: 20,
          priceTalk: "Things might be a wee bit more expensive than you're used to, but that's the cost of doing business at the moment."
        }, {
          priceModifier: -2,
          wealth: 80,
          priceTalk: 'These are priced to move, so I can make some space and get some new stock in.'
        }, {
          priceModifier: -2,
          wealth: 50,
          priceTalk: 'Priced to move!'
        }, {
          priceModifier: -2,
          wealth: 20,
          priceTalk: 'Priced to sell, so I can afford some new stock!'
        }, {
          priceModifier: -4,
          wealth: 80,
          priceTalk: "Everything must go! I'm getting in entirely new, custom stock in a couple day's time, and need the space clear."
        }, {
          priceModifier: -4,
          wealth: 50,
          priceTalk: "I've got a massive sale going on at the moment!"
        }, {
          priceModifier: -4,
          wealth: 20,
          priceTalk: `Everything must go- can't afford to keep ${generalStore.name} open much longer, so I'm getting rid of the final stock.`
        }];
      }

    }
  };

  function generalStoreModifiers(town, generalStore) {
    if (town.roll.wealth > 95) {
      generalStore.roll.wealth += 5;
    } else if (town.roll.wealth > 80) {
      generalStore.roll.wealth += 3;
    } else if (town.roll.wealth > 70) {
      generalStore.roll.wealth += 2;
    } else if (town.roll.wealth > 60) {
      generalStore.roll.wealth += 1;
      generalStore.roll.activity += 1;
    } else if (town.roll.wealth > 50) {
      generalStore.roll.wealth += 1;
      generalStore.roll.activity += 3;
    } else if (town.roll.wealth > 40) {
      generalStore.roll.wealth -= 1;
      generalStore.roll.activity += 2;
    } else if (town.roll.wealth > 30) {
      generalStore.roll.wealth -= 2;
    } else if (town.roll.wealth > 20) {
      generalStore.roll.wealth -= 3;
      generalStore.roll.sin += 1;
    } else if (town.roll.wealth <= 20) {
      generalStore.roll.wealth -= 5;
      generalStore.roll.sin += 3;
      generalStore.roll.activity -= 3;
    }

    if (generalStore.roll.wealth > 95) {
      generalStore.priceModifier += 4;
      generalStore.roll.size += 3;
      generalStore.roll.cleanliness += 15;
      generalStore.roll.reputation += 10;
    } else if (generalStore.roll.wealth > 80) {
      generalStore.priceModifier += 3;
      generalStore.roll.cleanliness += 10;
    } else if (generalStore.roll.wealth > 70) {
      generalStore.priceModifier += 2;
      generalStore.roll.cleanliness += 6;
    } else if (generalStore.roll.wealth > 60) {
      generalStore.priceModifier += 1;
      generalStore.roll.activity += 5;
      generalStore.roll.cleanliness += 4;
    } else if (generalStore.roll.wealth > 50) {
      generalStore.roll.activity += 5;
      generalStore.roll.reputation -= 5;
      generalStore.roll.cleanliness += 2;
    } else if (generalStore.roll.wealth > 30) {
      generalStore.priceModifier -= 1;
      generalStore.roll.reputation -= 7;
      generalStore.roll.cleanliness -= 15;
    } else if (generalStore.roll.wealth <= 30) {
      generalStore.priceModifier -= 2;
      generalStore.roll.reputation -= 10;
      generalStore.roll.cleanliness -= 25;
    }

    if (generalStore.roll.cleanliness > 80) {
      generalStore.roll.wealth += 3;
      generalStore.roll.reputation += 3;
    } else if (generalStore.roll.cleanliness > 70) {
      generalStore.roll.wealth += 2;
      generalStore.roll.reputation += 3;
    } else if (generalStore.roll.cleanliness > 60) {
      generalStore.roll.wealth += 1;
      generalStore.roll.reputation += 2;
    } else if (generalStore.roll.cleanliness > 50) {
      generalStore.roll.reputation += 2;
    } else if (generalStore.roll.cleanliness > 40) {
      generalStore.roll.reputation += 1;
    } else if (generalStore.roll.cleanliness > 30) {
      generalStore.roll.activity -= 1;
      generalStore.roll.sin += 1;
      generalStore.roll.wealth -= 2;
    } else if (generalStore.roll.cleanliness > 20) {
      generalStore.roll.activity -= 2;
      generalStore.roll.sin += 3;
      generalStore.roll.wealth -= 4;
    } else if (generalStore.roll.cleanliness <= 20) {
      generalStore.roll.activity -= 3;
      generalStore.roll.sin += 5;
      generalStore.roll.wealth -= 8;
    }
  }

  function generalStoreRenders(generalStore) {
    // update warmth based on store size
    let warmthRoll = random(1, 100);
    const size = generalStore.roll.size;

    if (size > 80) {
      generalStore.size = 'huge';
      warmthRoll -= 20;
    } else if (size > 70) {
      generalStore.size = 'quite large';
      warmthRoll -= 15;
    } else if (size > 60) {
      generalStore.size = 'large';
      warmthRoll -= 10;
    } else if (size > 50) {
      generalStore.size = 'spacious';
      warmthRoll -= 5;
    } else if (size > 40) {
      generalStore.size = 'medium';
    } else if (size > 30) {
      generalStore.size = 'slightly cramped';
      warmthRoll += 15;
    } else if (size > 20) {
      generalStore.size = 'small';
      warmthRoll += 15;
    } else if (size <= 20) {
      generalStore.size = 'tiny';
      warmthRoll += 30;
    } // set warmth roll


    generalStore.roll.warmth = warmthRoll; // actually add attributes to store object

    for (const key of keys(attributes)) {
      const array = attributes[key].slice().reverse(); // default value

      generalStore[key] = array[0][1]; // update value

      for (const [threshold, description] of array) {
        if (generalStore.roll[key] > threshold) {
          generalStore[key] = description;
        }
      }
    }
  }
  const attributes = {
    warmth: [[80, 'swelteringly hot'], [70, 'extremely warm'], [60, 'uncomfortably warm'], [50, 'nice and toasty'], [40, 'quite warm'], [30, 'warm'], [20, 'mild'], [0, 'cold']],
    cleanliness: [[80, 'fastidious'], [70, 'very tidy'], [60, 'tidy'], [50, 'reasonably tidy'], [40, 'somewhat messy'], [30, 'rather messy'], [20, 'very messy'], [0, 'filthy']],
    expertise: [[80, 'masterful'], [70, 'exceptional'], [60, 'superior quality'], [50, 'finely-crafted'], [40, 'well-crafted'], [30, 'somewhat well made'], [20, 'somewhat amateur'], [20, 'blatantly amateur']],
    activity: [[80, 'extremely busy'], [70, 'very busy'], [60, 'rather busy'], [50, 'reasonably busy'], [40, 'not terribly busy'], [30, 'not busy'], [20, 'rather quiet'], [0, 'very quiet']]
  };

  const backgroundTraits = {
    'acolyte': {
      extraLanguages: 2,
      backgroundOrigin: ['I ran away from home at a young age, and found refuge in a temple.', 'My family gave me to a temple, since they were unable to care for me.', 'I grew up in a household with strong religious convictions. Entering the service of the Gods seemed to be the natural progression.', 'An impassioned sermon struck a chord deep in me, and compelled me to serve the faith.', 'I followed a childhood friend into religious service because we made a pact to never be apart.', 'I followed a lover into religious service, but tragically, they were killed. The faith was the only thing that stopped me from ending my own life.'],
      ideal: ['I believe that the ancient traditions of worship and sacrifice must be preserved and upheld.', 'I always try to help those in need, no matter what the personal cost.', 'We must help bring about the changes the gods are constantly working in the world.', "I hope to one day rise to the top of my faith's religious hierarchy.", 'I trust that my deity will guide my actions, I have faith that if I work hard, things will go well.', "I seek to prove myself worthy of my god's favor by matching my actions against their teachings."],
      personalityTrait: ['I idolize a particular hero of my faith, and constantly refer to that person’s deeds and example.', 'I can find common ground between the fiercest of enemies, and can work towards peace no matter what the conditions.', 'I see omens in every event and action. The gods try to speak to us, we just need to listen!', 'Nothing can shake my optimistic attitude.', 'I quote (or misquote) sacred texts and proverbs in almost every situation.', 'I am tolerant (or intolerant) of other faiths and respect (or condemn) the worship of other gods.', "I've enjoyed fine food, drink, and high society among my temple’s elite. Rough living grates on me.", 'I’ve spent so long in the temple that I have little practical experience dealing with people in the outside world.'],
      bond: ['I would die to recover an ancient artifact of my faith that was lost long ago.', 'I will someday get revenge on the corrupt temple hierarchy who branded me a heretic.', 'I owe me life to the priest who took me in when my parents died.', 'Everything I do is for the common people.', 'I will do anything to protect the temple where I served.', 'I seek to preserve a sacred text that my enemies consider heretical and seek to destroy.'],
      flaw: ['I judge others harshly, and myself even more severely.', 'I put too much trust in those who wield power within my temple’s hierarchy.', 'My piety sometimes leads me to blindly trust those that profess faith in my god.', 'I am inflexible in my thinking.', 'I am suspicious of strangers and expect the worst of them.', 'Once I pick a goal, I become obsessed with it to the detriment of everything else in my life.'],
      wealth: 1500
    },
    'charlatan': {
      backgroundOrigin: ['As a youngster, I was left to my own devices. My knack for manipulating people helped me survive.', 'I learned early on that people are easy to exploit, and are gullible and too trusting.', 'I often got into trouble as a youngster, but talked my way out of it.', 'I took up cheating as a hobby, then was sort of adopted by a local scam artist. It just sort of became a way of life for me.', 'After a charlatan fleeced my family, I decided to learn all the tricks I could so I would never fall for another scam.'],
      ideal: ['I am a free spirit– no one tells me what to do.', "I never target people who can't afford to lose a few coins.", 'I distribute the money I acquire to the people who really need it.', 'I never run the same con twice.', 'I believe that Material goods come and go. Bonds of friendship last forever.', "I'm determined to make something of myself."],
      personalityTrait: ['I fall in and out of love easily, and am always pursuing someone.', 'I have ajoke for every occasion, especially occasions where humor is inappropriate.', 'Flattery is my preferred trick for getting what I want.', "I’m a born gambler who can't resist taking a risk for a potential payoff.", 'I lie about almost everything, even when there’s no good reason to.', 'Sarcasm and insults are my weapons of choice.', 'I keep multiple holy symbols on me and invoke whatever deity might come in useful at any given moment.', 'I pocket anything I see that might have some value.'],
      bond: ['I fleeced the wrong person, a lord called <<print lib.raceTraits["human"].genderTraits["man"].firstName.random()>>, and must work to ensure that he never crosses paths with me or those I care about.', "I owe everything to my mentor <<print lib.raceTraits['human'].genderTraits['man'].firstName.random()>>--a horrible person who's probably rotting in jail somewhere.", "Somewhere out there I have a child, litte <<print lib.raceTraits['human'].genderTraits['man'].firstName.random()>>, who doesn't know me. I'm going to try and make the world better for him.", "I come from a noble family, and one day I'll reclaim my lands and title from those who stole them from me.", "A powerful person, Lord <<print lib.raceTraits['human'].genderTraits['man'].firstName.random()>>, killed someone I love. Some day soon, I'll have my revenge.", "I swindled and ruined a person who didn't deserve it, and now I seek to atone for my misdeeds but might never be able to forgive myself."],
      flaw: ['I can never resist an easy mark.', 'I find it difficult to admit that I am not above the law and always have an excuse for my actions.', 'I always am on the lookout, and never feel truly at ease.', 'I don\'t trust anybody that hasn\'t proven to be otherwise.', 'I tend to break off relationships before anything develops so I am not bogged down.'],
      wealth: 1500
    },
    'criminal': {
      backgroundOrigin: ['I resented authority in my younger days, and I saw a life of crime as a way to get back at those that I thought had wronged me.', 'I resented authority as a youngster, and saw a life of crime as the best way to fight back against tyranny and oppression.', 'I fell in with a gang of reprobates and ne’er-do- wells, and I learned my specialty from them.', 'A relative taught me the trade to prepare me for the family trade.', "I left home at a relatively young age, and found refuge in a thieves' guild.", 'I was always bored, so I started committing minor crimes to pass the time. The adrenaline rush was addictive, and soon I was going on to bigger and better heists.'],
      ideal: ["I believe in honour amongst thieves- I don't steal from others in the trade.", 'I am definitely a fan of freedom- Chains are meant to be broken', 'I steal from the wealthy so that I can help people in need.', 'I will do whatever it takes to become wealthy.', "I'm loyal to my friends", "I believe that there's a spark of good in everyone."],
      personalityTrait: [],
      bond: ["I'm trying to pay off an old debt I owe to a generous benefactor.", 'My ill-gotten gains go to support my family.', 'Something important was taken from me, and I aim to steal it back.', 'I will become the greatest thief that ever lived.', "I'm guilty of a terrible crime. I hope I can redeem myself for it.", 'Someone I loved died because of a mistake I made. That will never happen again.'],
      wealth: 1500
    },
    'entertainer': {
      backgroundOrigin: ['Members of my family made ends meet by performing, so it was fitting for me to follow their example', 'I always had a keen insight into what made other people laugh and cry. A life as an entertainer seemed to be the natural continuation of that.', 'I saw a bard perform once, and it inspired me so much that I decided to follow in his footsteps.', 'I ran away from home to join a minstrel troupe.', 'I earned extra coin by performing on the streets as a child, and I never seemed to stop.', 'A traveling entertainer took me in to teach me the trade, and I learned to love it.'],
      ideal: ['When I perform, I want to make beautiful things for the pleasure of my audience', 'The stories I tell have a lot of history which I wish to preserve.', 'The world is in need of new ideas and bold action.', "I'm only in it for the money and fame.", "I like seeing the smiles on people's faces when I perform. That's all that matters.", 'Art should reflect the soul; it should come from within and reveal who we really are.'],
      personalityTrait: [],
      bond: ['My instrument is my most treasured possession, and it reminds me of someone I love.', "Someone stole my precious instrument, and someday I'll get it back.", 'I want to be famous, whatever it takes.', "I idolize a hero of the old tales and measure my deeds against that person's.", 'I will do anything to prove myself superior to my hated rival.', 'I would do anything for the other members of my old party.'],
      wealth: 1500
    },
    'folk hero': {
      backgroundOrigin: ['I learned what was right and wrong from my family.', 'I was always enamored by tales of heroes and wished I could be something more than ordinary.', 'I hated my mundane life, so when it was time for someone to step up and do the right thing, I took my chance.', 'One of my relatives was an adventurer, and l was inspired by that person’s courage.', 'A mad old hermit spoke a prophecy when l was born, saying that I would accomplish great things.', 'I have always stood up for those who are weaker than me.'],
      ideal: ['I have the radical belief that people deserve to be treated with dignity and respect.', 'I believe that no one should get preferential treatment before the law', 'Tyrants must not be allowed to oppress the people.', 'If I become strong, I will be better able to protect people.', "There's no good in pretending to be something I'm not.", 'Nothing and no one can steer me away from my higher calling.'],
      personalityTrait: [],
      bond: ['I have a family, but I have no idea where they are. One day, I hope to see them again.', 'I worked the land, I love the land, and I will protect the land.', 'A proud noble once gave me a horrible beating, and I will take my revenge on any bully I encounter.', 'My tools are symbols of my past life, and I carry them so that I will never forget my roots.', 'I protect those who cannot protect themselves.', 'I wish my childhood sweetheart had come with me to pursue my destiny.'],
      wealth: 1000
    },
    'gladiator': {
      backgroundOrigin: ['I found myself in a fight, and the drunkards around me started to bet on whether I would win. I found that strangely exhilarating, and continued to fight, seeking that thrill.', 'I was a slave, and was forced to fight for my supper and eventual freedom. By the time I got out, there was nothing else I knew.', 'I entered a fight as a drunken bet, and somehow managed to win. The money was too good for me to quit.', 'I was constantly getting into fights as a youngster. I figured I might as well continue, for money.'],
      ideal: ['If I become strong, I will be better able to protect people.', 'I want to become the hero I pretend to be.', 'I want people to tremble at the sound of my name.', 'I want to inspire others.', 'I am in it for the money.', 'I honestly love to see others in pain.'],
      personalityTrait: [],
      bond: ['My weapon has seen me through many a battle, and it means everything to me.', 'The costume that I wear when fighting is part of me and my being.', 'I have seen countless friends die around me, many at my own hands, so I find it difficult to make new ones.', 'I am loyal to my friends as long as I respect them.', 'I feel like I am still a part of my old arena team.', 'Sometimes, I feel like I cannot leave who I was in the arena.'],
      wealth: 1500
    },
    'guild artisan': {
      backgroundOrigin: ['I was apprenticed to a master who taught me the guild’s business.', 'I helped a guild artisan keep a secret, and in return, I was taken on as an apprentice.', 'One of my relatives who belonged to the guild made a place for me.', 'I was always good with my hands, so I figured that I would make something of it.', 'I wanted to get away from my home situation and start a new life, so I learned a trade in secret and ran away one night.', 'I learned the essentials from an old mentor, but I had to join a guild to finish my learning once he passed away.'],
      ideal: ['I believe it is the duty of all civilized people to strengthen the bonds of community and the security of civilization.', 'My talents were given to me so that I could use them to benefit the world.', 'Everyone should be free to pursue their own livelihood.', "I'm only in it for the money.", "I'm committed to the people I care about", 'I work hard to be the best there is at my craft.'],
      personalityTrait: [],
      bond: ['The workshop where I learned my trade is the most important place in the world to me.', "I created a great work for someone, and then found them unworthy to receive it; I'm still looking for someone worthy.", 'I owe my guild a great debt for forging me into the person I am today.', "I pursue wealth to secure someone's love.", 'One day I will return to my guild and prove that I am the greatest artisan of them all.', 'I will get revenge on the evil forces that destroyed my place of business and ruined my livelihood.'],
      wealth: 1500
    },
    'hermit': {
      backgroundOrigin: ['My enemy ruined my reputation, and I had to flee to a life of solitude to escape further disparagement.', 'I am comfortable with isolation, as I seek inner peace.', 'I find myself in love with nature, and prefer the company of the animals and plants to that of people.', 'I never liked the people that I grew up with, so it was easy for me to leave it all behind and strike out a new life, alone.', 'I felt compelled to forsake my past, and did so with great reluctane. Even now, I sometimes regret my decisions.'],
      ideal: ['My gifts are meant to be shared with all', 'I believe that motions must not cloud our sense of what is right and true', 'I believe that inquiry and curiosity are the pillars of progress.', 'I think that solitude and contemplation are paths toward mystical or magical power.', 'I believe that meddling in the affairs of others only causes trouble.', 'If you know yourself, you know your enemy.'],
      personalityTrait: [],
      bond: ['Nothing is more important than the other members of my hermitage, order, or association.', 'I entered seclusion to hide from the ones who might still be hunting me. I must someday confront them.', "I'm still seeking the enlightenment I pursued in my seclusion, and it still eludes me.", 'I entered seclusion because I loved someone I could not have.', 'Should my discovery come to light, it could bring ruin to the world.', 'My isolation gave me great insight into a great evil that only I can destroy.'],
      wealth: 500
    },
    'noble': {
      extraLanguages: 2,
      backgroundOrigin: ['My family has been disgraced, and I intend to restore our once pristine reputation.', 'I come from an old and storied family, and it fell to me to preserve the family name.', 'My family recently came by its title, and that elevation thrust us into a new and strange world.', 'My family has a title, but none of my ancestors have done anything of note.', 'My family is filled with remarkable people. I hope to live up to their reputation.', "I hope to increase my family's power and influence."],
      ideal: ['Respect is due to me because of my position', 'It is my duty to respect the authority of those above me', 'I must prove that I can handle myself without the coddling of my family.', 'If I can attain more power, I will be able to protect my family', 'I believe that blood runs thicker than water.', 'It is my duty to protect and care for the people beneath me.'],
      personalityTrait: [],
      bond: ['I will face any challenge to win the approval of my family.', "My house's alliance with another noble family must be sustained at all costs.", 'Nothing is more important that the other members of my family.', 'I am in love with the heir of a family that my family despises.', 'My loyalty to my sovereign is unwavering.', 'The common folk must see me as a hero of the people.'],
      wealth: 2500
    },
    'outlander': {
      backgroundOrigin: ['I spent a lot of time in the wilderness as a youngster, and I came to love that way of life.', "From a young age, I couldn't abide the stink of cities, and sought out the wilderness for respite from the chaos of people.", 'I came to understand the darkness that lurks in the wilds, and l vowed to combat it.', 'My people live on the edges of civilisation, and I learned the methods of survival from my family.', 'After a personal tragedy, I retreated to the wilderness to be alone with my thoughts.', 'My family moved away from civilisation, and I learnt to adapt with the harsh environment.'],
      ideal: ['I think that life is like the seasons, change should be embraced!', "It is each person's responsibility to make the most happiness for the whole tribe.", 'If I dishonor myself, I bring dishonor to my whole tribe', 'I believe that the strongest are meant to rule.', 'The natural world is more important than all the constructs of civilization.', 'I must earn glory in battle.'],
      personalityTrait: [],
      bond: ['My family, clan, or tribe is the most important thing in my life, even when they are far from me.', 'An injury to the unspoiled wilderness of my home is an injury to me.', 'I will bring terrible wrath down on the evildoers who destroyed my homeland.', 'I am the last of my tribe, and it is up to me to ensure their names enter legend.', 'I suffer awful visions of a coming disaster and will do anything to prevent it.', 'It is my duty to provide children to sustain my tribe.'],
      wealth: 1000
    },
    'sage': {
      extraLanguages: 2,
      backgroundOrigin: ['I was naturally curious, so I packed up and went to a university to learn more about the world.', 'My mentor’s teachings opened my mind to new possibilities in that field of study.', 'I was always an avid reader, and became a sage to learn more from the thousands of books that I tended to.', 'I discovered an old library and pored over the texts I found there. That experience awakened a hunger in me for knowledge that I still seek.', 'I impressed a traveling wizard, who told me that I was squandering my talents and that I should seek out an education to take advantage of my gifts.', 'My father gave me a basic education which whetted my appetite for more knowledge, and I left home to build on what I knew.'],
      ideal: ['I believe that the path to power and self-improvement is through knowledge.', 'What is beautiful points us beyond itself toward what is true.', 'I believe that emotions must not cloud our logical thinking.', 'I believe that nothing should fetter the infinite possibility inherent in all existence.', 'Knowledge is, in my opinion, the path to power and domination.', 'I think that the goal of a life of study is the betterment of oneself.'],
      personalityTrait: [],
      bond: ['It is my duty to protect my students.', 'I have an ancient text that holds terrible secrets that must not fall into the wrong hands.', 'I work to preserve a library, university, scriptorium, or monastery.', "My life's work is a series of tomes related to a specific field of lore.", "I've been searching my whole life for the answer to a certain question.", 'I sold my soul for knowledge; I hope to do great deeds and win it back.'],
      wealth: 1000
    },
    'sailor': {
      backgroundOrigin: ['I was press-ganged by pirates and forced to serve as a deck-hand on their ship until I could escape from their clutches.', 'I wanted to see the world, so I signed on as a deck- hand for a merchant ship.', 'One of my relatives was a sailor, and took me to sea when I was young, which inspired a life-long love of the oceans and the water.', 'I needed to escape from town quickly, so I stowed away on a ship. They found me out, and force me to work as a deck-hand as payment for my passage.', 'Reavers attacked my village, and I found refuge in a ship.', 'There were few prospects where I was living, so I hopped on board a boat, to seek my fortunes elsewhere.'],
      ideal: ['I believe that the thing that keeps a ship together is mutual respect between captain and crew.', 'We all do the work. That is how the work gets done.', 'To me, the sea is freedom– the freedom to go anywhere and do anything.', "I'm a predator, and I'm not going to apologise for it. Those that cannot survive on the seas should not live.", "I'm committed to my crewmates.", "Someday I'll own my own ship and chart my own destiny."],
      personalityTrait: [],
      bond: ["I'm loyal to my captain first, everything else second.", 'The ship is most important--crewmates and captains come and go.', "I'll always remember my first ship.", 'In a harbor town, I have a paramour whose eyes nearly stole me from the sea.', 'I was cheated of my fair share of the profits, and I want to get my due.', 'Ruthless pirates murdered my captain and crewmates, plundered our ship, and left me to die. Vengeance will be mine.'],
      wealth: 1500
    },
    'soldier': {
      backgroundOrigin: ["I wanted fame and fortune, so I signed up to the militia to prove my mettle. I don't think I knew what I was doing, but my determination carried me through my contract, and I never stopped.", 'I wanted to protect my village from monsters, so I learnt swordcraft and how to fight. Then I learnt that you could earn coin for it, too.', 'I was forced to enlist in the local militia to fight for my lord. Many of my friends are dead because of him.', 'Invaders attacked my village, and I vowed to never let my family be unprotected again, so I picked up the sword.', "I was always playing with a sword as a kid, and it wasn't until a visiting adventurer sparred with me for fun that I realised that I had a real talent."],
      ideal: ['Our lot is to lay down our lives in defense of others.', 'I do what I must and obey just authority.', 'When people follow orders blindly, people die.', 'In life, as in war. That is my motto, that I will live and die by.', "To me, ideals aren't worth killing over or going to war for."],
      personalityTrait: [],
      bond: ['I would lay down my life for the people I served with.', 'Someone saved my life on the battlefield. To this day, I will never leave a friend behind.', 'My honor is my life.', "I'll never forget the crushing defeat my company suffered or the enemies who dealt it.", 'Those who fight beside me are those worth dying for.', 'I fight for those who cannot fight for themselves.'],
      wealth: 1000
    },
    'urchin': {
      backgroundOrigin: ['My parents died, leaving nobody to look after me, so I took care of myself.', 'I had to escape my homelife. I lived off crumbs and scraps, but it was better than the alternative.', 'Raiders attacked my village when I was a child, leaving me the only survivor. I had to walk for three days to the next town over, and begged to survive.', 'My family was swindled, and we lost everything we had. I had to beg on the streets to look after my family.', 'A thief took me in, and in exchange for food and shelter, I would keep an eye on the streets while he pulled off heists.'],
      ideal: ['All people deserve respect.', 'We have to take care of each other to survive.', 'The low are lifted up, and we all benefit from that.', 'The rich need to be shown what life and death are like in the gutters.', "I help the people who help me– that's what keeps us alive.", "I'm going to prove that I'm worthy of a better life."],
      personalityTrait: [],
      bond: ["My town is my home, and I'll fight to defend it.", 'I sponsor an orphanage to keep others from enduring what I was forced to endure.', 'I owe my survival to another urchin who taught me to live on the streets.', 'I owe a debt I can never repay to the person who took pity on me.', "I escaped my life of poverty by robbing an important person, and I'm wanted for it.", "No one else is going to have to endure the hardships I've been through."],
      wealth: 1500
    },
    'commoner': {
      // '': function (npc) { return npc },
      backgroundOrigin: ["I was born into poverty. I've slowly worked my way to where I am today.", 'I had a bad string of bets which left me with no other choice than to skip town.', "I was born into a lowly family, and that's where I'll likely stay.", 'I was a soldier in the army, with a lot of potential. But then, I made a tactical mistake, which led to my dismissal.', 'I was found guilty of a crime that I did not commit, and was sentenced to serfdom.', 'I grew up in a loving household, but all the love in the world could not pay the debts which we had.', 'I was one of many children, and when I was old enough to work, my parents put me to it.', 'I was one of many children, and had to work from a young age to support my family.', 'I was the eldest child. When my father died, I had to leave school and work to support my family.'],
      ideal: ['Everyone needs to pitch in for the greater good.', 'You have to respect all people', 'We have to take care of each other', 'The low are lifted up', 'The rich need to be shown what life and death are like in the gutters.', "I help the people who help me– that's what keeps us alive.", "I'm going to prove that I'm worthy of a better life."],
      personalityTrait: [],
      bond: ['I am trying to pay off a debt that I inherited from my father.', 'I was swindled out of a large inheritance, and had to go into hiding to keep my family safe.', 'I was a nobleman once, but made the wrong man an enemy.', 'I had to sell a magical heirloom to pay off a debt. Now I want to buy it back.', "When wandering through a forest, I found a portal to another realm. When I took others to it, it had disappeared. One day I'll find it again.", "I followed my beloved here, and we made a life together, until raiders took them in the night. One day, I'll have my revenge.", "A witch-doctor had claimed to be able to cure my baby. The bastard had lied, and he died at just six weeks. I'll find him one day, and make him wish he had never been born.", 'I live for the sea; nothing gives me more pleasure than fishing off my boat.', 'My home was a simple one, but it had a certain charm about it. An arsonist burnt it down, and I intend to catch them.', 'The lord that took my daughter as a guarantee for my debt never intended to return her. I intend to make him.', 'I love the quiet life. Nothing disturbs me more than a disturbance of the peace.', 'My friends are my world. If my life consists of working for five days, then going to the tavern with my buddies, I will be content.', 'I know my lot in life; feudalism dictates that one should serve the other. I disagree, and will fight to my dying breath to change the system.', "I can't change the past, but I can change my future. I'll work harder and better to provide a better life for my children.", 'My father was a drunkard, a gambler, and an abusive man. I will break the cycle.', 'I want to perfect my craft. Nothing gives me more satisfaction than someone praising my work.', "When my mother died, I found a list of men in her possessions. One of them is my father. I'll find him.", "When I was young, my parents died, and the church took me in. I'll spread the good word, and the work that they do.", 'My father taught me how to read. All I want to do in life is to further my knowledge on how the world works.', 'I never learnt how to read. One day, I will be able to tell my son what the words on parchment mean.', "I have a tendency to gamble away my earnings. This is the third town I've moved to to escape debtors.", "My livelihood depended on a horse, which an adventurer took off with. I'll make him pay.", "I used to fear anyone who didn't look like me until some adventurers from distant lands saved my life. Now I want to see the whole world and the planes beyond.", "My lord raised the taxes to absurd levels so he could conscript people as punishment. I broke into my lord's manor one night, took a string of pearls, and sold it. I'll never forget that thrill.", "I have a knack for magic but my parents couldn't afford a tutor. I want to become the mage I knew I could be.", 'I am the fifth child and will not inherit anything. I need to find somewhere I can settle down.', 'I was a farmer, got conscripted, went off to war, and came back broken. I want my grandchildren to have peaceful lives.', "I got really drunk, fell asleep in a box that got loaded on a boat, and wound up in a big city I've never heard of. My village is so small and secluded I don't even know what country it's in! How do I get home?", 'I was the cook for a band of thieves who lived in a forest and stole from the rich to give to the poor. They all got arrested. I need another job I guess.', "I was an ordinary maid in a vampire's castle. Some adventurers staked my former boss. I have to readjust to living with the living.", 'I was the village priest but lost my church when a charismatic preacher moved in and converted all my worshipers. I need a sign from heaven to restore my faith.', 'I love haggling, meeting new folks, and helping people find what they need. My dream is to build the finest tavern and shop.', 'I was petrified 1000 years ago by a medusa while foraging for mushrooms. A wizard found and cured me but left without explaining anything. I must readjust and relearn everything!'],
      wealth: 500
    },
    'knight': {
      backgroundOrigin: [' '],
      ideal: ['<b>Integrity</b>. My morals and principles are the upmost things I respect.', "<b>Obedience</b>. I have sworn to carry out my liege's will, and I will do so, no matter what it is.", '<b>Chivalry</b>. I have a strict code of social mores that I strive to uphold and through them I strive to be a paragon of knighthood.', "<b>Courtesy</b>. There is always a proper way to behave, no matter the social situation. As a symbol of my liege's power, it is important to also demonstrate courtly manners.", '<b>Power</b>. I respect power and strive for more. I have greater ambitions than being sworn to a liege.', '<b>Friendship</b>. I serve people best when I know them well and can sympathize with their struggles. I keep up strong personal connections with the towns in my region.', '<b>Courage</b>. I have trained all my life to face horrors most would struggle to look in the eye.', '<b>Piety</b>. I serve a power greater than any earthly lord. I fight for the glory of my deity.'],
      personalityTrait: [' '],
      bond: [' '],
      wealth: 1000
    },
    'peasant': {
      backgroundOrigin: [' '],
      ideal: ['<b>Community</b>. With your friends, family, and neighbours, there\'s no winter too cold- together we\'ll be able pull through just about anything.', '<b>Hospitality</b>. It is a sacred duty to take care of travelers who pass through our town. Besides, any stranger could be a god in disguise.', '<b>Austerity</b>. Waste not, want not, and always save for the future.', '<b>Piety</b>. The gods are very real and have strong influence over my life, so I define myself as a servant of the gods.', '<b>Survival</b>. Everything I do is to ensure I will see another sunrise.', '<b>Hedonism</b>. Life is going to be short, so I will do whatever I can to make my life filled with visceral pleasures.', '<b>Family</b>. Keeping my family bloodline going is the most important thing I can do.', '<b>Amity</b>. You are never too downtrodden to be a good person to someone.', '<b>Ambition</b>. I will rise in status, I can\'t continue to live like a peasant my whole life.', '<b>Duty</b>. Loyalty to my home and my community is something I can always rely on.', '<b>Stoicism</b>. I must be strong for those that rely on me, no matter what.', '<b>Diligency</b>. Working hard always gives fuits.', '<b>Sloth</b>. Save your energy for stuff that matters.'],
      personalityTrait: [' '],
      bond: [' '],
      flaw: ['I\'m a penny pincher, and am always looking to save money.', 'I get anxious when presented with simple arithmetic.', 'I tend to hum tunelessly when I work.', 'I feel that people above me are stuck up, but those below me are lazy.', 'I struggle to live beyond my means, trying to keep appearances.', 'I steal tiny portions from markets when I pass by.', 'I\'d rather waste money on drink than provide my own needs. ', 'I am hilariously uneducated.', 'I am proud of my way of life, and I will stop myself from getting any richer.', 'I am immensely superstitious.', 'I am an easy person when offered money.', 'I am jealous of people who are better off than I, but I\'m too stuck in my ways to improve my circumstances.  So I just quietly seethe with stifled anger.'],
      wealth: 10
    },
    'merchant': {
      backgroundOrigin: [' '],
      ideal: ['<b>Capitalism</b>. Capitalism inherently self-corrects, and the free market leads to riches for everyone.', '<b>Mercantilism</b>. Maximise exports and minimise imports, and be as self sufficient as possible.', '<b>Colonialism</b>. Create colonies which produces the raw resources which the homeland will make into finished goods', '<b>Pious</b>. A proportion of their profits/goods is to be dedicated to a god or used to glorify them.', '<b>Prosperity Gospel</b>. The gods reward those that are good with wealth. If you\'re earning money, it\'s because you\'re doing the right thing.', '<b>Shared Rewards</b>. My employees deserve to be rewarded for their hard work when my business is prosperous.', '<b>Charity</b>. Being able to help others is more important than lining your own pockets.', '<b>Experience</b>. I love traveling and sharing items with other.'],
      personalityTrait: [' '],
      bond: [' '],
      wealth: 1000
    },
    'pirate': {
      backgroundOrigin: [' '],
      ideal: [' '],
      personalityTrait: [' '],
      bond: [' '],
      wealth: 1000
    },
    'child': {
      backgroundOrigin: [' '],
      ideal: ['I think that you should always share.', 'If someone else doesn\'t have something that you do have, you should share it.', 'Having fun is the best!', 'I want to be as good as my mum when I grow up!'],
      personalityTrait: ['I like running around outside', 'I love catching fish', 'I am always in the mood for a game', 'I am constantly hungry'],
      bond: ['I want my dog to come back from the farm', 'I miss my sister', 'I wish my dad could play with me more', 'I want to have another little brother'],
      wealth: 1
    }
  };

  const bodyParts = {
    // The most notable physical trait of $currentNPC.firstName is that $currentNPC.heshe has ______
    head: {
      hair: ['thick, long hair down to their hips', 'a mostly shaved head', 'a short crewcut', 'a pretty short mohawk', 'neatly trimmed hair', 'wild, unkempt hair', 'long curly hair', 'short curly hair', 'thick straight hair', 'thin stringy hair', 'small tufts of hair, but not much', 'short braided hair', 'hair in thick long braids', 'thick braids of hair banded with gold', 'short, messy hair', 'a very short, no-nonsense haircut', 'a short, very tailored haircut', 'bangs that obscure the eyes', 'hair flaked with snowy dandruff', 'a hair braid like a thick rope', 'hair pulled up in a tight bun', 'hair coiled in a top-knot', 'greasy looking hair', 'rather oily looking hair', 'thin whispy hair down to the shoulders', 'hair elaborately dressed with ribbons', 'hair greased into a ducktail', 'locks that flutter to the floor', 'incredibly frizzy hair', 'hair like straw', 'hair that droops down to the cheeks', 'matted looking hair', 'pigtails', 'a very noble haircut', 'long messy hair', 'hair in a low bun', 'has slicked back hair', 'braided hair', 'a ring of hair', 'barely any hair', 'long bangs', 'a bowl cut', 'very bushy hair', "a rat's nest for hair", 'a shaved head', 'long sideburns', 'thin, neatly trimmed sideburns', 'thick, tangled hair', 'neatly combed hair'],
      // covers eyes, eyelids, and eyebrows
      eyes: ['eyes like a hawk', 'quick-witted eyes', 'incredibly sharp eyes', 'rather dull eyes', 'cold eyes', 'lifeless looking eyes', 'incredibly wide eyes', 'slits for eyes', 'very droopy eyelids', 'rather square shaped eyes', 'brilliant eyes', 'shifty eyes', 'deep crows feet around both eyes', 'almond shaped eyes', 'beady rat eyes', 'a beseeching gaze', 'a blazing gaze', 'bug-eyes', 'bulging eyes', 'feline-like eyes', 'eyes like a shark', 'eyes like liquid pools of color', 'sneaky, close-set eyes', 'very sunken eyes', 'constantly watery eyes', 'narrow, wide-set eyes', 'moon shaped eyes', 'steeply arched brows', 'tired looking eyes', 'a thick unibrow', 'a thin unibrow', 'thick, straight eyebrows', 'very hairy eyebrows', 'thin, curved brows', 'outrageously long eyelashes', 'very long eyelashes', 'eyebrows like checkmarks', 'well manicured eyebrows', 'eyebrows like caterpillars', 'small beady eyes', 'strangely bloodshot eyes', 'deep-set eyes', 'quite owlish eyes', 'oval shaped eyes', 'slanted eyes', 'drawn on eyebrows', 'quite sparse eyebrows', 'thin, wispy eyebrows', 'doe-eyes', 'an emotionless gaze', 'hollow eyes', 'squinty eyes', 'twinkling eyes', 'wide spaced, sunken eyes', 'a black eye', 'two black eyes', 'enormous eyes', 'incredibly tiny eyes'],
      nose: ['a long slender nose', 'a rather snout looking nose', 'a piggish nose', 'a round, bulbous nose', 'a short slender nose', 'a bird-like nose', 'a beaked nose', 'a rather bent looking nose', "a boxer's nose", 'a broken nose', 'a very large nose', 'a very small nose', 'a quite long nose', 'a rather askew nose', 'a bovine looking nose', 'a broad, flat nose', 'a childlike nose', 'a chiseled nose', 'a cleft nose', 'a crooked nose', 'a short, curved nose', 'a long, curved nose', 'a curved nose', 'a delicate looking nose', 'a dimpled nose', 'an elegantly curved nose', 'an elegant, round nose', 'an enormous nose', 'a cat-like nose', 'a flaccid looking nose', 'a freckled nose', 'a fat nose', 'a hooked nose', 'a thin, hooked nose', 'a wide, hooked nose', 'an impish nose', 'a knobby nose', 'a long, lopsided nose', 'a narrow, lopsided nose', 'a rather lumpy', 'a long, lumpy nose', 'a round, lumpy nose', 'a flat, meaty nose', 'an oddly misshapen nose', 'a short pinched nose', 'a squashed nose', 'a wide, wrinkled nose', 'a rather noble nose', 'a thin, sloped nose', 'a broad, sloped nose', 'a warty nose', 'nose covered in blackheads', 'a rather greasy looking nose', 'a pockmarked nose'],
      // covers mouth and cheeks
      mouth: ['long thin lips', 'thick, full lips', 'a permanent smile', 'a permanent frown', 'a permanent scowl', 'very pouty lips', 'a permanent look of awe', 'tight, pursed lips', 'rather dainty lips', 'long, thick lips', 'narrow, thin lips', 'yellowed teeth', 'incredibly crooked teeth', 'almost rotten looking teeth', 'almost no teeth', 'a perfect smile', 'incredibly white teeth', 'perfectly straight teeth', 'teeth like headstones', 'plump, luscious lips', 'very wide lips', 'troutlike lips', 'dry, cracked lips', 'leathery looking lips', 'a sagging lower lip', 'very full lips', 'a fat lip', 'a kind smile', 'hallowed cheeks', 'harsh cheekbones', 'sharp cheekbones', 'rosy red cheeks', 'very high cheekbones', 'sunken cheekbones', 'soft round cheeks', 'plump cheeks', 'chubby cheeks', 'dimpled cheeks', 'large puffy cheeks', 'thin ruddy cheeks', 'pale, sunken cheeks', 'freckled cheeks', 'large buck teeth', 'teeth like a beaver', 'teeth like a horse', 'a large gap between the two front teeth', 'an underbite', 'an overbite'],
      // covers chin, jaw, and neck
      chin: ['a strong, jutting chin', 'an angular chin', 'a strong cleft chin', 'a slight cleft chin', 'a double chin', 'a large double chin', 'a wide beefy chin', 'a thin dainty chin', 'a rather bony chin', 'a wide chin', 'a narrow, sunken chin', 'a very feminine chin', 'a flat chin', 'a recessed chin', 'an almost non-existant chin', 'a misshapen chin', 'a noble looking chin', 'a flat, pockmarked chin', 'a very prominent chin', 'a sharp chin', 'a quite slender chin', 'a well-molded chin', 'a square chin', 'a soft, rounded chin', 'a chiseled jawline', 'a well sculpted jaw', 'a chin like a shovel', 'a delicately rounded jaw', 'a caved in chin', 'a heavy round jaw', 'a jaw narrowed into a pointed little chin', 'jowls', 'a narrow jawline that arrows into a pointed chin', 'a pick-like chin', 'a receding chin that makes their nose seem bigger', 'a saggy jaw that droops into a turkey neck', 'a spade of a chin', 'a strong square jaw', 'a weak chin', 'a prominent jawline', 'a smooth, youthful jawline', 'a long elegant neck', 'a long stocky neck', 'a very wide neck', 'a quite short, thin neck', 'a thin stocky neck', 'a narrow neck', 'a neck that looks to small for their head', 'an incredibly thick neck'],
      ears: ['jug-like ears', 'elephant-like ears', 'cauliflower ears', 'large, protruding ears', 'small, protruding ears', 'long, thick earlobes', 'thin, fat earlobes', 'very tiny ears', 'small tender ears', 'big, floppy ears', 'no earlobes', 'ears that curl like an exotic shell', 'rather pointed ears', 'very rounded ears', 'very delicate ears', 'rather hairy ears'],
      misc: ['a densely pockmarked face', 'an incredibly freckly face', 'a face covered in freckles', 'a well freckled face', 'a rather angular face', 'a soft rounded face', 'a friendly looking face', 'a sunken face', 'a hollow looking face', 'a sharply angled face', 'a long, horselike face', 'a horseface', 'an exceptionally pale face', 'a very blocky face', 'a baby-face', 'a rather blotchy looking face', 'a well countoured face', 'a flabby face', 'a youthful looking face']
    },
    torso: {
      descriptions: ['a hunched back', 'an incredibly large hunch', 'very broad shoulders', 'incredibly broad shoulders', 'quite broad shoulders', 'narrow shoulders', 'quite rounded shoulders', 'terrible posture', 'perfect posture', 'a large barrel chest', 'a barrel chest', 'very bony shoulders', 'wide set shoulders', 'a sunken chest', 'a wide ribcage', 'a narrow ribcage', 'a very narrow waist', 'a rather wide waist', 'a distended stomach', 'rather drooped shoulders', 'strong, square shoulders', 'broad, powerful shoulders', 'very pronounced collar bones', 'wide, bony hips', 'very narrows hips', 'very wide set hips', 'a misshapen ribcage']
    },
    arms: {
      descriptions: ['long, gangly arms', 'quite short arms', 'arms like a gorilla', 'long, spindly fingers', 'short, stubby arms', 'short, stubby fingers', 'child-sized hands', 'very hairy forearms', 'incredibly veiny arms', 'swollen, red knuckles', 'quite bony elbows', 'fingers like sausages', 'heavily calloused hands', 'fingernails cut to the quick', 'long, brittle fingernails', 'colorfully painted nails', 'talon-like nails', 'nails sharpened to a point', 'neatly trimmed fingernails', 'small webs between each finger', 'long, elegant fingers', 'rough, cracked hands', 'large swollen knuckles', 'impossibly enormous hands', 'very muscular hands', 'quite muscular arms', 'grimy looking fingernails', 'yellow-ish fingernails']
    },
    legs: {
      descriptions: ['more legs than torso', 'widely bowed legs', 'very notcieable knock knees', 'large, knobly knees', 'quite stumpy legs', 'large, wide feet', 'very tiny feet', 'feet like a toddler', 'feet like a chimp', 'almost no kneecaps', 'long, monkey like toes', 'pale, veiny legs']
    }
  };

  const professions = {
    'peasant': {
      sv: 20,
      isBackground: true,
      type: 'labourer',
      sector: 'agriculture',
      description: 'a peasant.',
      dailyWage: 14,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 30 + dice(8, 6);
      },

      relationships() {
        return {
          lord: {
            relationship: 'lord',
            reciprocalRelationship: 'labourer',

            exclusions(town, npc) {
              return town.npcRelations?.[npc.key]?.some(r => r.relation === 'lord');
            },

            probability: 20,
            base: {
              socialClass: 'nobility'
            }
          }
        };
      }

    },
    'mountaineer': {
      sv: 1500,
      isHobby: true,
      type: 'recreation',
      sector: 'adventuring',
      description: 'a person living in a mountainous area.',
      dailyWage: 50,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'barbarian': {
      sv: 6500,
      type: 'dndClass',
      sector: 'adventuring',
      description: 'a warrior who gets lost in the craze of battle.',
      dailyWage: 200,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      professionOrigin: ['My devotion to my people lifted me in battle, and I learned to control my bloodlust.', 'The spirits of my ancestors called out to me to complete a task, so I took up the way of the barbarian.', 'I lost control in battle one day, as if something else was guiding me as I slaughtered my enemies.', 'I went on a spiritual journey to find myself, and discovered the inner rage that I had could be tamed, used, and controlled.', "I was struck by lightning, but miraculously lived. Ever since that day, I've been stronger, faster, and able to push through any struggle.", 'I needed an outlet to channel my anger, otherwise I would have snapped, and killed an innocent person.'],
      background: {
        'charlatan': 1,
        'criminal': 1,
        'folk hero': 1,
        'hermit': 5,
        'outlander': 5,
        'soldier': 4,
        'urchin': 1
      }
    },
    'bard': {
      sv: 6500,
      type: 'dndClass',
      sector: 'adventuring',
      description: 'uses their artistic talents to induce magical effects.',
      dailyWage: 200,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      professionOrigin: ['I awakened my latent bardic abilities through trial and error.', 'I was a gifted performer, and eventually attracted the attention of a legendary bard, who decided to teach me to further my talents into the realm of magic.', 'I joined a society of scholars and orators, who helped teach me how to harness my music and turn it into magic.', 'I felt a great calling to recount the tales of heros past, and bring them alive through song and stories.', 'I joined one of the great colleges to learn old lore, and did music as an elective.', 'I picked up an instrument one day, and found that I could play it perfectly.'],
      background: {
        'charlatan': 2,
        'criminal': 1,
        'entertainer': 6,
        'folk hero': 2,
        'guild artisan': 2,
        'noble': 1,
        'outlander': 1,
        'sailor': 1,
        'soldier': 1,
        'urchin': 1
      }
    },
    'cleric': {
      sv: 6500,
      type: 'dndClass',
      sector: 'adventuring',
      description: 'has devoted their entire being to the will of their god, thus gaining magical powers.',
      domSub: 'sub',
      dailyWage: 180,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      professionOrigin: ['My god called on me to serve the faith as a cleric, so I abandoned my previous life, and set out for the nearest temple.', "I saw the injustice and horrors of the world, and felt that I couldn't live without trying to do something about it.", "My god gave me a sign that I was needed to do something important, some time in the future. I'm still waiting for my time to serve, but when it happens, I'll be ready.", "I've always been devout, but it wasn't until I completed a pilgrimage to a sacred site that I found my true calling.", 'I used to serve in the beauracracy of the church, but found the work unrewarding. Being able to spread the message to the farthest corners of the land is much more satisfying work.'],
      background: {
        'acolyte': 5,
        'charlatan': 1,
        'criminal': 1,
        'entertainer': 1,
        'folk hero': 3,
        'guild artisan': 2,
        'hermit': 2,
        'noble': 3,
        'sage': 4,
        'sailor': 1,
        'soldier': 1,
        'urchin': 1
      }
    },
    'druid': {
      sv: 6500,
      type: 'dndClass',
      sector: 'adventuring',
      description: 'a mage attuned to the magical forces of nature, able to shapeshift, call on the elements, communicate with flora and fauna, etc.',
      domSub: 'sub',
      dailyWage: 140,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      professionOrigin: ['I found a place among a group of druids after I fled a catastrophe.', 'I saw too much devastation in the wilds where I used to play for days as a child, and decided to protect the wilderness.', 'I have always had an affinity with animals, so I decided to explore it, and found that I had a gift to converse with them.', 'I befriended a druid that frequented an old pub, and he convinced me that the world needed me to carry on his work as a druid.', 'Whiie l was growing up, I saw spirits all around me— entities no one else could perceive. I sought out the druids to help me understand the visions, and communicate with these beings.'],
      background: {
        'acolyte': 3,
        'charlatan': 1,
        'folk hero': 3,
        'hermit': 5,
        'noble': 2,
        'outlander': 4,
        'sage': 3,
        'sailor': 1,
        'soldier': 1,
        'urchin': 1
      }
    },
    'fighter': {
      sv: 6500,
      type: 'dndClass',
      sector: 'adventuring',
      description: 'a common warrior.',
      dailyWage: 200,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      professionOrigin: ['I wanted to hone my combat skills, and so I joined a war college', 'I  grew up fighting, and I refined my talents by defending myself against people who crossed me.', 'I squired for a knight, who taught me how to fight, care for my steed, and conduct myself with honor. I decided to take up that path for myself.', 'Monster attacks led me to believe that there was no other way for me to be able to defend my family.', 'I joined the army, and learnt how to fight in a group as a team against a common enemy.', 'I always had a knack for just about any weapon which I picked up.'],
      background: {
        'acolyte': 1,
        'charlatan': 1,
        'criminal': 4,
        'entertainer': 1,
        'folk hero': 3,
        'guild artisan': 1,
        'hermit': 1,
        'noble': 1,
        'outlander': 2,
        'sage': 1,
        'sailor': 3,
        'soldier': 6,
        'urchin': 1
      }
    },
    'monk': {
      sv: 6500,
      type: 'dndClass',
      sector: 'adventuring',
      description: 'a warrior of a holy order.',
      domSub: 'sub',
      dailyWage: 20,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      professionOrigin: ['I stumbled into a portal and took refuge in a strange monastery, where I learned how to defend mysel fagainst the forces of darkness.', 'I was chosen to study at a secluded monastery, where I learnt the fundamental techniques to set me on the path to eventual mastery.', 'I sought out the instruction of a monk to gain a greater understanding of my world, and my purpose in it.', 'I was overwhelmed with grief when I lost my sister, and found solace in meditation with the monks.', 'I always felt a power within me, and sought out an order of monks to help me understand it and harness that energy for good.', 'I was wild, and undisciplined as a child, until I realised the error of my ways. I sought out the monks to atone for my sins.'],
      background: {
        'acolyte': 4,
        'charlatan': 1,
        'criminal': 1,
        'folk hero': 1,
        'guild artisan': 1,
        'hermit': 3,
        'noble': 2,
        'outlander': 1,
        'sage': 3,
        'soldier': 1,
        'urchin': 1
      }
    },
    'rogue': {
      sv: 6500,
      type: 'dndClass',
      sector: 'adventuring',
      description: 'A sneaky person.',
      dailyWage: 250,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      professionOrigin: ["I've always been nimble and quick of wit, so I decided to use those talents to help me make my way in the world.", 'A thief wronged me, so I focused my training on mastering those skills to better combat foes of that sort.', "Know thy enemy. I aim to learn everything there is to know about the Thieves' guild, and then I'll bring it all tumbling down.", 'An experienced rogue saw something in me, and taught me several useful tricks.', 'I took up with a group of ruffians, that taught me how to get what I want without direct confrontation.', "I'm a sucker for a shiny bauble or bag of coins, as long as I can get it without risking life and limb.", "I just love the thrill of the heist. There's nothing that makes me feel more alive than taking something from right under someone's nose."],
      background: {
        'charlatan': 3,
        'criminal': 6,
        'folk hero': 2,
        'guild artisan': 2,
        'hermit': 1,
        'noble': 2,
        'outlander': 1,
        'sailor': 1,
        'soldier': 1,
        'urchin': 5
      }
    },
    'ranger': {
      sv: 6500,
      type: 'dndClass',
      sector: 'adventuring',
      description: 'wanders or ranges over a particular area or domain.',
      dailyWage: 150,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      professionOrigin: ['I always had a way with animals, and was able to calm them with a gentle touch and soothing word.', 'I found purpose while I was honing my hunting skills by bringing dangerous beasts down from the outskirts of civilisation.', 'I suffer from wanderlust, so I found the life of the ranger to be freeing; to me, wandering without a fixed home is freeing.', 'I met a grizzled ranger who taught me the secrets of woodcraft and surviving in the wild.', 'I served in the army, and led my division by scouting ahead, blazing trails and tracking our enemies.'],
      background: {
        'acolyte': 2,
        'charlatan': 1,
        'criminal': 1,
        'entertainer': 1,
        'folk hero': 4,
        'guild artisan': 1,
        'hermit': 4,
        'outlander': 4,
        'sage': 1,
        'sailor': 1,
        'soldier': 3,
        'urchin': 1
      }
    },
    'paladin': {
      sv: 6500,
      type: 'dndClass',
      sector: 'adventuring',
      description: 'a holy knight and divine spellcaster crusading in the name of their god.',
      dailyWage: 100,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      },

      professionOrigin: ['A magical being appeared before me, and called on me to undertake a holy quest.', 'One of my ancestors left a holy quest unfulfilled, so I seek to rectify this.', 'The world is a dark and terrible place. I seek to be a beacon of hope for those that may not have the courage to go on otherwise.', "I served as a paladin's squire, and admired his honesty and conduct. I decided to follow in his footsteps, and champion the good and decency that he represented.", 'Evil must be opposed on all fronts, and I decided to be the first line of defense against such scum.', 'Becoming a paladin was a natural consequence of my unwavering faith. I saw the need for the faith to be protected with sword and shield.'],
      background: {
        'acolyte': 4,
        'charlatan': 1,
        'criminal': 1,
        'entertainer': 1,
        'folk hero': 4,
        'guild artisan': 1,
        'hermit': 1,
        'noble': 5,
        'outlander': 1,
        'sage': 1,
        'sailor': 1,
        'soldier': 5,
        'urchin': 4
      }
    },
    'sorcerer': {
      sv: 6500,
      type: 'dndClass',
      sector: 'adventuring',
      description: 'magic user who derives their magical abilities innately rather than through study.',
      dailyWage: 300,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      },

      professionOrigin: ['When I was born, all of the milk turned to cheese. My family is convinced that it was a harbinger for my powers.', 'I suffered a terrible strain, which brought forth my dormant powers. I have fought to control it ever since.', "My immediate family never spoke of my ancestors, and when I asked, they would change the subject. It wasn't until I started displaying strange talents that the full truth of my heritage came out.", 'A monster attacked one of my friends when I was younger, and I lashed out in a burst of energy, saving my friend, but unlocking the torrent of power which I still struggle to control.', "After a magical conflagration, I realised that while I was unharmed, I had been fundamentally changed by the outburst of magical energy. I'm only just beginning to understand what has happened to me."],
      background: {
        'acolyte': 4,
        'charlatan': 4,
        'criminal': 1,
        'entertainer': 2,
        'folk hero': 2,
        'guild artisan': 1,
        'hermit': 1,
        'noble': 3,
        'outlander': 1,
        'sage': 3,
        'sailor': 1,
        'soldier': 1,
        'urchin': 1
      }
    },
    'warlock': {
      sv: 6500,
      type: 'dndClass',
      sector: 'adventuring',
      description: 'a mage who has gained their abilities by forming a pact with an otherworldly being.',
      dailyWage: 300,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      },

      professionOrigin: ['I was examining a strange tome I found in an abandoned library when the entity that would become my patron suddenly appeared before me.', 'While wandering through a forbidden place, I came across a magical entity, which offered to form a pact with me.', 'I stumbled into the clutches of my patron after I accidentally stepped through a magical doorway.', 'During a crisis, I prayed for any being to help me. The creature that answered was my patron.', 'My future patron visited me in my dreams, and offered great power in exchange for my servie.', 'One of my ancestors had a pact with my patron, which bound me to the same fate.'],
      background: {
        'acolyte': 6,
        'charlatan': 1,
        'criminal': 1,
        'entertainer': 1,
        'folk hero': 1,
        'guild artisan': 1,
        'hermit': 6,
        'noble': 3,
        'outlander': 1,
        'sage': 5,
        'sailor': 1,
        'soldier': 1,
        'urchin': 1
      }
    },
    'wizard': {
      sv: 6500,
      type: 'dndClass',
      sector: 'adventuring',
      description: 'derives their magical abilities through study.',
      dailyWage: 300,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      },

      professionOrigin: ['An old wizard chose me from among several candidates to serve an apprenticeship.', 'When I became lost in a magical forest, a hedge wizard took me in, and taught me the fundamentals of magic so that I could navigate my way out.', 'I grew up listening to tales of great wizards that could change reality with a flick of their hand. I knew from a young age that I wanted to hold that sort of power.', 'One of my relatives was an accomplished wizard in their own right, and they recognised the same potential in me that their mentor saw in them.', 'While exploring the restricted section of a library, I came across a magical tome, which sparked the interest in me.', 'I was a prodigy that demonstrated mastery of the arcane arts at a very young age. When I became old enough to set out on my own, I did so to continue my studies and expand my powers.'],
      background: {
        'acolyte': 6,
        'charlatan': 1,
        'criminal': 1,
        'entertainer': 1,
        'folk hero': 1,
        'guild artisan': 1,
        'hermit': 6,
        'noble': 3,
        'outlander': 1,
        'sage': 5,
        'sailor': 1,
        'soldier': 1,
        'urchin': 1
      }
    },
    'actor': {
      sv: 2500,
      isHobby: true,
      type: 'profession',
      sector: 'arts',
      description: 'impersonates characters, typically on stage in a theatrical production.',
      domSub: 'sub',
      dailyWage: 100,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      professionOrigin: ['I always loved playing make-believe; this is just the natural result of that.'],

      relationships(town, npc) {
        return {
          patron: {
            relationship: 'patron',
            reciprocalRelationship: npc.profession,
            probability: 20,
            base: {
              socialClass: 'nobility'
            }
          }
        };
      }

    },
    'advocate': {
      sv: 3250,
      synonyms: ['lawyer'],
      type: 'profession',
      sector: 'government and law',
      description: 'practices or studies law, typically an attorney or a counselor.',
      dailyWage: 700,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      },

      professionOrigin: ['I have always had a strong moral compass, and wanted to defend those that I thought needed defending.'],

      relationships(town, npc) {
        return {
          client: {
            relationship: 'client',
            reciprocalRelationship: npc.profession,
            probability: 20,
            base: {}
          }
        };
      }

    },
    'advisor': {
      sv: 780,
      type: 'profession',
      sector: 'government and law',
      description: 'advises some sort of government official on a specific area of governing.',
      domSub: 'dom',
      dailyWage: 230,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      },

      professionOrigin: ['Becoming an advisor was simply a matter of being in the right place at the right time.']
    },
    'animal handler': {
      sv: 250,
      type: 'labourer',
      sector: 'agriculture',
      description: 'works with different animals for a variety of tasks, typically livestock.',
      domSub: 'sub',
      dailyWage: 70,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      professionOrigin: ['I have always had a knack for animal handling.']
    },
    'apothecarist': {
      sv: 450,
      type: 'business',
      sector: 'science',
      description: 'prepares and sells medicines, drugs, and potions.',
      domSub: 'sub',
      dailyWage: 160,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      professionOrigin: ['I was taught apothecary at a young age.']
    },
    'architect': {
      sv: 550,
      type: 'profession',
      sector: 'construction',
      description: 'designs buildings or landscapes and in many cases supervises their construction.',
      domSub: 'dom',
      dailyWage: 600,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      },

      professionOrigin: ["I had an apprenticeship, drafting up plans for houses. I made improvements to my master's plans. Now, I do it for a living."],

      relationships(town, npc) {
        return {
          client: {
            relationship: 'client',
            reciprocalRelationship: npc.profession,
            probability: 20,
            base: {
              socialClass: 'nobility'
            }
          }
        };
      }

    },
    'archivist': {
      sv: 2450,
      type: 'profession',
      sector: 'science',
      description: 'maintains and is in charge of some sort archives.',
      dailyWage: 300,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      },

      professionOrigin: ['I love ordering things, and archiving suits me perfectly.', 'Everything being in its place suits me very well.', 'I have an amazing memory, and can find what someone is looking for almost instantly.']
    },
    'armorer': {
      sv: 750,
      type: 'business',
      sector: 'craftsmanship',
      description: 'specializes in making and repairing armor.',
      domSub: 'dom',
      dailyWage: 140,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      professionOrigin: ['I did an apprenticeship and fell into armoring as a result of that.']
    },
    'astrologer': {
      sv: 950,
      isHobby: true,
      type: 'profession',
      sector: 'science',
      description: 'uses astrology to tell others about their character or to predict their future.',
      domSub: 'dom',
      dailyWage: 450,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      },

      professionOrigin: ['I loved the stars as a kid, and made a career out of it.'],

      relationships(town, npc) {
        return {
          client: {
            relationship: 'client',
            reciprocalRelationship: npc.profession,
            probability: 20,
            base: {}
          }
        };
      }

    },
    'baker': {
      sv: 800,
      type: 'business',
      sector: 'hospitality',
      description: 'makes all sorts of baked goods.',
      domSub: 'sub',
      dailyWage: 80,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      professionOrigin: ['Early risers like me are well suited to the life of a baker.', 'I love bread!', 'Watching yeast rise is meditative.']
    },
    'banker': {
      sv: 2250,
      type: 'business',
      sector: 'business',
      description: 'an officer or owner of a bank or group of banks.',
      domSub: 'dom',
      dailyWage: 800,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      },

      professionOrigin: ['I love money, so wanted to work as somebody that would be in charge of money.']
    },
    'barber': {
      sv: 350,
      type: 'business',
      sector: 'hospitality',
      description: 'cuts hair and shaves or trims beards.',
      dailyWage: 100,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      professionOrigin: ['I have a steady hand, and like to think that I am a good conversationalist- barbering was a natural fit.']
    },
    'bartender': {
      sv: 450,
      synonyms: ['barkeep', 'tavern owner', 'innkeep'],
      type: 'business',
      sector: 'hospitality',
      description: 'pours drinks at taverns and other establishments.',
      domSub: 'dom',
      dailyWage: 200,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          client: {
            relationship: 'drunkard',
            reciprocalRelationship: npc.profession,
            probability: 20,
            base: {}
          }
        };
      },

      professionOrigin: ['I came across the tavern as a youngster, and spent many a night here drinking with my buddies. When the old owner died, it went to auction, and I tried to kep the dream alive by buying it. One by one all my friends grew out of it, or moved away.', "Before I ran the tavern, it was my dad's. I kept the family business going to support him in his old age.", "When I first got here, it was practically a ghost town. We built the tavern as a social hub for the folk, and it's now what it is today.", 'The old owner was a problem gambler, and when they auctioned off the tavern, I jumped at it.', "The old owner thought that the tavern wasn't profitable. In the first six months of my stewardship, I turned it around, and have made it the best bloody pub in $town.name!", "Running the tavern was the family business, and it was always going to be my lot in life. I'm not angry or disappointed or anything, but I would like to see the world one day, and it stops me from doing that.", 'I was just a kitchen hand when this place started. The owner and I worked through thick and thin, and when his daughter died, he had nobody to leave it to, except for me.', "My parents bought this place as an investment. I don't know what they were thinking- when have you ever heard of a pub being profitable?"],
      background: {
        'commoner': 8,
        'noble': 3,
        'folk hero': 1,
        'soldier': 1,
        'urchin': 3
      }
    },
    'barmaid': {
      sv: 450,
      synonyms: ['waiter', 'waitress'],
      type: 'business',
      sector: 'hospitality',
      description: 'serves drinks and food in a bar as well as engaging with customers.',
      domSub: 'sub',
      dailyWage: 60,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      professionOrigin: ['Bar work has been all that I have been able to find.']
    },
    'blacksmith': {
      sv: 750,
      type: 'business',
      sector: 'craftsmanship',
      description: 'forges and repairs things in metal, including weapons, armor, utensils, etc.',
      domSub: 'dom',
      dailyWage: 110,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      professionOrigin: ['I was an apprentice in the smithy, and took up the title when my old master passed on.', 'I was a tinkerer, and just drifted from town to town doing odd jobs for people until I came to $town.name. I fell in love with the place, and then settled here.', "I followed my love here, set up shop, and now we're happily married, with a steady job and a roof over our heads.", "My father was a blacksmith before me, and then I took up the trade to make him proud. Or at least, I hope I've made him proud. He passed before I opened up shop.", "I was an apprentice, and my old master bitterly despised me because my father married his love. I worked so hard to perfect my craft to impress him thinking that the issue was with me, and then the bastard had a heart attack. Left everything to her. What's my mum gonna do with a smithy?!", 'I spent a lot of time in the mountains with the Dwarves, and they taught me a thing or two while I was there.'],
      background: {
        commoner: 8,
        soldier: 1,
        urchin: 3
      }
    },
    "blacksmith's assistant": {
      sv: 800,
      synonyms: ['smith apprentice', 'smithy apprentice'],
      type: 'labourer',
      sector: 'craftsmanship',
      description: 'serves under a blacksmith learning the trade of forging.',
      domSub: 'dom',
      dailyWage: 50,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      professionOrigin: ["I'm doing an apprenticeship, I hope to be a full blacksmith one day."],
      background: {
        commoner: 8,
        soldier: 1,
        urchin: 3
      }
    },
    'bookseller': {
      sv: 6300,
      type: 'business',
      sector: 'business',
      description: 'sells books from a shop or cart.',
      domSub: 'sub',
      dailyWage: 120,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'brewer': {
      sv: 550,
      isHobby: true,
      type: 'business',
      sector: 'craftsmanship',
      description: 'brews ale.',
      dailyWage: 80,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      professionOrigin: ['I started out as a hobbyist, but then went fulltime.']
    },
    'brickmason': {
      sv: 650,
      type: 'labourer',
      sector: 'construction',
      description: 'builds with mineral products such as stones, bricks, cinder blocks, or tiles, usually with the use of mortar as a bonding agent.',
      domSub: 'dom',
      dailyWage: 70,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'pimp': {
      sv: 850,
      synonyms: ['whoremonger'],
      type: 'business',
      sector: 'business',
      description: 'controls prostitutes and arranges clients for them, taking part of their earnings in return.',
      domSub: 'dom',
      dailyWage: 100,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      professionOrigin: ["Being a pimp is all about connections- it's all about who you know. With good clients comes good money."],

      relationships(town, npc) {
        return {
          client: {
            relationship: 'client',
            reciprocalRelationship: npc.profession,
            probability: 20,
            base: {}
          },
          prostitute: {
            relationship: 'prostitute',
            reciprocalRelationship: npc.profession,
            probability: 20,
            base: {
              profession: 'prostitute'
            }
          }
        };
      },

      exclusions(town, npc) {
        return !town.disableNSFW;
      }

    },
    'buccaneer': {
      sv: 1350,
      type: 'profession',
      sector: 'adventuring',
      description: 'a kind of privateer or free sailor.',
      dailyWage: 100,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'butcher': {
      sv: 1150,
      type: 'business',
      sector: 'hospitality',
      description: 'cuts up and sells meat.',
      domSub: 'dom',
      dailyWage: 90,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      professionOrigin: ['I had an apprenticeship, and have been butchering ever since.', "There's nothing quite like a nice sausage, right? Well, I'm picky, and like sausages my way."],

      relationships(town, npc) {
        return {
          client: {
            relationship: 'client',
            reciprocalRelationship: npc.profession,
            probability: 20,
            base: {}
          },
          supplier: {
            relationship: 'supplier',
            reciprocalRelationship: npc.profession,
            probability: 20,
            base: {
              profession: 'cowherd'
            }
          }
        };
      }

    },
    'captain': {
      sv: 550,
      type: 'profession',
      sector: 'military',
      description: 'an army officer of high rank in charge of commanding squadrons of soldiers.',
      domSub: 'dom',
      dailyWage: 160,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      },

      professionOrigin: ['I rose through the ranks, receiving awards for my bravery during battle, eventually landing at the position of captain.']
    },
    'caravanner': {
      sv: 1450,
      type: 'labourer',
      sector: 'transportation',
      description: 'travels or lives in a caravan.',
      dailyWage: 50,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          coworker: {
            relationship: 'co-worker',
            probability: 20,
            base: {
              profession: npc.profession
            }
          }
        };
      }

    },
    'carpenter': {
      sv: 550,
      type: 'business',
      sector: 'craftsmanship',
      description: 'makes and repairs wooden objects and structures.',
      domSub: 'dom',
      dailyWage: 110,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'cartographer': {
      sv: 1950,
      type: 'profession',
      sector: 'science',
      description: 'a scholar and illustrator of maps.',
      domSub: 'dom',
      dailyWage: 240,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      },

      professionOrigin: ['I love maps, and have a good hand for drawing. Cartography is the natural intersection of the two.']
    },
    'chandler': {
      sv: 700,
      type: 'business',
      sector: 'business',
      description: 'deals in provisions and supplies.',
      dailyWage: 90,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'chef': {
      sv: 1850,
      type: 'labourer',
      sector: 'hospitality',
      description: 'a professional cook trained in the culinary arts.',
      domSub: 'dom',
      dailyWage: 110,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'child': {
      sv: 10000,
      type: 'family',
      sector: 'family',
      synonyms: ['twenty one year old', 'twenty year old', 'nineteen year old', 'surprisingly young', 'eighteen year old', 'barely adult aged', 'adolescent', 'late teenager', 'teenager', 'young teenager', 'young', 'youngster', 'prepubescent', 'toddler', 'young child', 'kid', 'baby', 'newborn'],
      description: 'a child, specifically one that is not working.',
      dailyWage: 4,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      professionOrigin: ['I want to be somebody important when I grow up!']
    },
    'clergyman': {
      sv: 40,
      type: 'profession',
      sector: 'religion',
      description: 'a member of the clergy attached to a private chapel, institution, ship, branch of the armed forces, etc.',
      domSub: 'dom',
      dailyWage: 190,

      function(town, npc) {
        if (npc.roll.religiosity < 70 || !npc.roll.religiosity) {
          npc.roll.religiosity = random(70, 100);
        }
      },

      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      }

    },
    'clock maker': {
      sv: 4550,
      isHobby: true,
      type: 'profession',
      sector: 'craftsmanship',
      description: 'makes and repairs clocks.',
      domSub: 'dom',
      dailyWage: 140,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'craftsman': {
      sv: 4550,
      type: 'profession',
      sector: 'craftsmanship',
      description: 'makes and repairs things.',
      domSub: 'dom',
      dailyWage: 140,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'cobbler': {
      sv: 1550,
      type: 'profession',
      sector: 'craftsmanship',
      description: 'makes and repairs footwear.',
      dailyWage: 110,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'cook': {
      sv: 450,
      type: 'labourer',
      sector: 'hospitality',
      description: 'prepares food for eating.',
      domSub: 'sub',
      dailyWage: 90,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          coworker: {
            relationship: 'co-worker',
            probability: 20,
            base: {
              profession: npc.profession
            }
          }
        };
      }

    },
    'cooper': {
      sv: 700,
      type: 'labourer',
      sector: 'craftsmanship',
      description: 'makes and repairs casks and barrels.',
      dailyWage: 110,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'courtesan': {
      sv: 1950,
      type: 'labourer',
      sector: 'hospitality',
      description: 'a prostitute with wealthy and noble clients.',
      domSub: 'sub',
      dailyWage: 220,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          coworker: {
            relationship: 'client',
            reciprocalRelationship: npc.profession,
            probability: 20,
            base: {
              socialClass: 'nobility'
            }
          }
        };
      }

    },
    'courtier': {
      sv: 1950,
      type: 'profession',
      sector: 'government and law',
      description: 'attends court as a companion or adviser to the king or queen.',
      domSub: 'sub',
      dailyWage: 320,
      socialClass: 'nobility',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'cowherd': {
      sv: 250,
      type: 'labourer',
      sector: 'craftsmanship',
      description: 'supervises grazing cattle.',
      domSub: 'dom',
      dailyWage: 70,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          coworker: {
            relationship: 'co-worker',
            probability: 20,
            base: {
              profession: npc.profession
            }
          }
        };
      }

    },
    'dancer': {
      sv: 2250,
      type: 'profession',
      sector: 'arts',
      description: 'moves their body rhythmically with or without musical accompaniment.',
      domSub: 'sub',
      dailyWage: 150,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          coworker: {
            relationship: 'co-worker',
            probability: 20,
            base: {
              profession: npc.profession
            }
          }
        };
      }

    },
    'diplomat': {
      sv: 3450,
      type: 'profession',
      sector: 'government and law',
      description: 'an official representing a country abroad.',
      domSub: 'dom',
      dailyWage: 440,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      }

    },
    'diver': {
      sv: 3250,
      type: 'labourer',
      sector: 'agriculture',
      description: 'dives down deep to collect precious things from the sea floors.',
      domSub: 'dom',
      dailyWage: 110,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'domestic partner': {
      sv: 50,
      type: 'family',
      sector: 'family',
      description: 'a spouse that stays at home, cooking, cleaning, and caring for the family.',
      domSub: 'sub',
      dailyWage: 4,
      socialClass: 'peasantry',

      exclusions(town, npc) {
        if (!npc.partnerID) return false;
      },

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'farmer': {
      sv: 150,
      type: 'labourer',
      sector: 'agriculture',
      description: 'operates a farm or cultivates land.',
      domSub: 'dom',
      dailyWage: 100,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'fisherman': {
      sv: 170,
      type: 'labourer',
      sector: 'agriculture',
      description: 'catches fish.',
      domSub: 'dom',
      dailyWage: 100,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'fishmonger': {
      sv: 250,
      type: 'business',
      sector: 'business',
      description: 'sells fish.',
      domSub: 'sub',
      dailyWage: 110,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      relationships() {
        return {
          coworker: {
            relationship: 'supplier',
            reciprocalRelationship: 'client',
            probability: 20,
            base: {
              profession: 'fisherman'
            }
          }
        };
      }

    },
    'furrier': {
      sv: 250,
      type: 'business',
      sector: 'craftsmanship',
      description: 'prepares furs for adornment.',
      domSub: 'dom',
      dailyWage: 140,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'gardener': {
      sv: 550,
      type: 'labourer',
      sector: 'agriculture',
      description: 'tends and cultivates a garden.',
      domSub: 'sub',
      dailyWage: 80,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'general': {
      sv: 2250,
      type: 'profession',
      sector: 'military',
      description: 'the chief commander of an army.',
      domSub: 'dom',
      dailyWage: 700,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      }

    },
    'gladiator': {
      sv: 3250,
      type: 'profession',
      sector: 'arts',
      description: 'fights against other people, wild animals, or monsters in an arena.',
      domSub: 'dom',
      dailyWage: 210,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'glovemaker': {
      sv: 2400,
      type: 'business',
      sector: 'craftsmanship',
      description: 'makes and repairs gloves.',
      domSub: 'dom',
      dailyWage: 140,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'goldsmith': {
      sv: 6550,
      type: 'business',
      sector: 'craftsmanship',
      description: 'a smith who specializes in precious metals.',
      domSub: 'dom',
      dailyWage: 400,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      }

    },
    'grocer': {
      sv: 450,
      type: 'business',
      sector: 'business',
      description: 'a food merchant.',
      domSub: 'dom',
      dailyWage: 105,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'guard': {
      sv: 150,
      isBackground: true,
      synonyms: ['guardsman', 'guard', 'watchman', 'town guard'],
      type: 'profession',
      sector: 'military',
      description: 'a person who keeps watch, especially a soldier or other person formally assigned to protect a person or to control access to a place.',
      domSub: 'dom',
      dailyWage: 200,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      professionOrigin: ['Keeping the peace is easy enough. Might as well get paid for it.']
    },
    'guildmaster': {
      sv: 4150,
      type: 'profession',
      sector: 'business',
      description: 'leads an economically independent producer (a “guild,” an association of craftsmen or merchants that often holds considerable bureaucratic power).',
      domSub: 'dom',
      dailyWage: 900,
      socialClass: 'nobility',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'hatter': {
      sv: 950,
      type: 'business',
      sector: 'craftsmanship',
      description: 'makes and repairs headwear.',
      dailyWage: 110,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'healer': {
      sv: 950,
      type: 'profession',
      sector: 'magic',
      description: 'able to cure a disease or injury using magic.',
      dailyWage: 170,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      }

    },
    'herald': {
      sv: 550,
      type: 'labourer',
      sector: 'communications',
      description: 'a messenger who carries important news.',
      domSub: 'dom',
      dailyWage: 80,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'herbalist': {
      sv: 850,
      type: 'business',
      sector: 'science',
      description: 'practices healing by the use of herbs.',
      domSub: 'sub',
      dailyWage: 130,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'hermit': {
      sv: 950,
      isBackground: true,
      type: 'profession',
      sector: 'outcast',
      description: 'lives in solitude, typically as a religious or spiritual discipline.',
      dailyWage: 40,

      function(town, npc) {
        if (npc.roll.religiosity < 70 || !npc.roll.religiosity) {
          npc.roll.religiosity = random(70, 100);
        }
      },

      socialClass: 'paupery',

      socialClassRoll() {
        return 5 + dice(8, 6);
      }

    },
    'historian': {
      sv: 4150,
      type: 'profession',
      sector: 'science',
      description: 'an expert in or student of history, especially that of a particular period, geographical region, or social phenomenon.',
      dailyWage: 230,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      }

    },
    'hunter': {
      sv: 250,
      isHobby: true,
      type: 'labourer',
      sector: 'self employed',
      description: 'hunts game or other wild animals.',
      domSub: 'dom',
      dailyWage: 70,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'ice seller': {
      sv: 1950,
      type: 'labourer',
      sector: 'agriculture',
      description: 'collects and sells ice.',
      dailyWage: 70,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'inventor': {
      sv: 2250,
      type: 'profession',
      sector: 'business',
      description: 'invented a particular process or device, or invents things as an occupation.',
      domSub: 'dom',
      dailyWage: 200,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'jailer': {
      sv: 1250,
      type: 'labourer',
      sector: 'military',
      description: 'supervises a jail and the prisoners in it.',
      domSub: 'dom',
      dailyWage: 110,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      professionOrigin: ['I know that jailing is not a pretty profession, but somebody has to do it- might as well be me, right?'],

      relationships(town, npc) {
        return {
          prisoner: {
            relationship: 'prisoner',
            reciprocalRelationship: npc.profession,
            probability: 20,
            base: {
              profession: 'prisoner'
            }
          }
        };
      }

    },
    'jester': {
      sv: 2250,
      type: 'profession',
      sector: 'arts',
      description: 'professional joker.',
      dailyWage: 180,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          liege: {
            relationship: 'liege',
            reciprocalRelationship: npc.profession,

            exclusions(town, npc) {
              if (town.npcRelations) {
                if (town.npcRelations[npc.key]) {
                  return !town.npcRelations[npc.key].map(r => {
                    return r.relation;
                  }).includes('liege');
                }
              }
            },

            probability: 20,
            base: {
              socialClass: 'nobility'
            }
          }
        };
      }

    },
    'jeweller': {
      sv: 400,
      type: 'business',
      sector: 'craftsmanship',
      description: 'designs, makes, and repairs necklaces, bracelets, rings, etc., often containing jewels.',
      domSub: 'dom',
      dailyWage: 240,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'judge': {
      sv: 850,
      type: 'profession',
      sector: 'government and law',
      description: 'decides cases in a court of law.',
      domSub: 'dom',
      dailyWage: 650,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      }

    },
    'knight': {
      sv: 1150,
      type: 'profession',
      sector: 'government and law',
      description: 'serves his or her sovereign after being bestowed a rank of royal honor.',
      domSub: 'dom',
      dailyWage: 350,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          liege: {
            relationship: 'liege',
            reciprocalRelationship: npc.profession,

            exclusions(town, npc) {
              if (town.npcRelations) {
                if (town.npcRelations[npc.key]) {
                  return !town.npcRelations[npc.key].map(r => {
                    return r.relation;
                  }).includes('liege');
                }
              }
            },

            probability: 20,
            base: {
              socialClass: 'nobility'
            }
          }
        };
      }

    },
    'lady': {
      sv: 1550,
      type: 'profession',
      sector: 'government and law',
      description: 'some sort of noble.',
      domSub: 'sub',
      dailyWage: 350,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      },

      exclusions(town, npc) {
        if (npc.gender !== 'woman') return false;
      }

    },
    'leatherworker': {
      sv: 750,
      type: 'business',
      sector: 'craftsmanship',
      description: 'makes items from leather such as pouches, scabbards, straps, etc.',
      dailyWage: 110,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'librarian': {
      sv: 3150,
      type: 'profession',
      sector: 'science',
      description: 'administers or assists in a library.',
      domSub: 'sub',
      dailyWage: 160,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'linguist': {
      sv: 5150,
      type: 'profession',
      sector: 'science',
      description: 'studies the essence of communication, including the units, nature, structure, and modification of language.',
      domSub: 'dom',
      dailyWage: 260,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      }

    },
    'locksmith': {
      sv: 1900,
      type: 'business',
      sector: 'craftsmanship',
      description: 'makes and repairs locks.',
      domSub: 'dom',
      dailyWage: 130,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'lord': {
      sv: 1150,
      type: 'profession',
      sector: 'government and law',
      description: 'some sort of noble.',
      domSub: 'dom',
      dailyWage: 400,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      }

    },
    'lumberjack': {
      sv: 350,
      type: 'labourer',
      sector: 'agriculture',
      description: 'fells trees, cuts them into logs, and transports them to a sawmill.',
      domSub: 'dom',
      dailyWage: 80,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          coworker: {
            relationship: 'co-worker',
            probability: 20,
            base: {
              profession: npc.profession
            }
          }
        };
      }

    },
    'maid': {
      sv: 250,
      type: 'labourer',
      sector: 'craftsmanship',
      description: 'a domestic servant of a household.',
      domSub: 'sub',
      dailyWage: 80,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          coworker: {
            relationship: 'co-worker',
            probability: 20,
            base: {
              profession: npc.profession
            }
          }
        };
      }

    },
    'masseur': {
      sv: 1550,
      type: 'profession',
      sector: 'business',
      description: 'performs massages.',
      domSub: 'sub',
      dailyWage: 100,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'merchant': {
      isBackground: true,
      sv: 650,
      type: 'business',
      sector: 'business',
      description: 'sells and trades goods.',
      dailyWage: 120,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      professionOrigin: ['I grew up poor. I learnt to hock stuff off to feed myself.', 'Some people just have the gift of the gab- I have a talent for sales.', 'I love gold. Unashamedly, I really do. So what? Selling is an honest living. Sue me.', 'I spent my youth selling whatever scraps I could find, never got tired of it.'],
      background: {
        'commoner': 8,
        'charlatan': 2,
        'noble': 3,
        'folk hero': 1,
        'soldier': 1,
        'urchin': 3
      }
    },
    'messenger': {
      sv: 1250,
      type: 'labourer',
      sector: 'communications',
      description: 'carries messages between recipients.',
      dailyWage: 90,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      professionOrigin: ['I was always good at running- being a messenger was a natural extension of that.']
    },
    'midwife': {
      sv: 650,
      type: 'labourer',
      sector: 'science',
      description: 'assists in childbirth and the care of women giving birth.',
      domSub: 'sub',
      dailyWage: 80,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      professionOrigin: ["I have always loved children, and can't bear the thought of a woman being alone during childbirth."]
    },
    'miller': {
      sv: 650,
      type: 'business',
      sector: 'agriculture',
      description: 'owns or works in a grain mill.',
      domSub: 'dom',
      dailyWage: 110,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'miner': {
      sv: 550,
      type: 'labourer',
      sector: 'agriculture',
      description: 'works underground in mines in order to obtain minerals such as coal, diamonds, or gold.',
      domSub: 'dom',
      dailyWage: 60,
      socialClass: 'paupery',

      socialClassRoll() {
        return 5 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          coworker: {
            relationship: 'co-worker',
            probability: 20,
            base: {
              profession: npc.profession
            }
          }
        };
      }

    },
    'minister': {
      sv: 950,
      type: 'profession',
      sector: 'government and law',
      description: 'assists with the administration of business.',
      domSub: 'dom',
      dailyWage: 190,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'minstrel': {
      sv: 1450,
      type: 'profession',
      sector: 'arts',
      description: 'recites lyric or heroic poetry for nobility.',
      domSub: 'dom',
      dailyWage: 130,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          liege: {
            relationship: 'liege',
            reciprocalRelationship: npc.profession,

            exclusions(town, npc) {
              if (town.npcRelations) {
                if (town.npcRelations[npc.key]) {
                  return !town.npcRelations[npc.key].map(r => {
                    return r.relation;
                  }).includes('liege');
                }
              }
            },

            probability: 20,
            base: {
              socialClass: 'nobility'
            }
          }
        };
      }

    },
    'friar': {
      sv: 1450,
      type: 'profession',
      sector: 'religion',
      description: 'a member of a religious community of men, usually a cloistered one, potentially living under vows of poverty, chastity, and obedience.',
      domSub: 'dom',
      dailyWage: 30,

      function(town, npc) {
        if (npc.roll.religiosity < 70 || !npc.roll.religiosity) {
          npc.roll.religiosity = random(70, 100);
        }
      },

      socialClass: 'paupery',

      socialClassRoll() {
        return 5 + dice(8, 6);
      },

      exclusions(town, npc) {
        if (npc.gender !== 'man') return false;
      }

    },
    'mortician': {
      sv: 650,
      type: 'profession',
      sector: 'science',
      description: 'prepares dead bodies for burial or cremation and makes arrangements for funerals.',
      dailyWage: 120,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'necromancer': {
      sv: 6150,
      type: 'profession',
      sector: 'magic',
      description: 'communicates with and conjures the spirits of the dead.',
      domSub: 'dom',
      dailyWage: 300,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      }

    },
    'noble': {
      sv: 3150,
      isBackground: true,
      synonyms: ['nobleman', 'noblewoman'],
      type: 'profession',
      sector: 'government and law',
      description: 'a person belonging to a class with high social or political status.',
      dailyWage: 300,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      },

      professionOrigin: ['My family has owned lands for centuries.', 'I was bestowed an estate for my service.', 'I earnt my place as a noble, working tirelessly day in, day out.', "Nepotism may have had a small part to play for my current position, I'll admit."]
    },
    'nun': {
      sv: 2150,
      type: 'profession',
      sector: 'religion',
      description: 'a member of a religious community of women, usually a cloistered one, potentially living under vows of poverty, chastity, and obedience.',
      dailyWage: 50,

      function(town, npc) {
        if (npc.roll.religiosity < 70 || !npc.roll.religiosity) {
          npc.roll.religiosity = random(70, 100);
        }
      },

      socialClass: 'paupery',

      socialClassRoll() {
        return 5 + dice(8, 6);
      },

      exclusions(town, npc) {
        if (npc.gender !== 'woman') return false;
      }

    },
    'nurse': {
      sv: 1150,
      type: 'profession',
      sector: 'science',
      description: 'cares for the sick or infirm, especially in a hospital.',
      domSub: 'sub',
      dailyWage: 120,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          coworker: {
            relationship: 'co-worker',
            probability: 20,
            base: {
              profession: npc.profession
            }
          }
        };
      }

    },
    'painter': {
      sv: 1500,
      isHobby: true,
      type: 'business',
      sector: 'arts',
      description: 'paints pictures using a variety of different substances.',
      domSub: 'sub',
      dailyWage: 100,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'patissier': {
      sv: 1500,
      type: 'business',
      sector: 'hospitality',
      description: 'maker or seller of pastries and cakes.',
      domSub: 'sub',
      dailyWage: 110,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'perfumer': {
      sv: 3150,
      type: 'business',
      sector: 'craftsmanship',
      description: 'expert on creating perfume compositions.',
      dailyWage: 160,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'philosopher': {
      sv: 7150,
      type: 'profession',
      sector: 'science',
      description: 'a scholar of the fundamental nature of knowledge, reality, and existence.',
      domSub: 'dom',
      dailyWage: 150,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      }

    },
    'physician': {
      sv: 4150,
      type: 'profession',
      sector: 'science',
      description: 'a qualified practitioner of medicine.',
      domSub: 'dom',
      dailyWage: 200,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'pilgrim': {
      sv: 5150,
      type: 'labourer',
      sector: 'outcast',
      description: 'journeys to some sacred place as an act of religious devotion, occasionally to settle there.',
      dailyWage: 50,

      function(town, npc) {
        if (npc.roll.religiosity < 70 || !npc.roll.religiosity) {
          npc.roll.religiosity = random(70, 100);
        }
      },

      socialClass: 'paupery',

      socialClassRoll() {
        return 5 + dice(8, 6);
      }

    },
    'politician': {
      sv: 4000,
      type: 'profession',
      sector: 'government and law',
      description: 'holding or seeking office in government.',
      domSub: 'dom',
      dailyWage: 800,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      },

      professionOrigin: ['I dared to dream that I could change the world, and rise above the others.', 'I became furious with the corruption in politics, so I decided to enter the rat-race myself.', 'I thought that I could do a better job than the last guy. I was right.'],
      background: {
        'commoner': 8,
        'noble': 13,
        'folk hero': 4,
        'soldier': 3,
        'urchin': 2
      }
    },
    'prime minister': {
      sv: 4000,
      synonyms: ['governor'],
      type: 'profession',
      sector: 'government and law',
      description: 'democratically holds the highest position of office.',
      domSub: 'dom',
      dailyWage: 800,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      },

      professionOrigin: ["I was elected as the prime minister. It's both an honour and a true burden to serve.", "I got elected, and now I'm the top brass. Everyone else will realise soon enough that things run differently when the adults are in charge!", 'I think that the election was rigged against me, but I managed to beat those crooks anyways!'],
      background: {
        'commoner': 3,
        'noble': 7,
        'folk hero': 4,
        'soldier': 3,
        'urchin': 1
      }
    },
    'potter': {
      sv: 1150,
      type: 'business',
      sector: 'craftsmanship',
      description: 'makes pots, bowls, plates, etc., out of clay.',
      dailyWage: 110,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'priest': {
      sv: 600,
      type: 'profession',
      sector: 'religion',
      description: 'has the authority to perform certain rites and administer certain sacraments.',
      domSub: 'dom',
      dailyWage: 190,

      function(town, npc) {
        if (npc.roll.religiosity < 70 || !npc.roll.religiosity) {
          npc.roll.religiosity = random(70, 100);
        }
      },

      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      },

      professionOrigin: ['I heard the calling of priesthood from a very young age- my path was never in question.', "I was initially going to be a chef- but then, one day, I felt the urge to go to church. I've never looked back."]
    },
    'privateer': {
      sv: 1150,
      type: 'labourer',
      sector: 'military',
      description: 'engages in maritime warfare under a commission of war.',
      domSub: 'dom',
      dailyWage: 200,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'professor': {
      sv: 3150,
      type: 'profession',
      sector: 'science',
      description: 'a teacher of the highest rank in a college or university.',
      domSub: 'dom',
      dailyWage: 350,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      }

    },
    'roofer': {
      sv: 1800,
      type: 'labourer',
      sector: 'construction',
      description: 'builds and repairs roofs.',
      domSub: 'dom',
      dailyWage: 100,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'ropemaker': {
      sv: 1850,
      type: 'business',
      sector: 'craftsmanship',
      description: 'braids rope.',
      domSub: 'sub',
      dailyWage: 90,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'rugmaker': {
      sv: 1850,
      type: 'business',
      sector: 'craftsmanship',
      description: 'makes and repairs rugs by braiding, hooking, weaving, etc.',
      dailyWage: 80,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'saddler': {
      sv: 1000,
      type: 'business',
      sector: 'craftsmanship',
      description: 'makes and repairs saddlery.',
      dailyWage: 90,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'sailor': {
      sv: 150,
      isBackground: true,
      type: 'labourer',
      sector: 'transportation',
      description: 'works as a member of the crew of a commercial or naval ship or boat.',
      domSub: 'dom',
      dailyWage: 140,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      professionOrigin: ['I can handle the rough seas, and the pay is alright, so here I am, a sailor.', "I don't like the sea all that much, but the pay is okay.", 'I love the sea, and would feel homesick on land. The sea is where I belong.'],

      relationships(town, npc) {
        return {
          coworker: {
            relationship: 'co-worker',
            probability: 20,
            base: {
              profession: npc.profession
            }
          }
        };
      }

    },
    'sculptor': {
      sv: 2500,
      type: 'business',
      sector: 'arts',
      description: 'crafts art by carving or casting blocks of marble, stones, or other hardened minerals.',
      dailyWage: 150,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'scavenger': {
      sv: 350,
      type: 'labourer',
      sector: 'unemployed',
      description: 'searches for and collects discarded items.',
      domSub: 'sub',
      dailyWage: 30,
      socialClass: 'paupery',

      socialClassRoll() {
        return 5 + dice(8, 6);
      }

    },
    'scholar': {
      sv: 2250,
      type: 'profession',
      sector: 'science',
      description: 'a specialist in a particular branch of study who pursues the acquisition of knowledge.',
      domSub: 'dom',
      dailyWage: 180,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'seamstress': {
      sv: 450,
      type: 'labourer',
      sector: 'craftsmanship',
      description: 'makes, alters, repairs, as well as occasionally designing garments.',
      domSub: 'sub',
      dailyWage: 190,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'seer': {
      sv: 3500,
      type: 'profession',
      sector: 'magic',
      description: 'able to see what the future holds through supernatural insight.',
      domSub: 'dom',
      dailyWage: 400,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'servant': {
      sv: 350,
      type: 'labourer',
      sector: 'hospitality',
      description: 'performs duties for others, especially a person employed in a house or as a personal attendant.',
      domSub: 'sub',
      dailyWage: 100,
      socialClass: 'paupery',

      socialClassRoll() {
        return 5 + dice(8, 6);
      },

      professionOrigin: ["Believe it or not, I didn't exactly hope to be a servant- terrible hours, awful pay, and having to work for some stuck up noble? Ugh.", 'Being a servant was all the work that I could find.'],

      relationships() {
        return {
          coworker: {
            relationship: 'employer',
            reciprocalRelationship: 'servant',
            probability: 20,
            base: {
              socialClass: 'nobility'
            }
          }
        };
      }

    },
    'shaman': {
      sv: 750,
      type: 'profession',
      sector: 'magic',
      description: 'accesses and influences the world of good and evil spirits.',
      domSub: 'dom',
      dailyWage: 300,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'shepherd': {
      sv: 150,
      type: 'labourer',
      sector: 'agriculture',
      description: 'herds, tends, and guards sheep.',
      dailyWage: 90,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      professionOrigin: ['Being a shepherd is easy enough- sheep are good company, if you take the time to get to know them.']
    },
    "ship's captain": {
      sv: 950,
      type: 'profession',
      sector: 'military',
      description: 'commands a ship.',
      domSub: 'dom',
      dailyWage: 500,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'shoemaker': {
      sv: 150,
      type: 'business',
      sector: 'craftsmanship',
      description: 'makes shoes out of different materials.',
      dailyWage: 120,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'silversmith': {
      sv: 1250,
      type: 'business',
      sector: 'craftsmanship',
      description: 'a smith who specializes in precious metals.',
      domSub: 'dom',
      dailyWage: 200,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'slave': {
      sv: 150,
      type: 'labourer',
      sector: 'outcast',
      description: 'a person who is the legal property of another and forced to obey them.',
      dailyWage: 0,
      socialClass: 'indentured servitude',

      socialClassRoll() {
        return 5;
      },

      professionOrigin: ['I was born into slavery; this is the only life that I have ever known.', 'I was forced into slavery.', 'I was sold into slavery after being captured.'],

      relationships(town, npc) {
        return {
          liege: {
            relationship: 'slaver',
            reciprocalRelationship: npc.profession,

            exclusions(town, npc) {
              if (town.npcRelations) {
                if (town.npcRelations[npc.key]) {
                  return !town.npcRelations[npc.key].map(r => {
                    return r.relation;
                  }).includes('slaver');
                }
              }
            },

            probability: 20,
            base: {
              profession: 'slaver'
            }
          }
        };
      },

      exclusions(town, npc) {
        return !town.bans.includes('slavery');
      }

    },
    'slaver': {
      sv: 650,
      type: 'business',
      sector: 'business',
      description: 'deals with or owns slaves.',
      domSub: 'dom',
      dailyWage: 300,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          liege: {
            relationship: 'slave',
            reciprocalRelationship: npc.profession,
            probability: 20,
            base: {
              profession: 'slave'
            }
          }
        };
      },

      exclusions(town, npc) {
        return !town.bans.includes('slavery');
      }

    },
    'soldier': {
      sv: 1000,
      isBackground: true,
      type: 'profession',
      sector: 'military',
      description: 'serves in an army.',
      domSub: 'dom',
      dailyWage: 200,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          coworker: {
            relationship: 'co-worker',
            probability: 20,
            base: {
              profession: npc.profession
            }
          }
        };
      }

    },
    'conscripted soldier': {
      sv: 1000,
      isBackground: true,
      type: 'profession',
      sector: 'military',
      description: 'serves in an army against their will.',
      domSub: 'dom',
      dailyWage: 2,
      socialClass: 'indentured servitude',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          coworker: {
            relationship: 'co-worker',
            probability: 20,
            base: {
              profession: npc.profession
            }
          }
        };
      }

    },
    'spice merchant': {
      sv: 1500,
      type: 'business',
      sector: 'business',
      description: 'sells different kinds of spices.',
      dailyWage: 250,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'squire': {
      sv: 950,
      type: 'profession',
      sector: 'military',
      description: 'acts as an attendant to a knight before attempting to become a knight themselves.',
      domSub: 'dom',
      dailyWage: 150,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          liege: {
            relationship: 'liege',
            reciprocalRelationship: npc.profession,

            exclusions(town, npc) {
              if (town.npcRelations) {
                if (town.npcRelations[npc.key]) {
                  return !town.npcRelations[npc.key].map(r => {
                    return r.relation;
                  }).includes('liege');
                }
              }
            },

            probability: 20,
            base: {
              gender: 'man',
              profession: 'knight'
            }
          }
        };
      }

    },
    'stablehand': {
      sv: 550,
      type: 'labourer',
      sector: 'agriculture',
      description: 'works in a stable.',
      dailyWage: 80,
      socialClass: 'paupery',

      socialClassRoll() {
        return 5 + dice(8, 6);
      }

    },
    'stevedore': {
      sv: 550,
      synonyms: ['ship worker', 'dock worker'],
      type: 'labourer',
      sector: 'naval',
      description: 'loads and unloads cargo from ships.',
      domSub: 'dom',
      dailyWage: 80,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          coworker: {
            relationship: 'co-worker',
            probability: 20,
            base: {
              profession: npc.profession
            }
          }
        };
      }

    },
    'stonemason': {
      sv: 750,
      type: 'business',
      sector: 'construction',
      description: 'cuts and prepares stone for use in construction.',
      domSub: 'dom',
      dailyWage: 110,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'steward': {
      sv: 950,
      type: 'profession',
      sector: 'government and law',
      description: 'supervises both the estate and household of his lord or lady while they are away.',
      domSub: 'sub',
      dailyWage: 250,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          liege: {
            relationship: 'liege',
            reciprocalRelationship: npc.profession,

            exclusions(town, npc) {
              if (town.npcRelations) {
                if (town.npcRelations[npc.key]) {
                  return !town.npcRelations[npc.key].map(r => {
                    return r.relation;
                  }).includes('liege');
                }
              }
            },

            probability: 20,
            base: {
              socialClass: 'nobility'
            }
          }
        };
      }

    },
    'street seller': {
      sv: 550,
      type: 'business',
      sector: 'business',
      description: 'hocks goods on the street.',
      domSub: 'sub',
      dailyWage: 110,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'street sweeper': {
      sv: 450,
      type: 'labourer',
      sector: 'government and law',
      description: 'cleans streets of a town.',
      domSub: 'sub',
      dailyWage: 60,
      socialClass: 'paupery',

      socialClassRoll() {
        return 5 + dice(8, 6);
      }

    },
    'student': {
      sv: 3150,
      type: 'profession',
      sector: 'science',
      description: 'attends school or learns under other to enter and pursue a particular subject.',
      domSub: 'sub',
      dailyWage: 140,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'surgeon': {
      sv: 4150,
      type: 'profession',
      sector: 'science',
      description: 'practices surgery.',
      domSub: 'dom',
      dailyWage: 380,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'surveyor': {
      sv: 1150,
      type: 'profession',
      sector: 'business',
      description: 'establishes maps and boundaries for ownership or other purposes required by government or civil law.',
      dailyWage: 110,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'tailor': {
      sv: 250,
      type: 'business',
      sector: 'craftsmanship',
      description: 'makes, alters, repairs, as well as occasionally designing garments.',
      dailyWage: 100,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'tanner': {
      sv: 200,
      type: 'business',
      sector: 'craftsmanship',
      description: 'treats the skins and hides of animals to produce leather.',
      dailyWage: 70,
      socialClass: 'paupery',

      socialClassRoll() {
        return 5 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          coworker: {
            relationship: 'co-worker',
            probability: 20,
            base: {
              profession: npc.profession
            }
          }
        };
      }

    },
    'shopkeep': {
      sv: 450,
      type: 'business',
      sector: 'business',
      description: 'owns or runs a shop.',
      dailyWage: 100,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      professionOrigin: ["Selling goods is easy enough. Selling for a profit? That's harder."]
    },
    "shopkeep's assistant": {
      sv: 200,
      type: 'business',
      sector: 'business',
      description: 'runs or assists in running a shop.',
      domSub: 'sub',
      dailyWage: 25,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'tax collector': {
      sv: 1850,
      type: 'profession',
      sector: 'government and law',
      description: 'collects unpaid taxes from people, guilds, or businesses.',
      domSub: 'dom',
      dailyWage: 250,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      }

    },
    'teacher': {
      sv: 1450,
      type: 'profession',
      sector: 'science',
      description: 'instructs on a particular skill or subject.',
      domSub: 'sub',
      dailyWage: 140,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'thatcher': {
      sv: 350,
      type: 'labourer',
      sector: 'construction',
      description: 'builds and repairs roofs.',
      domSub: 'dom',
      dailyWage: 90,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          coworker: {
            relationship: 'co-worker',
            probability: 20,
            base: {
              profession: npc.profession
            }
          }
        };
      }

    },
    'thief': {
      sv: 850,
      type: 'profession',
      sector: 'crime',
      description: 'steals peoples property, especially by stealth and without using force or violence.',
      dailyWage: 120,
      socialClass: 'paupery',

      socialClassRoll() {
        return 5 + dice(8, 6);
      }

    },
    'torturer': {
      sv: 1850,
      type: 'profession',
      sector: 'military',
      description: 'inflicts severe pain on someone as a punishment or in order to force them to do or say something.',
      domSub: 'dom',
      dailyWage: 70,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      professionOrigin: ["I don't expect you to understand why I'm a torturer. It's a job, alright?"],

      relationships(town, npc) {
        return {
          liege: {
            relationship: 'liege',
            reciprocalRelationship: npc.profession,

            exclusions(town, npc) {
              if (town.npcRelations) {
                if (town.npcRelations[npc.key]) {
                  return !town.npcRelations[npc.key].map(r => {
                    return r.relation;
                  }).includes('liege');
                }
              }
            },

            probability: 20,
            base: {
              socialClass: 'nobility'
            }
          }
        };
      },

      exclusions(town, npc) {
        return !town.disableNSFW;
      }

    },
    'town crier': {
      sv: 750,
      type: 'labourer',
      sector: 'communications',
      description: 'makes public announcements in the streets or marketplace.',
      dailyWage: 60,
      socialClass: 'paupery',

      socialClassRoll() {
        return 5 + dice(8, 6);
      }

    },
    'toymaker': {
      sv: 2500,
      type: 'profession',
      sector: 'craftsmanship',
      description: 'makes and repairs toys.',
      dailyWage: 90,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'vendor': {
      sv: 1150,
      type: 'business',
      sector: 'business',
      description: 'deals items in the street.',
      domSub: 'sub',
      dailyWage: 70,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'veterinarian': {
      sv: 1250,
      type: 'profession',
      sector: 'agriculture',
      description: 'treats diseased or injured animals.',
      dailyWage: 120,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'vintner': {
      sv: 850,
      type: 'profession',
      sector: 'agriculture',
      description: 'engages in winemaking, especially with monitoring and harvesting the grapes.',
      domSub: 'dom',
      dailyWage: 110,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'weaver': {
      sv: 600,
      type: 'labourer',
      sector: 'craftsmanship',
      description: 'makes fabric by weaving fiber together.',
      domSub: 'sub',
      dailyWage: 90,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'wetnurse': {
      sv: 350,
      type: 'labourer',
      sector: 'family',
      description: "a woman employed to suckle another woman's child.",
      domSub: 'sub',
      dailyWage: 90,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      exclusions(town, npc) {
        return Boolean(npc.gender === 'woman');
      },

      professionOrigin: ["I sell my body for what it is worth. It is what it is- at least it's just an innocent baby."],

      relationships(town, npc) {
        return {
          liege: {
            relationship: 'liege',
            reciprocalRelationship: npc.profession,

            exclusions(town, npc) {
              if (town.npcRelations) {
                if (town.npcRelations[npc.key]) {
                  return !town.npcRelations[npc.key].map(r => {
                    return r.relation;
                  }).includes('liege');
                }
              }
            },

            probability: 20,
            base: {
              socialClass: 'nobility'
            }
          }
        };
      }

    },
    'woodcarver': {
      sv: 2450,
      type: 'business',
      sector: 'craftsmanship',
      description: 'fashions wood into various shapes.',
      dailyWage: 110,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'wood seller': {
      sv: 2150,
      type: 'business',
      sector: 'business',
      description: 'sells wood, typically logs.',
      dailyWage: 100,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'wrestler': {
      sv: 6150,
      isHobby: true,
      type: 'labourer',
      sector: 'arts',
      description: 'performs in matches involving grappling and grappling-type techniques.',
      dailyWage: 140,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'writer': {
      sv: 7150,
      type: 'profession',
      sector: 'arts',
      description: 'commits his or her thoughts, ideas, etc., into written language.',
      domSub: 'dom',
      dailyWage: 140,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'animal/Monster Handler': {
      sv: 5000,
      type: 'profession',
      sector: 'agriculture',
      description: 'responsible for the safe keeping, dietary care, and exercise of animals or monsters.',
      domSub: 'dom',
      dailyWage: 90,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          liege: {
            relationship: 'liege',
            reciprocalRelationship: npc.profession,

            exclusions(town, npc) {
              if (town.npcRelations) {
                if (town.npcRelations[npc.key]) {
                  return !town.npcRelations[npc.key].map(r => {
                    return r.relation;
                  }).includes('liege');
                }
              }
            },

            probability: 20,
            base: {
              socialClass: 'nobility'
            }
          }
        };
      }

    },
    'arborist': {
      sv: 1000,
      type: 'profession',
      sector: 'agriculture',
      description: 'maintains and cares for trees, often by surgically removing dying limbs.',
      dailyWage: 90,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'baler': {
      sv: 800,
      type: 'profession',
      sector: 'agriculture',
      description: 'bales hay, or in the mills, wool and cotton goods.',
      domSub: 'dom',
      dailyWage: 40,
      socialClass: 'paupery',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'beekeeper': {
      sv: 2000,
      type: 'profession',
      sector: 'agriculture',
      description: 'owns and breeds bees, especially for their honey.',
      domSub: 'sub',
      dailyWage: 110,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'breeder': {
      sv: 1000,
      type: 'profession',
      sector: 'agriculture',
      description: 'breeds livestock, animals, or monsters.',
      dailyWage: 120,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'dairymaid': {
      sv: 500,
      type: 'profession',
      sector: 'agriculture',
      description: 'milks cows and makes cheese and butter.',
      domSub: 'sub',
      dailyWage: 60,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      relationships() {
        return {
          coworker: {
            relationship: 'co-worker',
            reciprocalRelationship: 'co-worker',
            probability: 20,
            base: {
              profession: 'cowherd'
            }
          }
        };
      }

    },
    'falconer': {
      sv: 4000,
      type: 'profession',
      sector: 'agriculture',
      description: 'keeps, trains, and hunts with falcons, hawks, or other birds of prey.',
      domSub: 'dom',
      dailyWage: 150,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          liege: {
            relationship: 'liege',
            reciprocalRelationship: npc.profession,

            exclusions(town, npc) {
              if (town.npcRelations) {
                if (town.npcRelations[npc.key]) {
                  return !town.npcRelations[npc.key].map(r => {
                    return r.relation;
                  }).includes('liege');
                }
              }
            },

            probability: 20,
            base: {
              socialClass: 'nobility'
            }
          }
        };
      }

    },
    'florist': {
      sv: 3500,
      isHobby: true,
      type: 'business',
      sector: 'agriculture',
      description: 'grows and arranges plants and cut flowers.',
      domSub: 'sub',
      dailyWage: 130,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'forager': {
      sv: 500,
      type: 'profession',
      sector: 'agriculture',
      description: 'searches for food in the wild.',
      dailyWage: 20,
      socialClass: 'paupery',

      socialClassRoll() {
        return 5 + dice(8, 6);
      }

    },
    'forester': {
      sv: 1000,
      type: 'labourer',
      sector: 'agriculture',
      description: 'supervises the wellbeing of a forest.',
      dailyWage: 240,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'fowler': {
      sv: 750,
      type: 'profession',
      sector: 'agriculture',
      description: 'catches or ensnares birds.',
      dailyWage: 80,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      relationships() {
        return {
          supplier: {
            relationship: 'client',
            reciprocalRelationship: 'supplier',
            probability: 20,
            base: {
              profession: 'plumer'
            }
          }
        };
      }

    },
    'gamekeeper': {
      sv: 4500,
      type: 'profession',
      sector: 'agriculture',
      description: 'breeds and protects game, typically for a large estate.',
      dailyWage: 230,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          liege: {
            relationship: 'liege',
            reciprocalRelationship: npc.profession,

            exclusions(town, npc) {
              if (town.npcRelations) {
                if (town.npcRelations[npc.key]) {
                  return !town.npcRelations[npc.key].map(r => {
                    return r.relation;
                  }).includes('liege');
                }
              }
            },

            probability: 20,
            base: {
              socialClass: 'nobility'
            }
          }
        };
      }

    },
    'groom': {
      sv: 2500,
      type: 'profession',
      sector: 'agriculture',
      description: 'cleans and brushes the coats horses, dogs, or other animals.',
      domSub: 'sub',
      dailyWage: 140,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'herder': {
      sv: 100,
      type: 'profession',
      sector: 'agriculture',
      description: 'supervises a herd of livestock or makes a living from keeping livestock, especially in open country.',
      domSub: 'dom',
      dailyWage: 90,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      professionOrigin: ["Livestock are simple. Feed 'em, keep 'em warm, then come slaughter time, you slaughter them. It's people that are hard."],

      relationships() {
        return {
          coworker: {
            relationship: 'co-worker',
            reciprocalRelationship: 'co-worker',
            probability: 20,
            base: {
              profession: 'cowherd'
            }
          }
        };
      }

    },
    'horse trainer': {
      sv: 1000,
      type: 'profession',
      sector: 'agriculture',
      description: 'tends to horses and teaches them different disciplines.',
      dailyWage: 210,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'master-of-Horses': {
      sv: 5000,
      type: 'profession',
      sector: 'agriculture',
      description: 'supervises and commands all horses under a jurisdiction.',
      domSub: 'dom',
      dailyWage: 700,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      }

    },
    'master-of-Hounds': {
      sv: 7500,
      type: 'profession',
      sector: 'agriculture',
      description: 'maintains a pack of hounds and their associated staff, equipment, and hunting arrangements.',
      domSub: 'dom',
      dailyWage: 900,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          liege: {
            relationship: 'liege',
            reciprocalRelationship: npc.profession,

            exclusions(town, npc) {
              if (town.npcRelations) {
                if (town.npcRelations[npc.key]) {
                  return !town.npcRelations[npc.key].map(r => {
                    return r.relation;
                  }).includes('liege');
                }
              }
            },

            probability: 20,
            base: {
              socialClass: 'nobility'
            }
          }
        };
      }

    },
    'pathfinder': {
      sv: 1000,
      type: 'profession',
      sector: 'agriculture',
      description: 'scouts ahead and discovers a path or way for others.',
      domSub: 'dom',
      dailyWage: 90,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'plumer': {
      sv: 2000,
      type: 'profession',
      sector: 'agriculture',
      description: 'hunts birds for their plumes.',
      domSub: 'dom',
      dailyWage: 110,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'prospector': {
      sv: 500,
      type: 'labourer',
      sector: 'mining',
      description: 'searches for mineral deposits, especially by drilling and excavation.',
      domSub: 'dom',
      dailyWage: 80,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'renderer': {
      sv: 3500,
      type: 'profession',
      sector: 'agriculture',
      description: 'converts waste animal tissue into usable materials.',
      dailyWage: 70,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      professionOrigin: ['Apologies for the smell. Rendering is not a pleasant profession, believe me, I know.']
    },
    'thresher': {
      sv: 300,
      type: 'labourer',
      sector: 'agriculture',
      description: 'separates grain from the plants by beating.',
      dailyWage: 50,
      socialClass: 'paupery',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      professionOrigin: ["Believe it or not, I don't do this backbreaking work for fun- it's all I could find."],

      relationships(town, npc) {
        return {
          coworker: {
            relationship: 'co-worker',
            probability: 20,
            base: {
              profession: npc.profession
            }
          }
        };
      }

    },
    'trapper': {
      sv: 800,
      type: 'profession',
      sector: 'agriculture',
      description: 'traps wild animals, especially for their fur.',
      dailyWage: 60,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'zookeeper': {
      sv: 10000,
      type: 'profession',
      sector: 'agriculture',
      description: 'maintains and cares for animals or monsters in a zoo.',
      domSub: 'dom',
      dailyWage: 180,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'construction Worker': {
      sv: 300,
      type: 'labourer',
      sector: 'construction',
      description: 'a laborer in the physical construction of a built environment and its infrastructure.',
      domSub: 'dom',
      dailyWage: 100,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'general contractor': {
      sv: 5000,
      type: 'profession',
      sector: 'construction',
      description: 'supervises a construction site, manages its vendors and trades, and communicates information to all involved parties.',
      domSub: 'dom',
      dailyWage: 300,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'glazier': {
      sv: 500,
      type: 'labourer',
      sector: 'construction',
      description: 'fits glass into windows and doors.',
      dailyWage: 120,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'plasterer': {
      sv: 750,
      type: 'labourer',
      sector: 'construction',
      description: 'applies plaster to walls, ceilings, or other surfaces.',
      dailyWage: 110,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'roadlayer': {
      sv: 3000,
      synonyms: ['streetlayer', 'street layer'],
      type: 'labourer',
      sector: 'construction',
      description: 'paves roads or streets.',
      dailyWage: 80,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'acrobat': {
      sv: 2500,
      type: 'profession',
      sector: 'arts',
      description: 'performs spectacular gymnastic feats.',
      domSub: 'sub',
      dailyWage: 130,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'trapezist': {
      sv: 3500,
      type: 'profession',
      sector: 'arts',
      description: 'performs acrobatics high above the ground on a tightrope or trapeze.',
      domSub: 'sub',
      dailyWage: 140,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'arranger': {
      sv: 2000,
      type: 'profession',
      sector: 'arts',
      description: 'adapts a musical composition for performance.',
      domSub: 'sub',
      dailyWage: 130,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'athlete': {
      sv: 500,
      type: 'profession',
      sector: 'arts',
      description: 'proficient in sports and other forms of physical exercise.',
      domSub: 'dom',
      dailyWage: 130,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'busker': {
      sv: 2000,
      type: 'profession',
      sector: 'outcast',
      description: 'performs in a public place, often for money.',
      dailyWage: 50,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'celebrity': {
      sv: 10000,
      type: 'profession',
      sector: 'arts',
      description: 'a famous person.',
      domSub: 'dom',
      dailyWage: 1000,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      },

      professionOrigin: ["I became famous after I received a lot of attention. Now, I live off that. It's a sweet gig, you should try it!"]
    },
    'choirmaster': {
      sv: 1000,
      isHobby: true,
      type: 'profession',
      sector: 'arts',
      description: 'trains a choir and orchestrates their singing when they perform.',
      domSub: 'sub',
      dailyWage: 140,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'clown': {
      sv: 3000,
      isHobby: true,
      type: 'profession',
      sector: 'arts',
      description: 'comic entertainer who wears a traditional costume and exaggerated makeup.',
      dailyWage: 100,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'comedian': {
      sv: 5000,
      isHobby: true,
      type: 'profession',
      sector: 'arts',
      description: 'entertainer whose act is designed to make an audience laugh.',
      dailyWage: 110,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'conductor': {
      sv: 8000,
      isHobby: true,
      type: 'profession',
      sector: 'arts',
      description: 'directs the performance of an orchestra.',
      domSub: 'dom',
      dailyWage: 150,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'contortionist': {
      sv: 5000,
      type: 'profession',
      sector: 'arts',
      description: 'twists and bends their body into strange and unnatural positions.',
      domSub: 'sub',
      dailyWage: 130,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'curator': {
      sv: 2500,
      isHobby: true,
      type: 'business',
      sector: 'arts',
      description: 'keeper and custodian of a museum or other collections of precious items.',
      domSub: 'dom',
      dailyWage: 180,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          liege: {
            relationship: 'liege',
            reciprocalRelationship: npc.profession,

            exclusions(town, npc) {
              if (town.npcRelations) {
                if (town.npcRelations[npc.key]) {
                  return !town.npcRelations[npc.key].map(r => {
                    return r.relation;
                  }).includes('liege');
                }
              }
            },

            probability: 20,
            base: {
              socialClass: 'nobility'
            }
          }
        };
      }

    },
    'costumer': {
      sv: 3500,
      type: 'profession',
      sector: 'arts',
      description: 'makes theatrical costumes.',
      domSub: 'sub',
      dailyWage: 110,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'equilibrist': {
      sv: 3000,
      type: 'profession',
      sector: 'arts',
      description: 'performs balancing feats.',
      domSub: 'sub',
      dailyWage: 130,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'fashion designer': {
      sv: 5000,
      isHobby: true,
      type: 'business',
      sector: 'arts',
      description: 'applies design, aesthetics and natural beauty to garments and their accessories.',
      domSub: 'sub',
      dailyWage: 200,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'glasspainter': {
      sv: 5000,
      type: 'profession',
      sector: 'arts',
      description: 'produces colorful designs on or in glass.',
      dailyWage: 160,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'juggler': {
      sv: 3000,
      isHobby: true,
      type: 'profession',
      sector: 'arts',
      description: 'keeps several objects in motion in the air at the same time by alternately tossing and catching them.',
      dailyWage: 100,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'limner': {
      sv: 7000,
      type: 'profession',
      sector: 'arts',
      description: 'paints and calligraphs to adorn or enlighten scrolls and manuscripts.',
      dailyWage: 130,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'makeup artist': {
      sv: 4500,
      type: 'profession',
      sector: 'arts',
      description: 'applies cosmetics to models, actors, nobles, etc.',
      domSub: 'sub',
      dailyWage: 100,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          employer: {
            relationship: 'employer',
            reciprocalRelationship: npc.profession,

            exclusions(town, npc) {
              if (town.npcRelations) {
                if (town.npcRelations[npc.key]) {
                  return !town.npcRelations[npc.key].map(r => {
                    return r.relation;
                  }).includes('employer');
                }
              }
            },

            probability: 20,
            base: {
              socialClass: 'nobility',
              profession: random(['model', 'actor', 'noble'])
            }
          }
        };
      }

    },
    'artisan': {
      sv: 4500,
      isHobby: true,
      synonyms: ['artist', 'art maker'],
      type: 'profession',
      sector: 'arts',
      description: 'creates some form of art.',
      domSub: 'sub',
      dailyWage: 100,
      socialClass: 'commoner',

      socialClassRoll() {
        return 40 + dice(8, 6);
      }

    },
    'model': {
      sv: 3500,
      type: 'profession',
      sector: 'arts',
      description: 'poses as a subject for an artist, fashion designer, or sculptor.',
      domSub: 'sub',
      dailyWage: 180,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'musician': {
      sv: 800,
      isHobby: true,
      type: 'profession',
      sector: 'arts',
      description: 'plays a musical instrument.',
      domSub: 'sub',
      dailyWage: 100,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          coworker: {
            relationship: 'band mate',
            probability: 20,
            base: {
              profession: npc.profession
            }
          }
        };
      }

    },
    'playwright': {
      sv: 2500,
      isHobby: true,
      type: 'profession',
      sector: 'arts',
      description: 'writes plays or musicals.',
      domSub: 'sub',
      dailyWage: 110,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'poet': {
      sv: 3500,
      isHobby: true,
      type: 'profession',
      sector: 'arts',
      description: 'writes ballads, epics, sonnets, or other forms of poetry.',
      domSub: 'sub',
      dailyWage: 110,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'ringmaster': {
      sv: 3500,
      type: 'business',
      sector: 'arts',
      description: 'master of ceremony who introduces the circus acts to the audience.',
      domSub: 'dom',
      dailyWage: 500,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'ropewalker': {
      sv: 4000,
      synonyms: ['trapeze artist'],
      type: 'profession',
      sector: 'arts',
      description: 'walks along a tightrope to entertain others.',
      dailyWage: 130,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'singer': {
      sv: 2000,
      type: 'profession',
      sector: 'arts',
      description: 'sings with or without instrumental accompaniment.',
      domSub: 'sub',
      dailyWage: 130,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          coworker: {
            relationship: 'band mate',
            probability: 20,
            base: {
              profession: random([npc.profession, 'musician'])
            }
          }
        };
      }

    },
    'skald': {
      sv: 5000,
      type: 'profession',
      sector: 'arts',
      description: 'composes and recites poems honoring heroes and their deeds.',
      domSub: 'sub',
      dailyWage: 120,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'stage magician': {
      sv: 3500,
      type: 'profession',
      sector: 'arts',
      description: 'deceives their audience with seemingly impossible feats while using only natural means.',
      domSub: 'dom',
      dailyWage: 200,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'stuntman': {
      sv: 5000,
      type: 'profession',
      sector: 'arts',
      description: 'performs dangerous stunts for their audience.',
      domSub: 'dom',
      dailyWage: 140,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'tattooist': {
      sv: 3000,
      type: 'business',
      sector: 'arts',
      description: 'illustrates the skin with indelible patterns, pictures, legends, etc.',
      domSub: 'dom',
      dailyWage: 200,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'theater director': {
      sv: 5000,
      type: 'business',
      sector: 'arts',
      description: 'supervises and orchestrates the mounting of a theatre production by unifying various endeavors and aspects of production.',
      domSub: 'dom',
      dailyWage: 200,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'accountant': {
      sv: 3000,
      type: 'business',
      sector: 'business',
      description: 'keeps and inspects financial accounts.',
      dailyWage: 200,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'actuary': {
      sv: 6000,
      type: 'business',
      sector: 'government and law',
      description: 'compiles and analyzes statistics and uses them to calculate risk.',
      dailyWage: 200,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'animal collector': {
      sv: 10000,
      isHobby: true,
      type: 'business',
      sector: 'agriculture',
      description: 'collects and deals in rare and exotic animals and monsters.',
      dailyWage: 300,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'business owner': {
      sv: 500,
      type: 'business',
      sector: 'business',
      description: 'owns a business entity in an attempt to profit from its successful operations.',
      domSub: 'dom',
      dailyWage: 100,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'debt collector': {
      sv: 3500,
      type: 'business',
      sector: 'business',
      description: 'recovers money owed on delinquent accounts.',
      domSub: 'dom',
      dailyWage: 150,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'draper': {
      sv: 2500,
      type: 'business',
      sector: 'business',
      description: 'an alcohol merchant.',
      dailyWage: 100,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      relationships() {
        return {
          supplier: {
            relationship: 'client',
            reciprocalRelationship: 'supplier',
            probability: 20,
            base: {
              profession: 'bartender'
            }
          }
        };
      }

    },
    'appraiser': {
      sv: 5000,
      type: 'profession',
      sector: 'business',
      description: 'assesses the monetary value of something.',
      dailyWage: 100,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'auctioneer': {
      sv: 4500,
      type: 'profession',
      sector: 'business',
      description: 'conducts auctions by accepting bids and declaring goods sold.',
      dailyWage: 100,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'bagniokeeper': {
      sv: 1500,
      type: 'business',
      sector: 'business',
      description: 'owner of a bath house or brothel.',
      dailyWage: 300,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'bookkeeper': {
      sv: 2500,
      type: 'business',
      sector: 'business',
      description: 'keeps records of financial affairs.',
      dailyWage: 110,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'collector': {
      sv: 3000,
      isHobby: true,
      type: 'business',
      sector: 'business',
      description: 'collects things of a specified type, professionally or as a hobby.',
      dailyWage: 300,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'entrepreneur': {
      sv: 5000,
      isHobby: true,
      type: 'business',
      sector: 'business',
      description: 'organizes and operates a business or businesses, taking on greater than normal financial risks in order to do so.',
      domSub: 'dom',
      dailyWage: 300,
      socialClass: 'nobility',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'moneychanger': {
      sv: 2500,
      type: 'business',
      sector: 'government and law',
      description: 'exchanges one currency for another.',
      dailyWage: 200,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'moneylender': {
      sv: 1500,
      type: 'business',
      sector: 'business',
      description: 'lends money to others who pay interest.',
      dailyWage: 300,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'peddler': {
      sv: 350,
      type: 'business',
      sector: 'business',
      description: 'travels from place to place selling assorted items.',
      dailyWage: 80,
      socialClass: 'paupery',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'plantation owner': {
      sv: 1500,
      type: 'business',
      sector: 'business',
      description: 'an owner of an estate on which crops are cultivated by resident labor, typically slave labor.',
      dailyWage: 300,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      relationships() {
        return {
          slave: {
            relationship: 'slave',
            reciprocalRelationship: 'owner',
            probability: 20,
            base: {
              profession: 'slave'
            }
          }
        };
      },

      exclusions(town, npc) {
        return !town.bans.includes('slavery');
      }

    },
    'speculator': {
      sv: 9000,
      isHobby: true,
      type: 'profession',
      sector: 'business',
      description: 'invests in stocks, property, or other ventures in the hope of making a profit.',
      dailyWage: 300,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'thrift dealer': {
      sv: 800,
      type: 'business',
      sector: 'business',
      description: 'deals in secondhand items.',
      dailyWage: 70,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'tradesman': {
      sv: 500,
      type: 'business',
      sector: 'business',
      description: 'deals exclusively in bartering.',
      dailyWage: 60,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'billboard poster': {
      sv: 1000,
      type: 'labourer',
      sector: 'business',
      description: 'a person who puts up notices, signs and advertisements.',
      dailyWage: 60,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'courier': {
      sv: 300,
      type: 'labourer',
      sector: 'business',
      description: 'transports packages and documents.',
      dailyWage: 50,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'interpreter': {
      sv: 5000,
      synonyms: ['translator'],
      type: 'profession',
      sector: 'business',
      description: 'interprets language and its meaning, especially within ancient manuscripts.',
      dailyWage: 190,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'coinsmith': {
      sv: 10000,
      type: 'business',
      sector: 'craftsmanship',
      description: 'makes currency for the government.',
      dailyWage: 300,
      socialClass: 'commoner',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'bookbinder': {
      sv: 5000,
      type: 'business',
      sector: 'craftsmanship',
      description: 'binds books and wraps scrolls.',
      dailyWage: 70,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      relationships() {
        return {
          colleague: {
            relationship: 'colleague',
            probability: 20,
            base: {
              profession: 'librarian'
            }
          }
        };
      }

    },
    'bottler': {
      sv: 3000,
      type: 'labourer',
      sector: 'craftsmanship',
      description: 'bottles drinks and other liquids.',
      dailyWage: 80,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'bowyer': {
      sv: 500,
      type: 'business',
      sector: 'craftsmanship',
      description: 'makes bows and crossbows.',
      dailyWage: 110,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'broom Maker': {
      sv: 4500,
      type: 'business',
      sector: 'craftsmanship',
      description: 'makes brooms and brushes.',
      dailyWage: 90,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'candlemaker': {
      sv: 2000,
      type: 'business',
      sector: 'craftsmanship',
      description: 'makes candles and wax from honey and tallow.',
      dailyWage: 110,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'cartwright': {
      sv: 500,
      type: 'labourer',
      sector: 'craftsmanship',
      description: 'makes and repairs carts and wagons.',
      dailyWage: 90,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'cutler': {
      sv: 7500,
      type: 'profession',
      sector: 'craftsmanship',
      description: 'makes cutlery.',
      dailyWage: 100,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'dyer': {
      sv: 5000,
      type: 'labourer',
      sector: 'craftsmanship',
      description: 'dyes cloth and other materials.',
      dailyWage: 120,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'embroiderer': {
      sv: 2500,
      type: 'labourer',
      sector: 'craftsmanship',
      description: 'ornaments with needlework.',
      dailyWage: 130,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'engraver': {
      sv: 1000,
      type: 'profession',
      sector: 'craftsmanship',
      description: 'incises a design onto a hard surface by cutting grooves into it.',
      dailyWage: 100,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'farrier': {
      sv: 2000,
      type: 'labourer',
      sector: 'craftsmanship',
      description: "trims and shoes horse's hooves.",
      domSub: 'dom',
      dailyWage: 70,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'fletcher': {
      sv: 1500,
      type: 'profession',
      sector: 'craftsmanship',
      description: 'makes and repairs arrows.',
      domSub: 'dom',
      dailyWage: 90,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'furniture artisan': {
      sv: 2500,
      type: 'profession',
      sector: 'craftsmanship',
      description: 'makes and repairs furniture.',
      dailyWage: 120,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'glassworker': {
      sv: 5000,
      type: 'profession',
      sector: 'craftsmanship',
      description: 'blows glass planes and items.',
      domSub: 'dom',
      dailyWage: 120,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'instrument Maker': {
      sv: 7500,
      isHobby: true,
      type: 'profession',
      sector: 'craftsmanship',
      description: 'makes and repairs musical instruments.',
      dailyWage: 150,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'lapidary': {
      sv: 5000,
      isHobby: true,
      type: 'profession',
      sector: 'craftsmanship',
      description: 'turns stone, minerals, or gemstones into decorative items such as cabochons, engraved gems, and faceted designs.',
      dailyWage: 200,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'luthier': {
      sv: 8500,
      isHobby: true,
      type: 'profession',
      sector: 'craftsmanship',
      description: 'makes and repairs stringed instruments.',
      dailyWage: 200,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'mercer': {
      sv: 2500,
      type: 'labourer',
      sector: 'craftsmanship',
      description: 'weaves textile fabrics, especially silks, velvets, and other fine materials.',
      domSub: 'sub',
      dailyWage: 120,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'optician': {
      sv: 6500,
      type: 'profession',
      sector: 'craftsmanship',
      description: 'makes and repairs eyeglasses.',
      domSub: 'dom',
      dailyWage: 190,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'printer': {
      sv: 2000,
      type: 'labourer',
      sector: 'craftsmanship',
      description: 'a person who applies pressure to an inked surface resting upon a print medium (such as paper or cloth), thereby transferring the ink to manufacture a text.',
      dailyWage: 140,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'restorer': {
      sv: 10000,
      isHobby: true,
      type: 'profession',
      sector: 'arts',
      description: 'repairs or renovates a work of art so as to return it to its original condition.',
      dailyWage: 200,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'soaper': {
      sv: 3000,
      type: 'labourer',
      sector: 'craftsmanship',
      description: 'makes soap from accumulated mutton fat, wood ash, and natural soda.',
      dailyWage: 70,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'taxidermist': {
      sv: 4000,
      type: 'profession',
      sector: 'craftsmanship',
      description: 'prepares, stuffs, and mounts the skins of animals.',
      dailyWage: 120,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'tinker': {
      sv: 3000,
      type: 'labourer',
      sector: 'craftsmanship',
      description: 'travels from place to place mending utensils.',
      dailyWage: 60,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'weaponsmith': {
      sv: 2500,
      type: 'business',
      sector: 'craftsmanship',
      description: 'specializes in making and repairing weapons.',
      domSub: 'dom',
      dailyWage: 190,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'wheelwright': {
      sv: 1500,
      type: 'labourer',
      sector: 'craftsmanship',
      description: 'makes and repairs wooden wheels.',
      dailyWage: 110,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'assassin': {
      sv: 5000,
      type: 'profession',
      sector: 'crime',
      description: 'murders through stealth for reasons pertaining to money, politics, or religion.',
      domSub: 'dom',
      dailyWage: 300,
      socialClass: 'commoner',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'bandit': {
      sv: 8000,
      type: 'profession',
      sector: 'crime',
      description: 'a robber or outlaw belonging to a gang and typically operating in an isolated or lawless area.',
      domSub: 'dom',
      dailyWage: 130,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          coworker: {
            relationship: 'fellow bandit',
            reciprocalRelationship: 'fellow bandit',
            probability: 20,
            base: {
              profession: npc.profession
            }
          }
        };
      }

    },
    'burglar': {
      sv: 500,
      type: 'profession',
      sector: 'crime',
      description: 'illegally enters buildings and steals things.',
      domSub: 'dom',
      dailyWage: 130,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'conman': {
      sv: 750,
      type: 'profession',
      sector: 'crime',
      description: 'tricks people by gaining their trust and persuading them to believe something that is not true in order to benefit from the encounter.',
      domSub: 'dom',
      dailyWage: 150,
      socialClass: 'commoner',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'gamefighter': {
      sv: 2000,
      type: 'profession',
      sector: 'crime',
      description: 'engages in arena matches in which animals or monsters are pitted against one another, typically to the death.',
      domSub: 'dom',
      dailyWage: 190,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'crime boss': {
      sv: 6000,
      type: 'profession',
      sector: 'crime',
      description: 'controls and supervises a criminal organization.',
      domSub: 'dom',
      dailyWage: 400,
      socialClass: 'nobility',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'cutpurse': {
      sv: 500,
      type: 'profession',
      sector: 'crime',
      description: 'a pickpocket or thief.',
      dailyWage: 100,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'drug dealer': {
      sv: 1500,
      type: 'profession',
      sector: 'crime',
      description: 'dealer of illegal substances.',
      domSub: 'dom',
      dailyWage: 200,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'drug lord': {
      sv: 6000,
      type: 'profession',
      sector: 'crime',
      description: 'controls a network of persons involved in the illegal drugs trade and transactions.',
      domSub: 'dom',
      dailyWage: 300,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      relationships() {
        return {
          coworker: {
            relationship: 'buyer',
            reciprocalRelationship: 'drug supplier',
            probability: 20,
            base: {
              profession: 'drug dealer'
            }
          }
        };
      }

    },
    'extortioner': {
      sv: 2000,
      type: 'profession',
      sector: 'crime',
      description: 'extorts money from someone by threatening to expose embarrassing information about them.',
      domSub: 'dom',
      dailyWage: 200,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'fence': {
      sv: 10000,
      type: 'profession',
      sector: 'crime',
      description: 'deals in stolen goods.',
      dailyWage: 200,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'forger': {
      sv: 10000,
      type: 'profession',
      sector: 'crime',
      description: 'produces fraudulent copies or imitations.',
      dailyWage: 300,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'fugitive': {
      sv: 2500,
      type: 'labourer',
      sector: 'crime',
      description: 'a person who has escaped from a place or is in hiding, especially to avoid arrest or persecution.',
      dailyWage: 20,
      socialClass: 'paupery',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'highwayman': {
      sv: 500,
      type: 'profession',
      sector: 'crime',
      description: 'robs travelers on a road.',
      domSub: 'dom',
      dailyWage: 70,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'kidnapper': {
      sv: 1500,
      type: 'profession',
      sector: 'crime',
      description: 'abducts people and holds them captive, typically to obtain a ransom.',
      domSub: 'dom',
      dailyWage: 80,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'loan shark': {
      sv: 4500,
      type: 'profession',
      sector: 'crime',
      description: 'charges extremely high rates of interest for moneylending, typically under illegal conditions.',
      domSub: 'dom',
      dailyWage: 300,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'pirate': {
      sv: 1500,
      type: 'profession',
      sector: 'crime',
      description: 'attacks and robs ships at sea.',
      dailyWage: 200,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'wannabe pirate': {
      sv: 1500,
      type: 'profession',
      sector: 'crime',
      description: 'dreams of becoming a full fledged pirate, but currently is just a rowdy sailor.',
      dailyWage: 150,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'poacher': {
      sv: 5000,
      type: 'labourer',
      sector: 'crime',
      description: 'hunts illegal game.',
      dailyWage: 200,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'poisoner': {
      sv: 7000,
      type: 'business',
      sector: 'crime',
      description: 'makes poisons to harm or kill.',
      dailyWage: 300,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'marauder': {
      sv: 3000,
      type: 'profession',
      sector: 'crime',
      description: 'makes sudden, unprompted attacks against defenseless or near-defenseless settlements.',
      domSub: 'dom',
      dailyWage: 300,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'smuggler': {
      sv: 2500,
      type: 'profession',
      sector: 'crime',
      description: 'manages the import or export of goods secretly, in violation of the law, especially without payment of legal duty.',
      dailyWage: 200,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'affeeror': {
      sv: 10000,
      type: 'profession',
      sector: 'government and law',
      description: 'determines the values of fines and amercements.',
      dailyWage: 200,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'agister': {
      sv: 1500,
      type: 'business',
      sector: 'business',
      description: 'affords pasture to the livestock of others for a price.',
      dailyWage: 120,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      }

    },
    'alderman': {
      sv: 1000,
      type: 'profession',
      sector: 'government and law',
      description: 'a civic dignitary in the local council ranked below the mayor.',
      domSub: 'dom',
      dailyWage: 500,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      }

    },
    'alienist': {
      sv: 3000,
      type: 'profession',
      sector: 'government and law',
      description: 'assesses the competence of a defendant in a court of law.',
      domSub: 'dom',
      dailyWage: 200,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          client: {
            relationship: 'client',
            reciprocalRelationship: npc.profession,
            probability: 20,
            base: {}
          }
        };
      }

    },
    'assay master': {
      sv: 10000,
      type: 'profession',
      sector: 'government and law',
      description: 'oversees the testing of currency.',
      dailyWage: 500,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'baron': {
      sv: 2500,
      type: 'profession',
      sector: 'government and law',
      description: 'a member of the lowest order of the nobility.',
      domSub: 'dom',
      dailyWage: 500,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      }

    },
    'chancellor': {
      sv: 5000,
      type: 'profession',
      sector: 'government and law',
      description: 'a senior state or legal official.',
      domSub: 'dom',
      dailyWage: 700,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      }

    },
    'chief': {
      sv: 9000,
      type: 'profession',
      sector: 'government and law',
      description: 'leads or rules a people or clan.',
      domSub: 'dom',
      dailyWage: 100,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      }

    },
    'conservationist': {
      sv: 3000,
      isHobby: true,
      type: 'profession',
      sector: 'government and law',
      description: 'advocates for the protection and preservation of the environment and wildlife.',
      dailyWage: 120,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'count': {
      sv: 7000,
      type: 'profession',
      sector: 'government and law',
      description: 'a nobleperson ranking above a viscount and below a marquess.',
      domSub: 'dom',
      dailyWage: 500,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      }

    },
    'duke': {
      sv: 15000,
      type: 'profession',
      sector: 'government and law',
      description: 'rules over a duchy and is of the highest rank below the monarch.',
      domSub: 'dom',
      dailyWage: 900,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      }

    },
    'emperor': {
      sv: 25000,
      type: 'profession',
      sector: 'government and law',
      description: 'the supreme sovereign ruler of an extensive group of states or countries under a single authority.',
      domSub: 'dom',
      dailyWage: 2400,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      }

    },
    'king': {
      sv: 20000,
      type: 'profession',
      sector: 'government and law',
      description: 'the ruler of an independent state and its people.',
      domSub: 'dom',
      dailyWage: 2400,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      }

    },
    'lady-in-Waiting': {
      sv: 3000,
      type: 'labourer',
      sector: 'government and law',
      description: 'attends a queen, princess, or other high-ranking feminine nobleperson.',
      dailyWage: 180,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          liege: {
            relationship: 'liege',
            reciprocalRelationship: npc.profession,

            exclusions(town, npc) {
              if (town.npcRelations) {
                if (town.npcRelations[npc.key]) {
                  return !town.npcRelations[npc.key].map(r => {
                    return r.relation;
                  }).includes('liege');
                }
              }
            },

            probability: 20,
            base: {
              socialClass: 'nobility',
              gender: 'woman'
            }
          }
        };
      },

      exclusions(town, npc) {
        if (npc.gender !== 'woman') return false;
      }

    },
    'marquess': {
      sv: 5000,
      type: 'profession',
      sector: 'government and law',
      description: 'a nobleperson ranking above a count and below a duke.',
      dailyWage: 600,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      }

    },
    'master-of-Coin': {
      sv: 7500,
      type: 'profession',
      sector: 'government and law',
      description: 'supervises the royal treasury, advises the monarch on financial matters, and is responsible for raising money through taxation.',
      domSub: 'dom',
      dailyWage: 700,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      }

    },
    'master-of-the-Revels': {
      sv: 1000,
      type: 'profession',
      sector: 'government and law',
      description: 'responsible for overseeing royal festivities.',
      domSub: 'dom',
      dailyWage: 700,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      }

    },
    'notary': {
      sv: 3000,
      isHobby: true,
      type: 'profession',
      sector: 'government and law',
      description: 'performs certain legal formalities, especially to draw up or certify contracts, deeds, and other documents for use in other jurisdictions.',
      dailyWage: 300,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'orator': {
      sv: 3000,
      type: 'profession',
      sector: 'government and law',
      description: 'makes statements on behalf of a group or individual nobleperson.',
      domSub: 'dom',
      dailyWage: 150,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          liege: {
            relationship: 'liege',
            reciprocalRelationship: npc.profession,

            exclusions(town, npc) {
              if (town.npcRelations) {
                if (town.npcRelations[npc.key]) {
                  return !town.npcRelations[npc.key].map(r => {
                    return r.relation;
                  }).includes('liege');
                }
              }
            },

            probability: 20,
            base: {
              socialClass: 'nobility'
            }
          }
        };
      }

    },
    'page': {
      sv: 3000,
      type: 'profession',
      sector: 'government and law',
      description: 'a young attendant to a person of noble rank.',
      domSub: 'sub',
      dailyWage: 80,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      relationships() {
        return {
          noble: {
            relationship: 'employer',
            reciprocalRelationship: 'page',
            probability: 20,
            base: {
              socialClass: 'nobility'
            }
          }
        };
      }

    },
    'prince': {
      sv: 6000,
      type: 'profession',
      sector: 'government and law',
      description: 'the direct descendant of a monarch.',
      domSub: 'dom',
      dailyWage: 500,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      }

    },
    'senator': {
      sv: 5000,
      type: 'profession',
      sector: 'government and law',
      description: 'partakes in governmental decision-making after being elected.',
      domSub: 'dom',
      dailyWage: 500,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          coworker: {
            relationship: 'co-worker',
            probability: 20,
            base: {
              profession: npc.profession
            }
          }
        };
      }

    },
    'sheriff': {
      sv: 4500,
      type: 'profession',
      sector: 'government and law',
      description: 'the chief executive officer in a county, having various administrative and judicial functions.',
      domSub: 'dom',
      dailyWage: 200,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'spymaster': {
      sv: 10000,
      type: 'profession',
      sector: 'government and law',
      description: 'directs a network of subordinate espionage agents for a state, kingdom, or empire.',
      domSub: 'dom',
      dailyWage: 800,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'tourist': {
      sv: 9000,
      type: 'profession',
      isHobby: true,
      sector: 'hospitality',
      description: 'Travels for a living, perhaps as a scout for royal visits.',
      domSub: 'dom',
      dailyWage: 200,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'viscount': {
      sv: 7000,
      type: 'profession',
      sector: 'government and law',
      description: 'a nobleperson ranking above a baron and below a count.',
      domSub: 'dom',
      dailyWage: 700,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      }

    },
    'ward': {
      sv: 3000,
      type: 'profession',
      sector: 'government and law',
      description: 'a member of a noble house who has been taken in by another noble family to be raised for a time.',
      dailyWage: 100,
      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      }

    },
    'acater': {
      sv: 3000,
      type: 'profession',
      sector: 'hospitality',
      description: 'provides and prepares foodstuffs or delicacies for events such as festivals.',
      dailyWage: 120,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'tunner': {
      sv: 5000,
      type: 'labourer',
      sector: 'agriculture',
      description: 'fills casks in a brewery or winery.',
      dailyWage: 30,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'butler': {
      sv: 2000,
      type: 'profession',
      sector: 'hospitality',
      description: 'the chief servant of a household.',
      dailyWage: 80,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      relationships() {
        return {
          noble: {
            relationship: 'employer',
            reciprocalRelationship: 'butler',
            probability: 20,
            base: {
              socialClass: 'nobility'
            }
          }
        };
      }

    },
    'caregiver': {
      sv: 1000,
      type: 'profession',
      sector: 'hospitality',
      description: 'looks after a sick, elderly, or disabled person.',
      domSub: 'sub',
      dailyWage: 70,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      relationships() {
        return {
          noble: {
            relationship: 'client',
            reciprocalRelationship: 'carer',
            probability: 20,
            base: {
              socialClass: 'nobility',
              ageStage: 'elderly'
            }
          }
        };
      }

    },
    'charcoal Maker': {
      sv: 2500,
      type: 'labourer',
      sector: 'business',
      description: 'manufactures charcoal by carbonizing wood in a kiln.',
      dailyWage: 80,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'chatelaine': {
      sv: 3000,
      type: 'profession',
      sector: 'hospitality',
      description: 'a person in charge of a large household.',
      dailyWage: 100,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      relationships() {
        return {
          noble: {
            relationship: 'employer',
            reciprocalRelationship: 'employee',

            exclusions(town, npc) {
              if (town.npcRelations) {
                if (town.npcRelations[npc.key]) {
                  return !town.npcRelations[npc.key].map(r => {
                    return r.relation;
                  }).includes('employer');
                }
              }
            },

            probability: 20,
            base: {
              socialClass: 'nobility'
            }
          }
        };
      }

    },
    'chimney sweeper': {
      sv: 2500,
      type: 'labourer',
      sector: 'business',
      description: 'a person, typically a child, who ascends chimneys to clean them.',
      dailyWage: 50,
      socialClass: 'paupery',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'clerk': {
      sv: 5000,
      type: 'profession',
      sector: 'business',
      description: 'undertakes routine administrative duties in a business or bank.',
      domSub: 'sub',
      dailyWage: 120,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'copyist': {
      sv: 3000,
      type: 'profession',
      sector: 'communication',
      description: 'makes copies of handwritten documents or music.',
      domSub: 'sub',
      dailyWage: 110,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'croupier': {
      sv: 1500,
      type: 'profession',
      sector: 'hospitality',
      description: 'runs a gaming table by gathering in and paying out money or tokens.',
      dailyWage: 200,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'exterminator': {
      sv: 2000,
      type: 'labourer',
      sector: 'agriculture',
      description: 'exterminates unwanted rodents and insects.',
      domSub: 'dom',
      dailyWage: 150,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'food and drink taster': {
      sv: 3500,
      type: 'profession',
      sector: 'hospitality',
      description: 'ingests food that was prepared for someone else to confirm it is safe to eat.',
      dailyWage: 80,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      relationships() {
        return {
          noble: {
            relationship: 'employer',
            reciprocalRelationship: 'food taster',

            exclusions(town, npc) {
              if (town.npcRelations) {
                if (town.npcRelations[npc.key]) {
                  return !town.npcRelations[npc.key].map(r => {
                    return r.relation;
                  }).includes('employer');
                }
              }
            },

            probability: 20,
            base: {
              socialClass: 'nobility'
            }
          }
        };
      }

    },
    'gongfarmer': {
      sv: 800,
      type: 'labourer',
      sector: 'agriculture',
      description: 'digs out and removes excrement from privies and cesspits.',
      domSub: 'dom',
      dailyWage: 50,
      socialClass: 'paupery',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'gravedigger': {
      sv: 500,
      type: 'labourer',
      sector: 'religion',
      description: 'digs graves for the purposes of a funeral ceremony.',
      domSub: 'dom',
      dailyWage: 40,

      function(town, npc) {
        if (npc.roll.religiosity < 70 || !npc.roll.religiosity) {
          npc.roll.religiosity = random(70, 100);
        }
      },

      socialClass: 'paupery',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'groundskeeper': {
      sv: 1000,
      type: 'labourer',
      sector: 'agriculture',
      description: 'maintains an athletic field, a park, or the grounds of a graveyard or other institution.',
      dailyWage: 70,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'kitchen drudge': {
      sv: 500,
      type: 'labourer',
      sector: 'business',
      description: 'performs menial work in a kitchen.',
      dailyWage: 50,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          coworker: {
            relationship: 'co-worker',
            probability: 20,
            base: {
              profession: npc.profession
            }
          }
        };
      }

    },
    'knacker': {
      sv: 2000,
      type: 'labourer',
      sector: 'agriculture',
      description: 'disposes of dead or unwanted animals.',
      dailyWage: 40,
      socialClass: 'paupery',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'lamplighter': {
      sv: 5000,
      type: 'labourer',
      sector: 'business',
      description: 'lights street or road lights at dusk.',
      dailyWage: 60,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'laundry worker': {
      sv: 2500,
      type: 'labourer',
      sector: 'business',
      description: 'a laborer who takes part in the washing, drying, and ironing of clothes and other fabric items.',
      domSub: 'sub',
      dailyWage: 40,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'lector': {
      sv: 4000,
      type: 'profession',
      sector: 'communications',
      description: 'reads to others while they work for entertainment.',
      dailyWage: 100,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      relationships() {
        return {
          noble: {
            relationship: 'employer',
            reciprocalRelationship: 'employee',

            exclusions(town, npc) {
              if (town.npcRelations) {
                if (town.npcRelations[npc.key]) {
                  return !town.npcRelations[npc.key].map(r => {
                    return r.relation;
                  }).includes('employer');
                }
              }
            },

            probability: 20,
            base: {
              socialClass: 'commoner'
            }
          }
        };
      }

    },
    'nanny': {
      sv: 800,
      type: 'labourer',
      sector: 'caregiver',
      description: 'a servant employed to look after a young child or children.',
      domSub: 'sub',
      dailyWage: 60,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          charge: {
            relationship: 'charge',
            reciprocalRelationship: npc.profession,

            exclusions(town, npc) {
              if (town.npcRelations) {
                if (town.npcRelations[npc.key]) {
                  return !town.npcRelations[npc.key].map(r => {
                    return r.relation;
                  }).includes('charge');
                }
              }
            },

            probability: 20,
            base: {
              socialClass: 'nobility',
              ageStage: 'child'
            }
          }
        };
      }

    },
    'operator': {
      sv: 2500,
      type: 'labourer',
      sector: 'construction',
      description: 'a laborer who operates equipment, typically in construction.',
      domSub: 'dom',
      dailyWage: 90,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'pastry chef': {
      sv: 1500,
      type: 'profession',
      sector: 'hospitality',
      description: 'makes desserts, especially cakes and pastries.',
      dailyWage: 120,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'plumber': {
      sv: 3000,
      type: 'profession',
      sector: 'construction',
      description: 'installs and repairs the fittings of water supply and sanitation.',
      domSub: 'dom',
      dailyWage: 110,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'porter': {
      sv: 3000,
      type: 'profession',
      sector: 'agriculture',
      description: 'carries luggage and other loads.',
      domSub: 'dom',
      dailyWage: 70,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'harlot': {
      sv: 400,
      synonyms: ['prostitute', 'lady of the night', 'call girl', 'sex worker'],
      type: 'profession',
      sector: 'business',
      description: 'engages in sexual activity for payment.',
      domSub: 'sub',
      dailyWage: 120,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          coworker: {
            relationship: 'co-worker',
            probability: 20,
            base: {
              profession: npc.profession
            }
          }
        };
      },

      exclusions(town, npc) {
        return !town.disableNSFW;
      }

    },
    'quarryman': {
      sv: 1200,
      type: 'labourer',
      sector: 'construction',
      description: 'quarries stone.',
      dailyWage: 80,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'stagehand': {
      sv: 2500,
      type: 'labourer',
      sector: 'arts',
      description: 'moves scenery or props before or during the performance of a theatrical production.',
      dailyWage: 80,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'street cleaner': {
      sv: 4000,
      type: 'labourer',
      sector: 'construction',
      description: 'cleans streets and alleyways after dark.',
      domSub: 'sub',
      dailyWage: 50,
      socialClass: 'paupery',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'talent scout': {
      sv: 7000,
      type: 'profession',
      sector: 'arts',
      description: 'searches for talented individuals who can be employed or promoted.',
      domSub: 'sub',
      dailyWage: 110,
      socialClass: 'nobility',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'trainer': {
      sv: 5000,
      isHobby: true,
      type: 'profession',
      sector: 'adventuring',
      description: 'trains someone in a particular skill, usually physical, for money.',
      dailyWage: 120,
      socialClass: 'commoner',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          client: {
            relationship: 'client',
            reciprocalRelationship: npc.profession,

            exclusions(town, npc) {
              if (town.npcRelations) {
                if (town.npcRelations[npc.key]) {
                  return !town.npcRelations[npc.key].map(r => {
                    return r.relation;
                  }).includes('client');
                }
              }
            },

            probability: 20,
            base: {
              socialClass: 'nobility'
            }
          }
        };
      }

    },
    'water bearer': {
      sv: 200,
      type: 'labourer',
      sector: 'agriculture',
      description: 'brings water from rivers, wells, and lakes back to their settlement.',
      dailyWage: 40,
      socialClass: 'paupery',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'abjurer': {
      sv: 5000,
      type: 'profession',
      sector: 'magic',
      description: 'a mage focused in protective spells.',
      dailyWage: 300,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'alchemist': {
      sv: 2000,
      type: 'profession',
      sector: 'science',
      description: 'transforms or creates something within nature through the magical and scientific manipulation of chemicals.',
      dailyWage: 1500,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'archmage': {
      sv: 15000,
      type: 'profession',
      sector: 'magic',
      description: 'an extremely powerful mage.',
      domSub: 'dom',
      dailyWage: 1800,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'artificer': {
      sv: 7500,
      type: 'profession',
      sector: 'magic',
      description: 'unlocks magic in everyday objects as well as being an inventor.',
      dailyWage: 700,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'conjuror': {
      sv: 7000,
      type: 'profession',
      sector: 'magic',
      description: 'conjures spirits or familiars.',
      dailyWage: 600,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'elementalist': {
      sv: 8000,
      type: 'profession',
      sector: 'magic',
      description: 'manipulates nature’s elements to their will.',
      dailyWage: 600,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'enchanter': {
      sv: 7500,
      type: 'profession',
      sector: 'magic',
      description: 'uses sorcery to put someone or something under a spell.',
      dailyWage: 3000,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'evoker': {
      sv: 8000,
      type: 'profession',
      sector: 'magic',
      description: 'manipulates energy or taps into an unseen source of power in order to produce a desired kinetic end.',
      dailyWage: 2300,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'hearth witch': {
      sv: 6000,
      type: 'profession',
      sector: 'magic',
      description: 'incorporates spells and enchantments in cooking.',
      dailyWage: 1800,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'illusionist': {
      sv: 7500,
      type: 'profession',
      sector: 'magic',
      description: 'performs tricks and spells that deceive the senses.',
      dailyWage: 400,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'mage': {
      sv: 5000,
      type: 'profession',
      sector: 'magic',
      description: 'a magic-user.',
      dailyWage: 500,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'medium': {
      sv: 8000,
      type: 'profession',
      sector: 'magic',
      description: 'uses extrasensory perception, magic, or divine powers to identify information hidden from the normal senses.',
      dailyWage: 400,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'meteorologist': {
      sv: 1000,
      type: 'profession',
      sector: 'magic',
      description: 'forecasts and manipulates weather.',
      dailyWage: 500,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'ritualist': {
      sv: 4000,
      type: 'profession',
      sector: 'magic',
      description: 'practices or advocates the observance of ritual (formula intended to trigger a magical effect on a person or objects).',
      dailyWage: 500,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'runecaster': {
      sv: 10000,
      type: 'profession',
      sector: 'magic',
      description: 'uses special alphabets to create runes (symbols possessing magical effects capable of being used multiple times).',
      dailyWage: 600,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'sage': {
      sv: 10000,
      isBackground: true,
      type: 'profession',
      sector: 'magic',
      description: 'a wise and experienced magic-user.',
      dailyWage: 500,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'shapeshifter': {
      sv: 7000,
      type: 'profession',
      sector: 'magic',
      description: 'a person with the ability to change their physical form.',
      dailyWage: 100,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'summoner': {
      sv: 8000,
      type: 'profession',
      sector: 'magic',
      description: 'a mage able to summon forth magical beasts, creatures, and monsters.',
      dailyWage: 200,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'transmuter': {
      sv: 8000,
      type: 'profession',
      sector: 'magic',
      description: 'alters matter in form, appearance, or nature.',
      dailyWage: 600,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'witchdoctor': {
      sv: 3500,
      type: 'profession',
      sector: 'magic',
      description: 'a tribal mage with powers of healing, divination, and protection against the magic of others.',
      dailyWage: 190,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'witch': {
      sv: 4000,
      type: 'profession',
      sector: 'magic',
      description: 'a woman who has supernatural powers and practices sorcery, typically in solitude.',
      dailyWage: 200,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'wordsmith': {
      sv: 9000,
      type: 'profession',
      sector: 'magic',
      description: 'draws their power from language and casts by dictation.',
      dailyWage: 200,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'admiral': {
      sv: 1000,
      type: 'profession',
      sector: 'military',
      description: 'commands a fleet or naval squadron.',
      domSub: 'dom',
      dailyWage: 500,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'bailiff': {
      sv: 5000,
      type: 'profession',
      sector: 'military',
      description: 'looks after prisoners.',
      domSub: 'dom',
      dailyWage: 200,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          prisoner: {
            relationship: 'prisoner',
            reciprocalRelationship: npc.profession,
            probability: 20,
            base: {}
          }
        };
      }

    },
    'bodyguard': {
      sv: 3000,
      type: 'profession',
      sector: 'adventuring',
      description: 'escorts and protects another person, especially a dignitary.',
      domSub: 'dom',
      dailyWage: 180,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      relationships() {
        return {
          noble: {
            relationship: 'employer',
            reciprocalRelationship: 'employee',

            exclusions(town, npc) {
              if (town.npcRelations) {
                if (town.npcRelations[npc.key]) {
                  return !town.npcRelations[npc.key].map(r => {
                    return r.relation;
                  }).includes('employer');
                }
              }
            },

            probability: 20,
            base: {
              socialClass: 'nobility'
            }
          }
        };
      }

    },
    'bouncer': {
      sv: 2500,
      type: 'profession',
      sector: 'adventuring',
      description: 'prevents troublemakers from entering or to eject them from the premises of an establishment.',
      domSub: 'dom',
      dailyWage: 170,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'castellan': {
      sv: 8000,
      type: 'profession',
      sector: 'government and law',
      description: 'the governor of a castle.',
      domSub: 'dom',
      dailyWage: 300,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'cavalier': {
      sv: 2000,
      type: 'profession',
      sector: 'military',
      description: 'a skilled horseback rider.',
      domSub: 'dom',
      dailyWage: 200,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'city watch': {
      sv: 4500,
      type: 'profession',
      sector: 'military',
      description: 'an officer of law enforcement who resides in larger towns or cities.',
      domSub: 'dom',
      dailyWage: 200,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          coworker: {
            relationship: 'co-worker',
            probability: 20,
            base: {
              profession: npc.profession
            }
          }
        };
      }

    },
    'commissar': {
      sv: 7500,
      type: 'profession',
      sector: 'military',
      description: 'teaches principles and policies to military units.',
      domSub: 'dom',
      dailyWage: 200,
      socialClass: 'commoner',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'constable': {
      sv: 500,
      type: 'profession',
      sector: 'military',
      description: 'an officer with limited policing authority, typically in a small town.',
      domSub: 'dom',
      dailyWage: 300,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'investigator': {
      sv: 5000,
      type: 'profession',
      sector: 'business',
      description: 'investigates and solves crimes.',
      domSub: 'dom',
      dailyWage: 200,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'fifer': {
      sv: 3000,
      type: 'profession',
      sector: 'military',
      description: 'a non-combatant foot soldier who sounds signals for changes in formation in combat.',
      domSub: 'dom',
      dailyWage: 200,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'duelist': {
      sv: 3000,
      isHobby: true,
      type: 'profession',
      sector: 'adventuring',
      description: 'skilled in one-on-one combat.',
      domSub: 'dom',
      dailyWage: 250,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'executioner': {
      sv: 2500,
      type: 'profession',
      sector: 'military',
      description: 'carries out a sentence of death on a legally condemned person.',
      domSub: 'dom',
      dailyWage: 80,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'firefighter': {
      sv: 500,
      type: 'labourer',
      sector: 'government and law',
      description: 'extinguishes fires.',
      dailyWage: 80,
      socialClass: 'paupery',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'inspection officer': {
      sv: 4000,
      type: 'profession',
      sector: 'military',
      description: 'responsible for the inspection of military units to ensure they meet appropriate standards of training and efficiency.',
      domSub: 'dom',
      dailyWage: 200,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'intelligence Officer': {
      sv: 10000,
      type: 'profession',
      sector: 'military',
      description: 'collects, compiles and organizes information about the enemy.',
      domSub: 'dom',
      dailyWage: 200,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'lieutenant': {
      sv: 2000,
      type: 'profession',
      sector: 'military',
      description: 'an officer of middle rank in the armed forces.',
      domSub: 'dom',
      dailyWage: 300,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'marksman': {
      sv: 800,
      type: 'profession',
      sector: 'military',
      description: 'in long-range weapons, such as the bow, crossbow, sling, etc. to inflict damage from afar.',
      domSub: 'dom',
      dailyWage: 200,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'marshall': {
      sv: 5000,
      type: 'profession',
      sector: 'military',
      description: 'has the charge of the cavalry in the household of a monarch.',
      domSub: 'dom',
      dailyWage: 500,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'medic': {
      sv: 600,
      type: 'profession',
      sector: 'military',
      description: 'a medical practitioner equipped for the battlefield.',
      dailyWage: 300,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'mercenary': {
      sv: 800,
      type: 'profession',
      sector: 'adventuring',
      description: 'a soldier without allegiance who works for money, typically a member of a company or guild.',
      domSub: 'dom',
      dailyWage: 200,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          coworker: {
            relationship: 'co-worker',
            probability: 20,
            base: {
              profession: npc.profession
            }
          }
        };
      }

    },
    'quartermaster': {
      sv: 3500,
      type: 'profession',
      sector: 'military',
      description: 'responsible for providing quarters, rations, clothing, and other supplies.',
      domSub: 'dom',
      dailyWage: 200,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'royal Guard': {
      sv: 5000,
      type: 'profession',
      sector: 'military',
      description: 'responsible for the protection of a royal person.',
      domSub: 'dom',
      dailyWage: 200,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'runner': {
      sv: 750,
      type: 'labourer',
      sector: 'military',
      description: 'carries information between lines in wartime.',
      dailyWage: 150,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'sapper': {
      sv: 5000,
      type: 'labourer',
      sector: 'military',
      description: 'a soldier responsible for tasks such as building and repairing roads and bridges, laying and clearing mines, etc.',
      domSub: 'dom',
      dailyWage: 150,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'sergeant': {
      sv: 8000,
      type: 'profession',
      sector: 'military',
      description: 'an officer instructed with a protective duty, typically worth more than other officers.',
      domSub: 'dom',
      dailyWage: 300,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'sergeant-at-arms': {
      sv: 5000,
      type: 'profession',
      sector: 'military',
      description: 'charged with keeping order during meetings and, if necessary, participates in battle.',
      domSub: 'dom',
      dailyWage: 300,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'scout': {
      sv: 5000,
      type: 'profession',
      sector: 'military',
      description: "sent ahead of a main force so as to gather information about the enemy's position, strength, or movements.",
      dailyWage: 100,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'siege artillerist': {
      sv: 10000,
      type: 'profession',
      sector: 'military',
      description: 'works the artillery machines of an army.',
      domSub: 'dom',
      dailyWage: 200,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'slave driver': {
      sv: 1500,
      type: 'profession',
      sector: 'agriculture',
      description: 'oversees and urges on slaves at work.',
      domSub: 'dom',
      dailyWage: 200,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      exclusions(town, npc) {
        return !town.bans.includes('slavery');
      }

    },
    'special force soldier': {
      sv: 6000,
      type: 'profession',
      sector: 'military',
      description: 'carries out special operations.',
      domSub: 'dom',
      dailyWage: 300,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'spy': {
      sv: 4500,
      type: 'profession',
      sector: 'military',
      description: 'secretly collects and reports information on the activities, movements, and plans of an enemy or competitor.',
      domSub: 'dom',
      dailyWage: 200,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          liege: {
            relationship: 'liege',
            reciprocalRelationship: npc.profession,

            exclusions(town, npc) {
              if (town.npcRelations) {
                if (town.npcRelations[npc.key]) {
                  return !town.npcRelations[npc.key].map(r => {
                    return r.relation;
                  }).includes('liege');
                }
              }
            },

            probability: 20,
            base: {
              socialClass: 'nobility'
            }
          }
        };
      }

    },
    'tactician': {
      sv: 7000,
      type: 'profession',
      sector: 'military',
      description: 'uses a carefully planned military strategy to achieve a specific end.',
      domSub: 'dom',
      dailyWage: 400,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'tollkeeper': {
      sv: 2000,
      type: 'profession',
      sector: 'government and law',
      description: 'collects tolls at a bridge, road etc. where a charge is made.',
      dailyWage: 80,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'warden': {
      sv: 5000,
      type: 'profession',
      sector: 'government and law',
      description: 'responsible for the supervision of a particular place or thing or for ensuring that regulations associated with it are obeyed.',
      domSub: 'dom',
      dailyWage: 150,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          liege: {
            relationship: 'liege',
            reciprocalRelationship: npc.profession,

            exclusions(town, npc) {
              if (town.npcRelations) {
                if (town.npcRelations[npc.key]) {
                  return !town.npcRelations[npc.key].map(r => {
                    return r.relation;
                  }).includes('liege');
                }
              }
            },

            probability: 20,
            base: {
              socialClass: 'nobility'
            }
          }
        };
      }

    },
    'warmage': {
      sv: 10000,
      type: 'profession',
      sector: 'military',
      description: 'a soldier skilled in destructive battle magic.',
      domSub: 'dom',
      dailyWage: 700,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'abbot': {
      sv: 6000,
      type: 'profession',
      sector: 'religion',
      description: 'the head of an abbey of monks.',
      domSub: 'dom',
      dailyWage: 700,

      function(town, npc) {
        if (npc.roll.religiosity < 70 || !npc.roll.religiosity) {
          npc.roll.religiosity = random(85, 100);
        }
      },

      socialClass: 'paupery',

      socialClassRoll() {
        return 5 + dice(8, 6);
      }

    },
    'acolyte': {
      sv: 3000,
      type: 'profession',
      sector: 'religion',
      description: 'assists the celebrant in a religious service or procession.',
      dailyWage: 200,

      function(town, npc) {
        if (npc.roll.religiosity < 70 || !npc.roll.religiosity) {
          npc.roll.religiosity = random(70, 100);
        }
      },

      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'almoner': {
      sv: 1500,
      type: 'profession',
      sector: 'religion',
      description: 'distributes money and food to poor people.',
      domSub: 'dom',
      dailyWage: 70,

      function(town, npc) {
        if (npc.roll.religiosity < 70 || !npc.roll.religiosity) {
          npc.roll.religiosity = random(70, 100);
        }
      },

      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'archbishop': {
      sv: 10000,
      type: 'profession',
      sector: 'religion',
      description: 'responsible for an archdiocese, their surrounding district.',
      domSub: 'dom',
      dailyWage: 900,

      function(town, npc) {
        if (npc.roll.religiosity < 70 || !npc.roll.religiosity) {
          npc.roll.religiosity = random(80, 100);
        }
      },

      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'bishop': {
      sv: 5000,
      type: 'profession',
      sector: 'religion',
      description: 'a senior member of the clergy, usually in charge of a diocese and empowered to confer holy orders.',
      domSub: 'dom',
      dailyWage: 600,

      function(town, npc) {
        if (npc.roll.religiosity < 70 || !npc.roll.religiosity) {
          npc.roll.religiosity = random(80, 100);
        }
      },

      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'cantor': {
      sv: 2000,
      isHobby: true,
      type: 'profession',
      sector: 'religion',
      description: 'sings liturgical music and leads prayer in a synagogue.',
      domSub: 'sub',
      dailyWage: 150,

      function(town, npc) {
        if (npc.roll.religiosity < 70 || !npc.roll.religiosity) {
          npc.roll.religiosity = random(70, 100);
        }
      },

      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'cardinal': {
      sv: 6500,
      type: 'profession',
      sector: 'religion',
      description: 'a leading dignitary of a church, nominated by the highest official.',
      domSub: 'dom',
      dailyWage: 600,

      function(town, npc) {
        if (npc.roll.religiosity < 70 || !npc.roll.religiosity) {
          npc.roll.religiosity = random(70, 100);
        }
      },

      socialClass: 'nobility',

      socialClassRoll() {
        return 75 + dice(8, 6);
      }

    },
    'confessor': {
      sv: 4000,
      isHobby: true,
      type: 'profession',
      sector: 'religion',
      description: 'hears confessions and gives absolution and spiritual counsel.',
      domSub: 'dom',
      dailyWage: 120,

      function(town, npc) {
        if (npc.roll.religiosity < 70 || !npc.roll.religiosity) {
          npc.roll.religiosity = random(70, 100);
        }
      },

      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'cultist': {
      sv: 2000,
      type: 'profession',
      sector: 'religion',
      description: 'a member of a cult who generally lives outside of conventional society and worships an unorthodox patron.',
      dailyWage: 100,

      function(town, npc) {
        if (npc.roll.religiosity < 70 || !npc.roll.religiosity) {
          npc.roll.religiosity = random(90, 100);
        }
      },

      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      relationships() {
        return {
          noble: {
            relationship: 'cult leader',
            reciprocalRelationship: 'cult follower',

            exclusions(town, npc) {
              if (town.npcRelations) {
                if (town.npcRelations[npc.key]) {
                  return !town.npcRelations[npc.key].map(r => {
                    return r.relation;
                  }).includes('cult leader');
                }
              }
            },

            probability: 20,
            base: {
              socialClass: 'nobility',
              profession: 'cult leader'
            }
          }
        };
      }

    },
    'cult leader': {
      sv: 6000,
      type: 'profession',
      sector: 'religion',
      description: 'the organizational leader of a cult who is occasionally also the founder.',
      domSub: 'dom',
      dailyWage: 400,

      function(town, npc) {
        if (npc.roll.religiosity < 70 || !npc.roll.religiosity) {
          npc.roll.religiosity = random(95, 100);
        }
      },

      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      relationships() {
        return {
          cult: {
            relationship: 'follower',
            reciprocalRelationship: 'cult leader',
            probability: 20,
            base: {
              profession: 'cultist'
            }
          }
        };
      }

    },
    'deacon': {
      sv: 800,
      type: 'profession',
      sector: 'religion',
      description: 'an ordained minister of an order ranking below that of priest.',
      domSub: 'dom',
      dailyWage: 200,

      function(town, npc) {
        if (npc.roll.religiosity < 70 || !npc.roll.religiosity) {
          npc.roll.religiosity = random(70, 100);
        }
      },

      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'diviner': {
      sv: 9000,
      type: 'profession',
      sector: 'religion',
      description: 'seeks ultimate divination in order to further understand or meet godly substance.',
      domSub: 'dom',
      dailyWage: 300,

      function(town, npc) {
        if (npc.roll.religiosity < 70 || !npc.roll.religiosity) {
          npc.roll.religiosity = random(90, 100);
        }
      },

      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'exorcist': {
      sv: 6000,
      type: 'profession',
      sector: 'religion',
      description: 'expels or attempts to expel evil spirits from a person or place.',
      domSub: 'dom',
      dailyWage: 300,

      function(town, npc) {
        if (npc.roll.religiosity < 70 || !npc.roll.religiosity) {
          npc.roll.religiosity = random(70, 100);
        }
      },

      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'high priest': {
      sv: 15000,
      type: 'profession',
      sector: 'religion',
      description: 'the chief priest of a religion.',
      domSub: 'dom',
      dailyWage: 500,

      function(town, npc) {
        if (npc.roll.religiosity < 70 || !npc.roll.religiosity) {
          npc.roll.religiosity = random(70, 100);
        }
      },

      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'inquisitor': {
      sv: 3000,
      type: 'profession',
      sector: 'religion',
      description: 'seeks to eliminate heresy and other things contrary to the doctrine or teachings of their faith.',
      domSub: 'dom',
      dailyWage: 400,

      function(town, npc) {
        if (npc.roll.religiosity < 70 || !npc.roll.religiosity) {
          npc.roll.religiosity = random(90, 100);
        }
      },

      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'missionary': {
      sv: 2000,
      isHobby: true,
      type: 'profession',
      sector: 'religion',
      description: 'goes on a religious mission to promote their faith in a foreign place.',
      domSub: 'sub',
      dailyWage: 50,

      function(town, npc) {
        if (npc.roll.religiosity < 70 || !npc.roll.religiosity) {
          npc.roll.religiosity = random(80, 100);
        }
      },

      socialClass: 'paupery',

      socialClassRoll() {
        return 5 + dice(8, 6);
      }

    },
    'pardoner': {
      sv: 700,
      type: 'profession',
      sector: 'religion',
      description: 'raises money for religious works by soliciting offerings and granting indulgences.',
      domSub: 'dom',
      dailyWage: 120,

      function(town, npc) {
        if (npc.roll.religiosity < 70 || !npc.roll.religiosity) {
          npc.roll.religiosity = random(70, 100);
        }
      },

      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'prophet': {
      sv: 8000,
      type: 'profession',
      sector: 'religion',
      description: 'regarded as an inspired teacher or proclaimer of the will of God.',
      domSub: 'dom',
      dailyWage: 10000,

      function(town, npc) {
        if (npc.roll.religiosity < 70 || !npc.roll.religiosity) {
          npc.roll.religiosity = 100;
        }
      },

      socialClass: 'paupery',

      socialClassRoll() {
        return 5 + dice(8, 6);
      }

    },
    'sexton': {
      sv: 800,
      type: 'labourer',
      sector: 'religion',
      description: 'looks after a church and churchyard, sometimes acting as bell-ringer and formerly as a gravedigger.',
      domSub: 'dom',
      dailyWage: 80,

      function(town, npc) {
        if (npc.roll.religiosity < 70 || !npc.roll.religiosity) {
          npc.roll.religiosity = random(70, 100);
        }
      },

      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'templar': {
      sv: 500,
      type: 'profession',
      sector: 'military',
      description: 'fights in a religious military order.',
      domSub: 'dom',
      dailyWage: 200,

      function(town, npc) {
        if (npc.roll.religiosity < 70 || !npc.roll.religiosity) {
          npc.roll.religiosity = random(90, 100);
        }
      },

      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          coworker: {
            relationship: 'co-worker',
            probability: 20,
            base: {
              profession: npc.profession
            }
          }
        };
      }

    },
    'abecedarian': {
      sv: 1500,
      isHobby: true,
      type: 'profession',
      sector: 'science',
      description: 'teaches the illiterate.',
      dailyWage: 60,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'anthropologist': {
      sv: 5000,
      type: 'profession',
      sector: 'science',
      description: 'studies the customs, beliefs, and relationships of humanoids and intellectually and culturally advanced creatures.',
      dailyWage: 120,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'apprentice': {
      sv: 200,
      type: 'profession',
      sector: 'craftsmanship',
      description: 'studies a trade under a skilled employer.',
      dailyWage: 70,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      },

      relationships() {
        return {
          coworker: {
            relationship: 'mentor',
            reciprocalRelationship: 'teacher',

            exclusions(town, npc) {
              if (town.npcRelations) {
                if (town.npcRelations[npc.key]) {
                  return !town.npcRelations[npc.key].map(r => {
                    return r.relation;
                  }).includes('mentor');
                }
              }
            },

            probability: 20,
            base: {
              socialClass: 'commoner'
            }
          }
        };
      }

    },
    'archaeologist': {
      sv: 2000,
      type: 'profession',
      sector: 'science',
      description: 'studies humanoid history and prehistory through the excavation of sites and the analysis of artifacts and other physical remains.',
      dailyWage: 120,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'assayer': {
      sv: 2000,
      type: 'profession',
      sector: 'science',
      description: 'determiner of the proportions of metal in ore and the amount of copper, silver, gold, or platinum in coins.',
      dailyWage: 230,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'astronomer': {
      sv: 5000,
      type: 'profession',
      sector: 'science',
      description: 'makes observations of celestial and scientific phenomena within the material plane.',
      dailyWage: 200,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'bloodletter': {
      sv: 3000,
      type: 'profession',
      sector: 'science',
      description: "surgically removes some of a patient's blood for therapeutic purposes.",
      domSub: 'dom',
      dailyWage: 200,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'botanist': {
      sv: 2000,
      isHobby: true,
      type: 'profession',
      sector: 'science',
      description: 'an expert in or student of the scientific study of plants.',
      dailyWage: 150,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'chemist': {
      sv: 3500,
      isHobby: true,
      type: 'profession',
      sector: 'science',
      description: 'engaged in chemical research or experiments.',
      domSub: 'dom',
      dailyWage: 150,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'dean': {
      sv: 8000,
      type: 'profession',
      sector: 'science',
      description: 'the head of a college or university.',
      dailyWage: 500,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'drakologist': {
      sv: 10000,
      type: 'profession',
      sector: 'science',
      description: 'studies or is an expert in the branch of zoology concerned with dragons.',
      domSub: 'dom',
      dailyWage: 190,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'engineer': {
      sv: 5000,
      type: 'profession',
      sector: 'science',
      description: 'designer of a machine or structure.',
      domSub: 'dom',
      dailyWage: 180,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'entomologist': {
      sv: 6000,
      type: 'profession',
      sector: 'science',
      description: 'studies or is an expert in the branch of zoology concerned with insects.',
      dailyWage: 175,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'horologist': {
      sv: 8000,
      type: 'profession',
      sector: 'science',
      description: 'a scholar of time and entropy.',
      dailyWage: 150,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'mathematician': {
      sv: 5000,
      isHobby: true,
      type: 'profession',
      sector: 'science',
      description: 'a scholar of the abstract science of number, quantity, and space.',
      dailyWage: 230,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'optometrist': {
      sv: 3000,
      type: 'profession',
      sector: 'science',
      description: 'examines the eyes for visual defects and prescribes eyeglasses.',
      dailyWage: 210,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'scribe': {
      sv: 2000,
      type: 'profession',
      sector: 'business',
      description: 'copies out manuscripts.',
      dailyWage: 90,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'theologian': {
      sv: 6000,
      type: 'profession',
      sector: 'science',
      description: 'engages in the study of the nature of God and religious belief.',
      dailyWage: 130,
      socialClass: 'commoner',

      socialClassRoll() {
        return 5 + dice(8, 6);
      }

    },
    'tutor': {
      sv: 600,
      type: 'profession',
      sector: 'science',
      description: 'charged with the instruction and guidance of another.',
      domSub: 'sub',
      dailyWage: 120,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      relationships() {
        return {
          noble: {
            relationship: 'employer',
            reciprocalRelationship: 'tutor',

            exclusions(town, npc) {
              if (town.npcRelations) {
                if (town.npcRelations[npc.key]) {
                  return !town.npcRelations[npc.key].map(r => {
                    return r.relation;
                  }).includes('employer');
                }
              }
            },

            probability: 20,
            base: {
              socialClass: 'nobility'
            }
          }
        };
      }

    },
    'zoologist': {
      sv: 3500,
      type: 'profession',
      sector: 'science',
      description: 'an expert in or a student of the behavior, physiology, classification, and distribution of animals.',
      dailyWage: 140,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'boatman': {
      sv: 500,
      type: 'profession',
      sector: 'naval',
      description: 'mans a small seacraft.',
      dailyWage: 80,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'bosun': {
      sv: 1000,
      type: 'profession',
      sector: 'naval',
      description: 'in charge of organizing the equipment and crew of a ship.',
      domSub: 'dom',
      dailyWage: 180,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'wagoner': {
      sv: 400,
      type: 'profession',
      sector: 'transportation',
      description: 'drives a horse-drawn wagon.',
      dailyWage: 90,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'cabin boy': {
      sv: 9000,
      type: 'profession',
      sector: 'naval',
      description: 'waits on the orders of a ships officers and passengers.',
      dailyWage: 60,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'charioteer': {
      sv: 3000,
      type: 'profession',
      sector: 'military',
      description: 'drives a chariot.',
      dailyWage: 80,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'carter': {
      sv: 500,
      type: 'business',
      sector: 'transportation',
      description: 'transports goods by cart.',
      dailyWage: 80,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'ferryman': {
      sv: 2500,
      type: 'profession',
      sector: 'naval',
      description: 'operates a ferry.',
      dailyWage: 80,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'first mate': {
      sv: 1000,
      type: 'profession',
      sector: 'naval',
      description: 'the deck officer second in command to the master of a ship.',
      domSub: 'dom',
      dailyWage: 230,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'helmsman': {
      sv: 2000,
      type: 'profession',
      sector: 'naval',
      description: 'steers a ship or boat.',
      domSub: 'dom',
      dailyWage: 180,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'navigator': {
      sv: 1500,
      type: 'profession',
      sector: 'naval',
      description: 'directs the route or course of a ship or other form of transportation, especially by using instruments and maps.',
      domSub: 'dom',
      dailyWage: 180,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'purser': {
      sv: 2500,
      type: 'profession',
      sector: 'naval',
      description: 'keeps the accounts of a ship, especially as the head steward on a passenger vessel.',
      domSub: 'dom',
      dailyWage: 210,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'shipwright': {
      sv: 3500,
      type: 'profession',
      sector: 'naval',
      description: 'a carpenter skilled in ship construction and repair.',
      domSub: 'dom',
      dailyWage: 130,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'adventurer': {
      sv: 2000,
      type: 'profession',
      sector: 'adventuring',
      description: 'wanders the world in search of knowledge, treasure, fame, glory or a multitude of additional wants and desires.',
      dailyWage: 200,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'beggar': {
      sv: 2500,
      type: 'profession',
      sector: 'outcast',
      description: 'lives by asking for money or food.',
      dailyWage: 10,
      socialClass: 'paupery',

      socialClassRoll() {
        return 5 + dice(8, 6);
      }

    },
    'monster hunter': {
      sv: 4500,
      isHobby: true,
      type: 'profession',
      sector: 'adventuring',
      description: 'takes on jobs to hunt down and kill or capture dangerous creatures.',
      dailyWage: 230,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'bounty hunter': {
      sv: 3500,
      isHobby: true,
      type: 'profession',
      sector: 'adventuring',
      description: 'pursues a criminal or fugitive for whom a reward is offered.',
      domSub: 'dom',
      dailyWage: 180,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'crossing sweeper': {
      sv: 6500,
      type: 'profession',
      sector: 'outcast',
      description: 'sweeps a path ahead of people crossing dirty urban streets in exchange for a gratuity.',
      dailyWage: 20,
      socialClass: 'paupery',

      socialClassRoll() {
        return 5 + dice(8, 6);
      }

    },
    'deserter': {
      sv: 3500,
      type: 'profession',
      sector: 'outcast',
      description: 'a member of the armed forces who has deserted.',
      domSub: 'dom',
      dailyWage: 15,
      socialClass: 'paupery',

      socialClassRoll() {
        return 5 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          'former sergeant': {
            relationship: 'former sergeant',
            reciprocalRelationship: npc.profession,

            exclusions(town, npc) {
              if (town.npcRelations) {
                if (town.npcRelations[npc.key]) {
                  return !town.npcRelations[npc.key].map(r => {
                    return r.relation;
                  }).includes('former sergeant');
                }
              }
            },

            probability: 20,
            base: {
              socialClass: 'nobility',
              profession: 'sergeant'
            }
          }
        };
      }

    },
    'disgraced noble': {
      sv: 5000,
      type: 'profession',
      sector: 'outcast',
      description: 'a person of high birth who has since loss their respect, honor, or esteem in some or all noble circles.',
      dailyWage: 100,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      relationships(town, npc) {
        return {
          liege: {
            relationship: 'liege',
            reciprocalRelationship: npc.profession,

            exclusions(town, npc) {
              if (town.npcRelations) {
                if (town.npcRelations[npc.key]) {
                  return !town.npcRelations[npc.key].map(r => {
                    return r.relation;
                  }).includes('liege');
                }
              }
            },

            probability: 20,
            base: {
              socialClass: 'nobility'
            }
          }
        };
      }

    },
    'drunkard': {
      sv: 550,
      type: 'profession',
      sector: 'outcast',
      description: 'a person who is habitually drunk and considers themselves a professional in the task.',
      dailyWage: 25,
      socialClass: 'paupery',

      socialClassRoll() {
        return 5 + dice(8, 6);
      }

    },
    'dungeon delver': {
      sv: 5500,
      type: 'profession',
      sector: 'adventuring',
      description: 'navigates underground labyrinths in search of any treasure they may find.',
      dailyWage: 150,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'elder': {
      sv: 600,
      type: 'profession',
      sector: 'hospitality',
      description: 'a person of a greater age, especially one with a respected position in society.',
      dailyWage: 200,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      },

      exclusions(town, npc) {
        if (npc.ageYears < 80) return false;
      }

    },
    'exile': {
      sv: 750,
      type: 'profession',
      sector: 'outcast',
      description: 'lives away from their native country, either from choice or compulsion.',
      dailyWage: 30,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'explorer': {
      sv: 3500,
      type: 'profession',
      sector: 'adventuring',
      description: 'explores unfamiliar areas in search of geographical or scientific information.',
      domSub: 'dom',
      dailyWage: 120,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'ex-criminal': {
      sv: 1200,
      type: 'profession',
      sector: 'outcast',
      description: 'a person who has been convicted of a crime and has since served their sentence, or who has preemptively given up their life of crime.',
      dailyWage: 60,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'folk hero': {
      sv: 4000,
      isBackground: true,
      type: 'profession',
      sector: 'adventuring',
      description: 'a celebrity who is greatly admired by many people of a particular kind or in a particular place.',
      dailyWage: 80,
      socialClass: 'commoner',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'gambler': {
      sv: 800,
      isHobby: true,
      type: 'profession',
      sector: 'crime',
      description: 'bets money on sports, card games, or games of chance in the hope of a profit.',
      dailyWage: 130,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'grave robber': {
      sv: 5000,
      type: 'profession',
      sector: 'crime',
      description: 'steals valuables from graves and tombs.',
      dailyWage: 130,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'heretic': {
      sv: 2500,
      type: 'profession',
      sector: 'outcast',
      description: 'differs in opinion from established religious dogma.',
      dailyWage: 80,

      function(town, npc) {
        if (npc.roll.religiosity < 70 || !npc.roll.religiosity) {
          npc.roll.religiosity = random(0, 5);
        }
      },

      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'housewife': {
      sv: 150,
      type: 'profession',
      sector: 'hospitality',
      description: 'cares for her family by managing household affairs and completing housework.',

      exclusions(town, npc) {
        return !!(npc.gender === 'woman' && npc.partnerID);
      },

      domSub: 'sub',
      dailyWage: 40,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 50 + dice(8, 6);
      }

    },
    'prisoner': {
      sv: 350,
      type: 'profession',
      sector: 'crime',
      description: 'held in confinement as a punishment for crimes they have been convicted of.',
      dailyWage: 2,
      socialClass: 'paupery',

      socialClassRoll() {
        return 5 + dice(2, 6);
      }

    },
    'rag-and-Bone Man': {
      sv: 750,
      type: 'labourer',
      sector: 'business',
      description: 'collects unwanted household items and sells them to merchants.',
      dailyWage: 25,
      socialClass: 'paupery',

      socialClassRoll() {
        return 5 + dice(8, 6);
      }

    },
    'political dissident': {
      sv: 4500,
      isHobby: true,
      type: 'labourer',
      sector: 'government and law',
      description: 'rises in opposition or armed resistance against an established government or ruler.',
      dailyWage: 100,
      socialClass: 'peasantry',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'refugee': {
      sv: 5000,
      type: 'profession',
      sector: 'outcast',
      description: 'left their home in order to escape war, persecution, or natural disaster.',
      dailyWage: 20,
      socialClass: 'paupery',

      socialClassRoll() {
        return 20 + dice(8, 6);
      }

    },
    'runaway Slave': {
      sv: 3000,
      type: 'labourer',
      sector: 'outcast',
      description: 'a slave who has left their master and traveled without authorization.',
      dailyWage: 100,
      socialClass: 'paupery',

      socialClassRoll() {
        return 5 + dice(8, 6);
      },

      relationships() {
        return {
          exmaster: {
            relationship: 'ex-master',
            reciprocalRelationship: 'escaped slave',

            exclusions(town, npc) {
              if (town.npcRelations) {
                if (town.npcRelations[npc.key]) {
                  return !town.npcRelations[npc.key].map(r => {
                    return r.relation;
                  }).includes('ex-master');
                }
              }
            },

            probability: 20,
            base: {
              profession: 'slaver'
            }
          }
        };
      },

      exclusions(town, npc) {
        return !town.bans.includes('slavery');
      }

    },
    'squatter': {
      sv: 800,
      type: 'profession',
      sector: 'crime',
      description: 'unlawfully occupies an uninhabited building or unused land.',
      dailyWage: 15,
      socialClass: 'paupery',

      socialClassRoll() {
        return 5 + dice(4, 6);
      }

    },
    'vagabond': {
      sv: 1000,
      type: 'profession',
      sector: 'outcast',
      description: 'wanders from place to place without a permanent home or job.',
      dailyWage: 15,
      socialClass: 'paupery',

      socialClassRoll() {
        return 5 + dice(8, 6);
      }

    },
    'urchin': {
      sv: 500,
      isBackground: true,
      type: 'profession',
      sector: 'outcast',
      description: 'a child who lives or spends most of their time in the streets, occasionally working as a thief or pickpocket.',
      dailyWage: 5,
      socialClass: 'paupery',

      socialClassRoll() {
        return 5 + dice(8, 6);
      },

      exclusions(town, npc) {
        return npc.ageStage === 'child';
      }

    }
  };

  /**
   * This gets the starting profession when a profession has not been defined.
   */
  function fetchProfessionChance(town, npc) {
    console.log('Fetching profession...');
    let professionNames = keys(town.professions);
    let tempProfessionNames;
    const professionThings = {
      socialClass: 'socialClass',
      professionType: 'type',
      professionSector: 'sector'
    };

    for (const key of keys(professionThings)) {
      if (npc[key]) {
        const temp = professionThings[key];
        console.log(`${key} was defined as ${npc[key]}, so filtering to the available professions! Filtering down from:`);
        console.log(professionNames);
        tempProfessionNames = professionNames.filter(professionName => {
          return town.professions[professionName][temp] === npc[key];
        });

        if (tempProfessionNames.length > 0) {
          professionNames = tempProfessionNames;
        }

        console.log(professionNames);
      }
    }

    if (breakGenderNorms(town) === false) {
      if (isDominantGender(town, npc) === false) {
        tempProfessionNames = professionNames.filter(profession => {
          return town.professions[profession].domSub !== 'dom';
        });

        if (tempProfessionNames.length > 0) {
          professionNames = tempProfessionNames;
        }
      } else {
        tempProfessionNames = professionNames.filter(profession => {
          return town.professions[profession].domSub !== 'sub';
        });

        if (tempProfessionNames.length > 0) {
          professionNames = tempProfessionNames;
        }
      }
    }

    const sum = professionNames.map(profession => {
      return town.professions[profession].population;
    });
    let resultantProfession = professionNames[getIndex(sum)];

    if (resultantProfession === undefined) {
      console.error('Failed to fetch a profession.');
      console.log({
        npc
      });
      resultantProfession = 'noble';
    }

    console.log(`Profession is: ${resultantProfession}`); // the on-load function is handled in lib.createClass because it should apply to *every* NPC with the profession, not just those that are rolled with it

    if (town.professions[resultantProfession].exclusions) {
      if (typeof town.professions[resultantProfession].exclusions === 'function') {
        console.log('There is an exclusion function. Testing...');

        if (!town.professions[resultantProfession].exclusions?.(town, npc)) {
          console.warn(`${npc.name} is unable to be a ${resultantProfession}. Rerolling...`);
          resultantProfession = fetchProfessionChance(town, npc);
        }
      }
    }

    if (town.professions[resultantProfession].type === 'dndClass') {
      console.log(`${npc.name} is a ${resultantProfession} and therefore has a dndClass.`);
      npc.hasClass = true;
    } else {
      npc.hasClass = false;
    }

    return resultantProfession;
  }

  function getTotalWeight(sum) {
    return sum.reduce((totalWeight, single) => totalWeight + single);
  }

  function getIndex(sum) {
    const totalWeight = getTotalWeight(sum);
    let random = Math.floor(randomFloat(1) * totalWeight);

    for (let i = 0; i < sum.length; i++) {
      random -= sum[i];
      if (random < 0) return i;
    }

    return 0;
  }

  /**
   * Searches with a depth of one.
   */

  function findInContainer(container) {
    /**
     * Type of value we can search.
     */

    /**
     * Matches only keys that maps to the correct type of value.
     */

    /**
     * Function that searches for an object where the
     * value is found inside of the array the key maps to.
     */
    return function findInside(key, value) {
      console.log('running findInContainer...');
      console.log({
        container,
        key,
        value
      });

      for (const object of keys(container)) {
        const nested = container[object];
        const values = nested[key];

        if (values?.includes(value)) {
          console.log(`Found ${value} in ${object}`);
          return container[object];
        }
      }
    };
  }

  function findProfession(town, npc, professionName) {
    if (typeof professionName === 'undefined') {
      professionName = npc.profession || npc.dndClass;
    }

    if (!professionName && npc.socialClass) {
      professionName = fetchProfessionChance(town, npc);
    }

    if (!professionName) {
      throw new Error('Could not find a profession name.');
    } // console.groupCollapsed(`running findProfession for ${npc.name}; looking for ${articles.output(professionName)}`)
    // console.log({ town, npc, professionName })


    const profession = professions[professionName];

    if (profession) {
      // console.log(`${professionName} is defined!`)
      console.groupEnd();
      return profession;
    }

    console.log(`could not find ${professionName}. Looking for synonyms...`);
    const found = findInContainer(professions)('synonyms', professionName);

    if (typeof found === 'undefined') {
      console.error(`${professionName} not found!`);
      console.groupEnd();
      return professions.peasant;
    }

    console.log('Found a synonym:', found);
    console.groupEnd();
    return found;
  }

  /**
   * Tests to see whether the npc is able to break gender norms.
   */
  function breakGenderNorms(town) {
    if (town.ignoreGender) {
      return true;
    }

    return dice(2, 50) < clamp(town.roll.equality, 0, 100);
  }
  /**
   * Tests to see whether the supplied npc is of the dominant gender.
   */

  function isDominantGender(town, npc) {
    return npc.gender === town.dominantGender;
  }
  function initSexistProfession(town, npc) {
    // if the profession is defined, but the gender isn't (which is quite common)
    if (npc.profession && !npc.gender) {
      // if the NPC *was* brave enough to break gender norms, then flag that
      if (breakGenderNorms(town)) {
        npc.gender = random(['man', 'woman']); // ...but the NPC is not brave enough to go against the grain
      } else {
        // then, take the gender from the profession
        const newGender = checkProfessionGender(town, npc); // if there's an associated gender, then that's assigned to the NPC

        if (newGender) {
          npc.gender = newGender;
        }
      }
    }
  }
  function isBreakingGenderNorms(town, npc) {
    return npc.gender !== checkProfessionGender(town, npc);
  }
  /**
   * Test for whether the profession is gendered.
   */

  function checkProfessionGender(town, npc) {
    const profession = findProfession(town, npc);
    const subGender = town.dominantGender === 'woman' ? 'man' : 'woman';

    if (profession.domSub === 'dom' && isDominantGender(town, npc)) {
      return town.dominantGender;
    }

    if (profession.domSub === 'sub' && !isDominantGender(town, npc)) {
      return subGender;
    }
  }

  const classTraits = {
    barbarian: {
      professionOrigin: ['My devotion to my people lifted me in battle, and I learned to control my bloodlust.', 'The spirits of my ancestors called out to me to complete a task, so I took up the way of the barbarian.', 'I lost control in battle one day, as if something else was guiding me as I slaughtered my enemies.', 'I went on a spiritual journey to find myself, and discovered the inner rage that I had could be tamed, used, and controlled.', "I was struck by lightning, but miraculously lived. Ever since that day, I've been stronger, faster, and able to push through any struggle.", 'I needed an outlet to channel my anger, otherwise I would have snapped, and killed an innocent person.'],
      background: {
        'charlatan': 1,
        'criminal': 1,
        'folk hero': 1,
        'hermit': 5,
        'outlander': 5,
        'soldier': 4,
        'urchin': 1
      },
      weapon: ['a huge greataxe', 'a battleaxe', 'a greatsword', 'two handaxes', 'two warhammers'],
      wealth: () => dice('2d4') * 1000
    },
    bard: {
      professionOrigin: ['I awakened my latent bardic abilities through trial and error.', 'I was a gifted performer, and eventually attracted the attention of a legendary bard, who decided to teach me to further my talents into the realm of magic.', 'I joined a society of scholars and orators, who helped teach me how to harness my music and turn it into magic.', 'I felt a great calling to recount the tales of heros past, and bring them alive through song and stories.', 'I joined one of the great colleges to learn old lore, and did music as an elective.', 'I picked up an instrument one day, and found that I could play it perfectly.'],
      background: {
        'charlatan': 2,
        'criminal': 1,
        'entertainer': 6,
        'folk hero': 2,
        'guild artisan': 2,
        'noble': 1,
        'outlander': 1,
        'sailor': 1,
        'soldier': 1,
        'urchin': 1
      },
      weapon: ['a crossbow', 'a longsword', 'a longsword', 'a longsword', 'a long bow', 'two daggers'],
      wealth: () => dice('5d4') * 1000
    },
    cleric: {
      professionOrigin: ['My god called on me to serve the faith as a cleric, so I abandoned my previous life, and set out for the nearest temple.', "I saw the injustice and horrors of the world, and felt that I couldn't live without trying to do something about it.", "My god gave me a sign that I was needed to do something important, some time in the future. I'm still waiting for my time to serve, but when it happens, I'll be ready.", "I've always been devout, but it wasn't until I completed a pilgrimage to a sacred site that I found my true calling.", 'I used to serve in the beauracracy of the church, but found the work unrewarding. Being able to spread the message to the farthest corners of the land is much more satisfying work.'],
      background: {
        'acolyte': 5,
        'charlatan': 1,
        'criminal': 1,
        'entertainer': 1,
        'folk hero': 3,
        'guild artisan': 2,
        'hermit': 2,
        'noble': 3,
        'sage': 4,
        'sailor': 1,
        'soldier': 1,
        'urchin': 1
      },
      weapon: ['a mace', 'a mace', 'a morning star', 'a club', 'a quarterstaff', 'a crossbow'],
      wealth: () => dice('5d4') * 1000
    },
    druid: {
      professionOrigin: ['I found a place among a group of druids after I fled a catastrophe.', 'I saw too much devastation in the wilds where I used to play for days as a child, and decided to protect the wilderness.', 'I have always had an affinity with animals, so I decided to explore it, and found that I had a gift to converse with them.', 'I befriended a druid that frequented an old pub, and he convinced me that the world needed me to carry on his work as a druid.', 'Whiie l was growing up, I saw spirits all around me— entities no one else could perceive. I sought out the druids to help me understand the visions, and communicate with these beings.'],
      background: {
        'acolyte': 3,
        'charlatan': 1,
        'folk hero': 3,
        'hermit': 5,
        'noble': 2,
        'outlander': 4,
        'sage': 3,
        'sailor': 1,
        'soldier': 1,
        'urchin': 1
      },
      weapon: ['a mace', 'a mace', 'a morning star', 'a club', 'a quarterstaff', 'a crossbow', 'a longbow', 'a longbow'],
      wealth: () => dice('2d4') * 1000
    },
    fighter: {
      professionOrigin: ['I wanted to hone my combat skills, and so I joined a war college', 'I  grew up fighting, and I refined my talents by defending myself against people who crossed me.', 'I squired for a knight, who taught me how to fight, care for my steed, and conduct myself with honor. I decided to take up that path for myself.', 'Monster attacks led me to believe that there was no other way for me to be able to defend my family.', 'I joined the army, and learnt how to fight in a group as a team against a common enemy.', 'I always had a knack for just about any weapon which I picked up.'],
      background: {
        'acolyte': 1,
        'charlatan': 1,
        'criminal': 4,
        'entertainer': 1,
        'folk hero': 3,
        'guild artisan': 1,
        'hermit': 1,
        'noble': 1,
        'outlander': 2,
        'sage': 1,
        'sailor': 3,
        'soldier': 6,
        'urchin': 1
      },
      weapon: ['a huge greataxe', 'a battleaxe', 'a greatsword', 'a long sword', 'a long sword', 'a long sword', 'a long sword', 'a long bow', 'a short sword', 'a war pick', 'a falcheon', 'a halberdier'],
      wealth: () => dice('5d4') * 1000
    },
    monk: {
      professionOrigin: ['I stumbled into a portal and took refuge in a strange monastery, where I learned how to defend mysel fagainst the forces of darkness.', 'I was chosen to study at a secluded monastery, where I learnt the fundamental techniques to set me on the path to eventual mastery.', 'I sought out the instruction of a monk to gain a greater understanding of my world, and my purpose in it.', 'I was overwhelmed with grief when I lost my sister, and found solace in meditation with the monks.', 'I always felt a power within me, and sought out an order of monks to help me understand it and harness that energy for good.', 'I was wild, and undisciplined as a child, until I realised the error of my ways. I sought out the monks to atone for my sins.'],
      background: {
        'acolyte': 4,
        'charlatan': 1,
        'criminal': 1,
        'folk hero': 1,
        'guild artisan': 1,
        'hermit': 3,
        'noble': 2,
        'outlander': 1,
        'sage': 3,
        'soldier': 1,
        'urchin': 1
      },
      weapon: ['fists', 'fists', 'fists', 'a quarterstaff', 'a quarterstaff'],
      wealth: () => dice('2d4') * 100
    },
    paladin: {
      professionOrigin: ['A magical being appeared before me, and called on me to undertake a holy quest.', 'One of my ancestors left a holy quest unfulfilled, so I seek to rectify this.', 'The world is a dark and terrible place. I seek to be a beacon of hope for those that may not have the courage to go on otherwise.', "I served as a paladin's squire, and admired his honesty and conduct. I decided to follow in his footsteps, and champion the good and decency that he represented.", 'Evil must be opposed on all fronts, and I decided to be the first line of defense against such scum.', 'Becoming a paladin was a natural consequence of my unwavering faith. I saw the need for the faith to be protected with sword and shield.'],
      background: {
        'acolyte': 4,
        'charlatan': 1,
        'criminal': 1,
        'entertainer': 1,
        'folk hero': 4,
        'guild artisan': 1,
        'hermit': 1,
        'noble': 5,
        'outlander': 1,
        'sage': 1,
        'sailor': 1,
        'soldier': 5,
        'urchin': 4
      },
      weapon: ['a greatsword', 'a long sword', 'a long sword', 'a long sword', 'a short sword', 'a war pick', 'a falcheon', 'a halberdier'],
      wealth: () => dice('5d4') * 1000
    },
    ranger: {
      professionOrigin: ['I always had a way with animals, and was able to calm them with a gentle touch and soothing word.', 'I found purpose while I was honing my hunting skills by bringing dangerous beasts down from the outskirts of civilisation.', 'I suffer from wanderlust, so I found the life of the ranger to be freeing; to me, wandering without a fixed home is freeing.', 'I met a grizzled ranger who taught me the secrets of woodcraft and surviving in the wild.', 'I served in the army, and led my division by scouting ahead, blazing trails and tracking our enemies.'],
      background: {
        'acolyte': 2,
        'charlatan': 1,
        'criminal': 1,
        'entertainer': 1,
        'folk hero': 4,
        'guild artisan': 1,
        'hermit': 4,
        'outlander': 4,
        'sage': 1,
        'sailor': 1,
        'soldier': 3,
        'urchin': 1
      },
      weapon: ['a crossbow', 'a longsword', 'a longsword', 'a longsword', 'a long bow', 'a long bow', 'a long bow', 'two daggers'],
      wealth: () => dice('4d4') * 1000
    },
    rogue: {
      professionOrigin: ["I've always been nimble and quick of wit, so I decided to use those talents to help me make my way in the world.", 'A thief wronged me, so I focused my training on mastering those skills to better combat foes of that sort.', "Know thy enemy. I aim to learn everything there is to know about the Thieves' guild, and then I'll bring it all tumbling down.", 'An experienced rogue saw something in me, and taught me several useful tricks.', 'I took up with a group of ruffians, that taught me how to get what I want without direct confrontation.', "I'm a sucker for a shiny bauble or bag of coins, as long as I can get it without risking life and limb.", "I just love the thrill of the heist. There's nothing that makes me feel more alive than taking something from right under someone's nose."],
      background: {
        'charlatan': 3,
        'criminal': 6,
        'folk hero': 2,
        'guild artisan': 2,
        'hermit': 1,
        'noble': 2,
        'outlander': 1,
        'sailor': 1,
        'soldier': 1,
        'urchin': 5
      },
      weapon: ['a long sword', 'a long sword', 'two daggers', 'two daggers', 'two daggers', 'two daggers', 'a crossbow', 'a crossbow', 'a crossbow'],
      wealth: () => dice('4d4') * 1000
    },
    sorcerer: {
      professionOrigin: ['When I was born, all of the milk turned to cheese. My family is convinced that it was a harbinger for my powers.', 'I suffered a terrible strain, which brought forth my dormant powers. I have fought to control it ever since.', "My immediate family never spoke of my ancestors, and when I asked, they would change the subject. It wasn't until I started displaying strange talents that the full truth of my heritage came out.", 'A monster attacked one of my friends when I was younger, and I lashed out in a burst of energy, saving my friend, but unlocking the torrent of power which I still struggle to control.', "After a magical conflagration, I realised that while I was unharmed, I had been fundamentally changed by the outburst of magical energy. I'm only just beginning to understand what has happened to me."],
      background: {
        'acolyte': 4,
        'charlatan': 4,
        'criminal': 1,
        'entertainer': 2,
        'folk hero': 2,
        'guild artisan': 1,
        'hermit': 1,
        'noble': 3,
        'outlander': 1,
        'sage': 3,
        'sailor': 1,
        'soldier': 1,
        'urchin': 1
      },
      weapon: ['a crossbow', 'a longsword', 'a longsword', 'a longsword', 'a long bow', 'two daggers', 'a dagger', 'a dagger'],
      wealth: () => dice('3d4') * 1000
    },
    warlock: {
      professionOrigin: ['I was examining a strange tome I found in an abandoned library when the entity that would become my patron suddenly appeared before me.', 'While wandering through a forbidden place, I came across a magical entity, which offered to form a pact with me.', 'I stumbled into the clutches of my patron after I accidentally stepped through a magical doorway.', 'During a crisis, I prayed for any being to help me. The creature that answered was my patron.', 'My future patron visited me in my dreams, and offered great power in exchange for my servie.', 'One of my ancestors had a pact with my patron, which bound me to the same fate.'],
      background: {
        'acolyte': 6,
        'charlatan': 1,
        'criminal': 1,
        'entertainer': 1,
        'folk hero': 1,
        'guild artisan': 1,
        'hermit': 6,
        'noble': 3,
        'outlander': 1,
        'sage': 5,
        'sailor': 1,
        'soldier': 1,
        'urchin': 1
      },
      weapon: ['a crossbow', 'a quarterstaff', 'a quarterstaff', 'a quarterstaff', 'a longsword', 'a dagger', 'a dagger', 'a dagger'],
      wealth: () => dice('4d4') * 1000
    },
    wizard: {
      professionOrigin: ['An old wizard chose me from among several candidates to serve an apprenticeship.', 'When I became lost in a magical forest, a hedge wizard took me in, and taught me the fundamentals of magic so that I could navigate my way out.', 'I grew up listening to tales of great wizards that could change reality with a flick of their hand. I knew from a young age that I wanted to hold that sort of power.', 'One of my relatives was an accomplished wizard in their own right, and they recognised the same potential in me that their mentor saw in them.', 'While exploring the restricted section of a library, I came across a magical tome, which sparked the interest in me.', 'I was a prodigy that demonstrated mastery of the arcane arts at a very young age. When I became old enough to set out on my own, I did so to continue my studies and expand my powers.'],
      background: {
        'acolyte': 6,
        'charlatan': 1,
        'criminal': 1,
        'entertainer': 1,
        'folk hero': 1,
        'guild artisan': 1,
        'hermit': 6,
        'noble': 3,
        'outlander': 1,
        'sage': 5,
        'sailor': 1,
        'soldier': 1,
        'urchin': 1
      },
      weapon: ['a crossbow', 'a quarterstaff', 'a quarterstaff', 'a quarterstaff', 'a longsword', 'a longsword', 'a longsword', 'a dagger'],
      wealth: () => dice('4d4') * 1000
    }
  };

  function createBackground(npc) {
    console.log(`assigning background traits to ${npc.name}...`);
    let backgroundOrigin;
    let bond;
    let ideal;
    const currentBackgroundTraits = backgroundTraits[npc.background];
    const defaultBackgroundTraits = backgroundTraits.commoner;

    if (typeof currentBackgroundTraits !== 'undefined') {
      backgroundOrigin = currentBackgroundTraits.backgroundOrigin?.length ? random(currentBackgroundTraits.backgroundOrigin) : random(defaultBackgroundTraits.backgroundOrigin);
      bond = currentBackgroundTraits.bond?.length ? random(currentBackgroundTraits.bond) : random(defaultBackgroundTraits.bond);
      ideal = currentBackgroundTraits.ideal?.length ? random(currentBackgroundTraits.ideal) : random(defaultBackgroundTraits.ideal);
    } else {
      console.error(`${npc.name}'s background of ${npc.background} was not valid.`);
      npc.background = 'commoner';
      backgroundOrigin = random(backgroundTraits.commoner.backgroundOrigin);
      bond = random(backgroundTraits.commoner.bond);
      ideal = random(backgroundTraits.commoner.ideal);
    }

    npc.backgroundOrigin ||= backgroundOrigin;
    npc.bond ||= bond;
    npc.ideal ||= ideal;
  }

  function buildSocialClass(t) {
    return t;
  }

  const socialClass = buildSocialClass({
    'aristocracy': {
      landRate: 3,
      socialClassRollThreshold: 95,
      probability: 10,
      lifestyle: ['aristocratic'],
      lifestyleStandards: [[5, 'comfortable'], [15, 'wealthy'], [80, 'aristocratic']],
      defaultBackground: {
        noble: 10,
        knight: 2,
        acolyte: 1
      },
      // this will be more interesting when the relationships are no longer just key pairs
      relationships: (npc, otherNpc) => [{
        relationship: 'fellow wine lover',
        description: `${npc.firstName} introduced ${otherNpc.firstName} to the delightful world of merlots and other delectable alcohols.`
      }, {
        relationship: 'auction house competitor',
        description: `${npc.firstName} and ${otherNpc.firstName} are constantly finding themselves bidding over the same items..`
      }, {
        relationship: 'dinner guest',
        description: `${npc.firstName} had ${otherNpc.firstName} as a dinner guest many moons ago, and ${otherNpc.heshe} quickly returned the favour.`
      }, {
        relationship: 'fellow art lover',
        description: `${npc.firstName} and ${otherNpc.firstName} frequently attend art exhibits and plays together.`
      }]
    },
    'nobility': {
      landRate: 2,
      socialClassRollThreshold: 80,
      probability: 20,
      lifestyle: ['aristocratic', 'wealthy', 'comfortable'],
      lifestyleStandards: [[5, 'modest'], [30, 'comfortable'], [60, 'wealthy'], [5, 'aristocratic']],
      relationships: (npc, otherNpc) => [{
        relationship: 'fellow wine lover',
        description: `${npc.firstName} introduced ${otherNpc.firstName} to the delightful world of merlots and other delectable alcohols.`
      }, {
        relationship: 'liesure game competitor',
        description: `${npc.firstName} and ${otherNpc.firstName} are friendly rivals in liesure games such as golf and boules.`
      }, {
        relationship: 'dinner guest',
        description: `${npc.firstName} had ${otherNpc.firstName} as a dinner guest many moons ago, and ${otherNpc.heshe} quickly returned the favour.`
      }, {
        relationship: 'fellow art lover',
        description: `${npc.firstName} and ${otherNpc.firstName} frequently attend art exhibits and plays together.`
      }],
      defaultBackground: {
        'noble': 10,
        'knight': 2,
        'acolyte': 4,
        'guild artisan': 3,
        'sage': 4,
        'soldier': 2
      }
    },
    'commoner': {
      landRate: 1,
      socialClassRollThreshold: 60,
      probability: 50,
      lifestyle: ['comfortable', 'modest', 'poor'],
      lifestyleStandards: [[5, 'poor'], [45, 'modest'], [45, 'comfortable'], [5, 'wealthy']],
      relationships: (npc, otherNpc) => [{
        relationship: 'fellow wine lover',
        description: `${npc.firstName} introduced ${otherNpc.firstName} to the delightful world of merlots and other delectable alcohols.`
      }, {
        relationship: 'fellow cat owner',
        description: `${npc.firstName} and ${otherNpc.firstName} are both cat owners, which they bond over.`
      }, {
        relationship: 'dinner guest',
        description: `${npc.firstName} had ${otherNpc.firstName} as a dinner guest many moons ago, and ${otherNpc.heshe} quickly returned the favour.`
      }, {
        relationship: 'fellow theatre lover',
        description: `${npc.firstName} and ${otherNpc.firstName} frequently attend plays together.`
      }],
      defaultBackground: {
        'acolyte': 4,
        'guild artisan': 3,
        'sage': 4,
        'urchin': 3,
        'outlander': 2,
        'merchant': 3,
        'hermit': 1,
        'gladiator': 2,
        'folk hero': 1,
        'criminal': 1,
        'charlatan': 2,
        'soldier': 5,
        'peasant': 10
      }
    },
    'peasantry': {
      landRate: 0.5,
      socialClassRollThreshold: 20,
      probability: 80,
      lifestyle: ['modest', 'poor', 'squalid'],
      lifestyleStandards: [[5, 'squalid'], [60, 'poor'], [30, 'modest'], [5, 'comfortable']],
      relationships: (npc, otherNpc) => [{
        relationship: 'fellow peasant',
        description: `${npc.firstName} and ${otherNpc.firstName} share little in common, save for their poor financial circumstances and low social class.`
      }, {
        relationship: 'has the same landlord',
        description: `${npc.firstName} and ${otherNpc.firstName} have the same landlord.`
      }],
      defaultBackground: {
        'acolyte': 4,
        'sage': 4,
        'urchin': 5,
        'outlander': 3,
        'merchant': 2,
        'hermit': 2,
        'gladiator': 2,
        'folk hero': 1,
        'criminal': 2,
        'charlatan': 3,
        'soldier': 6,
        'peasant': 15
      }
    },
    'paupery': {
      landRate: 0,
      socialClassRollThreshold: 10,
      probability: 30,
      lifestyle: ['poor', 'squalid', 'wretched'],
      lifestyleStandards: [[5, 'wretched'], [75, 'squalid'], [15, 'poor'], [5, 'modest']],
      relationships: (npc, otherNpc) => [{
        relationship: 'fellow wretch',
        description: `${npc.firstName} and ${otherNpc.firstName} occasionally help each other out, pooling their resources to scrounge together a meagre stew.`
      }, {
        relationship: 'same landlord',
        description: `${npc.firstName} and ${otherNpc.firstName} have the same landlord.`
      }],
      defaultBackground: {
        acolyte: 1,
        sage: 1,
        urchin: 10,
        outlander: 3,
        merchant: 2,
        hermit: 6,
        gladiator: 2,
        criminal: 5,
        charlatan: 4,
        soldier: 6,
        peasant: 15
      }
    },
    'indentured servitude': {
      landRate: 0,
      socialClassRollThreshold: 10,
      probability: 5,
      lifestyle: ['squalid', 'wretched'],
      lifestyleStandards: [[95, 'wretched'], [5, 'squalid']],
      relationships: (npc, otherNpc) => [{
        relationship: 'fellow slave',
        description: `${npc.firstName} helped ${otherNpc.firstName} learn the ropes, and stop ${otherNpc.hisher} feet from bleeding so much.`
      }],
      defaultBackground: {
        urchin: 15,
        outlander: 5,
        hermit: 10,
        gladiator: 1,
        criminal: 10,
        charlatan: 8,
        soldier: 3,
        peasant: 8
      }
    }
  });

  function calcPercentage(target, integer) {
    if (Array.isArray(integer)) {
      return integer.reduce(calc, target);
    }

    return calc(target, integer);
  }

  function calc(target, integer) {
    return target / 100 * (100 + integer);
  }

  const lifestyleStandards = {
    aristocratic: {
      dailyWagePercentage: 40,
      incomeThreshold: 1000,
      lifestyleStandard: 'aristocratic',
      lifestyleDescription: 'lives large, with little care to how much money is spent, splashing out on expensive things on a whim',
      homeBias: 40,
      home: {
        table: [[1, 'apartment'], [39, 'building'], [60, 'manor']]
      },
      socialClass: {
        table: [[2, 'commoner'], [38, 'nobility'], [60, 'aristocracy']]
      }
    },
    wealthy: {
      dailyWagePercentage: 35,
      incomeThreshold: 400,
      lifestyleStandard: 'wealthy',
      lifestyleDescription: 'lives lavishly, with fine foods, wines, clothes, and all the comforts money can buy',
      homeBias: 20,
      home: {
        table: [[5, 'apartment'], [40, 'building'], [55, 'manor']]
      },
      socialClass: {
        table: [[15, 'aristocracy'], [75, 'nobility'], [10, 'commoner']]
      }
    },
    comfortable: {
      dailyWagePercentage: 30,
      incomeThreshold: 200,
      lifestyleStandard: 'comfortable',
      lifestyleDescription: 'lives a comfortable life, filled with good food and wine',
      homeBias: 10,
      home: {
        table: [[20, 'apartment'], [78, 'building'], [2, 'manor']]
      },
      socialClass: {
        table: [[5, 'nobility'], [40, 'nobility'], [50, 'commoner'], [5, 'peasantry']]
      }
    },
    modest: {
      dailyWagePercentage: 25,
      incomeThreshold: 100,
      lifestyleStandard: 'modest',
      lifestyleDescription: 'lives modestly- not without creature comforts of wine and decent food thanks to frugality, though',
      homeBias: 0,
      home: {
        table: [[35, 'apartment'], [64, 'building'], [1, 'manor']]
      },
      socialClass: {
        table: [[5, 'nobility'], [40, 'commoner'], [50, 'peasantry'], [5, 'paupery']]
      }
    },
    poor: {
      dailyWagePercentage: 10,
      incomeThreshold: 20,
      lifestyleStandard: 'poor',
      lifestyleDescription: 'lives a poor life, having to count copper and save for purchases',
      homeBias: -10,
      home: {
        table: [[50, 'apartment'], [50, 'building']]
      },
      socialClass: {
        table: [[2, 'nobility'], [10, 'commoner'], [50, 'peasantry'], [38, 'paupery']]
      }
    },
    squalid: {
      dailyWagePercentage: 5,
      incomeThreshold: 10,
      lifestyleStandard: 'squalid',
      lifestyleDescription: 'lives a squalid existence, eating terrible food with no alcohol, and few creature comforts',
      homeBias: -20,
      home: {
        table: [[80, 'apartment'], [20, 'building']]
      },
      socialClass: {
        table: [[5, 'commoner'], [35, 'peasantry'], [60, 'paupery']]
      }
    },
    wretched: {
      dailyWagePercentage: 3,
      incomeThreshold: 0,
      lifestyleStandard: 'wretched',
      lifestyleDescription: 'lives a wretched life of constant filth and misery. There is no respite to this poverty',
      homeBias: -40,
      home: {
        table: [[80, 'apartment'], [20, 'building']]
      },
      socialClass: {
        table: [[35, 'peasantry'], [65, 'paupery']]
      }
    }
  };

  /** `town.roll.wealth` increases or decreases npc.professionLuck by up to 10%, reflecting the strength of the economy. The expected range is between -25 and 25. */

  function wageVariation(town, npc) {
    return calcPercentage(npc.roll.professionLuck, (town.roll.wealth - 50) / 5);
  }
  function npcGrossIncome(town, npc) {
    // TODO add hobbies
    console.log(`Returning ${npc.name}'s gross income...`);
    const profession = findProfession(town, npc);
    return Math.round(calcPercentage(profession.dailyWage, (wageVariation(town, npc), (town.roll.wealth - 50) / 3)));
  }
  function npcNetIncome(town, npc) {
    console.log(`Returning ${npc.name}'s net income...`);
    return Math.round(calcPercentage(npcGrossIncome(town, npc), -npcTaxRate(town, npc)));
  }
  function npcLifestyleStandard(town, npc) {
    console.log(`Returning ${npc.name}'s lifestyle standard...`);
    const income = npcNetIncome(town, npc);

    for (const lifestyleStandard of Object.values(lifestyleStandards)) {
      if (income >= lifestyleStandard.incomeThreshold) {
        return lifestyleStandard;
      }
    }

    return lifestyleStandards.modest;
  }
  function npcLifestyleExpenses(town, npc) {
    console.log(`Returning ${npc.name}'s lifestyle expenses...`);
    const income = npcGrossIncome(town, npc);
    return Math.round(income * (npcLifestyleStandard(town, npc).dailyWagePercentage / 100));
  }
  function npcTotalLifestyleExpenses(town, npc) {
    return Math.round(npcLifestyleExpenses(town, npc) + npcLifestyleStandard(town, npc).incomeThreshold);
  }
  function npcProfit(town, npc) {
    console.log(`Returning ${npc.name}'s profit...`);
    return Math.round(npcNetIncome(town, npc) - npcTotalLifestyleExpenses(town, npc));
  }
  function npcTaxRate(town, npc) {
    let totalTax = 0;

    for (const tax of keys(town.taxes)) {
      if (tax === 'land') {
        totalTax += town.taxes[tax] * (socialClass[npc.socialClass].landRate || 1);
      } else if (typeof town.taxes[tax] === 'number') {
        totalTax += town.taxes[tax];
      } else {
        console.error(`non-integer tax! ${town.taxes[tax]}`);
      }
    }

    return Math.round(totalTax * 100) / 100;
  }

  function createClass(town, npc) {
    console.log(`Assigning class traits to "${npc.name}".`);
    const profession = findProfession(town, npc);
    npc.professionOrigin ||= getProfessionOrigin(npc, town);
    npc.background ||= getProfessionBackground(profession, npc);
  }

  function getProfessionOrigin(npc, town) {
    const profession = findProfession(town, npc);

    if (profession.professionOrigin) {
      return random(profession.professionOrigin);
    }

    const professionWithArticle = articles.output(npc.profession);
    const originWage = [[-25, `I've tried to do a good job as ${professionWithArticle} but am just rubbish at it. I don't think I'm good at anything, really.`], [-20, `I've been trying to make it as ${professionWithArticle} but suck at it. I'm beginning to think I was never meant to be ${professionWithArticle}.`], [-15, `I've been trying to make it as ${professionWithArticle} but just can't seem to hack it. I think I'll quit.`], [-10, `I've had trouble as ${professionWithArticle}. I guess some people are born with it- I'm sure as hell not.`], [-5, `I've had a bit of a downturn as ${professionWithArticle}. If it keeps up for much longer, I'm going to begin losing hope.`], [0, `I'm working as ${professionWithArticle}. The work is alright, ${['and I enjoy it', 'though it can be a bit tedious', 'I\'ve certainly had worse jobs', 'if a little dull', 'if a little dull at times'].random()}`], [5, `I'm on the upswing as ${professionWithArticle}. Things are looking better.`], [10, `I'm doing really well as ${professionWithArticle}! Maybe it's luck, maybe a natural talent, I don't know.`], [15, `It turns out that I'm pretty good at being ${professionWithArticle}! I enjoy the work.`], [20, `It turns out that I'm really good at being ${professionWithArticle}. It's actually kinda easy.`], [25, `Not to brag, but I'm a born natural at being ${professionWithArticle}. It's fun, very rewarding work.`]];

    for (const [amount, origin] of originWage) {
      if (amount >= wageVariation(town, npc)) return origin;
    }

    console.error('Could not find a suitable profession origin.');
    return originWage[5][1];
  }

  function getProfessionBackground(profession, npc) {
    if (profession.background) {
      return weightRandom(profession.background);
    }

    return weightRandom(socialClass[npc.socialClass].defaultBackground);
  }

  const getHumanOrRaceDescription = npc => {
    if (npc.race === 'human') return `${lib.random([npc.weight, npc.height])} ${npc.manwoman}`;
    return `${lib.random([npc.weight, npc.height])} ${npc.malefemale} ${npc.raceName}`;
  };

  function createDescriptors(npc) {
    console.log(`assigning descriptors to ${npc.name}...`);
    /**
     * Remember adjectival precedence!
     * @see https://github.com/ryceg/Eigengrau-s-Essential-Establishment-Generator/wiki/Style-Guide#adjectives
     */

    const descriptors = [`${npc.age || npc.ageStage} ${npc.raceName} with ${npc.physicalTrait}`, `${npc.skinColour} skinned ${lib.random([npc.weight, npc.height])} ${npc.raceName}`, `${getHumanOrRaceDescription(npc)} with ${npc.physicalTrait}`, `${lib.random([npc.height, npc.age])} ${npc.gender} with ${npc.physicalTrait}`];

    switch (npc.ageStage) {
      case 'child':
        descriptors.push(`${lib.random([lib.raceTraits[npc.race].raceWords.raceAdjective, npc.height])} ${npc.boygirl}`);
        break;

      default:
        switch (npc.race) {
          case 'human':
            break;

          default:
            descriptors.push(getHumanOrRaceDescription(npc), `${lib.random([npc.weight, npc.height])} ${lib.raceTraits[npc.race].raceWords.raceAdjective} ${npc.manwoman}`);
        }

    }

    if (npc.beard) {
      descriptors.push(`${npc.raceName} with ${articles.output(npc.beard)}`);
    }

    return descriptors;
  }

  function createSocialClass(town, npc) {
    console.log('Creating social class...');

    if (npc.socialClass) {
      return;
    }

    const profession = findProfession(town, npc);
    npc.roll = npc.roll || {};
    npc.roll.socialClass = npc.roll.socialClass || profession.socialClassRoll() || 40 + dice(8, 6);
    console.log({
      npc
    });
    console.log(`Social class not predefined. Searching for the social class of a ${npc.profession}...`); // If .socialClass is defined in the professions.js, then that's all dandy.

    if (profession.socialClass) {
      npc.socialClass = profession.socialClass;
      return;
    } // Otherwise, just roll some dice.


    console.log(`Unidentified profession- ${npc.profession} does not exist in townData.professions!`);
    const classArray = keys(socialClass);
    const newArray = [];

    for (const item of classArray) {
      newArray.push([socialClass[item].socialClassRollThreshold, item]);
    }
    /** @type {[number, string][]} */


    const array = newArray.find(([threshold]) => {
      return threshold <= npc.roll.socialClass;
    });

    if (array) {
      const newSocialClass = array[1];
      npc.socialClass = newSocialClass;
      return;
    }

    console.log(`Failed to set a social class that matched the roll of ${npc.roll.socialClass} for ${npc.name}.`);
  }

  /**
   * To be used when you want to wrap a tippy around
   * something i.e. you know what you're doing
   *
   * **Note the lack of a closing span.**
   */
  const createTippy = readout => {
    const id = lib.getUUID();
    return `<span class="tip" id="${id}" role="tooltip" tabindex="0" data-tippy-content=${JSON.stringify(readout)}><<run tippy(document.getElementById('${id}'))>>`;
  };
  /**
   * Assumes that the first argument was created
   * using the createTippy function.
   *
   * **Note the two closing spans to accommodate this.**
   */

  const createTippyWord = (tippy, word) => {
    return `${tippy}<span class="dotted">${word}</span></span>`;
  };
  /**
   * The function that should be used most of the time.
   */

  const createTippyFull = (readout, word) => {
    const id = lib.getUUID();
    return `<span class="tip dotted" data-id="${id}" id="${id}" role="tooltip" tabindex="0" data-tippy-content=${JSON.stringify(readout)}>${word}<<done>><<run tippy(document.getElementById('${id}'))>><</done>></span>`;
  };
  function createAutoTippy(utils, ...args) {
    return function autoTippy(word) {
      const construct = utils.create(...args);
      return createTippyFull(utils.readout(construct), word || construct.$type);
    };
  }
  function addTippyAccessibility() {
    $('.tip').attr('role', 'tooltip');
    $('.tip').attr('tabindex', '0');
  }

  /**
   * Return a random value from a static roll table.
   * Designed to be less performance-intensive than weightedRandomFetcher,
   *
   * The table should contain the intended probabilities of each result
   * for example, calling rollFromTable([[1, 'a'], [2, 'b']])
   * would return 'a' 1/3 of the time, and b 2/3 of the time.
   *
   * Defining maxRoll is not strictly necessary, although I recommend
   * doing so to prevent re-computing the same total of probabilities.
   *
   * Using bias will make certain outcomes more likely. Negative biases
   * skew results toward the first entries, and positive biases skew
   * toward the last entries.
   */
  function rollFromTable(table, maxRoll, bias = 0) {
    if (!maxRoll) {
      // set it to be the sum of probabilities
      maxRoll = table.reduce((a, [b]) => a + b, 0);
    }

    let roll = random(1, maxRoll) + bias;

    for (const [prob, result] of table) {
      roll -= prob;
      if (roll <= 0) return result;
    } // roll too high, return last entry in table


    const [, result] = last(table);
    return result;
  }

  const homeTable = [[0, 'on the streets'], // unreachable without biases
  [20, 'a rundown shack'], [10, 'no real permanent address'], [5, 'a village in the middle of the wilderness'], [5, 'an encampment'], [10, 'an apartment in a rundown neighborhood'], [15, 'a small house'], [5, 'a nice house'], [15, 'a large house'], [5, 'a very impressive house'], [20, 'a mansion'], [40, 'a palace'] // unreachable without biases
  ];
  function createLifestyleStandards(town, npc) {
    console.groupCollapsed(`Creating living standards for ${npc.name}`);
    const isCurrently = random(['has been', 'has recently been', 'is', 'is currently']);
    const isHaving = random(['has been having', 'has recently had', 'is having', 'is currently having']);
    const desc = findProfession(town, npc);
    const tippy = createTippyFull(capitalizeFirstLetter(desc.description), npc.profession);
    const wageVarianceNotes = [[-25, `${isCurrently} impossibly unsuccessful as`], [-18, `${isCurrently} incredibly unsuccessful as`], [-12, `${isCurrently} unsuccessful as`], [-8, `${isCurrently} somewhat unsuccessful as`], [-5, `${isCurrently} slightly unsuccessful as`], [0, 'is'], [5, random([`${isCurrently} mildly successful as`, `${isHaving} mild success as`])], [8, random([`${isCurrently} reasonably successful as`, `${isHaving} reasonable success as`])], [8, random([`${isCurrently} modestly successful as`, `${isHaving} modest success as`])], [12, random([`${isCurrently} successful as`, `${isHaving} success as`])], [12, random([`${isCurrently} fabulously successful as`, `${isHaving} fabulous success as`])], [25, random([`${isCurrently} extremely successful as`, `${isHaving} extreme success as`])]];
    let note = wageVarianceNotes.find(desc => {
      return desc[0] >= wageVariation(town, npc);
    });
    if (!note) note = [10, `${isHaving} modest success as`];
    npc.professionSuccess = `${npc.firstName} ${note[1] || wageVarianceNotes[5][1]} ${articles.find(npc.profession)} ${tippy}`;
    console.groupEnd();
  }
  function createFamilyLifestyle(marriage) {
    const lifestyle = rollFromTable(socialClass[marriage.socialClass || 'commoner'].lifestyleStandards, 100);
    const home = rollFromTable(homeTable, 100, lifestyleStandards[marriage.lifestyle || 'modest'].homeBias);
    assign(marriage, {
      lifestyle,
      home
    });
  }

  /**
   *
   * @param array The array of objects
   * @param readout The key for the readout text
   * @param key1 Key for first value
   * @param key2 Key for second value
   * @param val1 Location of first roll
   * @param val2 Location of second roll
   * @example closestMatch(lib.alchemistData.get.priceTalk($building), "priceTalk", "priceModifier", "wealth", $building.priceModifier, $building.roll.wealth)
   */
  function closestMatch(array, readout, key1, key2, val1, val2) {
    // An approximation of two dimensional arrays, that needs a rework.
    let scale1 = 1;
    let scale2 = 1; // Find highest and lowest values for each property in the array.

    let min1 = Infinity;
    let min2 = Infinity;
    let max1 = -Infinity;
    let max2 = -Infinity;

    for (const value of array) {
      min1 = Math.min(min1, value[key1]);
      min2 = Math.min(min2, value[key2]);
      max1 = Math.max(max1, value[key1]);
      max2 = Math.max(max2, value[key2]);
    }

    const range1 = max1 - min1;
    const range2 = max2 - min2; // Scale the values so that both ranges have equal weight when determining the "distance" to val1 and val2.

    if (range1 > range2) {
      scale2 = range1 / range2;
    } else if (range1 < range2) {
      scale1 = range2 / range1;
    } // Find the shortest "distance" from any item in the array to val1 and val2.
    // If multiple items in the array are of the same minimum distance, choose the last one.


    let closest = 0;
    let smallestDistance = calculateDistance(0);

    for (let i = 1; i < array.length; i++) {
      const currentDistance = calculateDistance(i);

      if (currentDistance <= smallestDistance) {
        smallestDistance = currentDistance;
        closest = i;
      }
    }

    return array[closest][readout];

    function calculateDistance(index) {
      const current1 = array[index][key1];
      const current2 = array[index][key2];
      const pos1 = Math.abs(current1 - val1) * scale1;
      const pos2 = Math.abs(current2 - val2) * scale2;
      return pos1 + pos2;
    }
  }

  var jsonData$4 = [
  	{
  		bmi: 40,
  		muscleMass: 6,
  		weight: "morbidly obese"
  	},
  	{
  		bmi: 40,
  		muscleMass: 10,
  		weight: "built like a brick shithouse"
  	},
  	{
  		bmi: 40,
  		muscleMass: 14,
  		weight: "unbelievably large"
  	},
  	{
  		bmi: 40,
  		muscleMass: 18,
  		weight: "impossibly muscular"
  	},
  	{
  		muscleMass: 6,
  		bmi: 35,
  		weight: "extremely obese"
  	},
  	{
  		muscleMass: 10,
  		bmi: 35,
  		weight: "quite large"
  	},
  	{
  		muscleMass: 14,
  		bmi: 35,
  		weight: "built like a wrestler"
  	},
  	{
  		muscleMass: 18,
  		bmi: 35,
  		weight: "built like a brick shithouse"
  	},
  	{
  		muscleMass: 6,
  		bmi: 28,
  		weight: "beer-bellied"
  	},
  	{
  		muscleMass: 10,
  		bmi: 28,
  		weight: "pot-bellied"
  	},
  	{
  		muscleMass: 14,
  		bmi: 28,
  		weight: "quite thick and muscular"
  	},
  	{
  		muscleMass: 18,
  		bmi: 28,
  		weight: "extremely muscular"
  	},
  	{
  		muscleMass: 6,
  		bmi: 32,
  		weight: "round"
  	},
  	{
  		muscleMass: 10,
  		bmi: 32,
  		weight: "rather round"
  	},
  	{
  		muscleMass: 14,
  		bmi: 32,
  		weight: "quite solidly built"
  	},
  	{
  		muscleMass: 18,
  		bmi: 32,
  		weight: "built like a wrestler"
  	},
  	{
  		muscleMass: 6,
  		bmi: 30,
  		weight: "a ball of fat"
  	},
  	{
  		muscleMass: 10,
  		bmi: 30,
  		weight: "obese"
  	},
  	{
  		muscleMass: 14,
  		bmi: 30,
  		weight: "quite fat"
  	},
  	{
  		muscleMass: 18,
  		bmi: 30,
  		weight: "fat, but muscular too"
  	},
  	{
  		muscleMass: 6,
  		bmi: 29,
  		weight: "rather chubby"
  	},
  	{
  		muscleMass: 10,
  		bmi: 29,
  		weight: "chubby"
  	},
  	{
  		muscleMass: 14,
  		bmi: 29,
  		weight: "solidly built"
  	},
  	{
  		muscleMass: 18,
  		bmi: 29,
  		weight: "built like a brick shithouse"
  	},
  	{
  		muscleMass: 6,
  		bmi: 28,
  		weight: "very fat"
  	},
  	{
  		muscleMass: 10,
  		bmi: 28,
  		weight: "fat"
  	},
  	{
  		muscleMass: 14,
  		bmi: 28,
  		weight: "fat, but muscular"
  	},
  	{
  		muscleMass: 18,
  		bmi: 28,
  		weight: "fat, but muscular"
  	},
  	{
  		muscleMass: 6,
  		bmi: 27,
  		weight: "overweight"
  	},
  	{
  		muscleMass: 10,
  		bmi: 27,
  		weight: "overweight"
  	},
  	{
  		muscleMass: 14,
  		bmi: 27,
  		weight: "rather solidly built"
  	},
  	{
  		muscleMass: 18,
  		bmi: 27,
  		weight: "wrestler-built"
  	},
  	{
  		muscleMass: 6,
  		bmi: 26,
  		weight: "thick"
  	},
  	{
  		muscleMass: 10,
  		bmi: 26,
  		weight: "broad"
  	},
  	{
  		muscleMass: 14,
  		bmi: 26,
  		weight: "broad and muscular"
  	},
  	{
  		muscleMass: 18,
  		bmi: 26,
  		weight: "wrestler-built"
  	},
  	{
  		muscleMass: 6,
  		bmi: 25,
  		weight: "chunky"
  	},
  	{
  		muscleMass: 10,
  		bmi: 25,
  		weight: "kinda chunky"
  	},
  	{
  		muscleMass: 14,
  		bmi: 25,
  		weight: "thick, in a muscular sense"
  	},
  	{
  		muscleMass: 18,
  		bmi: 25,
  		weight: "wrestler-built"
  	},
  	{
  		muscleMass: 6,
  		bmi: 24,
  		weight: "broad"
  	},
  	{
  		muscleMass: 10,
  		bmi: 26,
  		weight: "broad"
  	},
  	{
  		muscleMass: 14,
  		bmi: 26,
  		weight: "broad and muscular"
  	},
  	{
  		muscleMass: 18,
  		bmi: 26,
  		weight: "wrestler-built"
  	},
  	{
  		muscleMass: 6,
  		bmi: 23,
  		weight: "healthy"
  	},
  	{
  		muscleMass: 10,
  		bmi: 23,
  		weight: "lean"
  	},
  	{
  		muscleMass: 14,
  		bmi: 23,
  		weight: "healthily muscular"
  	},
  	{
  		muscleMass: 18,
  		bmi: 23,
  		weight: "very muscular"
  	},
  	{
  		muscleMass: 6,
  		bmi: 22,
  		weight: "lean"
  	},
  	{
  		muscleMass: 10,
  		bmi: 23,
  		weight: "wiry"
  	},
  	{
  		muscleMass: 14,
  		bmi: 23,
  		weight: "wiry and muscular"
  	},
  	{
  		muscleMass: 18,
  		bmi: 23,
  		weight: "wiry and very muscular"
  	},
  	{
  		muscleMass: 6,
  		bmi: 21,
  		weight: "thin"
  	},
  	{
  		muscleMass: 10,
  		bmi: 21,
  		weight: "lean"
  	},
  	{
  		muscleMass: 14,
  		bmi: 21,
  		weight: "wiry"
  	},
  	{
  		muscleMass: 18,
  		bmi: 21,
  		weight: "wiry and muscular"
  	},
  	{
  		muscleMass: 6,
  		bmi: 20,
  		weight: "rather thin"
  	},
  	{
  		muscleMass: 10,
  		bmi: 20,
  		weight: "thin"
  	},
  	{
  		muscleMass: 14,
  		bmi: 20,
  		weight: "thin but wiry"
  	},
  	{
  		muscleMass: 18,
  		bmi: 20,
  		weight: "wiry"
  	},
  	{
  		muscleMass: 6,
  		bmi: 19,
  		weight: "skinny"
  	},
  	{
  		muscleMass: 10,
  		bmi: 19,
  		weight: "skinny and lean"
  	},
  	{
  		muscleMass: 14,
  		bmi: 19,
  		weight: "lean"
  	},
  	{
  		muscleMass: 18,
  		bmi: 19,
  		weight: "very wiry"
  	},
  	{
  		muscleMass: 6,
  		bmi: 18,
  		weight: "lithe"
  	},
  	{
  		muscleMass: 10,
  		bmi: 18,
  		weight: "lithe"
  	},
  	{
  		muscleMass: 14,
  		bmi: 18,
  		weight: "lean"
  	},
  	{
  		muscleMass: 18,
  		bmi: 18,
  		weight: "lean and wiry"
  	},
  	{
  		muscleMass: 6,
  		bmi: 17,
  		weight: "scrawny"
  	},
  	{
  		muscleMass: 10,
  		bmi: 17,
  		weight: "scrawny"
  	},
  	{
  		muscleMass: 14,
  		bmi: 17,
  		weight: "scrawny but strong"
  	},
  	{
  		muscleMass: 18,
  		bmi: 17,
  		weight: "scrappy"
  	},
  	{
  		muscleMass: 6,
  		bmi: 16,
  		weight: "weedy"
  	},
  	{
  		muscleMass: 10,
  		bmi: 16,
  		weight: "scrawny"
  	},
  	{
  		muscleMass: 14,
  		bmi: 16,
  		weight: "scrawny but strong"
  	},
  	{
  		muscleMass: 18,
  		bmi: 16,
  		weight: "scrappy looking"
  	},
  	{
  		muscleMass: 6,
  		bmi: 15,
  		weight: "gaunt"
  	},
  	{
  		muscleMass: 10,
  		bmi: 15,
  		weight: "gaunt"
  	},
  	{
  		muscleMass: 14,
  		bmi: 15,
  		weight: "gaunt but healthy"
  	},
  	{
  		muscleMass: 18,
  		bmi: 15,
  		weight: "gaunt but strong"
  	},
  	{
  		muscleMass: 6,
  		bmi: 15,
  		weight: "bony"
  	},
  	{
  		muscleMass: 10,
  		bmi: 15,
  		weight: "bony"
  	},
  	{
  		muscleMass: 14,
  		bmi: 15,
  		weight: "bony yet muscular"
  	},
  	{
  		muscleMass: 18,
  		bmi: 15,
  		weight: "bony yet muscular"
  	}
  ];

  const bmiDescriptions = jsonData$4;

  /* eslint-disable @typescript-eslint/ban-ts-comment */
  function getGenderTrait(props, key) {
    const {
      genderTraits
    } = raceTraits[props.race];
    const trait = (genderTraits[props.gender] || genderTraits.woman)[key];

    if (typeof trait === 'undefined') {
      throw new Error('Could not find fallback trait.');
    }

    return trait;
  }
  function setRace(npc) {
    const raceData = raceTraits[npc.race];
    const beardProbability = getGenderTrait(npc, 'beardProbability');
    const baseHeight = getGenderTrait(npc, 'baseHeight');
    const baseWeight = getGenderTrait(npc, 'baseWeight');
    const heightModifier = getGenderTrait(npc, 'heightModifier')();
    const weightModifier = getGenderTrait(npc, 'weightModifier')();

    if (random(1, 100) <= beardProbability) {
      npc.beard = random(raceData.beard);
    }

    npc.heightInches = baseHeight + heightModifier;
    npc.weightPounds = baseWeight + heightModifier * weightModifier;
    npc.bmi = Math.trunc(npc.weightPounds / (npc.heightInches * npc.heightInches) * raceData.bmiModifier);
    npc.weight = npc.weight || closestMatch(bmiDescriptions, 'weight', 'bmi', 'muscleMass', npc.bmi, npc.muscleMass);

    for (const [height, description] of heightChart) {
      if (height >= npc.heightInches) {
        npc.height = description;
      }
    }
  }
  const heightChart = [[84, 'giraffe-like'], [78, 'towering'], [77, 'extremely tall'], [76, 'very tall'], [75, 'rather tall'], [74, 'quite tall'], [73, 'reasonably tall'], [72, 'tall'], [71, 'taller than average'], [70, 'average sized'], [69, 'medium sized'], [68, 'on the short side'], [67, 'somewhat short'], [66, 'relatively short'], [65, 'short-ish'], [64, 'short'], [63, 'short'], [62, 'rather short'], [61, 'barely five foot'], [60, 'quite short'], [59, 'rather small'], [58, 'really short'], [57, 'pint sized'], [56, 'quite small'], [55, 'small'], [54, 'squat'], [53, 'somewhat squat'], [52, 'quite squat'], [50, 'rather squat'], [48, 'somewhat tiny'], [46, 'rather small'], [44, 'rather tall (compared to a halfling)'], [42, 'tall (for a halfling)'], [40, 'barely a metre'], [38, 'diminutive'], [36, 'quite diminutive'], [34, 'adorably short'], [32, 'tiny'], [30, 'so so tiny'], [0, 'impossibly small']];

  function createName(parameters = {}) {
    console.log('Returning a name!');
    const {
      race = 'human',
      gender = 'woman',
      firstOrLast = 'firstName'
    } = parameters;

    if (firstOrLast === 'lastName') {
      const raceTrait = raceTraits[race];
      return capitalizeFirstLetter(random(raceTrait.lastName));
    }

    const firstNames = getGenderTrait({
      race,
      gender
    }, 'firstName');
    return capitalizeFirstLetter(random(firstNames));
  }

  const genderData = {
    man: {
      godgoddess: 'god',
      title: 'Mr',
      domTitle: 'Master',
      heshe: 'he',
      himher: 'him',
      himherself: 'himself',
      hisher: 'his',
      hisherself: 'hisself',
      boygirl: 'boy',
      manwoman: 'man',
      menwomen: 'men',
      malefemale: 'male',
      guygirl: 'guy',
      marriageNoun: 'husband',
      niblingReciprocalNoun: 'uncle',
      parentNoun: 'father',
      childNoun: 'son',
      siblingNoun: 'brother',
      niblingNoun: 'nephew',
      oppositeGender: 'woman'
    },
    woman: {
      godgoddess: 'goddess',
      title: 'Ms',
      domTitle: 'Mistress',
      heshe: 'she',
      himher: 'her',
      himherself: 'herself',
      hisher: 'her',
      hisherself: 'herself',
      boygirl: 'girl',
      manwoman: 'woman',
      menwomen: 'women',
      malefemale: 'female',
      guygirl: 'girl',
      marriageNoun: 'wife',
      niblingReciprocalNoun: 'aunt',
      parentNoun: 'mother',
      childNoun: 'daughter',
      siblingNoun: 'sister',
      niblingNoun: 'niece',
      oppositeGender: 'man'
    },
    nonbinary: {
      godgoddess: 'deity',
      title: 'Mx',
      domTitle: 'Overseer',
      heshe: 'they',
      himher: 'them',
      himherself: 'themself',
      hisher: 'their',
      hisherself: 'theirself',
      boygirl: 'child',
      manwoman: 'person',
      menwomen: 'people',
      malefemale: 'person',
      guygirl: 'person',
      marriageNoun: 'partner',
      niblingReciprocalNoun: 'pibling',
      parentNoun: 'parent',
      childNoun: 'child',
      siblingNoun: 'sibling',
      niblingNoun: 'nibling',
      // this is temporary
      oppositeGender: 'man'
    },
    entity: {
      godgoddess: 'goddess',
      title: 'Mx',
      domTitle: 'Overseer',
      heshe: 'it',
      himher: 'it',
      himherself: 'itself',
      hisher: 'its',
      hisherself: 'itself',
      boygirl: 'child',
      manwoman: 'entity',
      menwomen: 'entities',
      malefemale: 'entity',
      guygirl: 'entity',
      marriageNoun: 'partner',
      niblingReciprocalNoun: 'pibling',
      parentNoun: 'parent',
      childNoun: 'child',
      siblingNoun: 'sibling',
      niblingNoun: 'nibling',
      // this is temporary
      oppositeGender: 'man'
    }
  };
  function getOppositeGender(gender) {
    return genderData[gender].oppositeGender;
  }
  function validateNpcGender(town, npc) {
    if (npc.roll.gender <= town.roll.genderMakeup) {
      return town.dominantGender;
    }

    return getOppositeGender(town.dominantGender);
  }
  function getNpcGender(town, npc) {
    if (npc.gender) {
      return npc.gender;
    }

    if (npc.roll.gender <= town.roll.genderMakeup) {
      return town.dominantGender;
    }

    return getOppositeGender(town.dominantGender);
  }
  function fetchGender(town) {
    const genderRoll = random(1, 100);

    if (genderRoll <= town.roll.genderMakeup) {
      return town.dominantGender;
    }

    return getOppositeGender(town.dominantGender);
  }
  /**
   * @description We assign a roll for the gender, but need to ensure that manually assigned genders that are passed as an argument don't have a conflicting roll.
   */

  function assignFunctionalGenderRoll(town, npc) {
    if (town.roll.genderMakeup < npc.roll.gender && npc.gender === town.dominantGender) {
      return npc.roll.gender;
    }

    if (town.roll.genderMakeup > npc.roll.gender && npc.gender === getOppositeGender(town.dominantGender)) {
      return npc.roll.gender;
    }

    if (npc.gender === town.dominantGender) {
      return random(0, town.roll.genderMakeup);
    }

    if (npc.gender === getOppositeGender(town.dominantGender)) {
      return random(town.roll.genderMakeup, 100);
    }

    console.warn('Something screwy with gender is going on. Defaulting to dominant gender.');
    return town.roll.genderMakeup;
  }

  function fetchRace(town, saveLoc = {}) {
    console.log('Fetching race...');
    const races = keys(town.baseDemographics); // Calculate the sum of the raw demographic values.

    const sum = races.map(race => town._baseDemographics[race]).reduce((acc, cur) => acc + cur, 0); // Calculate the demographic percentages.

    for (const race of races) {
      town._demographicPercentile[race] = town._baseDemographics[race] / sum * 100;
    }

    const args = town._demographicPercentile;
    console.log(args);
    const pool = [];
    const namePool = keys(args);
    let totalWeight = 0;

    for (const arg of keys(args)) {
      pool.push(args[arg]);
      totalWeight += args[arg];
    }

    saveLoc.raceRoll = saveLoc.raceRoll || Math.floor(randomFloat(1) * totalWeight);
    let random = saveLoc.raceRoll;
    let index = 0;

    for (; index < pool.length; index++) {
      random -= pool[index];
      if (random < 0) break;
    }

    return namePool[index];
  }

  const createNamesake = (town, base) => {
    const race = fetchRace(town);
    const gender = fetchGender(town);
    const namesake = Object.assign({
      race,
      gender,
      firstName: createName({
        race,
        firstOrLast: 'firstName'
      }),
      lastName: createName({
        race,
        firstOrLast: 'lastName'
      })
    }, base);
    return namesake;
  };

  function getReligiosityDescription(town, npc) {
    const selectedGod = npc.religion.deity;
    const religionDescription = [{
      strength: 100,
      gregariousness: 100,
      note: `${npc.name} is a fervent devotee of ${selectedGod}, but ${npc.heshe} is as kind and welcoming to followers of other gods as of ${npc.hisher} own.`
    }, {
      strength: 100,
      gregariousness: 80,
      note: `${npc.name} is a fervent devotee of ${selectedGod}, but ${npc.heshe} only tries to preach to those who seem sincerely interested in learning about ${npc.hisher} god.`
    }, {
      strength: 100,
      gregariousness: 60,
      note: `${npc.name} is a fervent devotee of ${selectedGod}, and ${npc.heshe} can get a bit preachy, but doesn't try to pressure unwilling people into converting.`
    }, {
      strength: 100,
      gregariousness: 40,
      note: `${npc.name} is a fervent devotee of ${selectedGod}, and ${npc.heshe} doesn't always know when to stop proselytizing.`
    }, {
      strength: 100,
      gregariousness: 20,
      note: `${npc.name} is a fervent devotee of ${selectedGod}, and ${npc.heshe} seems to enjoy nothing more than preaching to followers of other religions.`
    }, {
      strength: 100,
      gregariousness: 0,
      note: `${npc.name} is a fervent devotee of ${selectedGod}, and ${npc.heshe} is fiercely committed to converting literally everybody ${npc.heshe} ever meets, whether they like it or not.`
    }, {
      strength: 80,
      gregariousness: 100,
      note: `${npc.firstName} is a faithful follower of ${selectedGod}, but is very accepting of those of different faiths.`
    }, {
      strength: 80,
      gregariousness: 80,
      note: `${npc.firstName} is a faithful follower of ${selectedGod}, but never makes others feel umcomfortable when it comes to ${npc.hisher} faith.`
    }, {
      strength: 80,
      gregariousness: 60,
      note: `${npc.firstName} is a faithful follower of ${selectedGod}, but tries not to talk about ${npc.hisher} chosen deity with those who do not share ${npc.hisher} faith.`
    }, {
      strength: 80,
      gregariousness: 40,
      note: `${npc.firstName} is a faithful follower of ${selectedGod}, and can sometimes be a little bit judgey about others' choices in deities.`
    }, {
      strength: 80,
      gregariousness: 20,
      note: `${npc.firstName} is a faithful follower of ${selectedGod}, and will sometimes chastise others for following 'worse' gods.`
    }, {
      strength: 80,
      gregariousness: 0,
      note: `${npc.firstName} is a faithful follower of ${selectedGod}, and enjoys confronting others to challenge beliefs that differ from ${npc.hisher} own.`
    }, {
      strength: 60,
      gregariousness: 100,
      note: `${npc.firstName} is a quiet follower of ${selectedGod}, but does not draw much attention to ${npc.hisher} choice of deity.`
    }, {
      strength: 60,
      gregariousness: 80,
      note: `${npc.name} is a quiet follower of ${selectedGod}, but does not often bring up ${npc.hisher} choice of deity unless prompted.`
    }, {
      strength: 60,
      gregariousness: 60,
      note: `${npc.name} is a quiet follower of ${selectedGod}, and is not shy ${npc.hisher} about praying or worshipping in public, but rarely tries to proselytize or convert others.`
    }, {
      strength: 60,
      gregariousness: 40,
      note: `${npc.name} is usually a quiet follower of ${selectedGod}, but loves to talk up how great ${npc.hisher} chosen deity is to anyone who expresses interest.`
    }, {
      strength: 60,
      gregariousness: 20,
      note: `${npc.name} is usually a quiet follower of ${selectedGod}, but can be quite rude to anyone who criticizes ${npc.hisher} choice of deity.`
    }, {
      strength: 60,
      gregariousness: 0,
      note: `${npc.name} is a quiet follower of ${selectedGod}, and is not shy about criticizing followers of other gods.`
    }, {
      strength: 40,
      gregariousness: 100,
      note: `${npc.name} is a casual follower of ${selectedGod}, but ${npc.heshe} is respectful of and interested in learning about all other religions.`
    }, {
      strength: 40,
      gregariousness: 80,
      note: `${npc.name} is a casual follower of ${selectedGod}, but ${npc.heshe} is accepting of those who practice all faiths.`
    }, {
      strength: 40,
      gregariousness: 60,
      note: `${npc.name} is a casual follower of ${selectedGod}, and is generally private about ${npc.hisher} faith, in the hopes of not offending those who practice other religions.`
    }, {
      strength: 40,
      gregariousness: 40,
      note: `${npc.name} is a casual follower of ${selectedGod}, and can act a bit prickly towards those who openly practice other faiths.`
    }, {
      strength: 40,
      gregariousness: 20,
      note: `${npc.name} is a casual follower of ${selectedGod}, and can be quite rude towards those who worship 'inferior' gods.`
    }, {
      strength: 40,
      gregariousness: 0,
      note: `${npc.name} is a casual follower of ${selectedGod}, and ${npc.heshe} likes to provoke heated 'debates' with people who follow other religions.`
    }, {
      strength: 20,
      gregariousness: 100,
      note: `${npc.name} is critical of religion, but is nominally a follower of ${selectedGod}. Despite ${npc.hisher} doubts, ${npc.heshe} is always very diplomatic when it comes to conversations about religion, either ${npc.hisher} own or others'.`
    }, {
      strength: 20,
      gregariousness: 80,
      note: `${npc.name} is critical of religion, but is nominally a follower of ${selectedGod}. Despite ${npc.hisher} doubts, ${npc.heshe} generally tries to avoid criticizing religion outside of private conversations with trusted friends.`
    }, {
      strength: 20,
      gregariousness: 60,
      note: `${npc.name} is critical of religion, but is nominally a follower of ${selectedGod}. Because of ${npc.hisher} doubts, ${npc.heshe} is not shy about criticizing religion, but is always very polite about it, and criticizes ${npc.hisher} own faith as often as others'.`
    }, {
      strength: 20,
      gregariousness: 40,
      note: `${npc.name} is critical of religion, but is nominally a follower of ${selectedGod}. Because of ${npc.hisher} doubts, ${npc.heshe} frequently criticizes others' faiths, while seemingly blind to the faults of ${npc.hisher} own religion.`
    }, {
      strength: 20,
      gregariousness: 20,
      note: `${npc.name} is critical of religion, but is nominally a follower of ${selectedGod}. Because of ${npc.hisher} doubts, ${npc.heshe} enjoys spirited debates about the flaws of various religions – both other peoples' faiths and ${npc.hisher} own.`
    }, {
      strength: 20,
      gregariousness: 0,
      note: `${npc.name} is critical of religion, but is nominally a follower of ${selectedGod}. Despite ${npc.hisher} supposed faith, ${npc.heshe} enjoys ragging on any and all religions, and will openly criticize any faithful people ${npc.heshe} meets.`
    }, {
      strength: 0,
      gregariousness: 100,
      note: `${npc.name} openly refuses to pledge ${npc.hisher} faith to any one deity. However, ${npc.heshe} is always willing to listen graciously to the beliefs of ${npc.hisher} faithful friends and neighbors, and ${npc.heshe} is still well-liked even among the faithful of ${town.name}.`
    }, {
      strength: 0,
      gregariousness: 80,
      note: `${npc.name} openly refuses to pledge ${npc.hisher} faith to any one deity. While ${npc.heshe} resists conversion to any of the religions practised in ${town.name}, ${npc.heshe} does not criticize her neighbors' faith, and ${npc.heshe} is generally accepted by the residents of ${town.name}.`
    }, {
      strength: 0,
      gregariousness: 60,
      note: `${npc.name} openly refuses to pledge ${npc.hisher} faith to any one deity. While ${npc.heshe} refuses to listen to anyone who tries to preach to ${npc.himher}, ${npc.heshe} also avoids starting debates about religion where others can hear.`
    }, {
      strength: 0,
      gregariousness: 40,
      note: `${npc.name} is a faithless heretic in the eyes of the majority of the population of ${town.name}. When others try to convert ${npc.himher} to one of the predominant religions in ${town.name}, ${npc.heshe} does not hesitate to shut them down immediately.`
    }, {
      strength: 0,
      gregariousness: 20,
      note: `${npc.name} is a faithless heretic in the eyes of the majority of the population of ${town.name}, and ${npc.heshe} openly scoffs about the foolishness of the more faithful residents of ${town.name}.`
    }, {
      strength: 0,
      gregariousness: 0,
      note: `${npc.name} is a faithless heretic in the eyes of the majority of the population of ${town.name}, and no one would be caught dead speaking to ${npc.himher} because of it.`
    }];
    return closestMatch(religionDescription, 'note', 'strength', 'gregariousness', npc.roll.religiosity, npc.roll.gregariousness);
  } // uses setup.npcData.religion.strength

  function createReligiosity(town, npc) {
    console.log(`Creating religion strength for ${npc.name}`);
    npc.roll.religiosity = fm(dice(2, 40) + 10, town.roll.religiosity - 50);
    npc.roll.religiosity = Math.clamp(npc.roll.religiosity, 1, 100);

    if (npc.religion.strength) {
      npc.roll.religiosity = getReligiosity(npc.religion.strength);
    } else {
      npc.religion.strength = getReligionStrength(npc.roll.religiosity);
    }

    npc.religion.deity = pickDeity(npc.roll.gender, getDeityProbabilities(town, npc));
  }
  function getDeityProbabilities(town, npc, deities = lib.getFallbackDeities(town)) {
    const conformityMargin = 30;

    if (npc.roll.conformity - town.roll.religiosity > conformityMargin) {
      const townDeity = {
        [town.religion.deity]: {
          name: town.religion.deity,
          probability: 100
        }
      };
      return townDeity;
    } else {
      const probabilities = {};

      for (const deity of deities) {
        probabilities[deity.name] = {
          probability: deity?.probabilityWeightings?.npc?.race?.[npc.race] || rankProbabilities[deity.rank] || 10,
          name: deity.name
        };

        for (const prop in deity?.personality) {
          if (!prop) break;
          const trait = prop;
          addIfDefined(compareRollToTarget(deity?.personality[trait], npc.roll.traits[trait], {
            bonus: 5,
            tolerance: 'both',
            maxDistance: 20
          }), probabilities[deity.name].probability);
        }
      }

      return probabilities;
    }
  }
  const pickDeity = (deityPicker, pool) => {
    for (const item in pool) {
      deityPicker -= pool[item].probability;

      if (deityPicker < 0) {
        return item;
      }
    }

    return pool[Object.keys(pool)[0]].name;
  };

  function getReligiosity(religionStrength) {
    for (const [threshold, strength] of lib.religion.strength) {
      if (strength === religionStrength) {
        return threshold + random(1, 5);
      }
    }

    return 0;
  }

  function getReligionStrength(religiosityRoll) {
    for (const [threshold, strength] of lib.religion.strength) {
      if (threshold <= religiosityRoll) {
        return strength;
      }
    }

    return 'quiet true believer';
  }

  // TODO: finish fixing TypeScript issues

  const marriagePools = {
    'dragonborn': ['dragonborn'],
    'dwarf': ['dwarf'],
    'gnome': ['gnome'],
    'goblin': ['goblin'],
    'halfling': ['halfling'],
    'orc': ['human', 'orc', 'half-orc'],
    'human': ['human', 'elf', 'orc', 'half-elf', 'half-orc', 'tiefling'],
    'elf': ['human', 'elf', 'half-elf'],
    'half-elf': ['human', 'elf', 'half-elf', 'half-orc'],
    'half-orc': ['human', 'orc', 'half-elf', 'half-orc'],
    'tiefling': ['human', 'tiefling'],
    'lizardfolk': ['lizardfolk']
  };
  function findParentRaces(npc) {
    const parentalLineageRoll = random(1, 8);
    let lineage;
    let fatherRace;
    let motherRace;

    switch (npc.race) {
      case 'half-orc':
        if (parentalLineageRoll === 8) {
          lineage = 'Both parents were half-orcs';
          fatherRace = 'half-orc';
          motherRace = 'half-orc';
        } else if (parentalLineageRoll >= 6) {
          lineage = 'One parent was a human, the other was a half orc';
          motherRace = 'human';
          fatherRace = 'half-orc';
        } else if (parentalLineageRoll >= 4) {
          lineage = 'One parent was a half-orc, the other was an orc';
          motherRace = 'half-orc';
          fatherRace = 'orc';
        } else if (parentalLineageRoll < 4) {
          lineage = 'One parent was a human, the other was an orc';
          motherRace = 'human';
          fatherRace = 'orc';
        }

        break;

      case 'half-elf':
        if (parentalLineageRoll === 8) {
          lineage = 'Both parents were half-elves';
          motherRace = 'half-elf';
          fatherRace = 'half-elf';
        } else if (parentalLineageRoll === 7) {
          lineage = 'One parent was a human, the other was a half elf';
          fatherRace = 'half-elf';
          motherRace = 'human';
        } else if (parentalLineageRoll === 6) {
          lineage = 'One parent was a half-elf, the other was an elf';
          fatherRace = 'half-elf';
          motherRace = 'elf';
        } else if (parentalLineageRoll < 6) {
          lineage = 'One parent was a human, the other was an elf';
          fatherRace = 'elf';
          motherRace = 'human';
        }

        break;

      case 'tiefling':
        if (parentalLineageRoll === 8) {
          lineage = 'One parent was a human, the other was a devil';
          motherRace = 'human';
          fatherRace = 'devil';
        } else if (parentalLineageRoll === 7) {
          lineage = 'One parent was a tiefling, the other was a devil';
          motherRace = 'tiefling';
          fatherRace = 'devil';
        } else if (parentalLineageRoll >= 4) {
          lineage = 'One parent was a human, the other was a tiefling';
          motherRace = 'human';
          fatherRace = 'tiefling';
        } else if (parentalLineageRoll < 4) {
          lineage = 'Both parents were human, with their infernal ancestry manifesting in me later in life';
          motherRace = 'human';
          fatherRace = 'human';
        }

        break;

      default:
        lineage = undefined;
        motherRace = npc.race;
        fatherRace = npc.race;
    } // For the sake of symmetry


    if (random(1, 2) === 2) {
      [motherRace, fatherRace] = [fatherRace, motherRace];
    }

    return {
      motherRace,
      fatherRace,
      lineage
    };
  }
  function findChildRace(town, motherRace, fatherRace) {
    console.log(`Handling ${motherRace}+${fatherRace} marriage!`);
    const races = [motherRace, fatherRace];

    if (motherRace === fatherRace) {
      return motherRace;
    }

    if (races.includes('human')) {
      if (races.includes('elf')) {
        return 'half-elf';
      }

      if (races.includes('orc')) {
        return 'half-orc';
      }

      const halfbreeds = ['half-orc', 'half-elf', 'tiefling', 'dragonborn'];

      if (races.find(race => halfbreeds.includes(race))) {
        const otherRace = races.find(race => race !== 'human');
        console.log(races, otherRace);

        if (random(100) > 70) {
          return otherRace;
        }

        return 'human';
      }
    } else {
      return motherRace;
    }

    return motherRace;
  }
  function findPartnerRace(town, npc) {
    if (!(npc.race in marriagePools)) return npc.race;
    const pool = marriagePools[npc.race].filter(race => typeof town.baseDemographics[race] === 'number');
    const poolSum = pool.map(race => town.baseDemographics[race]).reduce((a, b) => a + b, 0);
    let roll = randomFloat(0, 1) * poolSum;

    for (const raceName of pool) {
      roll -= town.baseDemographics[raceName];
      if (roll <= 0) return raceName;
    }

    return npc.race;
  }

  const familyRelationships = {
    /**
     * Specific names for relatives in the family tree. Capital letters stand for the four types of relationship:
     *
     * `B = brother / sister`
     *
     * `C = couple (marriage)`
     *
     * `D = descendant (child)`
     *
     * `E = elder (parent).`
     *
     * Entries in parentheses should never occur.
     */
    nouns: {
      Em: 'father',
      Ew: 'mother',
      Dm: 'son',
      Dw: 'daughter',
      Bm: 'brother',
      Bw: 'sister',
      Cm: 'husband',
      Cw: 'wife',
      EEm: 'grandfather',
      EEw: 'grandmother',
      EDm: 'half-brother',
      EDw: 'half-sister',
      EBm: 'uncle',
      EBw: 'aunt',
      ECm: 'stepfather',
      ECw: 'stepmother',
      DEm: '(self/partner)',
      DEw: '(self/partner)',
      DDm: 'grandson',
      DDw: 'granddaughter',
      DBm: '(son)',
      DBw: '(daughter)',
      DCm: 'son-in-law',
      DCw: 'daughter-in-law',
      BEm: '(father)',
      BEw: '(mother)',
      BDm: 'nephew',
      BDw: 'niece',
      BBm: '(brother)',
      BBw: '(sister)',
      BCm: 'brother-in-law',
      BCw: 'sister-in-law',
      CEm: 'father-in-law',
      CEw: 'mother-in-law',
      CDm: 'stepson',
      CDw: 'stepdaughter',
      CBm: 'brother-in-law',
      CBw: 'sister-in-law',
      CCm: 'co-husband',
      CCw: 'co-wife'
    },
    verbose: key => {
      if (key in familyRelationships.nouns) return familyRelationships.nouns[key];
      return 'relative';
    },
    inverse: (npc, key) => {
      let inverse = '';

      for (let i = 0; i < key.length - 1; i++) {
        if (key[i] === 'E') {
          inverse = `${inverse}D`;
        } else if (key[i] === 'D') {
          inverse = `${inverse}E`;
        } else {
          inverse = inverse + key[i];
        }
      }

      return inverse.split('').reverse().join('') + npc.gender[0];
    }
  };
  function knewParents(town, npc) {
    if (!npc) return false;
    const family = town.families[npc.family];
    const node = family.members[npc.key];
    return !!node.parentMarriage;
  }
  function getMarriages(town, npc) {
    if (!npc) return false;
    const family = town.families[npc.family];
    const node = family.members[npc.key];
    return !!node.parentMarriage;
  }
  function createFamily(town, npc) {
    const key = `${npc.lastName || npc.firstName} family`;
    const family = {
      key,
      members: {
        [npc.key]: {
          key: npc.key,
          parentMarriage: undefined,
          marriages: undefined,
          canRemarry: true
        }
      },
      home: {
        road: ''
      }
    };
    town.families[key] = family;
    npc.family = key;
  }
  function createFamilyHouse(town, family) {
    const road = town.roads[family.home.road] || roads.findExisting(town) || random(Object.values(town.roads)); // roads.assign(town)

    for (const member in family.members) {
      if (!road.inhabitants.npcs[family.members[member].key]) {
        road.inhabitants.npcs[family.members[member].key] = 'occupant';
        town.roads[road.key].currentOccupancy++;
      }
    }

    lib.assign(family, {
      home: {
        road: road.key
      }
    });
    console.log('Assigned a house!'); // return family as Family
  }

  function filterNpcByProfession(npcs, profession) {
    return Object.values(npcs).filter(npc => {
      return npc.profession === profession;
    });
  }

  /**
   * Gets the age of an NPC, in numerical years.
   */

  function getAgeInYears(race, ageStage) {
    const ageTraits = raceTraits[race].ageTraits[ageStage];
    return ageTraits.baseAge + ageTraits.ageModifier();
  }

  function setAge(npc) {
    console.log(`ageing ${npc.name}...`);
    const ageDescriptors = raceTraits[npc.race].ageTraits.ageDescriptors;

    if (typeof ageDescriptors !== 'undefined') {
      for (const [ageThreshold, ageDescriptor] of ageDescriptors) {
        if (ageThreshold >= npc.ageYears) {
          npc.age = ageDescriptor;
        }
      }
    } else {
      console.log('Called age descriptor without a valid array.');
    }

    if (npc.ageStage === 'child') {
      npc.hasClass = false;
      npc.profession = npc.age;
      npc.background = 'child';
    }
  }
  function isOfAge(ageStage, race, ageYears) {
    return ageYears >= raceTraits[race].ageTraits[ageStage].baseAge;
  }

  /**
   *
   * @param town The $town State.variables object
   * @param npcs The $npcs State.variables object
   * @param npc1 The key of the NPC
   * @param npc2 The key of the NPC
   */
  const swapNPCs = (town, npcs, npc1, npc2) => {
    if (!npcs[npc1]) console.error(`Error! ${npc1} doesn't exist on $npcs`);
    if (!npcs[npc2]) console.error(`Error! ${npc2} doesn't exist on $npcs`);
    const npcRelations1 = town.npcRelations[npc1];
    const npcRelations2 = town.npcRelations[npc2];

    if (npcRelations2) {
      town.npcRelations[npc2] = npcRelations1;
    }

    if (npcRelations1) {
      town.npcRelations[npc1] = npcRelations2;
    }
  };

  const traits$1 = {
    virtueKey: {
      chaste: 'lustful',
      energetic: 'lazy',
      forgiving: 'vengeful',
      generous: 'selfish',
      honest: 'deceitful',
      just: 'arbitrary',
      merciful: 'cruel',
      modest: 'proud',
      // pious: 'worldly',
      prudent: 'reckless',
      temperate: 'indulgent',
      trusting: 'suspicious',
      valorous: 'cowardly'
    },
    viceKey: {
      lustful: 'chaste',
      lazy: 'energetic',
      vengeful: 'forgiving',
      selfish: 'generous',
      deceitful: 'honest',
      arbitrary: 'just',
      cruel: 'merciful',
      proud: 'modest',
      // worldly: 'pious',
      reckless: 'prudent',
      indulgent: 'temperate',
      suspicious: 'trusting',
      cowardly: 'valorous'
    }
  };
  const personalityTraitExists = personalityTrait => {
    return Object.keys(lib.personalityTraits).includes(personalityTrait);
  };

  const isVice = trait => {
    const virtues = Object.keys(lib.traits.virtueKey);
    if (virtues.includes(trait)) return false;
    return true;
  };

  const getVirtue = trait => {
    if (!isVice(trait)) return {
      wasVice: false,
      virtue: trait
    };
    const correspondingVirtue = getInverseTrait(trait);
    return {
      wasVice: true,
      virtue: correspondingVirtue
    };
  };

  const getInverseTrait = trait => {
    if (isVice(trait)) return lib.traits.viceKey[trait];
    return lib.traits.virtueKey[trait];
  };

  const getTrait = (trait, npc, humanized) => {
    const sanitizedVirtue = getVirtue(trait);
    if (sanitizedVirtue.wasVice === false) return sanitizeTraitValues(npc.roll.traits[trait]);
    const correspondingVirtue = getVirtue(trait);
    return sanitizeTraitValues(npc.roll.traits[correspondingVirtue.virtue], humanized);
  };

  const sanitizeTraitValues = (amount, humanized) => {
    if (humanized) return Math.clamp(amount / 5, 1, 19);
    return Math.clamp(amount, 5, 95);
  };

  const applyFMtoTrait = (trait, amount, npc) => {
    if (!isVice(trait)) {
      npc.roll.traits[trait] = sanitizeTraitValues(lib.fm(npc.roll.traits[trait], amount));
    } else {
      const correspondingVirtue = getInverseTrait(trait);
      npc.roll.traits[correspondingVirtue] = sanitizeTraitValues(lib.fm(npc.roll.traits[correspondingVirtue], -amount));
    }
  };

  function createPersonality(npc) {
    for (const trait in lib.traits.virtueKey) {
      if (npc.roll) npc.roll.traits[trait] = dice(5, 19);
    }

    assign(npc, {
      trait: npc.trait || random(traits),
      calmTrait: npc.calmTrait || random(calmTraits),
      stressTrait: npc.stressTrait || random(stressTraits)
    });

    if (personalityTraitExists(npc.calmTrait)) {
      for (const trait in personalityTraits[npc.calmTrait].traits) {
        applyFMtoTrait(trait, personalityTraits[npc.calmTrait].traits[trait], npc);
      }
    }

    if (personalityTraitExists(npc.stressTrait)) {
      for (const trait in personalityTraits[npc.stressTrait].traits) {
        applyFMtoTrait(trait, personalityTraits[npc.stressTrait].traits[trait], npc);
      }
    }

    if (!npc.vocalPattern) {
      if (dice(2, 50) >= 75) {
        assign(npc, {
          vocalPattern: random(vocalPatterns)
        });
      }
    }
  }
  const traits = ['fidgets', 'drinks too much', 'eats too much', 'swears often', 'has poor hygiene', 'cannot resist flirting', 'cannot stop staring at you', 'sweats profusely and easily', 'is a habitual liar', 'embellishes the truth', 'exaggerates details', 'has a short temper', 'is melodramatic', 'gossips about the most mundane things', 'cannot resist a juicy secret', 'chews with an open mouth', 'often sniffs audibly', 'is incredibly gullible', 'is skeptical of everything', 'paces about incessantly', 'makes poor eye contact', 'is a know it all', "corrects people's grammar when they speak", 'blinks constantly', 'bobs head back and forth when speaking', 'is often sarcastic', 'cannot resist making snide comments', 'loses train of thought easily', 'is always shaking'];
  const calmTraits = ['compassionate', 'cheerful', 'reserved', 'outspoken', 'uninterested', 'gruff', 'eager', 'deceitful', 'foolish', 'strict', 'agreeable', 'mischeivous', 'angry', 'fearful', 'manipulative', 'devout', 'greedy', 'funny', 'dour', 'fun-loving', 'lazy', 'driven', 'boastful', 'artistic', 'assertive', 'carefree', 'cautious', 'confident', 'thoughtful', 'loyal', 'sophisticated', 'weak-willed'];
  const stressTraits = ['withdrawn', 'murderous', 'obsessive', 'authoritarian', 'determined', 'brave', 'spiteful', 'belligerent', 'caustic', 'reckless', 'argumentative', 'gluttonous', 'overly protective', 'angry', 'cowardly', 'meticulous', 'sarcastic', 'stubborn', 'destructive', 'practical', 'pushy', 'fanatical', 'secretive', 'scornful', 'courageous', 'impractical', 'calculating', 'industrious', 'manipulative', 'destructive', 'compulsive', 'intolerant'];
  const personalityTraits = {
    'compassionate': {
      key: 'compassionate',
      type: ['calm'],
      traits: {
        merciful: 70,
        trusting: 60,
        forgiving: 65,
        generous: 80
      }
    },
    'cheerful': {
      key: 'cheerful',
      type: ['calm'],
      traits: {
        trusting: 70,
        energetic: 80,
        prudent: -30,
        temperate: -20
      }
    },
    'reserved': {
      key: 'reserved',
      type: ['calm'],
      traits: {
        generous: -20,
        just: 30,
        // pious: 30,
        temperate: 70,
        trusting: -20,
        valorous: -10
      }
    },
    'outspoken': {
      key: 'outspoken',
      type: ['calm'],
      traits: {
        energetic: 30,
        modest: -40,
        prudent: -30,
        temperate: -20,
        valorous: 30
      }
    },
    'uninterested': {
      key: 'uninterested',
      type: ['calm'],
      traits: {
        energetic: -30,
        modest: 20,
        temperate: 20,
        valorous: -10
      }
    },
    'gruff': {
      key: 'gruff',
      type: ['calm'],
      traits: {
        forgiving: -10,
        generous: -30,
        prudent: 20,
        trusting: -30
      }
    },
    'eager': {
      key: 'eager',
      type: ['calm'],
      traits: {
        energetic: 80,
        trusting: 40,
        valorous: 30
      }
    },
    'deceitful': {
      key: 'deceitful',
      type: ['calm'],
      traits: {
        honest: -80,
        valorous: -20,
        generous: -20
      }
    },
    'foolish': {
      key: 'foolish',
      type: ['calm', 'stress'],
      traits: {
        honest: 20,
        prudent: -80,
        temperate: -30,
        trusting: 50,
        valorous: 30
      }
    },
    'strict': {
      key: 'strict',
      type: ['calm'],
      traits: {
        just: 60,
        modest: -40,
        prudent: 80,
        trusting: -30,
        // pious: 40,
        chaste: 30
      }
    },
    'agreeable': {
      key: 'agreeable',
      type: ['calm'],
      traits: {
        chaste: -30,
        forgiving: 30,
        generous: 40
      }
    },
    'mischeivous': {
      key: 'mischeivous',
      type: ['calm'],
      traits: {
        chaste: -40,
        just: -30,
        generous: -20,
        temperate: -30
      }
    },
    'fearful': {
      key: 'fearful',
      type: ['calm'],
      traits: {
        valorous: -90,
        trusting: -60,
        prudent: 60,
        temperate: 20
      }
    },
    'manipulative': {
      key: 'manipulative',
      type: ['calm', 'stress'],
      traits: {
        valorous: -30,
        trusting: -30,
        generous: -30,
        merciful: -20,
        forgiving: -20
      }
    },
    'devout': {
      key: 'devout',
      type: ['calm'],
      traits: {
        // pious: 80,
        chaste: 50,
        temperate: 40,
        modest: 40
      }
    },
    'greedy': {
      key: 'greedy',
      type: ['calm'],
      traits: {
        generous: -40,
        temperate: -90
      }
    },
    'funny': {
      key: 'funny',
      type: ['calm'],
      traits: {
        energetic: 30,
        generous: 10
      }
    },
    'dour': {
      key: 'dour',
      type: ['calm'],
      traits: {
        // pious: -20,
        generous: -10,
        energetic: -20,
        trusting: -20
      }
    },
    'fun-loving': {
      key: 'fun-loving',
      type: ['calm'],
      traits: {
        chaste: -50,
        energetic: 50,
        generous: -10,
        prudent: -20,
        trusting: 10
      }
    },
    'lazy': {
      key: 'lazy',
      type: ['calm'],
      traits: {
        energetic: -60,
        generous: -10,
        temperate: -20
      }
    },
    'driven': {
      key: 'driven',
      type: ['calm'],
      traits: {
        energetic: 50,
        modest: -10,
        // pious: 10,
        generous: -10
      }
    },
    'boastful': {
      key: 'boastful',
      type: ['calm'],
      traits: {
        generous: -10,
        modest: -90,
        valorous: 40
      }
    },
    'artistic': {
      key: 'artistic',
      type: ['calm'],
      traits: {
        chaste: -20 // pious: -40

      }
    },
    'assertive': {
      key: 'assertive',
      type: ['calm'],
      traits: {
        energetic: 40,
        generous: -10,
        // pious: 20,
        temperate: -10,
        trusting: -10,
        valorous: 30
      }
    },
    'carefree': {
      key: 'carefree',
      type: ['calm'],
      traits: {
        energetic: 40,
        just: -20,
        prudent: -70,
        trusting: 60,
        forgiving: 50,
        chaste: -40
      }
    },
    'cautious': {
      key: 'cautious',
      type: ['calm'],
      traits: {
        trusting: -60,
        generous: -10,
        prudent: 90,
        temperate: 60,
        valorous: -50
      }
    },
    'confident': {
      key: 'confident',
      type: ['calm'],
      traits: {
        valorous: 60,
        prudent: -10,
        energetic: 30
      }
    },
    'thoughtful': {
      key: 'thoughtful',
      type: ['calm'],
      traits: {
        // pious: 10,
        merciful: 40,
        generous: 30,
        forgiving: 20
      }
    },
    'loyal': {
      key: 'loyal',
      type: ['calm'],
      traits: {
        trusting: 60,
        prudent: -10,
        merciful: 20,
        forgiving: 10
      }
    },
    'sophisticated': {
      key: 'sophisticated',
      type: ['calm'],
      traits: {
        modest: -40,
        // pious: 30,
        honest: -10,
        forgiving: -10,
        temperate: -10
      }
    },
    'weak-willed': {
      key: 'weak-willed',
      type: ['calm'],
      traits: {
        temperate: -60,
        chaste: -50,
        valorous: -10
      }
    },
    'withdrawn': {
      key: 'withdrawn',
      type: ['stress'],
      traits: {
        energetic: -30,
        just: -10 // pious: 30

      }
    },
    'murderous': {
      key: 'murderous',
      type: ['stress'],
      traits: {
        forgiving: -50,
        merciful: -50,
        trusting: -10
      }
    },
    'obsessive': {
      key: 'obsessive',
      type: ['stress'],
      traits: {
        trusting: -80,
        honest: -30,
        // pious: 40,
        prudent: 30
      }
    },
    'authoritarian': {
      key: 'authoritarian',
      type: ['stress'],
      traits: {
        honest: -20,
        modest: -40,
        // pious: 10,
        forgiving: -20,
        generous: -10
      }
    },
    'determined': {
      key: 'determined',
      type: ['stress'],
      traits: {
        prudent: 50,
        just: 40,
        energetic: 20,
        valorous: 60
      }
    },
    'brave': {
      key: 'brave',
      type: ['stress'],
      traits: {
        generous: 40,
        just: 30,
        modest: 20,
        valorous: 60
      }
    },
    'spiteful': {
      key: 'spiteful',
      type: ['stress'],
      traits: {
        forgiving: -40,
        generous: -30,
        trusting: -30
      }
    },
    'belligerent': {
      key: 'belligerent',
      type: ['stress'],
      traits: {
        forgiving: -30,
        honest: -20,
        modest: -10
      }
    },
    'caustic': {
      key: 'caustic',
      type: ['stress'],
      traits: {
        modest: -10,
        forgiving: -40,
        prudent: -10,
        temperate: -10
      }
    },
    'reckless': {
      key: 'reckless',
      type: ['stress'],
      traits: {
        prudent: -70,
        temperate: -20,
        just: -20
      }
    },
    'argumentative': {
      key: 'argumentative',
      type: ['stress'],
      traits: {
        generous: -10,
        merciful: -20,
        honest: -20
      }
    },
    'gluttonous': {
      key: 'gluttonous',
      type: ['stress'],
      traits: {
        generous: -40,
        energetic: -50
      }
    },
    'overly protective': {
      key: 'overly protective',
      type: ['stress'],
      traits: {
        prudent: 50,
        // pious: 20,
        generous: 30,
        forgiving: -20,
        trusting: -30
      }
    },
    'angry': {
      key: 'angry',
      type: ['stress', 'calm'],
      traits: {
        temperate: -40,
        merciful: -40,
        prudent: -10,
        forgiving: -30
      }
    },
    'cowardly': {
      key: 'cowardly',
      type: ['stress'],
      traits: {
        valorous: -70,
        trusting: -20,
        generous: -10
      }
    },
    'meticulous': {
      key: 'meticulous',
      type: ['stress'],
      traits: {
        prudent: 60,
        trusting: -30,
        just: 40
      }
    },
    'sarcastic': {
      key: 'sarcastic',
      type: ['stress'],
      traits: {
        merciful: -20,
        modest: -20,
        temperate: -10
      }
    },
    'stubborn': {
      key: 'stubborn',
      type: ['stress'],
      traits: {
        modest: -30,
        prudent: -30,
        trusting: -30
      }
    },
    'destructive': {
      key: 'destructive',
      type: ['stress'],
      traits: {
        merciful: -30,
        just: -60,
        prudent: -50
      }
    },
    'practical': {
      key: 'practical',
      type: ['stress'],
      traits: {
        prudent: 70,
        energetic: 10,
        just: 20
      }
    },
    'pushy': {
      key: 'pushy',
      type: ['stress'],
      traits: {
        energetic: 10,
        modest: -30,
        temperate: -10,
        just: -30
      }
    },
    'fanatical': {
      key: 'fanatical',
      type: ['stress'],
      traits: {
        just: -50,
        prudent: -50,
        energetic: 30 // pious: 30

      }
    },
    'secretive': {
      key: 'secretive',
      type: ['stress'],
      traits: {
        trusting: -40,
        honest: -70
      }
    },
    'scornful': {
      key: 'scornful',
      type: ['stress'],
      traits: {
        merciful: -30,
        just: -20
      }
    },
    'courageous': {
      key: 'courageous',
      type: ['stress'],
      traits: {
        generous: 30,
        prudent: -30,
        valorous: 50
      }
    },
    'impractical': {
      key: 'impractical',
      type: ['stress'],
      traits: {
        prudent: -60,
        // pious: 30,
        just: -10
      }
    },
    'calculating': {
      key: 'calculating',
      type: ['stress'],
      traits: {
        just: 30,
        honest: -20,
        trusting: -10,
        modest: -10
      }
    },
    'industrious': {
      key: 'industrious',
      type: ['stress'],
      traits: {
        energetic: 40,
        modest: 30,
        prudent: 10,
        temperate: 40
      }
    },
    'compulsive': {
      key: 'compulsive',
      type: ['stress'],
      traits: {
        just: -40,
        generous: -10,
        prudent: -60
      }
    },
    'intolerant': {
      key: 'intolerant',
      type: ['stress'],
      traits: {
        // pious: 40,
        trusting: -40,
        forgiving: -30
      }
    }
  };
  const vocalPatterns = ['is incoherent except for a few key words', 'stutters', 'says ‘um’ a lot', 'says ‘like’ a lot', 'swears', "uses thee's and thou's", 'never stops to breathe', 'uses short, clipped sentences', 'talks in third person', "doesn't conjugate well (‘me make good soup’)", 'rolls R’s', 'never uses contractions', 'is whiny', 'obviously has a stuffy nose', 'tongue stuck to back of teeth', 'does so through clenched teeth', 'speaks in a sing-song voice', 'likes to rhyme', "spits on every 's' sound", 'makes all Th-sounds become Z-sounds', 'repeats the last few words of a sentence/thought (‘nice to meet you, meet you’)', 'uses full titles or descriptions of how he knows you (‘ellen-farmers-daughter is pretty’)', 'strings together adjectives/adverbs for more impact (‘wow, your dress is pretty-pretty!’ ‘I am short-short-short.’)', 'appends all non-proper nouns end with ‘en’/’sen’ (‘may I have some applesen?’ ‘I saw a big moosen!’)', 'speaks in such a way that all L-sounds become w-sounds', 'repeats the last word you say before responding', 'sings everything', 'does the wrong emphasis on the wrong syllables', 'pauses often', 'has a clipped pattern of speech', 'is rather monotonous', 'whistles on S-sounds', 'spits on Th-sounds and S-sounds (think Sylvester the cat from Looney toons)', 'has a light lisp', 'makes all r-sounds become w-sounds', 'has a severe underbite', 'has a severe overbite', 'speaks out of the corner of his mouth', 'is always pouting', 'makes ‘ar/er’ sounds become ‘aye’ sounds (fart will sound like fight, water will sound like watay)', 'makes soft letters elongated (‘ssssso, hhhhhhow are you?’)', 'slurs words', 'always has a full mouth while talking', 'sighs after each sentence', 'never uses am/is/are/was/were (‘I big.’ ‘She pretty.’)}', 'responds in the form of questions', 'mutters'];

  /**
   * @usage 'is _____'
   */

  const traitDescriptions = {
    chaste: [[19, 'totally asexual'], [18, 'asexual'], [17, 'pure of thought'], [16, 'relatively pure of thought'], [15, 'chaste'], [14, 'mostly chaste'], [13, ''], [12, ''], [11, ''], [10, ''], [9, ''], [8, ''], [7, ''], [6, 'prone to lust'], [5, 'sometimes lustful'], [4, 'often lustful'], [3, 'constantly thinking lusty thoughts'], [2, 'unable to avoid lusty thoughts'], [1, 'totally beholden to lust']],
    energetic: [[19, 'a veritable never-ending fountain of energy'], [18, 'full of energy'], [17, 'bright and energetic'], [16, 'energetic'], [15, 'perky'], [14, 'switched-on'], [13, ''], [12, ''], [11, ''], [10, ''], [9, 'un-energetic'], [8, 'listless'], [7, 'lethargic'], [6, 'work-shy'], [5, 'languid'], [4, 'slothful'], [3, 'lazy'], [2, 'torpid'], [1, 'virtually catatonic']],
    forgiving: [[19, 'clement'], [18, 'forgiving'], [17, 'lenient'], [16, 'pitying'], [15, 'compassionate'], [14, 'soft-hearted'], [13, ''], [12, ''], [11, ''], [10, ''], [9, ''], [8, ''], [7, ''], [6, 'implacable'], [5, 'resentful'], [4, 'blame-prone'], [3, 'always eager to lay blame'], [2, 'unforgiving'], [1, 'vengeful']],
    generous: [[19, 'magnanimous'], [18, 'generous to a fault'], [17, 'extremely selfless'], [16, 'selfless'], [15, 'very generous'], [14, 'generous'], [13, ''], [12, ''], [11, ''], [10, ''], [9, ''], [8, ''], [7, ''], [6, 'selfish'], [5, 'self-centered'], [4, 'very self centered'], [3, 'incredibly selfish'], [2, 'narcissistic'], [1, 'perfectly narcissistic']],
    honest: [[19, 'incapable of telling a lie'], [18, 'authentic'], [17, 'honest'], [16, 'sincere'], [15, 'forthright'], [14, 'straightforward'], [13, ''], [12, ''], [11, ''], [10, ''], [9, ''], [8, ''], [7, ''], [6, 'prone to lying'], [5, 'underhanded'], [4, 'untruthful'], [3, 'deceptive'], [2, 'deceitful'], [1, 'able to lie as readily as breathe']],
    just: [[19, 'totally fair'], [18, 'just'], [17, 'equitable'], [16, 'fair-minded'], [15, 'fair'], [14, 'nondiscriminatory'], [13, ''], [12, ''], [11, ''], [10, ''], [9, ''], [8, ''], [7, ''], [6, 'inconsistent'], [5, 'erratic'], [4, 'subjective'], [3, 'irresponsible'], [2, 'willful'], [1, 'capricious']],
    merciful: [[19, 'a veritable bleeding heart'], [18, 'tenderhearted'], [17, 'merciful'], [16, 'lenient'], [15, 'charitable'], [14, 'not prone to any sort of cruelty'], [13, ''], [12, ''], [11, ''], [10, ''], [9, ''], [8, ''], [7, ''], [6, 'unkind'], [5, 'callous'], [4, 'merciless'], [3, 'cruel'], [2, 'wickedly cruel'], [1, 'cold-blooded']],
    modest: [[19, 'totally humble'], [18, 'content to not be the centre of attention'], [17, 'simple and unassuming'], [16, 'modest'], [15, 'bashful in the face of praise'], [14, 'unpretentious'], [13, ''], [12, ''], [11, ''], [10, ''], [9, ''], [8, 'pretentious'], [7, 'cavalier'], [6, 'prone to boasting'], [5, 'self-important'], [4, 'boastful'], [3, 'proud'], [2, 'conceited'], [1, 'narcissistic']],
    // pious: [
    //   [19, 'a true born-again'],
    //   [18, 'sanctimonious'],
    //   [17, 'unshakingly faithful'],
    //   [16, 'saintly'],
    //   [15, 'devout'],
    //   [14, 'pious'],
    //   [13, ''],
    //   [12, ''],
    //   [11, ''],
    //   [10, ''],
    //   [9, ''],
    //   [8, ''],
    //   [7, ''],
    //   [6, 'agnostic'],
    //   [5, 'atheistic'],
    //   [4, 'impious'],
    //   [3, 'worldly'],
    //   [2, 'ungodly'],
    //   [1, 'blasphemous']
    // ],
    prudent: [[19, 'always thinking twice'], [18, 'vigilant'], [17, 'prudent'], [16, 'cautious'], [15, 'careful'], [14, 'shrewd'], [13, ''], [12, ''], [11, ''], [10, ''], [9, ''], [8, ''], [7, ''], [6, 'carefree'], [5, 'careless'], [4, 'imprudent'], [3, 'brash'], [2, 'reckless'], [1, 'foolhardy']],
    temperate: [[19, 'able to withstand any temptation'], [18, 'unlikely to give in to temptation'], [17, 'temperate'], [16, 'restrained'], [15, 'controlled and sober'], [14, 'moderate'], [13, ''], [12, ''], [11, ''], [10, ''], [9, ''], [8, ''], [7, ''], [6, 'prone to indulging'], [5, 'somewhat hedonistic'], [4, 'indulgent'], [3, 'self-indulgent'], [2, 'hedonistic'], [1, 'unable to control any urges']],
    trusting: [[19, 'like a puppy, instantly trusting'], [18, 'unlikely to doubt'], [17, 'trusting'], [16, 'quick to believe'], [15, 'always assuming the best of people'], [14, 'not prone to suspicion'], [13, ''], [12, ''], [11, ''], [10, ''], [9, ''], [8, ''], [7, ''], [6, 'leery and watchful'], [5, 'mistrustful'], [4, 'prone to suspicion'], [3, 'always doubting people'], [2, 'slow to believe in people'], [1, 'suspicious of people']],
    valorous: [[19, 'the epitome of bravery'], [18, 'valorous'], [17, 'brave'], [16, 'courageous'], [15, 'fearless'], [14, 'gallant'], [13, 'confident'], [12, ''], [11, ''], [10, ''], [9, ''], [8, ''], [7, ''], [6, 'apprehensive'], [5, 'lily-livered'], [4, 'fainthearted'], [3, 'spineless'], [2, 'cowardly'], [1, 'craven']]
  };

  const getTraitPositiveOrNegative = (firstTrait, secondTrait) => {
    if (Math.abs(firstTrait - secondTrait) > 9) return 'but';
    return 'and';
  };

  const getTraitDescription = (trait, roll) => {
    let results;

    for (const [num, description] of traitDescriptions[trait]) {
      if (roll >= num) {
        results = description;
        break;
      }
    }

    if (results) return results;
    return null;
  };
  const getAllTraits = npc => {
    const traitDescriptions = [];

    for (const temp in npc.roll.traits) {
      const trait = temp;
      const roll = getTrait(trait, npc, true); // const roll = Math.clamp(npc.roll.traits[trait] / 5, 1, 19)

      const result = getTraitDescription(trait, roll);

      if (result) {
        traitDescriptions.push({
          trait,
          roll,
          result
        });
      }
    }

    return traitDescriptions;
  };
  const parseTraitIntoTop = (npc, traits, targetLength = 4) => {
    let result = '';
    if (traits.length < targetLength) targetLength = traits.length;
    if (targetLength === 0) return '';
    if (targetLength < 4) return `${lib.makeList(traits.slice(0, targetLength).map(trait => trait.result))}.`;

    for (let i = 0; i < targetLength - 1; i++) {
      let and;
      if (i > 0) and = getTraitPositiveOrNegative(traits[i - 1].roll, traits[i].roll);

      if (i < targetLength - 2) {
        if (and === 'and') {
          result += `${traits[i]?.result}, `;
        } else if (and === 'but') {
          result += `but is ${traits[i]?.result}`;

          if (i < targetLength - 3) {
            result += `. ${npc.heshe.toUpperFirst()} also is `;
          } else {
            result += ', ';
          }
        } else {
          result += `${traits[i]?.result}, `;
        }
      } else if (i < targetLength - 3) {
        if (and === 'but') {
          result += `but is ${traits[i]?.result}`;
        } else if (and === 'and') {
          result += `${traits[i]?.result}, and `;
        } else {
          result += `${traits[i]?.result}, and `;
        }
      }
    }

    if (traits[targetLength].result) result += traits[targetLength].result;
    result += '.';
    return result;
  };
  const filterTraits = traits => {
    return traits.filter(trait => Math.abs(trait.roll - 10) > 5);
  };
  const sortTraitListByMostExtreme = traits => {
    const middlePoint = 10;
    return traits.sort((a, b) => Math.abs(a.roll - middlePoint) - Math.abs(b.roll - middlePoint));
  };
  const sortTraitList = traits => {
    return traits.sort((a, b) => a.roll - b.roll);
  };
  const parseTraitIntoSentences = (npc, traits) => {
    console.log(traits);
    let result = `${npc.firstName} is `;

    for (let i = 0; i < traits.length - 2; i++) {
      result += `${traits[i]?.result}, `;
    }

    result += ` ${getTraitPositiveOrNegative(traits[traits.length - 2].roll, traits[traits.length - 1].roll)} ${traits[traits.length - 1].result}.`;
    console.log(result);
    return result;
  };
  const getTraitsReadout = npc => {
    const traitDescriptions = filterTraits(sortTraitListByMostExtreme(getAllTraits(npc)));
    return parseTraitIntoTop(npc, traitDescriptions);
  };

  const religion = {
    strength: [// npc.name is a _______
    [100, 'fanatical true believer'], [90, 'unshakingly devoted believer'], [80, 'conspicuously faithful believer'], [70, 'outspoken believer'], [60, 'quiet true believer'], [50, 'casual observer'], [40, 'open-minded seeker'], [30, 'cautious listener'], [20, 'critical student'], [10, 'outspoken cynic'], [0, 'broken heretic']],
    abstractGod: ['Our Lady', 'Our Mother', 'the Ancient Flame', 'the Ancient Oak', 'the Autumn Singer', 'the Bat', 'the Battle-Lord', 'the Bear', 'the Beast', 'the Beast-Tamer', 'the Beast-Wife', 'the Beauty Queen', 'the Blood-Bringer', 'the Burning Man', 'the Crone', 'the Cruel King', 'the Dark Lady', 'the Dark Lord', 'the Dark Prophet', 'the Death Harbinger', 'the Doom Harbinger', 'the Doom-Maker', 'the Eagle', 'the Earth-Mother', 'the Earth-Queen', 'the Enemy', 'the Eternal Light', 'the Eternal Sage', 'the Fair Maiden', 'the Fatespinner', 'the Felled Tree', 'the Fire Dragon', 'the Forest Keeper', 'the Frog', 'the Gloom-Spider', 'the Goddess', 'the Grain-Grower', 'the Great Huntress', 'the Great Protector', 'the Great Smith', 'the Horned One', 'the Judge', 'the King Beneath the Waves', 'the Lawgiver', 'the Life-Keeper', 'the Life-Tree', "the Light's Son", 'the Magic-Maid', 'the Messenger', 'the Mighty Hunter', 'the Mighty One', 'the Mighty Warrior', 'the Mischief-Maker', 'the Moon-Witch', 'the Mountain Forger', 'the Night Queen', 'the Oathkeeper', 'the Oracle', 'the Prophet', 'the Sacred Grove', 'the Savior', 'the Scorpion', 'the Sea Dragon', 'the Sea God', 'the Sea Queen', 'the Seductress', 'the Shadow', 'the Shadowkeeper', 'the Shadow-Serpent', 'the Shield-Maiden', 'the Ship-Taker', 'the Sky Father', 'the Soothsayer', 'the Soul-Collector', 'the Soul-Eater', 'the Spider', 'the Spring Maiden', 'the Starfinder', 'the Stone Dragon', 'the Storm Dragon', 'the Storm King', 'the Storm-Bringer', 'the Summer Mistress', 'the Sunkeeper', 'the Sword-Prince', 'the Thief', 'the Tormenter', 'the Tree Spirit', 'the Undying Light', 'the Unnamed One', 'the Unyielding Tyrant', 'the Voice', 'the Wandering Rogue', 'the War-Maker', 'the Watcher', 'the Watchful Eye', 'the Wind King', 'the Winemaker', 'the Winter Lady', 'the Wolf'],
    saint: ['Almar the Holy', 'Amaya the Seeress', 'Bahak the Preacher', 'Bahruz the Prophet', 'Lira the Flamekeeper', 'Mozar the Conqueror', 'Prince Tarunal', 'Queen Kalissa', 'Rahal the Sunsoul', 'Raham the Lightbringer', 'St. Aemilia', 'St. Albus', 'St. Anglos', 'St. Antonia', 'St. Antonus', 'St. Austyn', 'St. Bardo', 'St. Beatrix', 'St. Berta', 'St. Bettius', 'St. Bryenn', 'St. Buttercup', 'St. Carolo', 'St. Cedrick', 'St. Cordelia', 'St. Cowhan', 'St. Cumberbund', 'St. Dorys', 'St. Dreddos', 'St. Dwayn', 'St. Edwynna', 'St. Elayne', 'St. Falstyus', 'St. Farcas', 'St. Florenzo', 'St. Gabrella', 'St. Gaiorgus', 'St. Goodkynd', 'St. Hal', 'St. Halcincas', 'St. Haroldus', 'St. Hemingwar', 'St. Heraclora', 'St. Hermioninny', 'St. Hieronymus', 'St. Inigo', 'St. Jordyn', 'St. Katrynn', 'St. Lannus', 'St. Leo', 'St. Leryo', 'St. Londyn', 'St. Magio', 'St. Marius', 'St. Markuz', 'St. Martyn', 'St. Matromus', 'St. Morrsona', 'St. Morwayne', 'St. Murkel', 'St. Mychel', 'St. Nyneva', 'St. Paolo', 'St. Parrinus', 'St. Perseon', 'St. Petyr', 'St. Podryck', 'St. Polly', 'St. Pratchytt', 'St. Rawynn', 'St. Regus', 'St. Ricarddos', 'St. Roberts', 'St. Robinus', 'St. Rowhan', 'St. Rowlynna', 'St. Sansima', 'St. Sessimus', 'St. Severus', 'St. Stynebick', 'St. Symeon', 'St. Theseon', 'St. Thoryn', 'St. Tolkkyn', 'St. Twayn', 'St. Xavos', 'the Deliverer', 'the Doomcaller', 'the Doomsayer', 'the Lawgiver', 'the Oracle', 'the Prophet', 'the Savior', 'the Seeker', 'the Shadowseer', 'the Soothsayer', 'the Starwatcher', 'the Truthsayer', 'the Voice', 'Zefar the Sorcer'],
    pantheon: {
      greek: {
        name: 'greek',
        description: 'The gods of Olympus make themselves known with the gentle lap of waves against the shores and the crash of the thunder among the cloud–enshrouded peaks. The thick boar–infested woods and the sere, olive–covered hillsides hold evidence of their passing. Every aspect of nature echoes with their presence, and they’ve made a place for themselves inside the human heart, too.',
        followers: {
          description: '',
          favouredWeapon: '',
          holyDays: {
            title: 'Holy Days',
            children: []
          }
        },
        gods: [{
          // Zeus
          objectType: 'deity',
          passageName: 'DeityProfile',
          name: 'Zeus',
          key: 'Zeus',
          status: 'alive',
          titles: ['God of the Sky', 'Ruler of the Gods', 'The Thunderer', 'God of Refuge', 'Oathkeeper'],
          aliases: [],
          rank: 'leader',
          description: 'Zeus is the leader of the Greek gods, and lives atop Mount Olympus, where he rules over the mortal world below.',
          appearance: 'Zeus is depicted as a regal, mature man with a sturdy figure and dark beard grasping a lightning bolt and wreathed in a crown of olive leaves.',
          history: {
            title: 'History'
          },
          powers: {
            title: 'powers',
            children: []
          },
          quotes: [{
            description: 'Bear up, my child, bear up; Zeus who oversees and directs all things is still mighty in heaven.',
            author: 'Sophocles'
          }],
          portfolios: ['the skies', 'thunder and lightning', 'kings', 'law and order', 'fate', 'justice', 'moral conduct', 'guest-right'],
          gender: 'man',
          shape: 'human',
          race: 'god',
          domains: ['tempest', 'order'],
          channelDivinity: {
            title: 'Channel Divinity',
            children: []
          },
          alignment: 'Neutral',
          symbol: 'fist full of lightning bolts',
          combat: {
            title: 'Military Prowess',
            description: 'Zeus famously led the Greek gods in the battle against the Titans, and is a fearsome foe. He calls down electric energy and fashions them into mighty spears of lightning to hurl at his enemies.'
          },
          probabilityWeightings: {
            politicalIdeology: {
              autocracy: 5,
              oligarchy: 3
            },
            politicalSource: {
              'absolute monarchy': 6,
              'constitutional monarchy': 3
            },
            race: {
              'human': 20,
              'half-elf': 5
            }
          },
          possessions: {
            title: 'Possessions',
            children: [{
              title: 'Aegis',
              description: 'The Aegis bears the head of a Gorgon, and makes a terrible roaring sound in battle.'
            }]
          },
          realm: 'Olympus, where he rules over all.',
          followers: {
            description: 'Zeus is followed by many, of all different race and creed.',
            favouredWeapon: 'spear',
            holyDays: {
              title: 'Holy Days',
              children: [{
                title: 'earth',
                children: [{
                  title: 'January'
                }, {
                  title: 'Thursday'
                }]
              }]
            }
          },
          personality: {
            just: 70,
            merciful: -85,
            chaste: -80
          },
          associations: {
            avatars: [],
            animals: ['eagle', 'bull'],
            plants: ['oak tree', 'olive tree'],
            monsters: [],
            gems: [],
            colours: ['yellow'],
            miscellaneous: []
          },
          beliefs: {
            title: 'beliefs',
            children: [{
              title: 'Oaths',
              description: 'A promise or an oath is a sacred bond that should not be broken.'
            }]
          },
          heresies: {
            title: 'heresies',
            children: []
          },
          blessings: {
            title: 'blessings',
            children: []
          },
          curses: {
            title: 'curses',
            children: []
          },
          allies: {
            title: 'allies',
            children: []
          },
          enemies: {
            title: 'enemies',
            children: []
          },
          relationships: [{
            name: 'Poseidon',
            relationship: 'brother'
          }, {
            name: 'Hades',
            relationship: 'brother'
          }, {
            name: 'Demeter',
            relationship: 'sister'
          }, {
            name: 'Athena',
            relationship: 'daughter'
          }, {
            name: 'Persephone',
            relationship: 'daughter'
          }, {
            name: 'Artemis',
            relationship: 'daughter'
          }, {
            name: 'Ares',
            relationship: 'son'
          }, {
            name: 'Apollo',
            relationship: 'son'
          }],
          maxims: [{
            title: ''
          }]
        }, {
          // Poseidon
          objectType: 'deity',
          passageName: 'DeityProfile',
          name: 'Poseidon',
          key: 'Poseidon',
          status: 'alive',
          aliases: ['Neptune'],
          titles: ['God of the Sea and Earthquakes', 'Watcher', 'Shaker of the Earth', 'Horse Tender'],
          rank: 'greater deity',
          description: 'Poseidon is the god of the Sea - all things underwater are under his purview',
          appearance: 'a mature man with a sturdy build and a dark beard holding a trident and a sea-creature encrusted boulder, simply crowned with a headband with a cloak draped around his arms.',
          history: {
            title: 'history',
            children: []
          },
          powers: {
            title: 'powers',
            children: []
          },
          portfolios: ['the sea', 'earthquakes', 'floods', 'drought', 'horses', 'fresh water'],
          gender: 'man',
          shape: 'human',
          race: 'god',
          domains: ['tempest'],
          channelDivinity: {
            title: 'Channel Divinity',
            children: []
          },
          alignment: 'Chaotic Neutral',
          symbol: 'A trident and billowing cloak',
          combat: {
            title: 'combat',
            children: []
          },
          probabilityWeightings: {
            economicIdeology: {
              primitivism: 3
            },
            politicalIdeology: {
              autocracy: 8,
              oligarchy: 5
            },
            politicalSource: {
              'absolute monarchy': 5,
              'constitutional monarchy': 5
            },
            race: {
              'human': 20,
              'half-elf': 5
            }
          },
          possessions: {
            title: 'Possessions',
            children: [{
              title: 'Poseidon\'s Trident',
              description: 'Poseidon\'s trident was so powerful that it could shake the lands.'
            }]
          },
          realm: 'a palace underneath the sea, watching over the fishermen from below.',
          followers: {
            description: 'Poseidon is followed by many mariners, fishermen, and horse riders.',
            adherents: ['sailors', 'teamsters', 'fishermen', 'cavalry', 'farmers'],
            favouredWeapon: 'trident',
            holyDays: {
              title: 'Holy Days',
              children: []
            }
          },
          personality: {
            just: 50,
            merciful: -85,
            chaste: -80
          },
          associations: {
            avatars: [],
            animals: ['horse', 'dolphin', 'fish', 'bull'],
            plants: ['pine tree', 'seaweed', 'wild celery'],
            monsters: ['hippocampus'],
            gems: [],
            colours: ['blue'],
            miscellaneous: []
          },
          beliefs: {
            title: 'beliefs',
            children: []
          },
          heresies: {
            title: 'heresies',
            children: []
          },
          blessings: {
            title: 'blessings',
            children: [{
              title: 'smooth sailing',
              description: 'Poseidon will bless sailors and those that have earnt his favour with smooth passage.'
            }, {
              title: 'management of horses',
              description: 'As the Lord of Horses, Poseidon can calm equines as easily as he can enrage them.'
            }]
          },
          curses: {
            title: 'curses',
            children: [{
              title: 'mad horses',
              description: 'As the Lord of Horses, Poseidon can enrage equines as easily as he can calm them.'
            }, {
              title: 'stormy seas',
              description: "Those that tempt Poseidon's wrath risk stormy seas on their next voyage."
            }]
          },
          allies: {
            title: 'allies',
            children: []
          },
          enemies: {
            title: 'enemies',
            children: []
          },
          relationships: [{
            name: 'Zeus',
            relationship: 'brother'
          }, {
            name: 'Hades',
            relationship: 'brother'
          }, {
            name: 'Demeter',
            relationship: 'sister'
          }, {
            name: 'Hera',
            relationship: 'sister'
          }, {
            name: 'Hestia',
            relationship: 'sister'
          }, {
            name: 'Amphitrite',
            relationship: 'wife'
          }],
          maxims: [{
            title: ''
          }]
        }, {
          // Hades
          objectType: 'deity',
          passageName: 'DeityProfile',
          name: 'Hades',
          key: 'Hades',
          status: 'alive',
          aliases: ['Pluto', 'Pluton', 'The Cthonic Zeus'],
          equivalent: ['Pluto'],
          // Pluto was originally a different god to Hades
          titles: ['God of the Dead', 'King of the Underworld', 'God of Wealth', 'Host of Many', 'The Impartial Binder', 'The invisible one'],
          rank: 'greater deity',
          description: 'Hades is the god of the Dead and the first son of Kronos. However when He, Zeus and Poseidon were drawing lots for the division of the cosmos, Hades gained dominion of the Underworld, where he rules over the dead.',
          appearance: 'a dark-bearded, regal god, with a bird tipped sceptre with Cerebus seated by his throne.',
          history: {
            title: 'history',
            children: []
          },
          powers: {
            title: 'powers',
            children: []
          },
          portfolios: ['the underworld', 'the dead', 'funeral rites', 'right to be buried', 'fertile soil', 'precious metals', 'dreams from the dead', 'necromancy', 'curses'],
          gender: 'man',
          shape: 'human',
          race: 'god',
          domains: ['death', 'grave'],
          channelDivinity: {
            title: 'Channel Divinity',
            children: []
          },
          alignment: 'Lawful Evil',
          symbol: 'Helm of Hades',
          combat: {
            title: 'combat',
            children: []
          },
          probabilityWeightings: {
            economicIdeology: {
              capitalism: 4
            },
            politicalIdeology: {
              kleptocracy: 5
            },
            politicalSource: {},
            race: {
              dwarf: 20,
              tiefling: 30
            }
          },
          possessions: {
            title: 'Possessions',
            children: [{
              title: 'Sceptre',
              description: 'A powerful relic that is able to create a passage between the worlds of the living and the dead'
            }, {
              title: 'Cap of Invisibility',
              description: 'A cap which can turn the wearer invisible'
            }]
          },
          realm: "the Underworld. As far below the earth as the heavens are above, Hades' realm is a dark and depressing place.",
          followers: {
            description: 'Hades, as the god of the dead, was a fearsome figure to those still living; in no hurry to meet him, they were reluctant to swear oaths in his name, and averted their faces when sacrificing to him. Since to many, simply to say the word "Hades" was frightening, euphemisms were pressed into use.',
            adherents: ['mourners', 'undertakers', 'necromancers', 'miners'],
            favouredWeapon: undefined,
            holyDays: {
              title: 'Holy Days',
              children: [{
                title: 'second to last day of every month',
                description: 'Rituals are typically held on this day.'
              }]
            }
          },
          personality: {
            just: 90,
            merciful: -85,
            chaste: -20
          },
          associations: {
            avatars: [// {
              //   name: 'Ploutos',
              //   appearance: undefined,
              //   description: 'As Ploutos, Hades is the God of wealth and precious metals',
              //   frequency: undefined,
              //   powers: undefined
              // }
            ],
            animals: ['Screech-Owl', 'Serpents', // Not Sure
            'Black-Rams' // Not Sure
            // Hades' Cattle? Not sure because it is specifically the cattle of Hades (Likewise Apollo has cattle that are his)
            ],
            plants: ['White Poplar', 'Mint', 'Cypress', 'Asphodel', 'Narcissus'],
            monsters: ['Cerebus', 'The Erinyes'],
            gems: [],
            colours: [],
            miscellaneous: []
          },
          beliefs: {
            title: 'beliefs',
            children: []
          },
          heresies: {
            title: 'heresies',
            children: []
          },
          blessings: {
            title: 'blessings',
            children: [{
              title: 'plenty from the earth',
              description: 'As the lord of the underworld, Hades has considerable wealth, and can bestow riches to those he deems worthy.'
            }, {
              title: 'the ability to go un-noticed',
              description: 'Hades can give those that wish to be unseen the power to avoid detection in the dark.'
            }]
          },
          curses: {
            title: 'curses',
            children: []
          },
          allies: {
            title: 'allies',
            children: []
          },
          enemies: {
            title: 'enemies',
            children: []
          },
          relationships: [{
            name: 'Poseidon',
            relationship: 'brother'
          }, {
            name: 'Zeus',
            relationship: 'brother'
          }, {
            name: 'Demeter',
            relationship: 'sister'
          }, {
            name: 'Hera',
            relationship: 'sister'
          }, {
            name: 'Hestia',
            relationship: 'sister'
          }, {
            name: 'Persephone',
            relationship: 'husband'
          }],
          maxims: [{
            title: ''
          }]
        }, {
          // Aphrodite
          objectType: 'deity',
          passageName: 'DeityProfile',
          name: 'Aphrodite',
          key: 'Aphrodite',
          status: 'alive',
          aliases: ['Venus'],
          equivalent: ['Ishtar', 'Astarte'],
          titles: ['The Deviser', 'The Goddess for all folk', 'Smile-loving', 'The Goddess of Beauty', 'The Goddess of Sexuality', 'The Shapely', 'Killer of Men', 'Gravedigger', 'the Mother'],
          rank: 'greater deity',
          description: 'Aphrodite is the goddess of love and scorns those who stay away from relationships. Her love can be a thing of beauty or a thing of terror and destruction.',
          appearance: 'Aphrodite is consistently portrayed as a nubile, infinitely desirable adult, having had no childhood.',
          history: {
            title: 'history',
            children: []
          },
          powers: {
            title: 'powers',
            children: []
          },
          portfolios: ['love', 'lovers', 'lust', 'sexuality', 'beauty', 'pleasure', 'procreation', 'prostitutes', 'love poetry'],
          gender: 'woman',
          shape: 'human',
          race: 'god',
          domains: ['life', 'light', 'trickery', 'war'],
          channelDivinity: {
            title: 'Channel Divinity',
            children: []
          },
          alignment: 'Chaotic Good',
          symbol: 'dove',
          combat: {
            title: 'Combat',
            children: [{
              title: 'A Darker Side',
              description: 'While Aphrodite is most well known as the goddess of Love, she is also known as a goddess of War - especially by people like the Spartans.'
            }]
          },
          probabilityWeightings: {
            economicIdeology: {
              syndicalism: 4,
              primitivism: 8
            },
            politicalIdeology: {
              kleptocracy: 4,
              magocracy: 3
            },
            politicalSource: {},
            race: {
              halfling: 20,
              tiefling: 15
            }
          },
          possessions: {
            title: 'Possessions',
            children: [{
              title: 'Girdle',
              description: 'The Girdle inspires desire in all those who look upon the wearer'
            }]
          },
          realm: undefined,
          followers: {
            description: 'As the goddess of beauty and love the favour of Aphrodite was worshipped by all people, though especially by prostitutes.',
            adherents: ['everyone', 'prostitutes', 'warriors'],
            favouredWeapon: undefined,
            holyDays: {
              title: 'Holy Days',
              children: [{
                title: 'the fourth day of every month',
                description: 'Rituals are typically held on this day.'
              }]
            }
          },
          personality: {
            just: 30,
            merciful: -85,
            chaste: -100
          },
          associations: {
            avatars: [{
              title: 'Aphrodite Areia',
              description: 'Aphrodite Areia is a war-like aspect of Aphrodite. She appears clad in armour and bearing weapons and is worshipped by the Spartans and other war-loving people. Aphrodite is ready to use deciptive strategies, such as how she lured the Gigantes one by one into a cave for them to be murdered'
            }],
            animals: ['dove', 'swan', 'goose', 'sparrow', 'swallow', 'dolphins', 'wryneck' // English name for Iynx
            ],
            plants: ['pomegranates', 'rose', 'myrtle', 'apple', 'poppy'],
            monsters: ['nereids'],
            gems: [],
            colours: [],
            miscellaneous: ['conch shells']
          },
          beliefs: {
            title: 'beliefs',
            children: []
          },
          heresies: {
            title: 'heresies',
            children: []
          },
          blessings: {
            title: 'blessings',
            children: ['beauty']
          },
          curses: {
            title: 'Curses',
            children: ['ugliness', 'unwashable stink']
          },
          allies: {
            title: 'allies',
            children: []
          },
          enemies: {
            title: 'enemies',
            children: []
          },
          relationships: [{
            name: 'Zeus',
            relationship: 'father'
          }, {
            name: 'Ares',
            relationship: 'lover'
          }, {
            name: 'Hephaestus',
            relationship: 'husband'
          }, {
            name: 'Hebe',
            relationship: 'sister'
          }, {
            name: 'Heracles',
            relationship: 'brother'
          }, {
            name: 'Persephone',
            relationship: 'sister'
          }, {
            name: 'Hermes',
            relationship: 'lover'
          }, {
            name: 'Dionysus',
            relationship: 'lover'
          }, {
            name: 'Poseidon',
            relationship: 'lover'
          }],
          maxims: [{
            title: ''
          }]
        }, {
          // Artemis
          objectType: 'deity',
          passageName: 'DeityProfile',
          name: 'Artemis',
          key: 'Artemis',
          status: 'alive',
          aliases: ['Diana', 'Brauronia', 'Orthia'],
          equivalent: ['Selene', 'Britomartis', 'Dictynna', 'Eileithyial'],
          titles: ['Goddess of the Hunt', 'Goddess of the Beasts', 'Nurse of Children', 'Friend of Girls', 'Goddess of the Flocks and the Chase', 'The best advisor'],
          rank: 'greater deity',
          description: 'Artemis is the goddess of the Hunt and young girls. She can change others into animals as punishment for transgressions against her and she demands appropriate respect from mortals.',
          appearance: 'a young woman wearing a short costume that leaves her legs free and wielding a bow with a quiver of arrows.',
          history: {
            title: 'history',
            children: []
          },
          powers: {
            title: 'powers',
            children: []
          },
          portfolios: ['hunting', 'the wilderness', 'wild animals', 'childbirth', 'chastity', 'sudden death and disease of girls', 'the moon', 'dawn', 'children', 'maidenhood', 'healing', 'ritual purification'],
          gender: 'woman',
          shape: 'human',
          race: 'god',
          domains: ['nature', 'life', 'twilight'],
          channelDivinity: {
            title: 'Channel Divinity',
            children: []
          },
          alignment: 'Neutral Good',
          symbol: 'bow and quiver of arrows',
          combat: {
            children: [{
              title: 'A Dangerous Hunter',
              description: 'Artemis is quick to strike down those who offend her with animals and wild beasts. She is a dedicated huntress and will pursue her quarry until it is caught.'
            }]
          },
          probabilityWeightings: {
            economicIdeology: {
              feudalism: 2,
              primitivism: 6
            },
            politicalIdeology: {
              meritocracy: 4
            },
            politicalSource: {
              anarchy: 2
            },
            race: {
              'elf': 40,
              'half-elf': 20,
              'halfling': 15
            }
          },
          possessions: {
            title: 'Possessions',
            children: [{
              title: 'Bow of Artemis',
              description: 'The Bow of Artemis was forged by the Cyclopses'
            }]
          },
          realm: undefined,
          followers: {
            description: 'Artemis is worshipped by Hunters and Women, young girls could be expected to serve Artemis until they come of age.',
            adherents: ['hunters', 'young girls', 'expecting mothers', 'wild beings'],
            favouredWeapon: 'bow',
            holyDays: {
              title: 'Holy Days',
              children: [{
                title: 'the sixth day of the week',
                description: 'Rituals are typically held on this day.'
              }]
            }
          },
          personality: {
            just: 50,
            merciful: -85,
            chaste: 100
          },
          associations: {
            avatars: [],
            animals: ['deer', 'bear', 'boar', 'heron', 'fresh-water fish', 'buzzard-hawk', 'guinea-fowl', 'partridge'],
            plants: ['amaranth', 'asphodel', 'cypress', 'laurel', 'palm tree'],
            monsters: ['nymphs', 'calydonian boar'],
            places: ['forests'],
            gems: [],
            colours: [],
            miscellaneous: ['lyre', 'torches', 'spears and nets']
          },
          beliefs: {
            title: 'beliefs',
            children: [{
              title: 'chastity',
              description: 'Artemis and her followers value chastity above all else.'
            }]
          },
          heresies: {
            title: 'heresies',
            children: []
          },
          blessings: {
            title: 'blessings',
            children: []
          },
          curses: {
            title: 'Curses',
            children: [{
              title: 'transformation into a wild animal',
              description: 'As goddess of the hunt, Artemis can transform those that wrong her into wild animas to be hunted.'
            }]
          },
          allies: {
            title: 'allies',
            children: []
          },
          enemies: {
            title: 'enemies',
            children: []
          },
          relationships: [{
            name: 'Zeus',
            relationship: 'father'
          }, {
            name: 'Apollo',
            relationship: 'twin brother'
          }],
          maxims: [{
            title: ''
          }]
        }, {
          // Apollo
          objectType: 'deity',
          passageName: 'DeityProfile',
          name: 'Apollo',
          key: 'Apollo',
          status: 'alive',
          aliases: ['Apollon'],
          titles: ['Of the Oracle', 'Shooter from Afar', 'the Healer', 'Averter of Harm', 'Of the Locusts'],
          rank: 'greater deity',
          description: 'The twin brother of Artemis, Apollo is the inventor of music. Those that he loves and loses or those that he hates can find themselves transformed and immortalised as a part of nature. ',
          appearance: 'a handsome youth, beardless with long hair and holds either a lyre or a bow.',
          history: {
            title: 'history',
            children: []
          },
          powers: {
            title: 'powers',
            children: []
          },
          portfolios: ['music', 'prophecy', 'healing', 'archery', 'plague', 'sun', 'poetry', 'disease', 'sudden death and diseases of boys'],
          gender: 'man',
          shape: 'human',
          race: 'god',
          domains: ['light', 'knowledge', 'life'],
          channelDivinity: {
            title: 'Channel Divinity',
            children: []
          },
          alignment: 'Neutral',
          symbol: 'lyre',
          combat: {
            title: 'combat',
            children: []
          },
          probabilityWeightings: {
            economicIdeology: {
              feudalism: 3
            },
            politicalIdeology: {
              meritocracy: 5,
              sophocracy: 5,
              theocracy: 3
            },
            politicalSource: {},
            race: {
              halfling: 20,
              human: 5
            }
          },
          possessions: {
            title: 'Possessions',
            children: [{
              title: 'The Lyre of Apollo',
              description: 'When Hermes was a baby, he stole a number of Apollo\'s Cattle and took them to a cave in the woods near Pylos. In the cave, he found a tortoise and killed it, then removed the insides. He used one of the cow\'s intestines and the tortoise shell and made the first lyre. \n Apollo eventually found Hermes, but fell in love with the sound the lyre made. Apollo gifted the cattle to Hermes in exchange for the lyre and forgave Hermes for stealing his cattle. '
            }, {
              title: 'Bow of Apollo',
              description: 'The bow of Apollo fires arrows and plagues upon those who anger him'
            }]
          },
          realm: undefined,
          followers: {
            description: 'Oracles are often followers of Apollo, the Greatest of which is the Pythia of Delph, the high priestess of Apollo',
            adherents: ['musicians', 'oracles', 'doctors'],
            favouredWeapon: undefined,
            holyDays: {
              title: 'Holy Days',
              children: []
            }
          },
          personality: {
            just: 50,
            merciful: -85,
            chaste: -80
          },
          associations: {
            avatars: [],
            animals: ['swan', 'raven', 'python', 'wolves', 'dolphin', 'roe deer', 'cicada', 'hawk', 'crows', 'mouse'],
            plants: ['laurel', 'larkspur', 'cypress'],
            monsters: ['griffon'],
            gems: [],
            colours: [],
            miscellaneous: []
          },
          beliefs: {
            title: 'beliefs',
            children: []
          },
          heresies: {
            title: 'heresies',
            children: []
          },
          blessings: {
            title: 'blessings',
            children: []
          },
          curses: {
            title: 'curses',
            children: []
          },
          allies: {
            title: 'allies',
            children: []
          },
          enemies: {
            title: 'enemies',
            children: []
          },
          relationships: [{
            name: 'Zeus',
            relationship: 'father'
          }, {
            name: 'Artemis',
            relationship: 'twin sister'
          }],
          maxims: [{
            title: ''
          }]
        }, {
          // Athena
          objectType: 'deity',
          passageName: 'DeityProfile',
          name: 'Athena',
          key: 'Athena',
          status: 'alive',
          aliases: ['Minerva', 'Athene'],
          equivalent: ['Minerva'],
          titles: ['The Warlike', 'Defender', 'Keeper of the City', 'The Contriver of Plans and Devices', 'The Maiden', 'Of Hospitality', 'Of the Head'],
          rank: 'greater deity',
          description: 'Athena is a wise goddess and protects those that follow her. She does have the rage of a goddess, and affronts to her are paid back with divine retribution.',
          appearance: 'a stately woman wearing a helmet armed with a spear and Aegis',
          history: {
            title: 'history',
            children: []
          },
          powers: {
            title: 'powers',
            children: []
          },
          portfolios: ['wisdom', 'good counsel', 'olives', 'weaving', 'battle strategy', 'pottery', 'sculpture', 'defense of towns', 'heroic endeavour', 'crafts', 'invention', 'art', 'knowledge'],
          gender: 'woman',
          shape: 'human',
          race: 'god',
          domains: ['knowledge', 'order', 'war', 'trickery'],
          channelDivinity: {
            title: 'Channel Divinity',
            children: []
          },
          alignment: 'Lawful Good',
          symbol: ['Gorgoneion', 'Aegis'],
          combat: {
            title: 'combat',
            children: []
          },
          probabilityWeightings: {
            politicalIdeology: {
              militocracy: 5,
              meritocracy: 5,
              autocracy: 1
            },
            politicalSource: {
              'absolute monarchy': 5,
              'constitutional monarchy': 3
            },
            race: {
              human: 10,
              dwarf: 15,
              dragonborn: 15
            }
          },
          possessions: {
            title: 'Possessions',
            children: ['Aegis of Athena']
          },
          realm: undefined,
          followers: {
            description: 'Athena is the goddess of Craftsment, Wisdom and Heroes.',
            adherents: ['craftsmen', 'heroes', 'academics', 'strategists'],
            favouredWeapon: undefined,
            holyDays: {
              title: 'Holy Days',
              children: []
            }
          },
          personality: {
            just: 80,
            merciful: -80,
            chaste: 100
          },
          associations: {
            avatars: [],
            animals: ['owl', 'snake', 'rooster'],
            plants: ['olive tree'],
            monsters: [],
            gems: [],
            colours: [],
            miscellaneous: []
          },
          beliefs: {
            title: 'beliefs',
            children: []
          },
          heresies: {
            title: 'heresies',
            children: []
          },
          blessings: {
            title: 'blessings',
            children: []
          },
          curses: {
            title: 'curses',
            children: []
          },
          allies: {
            title: 'allies',
            children: []
          },
          enemies: {
            title: 'enemies',
            children: []
          },
          relationships: [{
            name: 'Zeus',
            relationship: 'father'
          }],
          maxims: [{
            title: ''
          }]
        }, {
          // Dionysus
          objectType: 'deity',
          passageName: 'DeityProfile',
          name: 'Dionysus',
          key: 'Dionysus',
          status: 'alive',
          aliases: ['Bacchus'],
          equivalent: ['Zagreus', 'Iacchus', 'Liber'],
          titles: ['Of the Bacchic Frenzy', 'The Raging One', 'Of the Night', 'Of the Phallus', 'God of Wine', 'Of the Ivy', 'Twice-born', 'the Flesh-eater', 'the Giver of Wings', 'the Orphic One', 'of the Mysteries', 'the Blooming', 'the Warlike', 'the Singer', 'the Dying and Rising', 'the arriving one'],
          rank: 'greater deity',
          description: 'Dionysus is the god of Wine and Theatre, his revelry is open to all. However, he has his dark side - he is the god of madness the anger of Dionysus is a terrifying thing',
          appearance: 'long haired youth, almost effeminate in appearance. He holds a staff topped with a pinecone and brings revelry with him',
          history: {
            title: 'history',
            children: []
          },
          powers: {
            title: 'powers',
            children: []
          },
          portfolios: ['wine', 'vegetation', 'pleasure', 'festivity', 'madness', 'wild frenzy', 'orchards', 'ritual madness', 'grape-harvest', 'the vine', 'theatre', 'tragedy and comedy plays', 'religious ectasy', 'homosexuality', 'effeminacy', 'reincarnation', 'foreign gods'],
          gender: 'man',
          shape: 'human',
          race: 'god',
          domains: ['nature', 'life', 'trickery'],
          channelDivinity: {
            title: 'Channel Divinity',
            children: []
          },
          alignment: 'Chaotic Neutral',
          symbol: 'Thyrsus',
          combat: {
            title: 'combat',
            children: []
          },
          probabilityWeightings: {
            economicIdeology: {
              feudalism: 2,
              syndicalism: 3
            },
            politicalIdeology: {
              kleptocracy: 5,
              oligarchy: 5,
              autocracy: 1
            },
            politicalSource: {},
            race: {
              halfling: 50,
              tiefling: 30,
              goblin: 15
            }
          },
          possessions: {
            title: 'possessions',
            children: []
          },
          realm: undefined,
          followers: {
            description: 'Dionysus is a god of the people and youths. Those who value proper decorum and modesty are apallled at the revelry of the Bacchic crowds. Devotees of Dionysus may engage in the rending of animals with their bare hands',
            adherents: ['wine-makers', 'actors', 'farmers', 'revelers'],
            favouredWeapon: undefined,
            holyDays: {
              title: 'Holy Days',
              children: [{
                title: 'Eighth Month of the Year',
                description: 'Rituals are typically held on this day.'
              }]
            }
          },
          personality: {
            just: 20,
            forgiving: 25,
            chaste: 10 // energetic: 'lazy',
            // generous: 'selfish',
            // honest: 'deceitful',
            // merciful: 'cruel',
            // modest: 'proud',
            // pious: 'worldly',
            // prudent: 'reckless',
            // temperate: 'indulgent',
            // trusting: 'suspicious',
            // valorous: 'cowardly'

          },
          associations: {
            avatars: [],
            animals: ['bull', 'panther', 'lion', 'leopard', 'goat', 'serpent', 'donkey'],
            plants: ['ivy', 'grapevine', 'bindweed', 'cinnamon', 'silver fir', 'pine tree'],
            monsters: ['satyrs'],
            gems: [],
            colours: [],
            miscellaneous: []
          },
          beliefs: {
            title: 'beliefs',
            children: []
          },
          heresies: {
            title: 'heresies',
            children: []
          },
          blessings: {
            title: 'blessings',
            children: []
          },
          curses: {
            title: 'curses',
            children: []
          },
          allies: {
            title: 'allies',
            children: []
          },
          enemies: {
            title: 'enemies',
            children: []
          },
          relationships: [{
            name: 'Zeus',
            relationship: 'father'
          }, {
            name: 'Ariadne',
            relationship: 'wife'
          }, {
            name: 'Aphrodite',
            relationship: 'lover',
            description: 'Aphrodite bore Priapus by Dionysus.'
          }],
          maxims: [{
            title: ''
          }]
        }, {
          // Demeter
          objectType: 'deity',
          passageName: 'DeityProfile',
          name: 'Demeter',
          key: 'Demeter',
          status: 'alive',
          aliases: ['Ceres', 'Deo'],
          titles: ['Of the Grain', 'Law-Bringer', 'Of the Earth', 'Bearer of Fruit', 'Great Goddess', 'Of the Mysteries', 'Lovely Haired'],
          rank: 'greater deity',
          description: 'Demeter is the goddess of Agriculture - her favour promised a bountiful harvest and more grain then could be eaten. However her anger promised frosts and famine.',
          appearance: 'a mature woman wearing a crown holding wheat in a cornocopia and a torch',
          history: {
            title: 'history',
            children: []
          },
          powers: {
            title: 'powers',
            children: []
          },
          portfolios: ['agriculture', 'grain and bread', 'the Eleusinian mysteries', 'the harvest', 'fertility', 'sacred law', 'natural law', 'the afterlife'],
          gender: 'woman',
          shape: 'human',
          race: 'god',
          domains: ['life'],
          channelDivinity: {
            title: 'Channel Divinity',
            children: []
          },
          alignment: 'Neutral Good',
          symbol: 'cornucopia',
          combat: {
            title: 'combat',
            children: []
          },
          probabilityWeightings: {
            economicIdeology: {
              communism: 5,
              syndicalism: 3
            },
            politicalIdeology: {
              magocracy: 5,
              theocracy: 4,
              oligarchy: 4
            },
            politicalSource: {},
            race: {
              'dwarf': 20,
              'dragonborn': 15,
              'half-elf': 15,
              'elf': 15,
              'tiefling': 15
            }
          },
          possessions: {
            title: 'possessions',
            children: []
          },
          realm: undefined,
          followers: {
            description: 'As the goddess of Agriculture, Demeter has a dedictated following among anyone who farmed. She was also a major figure of worship in the Eleusinian mysteries, which promised a better afterlife to its followers.',
            adherents: ['farmers'],
            favouredWeapon: 'Sickle',
            holyDays: {
              title: 'Holy Days',
              children: []
            }
          },
          personality: {
            just: 50,
            merciful: -85,
            chaste: -80
          },
          associations: {
            avatars: [],
            animals: ['snake', 'pig', 'gecko', 'turtle-dove', 'crane'],
            plants: ['wheat', 'barley', 'mint', 'poppy'],
            monsters: [],
            gems: [],
            colours: [],
            miscellaneous: []
          },
          beliefs: {
            title: 'beliefs',
            children: []
          },
          heresies: {
            title: 'heresies',
            children: []
          },
          blessings: {
            title: 'blessings',
            children: ['bountiful harvest', 'satiated appetite', 'a better afterlife']
          },
          curses: {
            title: 'curses',
            children: []
          },
          allies: {
            title: 'allies',
            children: []
          },
          enemies: {
            title: 'enemies',
            children: []
          },
          relationships: [{
            name: 'Hades',
            relationship: 'brother'
          }, {
            name: 'Hera',
            relationship: 'sister'
          }, {
            name: 'Poseidon',
            relationship: 'brother'
          }, {
            name: 'Zeus',
            relationship: 'brother'
          }, {
            name: 'Persephone',
            relationship: 'daughter',
            description: 'Sired by Zeus.'
          }],
          maxims: [{
            title: ''
          }]
        }, {
          // Hermes
          objectType: 'deity',
          passageName: 'DeityProfile',
          name: 'Hermes',
          key: 'Hermes',
          status: 'alive',
          aliases: ['Mercury'],
          titles: ['Keeper of the Flocks', 'Of the Market-Place', 'Of the Games', 'Translator', 'Slayer of Argos', 'Immortal Guide', 'Messenger of the Blessed', 'Messenger of the Gods', 'Of the Golden Wand', 'Full of Various Wiles', 'Giver of Good Things', 'Of Searchers', 'Guide of the Dead', 'Bringer of Peace', 'God of Merchants'],
          rank: 'greater deity',
          description: 'Hermes is the hessenger of the gods and the personal messenger of Zeus. He brings the souls of the deceased to the edge of the underworld, where they are ferried deeper by the Cthonic gods',
          appearance: 'an athletic man wearing winged boots, full of energy. Ontop of his head is a helmet with two wings attached.',
          history: {
            title: 'history',
            children: []
          },
          powers: {
            title: 'powers',
            children: []
          },
          portfolios: ['herds and flocks', 'boundaries', 'animal husbandry', 'travellers', 'hospitality', 'roads', 'trade', 'thievery', 'cunning', 'deception', 'persuasion', 'heralds', 'messangers', 'diplomacy', 'language', 'writing', 'the home', 'luck', 'athletic contests', 'gymnasiums', 'astronomy', 'astrology', 'birds of omen', 'guiding the dead', // also known as Psychopomp
          'sleep', 'rustic divination', 'rustic music', 'rustic fables'],
          gender: 'man',
          shape: 'human',
          race: 'god',
          domains: ['trickery', 'peace', 'grave'],
          channelDivinity: {
            title: 'Channel Divinity',
            children: []
          },
          alignment: 'Chaotic Good',
          symbol: 'Caduceus ',
          combat: {
            title: 'combat',
            children: []
          },
          probabilityWeightings: {
            economicIdeology: {
              capitalism: 5
            },
            politicalIdeology: {
              kleptocracy: 5,
              meritocracy: 5,
              technocracy: 8
            },
            politicalSource: {},
            race: {
              halfling: 20,
              tiefling: 15
            }
          },
          possessions: {
            title: 'Possessions',
            children: [{
              title: 'Talaria',
              description: 'Tarlaria is the name of a pair of winged boots forged by Hephaestus.'
            }, {
              title: 'Golden Blade',
              description: 'His weapon was a sword of gold, which killed Argos; lent to Perseus to kill Medusa.'
            }, {
              title: 'Winged Helm',
              description: "A Petasos with wings, Hermes' helmet was forged by Hephaestus."
            }]
          },
          realm: undefined,
          followers: {
            description: 'Hermes was the messenger of Zeus, and his followers were all those that valued speed. Additionally, travelers, traders, and thieves worshiped him.',
            adherents: ['thieves', 'traders', 'messengers', 'athletes', 'diplomats', 'travellers'],
            favouredWeapon: undefined,
            holyDays: {
              title: 'Holy Days',
              children: [{
                title: 'earth',
                children: ['Wednesday']
              }]
            }
          },
          personality: {
            just: 50,
            merciful: -85,
            chaste: -80
          },
          associations: {
            avatars: [],
            animals: ['hare', 'ram', 'hawk', 'goat', 'tortoise', 'rooster'],
            plants: ['crocus', 'strawberry-tree'],
            monsters: [],
            gems: [],
            colours: [],
            miscellaneous: []
          },
          beliefs: {
            title: 'beliefs',
            children: []
          },
          heresies: {
            title: 'heresies',
            children: []
          },
          blessings: {
            title: 'blessings',
            children: []
          },
          curses: {
            title: 'curses',
            children: []
          },
          allies: {
            title: 'allies',
            children: []
          },
          enemies: {
            title: 'enemies',
            children: []
          },
          relationships: [{
            name: 'Zeus',
            relationship: 'father'
          }, {
            name: 'Aphroditus',
            relationship: 'father',
            description: 'Aphrodite gave birth to Hermaphroditus, or Aphroditus, the god of androgyny.'
          }],
          maxims: [{
            title: ''
          }]
        }, {
          // Hera
          objectType: 'deity',
          passageName: 'DeityProfile',
          name: 'Hera',
          key: 'Hera',
          status: 'alive',
          titles: ['Queen of the Gods', 'Goddess of Kings and Empires', 'Goddess of Marriage', 'Whose Hand is Above', 'Of the Flowers'],
          aliases: [],
          rank: 'greater deity',
          description: 'Hera is the Queen of the gods, forever tested by her husband Zeus. Unable to attack Zeus, her anger is often directed to his consorts or his children.',
          appearance: 'a beautiful woman wearing a crown and holding a royal, lotus-tipped sceptre',
          history: {
            title: 'history',
            children: []
          },
          powers: {
            title: 'powers',
            children: []
          },
          portfolios: ['marriage', 'air', 'women', 'childbirth', 'family', 'sky', 'stars of heaven'],
          gender: 'woman',
          shape: 'human',
          race: 'god',
          domains: ['order', 'trickery', 'life'],
          channelDivinity: {
            title: 'Channel Divinity',
            children: []
          },
          alignment: 'Chaotic Neutral',
          symbol: ['diadem', 'scepter', 'pomegranate'],
          combat: {
            title: 'combat',
            children: []
          },
          probabilityWeightings: {
            economicIdeology: {
              feudalism: 3
            },
            politicalIdeology: {
              theocracy: 4,
              oligarchy: 4,
              autocracy: 5
            },
            race: {
              'human': 20,
              'half-elf': 15,
              'tiefling': 15
            }
          },
          possessions: {
            title: 'possessions',
            children: []
          },
          realm: undefined,
          followers: {
            description: undefined,
            adherents: ['women'],
            favouredWeapon: undefined,
            holyDays: {
              title: 'Holy Days',
              children: []
            }
          },
          personality: {
            just: 50,
            merciful: -85,
            chaste: -20
          },
          associations: {
            avatars: [],
            animals: ['heifer', 'lion', 'cuckoo', 'peacock', 'panther'],
            plants: ['pomegranate', 'lily', 'willow'],
            monsters: [],
            gems: [],
            colours: [],
            miscellaneous: []
          },
          beliefs: {
            title: 'beliefs',
            children: []
          },
          heresies: {
            title: 'heresies',
            children: []
          },
          blessings: {
            title: 'blessings',
            children: []
          },
          curses: {
            title: 'curses',
            children: []
          },
          allies: {
            title: 'allies',
            children: []
          },
          enemies: {
            title: 'enemies',
            children: []
          },
          relationships: [{
            name: 'Zeus',
            relationship: 'consort'
          }, {
            name: 'Hades',
            relationship: 'brother'
          }, {
            name: 'Poseidon',
            relationship: 'brother'
          }, {
            name: 'Demeter',
            relationship: 'brother'
          }, {
            name: 'Ares',
            relationship: 'son'
          }, {
            name: 'Eris',
            relationship: 'daughter'
          }, {
            name: 'Athena',
            relationship: 'daughter'
          }, {
            name: 'Hebe',
            relationship: 'daughter'
          }, {
            name: 'Eileithyia',
            relationship: 'daughter'
          }, {
            name: 'Hephaestus',
            relationship: 'son',
            description: 'Hera gave birth to Hephaestus without male intervention.'
          }],
          maxims: [{
            title: ''
          }]
        }, {
          // Ares
          objectType: 'deity',
          passageName: 'DeityProfile',
          name: 'Ares',
          key: 'Ares',
          status: 'alive',
          titles: ['Who rallies men', 'Destroyer of Men', 'Terrible', 'Warlike', 'Of the Golden Helm'],
          aliases: [],
          rank: 'greater deity',
          description: '',
          appearance: 'always clad in armour, holding weapons and ready for battle. He can appear as the fresh-faced youth or the grizzeled veteran depending on his mood.',
          history: {
            title: 'history',
            children: []
          },
          powers: {
            children: [{
              title: 'Odikinesis',
              description: 'Possessing the ability to manipulate feelings and emotions of war such as hate and rage, Ares would induce strife before battles.'
            }, {
              title: 'Strength',
              description: 'As a fighter, Ares excelled at all to do with physicality. '
            }]
          },
          portfolios: ['war', 'battlelust', 'courage', 'civil order', 'brutality', 'violence', 'rage'],
          gender: 'man',
          shape: 'human',
          race: 'god',
          domains: ['war'],
          channelDivinity: {
            title: 'Channel Divinity',
            children: []
          },
          alignment: 'Chaotic Evil',
          symbol: 'spear',
          combat: {
            title: 'Combat',
            children: [{
              title: 'Bloodlust',
              description: 'As the God of War, Ares has plenty of experience in battle. In contrast to Athena, who is the goddess of tacticians, Ares represents a more brutal, carnal type of conquest.'
            }]
          },
          probabilityWeightings: {
            economicIdeology: {
              feudalism: 3,
              primitivism: 8
            },
            politicalIdeology: {
              militocracy: 9,
              oligarchy: 7,
              autocracy: 8
            },
            politicalSource: {
              anarchy: 8
            },
            race: {
              'half-orc': 40,
              'orc': 50,
              'tiefling': 20,
              'goblin': 30
            }
          },
          possessions: {
            title: 'possessions',
            children: []
          },
          realm: undefined,
          followers: {
            description: 'Ares is the god of war and courage - cities and countries going to war would worship Ares before going into battle',
            adherents: ['warriors'],
            favouredWeapon: undefined,
            holyDays: {
              title: 'Holy Days',
              children: [{
                title: 'earth',
                children: ['Tuesday']
              }]
            }
          },
          personality: {
            just: 50,
            merciful: -85,
            chaste: -80
          },
          associations: {
            avatars: [],
            animals: ['serpent', 'hound', 'boar', 'vulture', 'eagle-owl', 'woodpecker'],
            plants: [],
            monsters: [],
            gems: [],
            colours: [],
            miscellaneous: []
          },
          beliefs: {
            title: 'beliefs',
            children: []
          },
          heresies: {
            title: 'heresies',
            children: []
          },
          blessings: {
            title: 'blessings',
            children: []
          },
          curses: {
            title: 'curses',
            children: []
          },
          allies: {
            title: 'allies',
            children: []
          },
          enemies: {
            title: 'enemies',
            children: []
          },
          relationships: [{
            name: 'Zeus',
            relationship: 'father'
          }, {
            name: 'Aphrodite',
            relationship: 'lover'
          }],
          maxims: [{
            title: ''
          }]
        }, {
          // Hestia
          objectType: 'deity',
          passageName: 'DeityProfile',
          name: 'Hestia',
          key: 'Hestia',
          status: 'alive',
          aliases: ['Vesta'],
          titles: ['Daughter of lovely-haired Rhea', 'Daughter of Cronos', 'Rich in Blessings', 'Beloved'],
          rank: 'greater deity',
          description: 'Hestia is the First-born child of Kronos and Rhea and the first to be swallowed by him. After Apollo and Poseidon vied for her hand in marriage she refused and chose to be an eternal virgin.',
          appearance: 'a beautiful veiled woman, with long dark hair',
          history: {
            title: 'history',
            children: []
          },
          powers: {
            title: 'powers',
            children: []
          },
          portfolios: ['fire', 'family hearth', 'civic hearth', 'home', 'cooking', 'the sacrificial flame', 'sacrifices', 'sacred flame', 'domesticity', 'family', 'virginity', 'the state'],
          gender: 'woman',
          shape: 'human',
          race: 'god',
          domains: ['life', 'light', 'peace'],
          channelDivinity: {
            title: 'Channel Divinity',
            children: []
          },
          alignment: 'Neutral Good',
          symbol: 'hearth',
          combat: {
            title: 'Combat',
            children: [{
              title: 'De-escalation',
              description: 'Hestia finds combat distasteful, and will try and defuse the situation before it gets out of hand.'
            }]
          },
          probabilityWeightings: {
            economicIdeology: {
              feudalism: 3,
              syndicalism: 3,
              communism: 2
            },
            politicalIdeology: {
              meritocracy: 4,
              sophocracy: 4,
              oligarchy: 4
            },
            race: {
              'elf': 40,
              'half-elf': 15
            }
          },
          possessions: {
            title: 'possessions',
            children: []
          },
          realm: undefined,
          followers: {
            description: undefined,
            favouredWeapon: undefined,
            holyDays: {
              title: 'Holy Days',
              children: []
            }
          },
          personality: {
            just: 50,
            merciful: -85
          },
          associations: {
            avatars: [],
            animals: ['pig'],
            plants: ['chaste-tree'],
            monsters: [],
            gems: [],
            colours: ['green'],
            miscellaneous: []
          },
          beliefs: {
            title: 'beliefs',
            children: []
          },
          heresies: {
            title: 'heresies',
            children: []
          },
          blessings: {
            title: 'blessings',
            children: []
          },
          curses: {
            title: 'curses',
            children: []
          },
          allies: {
            title: 'allies',
            children: []
          },
          enemies: {
            title: 'enemies',
            children: []
          },
          relationships: [{
            name: 'Zeus',
            relationship: 'brother'
          }],
          maxims: [{
            title: ''
          }]
        }, {
          // Hephaestus
          objectType: 'deity',
          passageName: 'DeityProfile',
          name: 'Hephaestus',
          key: 'Hephaestus',
          status: 'alive',
          titles: ['Glorius Craftsman', 'Famed Craftsman', 'Of many Crafts', 'Crooked-Foot', 'Of Bronze'],
          aliases: [],
          rank: 'greater deity',
          description: '',
          appearance: 'bearded man with twisted legs',
          history: {
            title: 'history',
            children: []
          },
          powers: {
            title: 'powers',
            children: []
          },
          portfolios: ['fire', 'blacksmiths', 'craftsmen', 'metalworking', 'forges', 'stone masonry', 'scultpure', 'technology', 'artisans', 'carpenters', 'metallurgy', 'volcanoes'],
          gender: 'man',
          shape: 'human',
          race: 'god',
          domains: ['knowledge', 'forge'],
          channelDivinity: {
            title: 'Channel Divinity',
            children: []
          },
          alignment: 'Neutral Good',
          symbol: 'Hammer and Anvil',
          combat: {
            title: 'combat',
            children: []
          },
          probabilityWeightings: {
            economicIdeology: {
              feudalism: 3,
              capitalism: 6
            },
            politicalIdeology: {
              technocracy: 10,
              autocracy: 5
            },
            race: {
              dwarf: 20,
              gnome: 45
            }
          },
          possessions: {
            title: 'possessions',
            children: []
          },
          realm: undefined,
          followers: {
            description: 'Hephaestus is the god of the forge. He is worshipped by Craftsmen and his blessing gives them inspiration and skill,',
            adherents: ['smiths', 'craftsmen'],
            favouredWeapon: undefined,
            holyDays: {
              title: 'Holy Days',
              children: []
            }
          },
          personality: {
            just: 50,
            merciful: -85,
            chaste: -80
          },
          associations: {
            avatars: [],
            animals: ['donkey'],
            plants: [],
            monsters: [],
            gems: [],
            colours: [],
            miscellaneous: []
          },
          beliefs: {
            title: 'beliefs',
            children: []
          },
          heresies: {
            title: 'heresies',
            children: []
          },
          blessings: {
            title: 'blessings',
            children: ['inspiration', 'knowledge']
          },
          curses: {
            title: 'curses',
            children: []
          },
          allies: {
            title: 'allies',
            children: []
          },
          enemies: {
            title: 'enemies',
            children: []
          },
          relationships: [],
          maxims: [{
            title: ''
          }]
        }, {
          // Persephone
          objectType: 'deity',
          passageName: 'DeityProfile',
          name: 'Persephone',
          key: 'Persephone',
          status: 'alive',
          aliases: ['Kore'],
          equivalent: ['Libera', 'Proserpina', 'Prosperina'],
          titles: ['Queen of the Underworld', 'Knowing One', 'Exacter of Justice', 'Of the Earth', 'Bringer of Fruit'],
          rank: 'intermediate deity',
          description: '',
          appearance: 'a beautiful young maiden with fair skin. Her face is the epitome of young beauty. She is often shown in long, flowing clothing with a wreath of flowers around her head.',
          history: {
            title: 'history',
            children: []
          },
          powers: {
            title: 'powers',
            children: []
          },
          portfolios: ['spring', 'flowers', 'death', 'life', 'vegetation', 'fertility of plants', 'the Eleusinian Mysteries', 'the blessed afterlife'],
          gender: 'woman',
          shape: 'human',
          race: 'god',
          domains: ['life', 'grave', 'death'],
          channelDivinity: {
            title: 'Channel Divinity',
            children: []
          },
          alignment: 'Neutral Good',
          symbol: ['pomegranate', 'torch'],
          combat: {
            title: 'combat',
            children: []
          },
          probabilityWeightings: {
            economicIdeology: {
              feudalism: 3
            },
            politicalIdeology: {
              meritocracy: 2,
              oligarchy: 4,
              autocracy: 5
            },
            race: {
              'halfling': 20,
              'half-elf': 15,
              'elf': 15
            }
          },
          possessions: {
            title: 'possessions',
            children: []
          },
          realm: undefined,
          followers: {
            description: 'Persephone was a goddess of Spring and the Wife of Hades. Her favour might ensure a better afterlife for her worshippers.',
            adherents: ['farmers'],
            favouredWeapon: undefined,
            holyDays: {
              title: 'Holy Days',
              children: []
            }
          },
          personality: {
            just: 50,
            merciful: 0,
            chaste: 75
          },
          associations: {
            avatars: [],
            animals: ['deer'],
            plants: ['pomegranate', 'wheat', 'asphodel', 'flowers'],
            monsters: [],
            gems: [],
            colours: [],
            miscellaneous: []
          },
          beliefs: {
            title: 'beliefs',
            children: []
          },
          heresies: {
            title: 'heresies',
            children: []
          },
          blessings: {
            title: 'blessings',
            children: []
          },
          curses: {
            title: 'curses',
            children: []
          },
          allies: {
            title: 'allies',
            children: []
          },
          enemies: {
            title: 'enemies',
            children: []
          },
          relationships: [{
            name: 'Zeus',
            relationship: 'father'
          }],
          maxims: [{
            title: ''
          }]
        }, {
          // Hecate
          objectType: 'deity',
          passageName: 'DeityProfile',
          name: 'Hecate',
          key: 'Hecate',
          status: 'alive',
          titles: ['Worker from Afar', 'Of the Underworld', 'Nurse of Children', 'Who Attends', 'Leader of the Dogs', 'Three-bodied'],
          aliases: [],
          rank: 'intermediate deity',
          description: '',
          appearance: 'a woman wearing a crown. Sometimes, she has three bodies, conjoined to one another.',
          history: {
            title: 'history',
            children: []
          },
          powers: {
            title: 'powers',
            children: []
          },
          portfolios: ['magic', 'night', 'ghosts', 'necromancy', 'boundaries', 'crossroads', 'herbs', 'poisonous plants'],
          gender: 'woman',
          shape: 'human',
          race: 'god',
          domains: ['arcana', 'knowledge', 'trickery', 'twilight', 'death', 'nature'],
          channelDivinity: {
            title: 'Channel Divinity',
            children: []
          },
          alignment: 'Chaotic Evil',
          symbol: undefined,
          combat: {
            title: 'combat',
            children: []
          },
          probabilityWeightings: {
            economicIdeology: {
              feudalism: 3
            },
            politicalIdeology: {
              magocracy: 8,
              oligarchy: 4,
              autocracy: 5
            },
            race: {
              human: 5,
              tiefling: 25
            }
          },
          possessions: {
            title: 'possessions',
            children: []
          },
          realm: undefined,
          followers: {
            description: 'Hecate is a mysterious Goddess who is a master of the Arcane Arts and lives in the Underworld, her followers ask for her secret knowledge.',
            adherents: ['magic users', 'necromancers'],
            favouredWeapon: undefined,
            holyDays: {
              title: 'Holy Days',
              children: []
            }
          },
          personality: {
            just: 50,
            merciful: -85,
            chaste: -20
          },
          associations: {
            avatars: [],
            animals: ['dogs', 'red mullet', 'serpent', 'polecat', 'frog', 'cow', 'horse', 'lion'],
            plants: ['yew', 'oak', 'garlic', 'cypress', 'aconite', 'belladonna', 'dittany', 'mandrake'],
            monsters: ['ghosts', 'Lampades'],
            gems: [],
            colours: [],
            miscellaneous: []
          },
          beliefs: {
            title: 'beliefs',
            children: []
          },
          heresies: {
            title: 'heresies',
            children: []
          },
          blessings: {
            title: 'blessings',
            children: []
          },
          curses: {
            title: 'curses',
            children: []
          },
          allies: {
            title: 'allies',
            children: []
          },
          enemies: {
            title: 'enemies',
            children: []
          },
          relationships: [],
          maxims: [{
            title: ''
          }]
        }, {
          // Nike
          objectType: 'deity',
          passageName: 'DeityProfile',
          name: 'Nike',
          key: 'Nike',
          status: 'alive',
          titles: ['Goddess of Victory', 'The Winged Goddess'],
          aliases: [],
          rank: 'lesser deity',
          description: '',
          appearance: 'an athletic woman with two large wings.',
          history: {
            title: 'history',
            children: []
          },
          powers: {
            title: 'powers',
            children: []
          },
          portfolios: ['victory', 'speed', 'strength'],
          gender: 'woman',
          shape: 'human',
          race: 'god',
          domains: ['war', 'peace'],
          channelDivinity: {
            title: 'Channel Divinity',
            children: []
          },
          alignment: 'Lawful Neutral',
          symbol: 'Winged Woman',
          combat: {
            title: 'combat',
            children: []
          },
          probabilityWeightings: {
            economicIdeology: {
              feudalism: 3
            },
            politicalIdeology: {
              militocracy: 4,
              autocracy: 5
            },
            race: {
              'human': 20,
              'half-orc': 25,
              'orc': 15
            }
          },
          possessions: {
            title: 'possessions',
            children: []
          },
          realm: undefined,
          followers: {
            description: 'The Favour of Nike is a promise of victory, though it was rarely given without being earnt.',
            adherents: ['warriors'],
            favouredWeapon: undefined,
            holyDays: {
              title: 'Holy Days',
              children: []
            }
          },
          personality: {
            just: 50,
            merciful: -85,
            chaste: -20
          },
          associations: {
            avatars: [],
            animals: [],
            plants: ['palm tree', 'bay tree'],
            monsters: [],
            gems: [],
            colours: [],
            miscellaneous: []
          },
          beliefs: {
            title: 'beliefs',
            children: []
          },
          heresies: {
            title: 'heresies',
            children: []
          },
          blessings: {
            title: 'blessings',
            children: []
          },
          curses: {
            title: 'curses',
            children: []
          },
          allies: {
            title: 'allies',
            children: []
          },
          enemies: {
            title: 'enemies',
            children: []
          },
          relationships: [],
          maxims: [{
            title: ''
          }]
        }, {
          // Tyche
          objectType: 'deity',
          passageName: 'DeityProfile',
          name: 'Tyche',
          key: 'Tyche',
          status: 'alive',
          titles: ['Goddess of Fortune and Chance'],
          aliases: [],
          rank: 'lesser deity',
          description: '',
          appearance: 'a woman with a crown, often shown holding a horn of cornucopia.',
          history: {
            title: 'history',
            children: []
          },
          powers: {
            title: 'powers',
            children: []
          },
          portfolios: ['luck', 'chance', 'fate', 'providence', 'natural disasters'],
          gender: 'woman',
          shape: 'human',
          race: 'god',
          domains: ['trickery'],
          channelDivinity: {
            title: 'Channel Divinity',
            children: []
          },
          alignment: 'Neutral',
          symbol: undefined,
          combat: {
            title: 'combat',
            children: []
          },
          probabilityWeightings: {
            economicIdeology: {
              feudalism: 3,
              capitalism: 5
            },
            politicalIdeology: {
              meritocracy: 4,
              kleptocracy: 4
            },
            race: {
              halfling: 30,
              human: 5
            }
          },
          possessions: {
            title: 'possessions',
            children: []
          },
          realm: undefined,
          followers: {
            description: undefined,
            adherents: ['gamblers'],
            favouredWeapon: undefined,
            holyDays: {
              title: 'Holy Days',
              children: []
            }
          },
          personality: {
            just: 50,
            merciful: -85,
            chaste: -20
          },
          associations: {
            avatars: [],
            animals: [],
            plants: [],
            monsters: [],
            gems: [],
            colours: [],
            miscellaneous: []
          },
          beliefs: {
            title: 'beliefs',
            children: []
          },
          heresies: {
            title: 'heresies',
            children: []
          },
          blessings: {
            title: 'blessings',
            children: []
          },
          curses: {
            title: 'curses',
            children: []
          },
          allies: {
            title: 'allies',
            children: []
          },
          enemies: {
            title: 'enemies',
            children: []
          },
          relationships: [],
          maxims: [{
            title: ''
          }]
        }, {
          // Hebe
          objectType: 'deity',
          passageName: 'DeityProfile',
          name: 'Hebe',
          key: 'Hebe',
          status: 'alive',
          titles: ['Goddess of Eternal Youth', 'Daughter of Zeus', 'Wife of Hercules'],
          aliases: [],
          rank: 'lesser deity',
          description: 'Hebe is the daughter of Zeus and Hera, as well as the Goddess of Youth. She served as the Cupbearer of the Gods, and was later married to Herakles, the protector of Olympus.',
          appearance: 'a woman in a sleeveless dress, with long brown hair.',
          history: {
            title: 'history',
            children: []
          },
          powers: {
            title: 'powers',
            children: []
          },
          portfolios: ['youth', 'forgiveness', 'mercy', 'brides'],
          gender: 'woman',
          shape: 'human',
          race: 'god',
          domains: ['life'],
          channelDivinity: {
            title: 'Channel Divinity',
            children: []
          },
          alignment: 'Neutral Good',
          symbol: ['Wine cup', 'eagle', 'ivy', 'fountain of youth', 'wings'],
          combat: {
            title: 'combat',
            children: []
          },
          probabilityWeightings: {
            race: {
              human: 5
            }
          },
          possessions: {
            title: 'possessions',
            children: [{
              title: 'Fountain of Youth',
              description: 'Hebe was the protector of the Fountain of Youth.'
            }]
          },
          realm: undefined,
          followers: {
            description: 'As the bride of Heracles, Hebe was strongly associated with both brides and her husband in art and literature. Hebe was the patron of brides, due to being the daughter of Hera and the importance of her own wedding.',
            favouredWeapon: undefined,
            adherents: ['brides'],
            holyDays: {
              title: 'Holy Days',
              children: [{
                title: 'earth',
                children: ['June']
              }]
            }
          },
          personality: {
            just: 50,
            merciful: -85,
            chaste: -80
          },
          associations: {
            avatars: [],
            animals: ['hen', 'eagle'],
            plants: ['ivy', 'lettuce'],
            monsters: [],
            gems: [],
            colours: [],
            miscellaneous: []
          },
          beliefs: {
            title: 'beliefs',
            children: []
          },
          heresies: {
            title: 'heresies',
            children: []
          },
          blessings: {
            title: 'blessings',
            children: [{
              title: 'Restored Youth',
              description: 'A power unique to Hebe, she was able to restore youth to mortals.'
            }]
          },
          curses: {
            title: 'curses',
            children: []
          },
          allies: {
            title: 'allies',
            children: []
          },
          enemies: {
            title: 'enemies',
            children: []
          },
          relationships: [{
            name: 'Zeus',
            relationship: 'father'
          }, {
            name: 'Hera',
            relationship: 'mother',
            description: 'Hebe helped Hera enter her chariot.'
          }, {
            name: 'Hercules',
            relationship: 'husband'
          }, {
            name: 'Ares',
            relationship: 'brother',
            description: 'Hebe drew baths for Ares.'
          }],
          maxims: [{
            title: ''
          }]
        }, {
          // Pan
          objectType: 'deity',
          passageName: 'DeityProfile',
          name: 'Pan',
          key: 'Pan',
          status: 'uncertain',
          titles: ['The God of the Wild', 'Of the Pastures', 'Terrifying One', 'Of the Hunt'],
          aliases: [],
          rank: 'intermediate deity',
          description: '',
          appearance: 'a satyr holding a set of Pan-pipes',
          history: {
            title: 'history',
            children: []
          },
          powers: {
            title: 'powers',
            children: []
          },
          portfolios: ['the wild', 'nature', 'shephard', 'flocks', 'sexuality', 'hunters', 'panic'],
          gender: 'man',
          shape: 'satyr',
          race: 'god',
          domains: ['nature', 'trickery'],
          channelDivinity: {
            title: 'Channel Divinity',
            children: []
          },
          alignment: 'Chaotic Neutral',
          symbol: 'pan pipes',
          combat: {
            title: 'combat',
            children: []
          },
          probabilityWeightings: {
            economicIdeology: {
              primitivism: 3
            },
            politicalIdeology: {
              kleptocracy: 4
            },
            race: {
              'halfling': 30,
              'gnome': 15,
              'elf': 25,
              'half-elf': 15
            }
          },
          possessions: {
            title: 'possessions',
            children: []
          },
          realm: undefined,
          followers: {
            description: undefined,
            adherents: ['wild beings', 'hunters'],
            favouredWeapon: undefined,
            holyDays: {
              title: 'Holy Days',
              children: []
            }
          },
          personality: {
            just: 50,
            merciful: -85,
            chaste: -100
          },
          associations: {
            avatars: [],
            animals: ['goat', 'tortoise'],
            plants: ['corsican pine', 'water-reed', 'beech trees'],
            monsters: [],
            gems: [],
            colours: [],
            miscellaneous: []
          },
          beliefs: {
            title: 'beliefs',
            children: []
          },
          heresies: {
            title: 'heresies',
            children: []
          },
          blessings: {
            title: 'blessings',
            children: []
          },
          curses: {
            title: 'curses',
            children: []
          },
          allies: {
            title: 'allies',
            children: []
          },
          enemies: {
            title: 'enemies',
            children: []
          },
          relationships: [],
          maxims: [{
            title: ''
          }]
        }, {
          // Asclepius
          objectType: 'deity',
          passageName: 'DeityProfile',
          name: 'Asclepius',
          key: 'Asclepius',
          status: 'alive',
          titles: ['God of Healing', 'Lover of the People'],
          aliases: [],
          rank: 'lesser deity',
          description: 'Asclepius is the son of Apollo whose skill in medicine was so great he could ressurect the dead, he was struck down by Zeus. He was placed among the stars and now serves as the Physician for the gods',
          appearance: 'a man with a full beard in a simple himation robe.',
          history: {
            title: 'history',
            children: []
          },
          powers: {
            title: 'powers',
            children: []
          },
          portfolios: ['medicine', 'healing', 'rejuvination', 'doctors'],
          gender: 'man',
          shape: 'human',
          race: 'demigod',
          domains: ['life', 'knowledge'],
          channelDivinity: {
            title: 'Channel Divinity',
            children: []
          },
          alignment: 'Lawful Good',
          symbol: 'Serpent-entwined staff',
          combat: {
            title: 'combat',
            children: []
          },
          probabilityWeightings: {
            economicIdeology: {
              communism: 3
            },
            politicalIdeology: {
              sophocracy: 5,
              democracy: 4
            },
            race: {
              'human': 20,
              'elf': 15,
              'half-elf': 15
            }
          },
          possessions: {
            title: 'possessions',
            children: []
          },
          realm: undefined,
          followers: {
            description: 'Asclepius was so skiled in medicine that he could ressurect the dead, Healers and the Sick pray for his favour for skill and recovery',
            adherents: ['healers', 'the sick'],
            favouredWeapon: undefined,
            holyDays: {
              title: 'Holy Days',
              children: []
            }
          },
          personality: {
            just: 50,
            merciful: -85,
            chaste: -80
          },
          associations: {
            avatars: [],
            animals: ['snake'],
            plants: ['milkweed'],
            monsters: [],
            gems: [],
            colours: [],
            miscellaneous: []
          },
          beliefs: {
            title: 'beliefs',
            children: []
          },
          heresies: {
            title: 'heresies',
            children: []
          },
          blessings: {
            title: 'blessings',
            children: []
          },
          curses: {
            title: 'curses',
            children: []
          },
          allies: {
            title: 'allies',
            children: []
          },
          enemies: {
            title: 'enemies',
            children: []
          },
          relationships: [],
          maxims: [{
            title: ''
          }]
        }, {
          // Chiron
          objectType: 'deity',
          passageName: 'DeityProfile',
          name: 'Chiron',
          key: 'Chiron',
          status: 'alive',
          titles: ['Wisest of the Centaurs', 'The Teacher'],
          aliases: [],
          rank: 'immortal',
          description: '',
          appearance: 'a centaur, though in some iterations his front legs are human legs.',
          history: {
            title: 'history',
            children: []
          },
          powers: {
            title: 'powers',
            children: []
          },
          portfolios: ['teachers', 'surgeons'],
          gender: 'man',
          shape: 'centaur',
          race: 'centaur',
          domains: ['knowledge', 'peace'],
          channelDivinity: {
            title: 'Channel Divinity',
            children: []
          },
          alignment: 'Neutral Good',
          symbol: ['thread', 'serpent', 'bull'],
          combat: {
            title: 'combat',
            children: []
          },
          probabilityWeightings: {
            politicalIdeology: {
              theocracy: 4,
              sophocracy: 4,
              technocracy: 3
            },
            race: {
              dragonborn: 15,
              human: 5
            }
          },
          possessions: {
            title: 'possessions',
            children: []
          },
          realm: undefined,
          followers: {
            description: 'Chiron is worshipped by Heroes and Centaurs alike for his wisdom and control.',
            adherents: ['teachers', 'centaurs', 'healers'],
            favouredWeapon: undefined,
            holyDays: {
              title: 'Holy Days',
              children: []
            }
          },
          personality: {
            just: 50,
            merciful: 60,
            chaste: 90
          },
          associations: {
            avatars: [],
            animals: [],
            plants: [],
            monsters: [],
            gems: [],
            colours: [],
            miscellaneous: []
          },
          beliefs: {
            title: 'beliefs',
            children: []
          },
          heresies: {
            title: 'heresies',
            children: []
          },
          blessings: {
            title: 'blessings',
            children: []
          },
          curses: {
            title: 'curses',
            children: []
          },
          allies: {
            title: 'allies',
            children: []
          },
          enemies: {
            title: 'enemies',
            children: []
          },
          relationships: [],
          maxims: [{
            title: ''
          }]
        }, {
          // Hercules
          objectType: 'deity',
          passageName: 'DeityProfile',
          name: 'Heracles',
          key: 'Heracles',
          status: 'alive',
          aliases: ['Hercules'],
          titles: ['Divine Protector of Mankind'],
          rank: 'lesser deity',
          description: 'The Son of Zeus who famously completed 12 Labours, Heracles ascended to godhood and is known as the greatest of the Greek Heroes',
          appearance: 'a muscular man with a beard',
          history: {
            title: 'history',
            children: []
          },
          powers: {
            title: 'powers',
            children: []
          },
          portfolios: ['mankind', 'gymnasium', 'strength', 'heroes'],
          gender: 'man',
          shape: 'human',
          race: 'demigod',
          domains: ['war'],
          channelDivinity: {
            title: 'Channel Divinity',
            children: []
          },
          alignment: 'Chaotic Good',
          symbol: 'olive-wood club and lion skin cape',
          combat: {
            title: 'combat',
            children: []
          },
          probabilityWeightings: {
            economicIdeology: {
              feudalism: 3
            },
            politicalIdeology: {
              autocracy: 1
            },
            politicalSource: {
              'absolute monarchy': 10
            },
            race: {
              'human': 20,
              'half-orc': 35,
              'orc': 20
            }
          },
          possessions: {
            title: 'possessions',
            children: []
          },
          realm: undefined,
          followers: {
            description: 'Arguably the greatest of Heroes, Heracles is worshipped by mortals for his strength and fame',
            adherents: ['heroes', 'athletes', 'mortals'],
            favouredWeapon: undefined,
            holyDays: {
              title: 'Holy Days',
              children: []
            }
          },
          personality: {
            just: 50,
            merciful: -85,
            chaste: -80
          },
          associations: {
            avatars: [],
            animals: ['lion'],
            plants: ['olive tree'],
            monsters: [],
            gems: [],
            colours: [],
            miscellaneous: []
          },
          beliefs: {
            title: 'beliefs',
            children: []
          },
          heresies: {
            title: 'heresies',
            children: []
          },
          blessings: {
            title: 'blessings',
            children: []
          },
          curses: {
            title: 'curses',
            children: []
          },
          allies: {
            title: 'allies',
            children: []
          },
          enemies: {
            title: 'enemies',
            children: []
          },
          relationships: [{
            name: 'Zeus',
            relationship: 'father'
          }],
          maxims: [{
            title: ''
          }]
        }, {
          // Ariadne
          objectType: 'deity',
          passageName: 'DeityProfile',
          name: 'Ariadne',
          key: 'Ariadne',
          status: 'alive',
          equivalent: ['Libera', 'Proserpina'],
          titles: ['Wife of Dionysus'],
          aliases: [],
          rank: 'immortal',
          description: '',
          appearance: 'a woman with a laurel crown',
          history: {
            title: 'history',
            children: []
          },
          powers: {
            title: 'powers',
            children: []
          },
          portfolios: ['mazes', 'fertility', 'wine', 'seasonal agriculture'],
          gender: 'woman',
          shape: 'human',
          race: 'human',
          domains: ['trickery', 'nature', 'life'],
          channelDivinity: {
            title: 'Channel Divinity',
            children: []
          },
          alignment: 'Neutral',
          symbol: undefined,
          combat: {
            title: 'combat',
            children: []
          },
          probabilityWeightings: {
            race: {
              halfling: 20,
              tiefling: 15
            }
          },
          possessions: {
            title: 'Possessions',
            children: ['The Thread of Ariadne']
          },
          realm: undefined,
          followers: {
            description: undefined,
            adherents: ['farmers'],
            favouredWeapon: undefined,
            holyDays: {
              title: 'Holy Days',
              children: []
            }
          },
          personality: {
            just: 50,
            merciful: -85,
            chaste: -80
          },
          associations: {
            avatars: [],
            animals: [],
            plants: [],
            monsters: [],
            gems: [],
            colours: [],
            miscellaneous: []
          },
          beliefs: {
            title: 'beliefs',
            children: []
          },
          heresies: {
            title: 'heresies',
            children: []
          },
          blessings: {
            title: 'blessings',
            children: []
          },
          curses: {
            title: 'curses',
            children: []
          },
          allies: {
            title: 'allies',
            children: []
          },
          enemies: {
            title: 'enemies',
            children: []
          },
          relationships: [{
            name: 'Dionysus',
            relationship: 'consort'
          }],
          maxims: [{
            title: ''
          }]
        }],
        meta: {
          author: 'unknown',
          contributors: ['ryceg', 'Dark07', 'Maha', 'GadgetBoy', 'Jen9C', 'Levendor', 'Wumbo'],
          license: 'public domain',
          repository: 'https://github.com/ryceg/Eigengrau-s-Essential-Establishment-Generator/blob/master/lib/religion/religion.ts#L580',
          version: 0.1,
          notes: 'Included as the default pantheon.'
        }
      },
      norse: {
        name: 'norse',
        description: `Where the land plummets from the snowy hills into the icy fjords below, where the longboats draw up on to the beach, where the glaciers flow forward and retreat with every fall and spring—this is the land of the Vikings, the home of the Norse pantheon. It’s a brutal clime, and one that calls for brutal living. The warriors of the land have had to adapt to the harsh conditions in order to survive, but they haven’t been too twisted by the needs of their environment. Given the necessity of raiding for food and wealth, it’s surprising the mortals turned out as well as they did. Their powers reflect the need these warriors had for strong leadership and decisive action. Thus, they see their deities in every bend of a river, hear them in the crash of the thunder and the booming of the glaciers, and smell them in the smoke of a burning longhouse.

      The Norse pantheon includes two main families, the Aesir (deities of war and destiny) and the Vanir (gods of fertility and prosperity). Once enemies, these two families are now closely allied against their common enemies, the giants (including the gods Surtur and Thrym).`,
        followers: {
          description: '',
          favouredWeapon: '',
          holyDays: {
            title: 'Holy Days',
            children: []
          }
        },
        gods: [{
          // Odin
          objectType: 'deity',
          passageName: 'DeityProfile',
          name: 'Odin',
          key: 'Odin',
          status: 'alive',
          titles: ['The Allfather', 'Lord of the Aesir', 'Flaming Eye', 'Battle Enhancer', 'Ancient One', 'Enemy of the Wolf', 'God of Burdens', 'Wise One', 'Spear god', 'Swift in Deciet', 'Wand Bearer', 'Teacher of Gods', 'Vistor of the Hanged', 'Father of Hosts', 'Raven God', 'The Hanging One', 'God of Victory'],
          aliases: [],
          rank: 'leader',
          description: '',
          appearance: '',
          history: {
            title: 'history',
            children: []
          },
          powers: {
            title: 'powers',
            children: []
          },
          portfolios: ['wisdom', 'death', 'royalty', 'the gallows', 'war', 'battle', 'victory', 'sorcery', 'poetry', 'frenzy', 'runic alphabet'],
          gender: 'man',
          shape: 'human',
          race: 'god',
          faction: 'aesir',
          domains: ['knowledge', 'trickery', 'war', 'arcana'],
          channelDivinity: {
            title: 'Channel Divinity',
            children: []
          },
          alignment: 'Lawful Good',
          symbol: '',
          combat: {
            title: 'combat',
            children: []
          },
          possessions: {
            children: [{
              title: 'Gungir',
              description: 'The spear Gungir is so well balanced it can hit any target, regardless of skill'
            }, {
              title: 'Draupnir',
              description: 'A gold ring which drips forth eight identical rings after nine days'
            }]
          },
          realm: 'Valhalla',
          followers: {
            description: undefined,
            favouredWeapon: '',
            holyDays: {
              title: 'Holy Days',
              children: [{
                title: 'earth',
                children: ['Wednesday']
              }]
            }
          },
          personality: {
            just: 70,
            merciful: -85,
            chaste: -20
          },
          associations: {
            avatars: [],
            animals: ['raven', 'wolf'],
            plants: ['poppy'],
            monsters: [],
            gems: [],
            colours: [],
            miscellaneous: []
          },
          beliefs: {
            title: 'beliefs',
            children: []
          },
          heresies: {
            title: 'heresies',
            children: []
          },
          blessings: {
            title: 'blessings',
            children: []
          },
          curses: {
            title: 'curses',
            children: []
          },
          allies: {
            title: 'allies',
            children: []
          },
          enemies: {
            title: 'enemies',
            children: []
          },
          relationships: [],
          maxims: [{
            title: ''
          }]
        }, {
          // Thor
          objectType: 'deity',
          passageName: 'DeityProfile',
          name: 'Thor',
          key: 'Thor',
          status: 'alive',
          titles: ['The one who Rides Alone', 'The one who Rules Alone', 'Protector of the Shrine', 'The Loud Weather God', 'The terrible', 'The Thunderer', 'Odinson', 'Strong-Spirit'],
          aliases: [],
          rank: 'greater deity',
          description: 'Thor is the God of Lightning, Thunder and Storms. He is a god of Strength, yet he is also a god who protects the sacred groves and mankind.',
          appearance: '',
          history: {
            title: 'history',
            children: []
          },
          powers: {
            title: 'powers',
            children: []
          },
          portfolios: ['strength', 'battle prowess', 'lightning', 'thunder', 'storms', 'sacred groves', 'the protection of mankind', 'harrowing', 'fertility'],
          gender: 'man',
          shape: 'human',
          race: 'god',
          faction: 'aesir',
          domains: ['tempest', 'war', 'nature'],
          channelDivinity: {
            title: 'Channel Divinity',
            children: []
          },
          alignment: 'Neutral Good',
          symbol: '',
          combat: {
            title: 'combat',
            children: []
          },
          possessions: {
            title: 'Possessions',
            children: [{
              title: 'Jarngreipr ',
              description: 'the pair of gloves he needs to handle Mjolnir'
            }, {
              title: 'Mjolnir',
              description: 'The legendary hammer which summons thunderbolts and, in select cases, can ressurect the fallen. In its forging a mistake was made and the handle is short' // Don't think it returns - this is not Marvel

            }, {
              title: 'Megingjord',
              description: 'A belt doubles Thors mighty strength, allowing him to lift Mjolnir'
            }]
          },
          realm: undefined,
          followers: {
            description: undefined,
            favouredWeapon: 'hammer',
            holyDays: {
              title: 'Holy Days',
              children: [{
                title: 'earth',
                children: ['Thursday']
              }]
            }
          },
          personality: {
            just: 70,
            merciful: -85,
            chaste: -80
          },
          associations: {
            avatars: [],
            animals: ['goat'],
            plants: ['oak'],
            places: ['groves', 'oak forests'],
            monsters: [],
            gems: [],
            colours: [],
            miscellaneous: []
          },
          beliefs: {
            title: 'beliefs',
            children: []
          },
          heresies: {
            title: 'heresies',
            children: []
          },
          blessings: {
            title: 'blessings',
            children: []
          },
          curses: {
            title: 'curses',
            children: []
          },
          allies: {
            title: 'allies',
            children: []
          },
          enemies: {
            title: 'enemies',
            children: []
          },
          relationships: [],
          maxims: [{
            title: ''
          }]
        }, {
          // Loki
          objectType: 'deity',
          passageName: 'DeityProfile',
          name: 'Loki',
          key: 'Loki',
          status: 'alive',
          // unless he is bound to the stone with the snake above him - dunno about this
          titles: ['Tangler', 'Father of Lies', 'Roarer', 'The Sly One', 'Laufeys son', 'Thief of the Idunns apples', 'Hawks child', 'Betrayer of the Gods', 'The Bound God', 'He who has borne children'],
          aliases: [],
          rank: 'greater deity',
          description: '',
          appearance: '',
          history: {
            title: 'history',
            children: []
          },
          powers: {
            title: 'powers',
            children: []
          },
          portfolios: ['magic', 'mischief', 'deceit', 'thievery', 'chaos', 'change', 'temptation', 'shapeshifting'],
          // Not fire, that is Logi, the Jotunn of Fire
          // Loki is a shapeshifter, but it is simpler to give his avatars the corresponding gender.
          // You probably didn't consciously notice that I just used the male pronouns for Loki.
          gender: 'man',
          shape: 'human',
          race: 'Jotunn',
          faction: 'aesir',
          domains: ['trickery'],
          channelDivinity: {
            title: 'Channel Divinity',
            children: []
          },
          alignment: 'Chaotic Evil',
          symbol: '',
          combat: {
            title: 'combat',
            children: []
          },
          possessions: {
            title: 'possessions',
            children: []
          },
          realm: undefined,
          followers: {
            description: undefined,
            favouredWeapon: 'spear',
            holyDays: {
              title: 'Holy Days',
              children: []
            }
          },
          personality: {
            just: 70,
            merciful: -85,
            chaste: -80
          },
          associations: {
            avatars: [],
            animals: [],
            plants: ['birch', 'mistletoe'],
            monsters: ['Fenrir', 'Jormungandr'],
            gems: [],
            colours: [],
            miscellaneous: []
          },
          beliefs: {
            title: 'beliefs',
            children: []
          },
          heresies: {
            title: 'heresies',
            children: []
          },
          blessings: {
            title: 'blessings',
            children: []
          },
          curses: {
            title: 'curses',
            children: []
          },
          allies: {
            title: 'allies',
            children: []
          },
          enemies: {
            title: 'enemies',
            children: []
          },
          relationships: [],
          maxims: [{
            title: ''
          }]
        }, {
          // Frigga
          objectType: 'deity',
          passageName: 'DeityProfile',
          name: 'Frigg',
          key: 'Frigg',
          status: 'alive',
          aliases: ['Frigga'],
          titles: ['Protectress', 'Queen of the Gods'],
          rank: 'greater deity',
          description: '',
          appearance: '',
          history: {
            title: 'history',
            children: []
          },
          powers: {
            title: 'powers',
            children: []
          },
          portfolios: ['prophecy', 'wisdom', 'the household', 'marriage', 'social bonds', 'rain', 'mists', 'fertility', 'birth', 'wetlands', 'protection', 'weaving'],
          gender: 'woman',
          shape: 'human',
          race: 'god',
          faction: 'aesir',
          domains: ['knowledge', 'life'],
          channelDivinity: {
            title: 'Channel Divinity',
            children: []
          },
          alignment: 'Neutral',
          symbol: '',
          combat: {
            title: 'combat',
            children: []
          },
          possessions: {
            title: 'possessions',
            children: []
          },
          realm: undefined,
          followers: {
            description: undefined,
            favouredWeapon: 'spear',
            holyDays: {
              title: 'Holy Days',
              children: [{
                title: 'earth',
                children: ['Friday']
              }]
            }
          },
          personality: {},
          associations: {
            avatars: [],
            animals: ['waterfowl', 'ducks', 'geese'],
            plants: ['linden'],
            places: ['wetlands', 'swamps'],
            monsters: [],
            gems: [],
            colours: [],
            miscellaneous: []
          },
          beliefs: {
            title: 'beliefs',
            children: []
          },
          heresies: {
            title: 'heresies',
            children: []
          },
          blessings: {
            title: 'blessings',
            children: []
          },
          curses: {
            title: 'curses',
            children: []
          },
          allies: {
            title: 'allies',
            children: []
          },
          enemies: {
            title: 'enemies',
            children: []
          },
          relationships: [],
          maxims: [{
            title: ''
          }]
        }, {
          // Freyr
          objectType: 'deity',
          passageName: 'DeityProfile',
          name: 'Freyr',
          key: 'Freyr',
          status: 'alive',
          aliases: ['Frey', 'Yngvi'],
          titles: ['the Lord', 'The Generous One', 'God of Sunlight', 'Sunbeam', 'Lord of Plenty', 'the Fruitful'],
          rank: 'greater deity',
          description: '',
          appearance: '',
          history: {
            title: 'history',
            children: []
          },
          powers: {
            title: 'powers',
            children: []
          },
          portfolios: ['religious kingship', 'virility', 'sunshine', 'peace', 'prosperity', 'fair weather', 'good harvest', 'rain', 'war'],
          gender: 'man',
          shape: 'human',
          race: 'god',
          faction: 'vanir',
          domains: ['light', 'life', 'peace', 'nature', 'war'],
          channelDivinity: {
            title: 'Channel Divinity',
            children: []
          },
          alignment: 'Neutral',
          symbol: '',
          combat: {
            title: 'combat',
            children: []
          },
          possessions: {
            title: 'Possessions',
            children: [{
              title: 'Gullinbursti',
              description: 'A golden boar'
            }]
          },
          realm: undefined,
          followers: {
            description: undefined,
            favouredWeapon: 'spear',
            holyDays: {
              title: 'Holy Days',
              children: []
            }
          },
          personality: {},
          associations: {
            avatars: [],
            animals: ['boar', 'stags'],
            plants: ['crops'],
            monsters: [],
            gems: [],
            colours: [],
            miscellaneous: []
          },
          beliefs: {
            title: 'beliefs',
            children: []
          },
          heresies: {
            title: 'heresies',
            children: []
          },
          blessings: {
            title: 'blessings',
            children: []
          },
          curses: {
            title: 'curses',
            children: []
          },
          allies: {
            title: 'allies',
            children: []
          },
          enemies: {
            title: 'enemies',
            children: []
          },
          relationships: [],
          maxims: [{
            title: ''
          }]
        }, {
          // Freyja
          objectType: 'deity',
          passageName: 'DeityProfile',
          name: 'Freyja',
          key: 'Freyja',
          status: 'alive',
          aliases: ['Freya', 'Freja'],
          titles: ['The Giver', 'Flaxen', 'One who makes the Sea Swll', 'Lady of the Slain', 'Noble Lady', 'Bright One', 'Goddess of the Vanir', 'Fair Tear Deity'],
          rank: 'greater deity',
          description: '',
          appearance: '',
          history: {
            title: 'history',
            children: []
          },
          powers: {
            title: 'powers',
            children: []
          },
          portfolios: ['love', 'marriage', 'prosperity', 'beauty', 'fertility', 'sex', 'war', 'gold', 'magic'],
          gender: 'woman',
          shape: 'human',
          race: 'god',
          domains: ['life', 'arcana', 'war'],
          channelDivinity: {
            title: 'Channel Divinity',
            children: []
          },
          alignment: 'Neutral',
          symbol: '',
          combat: {
            title: 'combat',
            children: []
          },
          possessions: {
            title: 'possessions',
            children: []
          },
          realm: 'Folkvangr',
          followers: {
            description: undefined,
            favouredWeapon: 'spear',
            holyDays: {
              title: 'Holy Days',
              children: []
            }
          },
          personality: {
            chaste: 30
          },
          associations: {
            avatars: [],
            animals: ['cat', 'lynx', 'falcon', 'boar'],
            plants: [''],
            monsters: [],
            gems: [],
            colours: [],
            miscellaneous: []
          },
          beliefs: {
            title: 'beliefs',
            children: []
          },
          heresies: {
            title: 'heresies',
            children: []
          },
          blessings: {
            title: 'blessings',
            children: []
          },
          curses: {
            title: 'curses',
            children: []
          },
          allies: {
            title: 'allies',
            children: []
          },
          enemies: {
            title: 'enemies',
            children: []
          },
          relationships: [],
          maxims: [{
            title: ''
          }]
        }, {
          // Bragi
          objectType: 'deity',
          passageName: 'DeityProfile',
          name: 'Bragi',
          key: 'Bragi',
          status: 'alive',
          titles: ['The long-bearded god', 'The husband of Idunn', 'First maker of Poetry', 'Son of Odin'],
          aliases: [],
          rank: 'greater deity',
          description: '',
          appearance: '',
          history: {
            title: 'history',
            children: []
          },
          powers: {
            title: 'powers',
            children: []
          },
          portfolios: ['skaldic poetry', 'wisdom'],
          gender: 'man',
          shape: 'human',
          race: 'god',
          domains: ['knowledge'],
          channelDivinity: {
            title: 'Channel Divinity',
            children: []
          },
          alignment: 'Neutral',
          symbol: '',
          combat: {
            title: 'combat',
            children: []
          },
          possessions: {
            title: 'possessions',
            children: []
          },
          realm: undefined,
          followers: {
            description: 'the Skalds are the story tellers of the Jarl, and rarely go into battle. They recite stories of the great deeds of gods and men',
            favouredWeapon: 'harp',
            holyDays: {
              title: 'Holy Days',
              children: []
            }
          },
          personality: {
            just: 70,
            merciful: -85,
            chaste: -80
          },
          associations: {
            avatars: [],
            animals: [],
            plants: [],
            monsters: [],
            gems: [],
            colours: [],
            miscellaneous: []
          },
          beliefs: {
            title: 'beliefs',
            children: []
          },
          heresies: {
            title: 'heresies',
            children: []
          },
          blessings: {
            title: 'blessings',
            children: []
          },
          curses: {
            title: 'curses',
            children: []
          },
          allies: {
            title: 'allies',
            children: []
          },
          enemies: {
            title: 'enemies',
            children: []
          },
          relationships: [],
          maxims: [{
            title: ''
          }]
        }, {
          // Sif
          objectType: 'deity',
          passageName: 'DeityProfile',
          name: 'Sif',
          key: 'Sif',
          status: 'alive',
          titles: ['The Prophetess Sibyl', 'The Fair-haired Deity', 'Loveliest of Women', 'The Wife of Thor', 'Mother of Ullr', 'Good Mother'],
          aliases: [],
          rank: 'greater deity',
          description: '',
          appearance: 'a beautiful woman with a brilliant wig made of gold',
          history: {
            title: 'history',
            children: []
          },
          powers: {
            title: 'powers',
            children: []
          },
          portfolios: ['harvest', 'autum', 'vitality', 'fertility', 'wedlock'],
          gender: 'man',
          shape: 'human',
          race: 'god',
          domains: ['nature'],
          channelDivinity: {
            title: 'Channel Divinity',
            children: []
          },
          alignment: 'Neutral',
          symbol: '',
          combat: {
            title: 'combat',
            children: []
          },
          possessions: {
            title: 'possessions',
            children: []
          },
          realm: undefined,
          followers: {
            description: undefined,
            favouredWeapon: 'spear',
            holyDays: {
              title: 'Holy Days',
              children: []
            }
          },
          personality: {},
          associations: {
            avatars: [],
            animals: [],
            plants: ['rowan'],
            monsters: [],
            gems: [],
            colours: [],
            miscellaneous: []
          },
          beliefs: {
            title: 'beliefs',
            children: []
          },
          heresies: {
            title: 'heresies',
            children: []
          },
          blessings: {
            title: 'blessings',
            children: []
          },
          curses: {
            title: 'curses',
            children: []
          },
          allies: {
            title: 'allies',
            children: []
          },
          enemies: {
            title: 'enemies',
            children: []
          },
          relationships: [],
          maxims: [{
            title: ''
          }]
        }, {
          // Baldr
          objectType: 'deity',
          passageName: 'DeityProfile',
          name: 'Baldr',
          key: 'Baldr',
          status: 'dead',
          titles: ['the Bleeding God', 'Wisest of the Aesir', 'Fairest of the Aesir'],
          aliases: [],
          rank: 'greater deity',
          description: '',
          appearance: '',
          history: {
            title: 'history',
            children: []
          },
          powers: {
            title: 'powers',
            children: []
          },
          portfolios: ['beauty', 'light', 'peace', 'valour', 'joy', 'summer sun', 'purity'],
          gender: 'man',
          shape: 'human',
          race: 'god',
          domains: ['life', 'light', 'peace'],
          channelDivinity: {
            title: 'Channel Divinity',
            children: []
          },
          alignment: 'Neutral',
          symbol: '',
          combat: {
            title: 'combat',
            children: []
          },
          possessions: {
            title: 'possessions',
            children: []
          },
          realm: undefined,
          followers: {
            description: undefined,
            favouredWeapon: 'spear',
            holyDays: {
              title: 'Holy Days',
              children: []
            }
          },
          personality: {
            just: 70,
            merciful: -85,
            chaste: -80
          },
          associations: {
            avatars: [],
            animals: [],
            plants: ['scentless mayweed'],
            monsters: [],
            gems: [],
            colours: [],
            miscellaneous: []
          },
          beliefs: {
            title: 'beliefs',
            children: []
          },
          heresies: {
            title: 'heresies',
            children: []
          },
          blessings: {
            title: 'blessings',
            children: []
          },
          curses: {
            title: 'curses',
            children: []
          },
          allies: {
            title: 'allies',
            children: []
          },
          enemies: {
            title: 'enemies',
            children: []
          },
          relationships: [],
          maxims: [{
            title: ''
          }]
        }, {
          // Aegir
          objectType: 'deity',
          passageName: 'DeityProfile',
          name: 'Name',
          key: 'Name',
          status: 'alive',
          titles: [],
          aliases: [],
          rank: 'greater deity',
          description: '',
          appearance: '',
          history: {
            title: 'history',
            children: []
          },
          powers: {
            title: 'powers',
            children: []
          },
          portfolios: [''],
          gender: 'man',
          shape: 'human',
          race: 'god',
          domains: ['tempest'],
          channelDivinity: {
            title: 'Channel Divinity',
            children: []
          },
          alignment: 'Neutral',
          symbol: '',
          combat: {
            title: 'combat',
            children: []
          },
          possessions: {
            title: 'possessions',
            children: []
          },
          realm: undefined,
          followers: {
            description: undefined,
            favouredWeapon: 'spear',
            holyDays: {
              title: 'Holy Days',
              children: []
            }
          },
          personality: {
            just: 70,
            merciful: -85,
            chaste: -80
          },
          associations: {
            avatars: [],
            animals: [],
            plants: [],
            monsters: [],
            gems: [],
            colours: [],
            miscellaneous: []
          },
          beliefs: {
            title: 'beliefs',
            children: []
          },
          heresies: {
            title: 'heresies',
            children: []
          },
          blessings: {
            title: 'blessings',
            children: []
          },
          curses: {
            title: 'curses',
            children: []
          },
          allies: {
            title: 'allies',
            children: []
          },
          enemies: {
            title: 'enemies',
            children: []
          },
          relationships: [],
          maxims: [{
            title: ''
          }]
        }, {
          // Hel
          objectType: 'deity',
          passageName: 'DeityProfile',
          name: 'Hel',
          key: 'Hel',
          status: 'alive',
          titles: [],
          aliases: [],
          rank: 'greater deity',
          description: '',
          appearance: '',
          history: {
            title: 'history',
            children: []
          },
          powers: {
            title: 'powers',
            children: []
          },
          portfolios: [''],
          gender: 'woman',
          shape: 'human',
          race: 'god',
          domains: ['death', 'grave'],
          channelDivinity: {
            title: 'Channel Divinity',
            children: []
          },
          alignment: 'Neutral',
          symbol: '',
          combat: {
            title: 'combat',
            children: []
          },
          possessions: {
            title: 'possessions',
            children: []
          },
          realm: undefined,
          followers: {
            description: undefined,
            favouredWeapon: 'spear',
            holyDays: {
              title: 'Holy Days',
              children: []
            }
          },
          personality: {
            just: 70,
            merciful: -85,
            chaste: -80
          },
          associations: {
            avatars: [],
            animals: [],
            plants: [],
            monsters: [],
            gems: [],
            colours: [],
            miscellaneous: []
          },
          beliefs: {
            title: 'beliefs',
            children: []
          },
          heresies: {
            title: 'heresies',
            children: []
          },
          blessings: {
            title: 'blessings',
            children: []
          },
          curses: {
            title: 'curses',
            children: []
          },
          allies: {
            title: 'allies',
            children: []
          },
          enemies: {
            title: 'enemies',
            children: []
          },
          relationships: [],
          maxims: [{
            title: ''
          }]
        }]
      }
    }
  };

  /* eslint-disable @typescript-eslint/ban-ts-comment */
  const createTownReligion = (town, pantheon) => {
    if (!pantheon) pantheon = religion.pantheon.greek;
    town.religion.pantheon = pantheon.name;
    const tempWeights = getTownDeityWeightings(town, pantheon.gods);
    town.religionProbabilities = gradeDeityWeightings(tempWeights);
  };
  /**
   * The probabilities that replace the default 10.
   */

  const rankProbabilities = {
    'leader': 10,
    'greater deity': 9,
    'intermediate deity': 7,
    'lesser deity': 5,
    'immortal': 3,
    'demigod': 2,
    'saint': 1
  };

  const getDeityWeightFromRace = (town, deity) => {
    console.log(`Getting the weight for ${deity.name}`);
    let probability = rankProbabilities[deity.rank] || 10;
    console.log(town);

    for (const key of Object.keys(town._demographicPercentile)) {
      const race = key;

      if (deity?.probabilityWeightings?.race?.[race]) {
        const raceWeight = deity.probabilityWeightings.race[race];
        if (raceWeight) probability += calcPercentage(raceWeight, town._demographicPercentile[race]);
      }
    }

    return probability;
  };
  /** Gets everything static- i.e. no user-intervention specific modifiers. */


  const getUnalteredTownDeityWeightings = (town, deities = getFallbackDeities(town)) => {
    console.log('Getting unaltered town deity weightings...');
    const weightings = {};

    for (const deity of deities) {
      if (town?.ignoreRace) {
        weightings[deity.name] = rankProbabilities[deity.rank] || 7;
      } else {
        weightings[deity.name] = getDeityWeightFromRace(town, deity) || 7;
      }

      weightings[deity.name] = addIfDefined(deity?.probabilityWeightings?.economicIdeology?.[town.economicIdeology], weightings[deity.name]);
      weightings[deity.name] = addIfDefined(deity?.probabilityWeightings?.politicalIdeology?.[town.politicalIdeology], weightings[deity.name]);
      weightings[deity.name] = addIfDefined(deity?.probabilityWeightings?.politicalSource?.[town.politicalSource], weightings[deity.name]);

      for (const roll in deity?.probabilityWeightings?.rolls) {
        if (!roll) continue;
        const townRoll = roll;
        weightings[deity.name] = addIfDefined(compareRollToTarget(deity.probabilityWeightings?.rolls[townRoll], town.roll[townRoll]), weightings[deity.name]);
      }
    }

    return weightings;
  };
  /** Modifies the town religion weights based on the user defined weights. */

  const modifyTownWeights = (town, weights, deities = getFallbackDeities(town)) => {
    console.log('Modifying town weights...');
    console.log(weights);
    if (!town.religion._modifiers) town.religion._modifiers = {};

    for (const deity of deities) {
      if (!weights[deity.name]) {
        weights[deity.name] = 0;
      }

      if (!town.religion._modifiers[deity.name]) town.religion._modifiers[deity.name] = 0;
      weights[deity.name] = addIfDefined(town.religion._modifiers[deity.name], weights[deity.name]);
    }

    console.log(weights);
    return weights;
  };
  /** The generic, user-facing one that gets _everything_; applies modifiers, runoffs, etc. */

  const getTownDeityWeightings = (town, deities = getFallbackDeities(town)) => {
    console.groupCollapsed('Getting town deity weightings...');
    let weights = getUnalteredTownDeityWeightings(town, deities);
    console.log('Got unaltered weights.');
    console.log(weights);
    weights = modifyTownWeights(town, weights, deities);
    console.log('Clamping...');

    for (const entry in weights) {
      weights[entry] = weights[entry].clamp(0, 999999);
    }

    console.log('Finished');
    console.groupEnd();
    return weights;
  };
  /** Returns the weightings, modified with the multipliers and runoff position.
   * Only runs on startup!
  */

  const gradeDeityWeightings = temp => {
    const firstPlaceMultiplier = 10;
    const secondPlaceMultiplier = 2;
    const randomPlaceMultiplier = 20;
    const lowestQualifyingPosition = 10; // sort high to low

    const output = Object.fromEntries(Object.entries(temp).sort(([, a], [, b]) => a - b));
    const deityArray = Object.keys(output); // clamp

    for (const entry in output) {
      output[entry] = output[entry].clamp(0, 999999);
    } // apply bonuses


    output[deityArray[0]] *= firstPlaceMultiplier;
    output[deityArray[1]] *= secondPlaceMultiplier;
    output[deityArray[random(lowestQualifyingPosition)]] *= randomPlaceMultiplier; // remove lowest probabilities

    for (let i = lowestQualifyingPosition; i < deityArray.length - 1; i++) {
      output[deityArray[i]] = 0;
    } // curve remainder lowest five


    for (let i = 1; i < 5; i++) {
      output[deityArray[lowestQualifyingPosition - i]] /= 5 / i;
    }

    return output;
  };
  /** Compiles weight to a percentile */

  const compileWeightToPercentile = weights => {
    console.log('Compiling weights to percentile...'); // Get an array of the demographic keys (race names).

    const deities = Object.keys(weights); // Calculate the sum of the raw demographic values.

    const sum = deities.map(deity => weights[deity]).reduce((acc, cur) => acc + cur, 0);
    const percentages = {};

    for (const deity of deities) {
      percentages[deity] = weights[deity] / sum * 100;
    }

    return percentages;
  }; // export const getRandomDeity = (town: Town, deities = getFallbackDeities(town)): string => {
  //   const weights = getTownDeityWeightings(town, deities)
  //   // TODO: Can we create a new function to avoid using `weightedRandomFetcher`?
  //   const pickedDeity = weightedRandomFetcher(town, weights, undefined, undefined, 'object')
  //   return pickedDeity
  // }

  /**
   * @param roll This is the variable.
   * @param target This is the target for the roll- think of it as the DC.
   * @param opts Optional object.
   * @returns The probability bonus
   */
  const compareRollToTarget = (roll, target, opts) => {
    if (!roll) return 0;
    opts = Object.assign({
      bonus: 30,
      maxDistance: 30,
      tolerance: 'both'
    }, opts);
    const distance = Math.abs(target - roll);

    switch (opts.tolerance) {
      case 'over':
        if (target < roll) return getSimilarity(opts.bonus, distance);
        break;

      case 'under':
        if (target > roll) return getSimilarity(opts.bonus, distance);
    }

    if (distance < opts.maxDistance) {
      return getSimilarity(opts.bonus, distance);
    }

    return 0;
  };
  /** This can be thought of as 'similarity' to the target, with 1 being identical. */

  const getSimilarity = (base, distance) => {
    const similarity = (100 - distance) / 100;
    return base * similarity;
  };
  /** Returns them added together if the first argument is defined, otherwise just returns the second argument. */


  const addIfDefined = (arg, target) => {
    if (!arg) return target;
    return target + arg;
  };
  const getFallbackPantheon = town => {
    const pantheonName = town.religion.pantheon;
    const pantheon = religion.pantheon[pantheonName] || town.religion._customPantheon || religion.pantheon.greek;
    return pantheon;
  };
  const getFallbackDeities = town => {
    return getFallbackPantheon(town).gods;
  };

  /**
   * Maps a dictionary of string/number pairs into an array of tuples.
   *
   * @example
   * { human: 16.12, dragonborn: 0.3, dwarf: 6.1249 }
   * // converts into
   * [['dragonborn', 0.3], ['dwarf', 6.1249], ['human', 16.12]]
   */

  function sortArray(container) {
    const sortable = keys(container).map(key => {
      return [key, container[key]];
    });
    return sortable.sort((a, b) => a[1] - b[1]);
  }

  const getPredominantReligion = (town, percentages) => {
    console.log('Getting the predominant deity...');
    console.log(percentages); // Pick out the primary & secondary Race name percentages.

    const sortedArray = sortArray(percentages).reverse();
    console.log(sortedArray);
    const [primary, secondary] = sortedArray;
    const [primaryDeity, percentile] = primary;
    const [secondaryDeity, secondaryPercentile] = secondary;

    if (percentile > 99) {
      return {
        percentile,
        secondaryPercentile,
        amount: 'completely',
        amountDescriptive: `entirely, without fail, worships ${primaryDeity}`,
        primaryDeity,
        secondaryDeity
      };
    }

    if (percentile > 90) {
      return {
        percentile,
        secondaryPercentile,
        amount: 'completely',
        amountDescriptive: `almost uniformly worships ${primaryDeity}`,
        primaryDeity,
        secondaryDeity
      };
    }

    if (percentile > 80) {
      return {
        percentile,
        secondaryPercentile,
        amount: 'overwhelmingly',
        amountDescriptive: `overwhelmingly worships ${primaryDeity}`,
        primaryDeity,
        secondaryDeity
      };
    }

    if (percentile > 70) {
      return {
        percentile,
        secondaryPercentile,
        amount: 'predominantly',
        amountDescriptive: `predominantly worships ${primaryDeity}`,
        primaryDeity,
        secondaryDeity
      };
    }

    if (percentile > 65) {
      return {
        percentile,
        secondaryPercentile,
        amount: 'largely',
        amountDescriptive: `largely worships ${primaryDeity}`,
        primaryDeity,
        secondaryDeity
      };
    }

    if (percentile > 60) {
      return {
        percentile,
        secondaryPercentile,
        amount: 'mostly',
        amountDescriptive: `mostly worships ${primaryDeity}`,
        primaryDeity,
        secondaryDeity
      };
    }

    if (percentile > 55) {
      return {
        percentile,
        secondaryPercentile,
        amount: 'mostly',
        amountDescriptive: `mostly worships ${primaryDeity}, with some followers of ${secondaryDeity}`,
        primaryDeity,
        secondaryDeity
      };
    }

    if (percentile > 50) {
      return {
        percentile,
        secondaryPercentile,
        amount: 'mostly',
        amountDescriptive: `worships ${primaryDeity}, with a slim majority, along with some following ${secondaryDeity}`,
        primaryDeity,
        secondaryDeity
      };
    }

    if (percentile > 40) {
      return {
        percentile,
        secondaryPercentile,
        amount: 'fairly diverse',
        amountDescriptive: `worships many deities, the most common being ${primaryDeity}`,
        primaryDeity,
        secondaryDeity
      };
    }

    if (percentile > 35) {
      return {
        percentile,
        secondaryPercentile,
        amount: 'rather diverse',
        amountDescriptive: `worships many deities, the most common being ${primaryDeity}, whose worshipers make up slightly over a third of the population`,
        primaryDeity,
        secondaryDeity
      };
    }

    if (percentile > 30) {
      return {
        percentile,
        secondaryPercentile,
        amount: 'incredibly diverse',
        amountDescriptive: `worships many deities, the most common being ${primaryDeity}, whose worshipers make up just under a third of the population`,
        primaryDeity,
        secondaryDeity
      };
    }

    if (percentile > 20) {
      return {
        percentile,
        secondaryPercentile,
        amount: 'melting pot of races',
        amountDescriptive: 'worships many deities, with no clear majority',
        primaryDeity,
        secondaryDeity
      };
    }

    return {
      percentile,
      secondaryPercentile,
      amount: 'diverse melting pot of races',
      amountDescriptive: 'worships many deities, none having a clear majority at all',
      primaryDeity,
      secondaryDeity
    };
  };

  /**
  * For returning an object from an array by key value
  * i.e. town.buildings keys.
  * find building find array
  */
  function findInArray(array, key, value) {
    for (const element of array) {
      if (element[key] === value) {
        // console.log(`Found matching key value of ${key}: ${value}!`)
        // console.log(element)
        return element;
      }
    }
  }

  const getDeity = (town, deity, customPantheon) => {
    console.log(`Getting ${deity}...`);
    return findInArray(getPantheonDeities(town, customPantheon), 'name', deity);
  };
  const getPantheon = (town, customPantheon) => {
    townHasPantheon(town);
    console.log(`Getting pantheon that matched ${town.religion.pantheon}`);

    if (isUsingCustomPantheon(town, customPantheon)) {
      console.log('Using a custom pantheon!');
      return getCustomPantheon(town, customPantheon);
    }

    return religion.pantheon[town.religion.pantheon];
  };
  const getPantheonDeities = (town, customPantheon) => {
    console.log('Getting pantheon deities...');
    return getPantheon(town, customPantheon).gods;
  };
  const getPantheonNames = (town, customPantheon) => {
    console.log('Getting pantheon names...');
    return Object.keys(getAllPantheons(town, customPantheon));
  };
  const getAllPantheons = (town, customPantheon) => {
    console.log('Getting all pantheons...');
    const pantheons = Object.assign({}, religion.pantheon);
    if (seeIfCustomPantheonExists(town, customPantheon)) pantheons[getCustomPantheon(town, customPantheon).name] = getCustomPantheon(town, customPantheon);
    return pantheons;
  };
  /** If the pantheon being used doesn't exist in the data, it's obviously custom. */

  const isUsingCustomPantheon = (town, customPantheon = getFallbackPantheon(town)) => {
    console.log('Checking to see if you are using a custom pantheon...'); // if (!town.religion.pantheon) return false

    if (!town.religion._customPantheon) return false;
    if (religion.pantheon[town.religion.pantheon]) return false;
    if (customPantheon?.name === 'greek') return false;
    console.log('Looks like you are using a custom pantheon!');
    if (town.religion.pantheon === customPantheon.name) return true;
    return true;
  };
  const seeIfCustomPantheonExists = (town, customPantheon) => {
    console.log('Checking to see if a custom pantheon exists...');
    if (customPantheon) return true;
    if (town.religion._customPantheon) return true;
    console.log('Looks like the custom pantheon does not exist!');
    return false;
  };
  const getCustomPantheon = (town, customPantheon) => {
    console.log('Getting the custom pantheon...');
    if (customPantheon) return customPantheon;
    if (town.religion._customPantheon) return town.religion._customPantheon;
    throw new Error('Custom pantheon not defined!');
  };
  /** For getting ALL deities, including 0% ones. */

  const getAllPantheonPercentages = (town, customPantheon) => {
    console.log('Getting all pantheon percentages...');
    return Object.fromEntries(Object.entries(compileWeightToPercentile(getTownDeityWeightings(town, getPantheonDeities(town, customPantheon)))).sort(([, a], [, b]) => a - b).reverse());
  };
  const getPantheonPercentages = (town, customPantheon) => {
    console.log('Getting pantheon percentages...');
    const temp = compileWeightToPercentile(getTownDeityWeightings(town, getPantheonDeities(town, customPantheon)));
    return Object.fromEntries(Object.entries(temp).filter(([, value]) => value > 1).sort(([, a], [, b]) => a - b).reverse());
  };

  const townHasPantheon = town => {
    switch (typeof town.religion.pantheon) {
      case 'undefined':
        town.religion.pantheon = 'greek';
        break;
    }
  };

  const deityIsWas = status => {
    if (status === 'dead') return 'was';
    return 'is';
  };
  const deityUsesUsed = status => {
    if (status === 'dead') return 'used';
    return 'uses';
  };
  const deityStatus = deity => {
    if (deity.status === 'dead') return `${deity.name} is currently dead.`;
    if (deity.status === 'imprisoned') return `${deity.name} is currently imprisoned.`;
    if (deity.status === 'dormant') return `${deity.name} is currently dormant.`;
    if (deity.status === 'uncertain') return `${deity.name}'s status is currently not known.`;
    return '';
  };

  /**
   * Types:
   * * Title & Description: easy as pie.
   * * Just the description: for new paragraphs.
   * * Just the title: NO
   * * Just the children array, which is full: list
   * * Title, description, and children array of just titles:
   */
  const printInformation = (information, output = $('<div />')) => {
    information.opts = Object.assign({
      element: '<h3 />'
    }, information.opts); // eslint-disable-next-line @typescript-eslint/ban-ts-comment
    // @ts-ignore

    const elementLevel = parseInt(information.opts.element[2]) + 1;

    if (information.title && !information.opts.suppressTitle) {
      if (information?.children?.length === 0 && !information.description) {
        return;
      } else {
        $(information.opts.element).text(lib.toTitleCase(information.title)).appendTo(output);
      }
    }

    if (information.description) {
      $(`<p>${information.description}</p>`).appendTo(output);
    } // if children is defined (i.e. it's a container)


    if (information.children) {
      // if the children array is empty, the entire thing is likely not being used
      if (information.children.length === 0) ; else {
        const list = [];

        for (const info of information.children) {
          if (typeof info === 'string') {
            list.push(info);
          } else {
            printInformation(Object.assign({
              opts: {
                element: `<h${elementLevel} />`
              }
            }, info), output);
          }
        }

        if (list.length > 0) {
          output.prepend(`<p>${lib.toUpperFirst(lib.makeList(list))}.</p>`);
        }
      }
    }

    return output.wrap('<div />').parent().html();
  };

  const isInformationEmpty = info => {
    if (Array.isArray(info)) {
      if (info[0].description || info[0].children && info[0].children.length > 0) return false;
    } else {
      if (info.description || info.children && info.children.length > 0) return false;
    }

    return true;
  };

  const smithyData = {
    get: {
      customers: [{
        relationshipDescription: 'regular',
        relationships: {
          building: {
            relationship: 'regular'
          },
          associatedNPC: {
            relationship: 'blacksmith',
            reciprocalRelationship: 'client'
          }
        },
        base: {
          professionType: 'labourer'
        },

        description(building, npc) {
          return `${npc.firstName} regularly gets tools repaired.`;
        }

      }, {
        relationshipDescription: 'buyer',
        relationships: {
          building: {
            relationship: 'buyer'
          },
          associatedNPC: {
            relationship: 'blacksmith',
            reciprocalRelationship: 'client'
          }
        },
        base: {
          profession: 'wagoner'
        },

        description(building, npc) {
          return `${npc.firstName} buys horse shoes regularly.`;
        }

      }, {
        relationshipDescription: 'former customer',
        relationships: {
          building: {
            relationship: 'former customer'
          },
          associatedNPC: {
            relationship: 'target of boycott',
            reciprocalRelationship: 'former client'
          }
        },

        description(building, npc) {
          return `${npc.firstName} no longer buys anything from ${building.name} because ${['the prices were too high', 'of a perceived insult', 'the goods were cheaper elsewhere', `${npc.heshe} believes that ${building.associatedNPC.firstName} was rude.`, `${building.associatedNPC.firstName} was rude to ${npc.himher}`].random()}.`;
        }

      }, {
        relationshipDescription: 'carpenter',
        relationships: {
          building: {
            relationship: 'carpenter',
            reciprocalRelationship: 'client'
          },
          associatedNPC: {
            relationship: 'blacksmith',
            reciprocalRelationship: 'client'
          }
        },
        base: {
          profession: 'carpenter'
        },

        description(building, npc) {
          return `${npc.firstName} sells wine to ${building.name}.`;
        }

      }, {
        relationshipDescription: 'patron',
        relationships: {
          building: {
            relationship: 'patron',
            reciprocalRelationship: 'client'
          },
          associatedNPC: {
            relationship: 'blacksmith',
            reciprocalRelationship: 'client'
          }
        },
        base: {
          socialClass: 'nobility'
        },

        description(building, npc) {
          return `${npc.firstName} commissions expensive weaponry and armor from ${building.name}.`;
        }

      }, {
        relationshipDescription: 'superstitious peasant',
        relationships: {
          building: {
            relationship: 'superstitious peasant',
            reciprocalRelationship: 'client'
          },
          associatedNPC: {
            relationship: 'blacksmith',
            reciprocalRelationship: 'client'
          }
        },
        base: {
          socialClass: 'peasantry'
        },

        description(building, npc) {
          return `${npc.firstName} buys cold iron from ${building.name} to ward off evil spirits.`;
        }

      }],
      expertise: smithy => [{
        expertise: 80,
        wealth: 10,
        note: `On the bench lies a ${lib.smithyData.weapons.random()}, and just by looking at it, you can tell that the blacksmith is extremely talented at ${smithy.associatedNPC.hisher} craft; this is a weapon clearly fit for a king.`
      }, {
        expertise: 70,
        wealth: 10,
        note: `On the bench lies a ${lib.smithyData.weapons.random()}, and looking at it, you can tell that the blacksmith is talented at ${smithy.associatedNPC.hisher} craft; this is a well made weapon.`
      }, {
        expertise: 60,
        wealth: 10,
        note: `On the bench is a ${lib.smithyData.weapons.random()}, and you can tell that ${smithy.associatedNPC.name} is well trained; the weapon is more than servicable, and carries a nice heft to it.`
      }, {
        expertise: 50,
        wealth: 10,
        note: `On the bench lies a ${lib.smithyData.weapons.random()}. Inspecting it, it's of slightly above average quality, and is made well.`
      }, {
        expertise: 40,
        wealth: 10,
        note: `On the bench is a ${lib.smithyData.weapons.random()}. Inspecting it, it's of slightly below average quality, and has an odd weight to it.`
      }, {
        expertise: 30,
        wealth: 10,
        note: `On the bench lies a ${lib.smithyData.weapons.random()}. Looking at it, you can see that it's not very well made.`
      }, {
        expertise: 20,
        wealth: 10,
        note: `On the bench lies a ${lib.smithyData.weapons.random()}. It's a respectable effort for an amateur, but for a professional blacksmith, it's rather poor quality.`
      }, {
        expertise: 10,
        wealth: 10,
        note: `On the bench lies a ${lib.smithyData.weapons.random()}. It's obviously amateurish. ${smithy.associatedNPC.firstName} moves around the shop, unsure of ${smithy.associatedNPC.himherself}, betraying ${smithy.associatedNPC.hisher} lack of skills.`
      }],
      lookAround: smithy => [{
        cleanliness: 80,
        wealth: 10,
        note: `The smithy is fastidious, with a swept floor and tools stored neatly on the walls. There's a desk in the corner with a piece of parchment showing the current project's measurements, and the materials are neatly stored in bins. Clearly, whatever apprentice has been charged with upkeep of the smithy has taken their job very seriously. You can see that activity in ${smithy.name} is ${smithy.activity}.`
      }, {
        cleanliness: 70,
        wealth: 10,
        note: `You can see that activity in ${smithy.name} is ${smithy.activity}. The ${smithy.wordNoun} is very tidy, with a swept floor and tools stored neatly on the bench in a row. The forge has been recently cleaned, and there's a surprising lack of grime in the furnace. On the wall are several project specifications nailed, with bins of their respective required materials underneath; it's clearly a well kempt smithy.`
      }, {
        cleanliness: 60,
        wealth: 10,
        note: `You can see that activity in ${smithy.name} is ${smithy.activity}. The ${smithy.wordNoun} is tidy, with a swept floor and things in some semblance of order. There are sheafs of paper on the bench, with hunks of metal neatly holding each stack down; clearly, they are specifications for different projects, and the materials needed for each of them.`
      }, {
        cleanliness: 50,
        wealth: 10,
        note: `The smithy is reasonably tidy, with the usual dirt from ${smithy.associatedNPC.firstName}'s current project on the floor. You can see that activity in ${smithy.name}is ${smithy.activity}. There are sheafs of parchment on the bench with measurements and specifications for projects, and there's a bucket of water still sizzling from a recent dousing in the corner.`
      }, {
        cleanliness: 40,
        wealth: 10,
        note: `The smithy is somewhat messy, with the usual dirt and debris from ${smithy.associatedNPC.firstName}'s current project on the floor; a half-hearted sweeping has been recently made, although all that did was push the dirt around the smithy to dirty up different parts of the floor. You can see that business in ${smithy.name} is ${smithy.activity}.`
      }, {
        cleanliness: 30,
        wealth: 10,
        note: `The smithy is rather messy, with tools strewn around, and spare hunks of metal littering the floor. You can see several projects lying either abandoned or at least temporarily forgotten, coated in a layer of dust. The bench top is cluttered with hammers, and the anvil itself has a layer of grime on it, in desperate need of a cleaning. You can see that business in ${smithy.name} is ${smithy.activity}.`
      }, {
        cleanliness: 20,
        wealth: 10,
        note: `The smithy is very messy, with tools and offcuts strewn around, and blackened cobwebs lining the ceiling. There's a layer of dust and grime on the bench top, and the floor has not been swept in quite a while. Business in ${smithy.name} is ${smithy.activity}.`
      }, {
        cleanliness: 10,
        wealth: 10,
        note: 'The smithy is filthy, with smoke having blackened the walls and a thick layer of grime and dust coating every surface. The smell of various burnt woods, coals, and other things permeates your nostrils, and your boots leave visible footprints in the ash underfoot.'
      }]
    },
    rollData: {
      wealth: {
        description: 'How successful is the smithy?',
        preceding: 'Smithy Wealth:',
        rolls: [[95, 'kingly'], [80, 'aristocratic'], [70, 'wealthy'], [60, 'comfortable'], [50, 'modest'], [25, 'poor'], [15, 'squalid'], [0, 'destitute']]
      },
      size: {
        description: 'How large is the smithy?',
        preceding: 'Smithy Size:',
        rolls: [[95, 'cavernous'], [80, 'huge'], [70, 'quite large'], [60, 'large'], [50, 'spacious'], [40, 'average sized'], [30, 'somewhat cramped'], [20, 'small'], [10, 'tiny'], [0, 'extremely cramped']]
      },
      cleanliness: {
        description: 'How clean is the smithy?',
        preceding: 'Smithy Cleanliness:',
        rolls: [[80, 'fastidious'], [70, 'very tidy'], [60, 'tidy'], [50, 'reasonably tidy'], [40, 'somewhat messy'], [30, 'rather messy'], [20, 'very messy'], [10, 'extremely messy'], [0, 'dangerously messy']]
      },
      expertise: {
        description: 'How skilled is the blacksmith?',
        preceding: 'Smithy Expertise:',
        rolls: [[80, 'masterful'], [70, 'exceptional'], [60, 'superior quality'], [50, 'finely crafted'], [40, 'well crafted'], [30, 'sloppily made'], [20, 'somewhat amateur'], [10, 'amateur'], [0, 'blatantly amateur']]
      },
      activity: {
        description: 'How busy is the blacksmith? Is there a backlog a mile long, or are apprentices sitting idle?',
        preceding: 'Smithy:',
        rolls: [[80, 'extremely busy'], [70, 'very busy'], [60, 'rather busy'], [50, 'reasonably busy'], [40, 'not terribly busy'], [30, 'reasonably quiet'], [20, 'rather quiet'], [10, 'totally empty'], [0, 'totally empty']]
      },
      reputation: {
        description: 'Is it well known, or is it a hobby shop?',
        preceding: 'Smithy Reputation:',
        hasRolls: false
      },
      priceModifier: {
        description: 'How do the prices here compare to your average smithy?',
        preceding: 'Smithy Price Modifier:',
        hasRolls: false
      }
    },
    name: {
      adjective: ['Hard', 'Sharp', 'Pointy', 'Well-worn', 'Rusted', 'Shiny', 'Cold', 'Glowing', 'Heated', 'Golden', 'Silvered', 'Bronzed', 'Polished', 'Engraved', 'Jeweled', 'Plated', 'Eternal', 'Long-Lasting', 'Famed'],
      noun: ['Iron', 'Metal', 'Gold', 'Silver', 'Bronze', 'Copper', 'Platinum', 'Electrum', 'Ingot', 'Tongs', 'Pliers', 'Anvil', 'Hammer', 'Forge', 'Bellows', 'Bucket', 'Steam', 'Smoke', 'Chimney', 'Flame', 'Fire', 'Magma', 'Coal', 'Crucible'],
      family: ['son', 'daughter', 'brother', 'sister', 'uncle', 'aunt', 'father', 'friend', 'family', 'employee'],
      rider: ['Shop', 'Blacksmith', 'Fabricator', 'Smith', 'Smithy', 'Farrier', 'Metalsmith', 'Swordsmith']
    },
    blacksmith: {
      profession: 'blacksmith',
      idle: ['talking with a customer', 'picking $associatedNPC.hisher nose', 'playing a card game by $associatedNPC.himherself', 'sharpening a knife', 'stocking the forge with fresh coals', 'lugging a piece of metal to be worked on', 'wiping the sweat from $associatedNPC.hisher brow', 'taking a drink of water', 'sweating profusely from exertion', 're-stocking the shop with new metalcrafts', 'hanging a new looking sword up on the wall', 'leaning back in a chair behind the counter playing with a hammer', 'unpacking a large crate that looks to be full of metal ingots of some sort', 'eyeing up the craftsmanship of a large axe', 'pouring molten metal into a cast in the far back', 'stoking the flames of the forge'],
      greeting: ['nods at you', 'welcomes you warmly', 'smiles and greets you', 'raises a hand with a wave', 'sizes you up, before $associatedNPC.heshe nods at you', 'checks you out for just a moment before smiling at you', 'grunts in your direction when you walk in', 'eyes you up and down slowly', 'stops what $associatedNPC.heshe is doing and looks your way']
    },
    owner: ['owner', 'caretaker', 'proud owner', 'proprietor', 'current owner', 'chief owner', 'master smith', 'resident smith'],
    weapons: ['dagger', 'long sword', 'short sword', 'morning star', 'mace', 'axe', 'greataxe', 'spear', 'falcheon', 'bastard sword', 'warhammer', 'iron crossbow', 'claymore', 'flail', 'broad sword', 'pike', 'scimitar', 'dart', 'rapier', 'trident', 'halberd', 'glaive', 'lance', 'war pick'],
    mundane: ['plows', 'rabbit traps', 'horseshoes', 'shovels', 'lamps', 'fire pokers', 'axes', 'hammers', 'pliers', 'steel couplings', 'trays', 'wheelbarrows', 'nails', 'pickaxes', 'hatchets', 'locks and keys', 'lockpicks']
  };

  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

  function getDefaultExportFromCjs (x) {
  	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
  }

  function createCommonjsModule(fn) {
    var module = { exports: {} };
  	return fn(module, module.exports), module.exports;
  }

  var rita = createCommonjsModule(function (module, exports) {
  !function(n,e){module.exports=e();}(commonjsGlobal,function(){return function(n){var e={};function a(h){if(e[h])return e[h].exports;var t=e[h]={i:h,l:!1,exports:{}};return n[h].call(t.exports,t,t.exports,a),t.l=!0,t.exports;}return a.m=n,a.c=e,a.d=function(n,e,h){a.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:h});},a.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0});},a.t=function(n,e){if(1&e&&(n=a(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var h=Object.create(null);if(a.r(h),Object.defineProperty(h,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var t in n)a.d(h,t,function(e){return n[e];}.bind(null,t));return h;},a.n=function(n){var e=n&&n.__esModule?function(){return n.default;}:function(){return n;};return a.d(e,"a",e),e;},a.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e);},a.p="",a(a.s=53);}([function(n,e,a){e.atn=a(35),e.codepointat=a(30),e.dfa=a(41),e.fromcodepoint=a(31),e.tree=a(43),e.error=a(44),e.Token=a(1).Token,e.CharStreams=a(46),e.CommonToken=a(1).CommonToken,e.InputStream=a(19),e.FileStream=a(47),e.CommonTokenStream=a(48),e.Lexer=a(14),e.Parser=a(50);var h=a(6);e.PredictionContextCache=h.PredictionContextCache,e.ParserRuleContext=a(29),e.Interval=a(3).Interval,e.IntervalSet=a(3).IntervalSet,e.Utils=a(2),e.LL1Analyzer=a(21).LL1Analyzer;},function(n,e){class a{constructor(){this.source=null,this.type=null,this.channel=null,this.start=null,this.stop=null,this.tokenIndex=null,this.line=null,this.column=null,this._text=null;}getTokenSource(){return this.source[0];}getInputStream(){return this.source[1];}get text(){return this._text;}set text(n){this._text=n;}}a.INVALID_TYPE=0,a.EPSILON=-2,a.MIN_USER_TOKEN_TYPE=1,a.EOF=-1,a.DEFAULT_CHANNEL=0,a.HIDDEN_CHANNEL=1;class h extends a{constructor(n,e,t,r,i){super(),this.source=void 0!==n?n:h.EMPTY_SOURCE,this.type=void 0!==e?e:null,this.channel=void 0!==t?t:a.DEFAULT_CHANNEL,this.start=void 0!==r?r:-1,this.stop=void 0!==i?i:-1,this.tokenIndex=-1,null!==this.source[0]?(this.line=n[0].line,this.column=n[0].column):this.column=-1;}clone(){const n=new h(this.source,this.type,this.channel,this.start,this.stop);return n.tokenIndex=this.tokenIndex,n.line=this.line,n.column=this.column,n.text=this.text,n;}toString(){let n=this.text;return n=null!==n?n.replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/\t/g,"\\t"):"<no text>","[@"+this.tokenIndex+","+this.start+":"+this.stop+"='"+n+"',<"+this.type+">"+(this.channel>0?",channel="+this.channel:"")+","+this.line+":"+this.column+"]";}get text(){if(null!==this._text)return this._text;const n=this.getInputStream();if(null===n)return null;const e=n.size;return this.start<e&&this.stop<e?n.getText(this.start,this.stop):"<EOF>";}set text(n){this._text=n;}}h.EMPTY_SOURCE=[null,null],n.exports={Token:a,CommonToken:h};},function(n,e){function a(n){return Array.isArray(n)?"["+n.join(", ")+"]":"null";}function h(n,e){return n?n.equals(e):n==e;}function t(n){return n?n.hashCode():-1;}String.prototype.seed=String.prototype.seed||Math.round(Math.random()*Math.pow(2,32)),String.prototype.hashCode=function(){const n=this.toString();let e,a;const h=3&n.length,t=n.length-h;let r=String.prototype.seed;const i=3432918353,s=461845907;let l=0;for(;l<t;)a=255&n.charCodeAt(l)|(255&n.charCodeAt(++l))<<8|(255&n.charCodeAt(++l))<<16|(255&n.charCodeAt(++l))<<24,++l,a=(65535&a)*i+(((a>>>16)*i&65535)<<16)&4294967295,a=a<<15|a>>>17,a=(65535&a)*s+(((a>>>16)*s&65535)<<16)&4294967295,r^=a,r=r<<13|r>>>19,e=5*(65535&r)+((5*(r>>>16)&65535)<<16)&4294967295,r=27492+(65535&e)+((58964+(e>>>16)&65535)<<16);switch(a=0,h){case 3:a^=(255&n.charCodeAt(l+2))<<16;case 2:a^=(255&n.charCodeAt(l+1))<<8;case 1:a^=255&n.charCodeAt(l),a=(65535&a)*i+(((a>>>16)*i&65535)<<16)&4294967295,a=a<<15|a>>>17,a=(65535&a)*s+(((a>>>16)*s&65535)<<16)&4294967295,r^=a;}return r^=n.length,r^=r>>>16,r=2246822507*(65535&r)+((2246822507*(r>>>16)&65535)<<16)&4294967295,r^=r>>>13,r=3266489909*(65535&r)+((3266489909*(r>>>16)&65535)<<16)&4294967295,r^=r>>>16,r>>>0;};class r{constructor(){this.data=[];}add(n){this.data[n]=!0;}or(n){const e=this;Object.keys(n.data).map(function(n){e.add(n);});}remove(n){delete this.data[n];}contains(n){return !0===this.data[n];}values(){return Object.keys(this.data);}minValue(){return Math.min.apply(null,this.values());}hashCode(){const n=new s();return n.update(this.values()),n.finish();}equals(n){return n instanceof r&&this.hashCode()===n.hashCode();}toString(){return "{"+this.values().join(", ")+"}";}get length(){return this.values().length;}}class i{constructor(n,e){this.data={},this.hashFunction=n||t,this.equalsFunction=e||h;}put(n,e){const a="hash_"+this.hashFunction(n);if(a in this.data){const h=this.data[a];for(let a=0;a<h.length;a++){const t=h[a];if(this.equalsFunction(n,t.key)){const n=t.value;return t.value=e,n;}}return h.push({key:n,value:e}),e;}return this.data[a]=[{key:n,value:e}],e;}containsKey(n){const e="hash_"+this.hashFunction(n);if(e in this.data){const a=this.data[e];for(let e=0;e<a.length;e++){const h=a[e];if(this.equalsFunction(n,h.key))return !0;}}return !1;}get(n){const e="hash_"+this.hashFunction(n);if(e in this.data){const a=this.data[e];for(let e=0;e<a.length;e++){const h=a[e];if(this.equalsFunction(n,h.key))return h.value;}}return null;}entries(){let n=[];for(const e in this.data)0===e.indexOf("hash_")&&(n=n.concat(this.data[e]));return n;}getKeys(){return this.entries().map(function(n){return n.key;});}getValues(){return this.entries().map(function(n){return n.value;});}toString(){return "["+this.entries().map(function(n){return "{"+n.key+":"+n.value+"}";}).join(", ")+"]";}get length(){let n=0;for(const e in this.data)0===e.indexOf("hash_")&&(n+=this.data[e].length);return n;}}class s{constructor(){this.count=0,this.hash=0;}update(){for(let n=0;n<arguments.length;n++){const e=arguments[n];if(null!=e)if(Array.isArray(e))this.update.apply(this,e);else {let n=0;switch(typeof e){case"undefined":case"function":continue;case"number":case"boolean":n=e;break;case"string":n=e.hashCode();break;default:e.updateHashCode?e.updateHashCode(this):console.log("No updateHashCode for "+e.toString());continue;}n*=3432918353,n=n<<15|n>>>17,n*=461845907,this.count=this.count+1;let a=this.hash^n;a=a<<13|a>>>19,a=5*a+3864292196,this.hash=a;}}}finish(){let n=this.hash^4*this.count;return n^=n>>>16,n*=2246822507,n^=n>>>13,n*=3266489909,n^=n>>>16,n;}}n.exports={Hash:s,Set:class{constructor(n,e){this.data={},this.hashFunction=n||t,this.equalsFunction=e||h;}add(n){const e="hash_"+this.hashFunction(n);if(e in this.data){const a=this.data[e];for(let e=0;e<a.length;e++)if(this.equalsFunction(n,a[e]))return a[e];return a.push(n),n;}return this.data[e]=[n],n;}contains(n){return null!=this.get(n);}get(n){const e="hash_"+this.hashFunction(n);if(e in this.data){const a=this.data[e];for(let e=0;e<a.length;e++)if(this.equalsFunction(n,a[e]))return a[e];}return null;}values(){let n=[];for(const e in this.data)0===e.indexOf("hash_")&&(n=n.concat(this.data[e]));return n;}toString(){return a(this.values());}get length(){let n=0;for(const e in this.data)0===e.indexOf("hash_")&&(n+=this.data[e].length);return n;}},Map:i,BitSet:r,AltDict:class{constructor(){this.data={};}get(n){return (n="k-"+n)in this.data?this.data[n]:null;}put(n,e){n="k-"+n,this.data[n]=e;}values(){const n=this.data;return Object.keys(this.data).map(function(e){return n[e];});}},DoubleDict:class{constructor(n){this.defaultMapCtor=n||i,this.cacheMap=new this.defaultMapCtor();}get(n,e){const a=this.cacheMap.get(n)||null;return null===a?null:a.get(e)||null;}set(n,e,a){let h=this.cacheMap.get(n)||null;null===h&&(h=new this.defaultMapCtor(),this.cacheMap.put(n,h)),h.put(e,a);}},hashStuff:function(){const n=new s();return n.update.apply(n,arguments),n.finish();},escapeWhitespace:function(n,e){return n=n.replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r"),e&&(n=n.replace(/ /g,"\xb7")),n;},arrayToString:a,titleCase:function(n){return n.replace(/\w\S*/g,function(n){return n.charAt(0).toUpperCase()+n.substr(1);});},equalArrays:function(n,e){if(!Array.isArray(n)||!Array.isArray(e))return !1;if(n===e)return !0;if(n.length!==e.length)return !1;for(let a=0;a<n.length;a++)if(!(n[a]===e[a]||n[a].equals&&n[a].equals(e[a])))return !1;return !0;}};},function(n,e,a){const{Token:h}=a(1);class t{constructor(n,e){this.start=n,this.stop=e;}contains(n){return n>=this.start&&n<this.stop;}toString(){return this.start===this.stop-1?this.start.toString():this.start.toString()+".."+(this.stop-1).toString();}get length(){return this.stop-this.start;}}class r{constructor(){this.intervals=null,this.readOnly=!1;}first(n){return null===this.intervals||0===this.intervals.length?h.INVALID_TYPE:this.intervals[0].start;}addOne(n){this.addInterval(new t(n,n+1));}addRange(n,e){this.addInterval(new t(n,e+1));}addInterval(n){if(null===this.intervals)this.intervals=[],this.intervals.push(n);else {for(let e=0;e<this.intervals.length;e++){const a=this.intervals[e];if(n.stop<a.start)return void this.intervals.splice(e,0,n);if(n.stop===a.start)return void(this.intervals[e].start=n.start);if(n.start<=a.stop)return this.intervals[e]=new t(Math.min(a.start,n.start),Math.max(a.stop,n.stop)),void this.reduce(e);}this.intervals.push(n);}}addSet(n){return null!==n.intervals&&n.intervals.forEach(n=>this.addInterval(n),this),this;}reduce(n){if(n<this.intervals.length-1){const e=this.intervals[n],a=this.intervals[n+1];e.stop>=a.stop?(this.intervals.splice(n+1,1),this.reduce(n)):e.stop>=a.start&&(this.intervals[n]=new t(e.start,a.stop),this.intervals.splice(n+1,1));}}complement(n,e){const a=new r();return a.addInterval(new t(n,e+1)),null!==this.intervals&&this.intervals.forEach(n=>a.removeRange(n)),a;}contains(n){if(null===this.intervals)return !1;for(let e=0;e<this.intervals.length;e++)if(this.intervals[e].contains(n))return !0;return !1;}removeRange(n){if(n.start===n.stop-1)this.removeOne(n.start);else if(null!==this.intervals){let e=0;for(let a=0;a<this.intervals.length;a++){const a=this.intervals[e];if(n.stop<=a.start)return;if(n.start>a.start&&n.stop<a.stop){this.intervals[e]=new t(a.start,n.start);const h=new t(n.stop,a.stop);return void this.intervals.splice(e,0,h);}n.start<=a.start&&n.stop>=a.stop?(this.intervals.splice(e,1),e-=1):n.start<a.stop?this.intervals[e]=new t(a.start,n.start):n.stop<a.stop&&(this.intervals[e]=new t(n.stop,a.stop)),e+=1;}}}removeOne(n){if(null!==this.intervals)for(let e=0;e<this.intervals.length;e++){const a=this.intervals[e];if(n<a.start)return;if(n===a.start&&n===a.stop-1)return void this.intervals.splice(e,1);if(n===a.start)return void(this.intervals[e]=new t(a.start+1,a.stop));if(n===a.stop-1)return void(this.intervals[e]=new t(a.start,a.stop-1));if(n<a.stop-1){const h=new t(a.start,n);return a.start=n+1,void this.intervals.splice(e,0,h);}}}toString(n,e,a){return n=n||null,e=e||null,a=a||!1,null===this.intervals?"{}":null!==n||null!==e?this.toTokenString(n,e):a?this.toCharString():this.toIndexString();}toCharString(){const n=[];for(let e=0;e<this.intervals.length;e++){const a=this.intervals[e];a.stop===a.start+1?a.start===h.EOF?n.push("<EOF>"):n.push("'"+String.fromCharCode(a.start)+"'"):n.push("'"+String.fromCharCode(a.start)+"'..'"+String.fromCharCode(a.stop-1)+"'");}return n.length>1?"{"+n.join(", ")+"}":n[0];}toIndexString(){const n=[];for(let e=0;e<this.intervals.length;e++){const a=this.intervals[e];a.stop===a.start+1?a.start===h.EOF?n.push("<EOF>"):n.push(a.start.toString()):n.push(a.start.toString()+".."+(a.stop-1).toString());}return n.length>1?"{"+n.join(", ")+"}":n[0];}toTokenString(n,e){const a=[];for(let h=0;h<this.intervals.length;h++){const t=this.intervals[h];for(let h=t.start;h<t.stop;h++)a.push(this.elementName(n,e,h));}return a.length>1?"{"+a.join(", ")+"}":a[0];}elementName(n,e,a){return a===h.EOF?"<EOF>":a===h.EPSILON?"<EPSILON>":n[a]||e[a];}get length(){return this.intervals.map(n=>n.length).reduce((n,e)=>n+e);}}n.exports={Interval:t,IntervalSet:r};},function(n,e,a){const{PredicateTransition:h}=a(11),{Interval:t}=a(3).Interval;class r extends Error{constructor(n){if(super(n.message),Error.captureStackTrace)Error.captureStackTrace(this,r);else new Error().stack;this.message=n.message,this.recognizer=n.recognizer,this.input=n.input,this.ctx=n.ctx,this.offendingToken=null,this.offendingState=-1,null!==this.recognizer&&(this.offendingState=this.recognizer.state);}getExpectedTokens(){return null!==this.recognizer?this.recognizer.atn.getExpectedTokens(this.offendingState,this.ctx):null;}toString(){return this.message;}}function i(n,e){return null!==e?e:"failed predicate: {"+n+"}?";}class s extends Error{constructor(){super(),Error.captureStackTrace(this,s);}}n.exports={RecognitionException:r,NoViableAltException:class extends r{constructor(n,e,a,h,t,r){r=r||n._ctx,h=h||n.getCurrentToken(),a=a||n.getCurrentToken(),e=e||n.getInputStream(),super({message:"",recognizer:n,input:e,ctx:r}),this.deadEndConfigs=t,this.startToken=a,this.offendingToken=h;}},LexerNoViableAltException:class extends r{constructor(n,e,a,h){super({message:"",recognizer:n,input:e,ctx:null}),this.startIndex=a,this.deadEndConfigs=h;}toString(){let n="";return this.startIndex>=0&&this.startIndex<this.input.size&&(n=this.input.getText(new t(this.startIndex,this.startIndex))),"LexerNoViableAltException"+n;}},InputMismatchException:class extends r{constructor(n){super({message:"",recognizer:n,input:n.getInputStream(),ctx:n._ctx}),this.offendingToken=n.getCurrentToken();}},FailedPredicateException:class extends r{constructor(n,e,a){super({message:i(e,a||null),recognizer:n,input:n.getInputStream(),ctx:n._ctx});const t=n._interp.atn.states[n.state].transitions[0];t instanceof h?(this.ruleIndex=t.ruleIndex,this.predicateIndex=t.predIndex):(this.ruleIndex=0,this.predicateIndex=0),this.predicate=e,this.offendingToken=n.getCurrentToken();}},ParseCancellationException:s};},function(n,e){class a{constructor(){this.atn=null,this.stateNumber=a.INVALID_STATE_NUMBER,this.stateType=null,this.ruleIndex=0,this.epsilonOnlyTransitions=!1,this.transitions=[],this.nextTokenWithinRule=null;}toString(){return this.stateNumber;}equals(n){return n instanceof a&&this.stateNumber===n.stateNumber;}isNonGreedyExitState(){return !1;}addTransition(n,e){void 0===e&&(e=-1),0===this.transitions.length?this.epsilonOnlyTransitions=n.isEpsilon:this.epsilonOnlyTransitions!==n.isEpsilon&&(this.epsilonOnlyTransitions=!1),-1===e?this.transitions.push(n):this.transitions.splice(e,1,n);}}a.INVALID_TYPE=0,a.BASIC=1,a.RULE_START=2,a.BLOCK_START=3,a.PLUS_BLOCK_START=4,a.STAR_BLOCK_START=5,a.TOKEN_START=6,a.RULE_STOP=7,a.BLOCK_END=8,a.STAR_LOOP_BACK=9,a.STAR_LOOP_ENTRY=10,a.PLUS_LOOP_BACK=11,a.LOOP_END=12,a.serializationNames=["INVALID","BASIC","RULE_START","BLOCK_START","PLUS_BLOCK_START","STAR_BLOCK_START","TOKEN_START","RULE_STOP","BLOCK_END","STAR_LOOP_BACK","STAR_LOOP_ENTRY","PLUS_LOOP_BACK","LOOP_END"],a.INVALID_STATE_NUMBER=-1;class h extends a{constructor(){return super(),this.decision=-1,this.nonGreedy=!1,this;}}class t extends h{constructor(){return super(),this.endState=null,this;}}n.exports={ATNState:a,BasicState:class extends a{constructor(){super(),this.stateType=a.BASIC;}},DecisionState:h,BlockStartState:t,BlockEndState:class extends a{constructor(){return super(),this.stateType=a.BLOCK_END,this.startState=null,this;}},LoopEndState:class extends a{constructor(){return super(),this.stateType=a.LOOP_END,this.loopBackState=null,this;}},RuleStartState:class extends a{constructor(){return super(),this.stateType=a.RULE_START,this.stopState=null,this.isPrecedenceRule=!1,this;}},RuleStopState:class extends a{constructor(){return super(),this.stateType=a.RULE_STOP,this;}},TokensStartState:class extends h{constructor(){return super(),this.stateType=a.TOKEN_START,this;}},PlusLoopbackState:class extends h{constructor(){return super(),this.stateType=a.PLUS_LOOP_BACK,this;}},StarLoopbackState:class extends a{constructor(){return super(),this.stateType=a.STAR_LOOP_BACK,this;}},StarLoopEntryState:class extends h{constructor(){return super(),this.stateType=a.STAR_LOOP_ENTRY,this.loopBackState=null,this.isPrecedenceDecision=null,this;}},PlusBlockStartState:class extends t{constructor(){return super(),this.stateType=a.PLUS_BLOCK_START,this.loopBackState=null,this;}},StarBlockStartState:class extends t{constructor(){return super(),this.stateType=a.STAR_BLOCK_START,this;}},BasicBlockStartState:class extends t{constructor(){return super(),this.stateType=a.BLOCK_START,this;}}};},function(n,e,a){const h=a(17),{Hash:t,Map:r,equalArrays:i}=a(2);class s{constructor(n){this.cachedHashCode=n;}isEmpty(){return this===s.EMPTY;}hasEmptyPath(){return this.getReturnState(this.length-1)===s.EMPTY_RETURN_STATE;}hashCode(){return this.cachedHashCode;}updateHashCode(n){n.update(this.cachedHashCode);}}s.EMPTY=null,s.EMPTY_RETURN_STATE=2147483647,s.globalNodeCount=1,s.id=s.globalNodeCount;class l extends s{constructor(n,e){let a=0;const h=new t();null!==n?h.update(n,e):h.update(1),a=h.finish(),super(a),this.parentCtx=n,this.returnState=e;}getParent(n){return this.parentCtx;}getReturnState(n){return this.returnState;}equals(n){return this===n||n instanceof l&&this.hashCode()===n.hashCode()&&this.returnState===n.returnState&&(null==this.parentCtx?null==n.parentCtx:this.parentCtx.equals(n.parentCtx));}toString(){const n=null===this.parentCtx?"":this.parentCtx.toString();return 0===n.length?this.returnState===s.EMPTY_RETURN_STATE?"$":""+this.returnState:this.returnState+" "+n;}get length(){return 1;}static create(n,e){return e===s.EMPTY_RETURN_STATE&&null===n?s.EMPTY:new l(n,e);}}class o extends l{constructor(){super(null,s.EMPTY_RETURN_STATE);}isEmpty(){return !0;}getParent(n){return null;}getReturnState(n){return this.returnState;}equals(n){return this===n;}toString(){return "$";}}s.EMPTY=new o();class b extends s{constructor(n,e){const a=new t();a.update(n,e);return super(a.finish()),this.parents=n,this.returnStates=e,this;}isEmpty(){return this.returnStates[0]===s.EMPTY_RETURN_STATE;}getParent(n){return this.parents[n];}getReturnState(n){return this.returnStates[n];}equals(n){return this===n||n instanceof b&&this.hashCode()===n.hashCode()&&i(this.returnStates,n.returnStates)&&i(this.parents,n.parents);}toString(){if(this.isEmpty())return "[]";{let n="[";for(let e=0;e<this.returnStates.length;e++)e>0&&(n+=", "),this.returnStates[e]!==s.EMPTY_RETURN_STATE?(n+=this.returnStates[e],null!==this.parents[e]?n=n+" "+this.parents[e]:n+="null"):n+="$";return n+"]";}}get length(){return this.returnStates.length;}}function d(n,e,a,h){if(n===e)return n;if(n instanceof l&&e instanceof l)return function(n,e,a,h){if(null!==h){let a=h.get(n,e);if(null!==a)return a;if(a=h.get(e,n),null!==a)return a;}const t=function(n,e,a){if(a){if(n===s.EMPTY)return s.EMPTY;if(e===s.EMPTY)return s.EMPTY;}else {if(n===s.EMPTY&&e===s.EMPTY)return s.EMPTY;if(n===s.EMPTY){const n=[e.returnState,s.EMPTY_RETURN_STATE],a=[e.parentCtx,null];return new b(a,n);}if(e===s.EMPTY){const e=[n.returnState,s.EMPTY_RETURN_STATE],a=[n.parentCtx,null];return new b(a,e);}}return null;}(n,e,a);if(null!==t)return null!==h&&h.set(n,e,t),t;if(n.returnState===e.returnState){const t=d(n.parentCtx,e.parentCtx,a,h);if(t===n.parentCtx)return n;if(t===e.parentCtx)return e;const r=l.create(t,n.returnState);return null!==h&&h.set(n,e,r),r;}{let a=null;if((n===e||null!==n.parentCtx&&n.parentCtx===e.parentCtx)&&(a=n.parentCtx),null!==a){const t=[n.returnState,e.returnState];n.returnState>e.returnState&&(t[0]=e.returnState,t[1]=n.returnState);const r=new b([a,a],t);return null!==h&&h.set(n,e,r),r;}const t=[n.returnState,e.returnState];let r=[n.parentCtx,e.parentCtx];n.returnState>e.returnState&&(t[0]=e.returnState,t[1]=n.returnState,r=[e.parentCtx,n.parentCtx]);const i=new b(r,t);return null!==h&&h.set(n,e,i),i;}}(n,e,a,h);if(a){if(n instanceof o)return n;if(e instanceof o)return e;}return n instanceof l&&(n=new b([n.getParent()],[n.returnState])),e instanceof l&&(e=new b([e.getParent()],[e.returnState])),function(n,e,a,h){if(null!==h){let a=h.get(n,e);if(null!==a)return a;if(a=h.get(e,n),null!==a)return a;}let t=0,i=0,o=0,y=[],u=[];for(;t<n.returnStates.length&&i<e.returnStates.length;){const r=n.parents[t],l=e.parents[i];if(n.returnStates[t]===e.returnStates[i]){const e=n.returnStates[t],b=e===s.EMPTY_RETURN_STATE&&null===r&&null===l,c=null!==r&&null!==l&&r===l;b||c?(u[o]=r,y[o]=e):(u[o]=d(r,l,a,h),y[o]=e),t+=1,i+=1;}else n.returnStates[t]<e.returnStates[i]?(u[o]=r,y[o]=n.returnStates[t],t+=1):(u[o]=l,y[o]=e.returnStates[i],i+=1);o+=1;}if(t<n.returnStates.length)for(let e=t;e<n.returnStates.length;e++)u[o]=n.parents[e],y[o]=n.returnStates[e],o+=1;else for(let n=i;n<e.returnStates.length;n++)u[o]=e.parents[n],y[o]=e.returnStates[n],o+=1;if(o<u.length){if(1===o){const a=l.create(u[0],y[0]);return null!==h&&h.set(n,e,a),a;}u=u.slice(0,o),y=y.slice(0,o);}const c=new b(u,y);if(c===n)return null!==h&&h.set(n,e,n),n;if(c===e)return null!==h&&h.set(n,e,e),e;((function(n){const e=new r();for(let a=0;a<n.length;a++){const h=n[a];e.containsKey(h)||e.put(h,h);}for(let a=0;a<n.length;a++)n[a]=e.get(n[a]);}))(u),null!==h&&h.set(n,e,c);return c;}(n,e,a,h);}n.exports={merge:d,PredictionContext:s,PredictionContextCache:class{constructor(){this.cache=new r();}add(n){if(n===s.EMPTY)return s.EMPTY;const e=this.cache.get(n)||null;return null!==e?e:(this.cache.put(n,n),n);}get(n){return this.cache.get(n)||null;}get length(){return this.cache.length;}},SingletonPredictionContext:l,predictionContextFromRuleContext:function n(e,a){if(null==a&&(a=h.EMPTY),null===a.parentCtx||a===h.EMPTY)return s.EMPTY;const t=n(e,a.parentCtx),r=e.states[a.invokingState].transitions[0];return l.create(t,r.followState.stateNumber);},getCachedPredictionContext:function n(e,a,h){if(e.isEmpty())return e;let t=h.get(e)||null;if(null!==t)return t;if(t=a.get(e),null!==t)return h.put(e,t),t;let r=!1,i=[];for(let t=0;t<i.length;t++){const s=n(e.getParent(t),a,h);if(r||s!==e.getParent(t)){if(!r){i=[];for(let n=0;n<e.length;n++)i[n]=e.getParent(n);r=!0;}i[t]=s;}}if(!r)return a.add(e),h.put(e,e),e;let o=null;return o=0===i.length?s.EMPTY:1===i.length?l.create(i[0],e.getReturnState(0)):new b(i,e.returnStates),a.add(o),h.put(o,o),h.put(e,o),o;}};},function(n,e,a){const h=a(21),{IntervalSet:t}=a(3),{Token:r}=a(1);class i{constructor(n,e){this.grammarType=n,this.maxTokenType=e,this.states=[],this.decisionToState=[],this.ruleToStartState=[],this.ruleToStopState=null,this.modeNameToStartState={},this.ruleToTokenType=null,this.lexerActions=null,this.modeToStartState=[];}nextTokensInContext(n,e){return new h(this).LOOK(n,null,e);}nextTokensNoContext(n){return null!==n.nextTokenWithinRule||(n.nextTokenWithinRule=this.nextTokensInContext(n,null),n.nextTokenWithinRule.readOnly=!0),n.nextTokenWithinRule;}nextTokens(n,e){return void 0===e?this.nextTokensNoContext(n):this.nextTokensInContext(n,e);}addState(n){null!==n&&(n.atn=this,n.stateNumber=this.states.length),this.states.push(n);}removeState(n){this.states[n.stateNumber]=null;}defineDecisionState(n){return this.decisionToState.push(n),n.decision=this.decisionToState.length-1,n.decision;}getDecisionState(n){return 0===this.decisionToState.length?null:this.decisionToState[n];}getExpectedTokens(n,e){if(n<0||n>=this.states.length)throw "Invalid state number.";const a=this.states[n];let h=this.nextTokens(a);if(!h.contains(r.EPSILON))return h;const i=new t();for(i.addSet(h),i.removeOne(r.EPSILON);null!==e&&e.invokingState>=0&&h.contains(r.EPSILON);){const n=this.states[e.invokingState].transitions[0];h=this.nextTokens(n.followState),i.addSet(h),i.removeOne(r.EPSILON),e=e.parentCtx;}return h.contains(r.EPSILON)&&i.addOne(r.EOF),i;}}i.INVALID_ALT_NUMBER=0,n.exports=i;},function(n,e,a){const{Token:h}=a(1),{Interval:t}=a(3),r=new t(-1,-2);class i extends class extends class{}{constructor(){super();}}{constructor(){super();}}class s extends i{constructor(){super();}}class l extends s{constructor(){super();}}class o extends s{constructor(n){super(),this.parentCtx=null,this.symbol=n;}getChild(n){return null;}getSymbol(){return this.symbol;}getParent(){return this.parentCtx;}getPayload(){return this.symbol;}getSourceInterval(){if(null===this.symbol)return r;const n=this.symbol.tokenIndex;return new t(n,n);}getChildCount(){return 0;}accept(n){return n.visitTerminal(this);}getText(){return this.symbol.text;}toString(){return this.symbol.type===h.EOF?"<EOF>":this.symbol.text;}}class b{walk(n,e){if(e instanceof l||void 0!==e.isErrorNode&&e.isErrorNode())n.visitErrorNode(e);else if(e instanceof s)n.visitTerminal(e);else {this.enterRule(n,e);for(let a=0;a<e.getChildCount();a++){const h=e.getChild(a);this.walk(n,h);}this.exitRule(n,e);}}enterRule(n,e){const a=e.getRuleContext();n.enterEveryRule(a),a.enterRule(n);}exitRule(n,e){const a=e.getRuleContext();a.exitRule(n),n.exitEveryRule(a);}}b.DEFAULT=new b(),n.exports={RuleNode:class extends i{constructor(){super();}getRuleContext(){throw new Error("missing interface implementation");}},ErrorNode:l,TerminalNode:s,ErrorNodeImpl:class extends o{constructor(n){super(n);}isErrorNode(){return !0;}accept(n){return n.visitErrorNode(this);}},TerminalNodeImpl:o,ParseTreeListener:class{visitTerminal(n){}visitErrorNode(n){}enterEveryRule(n){}exitEveryRule(n){}},ParseTreeVisitor:class{visit(n){return Array.isArray(n)?n.map(function(n){return n.accept(this);},this):n.accept(this);}visitChildren(n){return n.children?this.visit(n.children):null;}visitTerminal(n){}visitErrorNode(n){}},ParseTreeWalker:b,INVALID_INTERVAL:r};},function(n,e,a){const h=a(7),t=a(2),{SemanticContext:r}=a(10),{merge:i}=a(6);function s(n){return n.hashCodeForConfigSet();}function l(n,e){return n===e||null!==n&&null!==e&&n.equalsForConfigSet(e);}class o{constructor(n){this.configLookup=new t.Set(s,l),this.fullCtx=void 0===n||n,this.readOnly=!1,this.configs=[],this.uniqueAlt=0,this.conflictingAlts=null,this.hasSemanticContext=!1,this.dipsIntoOuterContext=!1,this.cachedHashCode=-1;}add(n,e){if(void 0===e&&(e=null),this.readOnly)throw "This set is readonly";n.semanticContext!==r.NONE&&(this.hasSemanticContext=!0),n.reachesIntoOuterContext>0&&(this.dipsIntoOuterContext=!0);const a=this.configLookup.add(n);if(a===n)return this.cachedHashCode=-1,this.configs.push(n),!0;const h=!this.fullCtx,t=i(a.context,n.context,h,e);return a.reachesIntoOuterContext=Math.max(a.reachesIntoOuterContext,n.reachesIntoOuterContext),n.precedenceFilterSuppressed&&(a.precedenceFilterSuppressed=!0),a.context=t,!0;}getStates(){const n=new t.Set();for(let e=0;e<this.configs.length;e++)n.add(this.configs[e].state);return n;}getPredicates(){const n=[];for(let e=0;e<this.configs.length;e++){const a=this.configs[e].semanticContext;a!==r.NONE&&n.push(a.semanticContext);}return n;}optimizeConfigs(n){if(this.readOnly)throw "This set is readonly";if(0!==this.configLookup.length)for(let e=0;e<this.configs.length;e++){const a=this.configs[e];a.context=n.getCachedContext(a.context);}}addAll(n){for(let e=0;e<n.length;e++)this.add(n[e]);return !1;}equals(n){return this===n||n instanceof o&&t.equalArrays(this.configs,n.configs)&&this.fullCtx===n.fullCtx&&this.uniqueAlt===n.uniqueAlt&&this.conflictingAlts===n.conflictingAlts&&this.hasSemanticContext===n.hasSemanticContext&&this.dipsIntoOuterContext===n.dipsIntoOuterContext;}hashCode(){const n=new t.Hash();return n.update(this.configs),n.finish();}updateHashCode(n){this.readOnly?(-1===this.cachedHashCode&&(this.cachedHashCode=this.hashCode()),n.update(this.cachedHashCode)):n.update(this.hashCode());}isEmpty(){return 0===this.configs.length;}contains(n){if(null===this.configLookup)throw "This method is not implemented for readonly sets.";return this.configLookup.contains(n);}containsFast(n){if(null===this.configLookup)throw "This method is not implemented for readonly sets.";return this.configLookup.containsFast(n);}clear(){if(this.readOnly)throw "This set is readonly";this.configs=[],this.cachedHashCode=-1,this.configLookup=new t.Set();}setReadonly(n){this.readOnly=n,n&&(this.configLookup=null);}toString(){return t.arrayToString(this.configs)+(this.hasSemanticContext?",hasSemanticContext="+this.hasSemanticContext:"")+(this.uniqueAlt!==h.INVALID_ALT_NUMBER?",uniqueAlt="+this.uniqueAlt:"")+(null!==this.conflictingAlts?",conflictingAlts="+this.conflictingAlts:"")+(this.dipsIntoOuterContext?",dipsIntoOuterContext":"");}get items(){return this.configs;}get length(){return this.configs.length;}}n.exports={ATNConfigSet:o,OrderedATNConfigSet:class extends o{constructor(){super(),this.configLookup=new t.Set();}}};},function(n,e,a){const{Set:h,Hash:t,equalArrays:r}=a(2);class i{hashCode(){const n=new t();return this.updateHashCode(n),n.finish();}evaluate(n,e){}evalPrecedence(n,e){return this;}static andContext(n,e){if(null===n||n===i.NONE)return e;if(null===e||e===i.NONE)return n;const a=new o(n,e);return 1===a.opnds.length?a.opnds[0]:a;}static orContext(n,e){if(null===n)return e;if(null===e)return n;if(n===i.NONE||e===i.NONE)return i.NONE;const a=new b(n,e);return 1===a.opnds.length?a.opnds[0]:a;}}class s extends i{constructor(n,e,a){super(),this.ruleIndex=void 0===n?-1:n,this.predIndex=void 0===e?-1:e,this.isCtxDependent=void 0!==a&&a;}evaluate(n,e){const a=this.isCtxDependent?e:null;return n.sempred(a,this.ruleIndex,this.predIndex);}updateHashCode(n){n.update(this.ruleIndex,this.predIndex,this.isCtxDependent);}equals(n){return this===n||n instanceof s&&this.ruleIndex===n.ruleIndex&&this.predIndex===n.predIndex&&this.isCtxDependent===n.isCtxDependent;}toString(){return "{"+this.ruleIndex+":"+this.predIndex+"}?";}}i.NONE=new s();class l extends i{constructor(n){super(),this.precedence=void 0===n?0:n;}evaluate(n,e){return n.precpred(e,this.precedence);}evalPrecedence(n,e){return n.precpred(e,this.precedence)?i.NONE:null;}compareTo(n){return this.precedence-n.precedence;}updateHashCode(n){n.update(this.precedence);}equals(n){return this===n||n instanceof l&&this.precedence===n.precedence;}toString(){return "{"+this.precedence+">=prec}?";}static filterPrecedencePredicates(n){const e=[];return n.values().map(function(n){n instanceof l&&e.push(n);}),e;}}class o extends i{constructor(n,e){super();const a=new h();n instanceof o?n.opnds.map(function(n){a.add(n);}):a.add(n),e instanceof o?e.opnds.map(function(n){a.add(n);}):a.add(e);const t=l.filterPrecedencePredicates(a);if(t.length>0){let n=null;t.map(function(e){(null===n||e.precedence<n.precedence)&&(n=e);}),a.add(n);}this.opnds=Array.from(a.values());}equals(n){return this===n||n instanceof o&&r(this.opnds,n.opnds);}updateHashCode(n){n.update(this.opnds,"AND");}evaluate(n,e){for(let a=0;a<this.opnds.length;a++)if(!this.opnds[a].evaluate(n,e))return !1;return !0;}evalPrecedence(n,e){let a=!1;const h=[];for(let t=0;t<this.opnds.length;t++){const r=this.opnds[t],s=r.evalPrecedence(n,e);if(a|=s!==r,null===s)return null;s!==i.NONE&&h.push(s);}if(!a)return this;if(0===h.length)return i.NONE;let t=null;return h.map(function(n){t=null===t?n:i.andContext(t,n);}),t;}toString(){const n=this.opnds.map(n=>n.toString());return (n.length>3?n.slice(3):n).join("&&");}}class b extends i{constructor(n,e){super();const a=new h();n instanceof b?n.opnds.map(function(n){a.add(n);}):a.add(n),e instanceof b?e.opnds.map(function(n){a.add(n);}):a.add(e);const t=l.filterPrecedencePredicates(a);if(t.length>0){const n=t.sort(function(n,e){return n.compareTo(e);}),e=n[n.length-1];a.add(e);}this.opnds=Array.from(a.values());}equals(n){return this===n||n instanceof b&&r(this.opnds,n.opnds);}updateHashCode(n){n.update(this.opnds,"OR");}evaluate(n,e){for(let a=0;a<this.opnds.length;a++)if(this.opnds[a].evaluate(n,e))return !0;return !1;}evalPrecedence(n,e){let a=!1;const h=[];for(let t=0;t<this.opnds.length;t++){const r=this.opnds[t],s=r.evalPrecedence(n,e);if(a|=s!==r,s===i.NONE)return i.NONE;null!==s&&h.push(s);}if(!a)return this;if(0===h.length)return null;return null;}toString(){const n=this.opnds.map(n=>n.toString());return (n.length>3?n.slice(3):n).join("||");}}n.exports={SemanticContext:i,PrecedencePredicate:l,Predicate:s};},function(n,e,a){const{Token:h}=a(1),{IntervalSet:t}=a(3),{Predicate:r,PrecedencePredicate:i}=a(10);class s{constructor(n){if(null==n)throw "target cannot be null.";this.target=n,this.isEpsilon=!1,this.label=null;}}s.EPSILON=1,s.RANGE=2,s.RULE=3,s.PREDICATE=4,s.ATOM=5,s.ACTION=6,s.SET=7,s.NOT_SET=8,s.WILDCARD=9,s.PRECEDENCE=10,s.serializationNames=["INVALID","EPSILON","RANGE","RULE","PREDICATE","ATOM","ACTION","SET","NOT_SET","WILDCARD","PRECEDENCE"],s.serializationTypes={EpsilonTransition:s.EPSILON,RangeTransition:s.RANGE,RuleTransition:s.RULE,PredicateTransition:s.PREDICATE,AtomTransition:s.ATOM,ActionTransition:s.ACTION,SetTransition:s.SET,NotSetTransition:s.NOT_SET,WildcardTransition:s.WILDCARD,PrecedencePredicateTransition:s.PRECEDENCE};class l extends s{constructor(n){super(n);}}class o extends s{constructor(n,e){super(n),this.serializationType=s.SET,null!=e?this.label=e:(this.label=new t(),this.label.addOne(h.INVALID_TYPE));}matches(n,e,a){return this.label.contains(n);}toString(){return this.label.toString();}}n.exports={Transition:s,AtomTransition:class extends s{constructor(n,e){super(n),this.label_=e,this.label=this.makeLabel(),this.serializationType=s.ATOM;}makeLabel(){const n=new t();return n.addOne(this.label_),n;}matches(n,e,a){return this.label_===n;}toString(){return this.label_;}},SetTransition:o,NotSetTransition:class extends o{constructor(n,e){super(n,e),this.serializationType=s.NOT_SET;}matches(n,e,a){return n>=e&&n<=a&&!super.matches(n,e,a);}toString(){return "~"+super.toString();}},RuleTransition:class extends s{constructor(n,e,a,h){super(n),this.ruleIndex=e,this.precedence=a,this.followState=h,this.serializationType=s.RULE,this.isEpsilon=!0;}matches(n,e,a){return !1;}},ActionTransition:class extends s{constructor(n,e,a,h){super(n),this.serializationType=s.ACTION,this.ruleIndex=e,this.actionIndex=void 0===a?-1:a,this.isCtxDependent=void 0!==h&&h,this.isEpsilon=!0;}matches(n,e,a){return !1;}toString(){return "action_"+this.ruleIndex+":"+this.actionIndex;}},EpsilonTransition:class extends s{constructor(n,e){super(n),this.serializationType=s.EPSILON,this.isEpsilon=!0,this.outermostPrecedenceReturn=e;}matches(n,e,a){return !1;}toString(){return "epsilon";}},RangeTransition:class extends s{constructor(n,e,a){super(n),this.serializationType=s.RANGE,this.start=e,this.stop=a,this.label=this.makeLabel();}makeLabel(){const n=new t();return n.addRange(this.start,this.stop),n;}matches(n,e,a){return n>=this.start&&n<=this.stop;}toString(){return "'"+String.fromCharCode(this.start)+"'..'"+String.fromCharCode(this.stop)+"'";}},WildcardTransition:class extends s{constructor(n){super(n),this.serializationType=s.WILDCARD;}matches(n,e,a){return n>=e&&n<=a;}toString(){return ".";}},PredicateTransition:class extends l{constructor(n,e,a,h){super(n),this.serializationType=s.PREDICATE,this.ruleIndex=e,this.predIndex=a,this.isCtxDependent=h,this.isEpsilon=!0;}matches(n,e,a){return !1;}getPredicate(){return new r(this.ruleIndex,this.predIndex,this.isCtxDependent);}toString(){return "pred_"+this.ruleIndex+":"+this.predIndex;}},PrecedencePredicateTransition:class extends l{constructor(n,e){super(n),this.serializationType=s.PRECEDENCE,this.precedence=e,this.isEpsilon=!0;}matches(n,e,a){return !1;}getPredicate(){return new i(this.precedence);}toString(){return this.precedence+" >= _p";}},AbstractPredicateTransition:l};},function(n,e,a){const{ATNConfigSet:h}=a(9),{Hash:t,Set:r}=a(2);class i{constructor(n,e){return null===n&&(n=-1),null===e&&(e=new h()),this.stateNumber=n,this.configs=e,this.edges=null,this.isAcceptState=!1,this.prediction=0,this.lexerActionExecutor=null,this.requiresFullContext=!1,this.predicates=null,this;}getAltSet(){const n=new r();if(null!==this.configs)for(let e=0;e<this.configs.length;e++){const a=this.configs[e];n.add(a.alt);}return 0===n.length?null:n;}equals(n){return this===n||n instanceof i&&this.configs.equals(n.configs);}toString(){let n=this.stateNumber+":"+this.configs;return this.isAcceptState&&(n+="=>",null!==this.predicates?n+=this.predicates:n+=this.prediction),n;}hashCode(){const n=new t();return n.update(this.configs),n.finish();}}n.exports={DFAState:i,PredPrediction:class{constructor(n,e){this.alt=e,this.pred=n;}toString(){return "("+this.pred+", "+this.alt+")";}}};},function(n,e,a){const{DecisionState:h}=a(5),{SemanticContext:t}=a(10),{Hash:r}=a(2);function i(n,e){if(null===n){const n={state:null,alt:null,context:null,semanticContext:null};return e&&(n.reachesIntoOuterContext=0),n;}{const a={};return a.state=n.state||null,a.alt=void 0===n.alt?null:n.alt,a.context=n.context||null,a.semanticContext=n.semanticContext||null,e&&(a.reachesIntoOuterContext=n.reachesIntoOuterContext||0,a.precedenceFilterSuppressed=n.precedenceFilterSuppressed||!1),a;}}class s{constructor(n,e){this.checkContext(n,e),n=i(n),e=i(e,!0),this.state=null!==n.state?n.state:e.state,this.alt=null!==n.alt?n.alt:e.alt,this.context=null!==n.context?n.context:e.context,this.semanticContext=null!==n.semanticContext?n.semanticContext:null!==e.semanticContext?e.semanticContext:t.NONE,this.reachesIntoOuterContext=e.reachesIntoOuterContext,this.precedenceFilterSuppressed=e.precedenceFilterSuppressed;}checkContext(n,e){null!==n.context&&void 0!==n.context||null!==e&&null!==e.context&&void 0!==e.context||(this.context=null);}hashCode(){const n=new r();return this.updateHashCode(n),n.finish();}updateHashCode(n){n.update(this.state.stateNumber,this.alt,this.context,this.semanticContext);}equals(n){return this===n||n instanceof s&&this.state.stateNumber===n.state.stateNumber&&this.alt===n.alt&&(null===this.context?null===n.context:this.context.equals(n.context))&&this.semanticContext.equals(n.semanticContext)&&this.precedenceFilterSuppressed===n.precedenceFilterSuppressed;}hashCodeForConfigSet(){const n=new r();return n.update(this.state.stateNumber,this.alt,this.semanticContext),n.finish();}equalsForConfigSet(n){return this===n||n instanceof s&&this.state.stateNumber===n.state.stateNumber&&this.alt===n.alt&&this.semanticContext.equals(n.semanticContext);}toString(){return "("+this.state+","+this.alt+(null!==this.context?",["+this.context.toString()+"]":"")+(this.semanticContext!==t.NONE?","+this.semanticContext.toString():"")+(this.reachesIntoOuterContext>0?",up="+this.reachesIntoOuterContext:"")+")";}}class l extends s{constructor(n,e){super(n,e);const a=n.lexerActionExecutor||null;return this.lexerActionExecutor=a||(null!==e?e.lexerActionExecutor:null),this.passedThroughNonGreedyDecision=null!==e&&this.checkNonGreedyDecision(e,this.state),this.hashCodeForConfigSet=l.prototype.hashCode,this.equalsForConfigSet=l.prototype.equals,this;}updateHashCode(n){n.update(this.state.stateNumber,this.alt,this.context,this.semanticContext,this.passedThroughNonGreedyDecision,this.lexerActionExecutor);}equals(n){return this===n||n instanceof l&&this.passedThroughNonGreedyDecision===n.passedThroughNonGreedyDecision&&(this.lexerActionExecutor?this.lexerActionExecutor.equals(n.lexerActionExecutor):!n.lexerActionExecutor)&&super.equals(n);}checkNonGreedyDecision(n,e){return n.passedThroughNonGreedyDecision||e instanceof h&&e.nonGreedy;}}n.exports.ATNConfig=s,n.exports.LexerATNConfig=l;},function(n,e,a){const{Token:h}=a(1),t=a(26),r=a(38),{RecognitionException:i}=a(4),{LexerNoViableAltException:s}=a(4);class l extends t{constructor(n){super(),this._input=n,this._factory=r.DEFAULT,this._tokenFactorySourcePair=[this,n],this._interp=null,this._token=null,this._tokenStartCharIndex=-1,this._tokenStartLine=-1,this._tokenStartColumn=-1,this._hitEOF=!1,this._channel=h.DEFAULT_CHANNEL,this._type=h.INVALID_TYPE,this._modeStack=[],this._mode=l.DEFAULT_MODE,this._text=null;}reset(){null!==this._input&&this._input.seek(0),this._token=null,this._type=h.INVALID_TYPE,this._channel=h.DEFAULT_CHANNEL,this._tokenStartCharIndex=-1,this._tokenStartColumn=-1,this._tokenStartLine=-1,this._text=null,this._hitEOF=!1,this._mode=l.DEFAULT_MODE,this._modeStack=[],this._interp.reset();}nextToken(){if(null===this._input)throw "nextToken requires a non-null input stream.";const n=this._input.mark();try{for(;;){if(this._hitEOF)return this.emitEOF(),this._token;this._token=null,this._channel=h.DEFAULT_CHANNEL,this._tokenStartCharIndex=this._input.index,this._tokenStartColumn=this._interp.column,this._tokenStartLine=this._interp.line,this._text=null;let n=!1;for(;;){this._type=h.INVALID_TYPE;let e=l.SKIP;try{e=this._interp.match(this._input,this._mode);}catch(n){if(!(n instanceof i))throw console.log(n.stack),n;this.notifyListeners(n),this.recover(n);}if(this._input.LA(1)===h.EOF&&(this._hitEOF=!0),this._type===h.INVALID_TYPE&&(this._type=e),this._type===l.SKIP){n=!0;break;}if(this._type!==l.MORE)break;}if(!n)return null===this._token&&this.emit(),this._token;}}finally{this._input.release(n);}}skip(){this._type=l.SKIP;}more(){this._type=l.MORE;}mode(n){this._mode=n;}pushMode(n){this._interp.debug&&console.log("pushMode "+n),this._modeStack.push(this._mode),this.mode(n);}popMode(){if(0===this._modeStack.length)throw "Empty Stack";return this._interp.debug&&console.log("popMode back to "+this._modeStack.slice(0,-1)),this.mode(this._modeStack.pop()),this._mode;}emitToken(n){this._token=n;}emit(){const n=this._factory.create(this._tokenFactorySourcePair,this._type,this._text,this._channel,this._tokenStartCharIndex,this.getCharIndex()-1,this._tokenStartLine,this._tokenStartColumn);return this.emitToken(n),n;}emitEOF(){const n=this.column,e=this.line,a=this._factory.create(this._tokenFactorySourcePair,h.EOF,null,h.DEFAULT_CHANNEL,this._input.index,this._input.index-1,e,n);return this.emitToken(a),a;}getCharIndex(){return this._input.index;}getAllTokens(){const n=[];let e=this.nextToken();for(;e.type!==h.EOF;)n.push(e),e=this.nextToken();return n;}notifyListeners(n){const e=this._tokenStartCharIndex,a=this._input.index,h=this._input.getText(e,a),t="token recognition error at: '"+this.getErrorDisplay(h)+"'";this.getErrorListenerDispatch().syntaxError(this,null,this._tokenStartLine,this._tokenStartColumn,t,n);}getErrorDisplay(n){const e=[];for(let a=0;a<n.length;a++)e.push(n[a]);return e.join("");}getErrorDisplayForChar(n){return n.charCodeAt(0)===h.EOF?"<EOF>":"\n"===n?"\\n":"\t"===n?"\\t":"\r"===n?"\\r":n;}getCharErrorDisplay(n){return "'"+this.getErrorDisplayForChar(n)+"'";}recover(n){this._input.LA(1)!==h.EOF&&(n instanceof s?this._interp.consume(this._input):this._input.consume());}get inputStream(){return this._input;}set inputStream(n){this._input=null,this._tokenFactorySourcePair=[this,this._input],this.reset(),this._input=n,this._tokenFactorySourcePair=[this,this._input];}get sourceName(){return this._input.sourceName;}get type(){return this.type;}set type(n){this._type=n;}get line(){return this._interp.line;}set line(n){this._interp.line=n;}get column(){return this._interp.column;}set column(n){this._interp.column=n;}get text(){return null!==this._text?this._text:this._interp.getText(this._input);}set text(n){this._text=n;}}l.DEFAULT_MODE=0,l.MORE=-2,l.SKIP=-3,l.DEFAULT_TOKEN_CHANNEL=h.DEFAULT_CHANNEL,l.HIDDEN=h.HIDDEN_CHANNEL,l.MIN_CHAR_VALUE=0,l.MAX_CHAR_VALUE=1114111,n.exports=l;},function(n,e){class a{syntaxError(n,e,a,h,t,r){}reportAmbiguity(n,e,a,h,t,r,i){}reportAttemptingFullContext(n,e,a,h,t,r){}reportContextSensitivity(n,e,a,h,t,r){}}class h extends a{constructor(){super();}syntaxError(n,e,a,h,t,r){console.error("line "+a+":"+h+" "+t);}}h.INSTANCE=new h();n.exports={ErrorListener:a,ConsoleErrorListener:h,ProxyErrorListener:class extends a{constructor(n){if(super(),null===n)throw "delegates";return this.delegates=n,this;}syntaxError(n,e,a,h,t,r){this.delegates.map(i=>i.syntaxError(n,e,a,h,t,r));}reportAmbiguity(n,e,a,h,t,r,i){this.delegates.map(s=>s.reportAmbiguity(n,e,a,h,t,r,i));}reportAttemptingFullContext(n,e,a,h,t,r){this.delegates.map(i=>i.reportAttemptingFullContext(n,e,a,h,t,r));}reportContextSensitivity(n,e,a,h,t,r){this.delegates.map(i=>i.reportContextSensitivity(n,e,a,h,t,r));}}};},function(n,e){class a{constructor(n,e,a){this.dfa=n,this.literalNames=e||[],this.symbolicNames=a||[];}toString(){if(null===this.dfa.s0)return null;let n="";const e=this.dfa.sortedStates();for(let a=0;a<e.length;a++){const h=e[a];if(null!==h.edges){const e=h.edges.length;for(let a=0;a<e;a++){const e=h.edges[a]||null;null!==e&&2147483647!==e.stateNumber&&(n=n.concat(this.getStateString(h)),n=n.concat("-"),n=n.concat(this.getEdgeLabel(a)),n=n.concat("->"),n=n.concat(this.getStateString(e)),n=n.concat("\n"));}}}return 0===n.length?null:n;}getEdgeLabel(n){return 0===n?"EOF":null!==this.literalNames||null!==this.symbolicNames?this.literalNames[n-1]||this.symbolicNames[n-1]:String.fromCharCode(n-1);}getStateString(n){const e=(n.isAcceptState?":":"")+"s"+n.stateNumber+(n.requiresFullContext?"^":"");return n.isAcceptState?null!==n.predicates?e+"=>"+n.predicates.toString():e+"=>"+n.prediction.toString():e;}}n.exports={DFASerializer:a,LexerDFASerializer:class extends a{constructor(n){super(n,null);}getEdgeLabel(n){return "'"+String.fromCharCode(n)+"'";}}};},function(n,e,a){const{RuleNode:h}=a(8),{INVALID_INTERVAL:t}=a(8),r=a(22);n.exports=class extends h{constructor(n,e){super(),this.parentCtx=n||null,this.invokingState=e||-1;}depth(){let n=0,e=this;for(;null!==e;)e=e.parentCtx,n+=1;return n;}isEmpty(){return -1===this.invokingState;}getSourceInterval(){return t;}getRuleContext(){return this;}getPayload(){return this;}getText(){return 0===this.getChildCount()?"":this.children.map(function(n){return n.getText();}).join("");}getAltNumber(){return 0;}setAltNumber(n){}getChild(n){return null;}getChildCount(){return 0;}accept(n){return n.visitChildren(this);}toStringTree(n,e){return r.toStringTree(this,n,e);}toString(n,e){n=n||null,e=e||null;let a=this,h="[";for(;null!==a&&a!==e;){if(null===n)a.isEmpty()||(h+=a.invokingState);else {const e=a.ruleIndex;h+=e>=0&&e<n.length?n[e]:""+e;}null===a.parentCtx||null===n&&a.parentCtx.isEmpty()||(h+=" "),a=a.parentCtx;}return h+="]",h;}};},function(n,e,a){const{Token:h}=a(1),{NoViableAltException:t,InputMismatchException:r,FailedPredicateException:i,ParseCancellationException:s}=a(4),{ATNState:l}=a(5),{Interval:o,IntervalSet:b}=a(3);class d extends class{reset(n){}recoverInline(n){}recover(n,e){}sync(n){}inErrorRecoveryMode(n){}reportError(n){}}{constructor(){super(),this.errorRecoveryMode=!1,this.lastErrorIndex=-1,this.lastErrorStates=null,this.nextTokensContext=null,this.nextTokenState=0;}reset(n){this.endErrorCondition(n);}beginErrorCondition(n){this.errorRecoveryMode=!0;}inErrorRecoveryMode(n){return this.errorRecoveryMode;}endErrorCondition(n){this.errorRecoveryMode=!1,this.lastErrorStates=null,this.lastErrorIndex=-1;}reportMatch(n){this.endErrorCondition(n);}reportError(n,e){this.inErrorRecoveryMode(n)||(this.beginErrorCondition(n),e instanceof t?this.reportNoViableAlternative(n,e):e instanceof r?this.reportInputMismatch(n,e):e instanceof i?this.reportFailedPredicate(n,e):(console.log("unknown recognition error type: "+e.constructor.name),console.log(e.stack),n.notifyErrorListeners(e.getOffendingToken(),e.getMessage(),e)));}recover(n,e){this.lastErrorIndex===n.getInputStream().index&&null!==this.lastErrorStates&&this.lastErrorStates.indexOf(n.state)>=0&&n.consume(),this.lastErrorIndex=n._input.index,null===this.lastErrorStates&&(this.lastErrorStates=[]),this.lastErrorStates.push(n.state);const a=this.getErrorRecoverySet(n);this.consumeUntil(n,a);}sync(n){if(this.inErrorRecoveryMode(n))return;const e=n._interp.atn.states[n.state],a=n.getTokenStream().LA(1),t=n.atn.nextTokens(e);if(t.contains(a))return this.nextTokensContext=null,void(this.nextTokenState=l.INVALID_STATE_NUMBER);if(t.contains(h.EPSILON))null===this.nextTokensContext&&(this.nextTokensContext=n._ctx,this.nextTokensState=n._stateNumber);else switch(e.stateType){case l.BLOCK_START:case l.STAR_BLOCK_START:case l.PLUS_BLOCK_START:case l.STAR_LOOP_ENTRY:if(null!==this.singleTokenDeletion(n))return;throw new r(n);case l.PLUS_LOOP_BACK:case l.STAR_LOOP_BACK:this.reportUnwantedToken(n);const e=new b();e.addSet(n.getExpectedTokens());const a=e.addSet(this.getErrorRecoverySet(n));this.consumeUntil(n,a);}}reportNoViableAlternative(n,e){const a=n.getTokenStream();let t;t=null!==a?e.startToken.type===h.EOF?"<EOF>":a.getText(new o(e.startToken.tokenIndex,e.offendingToken.tokenIndex)):"<unknown input>";const r="no viable alternative at input "+this.escapeWSAndQuote(t);n.notifyErrorListeners(r,e.offendingToken,e);}reportInputMismatch(n,e){const a="mismatched input "+this.getTokenErrorDisplay(e.offendingToken)+" expecting "+e.getExpectedTokens().toString(n.literalNames,n.symbolicNames);n.notifyErrorListeners(a,e.offendingToken,e);}reportFailedPredicate(n,e){const a="rule "+n.ruleNames[n._ctx.ruleIndex]+" "+e.message;n.notifyErrorListeners(a,e.offendingToken,e);}reportUnwantedToken(n){if(this.inErrorRecoveryMode(n))return;this.beginErrorCondition(n);const e=n.getCurrentToken(),a="extraneous input "+this.getTokenErrorDisplay(e)+" expecting "+this.getExpectedTokens(n).toString(n.literalNames,n.symbolicNames);n.notifyErrorListeners(a,e,null);}reportMissingToken(n){if(this.inErrorRecoveryMode(n))return;this.beginErrorCondition(n);const e=n.getCurrentToken(),a="missing "+this.getExpectedTokens(n).toString(n.literalNames,n.symbolicNames)+" at "+this.getTokenErrorDisplay(e);n.notifyErrorListeners(a,e,null);}recoverInline(n){const e=this.singleTokenDeletion(n);if(null!==e)return n.consume(),e;if(this.singleTokenInsertion(n))return this.getMissingSymbol(n);throw new r(n);}singleTokenInsertion(n){const e=n.getTokenStream().LA(1),a=n._interp.atn,h=a.states[n.state].transitions[0].target;return !!a.nextTokens(h,n._ctx).contains(e)&&(this.reportMissingToken(n),!0);}singleTokenDeletion(n){const e=n.getTokenStream().LA(2);if(this.getExpectedTokens(n).contains(e)){this.reportUnwantedToken(n),n.consume();const e=n.getCurrentToken();return this.reportMatch(n),e;}return null;}getMissingSymbol(n){const e=n.getCurrentToken(),a=this.getExpectedTokens(n).first();let t;t=a===h.EOF?"<missing EOF>":"<missing "+n.literalNames[a]+">";let r=e;const i=n.getTokenStream().LT(-1);return r.type===h.EOF&&null!==i&&(r=i),n.getTokenFactory().create(r.source,a,t,h.DEFAULT_CHANNEL,-1,-1,r.line,r.column);}getExpectedTokens(n){return n.getExpectedTokens();}getTokenErrorDisplay(n){if(null===n)return "<no token>";let e=n.text;return null===e&&(e=n.type===h.EOF?"<EOF>":"<"+n.type+">"),this.escapeWSAndQuote(e);}escapeWSAndQuote(n){return "'"+(n=(n=(n=n.replace(/\n/g,"\\n")).replace(/\r/g,"\\r")).replace(/\t/g,"\\t"))+"'";}getErrorRecoverySet(n){const e=n._interp.atn;let a=n._ctx;const t=new b();for(;null!==a&&a.invokingState>=0;){const n=e.states[a.invokingState].transitions[0],h=e.nextTokens(n.followState);t.addSet(h),a=a.parentCtx;}return t.removeOne(h.EPSILON),t;}consumeUntil(n,e){let a=n.getTokenStream().LA(1);for(;a!==h.EOF&&!e.contains(a);)n.consume(),a=n.getTokenStream().LA(1);}}n.exports={BailErrorStrategy:class extends d{constructor(){super();}recover(n,e){let a=n._ctx;for(;null!==a;)a.exception=e,a=a.parentCtx;throw new s(e);}recoverInline(n){this.recover(n,new r(n));}sync(n){}},DefaultErrorStrategy:d};},function(n,e,a){const{Token:h}=a(1);a(30),a(31);n.exports=class{constructor(n,e){if(this.name="<empty>",this.strdata=n,this.decodeToUnicodeCodePoints=e||!1,this._index=0,this.data=[],this.decodeToUnicodeCodePoints)for(let n=0;n<this.strdata.length;){const e=this.strdata.codePointAt(n);this.data.push(e),n+=e<=65535?1:2;}else for(let n=0;n<this.strdata.length;n++){const e=this.strdata.charCodeAt(n);this.data.push(e);}this._size=this.data.length;}reset(){this._index=0;}consume(){if(this._index>=this._size)throw "cannot consume EOF";this._index+=1;}LA(n){if(0===n)return 0;n<0&&(n+=1);const e=this._index+n-1;return e<0||e>=this._size?h.EOF:this.data[e];}LT(n){return this.LA(n);}mark(){return -1;}release(n){}seek(n){n<=this._index?this._index=n:this._index=Math.min(n,this._size);}getText(n,e){if(e>=this._size&&(e=this._size-1),n>=this._size)return "";if(this.decodeToUnicodeCodePoints){let a="";for(let h=n;h<=e;h++)a+=String.fromCodePoint(this.data[h]);return a;}return this.strdata.slice(n,e+1);}toString(){return this.strdata;}get index(){return this._index;}get size(){return this._size;}};},function(n,e,a){(function(n,h){var t;/*! https://mths.be/he v1.2.0 by @mathias | MIT license */!function(r){var s=(n&&n.exports,"object"==typeof h&&h);s.global!==s&&s.window;var l=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,o=/[\x01-\x7F]/g,b=/[\x01-\t\x0B\f\x0E-\x1F\x7F\x81\x8D\x8F\x90\x9D\xA0-\uFFFF]/g,d=/<\u20D2|=\u20E5|>\u20D2|\u205F\u200A|\u219D\u0338|\u2202\u0338|\u2220\u20D2|\u2229\uFE00|\u222A\uFE00|\u223C\u20D2|\u223D\u0331|\u223E\u0333|\u2242\u0338|\u224B\u0338|\u224D\u20D2|\u224E\u0338|\u224F\u0338|\u2250\u0338|\u2261\u20E5|\u2264\u20D2|\u2265\u20D2|\u2266\u0338|\u2267\u0338|\u2268\uFE00|\u2269\uFE00|\u226A\u0338|\u226A\u20D2|\u226B\u0338|\u226B\u20D2|\u227F\u0338|\u2282\u20D2|\u2283\u20D2|\u228A\uFE00|\u228B\uFE00|\u228F\u0338|\u2290\u0338|\u2293\uFE00|\u2294\uFE00|\u22B4\u20D2|\u22B5\u20D2|\u22D8\u0338|\u22D9\u0338|\u22DA\uFE00|\u22DB\uFE00|\u22F5\u0338|\u22F9\u0338|\u2933\u0338|\u29CF\u0338|\u29D0\u0338|\u2A6D\u0338|\u2A70\u0338|\u2A7D\u0338|\u2A7E\u0338|\u2AA1\u0338|\u2AA2\u0338|\u2AAC\uFE00|\u2AAD\uFE00|\u2AAF\u0338|\u2AB0\u0338|\u2AC5\u0338|\u2AC6\u0338|\u2ACB\uFE00|\u2ACC\uFE00|\u2AFD\u20E5|[\xA0-\u0113\u0116-\u0122\u0124-\u012B\u012E-\u014D\u0150-\u017E\u0192\u01B5\u01F5\u0237\u02C6\u02C7\u02D8-\u02DD\u0311\u0391-\u03A1\u03A3-\u03A9\u03B1-\u03C9\u03D1\u03D2\u03D5\u03D6\u03DC\u03DD\u03F0\u03F1\u03F5\u03F6\u0401-\u040C\u040E-\u044F\u0451-\u045C\u045E\u045F\u2002-\u2005\u2007-\u2010\u2013-\u2016\u2018-\u201A\u201C-\u201E\u2020-\u2022\u2025\u2026\u2030-\u2035\u2039\u203A\u203E\u2041\u2043\u2044\u204F\u2057\u205F-\u2063\u20AC\u20DB\u20DC\u2102\u2105\u210A-\u2113\u2115-\u211E\u2122\u2124\u2127-\u2129\u212C\u212D\u212F-\u2131\u2133-\u2138\u2145-\u2148\u2153-\u215E\u2190-\u219B\u219D-\u21A7\u21A9-\u21AE\u21B0-\u21B3\u21B5-\u21B7\u21BA-\u21DB\u21DD\u21E4\u21E5\u21F5\u21FD-\u2205\u2207-\u2209\u220B\u220C\u220F-\u2214\u2216-\u2218\u221A\u221D-\u2238\u223A-\u2257\u2259\u225A\u225C\u225F-\u2262\u2264-\u228B\u228D-\u229B\u229D-\u22A5\u22A7-\u22B0\u22B2-\u22BB\u22BD-\u22DB\u22DE-\u22E3\u22E6-\u22F7\u22F9-\u22FE\u2305\u2306\u2308-\u2310\u2312\u2313\u2315\u2316\u231C-\u231F\u2322\u2323\u232D\u232E\u2336\u233D\u233F\u237C\u23B0\u23B1\u23B4-\u23B6\u23DC-\u23DF\u23E2\u23E7\u2423\u24C8\u2500\u2502\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2550-\u256C\u2580\u2584\u2588\u2591-\u2593\u25A1\u25AA\u25AB\u25AD\u25AE\u25B1\u25B3-\u25B5\u25B8\u25B9\u25BD-\u25BF\u25C2\u25C3\u25CA\u25CB\u25EC\u25EF\u25F8-\u25FC\u2605\u2606\u260E\u2640\u2642\u2660\u2663\u2665\u2666\u266A\u266D-\u266F\u2713\u2717\u2720\u2736\u2758\u2772\u2773\u27C8\u27C9\u27E6-\u27ED\u27F5-\u27FA\u27FC\u27FF\u2902-\u2905\u290C-\u2913\u2916\u2919-\u2920\u2923-\u292A\u2933\u2935-\u2939\u293C\u293D\u2945\u2948-\u294B\u294E-\u2976\u2978\u2979\u297B-\u297F\u2985\u2986\u298B-\u2996\u299A\u299C\u299D\u29A4-\u29B7\u29B9\u29BB\u29BC\u29BE-\u29C5\u29C9\u29CD-\u29D0\u29DC-\u29DE\u29E3-\u29E5\u29EB\u29F4\u29F6\u2A00-\u2A02\u2A04\u2A06\u2A0C\u2A0D\u2A10-\u2A17\u2A22-\u2A27\u2A29\u2A2A\u2A2D-\u2A31\u2A33-\u2A3C\u2A3F\u2A40\u2A42-\u2A4D\u2A50\u2A53-\u2A58\u2A5A-\u2A5D\u2A5F\u2A66\u2A6A\u2A6D-\u2A75\u2A77-\u2A9A\u2A9D-\u2AA2\u2AA4-\u2AB0\u2AB3-\u2AC8\u2ACB\u2ACC\u2ACF-\u2ADB\u2AE4\u2AE6-\u2AE9\u2AEB-\u2AF3\u2AFD\uFB00-\uFB04]|\uD835[\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDCCF\uDD04\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDD6B]/g,y={"\xad":"shy","\u200c":"zwnj","\u200d":"zwj","\u200e":"lrm","\u2063":"ic","\u2062":"it","\u2061":"af","\u200f":"rlm","\u200b":"ZeroWidthSpace","\u2060":"NoBreak","\u0311":"DownBreve","\u20db":"tdot","\u20dc":"DotDot","\t":"Tab","\n":"NewLine","\u2008":"puncsp","\u205f":"MediumSpace","\u2009":"thinsp","\u200a":"hairsp","\u2004":"emsp13","\u2002":"ensp","\u2005":"emsp14","\u2003":"emsp","\u2007":"numsp","\xa0":"nbsp","\u205f\u200a":"ThickSpace","\u203e":"oline",_:"lowbar","\u2010":"dash","\u2013":"ndash","\u2014":"mdash","\u2015":"horbar",",":"comma",";":"semi","\u204f":"bsemi",":":"colon","\u2a74":"Colone","!":"excl","\xa1":"iexcl","?":"quest","\xbf":"iquest",".":"period","\u2025":"nldr","\u2026":"mldr","\xb7":"middot","'":"apos","\u2018":"lsquo","\u2019":"rsquo","\u201a":"sbquo","\u2039":"lsaquo","\u203a":"rsaquo",'"':"quot","\u201c":"ldquo","\u201d":"rdquo","\u201e":"bdquo","\xab":"laquo","\xbb":"raquo","(":"lpar",")":"rpar","[":"lsqb","]":"rsqb","{":"lcub","}":"rcub","\u2308":"lceil","\u2309":"rceil","\u230a":"lfloor","\u230b":"rfloor","\u2985":"lopar","\u2986":"ropar","\u298b":"lbrke","\u298c":"rbrke","\u298d":"lbrkslu","\u298e":"rbrksld","\u298f":"lbrksld","\u2990":"rbrkslu","\u2991":"langd","\u2992":"rangd","\u2993":"lparlt","\u2994":"rpargt","\u2995":"gtlPar","\u2996":"ltrPar","\u27e6":"lobrk","\u27e7":"robrk","\u27e8":"lang","\u27e9":"rang","\u27ea":"Lang","\u27eb":"Rang","\u27ec":"loang","\u27ed":"roang","\u2772":"lbbrk","\u2773":"rbbrk","\u2016":"Vert","\xa7":"sect","\xb6":"para","@":"commat","*":"ast","/":"sol",undefined:null,"&":"amp","#":"num","%":"percnt","\u2030":"permil","\u2031":"pertenk","\u2020":"dagger","\u2021":"Dagger","\u2022":"bull","\u2043":"hybull","\u2032":"prime","\u2033":"Prime","\u2034":"tprime","\u2057":"qprime","\u2035":"bprime","\u2041":"caret","`":"grave","\xb4":"acute","\u02dc":"tilde","^":"Hat","\xaf":"macr","\u02d8":"breve","\u02d9":"dot","\xa8":"die","\u02da":"ring","\u02dd":"dblac","\xb8":"cedil","\u02db":"ogon","\u02c6":"circ","\u02c7":"caron","\xb0":"deg","\xa9":"copy","\xae":"reg","\u2117":"copysr","\u2118":"wp","\u211e":"rx","\u2127":"mho","\u2129":"iiota","\u2190":"larr","\u219a":"nlarr","\u2192":"rarr","\u219b":"nrarr","\u2191":"uarr","\u2193":"darr","\u2194":"harr","\u21ae":"nharr","\u2195":"varr","\u2196":"nwarr","\u2197":"nearr","\u2198":"searr","\u2199":"swarr","\u219d":"rarrw","\u219d\u0338":"nrarrw","\u219e":"Larr","\u219f":"Uarr","\u21a0":"Rarr","\u21a1":"Darr","\u21a2":"larrtl","\u21a3":"rarrtl","\u21a4":"mapstoleft","\u21a5":"mapstoup","\u21a6":"map","\u21a7":"mapstodown","\u21a9":"larrhk","\u21aa":"rarrhk","\u21ab":"larrlp","\u21ac":"rarrlp","\u21ad":"harrw","\u21b0":"lsh","\u21b1":"rsh","\u21b2":"ldsh","\u21b3":"rdsh","\u21b5":"crarr","\u21b6":"cularr","\u21b7":"curarr","\u21ba":"olarr","\u21bb":"orarr","\u21bc":"lharu","\u21bd":"lhard","\u21be":"uharr","\u21bf":"uharl","\u21c0":"rharu","\u21c1":"rhard","\u21c2":"dharr","\u21c3":"dharl","\u21c4":"rlarr","\u21c5":"udarr","\u21c6":"lrarr","\u21c7":"llarr","\u21c8":"uuarr","\u21c9":"rrarr","\u21ca":"ddarr","\u21cb":"lrhar","\u21cc":"rlhar","\u21d0":"lArr","\u21cd":"nlArr","\u21d1":"uArr","\u21d2":"rArr","\u21cf":"nrArr","\u21d3":"dArr","\u21d4":"iff","\u21ce":"nhArr","\u21d5":"vArr","\u21d6":"nwArr","\u21d7":"neArr","\u21d8":"seArr","\u21d9":"swArr","\u21da":"lAarr","\u21db":"rAarr","\u21dd":"zigrarr","\u21e4":"larrb","\u21e5":"rarrb","\u21f5":"duarr","\u21fd":"loarr","\u21fe":"roarr","\u21ff":"hoarr","\u2200":"forall","\u2201":"comp","\u2202":"part","\u2202\u0338":"npart","\u2203":"exist","\u2204":"nexist","\u2205":"empty","\u2207":"Del","\u2208":"in","\u2209":"notin","\u220b":"ni","\u220c":"notni","\u03f6":"bepsi","\u220f":"prod","\u2210":"coprod","\u2211":"sum","+":"plus","\xb1":"pm","\xf7":"div","\xd7":"times","<":"lt","\u226e":"nlt","<\u20d2":"nvlt","=":"equals","\u2260":"ne","=\u20e5":"bne","\u2a75":"Equal",">":"gt","\u226f":"ngt",">\u20d2":"nvgt","\xac":"not","|":"vert","\xa6":"brvbar","\u2212":"minus","\u2213":"mp","\u2214":"plusdo","\u2044":"frasl","\u2216":"setmn","\u2217":"lowast","\u2218":"compfn","\u221a":"Sqrt","\u221d":"prop","\u221e":"infin","\u221f":"angrt","\u2220":"ang","\u2220\u20d2":"nang","\u2221":"angmsd","\u2222":"angsph","\u2223":"mid","\u2224":"nmid","\u2225":"par","\u2226":"npar","\u2227":"and","\u2228":"or","\u2229":"cap","\u2229\ufe00":"caps","\u222a":"cup","\u222a\ufe00":"cups","\u222b":"int","\u222c":"Int","\u222d":"tint","\u2a0c":"qint","\u222e":"oint","\u222f":"Conint","\u2230":"Cconint","\u2231":"cwint","\u2232":"cwconint","\u2233":"awconint","\u2234":"there4","\u2235":"becaus","\u2236":"ratio","\u2237":"Colon","\u2238":"minusd","\u223a":"mDDot","\u223b":"homtht","\u223c":"sim","\u2241":"nsim","\u223c\u20d2":"nvsim","\u223d":"bsim","\u223d\u0331":"race","\u223e":"ac","\u223e\u0333":"acE","\u223f":"acd","\u2240":"wr","\u2242":"esim","\u2242\u0338":"nesim","\u2243":"sime","\u2244":"nsime","\u2245":"cong","\u2247":"ncong","\u2246":"simne","\u2248":"ap","\u2249":"nap","\u224a":"ape","\u224b":"apid","\u224b\u0338":"napid","\u224c":"bcong","\u224d":"CupCap","\u226d":"NotCupCap","\u224d\u20d2":"nvap","\u224e":"bump","\u224e\u0338":"nbump","\u224f":"bumpe","\u224f\u0338":"nbumpe","\u2250":"doteq","\u2250\u0338":"nedot","\u2251":"eDot","\u2252":"efDot","\u2253":"erDot","\u2254":"colone","\u2255":"ecolon","\u2256":"ecir","\u2257":"cire","\u2259":"wedgeq","\u225a":"veeeq","\u225c":"trie","\u225f":"equest","\u2261":"equiv","\u2262":"nequiv","\u2261\u20e5":"bnequiv","\u2264":"le","\u2270":"nle","\u2264\u20d2":"nvle","\u2265":"ge","\u2271":"nge","\u2265\u20d2":"nvge","\u2266":"lE","\u2266\u0338":"nlE","\u2267":"gE","\u2267\u0338":"ngE","\u2268\ufe00":"lvnE","\u2268":"lnE","\u2269":"gnE","\u2269\ufe00":"gvnE","\u226a":"ll","\u226a\u0338":"nLtv","\u226a\u20d2":"nLt","\u226b":"gg","\u226b\u0338":"nGtv","\u226b\u20d2":"nGt","\u226c":"twixt","\u2272":"lsim","\u2274":"nlsim","\u2273":"gsim","\u2275":"ngsim","\u2276":"lg","\u2278":"ntlg","\u2277":"gl","\u2279":"ntgl","\u227a":"pr","\u2280":"npr","\u227b":"sc","\u2281":"nsc","\u227c":"prcue","\u22e0":"nprcue","\u227d":"sccue","\u22e1":"nsccue","\u227e":"prsim","\u227f":"scsim","\u227f\u0338":"NotSucceedsTilde","\u2282":"sub","\u2284":"nsub","\u2282\u20d2":"vnsub","\u2283":"sup","\u2285":"nsup","\u2283\u20d2":"vnsup","\u2286":"sube","\u2288":"nsube","\u2287":"supe","\u2289":"nsupe","\u228a\ufe00":"vsubne","\u228a":"subne","\u228b\ufe00":"vsupne","\u228b":"supne","\u228d":"cupdot","\u228e":"uplus","\u228f":"sqsub","\u228f\u0338":"NotSquareSubset","\u2290":"sqsup","\u2290\u0338":"NotSquareSuperset","\u2291":"sqsube","\u22e2":"nsqsube","\u2292":"sqsupe","\u22e3":"nsqsupe","\u2293":"sqcap","\u2293\ufe00":"sqcaps","\u2294":"sqcup","\u2294\ufe00":"sqcups","\u2295":"oplus","\u2296":"ominus","\u2297":"otimes","\u2298":"osol","\u2299":"odot","\u229a":"ocir","\u229b":"oast","\u229d":"odash","\u229e":"plusb","\u229f":"minusb","\u22a0":"timesb","\u22a1":"sdotb","\u22a2":"vdash","\u22ac":"nvdash","\u22a3":"dashv","\u22a4":"top","\u22a5":"bot","\u22a7":"models","\u22a8":"vDash","\u22ad":"nvDash","\u22a9":"Vdash","\u22ae":"nVdash","\u22aa":"Vvdash","\u22ab":"VDash","\u22af":"nVDash","\u22b0":"prurel","\u22b2":"vltri","\u22ea":"nltri","\u22b3":"vrtri","\u22eb":"nrtri","\u22b4":"ltrie","\u22ec":"nltrie","\u22b4\u20d2":"nvltrie","\u22b5":"rtrie","\u22ed":"nrtrie","\u22b5\u20d2":"nvrtrie","\u22b6":"origof","\u22b7":"imof","\u22b8":"mumap","\u22b9":"hercon","\u22ba":"intcal","\u22bb":"veebar","\u22bd":"barvee","\u22be":"angrtvb","\u22bf":"lrtri","\u22c0":"Wedge","\u22c1":"Vee","\u22c2":"xcap","\u22c3":"xcup","\u22c4":"diam","\u22c5":"sdot","\u22c6":"Star","\u22c7":"divonx","\u22c8":"bowtie","\u22c9":"ltimes","\u22ca":"rtimes","\u22cb":"lthree","\u22cc":"rthree","\u22cd":"bsime","\u22ce":"cuvee","\u22cf":"cuwed","\u22d0":"Sub","\u22d1":"Sup","\u22d2":"Cap","\u22d3":"Cup","\u22d4":"fork","\u22d5":"epar","\u22d6":"ltdot","\u22d7":"gtdot","\u22d8":"Ll","\u22d8\u0338":"nLl","\u22d9":"Gg","\u22d9\u0338":"nGg","\u22da\ufe00":"lesg","\u22da":"leg","\u22db":"gel","\u22db\ufe00":"gesl","\u22de":"cuepr","\u22df":"cuesc","\u22e6":"lnsim","\u22e7":"gnsim","\u22e8":"prnsim","\u22e9":"scnsim","\u22ee":"vellip","\u22ef":"ctdot","\u22f0":"utdot","\u22f1":"dtdot","\u22f2":"disin","\u22f3":"isinsv","\u22f4":"isins","\u22f5":"isindot","\u22f5\u0338":"notindot","\u22f6":"notinvc","\u22f7":"notinvb","\u22f9":"isinE","\u22f9\u0338":"notinE","\u22fa":"nisd","\u22fb":"xnis","\u22fc":"nis","\u22fd":"notnivc","\u22fe":"notnivb","\u2305":"barwed","\u2306":"Barwed","\u230c":"drcrop","\u230d":"dlcrop","\u230e":"urcrop","\u230f":"ulcrop","\u2310":"bnot","\u2312":"profline","\u2313":"profsurf","\u2315":"telrec","\u2316":"target","\u231c":"ulcorn","\u231d":"urcorn","\u231e":"dlcorn","\u231f":"drcorn","\u2322":"frown","\u2323":"smile","\u232d":"cylcty","\u232e":"profalar","\u2336":"topbot","\u233d":"ovbar","\u233f":"solbar","\u237c":"angzarr","\u23b0":"lmoust","\u23b1":"rmoust","\u23b4":"tbrk","\u23b5":"bbrk","\u23b6":"bbrktbrk","\u23dc":"OverParenthesis","\u23dd":"UnderParenthesis","\u23de":"OverBrace","\u23df":"UnderBrace","\u23e2":"trpezium","\u23e7":"elinters","\u2423":"blank","\u2500":"boxh","\u2502":"boxv","\u250c":"boxdr","\u2510":"boxdl","\u2514":"boxur","\u2518":"boxul","\u251c":"boxvr","\u2524":"boxvl","\u252c":"boxhd","\u2534":"boxhu","\u253c":"boxvh","\u2550":"boxH","\u2551":"boxV","\u2552":"boxdR","\u2553":"boxDr","\u2554":"boxDR","\u2555":"boxdL","\u2556":"boxDl","\u2557":"boxDL","\u2558":"boxuR","\u2559":"boxUr","\u255a":"boxUR","\u255b":"boxuL","\u255c":"boxUl","\u255d":"boxUL","\u255e":"boxvR","\u255f":"boxVr","\u2560":"boxVR","\u2561":"boxvL","\u2562":"boxVl","\u2563":"boxVL","\u2564":"boxHd","\u2565":"boxhD","\u2566":"boxHD","\u2567":"boxHu","\u2568":"boxhU","\u2569":"boxHU","\u256a":"boxvH","\u256b":"boxVh","\u256c":"boxVH","\u2580":"uhblk","\u2584":"lhblk","\u2588":"block","\u2591":"blk14","\u2592":"blk12","\u2593":"blk34","\u25a1":"squ","\u25aa":"squf","\u25ab":"EmptyVerySmallSquare","\u25ad":"rect","\u25ae":"marker","\u25b1":"fltns","\u25b3":"xutri","\u25b4":"utrif","\u25b5":"utri","\u25b8":"rtrif","\u25b9":"rtri","\u25bd":"xdtri","\u25be":"dtrif","\u25bf":"dtri","\u25c2":"ltrif","\u25c3":"ltri","\u25ca":"loz","\u25cb":"cir","\u25ec":"tridot","\u25ef":"xcirc","\u25f8":"ultri","\u25f9":"urtri","\u25fa":"lltri","\u25fb":"EmptySmallSquare","\u25fc":"FilledSmallSquare","\u2605":"starf","\u2606":"star","\u260e":"phone","\u2640":"female","\u2642":"male","\u2660":"spades","\u2663":"clubs","\u2665":"hearts","\u2666":"diams","\u266a":"sung","\u2713":"check","\u2717":"cross","\u2720":"malt","\u2736":"sext","\u2758":"VerticalSeparator","\u27c8":"bsolhsub","\u27c9":"suphsol","\u27f5":"xlarr","\u27f6":"xrarr","\u27f7":"xharr","\u27f8":"xlArr","\u27f9":"xrArr","\u27fa":"xhArr","\u27fc":"xmap","\u27ff":"dzigrarr","\u2902":"nvlArr","\u2903":"nvrArr","\u2904":"nvHarr","\u2905":"Map","\u290c":"lbarr","\u290d":"rbarr","\u290e":"lBarr","\u290f":"rBarr","\u2910":"RBarr","\u2911":"DDotrahd","\u2912":"UpArrowBar","\u2913":"DownArrowBar","\u2916":"Rarrtl","\u2919":"latail","\u291a":"ratail","\u291b":"lAtail","\u291c":"rAtail","\u291d":"larrfs","\u291e":"rarrfs","\u291f":"larrbfs","\u2920":"rarrbfs","\u2923":"nwarhk","\u2924":"nearhk","\u2925":"searhk","\u2926":"swarhk","\u2927":"nwnear","\u2928":"toea","\u2929":"tosa","\u292a":"swnwar","\u2933":"rarrc","\u2933\u0338":"nrarrc","\u2935":"cudarrr","\u2936":"ldca","\u2937":"rdca","\u2938":"cudarrl","\u2939":"larrpl","\u293c":"curarrm","\u293d":"cularrp","\u2945":"rarrpl","\u2948":"harrcir","\u2949":"Uarrocir","\u294a":"lurdshar","\u294b":"ldrushar","\u294e":"LeftRightVector","\u294f":"RightUpDownVector","\u2950":"DownLeftRightVector","\u2951":"LeftUpDownVector","\u2952":"LeftVectorBar","\u2953":"RightVectorBar","\u2954":"RightUpVectorBar","\u2955":"RightDownVectorBar","\u2956":"DownLeftVectorBar","\u2957":"DownRightVectorBar","\u2958":"LeftUpVectorBar","\u2959":"LeftDownVectorBar","\u295a":"LeftTeeVector","\u295b":"RightTeeVector","\u295c":"RightUpTeeVector","\u295d":"RightDownTeeVector","\u295e":"DownLeftTeeVector","\u295f":"DownRightTeeVector","\u2960":"LeftUpTeeVector","\u2961":"LeftDownTeeVector","\u2962":"lHar","\u2963":"uHar","\u2964":"rHar","\u2965":"dHar","\u2966":"luruhar","\u2967":"ldrdhar","\u2968":"ruluhar","\u2969":"rdldhar","\u296a":"lharul","\u296b":"llhard","\u296c":"rharul","\u296d":"lrhard","\u296e":"udhar","\u296f":"duhar","\u2970":"RoundImplies","\u2971":"erarr","\u2972":"simrarr","\u2973":"larrsim","\u2974":"rarrsim","\u2975":"rarrap","\u2976":"ltlarr","\u2978":"gtrarr","\u2979":"subrarr","\u297b":"suplarr","\u297c":"lfisht","\u297d":"rfisht","\u297e":"ufisht","\u297f":"dfisht","\u299a":"vzigzag","\u299c":"vangrt","\u299d":"angrtvbd","\u29a4":"ange","\u29a5":"range","\u29a6":"dwangle","\u29a7":"uwangle","\u29a8":"angmsdaa","\u29a9":"angmsdab","\u29aa":"angmsdac","\u29ab":"angmsdad","\u29ac":"angmsdae","\u29ad":"angmsdaf","\u29ae":"angmsdag","\u29af":"angmsdah","\u29b0":"bemptyv","\u29b1":"demptyv","\u29b2":"cemptyv","\u29b3":"raemptyv","\u29b4":"laemptyv","\u29b5":"ohbar","\u29b6":"omid","\u29b7":"opar","\u29b9":"operp","\u29bb":"olcross","\u29bc":"odsold","\u29be":"olcir","\u29bf":"ofcir","\u29c0":"olt","\u29c1":"ogt","\u29c2":"cirscir","\u29c3":"cirE","\u29c4":"solb","\u29c5":"bsolb","\u29c9":"boxbox","\u29cd":"trisb","\u29ce":"rtriltri","\u29cf":"LeftTriangleBar","\u29cf\u0338":"NotLeftTriangleBar","\u29d0":"RightTriangleBar","\u29d0\u0338":"NotRightTriangleBar","\u29dc":"iinfin","\u29dd":"infintie","\u29de":"nvinfin","\u29e3":"eparsl","\u29e4":"smeparsl","\u29e5":"eqvparsl","\u29eb":"lozf","\u29f4":"RuleDelayed","\u29f6":"dsol","\u2a00":"xodot","\u2a01":"xoplus","\u2a02":"xotime","\u2a04":"xuplus","\u2a06":"xsqcup","\u2a0d":"fpartint","\u2a10":"cirfnint","\u2a11":"awint","\u2a12":"rppolint","\u2a13":"scpolint","\u2a14":"npolint","\u2a15":"pointint","\u2a16":"quatint","\u2a17":"intlarhk","\u2a22":"pluscir","\u2a23":"plusacir","\u2a24":"simplus","\u2a25":"plusdu","\u2a26":"plussim","\u2a27":"plustwo","\u2a29":"mcomma","\u2a2a":"minusdu","\u2a2d":"loplus","\u2a2e":"roplus","\u2a2f":"Cross","\u2a30":"timesd","\u2a31":"timesbar","\u2a33":"smashp","\u2a34":"lotimes","\u2a35":"rotimes","\u2a36":"otimesas","\u2a37":"Otimes","\u2a38":"odiv","\u2a39":"triplus","\u2a3a":"triminus","\u2a3b":"tritime","\u2a3c":"iprod","\u2a3f":"amalg","\u2a40":"capdot","\u2a42":"ncup","\u2a43":"ncap","\u2a44":"capand","\u2a45":"cupor","\u2a46":"cupcap","\u2a47":"capcup","\u2a48":"cupbrcap","\u2a49":"capbrcup","\u2a4a":"cupcup","\u2a4b":"capcap","\u2a4c":"ccups","\u2a4d":"ccaps","\u2a50":"ccupssm","\u2a53":"And","\u2a54":"Or","\u2a55":"andand","\u2a56":"oror","\u2a57":"orslope","\u2a58":"andslope","\u2a5a":"andv","\u2a5b":"orv","\u2a5c":"andd","\u2a5d":"ord","\u2a5f":"wedbar","\u2a66":"sdote","\u2a6a":"simdot","\u2a6d":"congdot","\u2a6d\u0338":"ncongdot","\u2a6e":"easter","\u2a6f":"apacir","\u2a70":"apE","\u2a70\u0338":"napE","\u2a71":"eplus","\u2a72":"pluse","\u2a73":"Esim","\u2a77":"eDDot","\u2a78":"equivDD","\u2a79":"ltcir","\u2a7a":"gtcir","\u2a7b":"ltquest","\u2a7c":"gtquest","\u2a7d":"les","\u2a7d\u0338":"nles","\u2a7e":"ges","\u2a7e\u0338":"nges","\u2a7f":"lesdot","\u2a80":"gesdot","\u2a81":"lesdoto","\u2a82":"gesdoto","\u2a83":"lesdotor","\u2a84":"gesdotol","\u2a85":"lap","\u2a86":"gap","\u2a87":"lne","\u2a88":"gne","\u2a89":"lnap","\u2a8a":"gnap","\u2a8b":"lEg","\u2a8c":"gEl","\u2a8d":"lsime","\u2a8e":"gsime","\u2a8f":"lsimg","\u2a90":"gsiml","\u2a91":"lgE","\u2a92":"glE","\u2a93":"lesges","\u2a94":"gesles","\u2a95":"els","\u2a96":"egs","\u2a97":"elsdot","\u2a98":"egsdot","\u2a99":"el","\u2a9a":"eg","\u2a9d":"siml","\u2a9e":"simg","\u2a9f":"simlE","\u2aa0":"simgE","\u2aa1":"LessLess","\u2aa1\u0338":"NotNestedLessLess","\u2aa2":"GreaterGreater","\u2aa2\u0338":"NotNestedGreaterGreater","\u2aa4":"glj","\u2aa5":"gla","\u2aa6":"ltcc","\u2aa7":"gtcc","\u2aa8":"lescc","\u2aa9":"gescc","\u2aaa":"smt","\u2aab":"lat","\u2aac":"smte","\u2aac\ufe00":"smtes","\u2aad":"late","\u2aad\ufe00":"lates","\u2aae":"bumpE","\u2aaf":"pre","\u2aaf\u0338":"npre","\u2ab0":"sce","\u2ab0\u0338":"nsce","\u2ab3":"prE","\u2ab4":"scE","\u2ab5":"prnE","\u2ab6":"scnE","\u2ab7":"prap","\u2ab8":"scap","\u2ab9":"prnap","\u2aba":"scnap","\u2abb":"Pr","\u2abc":"Sc","\u2abd":"subdot","\u2abe":"supdot","\u2abf":"subplus","\u2ac0":"supplus","\u2ac1":"submult","\u2ac2":"supmult","\u2ac3":"subedot","\u2ac4":"supedot","\u2ac5":"subE","\u2ac5\u0338":"nsubE","\u2ac6":"supE","\u2ac6\u0338":"nsupE","\u2ac7":"subsim","\u2ac8":"supsim","\u2acb\ufe00":"vsubnE","\u2acb":"subnE","\u2acc\ufe00":"vsupnE","\u2acc":"supnE","\u2acf":"csub","\u2ad0":"csup","\u2ad1":"csube","\u2ad2":"csupe","\u2ad3":"subsup","\u2ad4":"supsub","\u2ad5":"subsub","\u2ad6":"supsup","\u2ad7":"suphsub","\u2ad8":"supdsub","\u2ad9":"forkv","\u2ada":"topfork","\u2adb":"mlcp","\u2ae4":"Dashv","\u2ae6":"Vdashl","\u2ae7":"Barv","\u2ae8":"vBar","\u2ae9":"vBarv","\u2aeb":"Vbar","\u2aec":"Not","\u2aed":"bNot","\u2aee":"rnmid","\u2aef":"cirmid","\u2af0":"midcir","\u2af1":"topcir","\u2af2":"nhpar","\u2af3":"parsim","\u2afd":"parsl","\u2afd\u20e5":"nparsl","\u266d":"flat","\u266e":"natur","\u266f":"sharp","\xa4":"curren","\xa2":"cent",$:"dollar","\xa3":"pound","\xa5":"yen","\u20ac":"euro","\xb9":"sup1","\xbd":"half","\u2153":"frac13","\xbc":"frac14","\u2155":"frac15","\u2159":"frac16","\u215b":"frac18","\xb2":"sup2","\u2154":"frac23","\u2156":"frac25","\xb3":"sup3","\xbe":"frac34","\u2157":"frac35","\u215c":"frac38","\u2158":"frac45","\u215a":"frac56","\u215d":"frac58","\u215e":"frac78","\ud835\udcb6":"ascr","\ud835\udd52":"aopf","\ud835\udd1e":"afr","\ud835\udd38":"Aopf","\ud835\udd04":"Afr","\ud835\udc9c":"Ascr","\xaa":"ordf","\xe1":"aacute","\xc1":"Aacute","\xe0":"agrave","\xc0":"Agrave","\u0103":"abreve","\u0102":"Abreve","\xe2":"acirc","\xc2":"Acirc","\xe5":"aring","\xc5":"angst","\xe4":"auml","\xc4":"Auml","\xe3":"atilde","\xc3":"Atilde","\u0105":"aogon","\u0104":"Aogon","\u0101":"amacr","\u0100":"Amacr","\xe6":"aelig","\xc6":"AElig","\ud835\udcb7":"bscr","\ud835\udd53":"bopf","\ud835\udd1f":"bfr","\ud835\udd39":"Bopf","\u212c":"Bscr","\ud835\udd05":"Bfr","\ud835\udd20":"cfr","\ud835\udcb8":"cscr","\ud835\udd54":"copf","\u212d":"Cfr","\ud835\udc9e":"Cscr","\u2102":"Copf","\u0107":"cacute","\u0106":"Cacute","\u0109":"ccirc","\u0108":"Ccirc","\u010d":"ccaron","\u010c":"Ccaron","\u010b":"cdot","\u010a":"Cdot","\xe7":"ccedil","\xc7":"Ccedil","\u2105":"incare","\ud835\udd21":"dfr","\u2146":"dd","\ud835\udd55":"dopf","\ud835\udcb9":"dscr","\ud835\udc9f":"Dscr","\ud835\udd07":"Dfr","\u2145":"DD","\ud835\udd3b":"Dopf","\u010f":"dcaron","\u010e":"Dcaron","\u0111":"dstrok","\u0110":"Dstrok","\xf0":"eth","\xd0":"ETH","\u2147":"ee","\u212f":"escr","\ud835\udd22":"efr","\ud835\udd56":"eopf","\u2130":"Escr","\ud835\udd08":"Efr","\ud835\udd3c":"Eopf","\xe9":"eacute","\xc9":"Eacute","\xe8":"egrave","\xc8":"Egrave","\xea":"ecirc","\xca":"Ecirc","\u011b":"ecaron","\u011a":"Ecaron","\xeb":"euml","\xcb":"Euml","\u0117":"edot","\u0116":"Edot","\u0119":"eogon","\u0118":"Eogon","\u0113":"emacr","\u0112":"Emacr","\ud835\udd23":"ffr","\ud835\udd57":"fopf","\ud835\udcbb":"fscr","\ud835\udd09":"Ffr","\ud835\udd3d":"Fopf","\u2131":"Fscr","\ufb00":"fflig","\ufb03":"ffilig","\ufb04":"ffllig","\ufb01":"filig",fj:"fjlig","\ufb02":"fllig","\u0192":"fnof","\u210a":"gscr","\ud835\udd58":"gopf","\ud835\udd24":"gfr","\ud835\udca2":"Gscr","\ud835\udd3e":"Gopf","\ud835\udd0a":"Gfr","\u01f5":"gacute","\u011f":"gbreve","\u011e":"Gbreve","\u011d":"gcirc","\u011c":"Gcirc","\u0121":"gdot","\u0120":"Gdot","\u0122":"Gcedil","\ud835\udd25":"hfr","\u210e":"planckh","\ud835\udcbd":"hscr","\ud835\udd59":"hopf","\u210b":"Hscr","\u210c":"Hfr","\u210d":"Hopf","\u0125":"hcirc","\u0124":"Hcirc","\u210f":"hbar","\u0127":"hstrok","\u0126":"Hstrok","\ud835\udd5a":"iopf","\ud835\udd26":"ifr","\ud835\udcbe":"iscr","\u2148":"ii","\ud835\udd40":"Iopf","\u2110":"Iscr","\u2111":"Im","\xed":"iacute","\xcd":"Iacute","\xec":"igrave","\xcc":"Igrave","\xee":"icirc","\xce":"Icirc","\xef":"iuml","\xcf":"Iuml","\u0129":"itilde","\u0128":"Itilde","\u0130":"Idot","\u012f":"iogon","\u012e":"Iogon","\u012b":"imacr","\u012a":"Imacr","\u0133":"ijlig","\u0132":"IJlig","\u0131":"imath","\ud835\udcbf":"jscr","\ud835\udd5b":"jopf","\ud835\udd27":"jfr","\ud835\udca5":"Jscr","\ud835\udd0d":"Jfr","\ud835\udd41":"Jopf","\u0135":"jcirc","\u0134":"Jcirc","\u0237":"jmath","\ud835\udd5c":"kopf","\ud835\udcc0":"kscr","\ud835\udd28":"kfr","\ud835\udca6":"Kscr","\ud835\udd42":"Kopf","\ud835\udd0e":"Kfr","\u0137":"kcedil","\u0136":"Kcedil","\ud835\udd29":"lfr","\ud835\udcc1":"lscr","\u2113":"ell","\ud835\udd5d":"lopf","\u2112":"Lscr","\ud835\udd0f":"Lfr","\ud835\udd43":"Lopf","\u013a":"lacute","\u0139":"Lacute","\u013e":"lcaron","\u013d":"Lcaron","\u013c":"lcedil","\u013b":"Lcedil","\u0142":"lstrok","\u0141":"Lstrok","\u0140":"lmidot","\u013f":"Lmidot","\ud835\udd2a":"mfr","\ud835\udd5e":"mopf","\ud835\udcc2":"mscr","\ud835\udd10":"Mfr","\ud835\udd44":"Mopf","\u2133":"Mscr","\ud835\udd2b":"nfr","\ud835\udd5f":"nopf","\ud835\udcc3":"nscr","\u2115":"Nopf","\ud835\udca9":"Nscr","\ud835\udd11":"Nfr","\u0144":"nacute","\u0143":"Nacute","\u0148":"ncaron","\u0147":"Ncaron","\xf1":"ntilde","\xd1":"Ntilde","\u0146":"ncedil","\u0145":"Ncedil","\u2116":"numero","\u014b":"eng","\u014a":"ENG","\ud835\udd60":"oopf","\ud835\udd2c":"ofr","\u2134":"oscr","\ud835\udcaa":"Oscr","\ud835\udd12":"Ofr","\ud835\udd46":"Oopf","\xba":"ordm","\xf3":"oacute","\xd3":"Oacute","\xf2":"ograve","\xd2":"Ograve","\xf4":"ocirc","\xd4":"Ocirc","\xf6":"ouml","\xd6":"Ouml","\u0151":"odblac","\u0150":"Odblac","\xf5":"otilde","\xd5":"Otilde","\xf8":"oslash","\xd8":"Oslash","\u014d":"omacr","\u014c":"Omacr","\u0153":"oelig","\u0152":"OElig","\ud835\udd2d":"pfr","\ud835\udcc5":"pscr","\ud835\udd61":"popf","\u2119":"Popf","\ud835\udd13":"Pfr","\ud835\udcab":"Pscr","\ud835\udd62":"qopf","\ud835\udd2e":"qfr","\ud835\udcc6":"qscr","\ud835\udcac":"Qscr","\ud835\udd14":"Qfr","\u211a":"Qopf","\u0138":"kgreen","\ud835\udd2f":"rfr","\ud835\udd63":"ropf","\ud835\udcc7":"rscr","\u211b":"Rscr","\u211c":"Re","\u211d":"Ropf","\u0155":"racute","\u0154":"Racute","\u0159":"rcaron","\u0158":"Rcaron","\u0157":"rcedil","\u0156":"Rcedil","\ud835\udd64":"sopf","\ud835\udcc8":"sscr","\ud835\udd30":"sfr","\ud835\udd4a":"Sopf","\ud835\udd16":"Sfr","\ud835\udcae":"Sscr","\u24c8":"oS","\u015b":"sacute","\u015a":"Sacute","\u015d":"scirc","\u015c":"Scirc","\u0161":"scaron","\u0160":"Scaron","\u015f":"scedil","\u015e":"Scedil","\xdf":"szlig","\ud835\udd31":"tfr","\ud835\udcc9":"tscr","\ud835\udd65":"topf","\ud835\udcaf":"Tscr","\ud835\udd17":"Tfr","\ud835\udd4b":"Topf","\u0165":"tcaron","\u0164":"Tcaron","\u0163":"tcedil","\u0162":"Tcedil","\u2122":"trade","\u0167":"tstrok","\u0166":"Tstrok","\ud835\udcca":"uscr","\ud835\udd66":"uopf","\ud835\udd32":"ufr","\ud835\udd4c":"Uopf","\ud835\udd18":"Ufr","\ud835\udcb0":"Uscr","\xfa":"uacute","\xda":"Uacute","\xf9":"ugrave","\xd9":"Ugrave","\u016d":"ubreve","\u016c":"Ubreve","\xfb":"ucirc","\xdb":"Ucirc","\u016f":"uring","\u016e":"Uring","\xfc":"uuml","\xdc":"Uuml","\u0171":"udblac","\u0170":"Udblac","\u0169":"utilde","\u0168":"Utilde","\u0173":"uogon","\u0172":"Uogon","\u016b":"umacr","\u016a":"Umacr","\ud835\udd33":"vfr","\ud835\udd67":"vopf","\ud835\udccb":"vscr","\ud835\udd19":"Vfr","\ud835\udd4d":"Vopf","\ud835\udcb1":"Vscr","\ud835\udd68":"wopf","\ud835\udccc":"wscr","\ud835\udd34":"wfr","\ud835\udcb2":"Wscr","\ud835\udd4e":"Wopf","\ud835\udd1a":"Wfr","\u0175":"wcirc","\u0174":"Wcirc","\ud835\udd35":"xfr","\ud835\udccd":"xscr","\ud835\udd69":"xopf","\ud835\udd4f":"Xopf","\ud835\udd1b":"Xfr","\ud835\udcb3":"Xscr","\ud835\udd36":"yfr","\ud835\udcce":"yscr","\ud835\udd6a":"yopf","\ud835\udcb4":"Yscr","\ud835\udd1c":"Yfr","\ud835\udd50":"Yopf","\xfd":"yacute","\xdd":"Yacute","\u0177":"ycirc","\u0176":"Ycirc","\xff":"yuml","\u0178":"Yuml","\ud835\udccf":"zscr","\ud835\udd37":"zfr","\ud835\udd6b":"zopf","\u2128":"Zfr","\u2124":"Zopf","\ud835\udcb5":"Zscr","\u017a":"zacute","\u0179":"Zacute","\u017e":"zcaron","\u017d":"Zcaron","\u017c":"zdot","\u017b":"Zdot","\u01b5":"imped","\xfe":"thorn","\xde":"THORN","\u0149":"napos","\u03b1":"alpha","\u0391":"Alpha","\u03b2":"beta","\u0392":"Beta","\u03b3":"gamma","\u0393":"Gamma","\u03b4":"delta","\u0394":"Delta","\u03b5":"epsi","\u03f5":"epsiv","\u0395":"Epsilon","\u03dd":"gammad","\u03dc":"Gammad","\u03b6":"zeta","\u0396":"Zeta","\u03b7":"eta","\u0397":"Eta","\u03b8":"theta","\u03d1":"thetav","\u0398":"Theta","\u03b9":"iota","\u0399":"Iota","\u03ba":"kappa","\u03f0":"kappav","\u039a":"Kappa","\u03bb":"lambda","\u039b":"Lambda","\u03bc":"mu","\xb5":"micro","\u039c":"Mu","\u03bd":"nu","\u039d":"Nu","\u03be":"xi","\u039e":"Xi","\u03bf":"omicron","\u039f":"Omicron","\u03c0":"pi","\u03d6":"piv","\u03a0":"Pi","\u03c1":"rho","\u03f1":"rhov","\u03a1":"Rho","\u03c3":"sigma","\u03a3":"Sigma","\u03c2":"sigmaf","\u03c4":"tau","\u03a4":"Tau","\u03c5":"upsi","\u03a5":"Upsilon","\u03d2":"Upsi","\u03c6":"phi","\u03d5":"phiv","\u03a6":"Phi","\u03c7":"chi","\u03a7":"Chi","\u03c8":"psi","\u03a8":"Psi","\u03c9":"omega","\u03a9":"ohm","\u0430":"acy","\u0410":"Acy","\u0431":"bcy","\u0411":"Bcy","\u0432":"vcy","\u0412":"Vcy","\u0433":"gcy","\u0413":"Gcy","\u0453":"gjcy","\u0403":"GJcy","\u0434":"dcy","\u0414":"Dcy","\u0452":"djcy","\u0402":"DJcy","\u0435":"iecy","\u0415":"IEcy","\u0451":"iocy","\u0401":"IOcy","\u0454":"jukcy","\u0404":"Jukcy","\u0436":"zhcy","\u0416":"ZHcy","\u0437":"zcy","\u0417":"Zcy","\u0455":"dscy","\u0405":"DScy","\u0438":"icy","\u0418":"Icy","\u0456":"iukcy","\u0406":"Iukcy","\u0457":"yicy","\u0407":"YIcy","\u0439":"jcy","\u0419":"Jcy","\u0458":"jsercy","\u0408":"Jsercy","\u043a":"kcy","\u041a":"Kcy","\u045c":"kjcy","\u040c":"KJcy","\u043b":"lcy","\u041b":"Lcy","\u0459":"ljcy","\u0409":"LJcy","\u043c":"mcy","\u041c":"Mcy","\u043d":"ncy","\u041d":"Ncy","\u045a":"njcy","\u040a":"NJcy","\u043e":"ocy","\u041e":"Ocy","\u043f":"pcy","\u041f":"Pcy","\u0440":"rcy","\u0420":"Rcy","\u0441":"scy","\u0421":"Scy","\u0442":"tcy","\u0422":"Tcy","\u045b":"tshcy","\u040b":"TSHcy","\u0443":"ucy","\u0423":"Ucy","\u045e":"ubrcy","\u040e":"Ubrcy","\u0444":"fcy","\u0424":"Fcy","\u0445":"khcy","\u0425":"KHcy","\u0446":"tscy","\u0426":"TScy","\u0447":"chcy","\u0427":"CHcy","\u045f":"dzcy","\u040f":"DZcy","\u0448":"shcy","\u0428":"SHcy","\u0449":"shchcy","\u0429":"SHCHcy","\u044a":"hardcy","\u042a":"HARDcy","\u044b":"ycy","\u042b":"Ycy","\u044c":"softcy","\u042c":"SOFTcy","\u044d":"ecy","\u042d":"Ecy","\u044e":"yucy","\u042e":"YUcy","\u044f":"yacy","\u042f":"YAcy","\u2135":"aleph","\u2136":"beth","\u2137":"gimel","\u2138":"daleth"},u=/["&'<>`]/g,c={'"':"&quot;","&":"&amp;","'":"&#x27;","<":"&lt;",">":"&gt;","`":"&#x60;"},p=/&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/,j=/[\0-\x08\x0B\x0E-\x1F\x7F-\x9F\uFDD0-\uFDEF\uFFFE\uFFFF]|[\uD83F\uD87F\uD8BF\uD8FF\uD93F\uD97F\uD9BF\uD9FF\uDA3F\uDA7F\uDABF\uDAFF\uDB3F\uDB7F\uDBBF\uDBFF][\uDFFE\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,v=/&(CounterClockwiseContourIntegral|DoubleLongLeftRightArrow|ClockwiseContourIntegral|NotNestedGreaterGreater|NotSquareSupersetEqual|DiacriticalDoubleAcute|NotRightTriangleEqual|NotSucceedsSlantEqual|NotPrecedesSlantEqual|CloseCurlyDoubleQuote|NegativeVeryThinSpace|DoubleContourIntegral|FilledVerySmallSquare|CapitalDifferentialD|OpenCurlyDoubleQuote|EmptyVerySmallSquare|NestedGreaterGreater|DoubleLongRightArrow|NotLeftTriangleEqual|NotGreaterSlantEqual|ReverseUpEquilibrium|DoubleLeftRightArrow|NotSquareSubsetEqual|NotDoubleVerticalBar|RightArrowLeftArrow|NotGreaterFullEqual|NotRightTriangleBar|SquareSupersetEqual|DownLeftRightVector|DoubleLongLeftArrow|leftrightsquigarrow|LeftArrowRightArrow|NegativeMediumSpace|blacktriangleright|RightDownVectorBar|PrecedesSlantEqual|RightDoubleBracket|SucceedsSlantEqual|NotLeftTriangleBar|RightTriangleEqual|SquareIntersection|RightDownTeeVector|ReverseEquilibrium|NegativeThickSpace|longleftrightarrow|Longleftrightarrow|LongLeftRightArrow|DownRightTeeVector|DownRightVectorBar|GreaterSlantEqual|SquareSubsetEqual|LeftDownVectorBar|LeftDoubleBracket|VerticalSeparator|rightleftharpoons|NotGreaterGreater|NotSquareSuperset|blacktriangleleft|blacktriangledown|NegativeThinSpace|LeftDownTeeVector|NotLessSlantEqual|leftrightharpoons|DoubleUpDownArrow|DoubleVerticalBar|LeftTriangleEqual|FilledSmallSquare|twoheadrightarrow|NotNestedLessLess|DownLeftTeeVector|DownLeftVectorBar|RightAngleBracket|NotTildeFullEqual|NotReverseElement|RightUpDownVector|DiacriticalTilde|NotSucceedsTilde|circlearrowright|NotPrecedesEqual|rightharpoondown|DoubleRightArrow|NotSucceedsEqual|NonBreakingSpace|NotRightTriangle|LessEqualGreater|RightUpTeeVector|LeftAngleBracket|GreaterFullEqual|DownArrowUpArrow|RightUpVectorBar|twoheadleftarrow|GreaterEqualLess|downharpoonright|RightTriangleBar|ntrianglerighteq|NotSupersetEqual|LeftUpDownVector|DiacriticalAcute|rightrightarrows|vartriangleright|UpArrowDownArrow|DiacriticalGrave|UnderParenthesis|EmptySmallSquare|LeftUpVectorBar|leftrightarrows|DownRightVector|downharpoonleft|trianglerighteq|ShortRightArrow|OverParenthesis|DoubleLeftArrow|DoubleDownArrow|NotSquareSubset|bigtriangledown|ntrianglelefteq|UpperRightArrow|curvearrowright|vartriangleleft|NotLeftTriangle|nleftrightarrow|LowerRightArrow|NotHumpDownHump|NotGreaterTilde|rightthreetimes|LeftUpTeeVector|NotGreaterEqual|straightepsilon|LeftTriangleBar|rightsquigarrow|ContourIntegral|rightleftarrows|CloseCurlyQuote|RightDownVector|LeftRightVector|nLeftrightarrow|leftharpoondown|circlearrowleft|SquareSuperset|OpenCurlyQuote|hookrightarrow|HorizontalLine|DiacriticalDot|NotLessGreater|ntriangleright|DoubleRightTee|InvisibleComma|InvisibleTimes|LowerLeftArrow|DownLeftVector|NotSubsetEqual|curvearrowleft|trianglelefteq|NotVerticalBar|TildeFullEqual|downdownarrows|NotGreaterLess|RightTeeVector|ZeroWidthSpace|looparrowright|LongRightArrow|doublebarwedge|ShortLeftArrow|ShortDownArrow|RightVectorBar|GreaterGreater|ReverseElement|rightharpoonup|LessSlantEqual|leftthreetimes|upharpoonright|rightarrowtail|LeftDownVector|Longrightarrow|NestedLessLess|UpperLeftArrow|nshortparallel|leftleftarrows|leftrightarrow|Leftrightarrow|LeftRightArrow|longrightarrow|upharpoonleft|RightArrowBar|ApplyFunction|LeftTeeVector|leftarrowtail|NotEqualTilde|varsubsetneqq|varsupsetneqq|RightTeeArrow|SucceedsEqual|SucceedsTilde|LeftVectorBar|SupersetEqual|hookleftarrow|DifferentialD|VerticalTilde|VeryThinSpace|blacktriangle|bigtriangleup|LessFullEqual|divideontimes|leftharpoonup|UpEquilibrium|ntriangleleft|RightTriangle|measuredangle|shortparallel|longleftarrow|Longleftarrow|LongLeftArrow|DoubleLeftTee|Poincareplane|PrecedesEqual|triangleright|DoubleUpArrow|RightUpVector|fallingdotseq|looparrowleft|PrecedesTilde|NotTildeEqual|NotTildeTilde|smallsetminus|Proportional|triangleleft|triangledown|UnderBracket|NotHumpEqual|exponentiale|ExponentialE|NotLessTilde|HilbertSpace|RightCeiling|blacklozenge|varsupsetneq|HumpDownHump|GreaterEqual|VerticalLine|LeftTeeArrow|NotLessEqual|DownTeeArrow|LeftTriangle|varsubsetneq|Intersection|NotCongruent|DownArrowBar|LeftUpVector|LeftArrowBar|risingdotseq|GreaterTilde|RoundImplies|SquareSubset|ShortUpArrow|NotSuperset|quaternions|precnapprox|backepsilon|preccurlyeq|OverBracket|blacksquare|MediumSpace|VerticalBar|circledcirc|circleddash|CircleMinus|CircleTimes|LessGreater|curlyeqprec|curlyeqsucc|diamondsuit|UpDownArrow|Updownarrow|RuleDelayed|Rrightarrow|updownarrow|RightVector|nRightarrow|nrightarrow|eqslantless|LeftCeiling|Equilibrium|SmallCircle|expectation|NotSucceeds|thickapprox|GreaterLess|SquareUnion|NotPrecedes|NotLessLess|straightphi|succnapprox|succcurlyeq|SubsetEqual|sqsupseteq|Proportion|Laplacetrf|ImaginaryI|supsetneqq|NotGreater|gtreqqless|NotElement|ThickSpace|TildeEqual|TildeTilde|Fouriertrf|rmoustache|EqualTilde|eqslantgtr|UnderBrace|LeftVector|UpArrowBar|nLeftarrow|nsubseteqq|subsetneqq|nsupseteqq|nleftarrow|succapprox|lessapprox|UpTeeArrow|upuparrows|curlywedge|lesseqqgtr|varepsilon|varnothing|RightFloor|complement|CirclePlus|sqsubseteq|Lleftarrow|circledast|RightArrow|Rightarrow|rightarrow|lmoustache|Bernoullis|precapprox|mapstoleft|mapstodown|longmapsto|dotsquare|downarrow|DoubleDot|nsubseteq|supsetneq|leftarrow|nsupseteq|subsetneq|ThinSpace|ngeqslant|subseteqq|HumpEqual|NotSubset|triangleq|NotCupCap|lesseqgtr|heartsuit|TripleDot|Leftarrow|Coproduct|Congruent|varpropto|complexes|gvertneqq|LeftArrow|LessTilde|supseteqq|MinusPlus|CircleDot|nleqslant|NotExists|gtreqless|nparallel|UnionPlus|LeftFloor|checkmark|CenterDot|centerdot|Mellintrf|gtrapprox|bigotimes|OverBrace|spadesuit|therefore|pitchfork|rationals|PlusMinus|Backslash|Therefore|DownBreve|backsimeq|backprime|DownArrow|nshortmid|Downarrow|lvertneqq|eqvparsl|imagline|imagpart|infintie|integers|Integral|intercal|LessLess|Uarrocir|intlarhk|sqsupset|angmsdaf|sqsubset|llcorner|vartheta|cupbrcap|lnapprox|Superset|SuchThat|succnsim|succneqq|angmsdag|biguplus|curlyvee|trpezium|Succeeds|NotTilde|bigwedge|angmsdah|angrtvbd|triminus|cwconint|fpartint|lrcorner|smeparsl|subseteq|urcorner|lurdshar|laemptyv|DDotrahd|approxeq|ldrushar|awconint|mapstoup|backcong|shortmid|triangle|geqslant|gesdotol|timesbar|circledR|circledS|setminus|multimap|naturals|scpolint|ncongdot|RightTee|boxminus|gnapprox|boxtimes|andslope|thicksim|angmsdaa|varsigma|cirfnint|rtriltri|angmsdab|rppolint|angmsdac|barwedge|drbkarow|clubsuit|thetasym|bsolhsub|capbrcup|dzigrarr|doteqdot|DotEqual|dotminus|UnderBar|NotEqual|realpart|otimesas|ulcorner|hksearow|hkswarow|parallel|PartialD|elinters|emptyset|plusacir|bbrktbrk|angmsdad|pointint|bigoplus|angmsdae|Precedes|bigsqcup|varkappa|notindot|supseteq|precneqq|precnsim|profalar|profline|profsurf|leqslant|lesdotor|raemptyv|subplus|notnivb|notnivc|subrarr|zigrarr|vzigzag|submult|subedot|Element|between|cirscir|larrbfs|larrsim|lotimes|lbrksld|lbrkslu|lozenge|ldrdhar|dbkarow|bigcirc|epsilon|simrarr|simplus|ltquest|Epsilon|luruhar|gtquest|maltese|npolint|eqcolon|npreceq|bigodot|ddagger|gtrless|bnequiv|harrcir|ddotseq|equivDD|backsim|demptyv|nsqsube|nsqsupe|Upsilon|nsubset|upsilon|minusdu|nsucceq|swarrow|nsupset|coloneq|searrow|boxplus|napprox|natural|asympeq|alefsym|congdot|nearrow|bigstar|diamond|supplus|tritime|LeftTee|nvinfin|triplus|NewLine|nvltrie|nvrtrie|nwarrow|nexists|Diamond|ruluhar|Implies|supmult|angzarr|suplarr|suphsub|questeq|because|digamma|Because|olcross|bemptyv|omicron|Omicron|rotimes|NoBreak|intprod|angrtvb|orderof|uwangle|suphsol|lesdoto|orslope|DownTee|realine|cudarrl|rdldhar|OverBar|supedot|lessdot|supdsub|topfork|succsim|rbrkslu|rbrksld|pertenk|cudarrr|isindot|planckh|lessgtr|pluscir|gesdoto|plussim|plustwo|lesssim|cularrp|rarrsim|Cayleys|notinva|notinvb|notinvc|UpArrow|Uparrow|uparrow|NotLess|dwangle|precsim|Product|curarrm|Cconint|dotplus|rarrbfs|ccupssm|Cedilla|cemptyv|notniva|quatint|frac35|frac38|frac45|frac56|frac58|frac78|tridot|xoplus|gacute|gammad|Gammad|lfisht|lfloor|bigcup|sqsupe|gbreve|Gbreve|lharul|sqsube|sqcups|Gcedil|apacir|llhard|lmidot|Lmidot|lmoust|andand|sqcaps|approx|Abreve|spades|circeq|tprime|divide|topcir|Assign|topbot|gesdot|divonx|xuplus|timesd|gesles|atilde|solbar|SOFTcy|loplus|timesb|lowast|lowbar|dlcorn|dlcrop|softcy|dollar|lparlt|thksim|lrhard|Atilde|lsaquo|smashp|bigvee|thinsp|wreath|bkarow|lsquor|lstrok|Lstrok|lthree|ltimes|ltlarr|DotDot|simdot|ltrPar|weierp|xsqcup|angmsd|sigmav|sigmaf|zeetrf|Zcaron|zcaron|mapsto|vsupne|thetav|cirmid|marker|mcomma|Zacute|vsubnE|there4|gtlPar|vsubne|bottom|gtrarr|SHCHcy|shchcy|midast|midcir|middot|minusb|minusd|gtrdot|bowtie|sfrown|mnplus|models|colone|seswar|Colone|mstpos|searhk|gtrsim|nacute|Nacute|boxbox|telrec|hairsp|Tcedil|nbumpe|scnsim|ncaron|Ncaron|ncedil|Ncedil|hamilt|Scedil|nearhk|hardcy|HARDcy|tcedil|Tcaron|commat|nequiv|nesear|tcaron|target|hearts|nexist|varrho|scedil|Scaron|scaron|hellip|Sacute|sacute|hercon|swnwar|compfn|rtimes|rthree|rsquor|rsaquo|zacute|wedgeq|homtht|barvee|barwed|Barwed|rpargt|horbar|conint|swarhk|roplus|nltrie|hslash|hstrok|Hstrok|rmoust|Conint|bprime|hybull|hyphen|iacute|Iacute|supsup|supsub|supsim|varphi|coprod|brvbar|agrave|Supset|supset|igrave|Igrave|notinE|Agrave|iiiint|iinfin|copysr|wedbar|Verbar|vangrt|becaus|incare|verbar|inodot|bullet|drcorn|intcal|drcrop|cularr|vellip|Utilde|bumpeq|cupcap|dstrok|Dstrok|CupCap|cupcup|cupdot|eacute|Eacute|supdot|iquest|easter|ecaron|Ecaron|ecolon|isinsv|utilde|itilde|Itilde|curarr|succeq|Bumpeq|cacute|ulcrop|nparsl|Cacute|nprcue|egrave|Egrave|nrarrc|nrarrw|subsup|subsub|nrtrie|jsercy|nsccue|Jsercy|kappav|kcedil|Kcedil|subsim|ulcorn|nsimeq|egsdot|veebar|kgreen|capand|elsdot|Subset|subset|curren|aacute|lacute|Lacute|emptyv|ntilde|Ntilde|lagran|lambda|Lambda|capcap|Ugrave|langle|subdot|emsp13|numero|emsp14|nvdash|nvDash|nVdash|nVDash|ugrave|ufisht|nvHarr|larrfs|nvlArr|larrhk|larrlp|larrpl|nvrArr|Udblac|nwarhk|larrtl|nwnear|oacute|Oacute|latail|lAtail|sstarf|lbrace|odblac|Odblac|lbrack|udblac|odsold|eparsl|lcaron|Lcaron|ograve|Ograve|lcedil|Lcedil|Aacute|ssmile|ssetmn|squarf|ldquor|capcup|ominus|cylcty|rharul|eqcirc|dagger|rfloor|rfisht|Dagger|daleth|equals|origof|capdot|equest|dcaron|Dcaron|rdquor|oslash|Oslash|otilde|Otilde|otimes|Otimes|urcrop|Ubreve|ubreve|Yacute|Uacute|uacute|Rcedil|rcedil|urcorn|parsim|Rcaron|Vdashl|rcaron|Tstrok|percnt|period|permil|Exists|yacute|rbrack|rbrace|phmmat|ccaron|Ccaron|planck|ccedil|plankv|tstrok|female|plusdo|plusdu|ffilig|plusmn|ffllig|Ccedil|rAtail|dfisht|bernou|ratail|Rarrtl|rarrtl|angsph|rarrpl|rarrlp|rarrhk|xwedge|xotime|forall|ForAll|Vvdash|vsupnE|preceq|bigcap|frac12|frac13|frac14|primes|rarrfs|prnsim|frac15|Square|frac16|square|lesdot|frac18|frac23|propto|prurel|rarrap|rangle|puncsp|frac25|Racute|qprime|racute|lesges|frac34|abreve|AElig|eqsim|utdot|setmn|urtri|Equal|Uring|seArr|uring|searr|dashv|Dashv|mumap|nabla|iogon|Iogon|sdote|sdotb|scsim|napid|napos|equiv|natur|Acirc|dblac|erarr|nbump|iprod|erDot|ucirc|awint|esdot|angrt|ncong|isinE|scnap|Scirc|scirc|ndash|isins|Ubrcy|nearr|neArr|isinv|nedot|ubrcy|acute|Ycirc|iukcy|Iukcy|xutri|nesim|caret|jcirc|Jcirc|caron|twixt|ddarr|sccue|exist|jmath|sbquo|ngeqq|angst|ccaps|lceil|ngsim|UpTee|delta|Delta|rtrif|nharr|nhArr|nhpar|rtrie|jukcy|Jukcy|kappa|rsquo|Kappa|nlarr|nlArr|TSHcy|rrarr|aogon|Aogon|fflig|xrarr|tshcy|ccirc|nleqq|filig|upsih|nless|dharl|nlsim|fjlig|ropar|nltri|dharr|robrk|roarr|fllig|fltns|roang|rnmid|subnE|subne|lAarr|trisb|Ccirc|acirc|ccups|blank|VDash|forkv|Vdash|langd|cedil|blk12|blk14|laquo|strns|diams|notin|vDash|larrb|blk34|block|disin|uplus|vdash|vBarv|aelig|starf|Wedge|check|xrArr|lates|lbarr|lBarr|notni|lbbrk|bcong|frasl|lbrke|frown|vrtri|vprop|vnsup|gamma|Gamma|wedge|xodot|bdquo|srarr|doteq|ldquo|boxdl|boxdL|gcirc|Gcirc|boxDl|boxDL|boxdr|boxdR|boxDr|TRADE|trade|rlhar|boxDR|vnsub|npart|vltri|rlarr|boxhd|boxhD|nprec|gescc|nrarr|nrArr|boxHd|boxHD|boxhu|boxhU|nrtri|boxHu|clubs|boxHU|times|colon|Colon|gimel|xlArr|Tilde|nsime|tilde|nsmid|nspar|THORN|thorn|xlarr|nsube|nsubE|thkap|xhArr|comma|nsucc|boxul|boxuL|nsupe|nsupE|gneqq|gnsim|boxUl|boxUL|grave|boxur|boxuR|boxUr|boxUR|lescc|angle|bepsi|boxvh|varpi|boxvH|numsp|Theta|gsime|gsiml|theta|boxVh|boxVH|boxvl|gtcir|gtdot|boxvL|boxVl|boxVL|crarr|cross|Cross|nvsim|boxvr|nwarr|nwArr|sqsup|dtdot|Uogon|lhard|lharu|dtrif|ocirc|Ocirc|lhblk|duarr|odash|sqsub|Hacek|sqcup|llarr|duhar|oelig|OElig|ofcir|boxvR|uogon|lltri|boxVr|csube|uuarr|ohbar|csupe|ctdot|olarr|olcir|harrw|oline|sqcap|omacr|Omacr|omega|Omega|boxVR|aleph|lneqq|lnsim|loang|loarr|rharu|lobrk|hcirc|operp|oplus|rhard|Hcirc|orarr|Union|order|ecirc|Ecirc|cuepr|szlig|cuesc|breve|reals|eDDot|Breve|hoarr|lopar|utrif|rdquo|Umacr|umacr|efDot|swArr|ultri|alpha|rceil|ovbar|swarr|Wcirc|wcirc|smtes|smile|bsemi|lrarr|aring|parsl|lrhar|bsime|uhblk|lrtri|cupor|Aring|uharr|uharl|slarr|rbrke|bsolb|lsime|rbbrk|RBarr|lsimg|phone|rBarr|rbarr|icirc|lsquo|Icirc|emacr|Emacr|ratio|simne|plusb|simlE|simgE|simeq|pluse|ltcir|ltdot|empty|xharr|xdtri|iexcl|Alpha|ltrie|rarrw|pound|ltrif|xcirc|bumpe|prcue|bumpE|asymp|amacr|cuvee|Sigma|sigma|iiint|udhar|iiota|ijlig|IJlig|supnE|imacr|Imacr|prime|Prime|image|prnap|eogon|Eogon|rarrc|mdash|mDDot|cuwed|imath|supne|imped|Amacr|udarr|prsim|micro|rarrb|cwint|raquo|infin|eplus|range|rangd|Ucirc|radic|minus|amalg|veeeq|rAarr|epsiv|ycirc|quest|sharp|quot|zwnj|Qscr|race|qscr|Qopf|qopf|qint|rang|Rang|Zscr|zscr|Zopf|zopf|rarr|rArr|Rarr|Pscr|pscr|prop|prod|prnE|prec|ZHcy|zhcy|prap|Zeta|zeta|Popf|popf|Zdot|plus|zdot|Yuml|yuml|phiv|YUcy|yucy|Yscr|yscr|perp|Yopf|yopf|part|para|YIcy|Ouml|rcub|yicy|YAcy|rdca|ouml|osol|Oscr|rdsh|yacy|real|oscr|xvee|andd|rect|andv|Xscr|oror|ordm|ordf|xscr|ange|aopf|Aopf|rHar|Xopf|opar|Oopf|xopf|xnis|rhov|oopf|omid|xmap|oint|apid|apos|ogon|ascr|Ascr|odot|odiv|xcup|xcap|ocir|oast|nvlt|nvle|nvgt|nvge|nvap|Wscr|wscr|auml|ntlg|ntgl|nsup|nsub|nsim|Nscr|nscr|nsce|Wopf|ring|npre|wopf|npar|Auml|Barv|bbrk|Nopf|nopf|nmid|nLtv|beta|ropf|Ropf|Beta|beth|nles|rpar|nleq|bnot|bNot|nldr|NJcy|rscr|Rscr|Vscr|vscr|rsqb|njcy|bopf|nisd|Bopf|rtri|Vopf|nGtv|ngtr|vopf|boxh|boxH|boxv|nges|ngeq|boxV|bscr|scap|Bscr|bsim|Vert|vert|bsol|bull|bump|caps|cdot|ncup|scnE|ncap|nbsp|napE|Cdot|cent|sdot|Vbar|nang|vBar|chcy|Mscr|mscr|sect|semi|CHcy|Mopf|mopf|sext|circ|cire|mldr|mlcp|cirE|comp|shcy|SHcy|vArr|varr|cong|copf|Copf|copy|COPY|malt|male|macr|lvnE|cscr|ltri|sime|ltcc|simg|Cscr|siml|csub|Uuml|lsqb|lsim|uuml|csup|Lscr|lscr|utri|smid|lpar|cups|smte|lozf|darr|Lopf|Uscr|solb|lopf|sopf|Sopf|lneq|uscr|spar|dArr|lnap|Darr|dash|Sqrt|LJcy|ljcy|lHar|dHar|Upsi|upsi|diam|lesg|djcy|DJcy|leqq|dopf|Dopf|dscr|Dscr|dscy|ldsh|ldca|squf|DScy|sscr|Sscr|dsol|lcub|late|star|Star|Uopf|Larr|lArr|larr|uopf|dtri|dzcy|sube|subE|Lang|lang|Kscr|kscr|Kopf|kopf|KJcy|kjcy|KHcy|khcy|DZcy|ecir|edot|eDot|Jscr|jscr|succ|Jopf|jopf|Edot|uHar|emsp|ensp|Iuml|iuml|eopf|isin|Iscr|iscr|Eopf|epar|sung|epsi|escr|sup1|sup2|sup3|Iota|iota|supe|supE|Iopf|iopf|IOcy|iocy|Escr|esim|Esim|imof|Uarr|QUOT|uArr|uarr|euml|IEcy|iecy|Idot|Euml|euro|excl|Hscr|hscr|Hopf|hopf|TScy|tscy|Tscr|hbar|tscr|flat|tbrk|fnof|hArr|harr|half|fopf|Fopf|tdot|gvnE|fork|trie|gtcc|fscr|Fscr|gdot|gsim|Gscr|gscr|Gopf|gopf|gneq|Gdot|tosa|gnap|Topf|topf|geqq|toea|GJcy|gjcy|tint|gesl|mid|Sfr|ggg|top|ges|gla|glE|glj|geq|gne|gEl|gel|gnE|Gcy|gcy|gap|Tfr|tfr|Tcy|tcy|Hat|Tau|Ffr|tau|Tab|hfr|Hfr|ffr|Fcy|fcy|icy|Icy|iff|ETH|eth|ifr|Ifr|Eta|eta|int|Int|Sup|sup|ucy|Ucy|Sum|sum|jcy|ENG|ufr|Ufr|eng|Jcy|jfr|els|ell|egs|Efr|efr|Jfr|uml|kcy|Kcy|Ecy|ecy|kfr|Kfr|lap|Sub|sub|lat|lcy|Lcy|leg|Dot|dot|lEg|leq|les|squ|div|die|lfr|Lfr|lgE|Dfr|dfr|Del|deg|Dcy|dcy|lne|lnE|sol|loz|smt|Cup|lrm|cup|lsh|Lsh|sim|shy|map|Map|mcy|Mcy|mfr|Mfr|mho|gfr|Gfr|sfr|cir|Chi|chi|nap|Cfr|vcy|Vcy|cfr|Scy|scy|ncy|Ncy|vee|Vee|Cap|cap|nfr|scE|sce|Nfr|nge|ngE|nGg|vfr|Vfr|ngt|bot|nGt|nis|niv|Rsh|rsh|nle|nlE|bne|Bfr|bfr|nLl|nlt|nLt|Bcy|bcy|not|Not|rlm|wfr|Wfr|npr|nsc|num|ocy|ast|Ocy|ofr|xfr|Xfr|Ofr|ogt|ohm|apE|olt|Rho|ape|rho|Rfr|rfr|ord|REG|ang|reg|orv|And|and|AMP|Rcy|amp|Afr|ycy|Ycy|yen|yfr|Yfr|rcy|par|pcy|Pcy|pfr|Pfr|phi|Phi|afr|Acy|acy|zcy|Zcy|piv|acE|acd|zfr|Zfr|pre|prE|psi|Psi|qfr|Qfr|zwj|Or|ge|Gg|gt|gg|el|oS|lt|Lt|LT|Re|lg|gl|eg|ne|Im|it|le|DD|wp|wr|nu|Nu|dd|lE|Sc|sc|pi|Pi|ee|af|ll|Ll|rx|gE|xi|pm|Xi|ic|pr|Pr|in|ni|mp|mu|ac|Mu|or|ap|Gt|GT|ii);|&(Aacute|Agrave|Atilde|Ccedil|Eacute|Egrave|Iacute|Igrave|Ntilde|Oacute|Ograve|Oslash|Otilde|Uacute|Ugrave|Yacute|aacute|agrave|atilde|brvbar|ccedil|curren|divide|eacute|egrave|frac12|frac14|frac34|iacute|igrave|iquest|middot|ntilde|oacute|ograve|oslash|otilde|plusmn|uacute|ugrave|yacute|AElig|Acirc|Aring|Ecirc|Icirc|Ocirc|THORN|Ucirc|acirc|acute|aelig|aring|cedil|ecirc|icirc|iexcl|laquo|micro|ocirc|pound|raquo|szlig|thorn|times|ucirc|Auml|COPY|Euml|Iuml|Ouml|QUOT|Uuml|auml|cent|copy|euml|iuml|macr|nbsp|ordf|ordm|ouml|para|quot|sect|sup1|sup2|sup3|uuml|yuml|AMP|ETH|REG|amp|deg|eth|not|reg|shy|uml|yen|GT|LT|gt|lt)(?!;)([=a-zA-Z0-9]?)|&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+)/g,S={aacute:"\xe1",Aacute:"\xc1",abreve:"\u0103",Abreve:"\u0102",ac:"\u223e",acd:"\u223f",acE:"\u223e\u0333",acirc:"\xe2",Acirc:"\xc2",acute:"\xb4",acy:"\u0430",Acy:"\u0410",aelig:"\xe6",AElig:"\xc6",af:"\u2061",afr:"\ud835\udd1e",Afr:"\ud835\udd04",agrave:"\xe0",Agrave:"\xc0",alefsym:"\u2135",aleph:"\u2135",alpha:"\u03b1",Alpha:"\u0391",amacr:"\u0101",Amacr:"\u0100",amalg:"\u2a3f",amp:"&",AMP:"&",and:"\u2227",And:"\u2a53",andand:"\u2a55",andd:"\u2a5c",andslope:"\u2a58",andv:"\u2a5a",ang:"\u2220",ange:"\u29a4",angle:"\u2220",angmsd:"\u2221",angmsdaa:"\u29a8",angmsdab:"\u29a9",angmsdac:"\u29aa",angmsdad:"\u29ab",angmsdae:"\u29ac",angmsdaf:"\u29ad",angmsdag:"\u29ae",angmsdah:"\u29af",angrt:"\u221f",angrtvb:"\u22be",angrtvbd:"\u299d",angsph:"\u2222",angst:"\xc5",angzarr:"\u237c",aogon:"\u0105",Aogon:"\u0104",aopf:"\ud835\udd52",Aopf:"\ud835\udd38",ap:"\u2248",apacir:"\u2a6f",ape:"\u224a",apE:"\u2a70",apid:"\u224b",apos:"'",ApplyFunction:"\u2061",approx:"\u2248",approxeq:"\u224a",aring:"\xe5",Aring:"\xc5",ascr:"\ud835\udcb6",Ascr:"\ud835\udc9c",Assign:"\u2254",ast:"*",asymp:"\u2248",asympeq:"\u224d",atilde:"\xe3",Atilde:"\xc3",auml:"\xe4",Auml:"\xc4",awconint:"\u2233",awint:"\u2a11",backcong:"\u224c",backepsilon:"\u03f6",backprime:"\u2035",backsim:"\u223d",backsimeq:"\u22cd",Backslash:"\u2216",Barv:"\u2ae7",barvee:"\u22bd",barwed:"\u2305",Barwed:"\u2306",barwedge:"\u2305",bbrk:"\u23b5",bbrktbrk:"\u23b6",bcong:"\u224c",bcy:"\u0431",Bcy:"\u0411",bdquo:"\u201e",becaus:"\u2235",because:"\u2235",Because:"\u2235",bemptyv:"\u29b0",bepsi:"\u03f6",bernou:"\u212c",Bernoullis:"\u212c",beta:"\u03b2",Beta:"\u0392",beth:"\u2136",between:"\u226c",bfr:"\ud835\udd1f",Bfr:"\ud835\udd05",bigcap:"\u22c2",bigcirc:"\u25ef",bigcup:"\u22c3",bigodot:"\u2a00",bigoplus:"\u2a01",bigotimes:"\u2a02",bigsqcup:"\u2a06",bigstar:"\u2605",bigtriangledown:"\u25bd",bigtriangleup:"\u25b3",biguplus:"\u2a04",bigvee:"\u22c1",bigwedge:"\u22c0",bkarow:"\u290d",blacklozenge:"\u29eb",blacksquare:"\u25aa",blacktriangle:"\u25b4",blacktriangledown:"\u25be",blacktriangleleft:"\u25c2",blacktriangleright:"\u25b8",blank:"\u2423",blk12:"\u2592",blk14:"\u2591",blk34:"\u2593",block:"\u2588",bne:"=\u20e5",bnequiv:"\u2261\u20e5",bnot:"\u2310",bNot:"\u2aed",bopf:"\ud835\udd53",Bopf:"\ud835\udd39",bot:"\u22a5",bottom:"\u22a5",bowtie:"\u22c8",boxbox:"\u29c9",boxdl:"\u2510",boxdL:"\u2555",boxDl:"\u2556",boxDL:"\u2557",boxdr:"\u250c",boxdR:"\u2552",boxDr:"\u2553",boxDR:"\u2554",boxh:"\u2500",boxH:"\u2550",boxhd:"\u252c",boxhD:"\u2565",boxHd:"\u2564",boxHD:"\u2566",boxhu:"\u2534",boxhU:"\u2568",boxHu:"\u2567",boxHU:"\u2569",boxminus:"\u229f",boxplus:"\u229e",boxtimes:"\u22a0",boxul:"\u2518",boxuL:"\u255b",boxUl:"\u255c",boxUL:"\u255d",boxur:"\u2514",boxuR:"\u2558",boxUr:"\u2559",boxUR:"\u255a",boxv:"\u2502",boxV:"\u2551",boxvh:"\u253c",boxvH:"\u256a",boxVh:"\u256b",boxVH:"\u256c",boxvl:"\u2524",boxvL:"\u2561",boxVl:"\u2562",boxVL:"\u2563",boxvr:"\u251c",boxvR:"\u255e",boxVr:"\u255f",boxVR:"\u2560",bprime:"\u2035",breve:"\u02d8",Breve:"\u02d8",brvbar:"\xa6",bscr:"\ud835\udcb7",Bscr:"\u212c",bsemi:"\u204f",bsim:"\u223d",bsime:"\u22cd",bsol:"\\",bsolb:"\u29c5",bsolhsub:"\u27c8",bull:"\u2022",bullet:"\u2022",bump:"\u224e",bumpe:"\u224f",bumpE:"\u2aae",bumpeq:"\u224f",Bumpeq:"\u224e",cacute:"\u0107",Cacute:"\u0106",cap:"\u2229",Cap:"\u22d2",capand:"\u2a44",capbrcup:"\u2a49",capcap:"\u2a4b",capcup:"\u2a47",capdot:"\u2a40",CapitalDifferentialD:"\u2145",caps:"\u2229\ufe00",caret:"\u2041",caron:"\u02c7",Cayleys:"\u212d",ccaps:"\u2a4d",ccaron:"\u010d",Ccaron:"\u010c",ccedil:"\xe7",Ccedil:"\xc7",ccirc:"\u0109",Ccirc:"\u0108",Cconint:"\u2230",ccups:"\u2a4c",ccupssm:"\u2a50",cdot:"\u010b",Cdot:"\u010a",cedil:"\xb8",Cedilla:"\xb8",cemptyv:"\u29b2",cent:"\xa2",centerdot:"\xb7",CenterDot:"\xb7",cfr:"\ud835\udd20",Cfr:"\u212d",chcy:"\u0447",CHcy:"\u0427",check:"\u2713",checkmark:"\u2713",chi:"\u03c7",Chi:"\u03a7",cir:"\u25cb",circ:"\u02c6",circeq:"\u2257",circlearrowleft:"\u21ba",circlearrowright:"\u21bb",circledast:"\u229b",circledcirc:"\u229a",circleddash:"\u229d",CircleDot:"\u2299",circledR:"\xae",circledS:"\u24c8",CircleMinus:"\u2296",CirclePlus:"\u2295",CircleTimes:"\u2297",cire:"\u2257",cirE:"\u29c3",cirfnint:"\u2a10",cirmid:"\u2aef",cirscir:"\u29c2",ClockwiseContourIntegral:"\u2232",CloseCurlyDoubleQuote:"\u201d",CloseCurlyQuote:"\u2019",clubs:"\u2663",clubsuit:"\u2663",colon:":",Colon:"\u2237",colone:"\u2254",Colone:"\u2a74",coloneq:"\u2254",comma:",",commat:"@",comp:"\u2201",compfn:"\u2218",complement:"\u2201",complexes:"\u2102",cong:"\u2245",congdot:"\u2a6d",Congruent:"\u2261",conint:"\u222e",Conint:"\u222f",ContourIntegral:"\u222e",copf:"\ud835\udd54",Copf:"\u2102",coprod:"\u2210",Coproduct:"\u2210",copy:"\xa9",COPY:"\xa9",copysr:"\u2117",CounterClockwiseContourIntegral:"\u2233",crarr:"\u21b5",cross:"\u2717",Cross:"\u2a2f",cscr:"\ud835\udcb8",Cscr:"\ud835\udc9e",csub:"\u2acf",csube:"\u2ad1",csup:"\u2ad0",csupe:"\u2ad2",ctdot:"\u22ef",cudarrl:"\u2938",cudarrr:"\u2935",cuepr:"\u22de",cuesc:"\u22df",cularr:"\u21b6",cularrp:"\u293d",cup:"\u222a",Cup:"\u22d3",cupbrcap:"\u2a48",cupcap:"\u2a46",CupCap:"\u224d",cupcup:"\u2a4a",cupdot:"\u228d",cupor:"\u2a45",cups:"\u222a\ufe00",curarr:"\u21b7",curarrm:"\u293c",curlyeqprec:"\u22de",curlyeqsucc:"\u22df",curlyvee:"\u22ce",curlywedge:"\u22cf",curren:"\xa4",curvearrowleft:"\u21b6",curvearrowright:"\u21b7",cuvee:"\u22ce",cuwed:"\u22cf",cwconint:"\u2232",cwint:"\u2231",cylcty:"\u232d",dagger:"\u2020",Dagger:"\u2021",daleth:"\u2138",darr:"\u2193",dArr:"\u21d3",Darr:"\u21a1",dash:"\u2010",dashv:"\u22a3",Dashv:"\u2ae4",dbkarow:"\u290f",dblac:"\u02dd",dcaron:"\u010f",Dcaron:"\u010e",dcy:"\u0434",Dcy:"\u0414",dd:"\u2146",DD:"\u2145",ddagger:"\u2021",ddarr:"\u21ca",DDotrahd:"\u2911",ddotseq:"\u2a77",deg:"\xb0",Del:"\u2207",delta:"\u03b4",Delta:"\u0394",demptyv:"\u29b1",dfisht:"\u297f",dfr:"\ud835\udd21",Dfr:"\ud835\udd07",dHar:"\u2965",dharl:"\u21c3",dharr:"\u21c2",DiacriticalAcute:"\xb4",DiacriticalDot:"\u02d9",DiacriticalDoubleAcute:"\u02dd",DiacriticalGrave:"`",DiacriticalTilde:"\u02dc",diam:"\u22c4",diamond:"\u22c4",Diamond:"\u22c4",diamondsuit:"\u2666",diams:"\u2666",die:"\xa8",DifferentialD:"\u2146",digamma:"\u03dd",disin:"\u22f2",div:"\xf7",divide:"\xf7",divideontimes:"\u22c7",divonx:"\u22c7",djcy:"\u0452",DJcy:"\u0402",dlcorn:"\u231e",dlcrop:"\u230d",dollar:"$",dopf:"\ud835\udd55",Dopf:"\ud835\udd3b",dot:"\u02d9",Dot:"\xa8",DotDot:"\u20dc",doteq:"\u2250",doteqdot:"\u2251",DotEqual:"\u2250",dotminus:"\u2238",dotplus:"\u2214",dotsquare:"\u22a1",doublebarwedge:"\u2306",DoubleContourIntegral:"\u222f",DoubleDot:"\xa8",DoubleDownArrow:"\u21d3",DoubleLeftArrow:"\u21d0",DoubleLeftRightArrow:"\u21d4",DoubleLeftTee:"\u2ae4",DoubleLongLeftArrow:"\u27f8",DoubleLongLeftRightArrow:"\u27fa",DoubleLongRightArrow:"\u27f9",DoubleRightArrow:"\u21d2",DoubleRightTee:"\u22a8",DoubleUpArrow:"\u21d1",DoubleUpDownArrow:"\u21d5",DoubleVerticalBar:"\u2225",downarrow:"\u2193",Downarrow:"\u21d3",DownArrow:"\u2193",DownArrowBar:"\u2913",DownArrowUpArrow:"\u21f5",DownBreve:"\u0311",downdownarrows:"\u21ca",downharpoonleft:"\u21c3",downharpoonright:"\u21c2",DownLeftRightVector:"\u2950",DownLeftTeeVector:"\u295e",DownLeftVector:"\u21bd",DownLeftVectorBar:"\u2956",DownRightTeeVector:"\u295f",DownRightVector:"\u21c1",DownRightVectorBar:"\u2957",DownTee:"\u22a4",DownTeeArrow:"\u21a7",drbkarow:"\u2910",drcorn:"\u231f",drcrop:"\u230c",dscr:"\ud835\udcb9",Dscr:"\ud835\udc9f",dscy:"\u0455",DScy:"\u0405",dsol:"\u29f6",dstrok:"\u0111",Dstrok:"\u0110",dtdot:"\u22f1",dtri:"\u25bf",dtrif:"\u25be",duarr:"\u21f5",duhar:"\u296f",dwangle:"\u29a6",dzcy:"\u045f",DZcy:"\u040f",dzigrarr:"\u27ff",eacute:"\xe9",Eacute:"\xc9",easter:"\u2a6e",ecaron:"\u011b",Ecaron:"\u011a",ecir:"\u2256",ecirc:"\xea",Ecirc:"\xca",ecolon:"\u2255",ecy:"\u044d",Ecy:"\u042d",eDDot:"\u2a77",edot:"\u0117",eDot:"\u2251",Edot:"\u0116",ee:"\u2147",efDot:"\u2252",efr:"\ud835\udd22",Efr:"\ud835\udd08",eg:"\u2a9a",egrave:"\xe8",Egrave:"\xc8",egs:"\u2a96",egsdot:"\u2a98",el:"\u2a99",Element:"\u2208",elinters:"\u23e7",ell:"\u2113",els:"\u2a95",elsdot:"\u2a97",emacr:"\u0113",Emacr:"\u0112",empty:"\u2205",emptyset:"\u2205",EmptySmallSquare:"\u25fb",emptyv:"\u2205",EmptyVerySmallSquare:"\u25ab",emsp:"\u2003",emsp13:"\u2004",emsp14:"\u2005",eng:"\u014b",ENG:"\u014a",ensp:"\u2002",eogon:"\u0119",Eogon:"\u0118",eopf:"\ud835\udd56",Eopf:"\ud835\udd3c",epar:"\u22d5",eparsl:"\u29e3",eplus:"\u2a71",epsi:"\u03b5",epsilon:"\u03b5",Epsilon:"\u0395",epsiv:"\u03f5",eqcirc:"\u2256",eqcolon:"\u2255",eqsim:"\u2242",eqslantgtr:"\u2a96",eqslantless:"\u2a95",Equal:"\u2a75",equals:"=",EqualTilde:"\u2242",equest:"\u225f",Equilibrium:"\u21cc",equiv:"\u2261",equivDD:"\u2a78",eqvparsl:"\u29e5",erarr:"\u2971",erDot:"\u2253",escr:"\u212f",Escr:"\u2130",esdot:"\u2250",esim:"\u2242",Esim:"\u2a73",eta:"\u03b7",Eta:"\u0397",eth:"\xf0",ETH:"\xd0",euml:"\xeb",Euml:"\xcb",euro:"\u20ac",excl:"!",exist:"\u2203",Exists:"\u2203",expectation:"\u2130",exponentiale:"\u2147",ExponentialE:"\u2147",fallingdotseq:"\u2252",fcy:"\u0444",Fcy:"\u0424",female:"\u2640",ffilig:"\ufb03",fflig:"\ufb00",ffllig:"\ufb04",ffr:"\ud835\udd23",Ffr:"\ud835\udd09",filig:"\ufb01",FilledSmallSquare:"\u25fc",FilledVerySmallSquare:"\u25aa",fjlig:"fj",flat:"\u266d",fllig:"\ufb02",fltns:"\u25b1",fnof:"\u0192",fopf:"\ud835\udd57",Fopf:"\ud835\udd3d",forall:"\u2200",ForAll:"\u2200",fork:"\u22d4",forkv:"\u2ad9",Fouriertrf:"\u2131",fpartint:"\u2a0d",frac12:"\xbd",frac13:"\u2153",frac14:"\xbc",frac15:"\u2155",frac16:"\u2159",frac18:"\u215b",frac23:"\u2154",frac25:"\u2156",frac34:"\xbe",frac35:"\u2157",frac38:"\u215c",frac45:"\u2158",frac56:"\u215a",frac58:"\u215d",frac78:"\u215e",frasl:"\u2044",frown:"\u2322",fscr:"\ud835\udcbb",Fscr:"\u2131",gacute:"\u01f5",gamma:"\u03b3",Gamma:"\u0393",gammad:"\u03dd",Gammad:"\u03dc",gap:"\u2a86",gbreve:"\u011f",Gbreve:"\u011e",Gcedil:"\u0122",gcirc:"\u011d",Gcirc:"\u011c",gcy:"\u0433",Gcy:"\u0413",gdot:"\u0121",Gdot:"\u0120",ge:"\u2265",gE:"\u2267",gel:"\u22db",gEl:"\u2a8c",geq:"\u2265",geqq:"\u2267",geqslant:"\u2a7e",ges:"\u2a7e",gescc:"\u2aa9",gesdot:"\u2a80",gesdoto:"\u2a82",gesdotol:"\u2a84",gesl:"\u22db\ufe00",gesles:"\u2a94",gfr:"\ud835\udd24",Gfr:"\ud835\udd0a",gg:"\u226b",Gg:"\u22d9",ggg:"\u22d9",gimel:"\u2137",gjcy:"\u0453",GJcy:"\u0403",gl:"\u2277",gla:"\u2aa5",glE:"\u2a92",glj:"\u2aa4",gnap:"\u2a8a",gnapprox:"\u2a8a",gne:"\u2a88",gnE:"\u2269",gneq:"\u2a88",gneqq:"\u2269",gnsim:"\u22e7",gopf:"\ud835\udd58",Gopf:"\ud835\udd3e",grave:"`",GreaterEqual:"\u2265",GreaterEqualLess:"\u22db",GreaterFullEqual:"\u2267",GreaterGreater:"\u2aa2",GreaterLess:"\u2277",GreaterSlantEqual:"\u2a7e",GreaterTilde:"\u2273",gscr:"\u210a",Gscr:"\ud835\udca2",gsim:"\u2273",gsime:"\u2a8e",gsiml:"\u2a90",gt:">",Gt:"\u226b",GT:">",gtcc:"\u2aa7",gtcir:"\u2a7a",gtdot:"\u22d7",gtlPar:"\u2995",gtquest:"\u2a7c",gtrapprox:"\u2a86",gtrarr:"\u2978",gtrdot:"\u22d7",gtreqless:"\u22db",gtreqqless:"\u2a8c",gtrless:"\u2277",gtrsim:"\u2273",gvertneqq:"\u2269\ufe00",gvnE:"\u2269\ufe00",Hacek:"\u02c7",hairsp:"\u200a",half:"\xbd",hamilt:"\u210b",hardcy:"\u044a",HARDcy:"\u042a",harr:"\u2194",hArr:"\u21d4",harrcir:"\u2948",harrw:"\u21ad",Hat:"^",hbar:"\u210f",hcirc:"\u0125",Hcirc:"\u0124",hearts:"\u2665",heartsuit:"\u2665",hellip:"\u2026",hercon:"\u22b9",hfr:"\ud835\udd25",Hfr:"\u210c",HilbertSpace:"\u210b",hksearow:"\u2925",hkswarow:"\u2926",hoarr:"\u21ff",homtht:"\u223b",hookleftarrow:"\u21a9",hookrightarrow:"\u21aa",hopf:"\ud835\udd59",Hopf:"\u210d",horbar:"\u2015",HorizontalLine:"\u2500",hscr:"\ud835\udcbd",Hscr:"\u210b",hslash:"\u210f",hstrok:"\u0127",Hstrok:"\u0126",HumpDownHump:"\u224e",HumpEqual:"\u224f",hybull:"\u2043",hyphen:"\u2010",iacute:"\xed",Iacute:"\xcd",ic:"\u2063",icirc:"\xee",Icirc:"\xce",icy:"\u0438",Icy:"\u0418",Idot:"\u0130",iecy:"\u0435",IEcy:"\u0415",iexcl:"\xa1",iff:"\u21d4",ifr:"\ud835\udd26",Ifr:"\u2111",igrave:"\xec",Igrave:"\xcc",ii:"\u2148",iiiint:"\u2a0c",iiint:"\u222d",iinfin:"\u29dc",iiota:"\u2129",ijlig:"\u0133",IJlig:"\u0132",Im:"\u2111",imacr:"\u012b",Imacr:"\u012a",image:"\u2111",ImaginaryI:"\u2148",imagline:"\u2110",imagpart:"\u2111",imath:"\u0131",imof:"\u22b7",imped:"\u01b5",Implies:"\u21d2",in:"\u2208",incare:"\u2105",infin:"\u221e",infintie:"\u29dd",inodot:"\u0131",int:"\u222b",Int:"\u222c",intcal:"\u22ba",integers:"\u2124",Integral:"\u222b",intercal:"\u22ba",Intersection:"\u22c2",intlarhk:"\u2a17",intprod:"\u2a3c",InvisibleComma:"\u2063",InvisibleTimes:"\u2062",iocy:"\u0451",IOcy:"\u0401",iogon:"\u012f",Iogon:"\u012e",iopf:"\ud835\udd5a",Iopf:"\ud835\udd40",iota:"\u03b9",Iota:"\u0399",iprod:"\u2a3c",iquest:"\xbf",iscr:"\ud835\udcbe",Iscr:"\u2110",isin:"\u2208",isindot:"\u22f5",isinE:"\u22f9",isins:"\u22f4",isinsv:"\u22f3",isinv:"\u2208",it:"\u2062",itilde:"\u0129",Itilde:"\u0128",iukcy:"\u0456",Iukcy:"\u0406",iuml:"\xef",Iuml:"\xcf",jcirc:"\u0135",Jcirc:"\u0134",jcy:"\u0439",Jcy:"\u0419",jfr:"\ud835\udd27",Jfr:"\ud835\udd0d",jmath:"\u0237",jopf:"\ud835\udd5b",Jopf:"\ud835\udd41",jscr:"\ud835\udcbf",Jscr:"\ud835\udca5",jsercy:"\u0458",Jsercy:"\u0408",jukcy:"\u0454",Jukcy:"\u0404",kappa:"\u03ba",Kappa:"\u039a",kappav:"\u03f0",kcedil:"\u0137",Kcedil:"\u0136",kcy:"\u043a",Kcy:"\u041a",kfr:"\ud835\udd28",Kfr:"\ud835\udd0e",kgreen:"\u0138",khcy:"\u0445",KHcy:"\u0425",kjcy:"\u045c",KJcy:"\u040c",kopf:"\ud835\udd5c",Kopf:"\ud835\udd42",kscr:"\ud835\udcc0",Kscr:"\ud835\udca6",lAarr:"\u21da",lacute:"\u013a",Lacute:"\u0139",laemptyv:"\u29b4",lagran:"\u2112",lambda:"\u03bb",Lambda:"\u039b",lang:"\u27e8",Lang:"\u27ea",langd:"\u2991",langle:"\u27e8",lap:"\u2a85",Laplacetrf:"\u2112",laquo:"\xab",larr:"\u2190",lArr:"\u21d0",Larr:"\u219e",larrb:"\u21e4",larrbfs:"\u291f",larrfs:"\u291d",larrhk:"\u21a9",larrlp:"\u21ab",larrpl:"\u2939",larrsim:"\u2973",larrtl:"\u21a2",lat:"\u2aab",latail:"\u2919",lAtail:"\u291b",late:"\u2aad",lates:"\u2aad\ufe00",lbarr:"\u290c",lBarr:"\u290e",lbbrk:"\u2772",lbrace:"{",lbrack:"[",lbrke:"\u298b",lbrksld:"\u298f",lbrkslu:"\u298d",lcaron:"\u013e",Lcaron:"\u013d",lcedil:"\u013c",Lcedil:"\u013b",lceil:"\u2308",lcub:"{",lcy:"\u043b",Lcy:"\u041b",ldca:"\u2936",ldquo:"\u201c",ldquor:"\u201e",ldrdhar:"\u2967",ldrushar:"\u294b",ldsh:"\u21b2",le:"\u2264",lE:"\u2266",LeftAngleBracket:"\u27e8",leftarrow:"\u2190",Leftarrow:"\u21d0",LeftArrow:"\u2190",LeftArrowBar:"\u21e4",LeftArrowRightArrow:"\u21c6",leftarrowtail:"\u21a2",LeftCeiling:"\u2308",LeftDoubleBracket:"\u27e6",LeftDownTeeVector:"\u2961",LeftDownVector:"\u21c3",LeftDownVectorBar:"\u2959",LeftFloor:"\u230a",leftharpoondown:"\u21bd",leftharpoonup:"\u21bc",leftleftarrows:"\u21c7",leftrightarrow:"\u2194",Leftrightarrow:"\u21d4",LeftRightArrow:"\u2194",leftrightarrows:"\u21c6",leftrightharpoons:"\u21cb",leftrightsquigarrow:"\u21ad",LeftRightVector:"\u294e",LeftTee:"\u22a3",LeftTeeArrow:"\u21a4",LeftTeeVector:"\u295a",leftthreetimes:"\u22cb",LeftTriangle:"\u22b2",LeftTriangleBar:"\u29cf",LeftTriangleEqual:"\u22b4",LeftUpDownVector:"\u2951",LeftUpTeeVector:"\u2960",LeftUpVector:"\u21bf",LeftUpVectorBar:"\u2958",LeftVector:"\u21bc",LeftVectorBar:"\u2952",leg:"\u22da",lEg:"\u2a8b",leq:"\u2264",leqq:"\u2266",leqslant:"\u2a7d",les:"\u2a7d",lescc:"\u2aa8",lesdot:"\u2a7f",lesdoto:"\u2a81",lesdotor:"\u2a83",lesg:"\u22da\ufe00",lesges:"\u2a93",lessapprox:"\u2a85",lessdot:"\u22d6",lesseqgtr:"\u22da",lesseqqgtr:"\u2a8b",LessEqualGreater:"\u22da",LessFullEqual:"\u2266",LessGreater:"\u2276",lessgtr:"\u2276",LessLess:"\u2aa1",lesssim:"\u2272",LessSlantEqual:"\u2a7d",LessTilde:"\u2272",lfisht:"\u297c",lfloor:"\u230a",lfr:"\ud835\udd29",Lfr:"\ud835\udd0f",lg:"\u2276",lgE:"\u2a91",lHar:"\u2962",lhard:"\u21bd",lharu:"\u21bc",lharul:"\u296a",lhblk:"\u2584",ljcy:"\u0459",LJcy:"\u0409",ll:"\u226a",Ll:"\u22d8",llarr:"\u21c7",llcorner:"\u231e",Lleftarrow:"\u21da",llhard:"\u296b",lltri:"\u25fa",lmidot:"\u0140",Lmidot:"\u013f",lmoust:"\u23b0",lmoustache:"\u23b0",lnap:"\u2a89",lnapprox:"\u2a89",lne:"\u2a87",lnE:"\u2268",lneq:"\u2a87",lneqq:"\u2268",lnsim:"\u22e6",loang:"\u27ec",loarr:"\u21fd",lobrk:"\u27e6",longleftarrow:"\u27f5",Longleftarrow:"\u27f8",LongLeftArrow:"\u27f5",longleftrightarrow:"\u27f7",Longleftrightarrow:"\u27fa",LongLeftRightArrow:"\u27f7",longmapsto:"\u27fc",longrightarrow:"\u27f6",Longrightarrow:"\u27f9",LongRightArrow:"\u27f6",looparrowleft:"\u21ab",looparrowright:"\u21ac",lopar:"\u2985",lopf:"\ud835\udd5d",Lopf:"\ud835\udd43",loplus:"\u2a2d",lotimes:"\u2a34",lowast:"\u2217",lowbar:"_",LowerLeftArrow:"\u2199",LowerRightArrow:"\u2198",loz:"\u25ca",lozenge:"\u25ca",lozf:"\u29eb",lpar:"(",lparlt:"\u2993",lrarr:"\u21c6",lrcorner:"\u231f",lrhar:"\u21cb",lrhard:"\u296d",lrm:"\u200e",lrtri:"\u22bf",lsaquo:"\u2039",lscr:"\ud835\udcc1",Lscr:"\u2112",lsh:"\u21b0",Lsh:"\u21b0",lsim:"\u2272",lsime:"\u2a8d",lsimg:"\u2a8f",lsqb:"[",lsquo:"\u2018",lsquor:"\u201a",lstrok:"\u0142",Lstrok:"\u0141",lt:"<",Lt:"\u226a",LT:"<",ltcc:"\u2aa6",ltcir:"\u2a79",ltdot:"\u22d6",lthree:"\u22cb",ltimes:"\u22c9",ltlarr:"\u2976",ltquest:"\u2a7b",ltri:"\u25c3",ltrie:"\u22b4",ltrif:"\u25c2",ltrPar:"\u2996",lurdshar:"\u294a",luruhar:"\u2966",lvertneqq:"\u2268\ufe00",lvnE:"\u2268\ufe00",macr:"\xaf",male:"\u2642",malt:"\u2720",maltese:"\u2720",map:"\u21a6",Map:"\u2905",mapsto:"\u21a6",mapstodown:"\u21a7",mapstoleft:"\u21a4",mapstoup:"\u21a5",marker:"\u25ae",mcomma:"\u2a29",mcy:"\u043c",Mcy:"\u041c",mdash:"\u2014",mDDot:"\u223a",measuredangle:"\u2221",MediumSpace:"\u205f",Mellintrf:"\u2133",mfr:"\ud835\udd2a",Mfr:"\ud835\udd10",mho:"\u2127",micro:"\xb5",mid:"\u2223",midast:"*",midcir:"\u2af0",middot:"\xb7",minus:"\u2212",minusb:"\u229f",minusd:"\u2238",minusdu:"\u2a2a",MinusPlus:"\u2213",mlcp:"\u2adb",mldr:"\u2026",mnplus:"\u2213",models:"\u22a7",mopf:"\ud835\udd5e",Mopf:"\ud835\udd44",mp:"\u2213",mscr:"\ud835\udcc2",Mscr:"\u2133",mstpos:"\u223e",mu:"\u03bc",Mu:"\u039c",multimap:"\u22b8",mumap:"\u22b8",nabla:"\u2207",nacute:"\u0144",Nacute:"\u0143",nang:"\u2220\u20d2",nap:"\u2249",napE:"\u2a70\u0338",napid:"\u224b\u0338",napos:"\u0149",napprox:"\u2249",natur:"\u266e",natural:"\u266e",naturals:"\u2115",nbsp:"\xa0",nbump:"\u224e\u0338",nbumpe:"\u224f\u0338",ncap:"\u2a43",ncaron:"\u0148",Ncaron:"\u0147",ncedil:"\u0146",Ncedil:"\u0145",ncong:"\u2247",ncongdot:"\u2a6d\u0338",ncup:"\u2a42",ncy:"\u043d",Ncy:"\u041d",ndash:"\u2013",ne:"\u2260",nearhk:"\u2924",nearr:"\u2197",neArr:"\u21d7",nearrow:"\u2197",nedot:"\u2250\u0338",NegativeMediumSpace:"\u200b",NegativeThickSpace:"\u200b",NegativeThinSpace:"\u200b",NegativeVeryThinSpace:"\u200b",nequiv:"\u2262",nesear:"\u2928",nesim:"\u2242\u0338",NestedGreaterGreater:"\u226b",NestedLessLess:"\u226a",NewLine:"\n",nexist:"\u2204",nexists:"\u2204",nfr:"\ud835\udd2b",Nfr:"\ud835\udd11",nge:"\u2271",ngE:"\u2267\u0338",ngeq:"\u2271",ngeqq:"\u2267\u0338",ngeqslant:"\u2a7e\u0338",nges:"\u2a7e\u0338",nGg:"\u22d9\u0338",ngsim:"\u2275",ngt:"\u226f",nGt:"\u226b\u20d2",ngtr:"\u226f",nGtv:"\u226b\u0338",nharr:"\u21ae",nhArr:"\u21ce",nhpar:"\u2af2",ni:"\u220b",nis:"\u22fc",nisd:"\u22fa",niv:"\u220b",njcy:"\u045a",NJcy:"\u040a",nlarr:"\u219a",nlArr:"\u21cd",nldr:"\u2025",nle:"\u2270",nlE:"\u2266\u0338",nleftarrow:"\u219a",nLeftarrow:"\u21cd",nleftrightarrow:"\u21ae",nLeftrightarrow:"\u21ce",nleq:"\u2270",nleqq:"\u2266\u0338",nleqslant:"\u2a7d\u0338",nles:"\u2a7d\u0338",nless:"\u226e",nLl:"\u22d8\u0338",nlsim:"\u2274",nlt:"\u226e",nLt:"\u226a\u20d2",nltri:"\u22ea",nltrie:"\u22ec",nLtv:"\u226a\u0338",nmid:"\u2224",NoBreak:"\u2060",NonBreakingSpace:"\xa0",nopf:"\ud835\udd5f",Nopf:"\u2115",not:"\xac",Not:"\u2aec",NotCongruent:"\u2262",NotCupCap:"\u226d",NotDoubleVerticalBar:"\u2226",NotElement:"\u2209",NotEqual:"\u2260",NotEqualTilde:"\u2242\u0338",NotExists:"\u2204",NotGreater:"\u226f",NotGreaterEqual:"\u2271",NotGreaterFullEqual:"\u2267\u0338",NotGreaterGreater:"\u226b\u0338",NotGreaterLess:"\u2279",NotGreaterSlantEqual:"\u2a7e\u0338",NotGreaterTilde:"\u2275",NotHumpDownHump:"\u224e\u0338",NotHumpEqual:"\u224f\u0338",notin:"\u2209",notindot:"\u22f5\u0338",notinE:"\u22f9\u0338",notinva:"\u2209",notinvb:"\u22f7",notinvc:"\u22f6",NotLeftTriangle:"\u22ea",NotLeftTriangleBar:"\u29cf\u0338",NotLeftTriangleEqual:"\u22ec",NotLess:"\u226e",NotLessEqual:"\u2270",NotLessGreater:"\u2278",NotLessLess:"\u226a\u0338",NotLessSlantEqual:"\u2a7d\u0338",NotLessTilde:"\u2274",NotNestedGreaterGreater:"\u2aa2\u0338",NotNestedLessLess:"\u2aa1\u0338",notni:"\u220c",notniva:"\u220c",notnivb:"\u22fe",notnivc:"\u22fd",NotPrecedes:"\u2280",NotPrecedesEqual:"\u2aaf\u0338",NotPrecedesSlantEqual:"\u22e0",NotReverseElement:"\u220c",NotRightTriangle:"\u22eb",NotRightTriangleBar:"\u29d0\u0338",NotRightTriangleEqual:"\u22ed",NotSquareSubset:"\u228f\u0338",NotSquareSubsetEqual:"\u22e2",NotSquareSuperset:"\u2290\u0338",NotSquareSupersetEqual:"\u22e3",NotSubset:"\u2282\u20d2",NotSubsetEqual:"\u2288",NotSucceeds:"\u2281",NotSucceedsEqual:"\u2ab0\u0338",NotSucceedsSlantEqual:"\u22e1",NotSucceedsTilde:"\u227f\u0338",NotSuperset:"\u2283\u20d2",NotSupersetEqual:"\u2289",NotTilde:"\u2241",NotTildeEqual:"\u2244",NotTildeFullEqual:"\u2247",NotTildeTilde:"\u2249",NotVerticalBar:"\u2224",npar:"\u2226",nparallel:"\u2226",nparsl:"\u2afd\u20e5",npart:"\u2202\u0338",npolint:"\u2a14",npr:"\u2280",nprcue:"\u22e0",npre:"\u2aaf\u0338",nprec:"\u2280",npreceq:"\u2aaf\u0338",nrarr:"\u219b",nrArr:"\u21cf",nrarrc:"\u2933\u0338",nrarrw:"\u219d\u0338",nrightarrow:"\u219b",nRightarrow:"\u21cf",nrtri:"\u22eb",nrtrie:"\u22ed",nsc:"\u2281",nsccue:"\u22e1",nsce:"\u2ab0\u0338",nscr:"\ud835\udcc3",Nscr:"\ud835\udca9",nshortmid:"\u2224",nshortparallel:"\u2226",nsim:"\u2241",nsime:"\u2244",nsimeq:"\u2244",nsmid:"\u2224",nspar:"\u2226",nsqsube:"\u22e2",nsqsupe:"\u22e3",nsub:"\u2284",nsube:"\u2288",nsubE:"\u2ac5\u0338",nsubset:"\u2282\u20d2",nsubseteq:"\u2288",nsubseteqq:"\u2ac5\u0338",nsucc:"\u2281",nsucceq:"\u2ab0\u0338",nsup:"\u2285",nsupe:"\u2289",nsupE:"\u2ac6\u0338",nsupset:"\u2283\u20d2",nsupseteq:"\u2289",nsupseteqq:"\u2ac6\u0338",ntgl:"\u2279",ntilde:"\xf1",Ntilde:"\xd1",ntlg:"\u2278",ntriangleleft:"\u22ea",ntrianglelefteq:"\u22ec",ntriangleright:"\u22eb",ntrianglerighteq:"\u22ed",nu:"\u03bd",Nu:"\u039d",num:"#",numero:"\u2116",numsp:"\u2007",nvap:"\u224d\u20d2",nvdash:"\u22ac",nvDash:"\u22ad",nVdash:"\u22ae",nVDash:"\u22af",nvge:"\u2265\u20d2",nvgt:">\u20d2",nvHarr:"\u2904",nvinfin:"\u29de",nvlArr:"\u2902",nvle:"\u2264\u20d2",nvlt:"<\u20d2",nvltrie:"\u22b4\u20d2",nvrArr:"\u2903",nvrtrie:"\u22b5\u20d2",nvsim:"\u223c\u20d2",nwarhk:"\u2923",nwarr:"\u2196",nwArr:"\u21d6",nwarrow:"\u2196",nwnear:"\u2927",oacute:"\xf3",Oacute:"\xd3",oast:"\u229b",ocir:"\u229a",ocirc:"\xf4",Ocirc:"\xd4",ocy:"\u043e",Ocy:"\u041e",odash:"\u229d",odblac:"\u0151",Odblac:"\u0150",odiv:"\u2a38",odot:"\u2299",odsold:"\u29bc",oelig:"\u0153",OElig:"\u0152",ofcir:"\u29bf",ofr:"\ud835\udd2c",Ofr:"\ud835\udd12",ogon:"\u02db",ograve:"\xf2",Ograve:"\xd2",ogt:"\u29c1",ohbar:"\u29b5",ohm:"\u03a9",oint:"\u222e",olarr:"\u21ba",olcir:"\u29be",olcross:"\u29bb",oline:"\u203e",olt:"\u29c0",omacr:"\u014d",Omacr:"\u014c",omega:"\u03c9",Omega:"\u03a9",omicron:"\u03bf",Omicron:"\u039f",omid:"\u29b6",ominus:"\u2296",oopf:"\ud835\udd60",Oopf:"\ud835\udd46",opar:"\u29b7",OpenCurlyDoubleQuote:"\u201c",OpenCurlyQuote:"\u2018",operp:"\u29b9",oplus:"\u2295",or:"\u2228",Or:"\u2a54",orarr:"\u21bb",ord:"\u2a5d",order:"\u2134",orderof:"\u2134",ordf:"\xaa",ordm:"\xba",origof:"\u22b6",oror:"\u2a56",orslope:"\u2a57",orv:"\u2a5b",oS:"\u24c8",oscr:"\u2134",Oscr:"\ud835\udcaa",oslash:"\xf8",Oslash:"\xd8",osol:"\u2298",otilde:"\xf5",Otilde:"\xd5",otimes:"\u2297",Otimes:"\u2a37",otimesas:"\u2a36",ouml:"\xf6",Ouml:"\xd6",ovbar:"\u233d",OverBar:"\u203e",OverBrace:"\u23de",OverBracket:"\u23b4",OverParenthesis:"\u23dc",par:"\u2225",para:"\xb6",parallel:"\u2225",parsim:"\u2af3",parsl:"\u2afd",part:"\u2202",PartialD:"\u2202",pcy:"\u043f",Pcy:"\u041f",percnt:"%",period:".",permil:"\u2030",perp:"\u22a5",pertenk:"\u2031",pfr:"\ud835\udd2d",Pfr:"\ud835\udd13",phi:"\u03c6",Phi:"\u03a6",phiv:"\u03d5",phmmat:"\u2133",phone:"\u260e",pi:"\u03c0",Pi:"\u03a0",pitchfork:"\u22d4",piv:"\u03d6",planck:"\u210f",planckh:"\u210e",plankv:"\u210f",plus:"+",plusacir:"\u2a23",plusb:"\u229e",pluscir:"\u2a22",plusdo:"\u2214",plusdu:"\u2a25",pluse:"\u2a72",PlusMinus:"\xb1",plusmn:"\xb1",plussim:"\u2a26",plustwo:"\u2a27",pm:"\xb1",Poincareplane:"\u210c",pointint:"\u2a15",popf:"\ud835\udd61",Popf:"\u2119",pound:"\xa3",pr:"\u227a",Pr:"\u2abb",prap:"\u2ab7",prcue:"\u227c",pre:"\u2aaf",prE:"\u2ab3",prec:"\u227a",precapprox:"\u2ab7",preccurlyeq:"\u227c",Precedes:"\u227a",PrecedesEqual:"\u2aaf",PrecedesSlantEqual:"\u227c",PrecedesTilde:"\u227e",preceq:"\u2aaf",precnapprox:"\u2ab9",precneqq:"\u2ab5",precnsim:"\u22e8",precsim:"\u227e",prime:"\u2032",Prime:"\u2033",primes:"\u2119",prnap:"\u2ab9",prnE:"\u2ab5",prnsim:"\u22e8",prod:"\u220f",Product:"\u220f",profalar:"\u232e",profline:"\u2312",profsurf:"\u2313",prop:"\u221d",Proportion:"\u2237",Proportional:"\u221d",propto:"\u221d",prsim:"\u227e",prurel:"\u22b0",pscr:"\ud835\udcc5",Pscr:"\ud835\udcab",psi:"\u03c8",Psi:"\u03a8",puncsp:"\u2008",qfr:"\ud835\udd2e",Qfr:"\ud835\udd14",qint:"\u2a0c",qopf:"\ud835\udd62",Qopf:"\u211a",qprime:"\u2057",qscr:"\ud835\udcc6",Qscr:"\ud835\udcac",quaternions:"\u210d",quatint:"\u2a16",quest:"?",questeq:"\u225f",quot:'"',QUOT:'"',rAarr:"\u21db",race:"\u223d\u0331",racute:"\u0155",Racute:"\u0154",radic:"\u221a",raemptyv:"\u29b3",rang:"\u27e9",Rang:"\u27eb",rangd:"\u2992",range:"\u29a5",rangle:"\u27e9",raquo:"\xbb",rarr:"\u2192",rArr:"\u21d2",Rarr:"\u21a0",rarrap:"\u2975",rarrb:"\u21e5",rarrbfs:"\u2920",rarrc:"\u2933",rarrfs:"\u291e",rarrhk:"\u21aa",rarrlp:"\u21ac",rarrpl:"\u2945",rarrsim:"\u2974",rarrtl:"\u21a3",Rarrtl:"\u2916",rarrw:"\u219d",ratail:"\u291a",rAtail:"\u291c",ratio:"\u2236",rationals:"\u211a",rbarr:"\u290d",rBarr:"\u290f",RBarr:"\u2910",rbbrk:"\u2773",rbrace:"}",rbrack:"]",rbrke:"\u298c",rbrksld:"\u298e",rbrkslu:"\u2990",rcaron:"\u0159",Rcaron:"\u0158",rcedil:"\u0157",Rcedil:"\u0156",rceil:"\u2309",rcub:"}",rcy:"\u0440",Rcy:"\u0420",rdca:"\u2937",rdldhar:"\u2969",rdquo:"\u201d",rdquor:"\u201d",rdsh:"\u21b3",Re:"\u211c",real:"\u211c",realine:"\u211b",realpart:"\u211c",reals:"\u211d",rect:"\u25ad",reg:"\xae",REG:"\xae",ReverseElement:"\u220b",ReverseEquilibrium:"\u21cb",ReverseUpEquilibrium:"\u296f",rfisht:"\u297d",rfloor:"\u230b",rfr:"\ud835\udd2f",Rfr:"\u211c",rHar:"\u2964",rhard:"\u21c1",rharu:"\u21c0",rharul:"\u296c",rho:"\u03c1",Rho:"\u03a1",rhov:"\u03f1",RightAngleBracket:"\u27e9",rightarrow:"\u2192",Rightarrow:"\u21d2",RightArrow:"\u2192",RightArrowBar:"\u21e5",RightArrowLeftArrow:"\u21c4",rightarrowtail:"\u21a3",RightCeiling:"\u2309",RightDoubleBracket:"\u27e7",RightDownTeeVector:"\u295d",RightDownVector:"\u21c2",RightDownVectorBar:"\u2955",RightFloor:"\u230b",rightharpoondown:"\u21c1",rightharpoonup:"\u21c0",rightleftarrows:"\u21c4",rightleftharpoons:"\u21cc",rightrightarrows:"\u21c9",rightsquigarrow:"\u219d",RightTee:"\u22a2",RightTeeArrow:"\u21a6",RightTeeVector:"\u295b",rightthreetimes:"\u22cc",RightTriangle:"\u22b3",RightTriangleBar:"\u29d0",RightTriangleEqual:"\u22b5",RightUpDownVector:"\u294f",RightUpTeeVector:"\u295c",RightUpVector:"\u21be",RightUpVectorBar:"\u2954",RightVector:"\u21c0",RightVectorBar:"\u2953",ring:"\u02da",risingdotseq:"\u2253",rlarr:"\u21c4",rlhar:"\u21cc",rlm:"\u200f",rmoust:"\u23b1",rmoustache:"\u23b1",rnmid:"\u2aee",roang:"\u27ed",roarr:"\u21fe",robrk:"\u27e7",ropar:"\u2986",ropf:"\ud835\udd63",Ropf:"\u211d",roplus:"\u2a2e",rotimes:"\u2a35",RoundImplies:"\u2970",rpar:")",rpargt:"\u2994",rppolint:"\u2a12",rrarr:"\u21c9",Rrightarrow:"\u21db",rsaquo:"\u203a",rscr:"\ud835\udcc7",Rscr:"\u211b",rsh:"\u21b1",Rsh:"\u21b1",rsqb:"]",rsquo:"\u2019",rsquor:"\u2019",rthree:"\u22cc",rtimes:"\u22ca",rtri:"\u25b9",rtrie:"\u22b5",rtrif:"\u25b8",rtriltri:"\u29ce",RuleDelayed:"\u29f4",ruluhar:"\u2968",rx:"\u211e",sacute:"\u015b",Sacute:"\u015a",sbquo:"\u201a",sc:"\u227b",Sc:"\u2abc",scap:"\u2ab8",scaron:"\u0161",Scaron:"\u0160",sccue:"\u227d",sce:"\u2ab0",scE:"\u2ab4",scedil:"\u015f",Scedil:"\u015e",scirc:"\u015d",Scirc:"\u015c",scnap:"\u2aba",scnE:"\u2ab6",scnsim:"\u22e9",scpolint:"\u2a13",scsim:"\u227f",scy:"\u0441",Scy:"\u0421",sdot:"\u22c5",sdotb:"\u22a1",sdote:"\u2a66",searhk:"\u2925",searr:"\u2198",seArr:"\u21d8",searrow:"\u2198",sect:"\xa7",semi:";",seswar:"\u2929",setminus:"\u2216",setmn:"\u2216",sext:"\u2736",sfr:"\ud835\udd30",Sfr:"\ud835\udd16",sfrown:"\u2322",sharp:"\u266f",shchcy:"\u0449",SHCHcy:"\u0429",shcy:"\u0448",SHcy:"\u0428",ShortDownArrow:"\u2193",ShortLeftArrow:"\u2190",shortmid:"\u2223",shortparallel:"\u2225",ShortRightArrow:"\u2192",ShortUpArrow:"\u2191",shy:"\xad",sigma:"\u03c3",Sigma:"\u03a3",sigmaf:"\u03c2",sigmav:"\u03c2",sim:"\u223c",simdot:"\u2a6a",sime:"\u2243",simeq:"\u2243",simg:"\u2a9e",simgE:"\u2aa0",siml:"\u2a9d",simlE:"\u2a9f",simne:"\u2246",simplus:"\u2a24",simrarr:"\u2972",slarr:"\u2190",SmallCircle:"\u2218",smallsetminus:"\u2216",smashp:"\u2a33",smeparsl:"\u29e4",smid:"\u2223",smile:"\u2323",smt:"\u2aaa",smte:"\u2aac",smtes:"\u2aac\ufe00",softcy:"\u044c",SOFTcy:"\u042c",sol:"/",solb:"\u29c4",solbar:"\u233f",sopf:"\ud835\udd64",Sopf:"\ud835\udd4a",spades:"\u2660",spadesuit:"\u2660",spar:"\u2225",sqcap:"\u2293",sqcaps:"\u2293\ufe00",sqcup:"\u2294",sqcups:"\u2294\ufe00",Sqrt:"\u221a",sqsub:"\u228f",sqsube:"\u2291",sqsubset:"\u228f",sqsubseteq:"\u2291",sqsup:"\u2290",sqsupe:"\u2292",sqsupset:"\u2290",sqsupseteq:"\u2292",squ:"\u25a1",square:"\u25a1",Square:"\u25a1",SquareIntersection:"\u2293",SquareSubset:"\u228f",SquareSubsetEqual:"\u2291",SquareSuperset:"\u2290",SquareSupersetEqual:"\u2292",SquareUnion:"\u2294",squarf:"\u25aa",squf:"\u25aa",srarr:"\u2192",sscr:"\ud835\udcc8",Sscr:"\ud835\udcae",ssetmn:"\u2216",ssmile:"\u2323",sstarf:"\u22c6",star:"\u2606",Star:"\u22c6",starf:"\u2605",straightepsilon:"\u03f5",straightphi:"\u03d5",strns:"\xaf",sub:"\u2282",Sub:"\u22d0",subdot:"\u2abd",sube:"\u2286",subE:"\u2ac5",subedot:"\u2ac3",submult:"\u2ac1",subne:"\u228a",subnE:"\u2acb",subplus:"\u2abf",subrarr:"\u2979",subset:"\u2282",Subset:"\u22d0",subseteq:"\u2286",subseteqq:"\u2ac5",SubsetEqual:"\u2286",subsetneq:"\u228a",subsetneqq:"\u2acb",subsim:"\u2ac7",subsub:"\u2ad5",subsup:"\u2ad3",succ:"\u227b",succapprox:"\u2ab8",succcurlyeq:"\u227d",Succeeds:"\u227b",SucceedsEqual:"\u2ab0",SucceedsSlantEqual:"\u227d",SucceedsTilde:"\u227f",succeq:"\u2ab0",succnapprox:"\u2aba",succneqq:"\u2ab6",succnsim:"\u22e9",succsim:"\u227f",SuchThat:"\u220b",sum:"\u2211",Sum:"\u2211",sung:"\u266a",sup:"\u2283",Sup:"\u22d1",sup1:"\xb9",sup2:"\xb2",sup3:"\xb3",supdot:"\u2abe",supdsub:"\u2ad8",supe:"\u2287",supE:"\u2ac6",supedot:"\u2ac4",Superset:"\u2283",SupersetEqual:"\u2287",suphsol:"\u27c9",suphsub:"\u2ad7",suplarr:"\u297b",supmult:"\u2ac2",supne:"\u228b",supnE:"\u2acc",supplus:"\u2ac0",supset:"\u2283",Supset:"\u22d1",supseteq:"\u2287",supseteqq:"\u2ac6",supsetneq:"\u228b",supsetneqq:"\u2acc",supsim:"\u2ac8",supsub:"\u2ad4",supsup:"\u2ad6",swarhk:"\u2926",swarr:"\u2199",swArr:"\u21d9",swarrow:"\u2199",swnwar:"\u292a",szlig:"\xdf",Tab:"\t",target:"\u2316",tau:"\u03c4",Tau:"\u03a4",tbrk:"\u23b4",tcaron:"\u0165",Tcaron:"\u0164",tcedil:"\u0163",Tcedil:"\u0162",tcy:"\u0442",Tcy:"\u0422",tdot:"\u20db",telrec:"\u2315",tfr:"\ud835\udd31",Tfr:"\ud835\udd17",there4:"\u2234",therefore:"\u2234",Therefore:"\u2234",theta:"\u03b8",Theta:"\u0398",thetasym:"\u03d1",thetav:"\u03d1",thickapprox:"\u2248",thicksim:"\u223c",ThickSpace:"\u205f\u200a",thinsp:"\u2009",ThinSpace:"\u2009",thkap:"\u2248",thksim:"\u223c",thorn:"\xfe",THORN:"\xde",tilde:"\u02dc",Tilde:"\u223c",TildeEqual:"\u2243",TildeFullEqual:"\u2245",TildeTilde:"\u2248",times:"\xd7",timesb:"\u22a0",timesbar:"\u2a31",timesd:"\u2a30",tint:"\u222d",toea:"\u2928",top:"\u22a4",topbot:"\u2336",topcir:"\u2af1",topf:"\ud835\udd65",Topf:"\ud835\udd4b",topfork:"\u2ada",tosa:"\u2929",tprime:"\u2034",trade:"\u2122",TRADE:"\u2122",triangle:"\u25b5",triangledown:"\u25bf",triangleleft:"\u25c3",trianglelefteq:"\u22b4",triangleq:"\u225c",triangleright:"\u25b9",trianglerighteq:"\u22b5",tridot:"\u25ec",trie:"\u225c",triminus:"\u2a3a",TripleDot:"\u20db",triplus:"\u2a39",trisb:"\u29cd",tritime:"\u2a3b",trpezium:"\u23e2",tscr:"\ud835\udcc9",Tscr:"\ud835\udcaf",tscy:"\u0446",TScy:"\u0426",tshcy:"\u045b",TSHcy:"\u040b",tstrok:"\u0167",Tstrok:"\u0166",twixt:"\u226c",twoheadleftarrow:"\u219e",twoheadrightarrow:"\u21a0",uacute:"\xfa",Uacute:"\xda",uarr:"\u2191",uArr:"\u21d1",Uarr:"\u219f",Uarrocir:"\u2949",ubrcy:"\u045e",Ubrcy:"\u040e",ubreve:"\u016d",Ubreve:"\u016c",ucirc:"\xfb",Ucirc:"\xdb",ucy:"\u0443",Ucy:"\u0423",udarr:"\u21c5",udblac:"\u0171",Udblac:"\u0170",udhar:"\u296e",ufisht:"\u297e",ufr:"\ud835\udd32",Ufr:"\ud835\udd18",ugrave:"\xf9",Ugrave:"\xd9",uHar:"\u2963",uharl:"\u21bf",uharr:"\u21be",uhblk:"\u2580",ulcorn:"\u231c",ulcorner:"\u231c",ulcrop:"\u230f",ultri:"\u25f8",umacr:"\u016b",Umacr:"\u016a",uml:"\xa8",UnderBar:"_",UnderBrace:"\u23df",UnderBracket:"\u23b5",UnderParenthesis:"\u23dd",Union:"\u22c3",UnionPlus:"\u228e",uogon:"\u0173",Uogon:"\u0172",uopf:"\ud835\udd66",Uopf:"\ud835\udd4c",uparrow:"\u2191",Uparrow:"\u21d1",UpArrow:"\u2191",UpArrowBar:"\u2912",UpArrowDownArrow:"\u21c5",updownarrow:"\u2195",Updownarrow:"\u21d5",UpDownArrow:"\u2195",UpEquilibrium:"\u296e",upharpoonleft:"\u21bf",upharpoonright:"\u21be",uplus:"\u228e",UpperLeftArrow:"\u2196",UpperRightArrow:"\u2197",upsi:"\u03c5",Upsi:"\u03d2",upsih:"\u03d2",upsilon:"\u03c5",Upsilon:"\u03a5",UpTee:"\u22a5",UpTeeArrow:"\u21a5",upuparrows:"\u21c8",urcorn:"\u231d",urcorner:"\u231d",urcrop:"\u230e",uring:"\u016f",Uring:"\u016e",urtri:"\u25f9",uscr:"\ud835\udcca",Uscr:"\ud835\udcb0",utdot:"\u22f0",utilde:"\u0169",Utilde:"\u0168",utri:"\u25b5",utrif:"\u25b4",uuarr:"\u21c8",uuml:"\xfc",Uuml:"\xdc",uwangle:"\u29a7",vangrt:"\u299c",varepsilon:"\u03f5",varkappa:"\u03f0",varnothing:"\u2205",varphi:"\u03d5",varpi:"\u03d6",varpropto:"\u221d",varr:"\u2195",vArr:"\u21d5",varrho:"\u03f1",varsigma:"\u03c2",varsubsetneq:"\u228a\ufe00",varsubsetneqq:"\u2acb\ufe00",varsupsetneq:"\u228b\ufe00",varsupsetneqq:"\u2acc\ufe00",vartheta:"\u03d1",vartriangleleft:"\u22b2",vartriangleright:"\u22b3",vBar:"\u2ae8",Vbar:"\u2aeb",vBarv:"\u2ae9",vcy:"\u0432",Vcy:"\u0412",vdash:"\u22a2",vDash:"\u22a8",Vdash:"\u22a9",VDash:"\u22ab",Vdashl:"\u2ae6",vee:"\u2228",Vee:"\u22c1",veebar:"\u22bb",veeeq:"\u225a",vellip:"\u22ee",verbar:"|",Verbar:"\u2016",vert:"|",Vert:"\u2016",VerticalBar:"\u2223",VerticalLine:"|",VerticalSeparator:"\u2758",VerticalTilde:"\u2240",VeryThinSpace:"\u200a",vfr:"\ud835\udd33",Vfr:"\ud835\udd19",vltri:"\u22b2",vnsub:"\u2282\u20d2",vnsup:"\u2283\u20d2",vopf:"\ud835\udd67",Vopf:"\ud835\udd4d",vprop:"\u221d",vrtri:"\u22b3",vscr:"\ud835\udccb",Vscr:"\ud835\udcb1",vsubne:"\u228a\ufe00",vsubnE:"\u2acb\ufe00",vsupne:"\u228b\ufe00",vsupnE:"\u2acc\ufe00",Vvdash:"\u22aa",vzigzag:"\u299a",wcirc:"\u0175",Wcirc:"\u0174",wedbar:"\u2a5f",wedge:"\u2227",Wedge:"\u22c0",wedgeq:"\u2259",weierp:"\u2118",wfr:"\ud835\udd34",Wfr:"\ud835\udd1a",wopf:"\ud835\udd68",Wopf:"\ud835\udd4e",wp:"\u2118",wr:"\u2240",wreath:"\u2240",wscr:"\ud835\udccc",Wscr:"\ud835\udcb2",xcap:"\u22c2",xcirc:"\u25ef",xcup:"\u22c3",xdtri:"\u25bd",xfr:"\ud835\udd35",Xfr:"\ud835\udd1b",xharr:"\u27f7",xhArr:"\u27fa",xi:"\u03be",Xi:"\u039e",xlarr:"\u27f5",xlArr:"\u27f8",xmap:"\u27fc",xnis:"\u22fb",xodot:"\u2a00",xopf:"\ud835\udd69",Xopf:"\ud835\udd4f",xoplus:"\u2a01",xotime:"\u2a02",xrarr:"\u27f6",xrArr:"\u27f9",xscr:"\ud835\udccd",Xscr:"\ud835\udcb3",xsqcup:"\u2a06",xuplus:"\u2a04",xutri:"\u25b3",xvee:"\u22c1",xwedge:"\u22c0",yacute:"\xfd",Yacute:"\xdd",yacy:"\u044f",YAcy:"\u042f",ycirc:"\u0177",Ycirc:"\u0176",ycy:"\u044b",Ycy:"\u042b",yen:"\xa5",yfr:"\ud835\udd36",Yfr:"\ud835\udd1c",yicy:"\u0457",YIcy:"\u0407",yopf:"\ud835\udd6a",Yopf:"\ud835\udd50",yscr:"\ud835\udcce",Yscr:"\ud835\udcb4",yucy:"\u044e",YUcy:"\u042e",yuml:"\xff",Yuml:"\u0178",zacute:"\u017a",Zacute:"\u0179",zcaron:"\u017e",Zcaron:"\u017d",zcy:"\u0437",Zcy:"\u0417",zdot:"\u017c",Zdot:"\u017b",zeetrf:"\u2128",ZeroWidthSpace:"\u200b",zeta:"\u03b6",Zeta:"\u0396",zfr:"\ud835\udd37",Zfr:"\u2128",zhcy:"\u0436",ZHcy:"\u0416",zigrarr:"\u21dd",zopf:"\ud835\udd6b",Zopf:"\u2124",zscr:"\ud835\udccf",Zscr:"\ud835\udcb5",zwj:"\u200d",zwnj:"\u200c"},m={aacute:"\xe1",Aacute:"\xc1",acirc:"\xe2",Acirc:"\xc2",acute:"\xb4",aelig:"\xe6",AElig:"\xc6",agrave:"\xe0",Agrave:"\xc0",amp:"&",AMP:"&",aring:"\xe5",Aring:"\xc5",atilde:"\xe3",Atilde:"\xc3",auml:"\xe4",Auml:"\xc4",brvbar:"\xa6",ccedil:"\xe7",Ccedil:"\xc7",cedil:"\xb8",cent:"\xa2",copy:"\xa9",COPY:"\xa9",curren:"\xa4",deg:"\xb0",divide:"\xf7",eacute:"\xe9",Eacute:"\xc9",ecirc:"\xea",Ecirc:"\xca",egrave:"\xe8",Egrave:"\xc8",eth:"\xf0",ETH:"\xd0",euml:"\xeb",Euml:"\xcb",frac12:"\xbd",frac14:"\xbc",frac34:"\xbe",gt:">",GT:">",iacute:"\xed",Iacute:"\xcd",icirc:"\xee",Icirc:"\xce",iexcl:"\xa1",igrave:"\xec",Igrave:"\xcc",iquest:"\xbf",iuml:"\xef",Iuml:"\xcf",laquo:"\xab",lt:"<",LT:"<",macr:"\xaf",micro:"\xb5",middot:"\xb7",nbsp:"\xa0",not:"\xac",ntilde:"\xf1",Ntilde:"\xd1",oacute:"\xf3",Oacute:"\xd3",ocirc:"\xf4",Ocirc:"\xd4",ograve:"\xf2",Ograve:"\xd2",ordf:"\xaa",ordm:"\xba",oslash:"\xf8",Oslash:"\xd8",otilde:"\xf5",Otilde:"\xd5",ouml:"\xf6",Ouml:"\xd6",para:"\xb6",plusmn:"\xb1",pound:"\xa3",quot:'"',QUOT:'"',raquo:"\xbb",reg:"\xae",REG:"\xae",sect:"\xa7",shy:"\xad",sup1:"\xb9",sup2:"\xb2",sup3:"\xb3",szlig:"\xdf",thorn:"\xfe",THORN:"\xde",times:"\xd7",uacute:"\xfa",Uacute:"\xda",ucirc:"\xfb",Ucirc:"\xdb",ugrave:"\xf9",Ugrave:"\xd9",uml:"\xa8",uuml:"\xfc",Uuml:"\xdc",yacute:"\xfd",Yacute:"\xdd",yen:"\xa5",yuml:"\xff"},g={0:"\ufffd",128:"\u20ac",130:"\u201a",131:"\u0192",132:"\u201e",133:"\u2026",134:"\u2020",135:"\u2021",136:"\u02c6",137:"\u2030",138:"\u0160",139:"\u2039",140:"\u0152",142:"\u017d",145:"\u2018",146:"\u2019",147:"\u201c",148:"\u201d",149:"\u2022",150:"\u2013",151:"\u2014",152:"\u02dc",153:"\u2122",154:"\u0161",155:"\u203a",156:"\u0153",158:"\u017e",159:"\u0178"},k=[1,2,3,4,5,6,7,8,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,64976,64977,64978,64979,64980,64981,64982,64983,64984,64985,64986,64987,64988,64989,64990,64991,64992,64993,64994,64995,64996,64997,64998,64999,65e3,65001,65002,65003,65004,65005,65006,65007,65534,65535,131070,131071,196606,196607,262142,262143,327678,327679,393214,393215,458750,458751,524286,524287,589822,589823,655358,655359,720894,720895,786430,786431,851966,851967,917502,917503,983038,983039,1048574,1048575,1114110,1114111],f=String.fromCharCode,w={}.hasOwnProperty,z=function(n,e){return w.call(n,e);},x=function(n,e){if(!n)return e;var a,h={};for(a in e)h[a]=z(n,a)?n[a]:e[a];return h;},T=function(n,e){var a="";return n>=55296&&n<=57343||n>1114111?(e&&_("character reference outside the permissible Unicode range"),"\ufffd"):z(g,n)?(e&&_("disallowed character reference"),g[n]):(e&&function(n,e){for(var a=-1,h=n.length;++a<h;)if(n[a]==e)return !0;return !1;}(k,n)&&_("disallowed character reference"),n>65535&&(a+=f((n-=65536)>>>10&1023|55296),n=56320|1023&n),a+=f(n));},E=function(n){return "&#x"+n.toString(16).toUpperCase()+";";},A=function(n){return "&#"+n+";";},_=function(n){throw Error("Parse error: "+n);},C=function(n,e){(e=x(e,C.options)).strict&&j.test(n)&&_("forbidden code point");var a=e.encodeEverything,h=e.useNamedReferences,t=e.allowUnsafeSymbols,r=e.decimal?A:E,i=function(n){return r(n.charCodeAt(0));};return a?(n=n.replace(o,function(n){return h&&z(y,n)?"&"+y[n]+";":i(n);}),h&&(n=n.replace(/&gt;\u20D2/g,"&nvgt;").replace(/&lt;\u20D2/g,"&nvlt;").replace(/&#x66;&#x6A;/g,"&fjlig;")),h&&(n=n.replace(d,function(n){return "&"+y[n]+";";}))):h?(t||(n=n.replace(u,function(n){return "&"+y[n]+";";})),n=(n=n.replace(/&gt;\u20D2/g,"&nvgt;").replace(/&lt;\u20D2/g,"&nvlt;")).replace(d,function(n){return "&"+y[n]+";";})):t||(n=n.replace(u,i)),n.replace(l,function(n){var e=n.charCodeAt(0),a=n.charCodeAt(1);return r(1024*(e-55296)+a-56320+65536);}).replace(b,i);};C.options={allowUnsafeSymbols:!1,encodeEverything:!1,strict:!1,useNamedReferences:!1,decimal:!1};var D=function(n,e){var a=(e=x(e,D.options)).strict;return a&&p.test(n)&&_("malformed character reference"),n.replace(v,function(n,h,t,r,i,s,l,o,b){var d,y,u,c,p,j;return h?S[p=h]:t?(p=t,(j=r)&&e.isAttributeValue?(a&&"="==j&&_("`&` did not start a character reference"),n):(a&&_("named character reference was not terminated by a semicolon"),m[p]+(j||""))):i?(u=i,y=s,a&&!y&&_("character reference was not terminated by a semicolon"),d=parseInt(u,10),T(d,a)):l?(c=l,y=o,a&&!y&&_("character reference was not terminated by a semicolon"),d=parseInt(c,16),T(d,a)):(a&&_("named character reference was not terminated by a semicolon"),n);});};D.options={isAttributeValue:!1,strict:!1};var L={version:"1.2.0",encode:C,decode:D,escape:function(n){return n.replace(u,function(n){return c[n];});},unescape:D};void 0===(t=function(){return L;}.call(e,a,e,n))||(n.exports=t);}();}).call(this,a(33)(n),a(51));},function(n,e,a){const{Set:h,BitSet:t}=a(2),{Token:r}=a(1),{ATNConfig:i}=a(13),{IntervalSet:s}=a(3),{RuleStopState:l}=a(5),{RuleTransition:o,NotSetTransition:b,WildcardTransition:d,AbstractPredicateTransition:y}=a(11),{predictionContextFromRuleContext:u,PredictionContext:c,SingletonPredictionContext:p}=a(6);class j{constructor(n){this.atn=n;}getDecisionLookahead(n){if(null===n)return null;const e=n.transitions.length,a=[];for(let r=0;r<e;r++){a[r]=new s();const e=new h(),i=!1;this._LOOK(n.transition(r).target,null,c.EMPTY,a[r],e,new t(),i,!1),(0===a[r].length||a[r].contains(j.HIT_PRED))&&(a[r]=null);}return a;}LOOK(n,e,a){const r=new s(),i=null!==(a=a||null)?u(n.atn,a):null;return this._LOOK(n,e,i,r,new h(),new t(),!0,!0),r;}_LOOK(n,e,a,h,t,s,u,v){const S=new i({state:n,alt:0,context:a},null);if(!t.contains(S)){if(t.add(S),n===e){if(null===a)return void h.addOne(r.EPSILON);if(a.isEmpty()&&v)return void h.addOne(r.EOF);}if(n instanceof l){if(null===a)return void h.addOne(r.EPSILON);if(a.isEmpty()&&v)return void h.addOne(r.EOF);if(a!==c.EMPTY){const r=s.contains(n.ruleIndex);try{s.remove(n.ruleIndex);for(let n=0;n<a.length;n++){const r=this.atn.states[a.getReturnState(n)];this._LOOK(r,e,a.getParent(n),h,t,s,u,v);}}finally{r&&s.add(n.ruleIndex);}return;}}for(let i=0;i<n.transitions.length;i++){const l=n.transitions[i];if(l.constructor===o){if(s.contains(l.target.ruleIndex))continue;const n=p.create(a,l.followState.stateNumber);try{s.add(l.target.ruleIndex),this._LOOK(l.target,e,n,h,t,s,u,v);}finally{s.remove(l.target.ruleIndex);}}else if(l instanceof y)u?this._LOOK(l.target,e,a,h,t,s,u,v):h.addOne(j.HIT_PRED);else if(l.isEpsilon)this._LOOK(l.target,e,a,h,t,s,u,v);else if(l.constructor===d)h.addRange(r.MIN_USER_TOKEN_TYPE,this.atn.maxTokenType);else {let n=l.label;null!==n&&(l instanceof b&&(n=n.complement(r.MIN_USER_TOKEN_TYPE,this.atn.maxTokenType)),h.addSet(n));}}}}}j.HIT_PRED=r.INVALID_TYPE,n.exports=j;},function(n,e,a){const h=a(2),{Token:t}=a(1),{ErrorNode:r,TerminalNode:i,RuleNode:s}=a(8),l={toStringTree:function(n,e,a){e=e||null,null!==(a=a||null)&&(e=a.ruleNames);let t=l.getNodeText(n,e);t=h.escapeWhitespace(t,!1);const r=n.getChildCount();if(0===r)return t;let i="("+t+" ";r>0&&(t=l.toStringTree(n.getChild(0),e),i=i.concat(t));for(let a=1;a<r;a++)t=l.toStringTree(n.getChild(a),e),i=i.concat(" "+t);return i=i.concat(")"),i;},getNodeText:function(n,e,a){if(e=e||null,null!==(a=a||null)&&(e=a.ruleNames),null!==e){if(n instanceof s){const a=n.getRuleContext().getAltNumber();return 0!=a?e[n.ruleIndex]+":"+a:e[n.ruleIndex];}if(n instanceof r)return n.toString();if(n instanceof i&&null!==n.symbol)return n.symbol.text;}const h=n.getPayload();return h instanceof t?h.text:n.getPayload().toString();},getChildren:function(n){const e=[];for(let a=0;a<n.getChildCount();a++)e.push(n.getChild(a));return e;},getAncestors:function(n){let e=[];for(n=n.getParent();null!==n;)e=[n].concat(e),n=n.getParent();return e;},findAllTokenNodes:function(n,e){return l.findAllNodes(n,e,!0);},findAllRuleNodes:function(n,e){return l.findAllNodes(n,e,!1);},findAllNodes:function(n,e,a){const h=[];return l._findAllNodes(n,e,a,h),h;},_findAllNodes:function(n,e,a,h){a&&n instanceof i?n.symbol.type===e&&h.push(n):!a&&n instanceof s&&n.ruleIndex===e&&h.push(n);for(let t=0;t<n.getChildCount();t++)l._findAllNodes(n.getChild(t),e,a,h);},descendants:function(n){let e=[n];for(let a=0;a<n.getChildCount();a++)e=e.concat(l.descendants(n.getChild(a)));return e;}};n.exports=l;},function(n,e,a){const{Token:h}=a(1),t=a(7),r=a(36),{ATNState:i,BasicState:s,DecisionState:l,BlockStartState:o,BlockEndState:b,LoopEndState:d,RuleStartState:y,RuleStopState:u,TokensStartState:c,PlusLoopbackState:p,StarLoopbackState:j,StarLoopEntryState:v,PlusBlockStartState:S,StarBlockStartState:m,BasicBlockStartState:g}=a(5),{Transition:k,AtomTransition:f,SetTransition:w,NotSetTransition:z,RuleTransition:x,RangeTransition:T,ActionTransition:E,EpsilonTransition:A,WildcardTransition:_,PredicateTransition:C,PrecedencePredicateTransition:D}=a(11),{IntervalSet:L}=a(3),R=a(24),{LexerActionType:N,LexerSkipAction:q,LexerChannelAction:P,LexerCustomAction:O,LexerMoreAction:I,LexerTypeAction:$,LexerPushModeAction:F,LexerPopModeAction:B,LexerModeAction:M}=a(25),U="59627784-3BE5-417A-B9EB-8131A7286089",H=["AADB8D7E-AEEF-4415-AD2B-8204D6CF042E",U];function V(n,e){const a=[];return a[n-1]=e,a.map(function(n){return e;});}const G=function(){const n=[];for(let e=0;e<256;e++)n[e]=(e+256).toString(16).substr(1).toUpperCase();return n;}();n.exports=class{constructor(n){null==n&&(n=R.defaultOptions),this.deserializationOptions=n,this.stateFactories=null,this.actionFactories=null;}isFeatureSupported(n,e){const a=H.indexOf(n);if(a<0)return !1;return H.indexOf(e)>=a;}deserialize(n){this.reset(n),this.checkVersion(),this.checkUUID();const e=this.readATN();this.readStates(e),this.readRules(e),this.readModes(e);const a=[];return this.readSets(e,a,this.readInt.bind(this)),this.isFeatureSupported(U,this.uuid)&&this.readSets(e,a,this.readInt32.bind(this)),this.readEdges(e,a),this.readDecisions(e),this.readLexerActions(e),this.markPrecedenceDecisions(e),this.verifyATN(e),this.deserializationOptions.generateRuleBypassTransitions&&e.grammarType===r.PARSER&&(this.generateRuleBypassTransitions(e),this.verifyATN(e)),e;}reset(n){const e=n.split("").map(function(n){const e=n.charCodeAt(0);return e>1?e-2:e+65534;});e[0]=n.charCodeAt(0),this.data=e,this.pos=0;}checkVersion(){const n=this.readInt();if(3!==n)throw "Could not deserialize ATN with version "+n+" (expected 3).";}checkUUID(){const n=this.readUUID();if(H.indexOf(n)<0)throw "59627784-3BE5-417A-B9EB-8131A7286089";this.uuid=n;}readATN(){const n=this.readInt(),e=this.readInt();return new t(n,e);}readStates(n){let e,a,h;const t=[],r=[],s=this.readInt();for(let e=0;e<s;e++){const e=this.readInt();if(e===i.INVALID_TYPE){n.addState(null);continue;}let a=this.readInt();65535===a&&(a=-1);const h=this.stateFactory(e,a);if(e===i.LOOP_END){const n=this.readInt();t.push([h,n]);}else if(h instanceof o){const n=this.readInt();r.push([h,n]);}n.addState(h);}for(e=0;e<t.length;e++)a=t[e],a[0].loopBackState=n.states[a[1]];for(e=0;e<r.length;e++)a=r[e],a[0].endState=n.states[a[1]];let l=this.readInt();for(e=0;e<l;e++)h=this.readInt(),n.states[h].nonGreedy=!0;let b=this.readInt();for(e=0;e<b;e++)h=this.readInt(),n.states[h].isPrecedenceRule=!0;}readRules(n){let e;const a=this.readInt();for(n.grammarType===r.LEXER&&(n.ruleToTokenType=V(a,0)),n.ruleToStartState=V(a,0),e=0;e<a;e++){const a=this.readInt();if(n.ruleToStartState[e]=n.states[a],n.grammarType===r.LEXER){let a=this.readInt();65535===a&&(a=h.EOF),n.ruleToTokenType[e]=a;}}for(n.ruleToStopState=V(a,0),e=0;e<n.states.length;e++){const a=n.states[e];a instanceof u&&(n.ruleToStopState[a.ruleIndex]=a,n.ruleToStartState[a.ruleIndex].stopState=a);}}readModes(n){const e=this.readInt();for(let a=0;a<e;a++){let e=this.readInt();n.modeToStartState.push(n.states[e]);}}readSets(n,e,a){const h=this.readInt();for(let n=0;n<h;n++){const n=new L();e.push(n);const h=this.readInt();0!==this.readInt()&&n.addOne(-1);for(let e=0;e<h;e++){const e=a(),h=a();n.addRange(e,h);}}}readEdges(n,e){let a,h,t,r,i;const s=this.readInt();for(a=0;a<s;a++){const a=this.readInt(),h=this.readInt(),t=this.readInt(),i=this.readInt(),s=this.readInt(),l=this.readInt();r=this.edgeFactory(n,t,a,h,i,s,l,e);n.states[a].addTransition(r);}for(a=0;a<n.states.length;a++)for(t=n.states[a],h=0;h<t.transitions.length;h++){const e=t.transitions[h];if(!(e instanceof x))continue;let a=-1;n.ruleToStartState[e.target.ruleIndex].isPrecedenceRule&&0===e.precedence&&(a=e.target.ruleIndex),r=new A(e.followState,a),n.ruleToStopState[e.target.ruleIndex].addTransition(r);}for(a=0;a<n.states.length;a++){if(t=n.states[a],t instanceof o){if(null===t.endState)throw "IllegalState";if(null!==t.endState.startState)throw "IllegalState";t.endState.startState=t;}if(t instanceof p)for(h=0;h<t.transitions.length;h++)i=t.transitions[h].target,i instanceof S&&(i.loopBackState=t);else if(t instanceof j)for(h=0;h<t.transitions.length;h++)i=t.transitions[h].target,i instanceof v&&(i.loopBackState=t);}}readDecisions(n){const e=this.readInt();for(let a=0;a<e;a++){const e=this.readInt(),h=n.states[e];n.decisionToState.push(h),h.decision=a;}}readLexerActions(n){if(n.grammarType===r.LEXER){const e=this.readInt();n.lexerActions=V(e,null);for(let a=0;a<e;a++){const e=this.readInt();let h=this.readInt();65535===h&&(h=-1);let t=this.readInt();65535===t&&(t=-1),n.lexerActions[a]=this.lexerActionFactory(e,h,t);}}}generateRuleBypassTransitions(n){let e;const a=n.ruleToStartState.length;for(e=0;e<a;e++)n.ruleToTokenType[e]=n.maxTokenType+e+1;for(e=0;e<a;e++)this.generateRuleBypassTransition(n,e);}generateRuleBypassTransition(n,e){let a,h;const t=new g();t.ruleIndex=e,n.addState(t);const r=new b();r.ruleIndex=e,n.addState(r),t.endState=r,n.defineDecisionState(t),r.startState=t;let i=null,l=null;if(n.ruleToStartState[e].isPrecedenceRule){for(l=null,a=0;a<n.states.length;a++)if(h=n.states[a],this.stateIsEndStateFor(h,e)){l=h,i=h.loopBackState.transitions[0];break;}if(null===i)throw "Couldn't identify final state of the precedence rule prefix section.";}else l=n.ruleToStopState[e];for(a=0;a<n.states.length;a++){h=n.states[a];for(let n=0;n<h.transitions.length;n++){const e=h.transitions[n];e!==i&&e.target===l&&(e.target=r);}}const o=n.ruleToStartState[e],d=o.transitions.length;for(;d>0;)t.addTransition(o.transitions[d-1]),o.transitions=o.transitions.slice(-1);n.ruleToStartState[e].addTransition(new A(t)),r.addTransition(new A(l));const y=new s();n.addState(y),y.addTransition(new f(r,n.ruleToTokenType[e])),t.addTransition(new A(y));}stateIsEndStateFor(n,e){if(n.ruleIndex!==e)return null;if(!(n instanceof v))return null;const a=n.transitions[n.transitions.length-1].target;return a instanceof d&&a.epsilonOnlyTransitions&&a.transitions[0].target instanceof u?n:null;}markPrecedenceDecisions(n){for(let e=0;e<n.states.length;e++){const a=n.states[e];if(a instanceof v&&n.ruleToStartState[a.ruleIndex].isPrecedenceRule){const n=a.transitions[a.transitions.length-1].target;n instanceof d&&n.epsilonOnlyTransitions&&n.transitions[0].target instanceof u&&(a.isPrecedenceDecision=!0);}}}verifyATN(n){if(this.deserializationOptions.verifyATN)for(let e=0;e<n.states.length;e++){const a=n.states[e];if(null!==a)if(this.checkCondition(a.epsilonOnlyTransitions||a.transitions.length<=1),a instanceof S)this.checkCondition(null!==a.loopBackState);else if(a instanceof v){if(this.checkCondition(null!==a.loopBackState),this.checkCondition(2===a.transitions.length),a.transitions[0].target instanceof m)this.checkCondition(a.transitions[1].target instanceof d),this.checkCondition(!a.nonGreedy);else {if(!(a.transitions[0].target instanceof d))throw "IllegalState";this.checkCondition(a.transitions[1].target instanceof m),this.checkCondition(a.nonGreedy);}}else a instanceof j?(this.checkCondition(1===a.transitions.length),this.checkCondition(a.transitions[0].target instanceof v)):a instanceof d?this.checkCondition(null!==a.loopBackState):a instanceof y?this.checkCondition(null!==a.stopState):a instanceof o?this.checkCondition(null!==a.endState):a instanceof b?this.checkCondition(null!==a.startState):a instanceof l?this.checkCondition(a.transitions.length<=1||a.decision>=0):this.checkCondition(a.transitions.length<=1||a instanceof u);}}checkCondition(n,e){if(!n)throw null==e&&(e="IllegalState"),e;}readInt(){return this.data[this.pos++];}readInt32(){return this.readInt()|this.readInt()<<16;}readLong(){return 4294967295&this.readInt32()|this.readInt32()<<32;}readUUID(){const n=[];for(let e=7;e>=0;e--){const a=this.readInt();n[2*e+1]=255&a,n[2*e]=a>>8&255;}return G[n[0]]+G[n[1]]+G[n[2]]+G[n[3]]+"-"+G[n[4]]+G[n[5]]+"-"+G[n[6]]+G[n[7]]+"-"+G[n[8]]+G[n[9]]+"-"+G[n[10]]+G[n[11]]+G[n[12]]+G[n[13]]+G[n[14]]+G[n[15]];}edgeFactory(n,e,a,t,r,i,s,l){const o=n.states[t];switch(e){case k.EPSILON:return new A(o);case k.RANGE:return new T(o,0!==s?h.EOF:r,i);case k.RULE:return new x(n.states[r],i,s,o);case k.PREDICATE:return new C(o,r,i,0!==s);case k.PRECEDENCE:return new D(o,r);case k.ATOM:return new f(o,0!==s?h.EOF:r);case k.ACTION:return new E(o,r,i,0!==s);case k.SET:return new w(o,l[r]);case k.NOT_SET:return new z(o,l[r]);case k.WILDCARD:return new _(o);default:throw "The specified transition type: "+e+" is not valid.";}}stateFactory(n,e){if(null===this.stateFactories){const n=[];n[i.INVALID_TYPE]=null,n[i.BASIC]=()=>new s(),n[i.RULE_START]=()=>new y(),n[i.BLOCK_START]=()=>new g(),n[i.PLUS_BLOCK_START]=()=>new S(),n[i.STAR_BLOCK_START]=()=>new m(),n[i.TOKEN_START]=()=>new c(),n[i.RULE_STOP]=()=>new u(),n[i.BLOCK_END]=()=>new b(),n[i.STAR_LOOP_BACK]=()=>new j(),n[i.STAR_LOOP_ENTRY]=()=>new v(),n[i.PLUS_LOOP_BACK]=()=>new p(),n[i.LOOP_END]=()=>new d(),this.stateFactories=n;}if(n>this.stateFactories.length||null===this.stateFactories[n])throw "The specified state type "+n+" is not valid.";{const a=this.stateFactories[n]();if(null!==a)return a.ruleIndex=e,a;}}lexerActionFactory(n,e,a){if(null===this.actionFactories){const n=[];n[N.CHANNEL]=(n,e)=>new P(n),n[N.CUSTOM]=(n,e)=>new O(n,e),n[N.MODE]=(n,e)=>new M(n),n[N.MORE]=(n,e)=>I.INSTANCE,n[N.POP_MODE]=(n,e)=>B.INSTANCE,n[N.PUSH_MODE]=(n,e)=>new F(n),n[N.SKIP]=(n,e)=>q.INSTANCE,n[N.TYPE]=(n,e)=>new $(n),this.actionFactories=n;}if(n>this.actionFactories.length||null===this.actionFactories[n])throw "The specified lexer action type "+n+" is not valid.";return this.actionFactories[n](e,a);}};},function(n,e){class a{constructor(n){void 0===n&&(n=null),this.readOnly=!1,this.verifyATN=null===n||n.verifyATN,this.generateRuleBypassTransitions=null!==n&&n.generateRuleBypassTransitions;}}a.defaultOptions=new a(),a.defaultOptions.readOnly=!0,n.exports=a;},function(n,e){const a={CHANNEL:0,CUSTOM:1,MODE:2,MORE:3,POP_MODE:4,PUSH_MODE:5,SKIP:6,TYPE:7};class h{constructor(n){this.actionType=n,this.isPositionDependent=!1;}hashCode(){const n=new Hash();return this.updateHashCode(n),n.finish();}updateHashCode(n){n.update(this.actionType);}equals(n){return this===n;}}class t extends h{constructor(){super(a.SKIP);}execute(n){n.skip();}toString(){return "skip";}}t.INSTANCE=new t();class r extends h{constructor(n){super(a.TYPE),this.type=n;}execute(n){n.type=this.type;}updateHashCode(n){n.update(this.actionType,this.type);}equals(n){return this===n||n instanceof r&&this.type===n.type;}toString(){return "type("+this.type+")";}}class i extends h{constructor(n){super(a.PUSH_MODE),this.mode=n;}execute(n){n.pushMode(this.mode);}updateHashCode(n){n.update(this.actionType,this.mode);}equals(n){return this===n||n instanceof i&&this.mode===n.mode;}toString(){return "pushMode("+this.mode+")";}}class s extends h{constructor(){super(a.POP_MODE);}execute(n){n.popMode();}toString(){return "popMode";}}s.INSTANCE=new s();class l extends h{constructor(){super(a.MORE);}execute(n){n.more();}toString(){return "more";}}l.INSTANCE=new l();class o extends h{constructor(n){super(a.MODE),this.mode=n;}execute(n){n.mode(this.mode);}updateHashCode(n){n.update(this.actionType,this.mode);}equals(n){return this===n||n instanceof o&&this.mode===n.mode;}toString(){return "mode("+this.mode+")";}}class b extends h{constructor(n,e){super(a.CUSTOM),this.ruleIndex=n,this.actionIndex=e,this.isPositionDependent=!0;}execute(n){n.action(null,this.ruleIndex,this.actionIndex);}updateHashCode(n){n.update(this.actionType,this.ruleIndex,this.actionIndex);}equals(n){return this===n||n instanceof b&&this.ruleIndex===n.ruleIndex&&this.actionIndex===n.actionIndex;}}class d extends h{constructor(n){super(a.CHANNEL),this.channel=n;}execute(n){n._channel=this.channel;}updateHashCode(n){n.update(this.actionType,this.channel);}equals(n){return this===n||n instanceof d&&this.channel===n.channel;}toString(){return "channel("+this.channel+")";}}class y extends h{constructor(n,e){super(e.actionType),this.offset=n,this.action=e,this.isPositionDependent=!0;}execute(n){this.action.execute(n);}updateHashCode(n){n.update(this.actionType,this.offset,this.action);}equals(n){return this===n||n instanceof y&&this.offset===n.offset&&this.action===n.action;}}n.exports={LexerActionType:a,LexerSkipAction:t,LexerChannelAction:d,LexerCustomAction:b,LexerIndexedCustomAction:y,LexerMoreAction:l,LexerTypeAction:r,LexerPushModeAction:i,LexerPopModeAction:s,LexerModeAction:o};},function(n,e,a){const{Token:h}=a(1),{ConsoleErrorListener:t}=a(15),{ProxyErrorListener:r}=a(15);class i{constructor(){this._listeners=[t.INSTANCE],this._interp=null,this._stateNumber=-1;}checkVersion(n){"4.9.1"!==n&&console.log("ANTLR runtime and generated code versions disagree: 4.9.1!="+n);}addErrorListener(n){this._listeners.push(n);}removeErrorListeners(){this._listeners=[];}getTokenTypeMap(){const n=this.getTokenNames();if(null===n)throw "The current recognizer does not provide a list of token names.";let e=this.tokenTypeMapCache[n];return void 0===e&&(e=n.reduce(function(n,e,a){n[e]=a;}),e.EOF=h.EOF,this.tokenTypeMapCache[n]=e),e;}getRuleIndexMap(){const n=this.ruleNames;if(null===n)throw "The current recognizer does not provide a list of rule names.";let e=this.ruleIndexMapCache[n];return void 0===e&&(e=n.reduce(function(n,e,a){n[e]=a;}),this.ruleIndexMapCache[n]=e),e;}getTokenType(n){const e=this.getTokenTypeMap()[n];return void 0!==e?e:h.INVALID_TYPE;}getErrorHeader(n){return "line "+n.getOffendingToken().line+":"+n.getOffendingToken().column;}getTokenErrorDisplay(n){if(null===n)return "<no token>";let e=n.text;return null===e&&(e=n.type===h.EOF?"<EOF>":"<"+n.type+">"),e=e.replace("\n","\\n").replace("\r","\\r").replace("\t","\\t"),"'"+e+"'";}getErrorListenerDispatch(){return new r(this._listeners);}sempred(n,e,a){return !0;}precpred(n,e){return !0;}get state(){return this._stateNumber;}set state(n){this._stateNumber=n;}}i.tokenTypeMapCache={},i.ruleIndexMapCache={},n.exports=i;},function(n,e,a){const{DFAState:h}=a(12),{ATNConfigSet:t}=a(9),{getCachedPredictionContext:r}=a(6),{Map:i}=a(2);class s{constructor(n,e){return this.atn=n,this.sharedContextCache=e,this;}getCachedContext(n){if(null===this.sharedContextCache)return n;const e=new i();return r(n,this.sharedContextCache,e);}}s.ERROR=new h(2147483647,new t()),n.exports=s;},function(n,e,a){const{Map:h,BitSet:t,AltDict:r,hashStuff:i}=a(2),s=a(7),{RuleStopState:l}=a(5),{ATNConfigSet:o}=a(9),{ATNConfig:b}=a(13),{SemanticContext:d}=a(10),y={SLL:0,LL:1,LL_EXACT_AMBIG_DETECTION:2,hasSLLConflictTerminatingPrediction:function(n,e){if(y.allConfigsInRuleStopStates(e))return !0;if(n===y.SLL&&e.hasSemanticContext){const n=new o();for(let a=0;a<e.items.length;a++){let h=e.items[a];h=new b({semanticContext:d.NONE},h),n.add(h);}e=n;}const a=y.getConflictingAltSubsets(e);return y.hasConflictingAltSet(a)&&!y.hasStateAssociatedWithOneAlt(e);},hasConfigInRuleStopState:function(n){for(let e=0;e<n.items.length;e++){if(n.items[e].state instanceof l)return !0;}return !1;},allConfigsInRuleStopStates:function(n){for(let e=0;e<n.items.length;e++){if(!(n.items[e].state instanceof l))return !1;}return !0;},resolvesToJustOneViableAlt:function(n){return y.getSingleViableAlt(n);},allSubsetsConflict:function(n){return !y.hasNonConflictingAltSet(n);},hasNonConflictingAltSet:function(n){for(let e=0;e<n.length;e++){if(1===n[e].length)return !0;}return !1;},hasConflictingAltSet:function(n){for(let e=0;e<n.length;e++){if(n[e].length>1)return !0;}return !1;},allSubsetsEqual:function(n){let e=null;for(let a=0;a<n.length;a++){const h=n[a];if(null===e)e=h;else if(h!==e)return !1;}return !0;},getUniqueAlt:function(n){const e=y.getAlts(n);return 1===e.length?e.minValue():s.INVALID_ALT_NUMBER;},getAlts:function(n){const e=new t();return n.map(function(n){e.or(n);}),e;},getConflictingAltSubsets:function(n){const e=new h();return e.hashFunction=function(n){i(n.state.stateNumber,n.context);},e.equalsFunction=function(n,e){return n.state.stateNumber===e.state.stateNumber&&n.context.equals(e.context);},n.items.map(function(n){let a=e.get(n);null===a&&(a=new t(),e.put(n,a)),a.add(n.alt);}),e.getValues();},getStateToAltMap:function(n){const e=new r();return n.items.map(function(n){let a=e.get(n.state);null===a&&(a=new t(),e.put(n.state,a)),a.add(n.alt);}),e;},hasStateAssociatedWithOneAlt:function(n){const e=y.getStateToAltMap(n).values();for(let n=0;n<e.length;n++)if(1===e[n].length)return !0;return !1;},getSingleViableAlt:function(n){let e=null;for(let a=0;a<n.length;a++){const h=n[a].minValue();if(null===e)e=h;else if(e!==h)return s.INVALID_ALT_NUMBER;}return e;}};n.exports=y;},function(n,e,a){const h=a(17),t=a(8),r=t.INVALID_INTERVAL,i=t.TerminalNode,s=t.TerminalNodeImpl,l=t.ErrorNodeImpl,o=a(3).Interval;class b extends h{constructor(n,e){super(n=n||null,e=e||null),this.ruleIndex=-1,this.children=null,this.start=null,this.stop=null,this.exception=null;}copyFrom(n){this.parentCtx=n.parentCtx,this.invokingState=n.invokingState,this.children=null,this.start=n.start,this.stop=n.stop,n.children&&(this.children=[],n.children.map(function(n){n instanceof l&&(this.children.push(n),n.parentCtx=this);},this));}enterRule(n){}exitRule(n){}addChild(n){return null===this.children&&(this.children=[]),this.children.push(n),n;}removeLastChild(){null!==this.children&&this.children.pop();}addTokenNode(n){const e=new s(n);return this.addChild(e),e.parentCtx=this,e;}addErrorNode(n){const e=new l(n);return this.addChild(e),e.parentCtx=this,e;}getChild(n,e){if(e=e||null,null===this.children||n<0||n>=this.children.length)return null;if(null===e)return this.children[n];for(let a=0;a<this.children.length;a++){const h=this.children[a];if(h instanceof e){if(0===n)return h;n-=1;}}return null;}getToken(n,e){if(null===this.children||e<0||e>=this.children.length)return null;for(let a=0;a<this.children.length;a++){const h=this.children[a];if(h instanceof i&&h.symbol.type===n){if(0===e)return h;e-=1;}}return null;}getTokens(n){if(null===this.children)return [];{const e=[];for(let a=0;a<this.children.length;a++){const h=this.children[a];h instanceof i&&h.symbol.type===n&&e.push(h);}return e;}}getTypedRuleContext(n,e){return this.getChild(e,n);}getTypedRuleContexts(n){if(null===this.children)return [];{const e=[];for(let a=0;a<this.children.length;a++){const h=this.children[a];h instanceof n&&e.push(h);}return e;}}getChildCount(){return null===this.children?0:this.children.length;}getSourceInterval(){return null===this.start||null===this.stop?r:new o(this.start.tokenIndex,this.stop.tokenIndex);}}h.EMPTY=new b();n.exports=b;},function(n,e){/*! https://mths.be/codepointat v0.2.0 by @mathias */String.prototype.codePointAt||function(){var n=function(){let n;try{const e={},a=Object.defineProperty;n=a(e,e,e)&&a;}catch(n){}return n;}();const e=function(n){if(null==this)throw TypeError();const e=String(this),a=e.length;let h=n?Number(n):0;if(h!=h&&(h=0),h<0||h>=a)return;const t=e.charCodeAt(h);let r;return t>=55296&&t<=56319&&a>h+1&&(r=e.charCodeAt(h+1),r>=56320&&r<=57343)?1024*(t-55296)+r-56320+65536:t;};n?n(String.prototype,"codePointAt",{value:e,configurable:!0,writable:!0}):String.prototype.codePointAt=e;}();},function(n,e){/*! https://mths.be/fromcodepoint v0.2.1 by @mathias */String.fromCodePoint||function(){const n=function(){let n;try{const e={},a=Object.defineProperty;n=a(e,e,e)&&a;}catch(n){}return n;}(),e=String.fromCharCode,a=Math.floor,h=function(n){const h=16384,t=[];let r,i,s=-1;const l=arguments.length;if(!l)return "";let o="";for(;++s<l;){let n=Number(arguments[s]);if(!isFinite(n)||n<0||n>1114111||a(n)!==n)throw RangeError("Invalid code point: "+n);n<=65535?t.push(n):(n-=65536,r=55296+(n>>10),i=n%1024+56320,t.push(r,i)),(s+1===l||t.length>h)&&(o+=e.apply(null,t),t.length=0);}return o;};n?n(String,"fromCodePoint",{value:h,configurable:!0,writable:!0}):String.fromCodePoint=h;}();},function(n,e){},function(n,e){n.exports=function(n){return n.webpackPolyfill||(n.deprecate=function(){},n.paths=[],n.children||(n.children=[]),Object.defineProperty(n,"loaded",{enumerable:!0,get:function(){return n.l;}}),Object.defineProperty(n,"id",{enumerable:!0,get:function(){return n.i;}}),n.webpackPolyfill=1),n;};},function(n,e,a){var h=function(n){return function(n){return !!n&&"object"==typeof n;}(n)&&!function(n){var e=Object.prototype.toString.call(n);return "[object RegExp]"===e||"[object Date]"===e||function(n){return n.$$typeof===t;}(n);}(n);};var t="function"==typeof Symbol&&Symbol.for?Symbol.for("react.element"):60103;function r(n,e){return !1!==e.clone&&e.isMergeableObject(n)?b((a=n,Array.isArray(a)?[]:{}),n,e):n;var a;}function i(n,e,a){return n.concat(e).map(function(n){return r(n,a);});}function s(n){return Object.keys(n).concat(function(n){return Object.getOwnPropertySymbols?Object.getOwnPropertySymbols(n).filter(function(e){return n.propertyIsEnumerable(e);}):[];}(n));}function l(n,e){try{return e in n;}catch(n){return !1;}}function o(n,e,a){var h={};return a.isMergeableObject(n)&&s(n).forEach(function(e){h[e]=r(n[e],a);}),s(e).forEach(function(t){(function(n,e){return l(n,e)&&!(Object.hasOwnProperty.call(n,e)&&Object.propertyIsEnumerable.call(n,e));})(n,t)||(l(n,t)&&a.isMergeableObject(e[t])?h[t]=function(n,e){if(!e.customMerge)return b;var a=e.customMerge(n);return "function"==typeof a?a:b;}(t,a)(n[t],e[t],a):h[t]=r(e[t],a));}),h;}function b(n,e,a){(a=a||{}).arrayMerge=a.arrayMerge||i,a.isMergeableObject=a.isMergeableObject||h,a.cloneUnlessOtherwiseSpecified=r;var t=Array.isArray(e);return t===Array.isArray(n)?t?a.arrayMerge(n,e,a):o(n,e,a):r(e,a);}b.all=function(n,e){if(!Array.isArray(n))throw new Error("first argument should be an array");return n.reduce(function(n,a){return b(n,a,e);},{});};var d=b;n.exports=d;},function(n,e,a){e.ATN=a(7),e.ATNDeserializer=a(23),e.LexerATNSimulator=a(37),e.ParserATNSimulator=a(40),e.PredictionMode=a(28);},function(n,e){n.exports={LEXER:0,PARSER:1};},function(n,e,a){const{Token:h}=a(1),t=a(14),r=a(7),i=a(27),{DFAState:s}=a(12),{OrderedATNConfigSet:l}=a(9),{PredictionContext:o}=a(6),{SingletonPredictionContext:b}=a(6),{RuleStopState:d}=a(5),{LexerATNConfig:y}=a(13),{Transition:u}=a(11),c=a(39),{LexerNoViableAltException:p}=a(4);function j(n){n.index=-1,n.line=0,n.column=-1,n.dfaState=null;}class v{constructor(){j(this);}reset(){j(this);}}class S extends i{constructor(n,e,a,h){super(e,h),this.decisionToDFA=a,this.recog=n,this.startIndex=-1,this.line=1,this.column=0,this.mode=t.DEFAULT_MODE,this.prevAccept=new v();}copyState(n){this.column=n.column,this.line=n.line,this.mode=n.mode,this.startIndex=n.startIndex;}match(n,e){this.match_calls+=1,this.mode=e;const a=n.mark();try{this.startIndex=n.index,this.prevAccept.reset();const h=this.decisionToDFA[e];return null===h.s0?this.matchATN(n):this.execATN(n,h.s0);}finally{n.release(a);}}reset(){this.prevAccept.reset(),this.startIndex=-1,this.line=1,this.column=0,this.mode=t.DEFAULT_MODE;}matchATN(n){const e=this.atn.modeToStartState[this.mode];S.debug&&console.log("matchATN mode "+this.mode+" start: "+e);const a=this.mode,h=this.computeStartState(n,e),t=h.hasSemanticContext;h.hasSemanticContext=!1;const r=this.addDFAState(h);t||(this.decisionToDFA[this.mode].s0=r);const i=this.execATN(n,r);return S.debug&&console.log("DFA after matchATN: "+this.decisionToDFA[a].toLexerString()),i;}execATN(n,e){S.debug&&console.log("start state closure="+e.configs),e.isAcceptState&&this.captureSimState(this.prevAccept,n,e);let a=n.LA(1),t=e;for(;;){S.debug&&console.log("execATN loop starting closure: "+t.configs);let e=this.getExistingTargetState(t,a);if(null===e&&(e=this.computeTargetState(n,t,a)),e===i.ERROR)break;if(a!==h.EOF&&this.consume(n),e.isAcceptState&&(this.captureSimState(this.prevAccept,n,e),a===h.EOF))break;a=n.LA(1),t=e;}return this.failOrAccept(this.prevAccept,n,t.configs,a);}getExistingTargetState(n,e){if(null===n.edges||e<S.MIN_DFA_EDGE||e>S.MAX_DFA_EDGE)return null;let a=n.edges[e-S.MIN_DFA_EDGE];return void 0===a&&(a=null),S.debug&&null!==a&&console.log("reuse state "+n.stateNumber+" edge to "+a.stateNumber),a;}computeTargetState(n,e,a){const h=new l();return this.getReachableConfigSet(n,e.configs,h,a),0===h.items.length?(h.hasSemanticContext||this.addDFAEdge(e,a,i.ERROR),i.ERROR):this.addDFAEdge(e,a,null,h);}failOrAccept(n,e,a,t){if(null!==this.prevAccept.dfaState){const a=n.dfaState.lexerActionExecutor;return this.accept(e,a,this.startIndex,n.index,n.line,n.column),n.dfaState.prediction;}if(t===h.EOF&&e.index===this.startIndex)return h.EOF;throw new p(this.recog,e,this.startIndex,a);}getReachableConfigSet(n,e,a,t){let i=r.INVALID_ALT_NUMBER;for(let r=0;r<e.items.length;r++){const s=e.items[r],l=s.alt===i;if(!l||!s.passedThroughNonGreedyDecision){S.debug&&console.log("testing %s at %s\n",this.getTokenName(t),s.toString(this.recog,!0));for(let e=0;e<s.state.transitions.length;e++){const r=s.state.transitions[e],o=this.getReachableTarget(r,t);if(null!==o){let e=s.lexerActionExecutor;null!==e&&(e=e.fixOffsetBeforeMatch(n.index-this.startIndex));const r=t===h.EOF,b=new y({state:o,lexerActionExecutor:e},s);this.closure(n,b,a,l,!0,r)&&(i=s.alt);}}}}}accept(n,e,a,h,t,r){S.debug&&console.log("ACTION %s\n",e),n.seek(h),this.line=t,this.column=r,null!==e&&null!==this.recog&&e.execute(this.recog,n,a);}getReachableTarget(n,e){return n.matches(e,0,t.MAX_CHAR_VALUE)?n.target:null;}computeStartState(n,e){const a=o.EMPTY,h=new l();for(let t=0;t<e.transitions.length;t++){const r=e.transitions[t].target,i=new y({state:r,alt:t+1,context:a},null);this.closure(n,i,h,!1,!1,!1);}return h;}closure(n,e,a,h,t,r){let i=null;if(S.debug&&console.log("closure("+e.toString(this.recog,!0)+")"),e.state instanceof d){if(S.debug&&(null!==this.recog?console.log("closure at %s rule stop %s\n",this.recog.ruleNames[e.state.ruleIndex],e):console.log("closure at rule stop %s\n",e)),null===e.context||e.context.hasEmptyPath()){if(null===e.context||e.context.isEmpty())return a.add(e),!0;a.add(new y({state:e.state,context:o.EMPTY},e)),h=!0;}if(null!==e.context&&!e.context.isEmpty())for(let s=0;s<e.context.length;s++)if(e.context.getReturnState(s)!==o.EMPTY_RETURN_STATE){const l=e.context.getParent(s),o=this.atn.states[e.context.getReturnState(s)];i=new y({state:o,context:l},e),h=this.closure(n,i,a,h,t,r);}return h;}e.state.epsilonOnlyTransitions||h&&e.passedThroughNonGreedyDecision||a.add(e);for(let s=0;s<e.state.transitions.length;s++){const l=e.state.transitions[s];i=this.getEpsilonTarget(n,e,l,a,t,r),null!==i&&(h=this.closure(n,i,a,h,t,r));}return h;}getEpsilonTarget(n,e,a,r,i,s){let l=null;if(a.serializationType===u.RULE){const n=b.create(e.context,a.followState.stateNumber);l=new y({state:a.target,context:n},e);}else {if(a.serializationType===u.PRECEDENCE)throw "Precedence predicates are not supported in lexers.";if(a.serializationType===u.PREDICATE)S.debug&&console.log("EVAL rule "+a.ruleIndex+":"+a.predIndex),r.hasSemanticContext=!0,this.evaluatePredicate(n,a.ruleIndex,a.predIndex,i)&&(l=new y({state:a.target},e));else if(a.serializationType===u.ACTION){if(null===e.context||e.context.hasEmptyPath()){const n=c.append(e.lexerActionExecutor,this.atn.lexerActions[a.actionIndex]);l=new y({state:a.target,lexerActionExecutor:n},e);}else l=new y({state:a.target},e);}else a.serializationType===u.EPSILON?l=new y({state:a.target},e):a.serializationType!==u.ATOM&&a.serializationType!==u.RANGE&&a.serializationType!==u.SET||s&&a.matches(h.EOF,0,t.MAX_CHAR_VALUE)&&(l=new y({state:a.target},e));}return l;}evaluatePredicate(n,e,a,h){if(null===this.recog)return !0;if(!h)return this.recog.sempred(null,e,a);const t=this.column,r=this.line,i=n.index,s=n.mark();try{return this.consume(n),this.recog.sempred(null,e,a);}finally{this.column=t,this.line=r,n.seek(i),n.release(s);}}captureSimState(n,e,a){n.index=e.index,n.line=this.line,n.column=this.column,n.dfaState=a;}addDFAEdge(n,e,a,h){if(void 0===a&&(a=null),void 0===h&&(h=null),null===a&&null!==h){const n=h.hasSemanticContext;if(h.hasSemanticContext=!1,a=this.addDFAState(h),n)return a;}return e<S.MIN_DFA_EDGE||e>S.MAX_DFA_EDGE||(S.debug&&console.log("EDGE "+n+" -> "+a+" upon "+e),null===n.edges&&(n.edges=[]),n.edges[e-S.MIN_DFA_EDGE]=a),a;}addDFAState(n){const e=new s(null,n);let a=null;for(let e=0;e<n.items.length;e++){const h=n.items[e];if(h.state instanceof d){a=h;break;}}null!==a&&(e.isAcceptState=!0,e.lexerActionExecutor=a.lexerActionExecutor,e.prediction=this.atn.ruleToTokenType[a.state.ruleIndex]);const h=this.decisionToDFA[this.mode],t=h.states.get(e);if(null!==t)return t;const r=e;return r.stateNumber=h.states.length,n.setReadonly(!0),r.configs=n,h.states.add(r),r;}getDFA(n){return this.decisionToDFA[n];}getText(n){return n.getText(this.startIndex,n.index-1);}consume(n){n.LA(1)==="\n".charCodeAt(0)?(this.line+=1,this.column=0):this.column+=1,n.consume();}getTokenName(n){return -1===n?"EOF":"'"+String.fromCharCode(n)+"'";}}S.debug=!1,S.dfa_debug=!1,S.MIN_DFA_EDGE=0,S.MAX_DFA_EDGE=127,S.match_calls=0,n.exports=S;},function(n,e,a){const h=a(1).CommonToken;class t extends class{}{constructor(n){super(),this.copyText=void 0!==n&&n;}create(n,e,a,t,r,i,s,l){const o=new h(n,e,t,r,i);return o.line=s,o.column=l,null!==a?o.text=a:this.copyText&&null!==n[1]&&(o.text=n[1].getText(r,i)),o;}createThin(n,e){const a=new h(null,n);return a.text=e,a;}}t.DEFAULT=new t(),n.exports=t;},function(n,e,a){const{hashStuff:h}=a(2),{LexerIndexedCustomAction:t}=a(25);class r{constructor(n){return this.lexerActions=null===n?[]:n,this.cachedHashCode=h(n),this;}fixOffsetBeforeMatch(n){let e=null;for(let a=0;a<this.lexerActions.length;a++)!this.lexerActions[a].isPositionDependent||this.lexerActions[a]instanceof t||(null===e&&(e=this.lexerActions.concat([])),e[a]=new t(n,this.lexerActions[a]));return null===e?this:new r(e);}execute(n,e,a){let h=!1;const r=e.index;try{for(let i=0;i<this.lexerActions.length;i++){let s=this.lexerActions[i];if(s instanceof t){const n=s.offset;e.seek(a+n),s=s.action,h=a+n!==r;}else s.isPositionDependent&&(e.seek(r),h=!1);s.execute(n);}}finally{h&&e.seek(r);}}hashCode(){return this.cachedHashCode;}updateHashCode(n){n.update(this.cachedHashCode);}equals(n){if(this===n)return !0;if(n instanceof r){if(this.cachedHashCode!=n.cachedHashCode)return !1;if(this.lexerActions.length!=n.lexerActions.length)return !1;{const e=this.lexerActions.length;for(let a=0;a<e;++a)if(!this.lexerActions[a].equals(n.lexerActions[a]))return !1;return !0;}}return !1;}static append(n,e){if(null===n)return new r([e]);const a=n.lexerActions.concat([e]);return new r(a);}}n.exports=r;},function(n,e,a){const h=a(2),{Set:t,BitSet:r,DoubleDict:i}=h,s=a(7),{ATNState:l,RuleStopState:o}=a(5),{ATNConfig:b}=a(13),{ATNConfigSet:d}=a(9),{Token:y}=a(1),{DFAState:u,PredPrediction:c}=a(12),p=a(27),j=a(28),v=a(17),{SemanticContext:S}=(a(29),a(10)),{PredictionContext:m}=a(6),{Interval:g}=a(3),{Transition:k,SetTransition:f,NotSetTransition:w,RuleTransition:z,ActionTransition:x}=a(11),{NoViableAltException:T}=a(4),{SingletonPredictionContext:E,predictionContextFromRuleContext:A}=a(6);n.exports=class extends p{constructor(n,e,a,h){super(e,h),this.parser=n,this.decisionToDFA=a,this.predictionMode=j.LL,this._input=null,this._startIndex=0,this._outerContext=null,this._dfa=null,this.mergeCache=null,this.debug=!1,this.debug_closure=!1,this.debug_add=!1,this.debug_list_atn_decisions=!1,this.dfa_debug=!1,this.retry_debug=!1;}reset(){}adaptivePredict(n,e,a){(this.debug||this.debug_list_atn_decisions)&&console.log("adaptivePredict decision "+e+" exec LA(1)=="+this.getLookaheadName(n)+" line "+n.LT(1).line+":"+n.LT(1).column),this._input=n,this._startIndex=n.index,this._outerContext=a;const h=this.decisionToDFA[e];this._dfa=h;const t=n.mark(),r=n.index;try{let e;if(e=h.precedenceDfa?h.getPrecedenceStartState(this.parser.getPrecedence()):h.s0,null===e){null===a&&(a=v.EMPTY),(this.debug||this.debug_list_atn_decisions)&&console.log("predictATN decision "+h.decision+" exec LA(1)=="+this.getLookaheadName(n)+", outerContext="+a.toString(this.parser.ruleNames));const t=!1;let r=this.computeStartState(h.atnStartState,v.EMPTY,t);h.precedenceDfa?(h.s0.configs=r,r=this.applyPrecedenceFilter(r),e=this.addDFAState(h,new u(null,r)),h.setPrecedenceStartState(this.parser.getPrecedence(),e)):(e=this.addDFAState(h,new u(null,r)),h.s0=e);}const i=this.execATN(h,e,n,r,a);return this.debug&&console.log("DFA after predictATN: "+h.toString(this.parser.literalNames)),i;}finally{this._dfa=null,this.mergeCache=null,n.seek(r),n.release(t);}}execATN(n,e,a,h,t){let r;(this.debug||this.debug_list_atn_decisions)&&console.log("execATN decision "+n.decision+" exec LA(1)=="+this.getLookaheadName(a)+" line "+a.LT(1).line+":"+a.LT(1).column);let i=e;this.debug&&console.log("s0 = "+e);let l=a.LA(1);for(;;){let e=this.getExistingTargetState(i,l);if(null===e&&(e=this.computeTargetState(n,i,l)),e===p.ERROR){const n=this.noViableAlt(a,t,i.configs,h);if(a.seek(h),r=this.getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(i.configs,t),r!==s.INVALID_ALT_NUMBER)return r;throw n;}if(e.requiresFullContext&&this.predictionMode!==j.SLL){let i=null;if(null!==e.predicates){this.debug&&console.log("DFA state has preds in DFA sim LL failover");const n=a.index;if(n!==h&&a.seek(h),i=this.evalSemanticContext(e.predicates,t,!0),1===i.length)return this.debug&&console.log("Full LL avoided"),i.minValue();n!==h&&a.seek(n);}this.dfa_debug&&console.log("ctx sensitive state "+t+" in "+e);const s=!0,l=this.computeStartState(n.atnStartState,t,s);return this.reportAttemptingFullContext(n,i,e.configs,h,a.index),r=this.execATNWithFullContext(n,e,l,a,h,t),r;}if(e.isAcceptState){if(null===e.predicates)return e.prediction;const r=a.index;a.seek(h);const i=this.evalSemanticContext(e.predicates,t,!0);if(0===i.length)throw this.noViableAlt(a,t,e.configs,h);return 1===i.length||this.reportAmbiguity(n,e,h,r,!1,i,e.configs),i.minValue();}i=e,l!==y.EOF&&(a.consume(),l=a.LA(1));}}getExistingTargetState(n,e){const a=n.edges;return null===a?null:a[e+1]||null;}computeTargetState(n,e,a){const t=this.computeReachSet(e.configs,a,!1);if(null===t)return this.addDFAEdge(n,e,a,p.ERROR),p.ERROR;let r=new u(null,t);const i=this.getUniqueAlt(t);if(this.debug){const n=j.getConflictingAltSubsets(t);console.log("SLL altSubSets="+h.arrayToString(n)+", previous="+e.configs+", configs="+t+", predict="+i+", allSubsetsConflict="+j.allSubsetsConflict(n)+", conflictingAlts="+this.getConflictingAlts(t));}return i!==s.INVALID_ALT_NUMBER?(r.isAcceptState=!0,r.configs.uniqueAlt=i,r.prediction=i):j.hasSLLConflictTerminatingPrediction(this.predictionMode,t)&&(r.configs.conflictingAlts=this.getConflictingAlts(t),r.requiresFullContext=!0,r.isAcceptState=!0,r.prediction=r.configs.conflictingAlts.minValue()),r.isAcceptState&&r.configs.hasSemanticContext&&(this.predicateDFAState(r,this.atn.getDecisionState(n.decision)),null!==r.predicates&&(r.prediction=s.INVALID_ALT_NUMBER)),r=this.addDFAEdge(n,e,a,r),r;}predicateDFAState(n,e){const a=e.transitions.length,h=this.getConflictingAltsOrUniqueAlt(n.configs),t=this.getPredsForAmbigAlts(h,n.configs,a);null!==t?(n.predicates=this.getPredicatePredictions(h,t),n.prediction=s.INVALID_ALT_NUMBER):n.prediction=h.minValue();}execATNWithFullContext(n,e,a,h,t,r){(this.debug||this.debug_list_atn_decisions)&&console.log("execATNWithFullContext "+a);let i,l=!1,o=a;h.seek(t);let b=h.LA(1),d=-1;for(;;){if(i=this.computeReachSet(o,b,!0),null===i){const n=this.noViableAlt(h,r,o,t);h.seek(t);const e=this.getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(o,r);if(e!==s.INVALID_ALT_NUMBER)return e;throw n;}const n=j.getConflictingAltSubsets(i);if(this.debug&&console.log("LL altSubSets="+n+", predict="+j.getUniqueAlt(n)+", resolvesToJustOneViableAlt="+j.resolvesToJustOneViableAlt(n)),i.uniqueAlt=this.getUniqueAlt(i),i.uniqueAlt!==s.INVALID_ALT_NUMBER){d=i.uniqueAlt;break;}if(this.predictionMode!==j.LL_EXACT_AMBIG_DETECTION){if(d=j.resolvesToJustOneViableAlt(n),d!==s.INVALID_ALT_NUMBER)break;}else if(j.allSubsetsConflict(n)&&j.allSubsetsEqual(n)){l=!0,d=j.getSingleViableAlt(n);break;}o=i,b!==y.EOF&&(h.consume(),b=h.LA(1));}return i.uniqueAlt!==s.INVALID_ALT_NUMBER?(this.reportContextSensitivity(n,d,i,t,h.index),d):(this.reportAmbiguity(n,e,t,h.index,l,null,i),d);}computeReachSet(n,e,a){this.debug&&console.log("in computeReachSet, starting closure: "+n),null===this.mergeCache&&(this.mergeCache=new i());const h=new d(a);let r=null;for(let t=0;t<n.items.length;t++){const i=n.items[t];if(this.debug&&console.log("testing "+this.getTokenName(e)+" at "+i),i.state instanceof o)(a||e===y.EOF)&&(null===r&&(r=[]),r.push(i),this.debug_add&&console.log("added "+i+" to skippedStopStates"));else for(let n=0;n<i.state.transitions.length;n++){const a=i.state.transitions[n],t=this.getReachableTarget(a,e);if(null!==t){const n=new b({state:t},i);h.add(n,this.mergeCache),this.debug_add&&console.log("added "+n+" to intermediate");}}}let l=null;if(null===r&&e!==y.EOF&&(1===h.items.length||this.getUniqueAlt(h)!==s.INVALID_ALT_NUMBER)&&(l=h),null===l){l=new d(a);const n=new t(),r=e===y.EOF;for(let e=0;e<h.items.length;e++)this.closure(h.items[e],l,n,!1,a,r);}if(e===y.EOF&&(l=this.removeAllConfigsNotInRuleStopState(l,l===h)),!(null===r||a&&j.hasConfigInRuleStopState(l)))for(let n=0;n<r.length;n++)l.add(r[n],this.mergeCache);return 0===l.items.length?null:l;}removeAllConfigsNotInRuleStopState(n,e){if(j.allConfigsInRuleStopStates(n))return n;const a=new d(n.fullCtx);for(let h=0;h<n.items.length;h++){const t=n.items[h];if(t.state instanceof o)a.add(t,this.mergeCache);else if(e&&t.state.epsilonOnlyTransitions){if(this.atn.nextTokens(t.state).contains(y.EPSILON)){const n=this.atn.ruleToStopState[t.state.ruleIndex];a.add(new b({state:n},t),this.mergeCache);}}}return a;}computeStartState(n,e,a){const h=A(this.atn,e),r=new d(a);for(let e=0;e<n.transitions.length;e++){const i=n.transitions[e].target,s=new b({state:i,alt:e+1,context:h},null),l=new t();this.closure(s,r,l,!0,a,!1);}return r;}applyPrecedenceFilter(n){let e;const a=[],h=new d(n.fullCtx);for(let t=0;t<n.items.length;t++){if(e=n.items[t],1!==e.alt)continue;const r=e.semanticContext.evalPrecedence(this.parser,this._outerContext);null!==r&&(a[e.state.stateNumber]=e.context,r!==e.semanticContext?h.add(new b({semanticContext:r},e),this.mergeCache):h.add(e,this.mergeCache));}for(let t=0;t<n.items.length;t++)if(e=n.items[t],1!==e.alt){if(!e.precedenceFilterSuppressed){const n=a[e.state.stateNumber]||null;if(null!==n&&n.equals(e.context))continue;}h.add(e,this.mergeCache);}return h;}getReachableTarget(n,e){return n.matches(e,0,this.atn.maxTokenType)?n.target:null;}getPredsForAmbigAlts(n,e,a){let t=[];for(let a=0;a<e.items.length;a++){const h=e.items[a];n.contains(h.alt)&&(t[h.alt]=S.orContext(t[h.alt]||null,h.semanticContext));}let r=0;for(let n=1;n<a+1;n++){const e=t[n]||null;null===e?t[n]=S.NONE:e!==S.NONE&&(r+=1);}return 0===r&&(t=null),this.debug&&console.log("getPredsForAmbigAlts result "+h.arrayToString(t)),t;}getPredicatePredictions(n,e){const a=[];let h=!1;for(let t=1;t<e.length;t++){const r=e[t];null!==n&&n.contains(t)&&a.push(new c(r,t)),r!==S.NONE&&(h=!0);}return h?a:null;}getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(n,e){const a=this.splitAccordingToSemanticValidity(n,e),h=a[0],t=a[1];let r=this.getAltThatFinishedDecisionEntryRule(h);return r!==s.INVALID_ALT_NUMBER||t.items.length>0&&(r=this.getAltThatFinishedDecisionEntryRule(t),r!==s.INVALID_ALT_NUMBER)?r:s.INVALID_ALT_NUMBER;}getAltThatFinishedDecisionEntryRule(n){const e=[];for(let a=0;a<n.items.length;a++){const h=n.items[a];(h.reachesIntoOuterContext>0||h.state instanceof o&&h.context.hasEmptyPath())&&e.indexOf(h.alt)<0&&e.push(h.alt);}return 0===e.length?s.INVALID_ALT_NUMBER:Math.min.apply(null,e);}splitAccordingToSemanticValidity(n,e){const a=new d(n.fullCtx),h=new d(n.fullCtx);for(let t=0;t<n.items.length;t++){const r=n.items[t];if(r.semanticContext!==S.NONE){r.semanticContext.evaluate(this.parser,e)?a.add(r):h.add(r);}else a.add(r);}return [a,h];}evalSemanticContext(n,e,a){const h=new r();for(let t=0;t<n.length;t++){const r=n[t];if(r.pred===S.NONE){if(h.add(r.alt),!a)break;continue;}const i=r.pred.evaluate(this.parser,e);if((this.debug||this.dfa_debug)&&console.log("eval pred "+r+"="+i),i&&((this.debug||this.dfa_debug)&&console.log("PREDICT "+r.alt),h.add(r.alt),!a))break;}return h;}closure(n,e,a,h,t,r){this.closureCheckingStopState(n,e,a,h,t,0,r);}closureCheckingStopState(n,e,a,h,t,r,i){if((this.debug||this.debug_closure)&&(console.log("closure("+n.toString(this.parser,!0)+")"),n.reachesIntoOuterContext>50))throw "problem";if(n.state instanceof o){if(!n.context.isEmpty()){for(let s=0;s<n.context.length;s++){if(n.context.getReturnState(s)===m.EMPTY_RETURN_STATE){if(t){e.add(new b({state:n.state,context:m.EMPTY},n),this.mergeCache);continue;}this.debug&&console.log("FALLING off rule "+this.getRuleName(n.state.ruleIndex)),this.closure_(n,e,a,h,t,r,i);continue;}const l=this.atn.states[n.context.getReturnState(s)],o=n.context.getParent(s),d={state:l,alt:n.alt,context:o,semanticContext:n.semanticContext},y=new b(d,null);y.reachesIntoOuterContext=n.reachesIntoOuterContext,this.closureCheckingStopState(y,e,a,h,t,r-1,i);}return;}if(t)return void e.add(n,this.mergeCache);this.debug&&console.log("FALLING off rule "+this.getRuleName(n.state.ruleIndex));}this.closure_(n,e,a,h,t,r,i);}closure_(n,e,a,h,t,r,i){const s=n.state;s.epsilonOnlyTransitions||e.add(n,this.mergeCache);for(let l=0;l<s.transitions.length;l++){if(0===l&&this.canDropLoopEntryEdgeInLeftRecursiveRule(n))continue;const b=s.transitions[l],d=h&&!(b instanceof x),y=this.getEpsilonTarget(n,b,d,0===r,t,i);if(null!==y){let h=r;if(n.state instanceof o){if(null!==this._dfa&&this._dfa.precedenceDfa&&b.outermostPrecedenceReturn===this._dfa.atnStartState.ruleIndex&&(y.precedenceFilterSuppressed=!0),y.reachesIntoOuterContext+=1,a.add(y)!==y)continue;e.dipsIntoOuterContext=!0,h-=1,this.debug&&console.log("dips into outer ctx: "+y);}else {if(!b.isEpsilon&&a.add(y)!==y)continue;b instanceof z&&h>=0&&(h+=1);}this.closureCheckingStopState(y,e,a,d,t,h,i);}}}canDropLoopEntryEdgeInLeftRecursiveRule(n){const e=n.state;if(e.stateType!==l.STAR_LOOP_ENTRY)return !1;if(e.stateType!==l.STAR_LOOP_ENTRY||!e.isPrecedenceDecision||n.context.isEmpty()||n.context.hasEmptyPath())return !1;const a=n.context.length;for(let h=0;h<a;h++){if(this.atn.states[n.context.getReturnState(h)].ruleIndex!==e.ruleIndex)return !1;}const h=e.transitions[0].target.endState.stateNumber,t=this.atn.states[h];for(let h=0;h<a;h++){const a=n.context.getReturnState(h),r=this.atn.states[a];if(1!==r.transitions.length||!r.transitions[0].isEpsilon)return !1;const i=r.transitions[0].target;if((r.stateType!==l.BLOCK_END||i!==e)&&r!==t&&i!==t&&(i.stateType!==l.BLOCK_END||1!==i.transitions.length||!i.transitions[0].isEpsilon||i.transitions[0].target!==e))return !1;}return !0;}getRuleName(n){return null!==this.parser&&n>=0?this.parser.ruleNames[n]:"<rule "+n+">";}getEpsilonTarget(n,e,a,h,t,r){switch(e.serializationType){case k.RULE:return this.ruleTransition(n,e);case k.PRECEDENCE:return this.precedenceTransition(n,e,a,h,t);case k.PREDICATE:return this.predTransition(n,e,a,h,t);case k.ACTION:return this.actionTransition(n,e);case k.EPSILON:return new b({state:e.target},n);case k.ATOM:case k.RANGE:case k.SET:return r&&e.matches(y.EOF,0,1)?new b({state:e.target},n):null;default:return null;}}actionTransition(n,e){if(this.debug){const n=-1===e.actionIndex?65535:e.actionIndex;console.log("ACTION edge "+e.ruleIndex+":"+n);}return new b({state:e.target},n);}precedenceTransition(n,e,a,t,r){this.debug&&(console.log("PRED (collectPredicates="+a+") "+e.precedence+">=_p, ctx dependent=true"),null!==this.parser&&console.log("context surrounding pred is "+h.arrayToString(this.parser.getRuleInvocationStack())));let i=null;if(a&&t){if(r){const a=this._input.index;this._input.seek(this._startIndex);const h=e.getPredicate().evaluate(this.parser,this._outerContext);this._input.seek(a),h&&(i=new b({state:e.target},n));}else {const a=S.andContext(n.semanticContext,e.getPredicate());i=new b({state:e.target,semanticContext:a},n);}}else i=new b({state:e.target},n);return this.debug&&console.log("config from pred transition="+i),i;}predTransition(n,e,a,t,r){this.debug&&(console.log("PRED (collectPredicates="+a+") "+e.ruleIndex+":"+e.predIndex+", ctx dependent="+e.isCtxDependent),null!==this.parser&&console.log("context surrounding pred is "+h.arrayToString(this.parser.getRuleInvocationStack())));let i=null;if(a&&(e.isCtxDependent&&t||!e.isCtxDependent)){if(r){const a=this._input.index;this._input.seek(this._startIndex);const h=e.getPredicate().evaluate(this.parser,this._outerContext);this._input.seek(a),h&&(i=new b({state:e.target},n));}else {const a=S.andContext(n.semanticContext,e.getPredicate());i=new b({state:e.target,semanticContext:a},n);}}else i=new b({state:e.target},n);return this.debug&&console.log("config from pred transition="+i),i;}ruleTransition(n,e){this.debug&&console.log("CALL rule "+this.getRuleName(e.target.ruleIndex)+", ctx="+n.context);const a=e.followState,h=E.create(n.context,a.stateNumber);return new b({state:e.target,context:h},n);}getConflictingAlts(n){const e=j.getConflictingAltSubsets(n);return j.getAlts(e);}getConflictingAltsOrUniqueAlt(n){let e=null;return n.uniqueAlt!==s.INVALID_ALT_NUMBER?(e=new r(),e.add(n.uniqueAlt)):e=n.conflictingAlts,e;}getTokenName(n){if(n===y.EOF)return "EOF";if(null!==this.parser&&null!==this.parser.literalNames){if(!(n>=this.parser.literalNames.length&&n>=this.parser.symbolicNames.length)){return (this.parser.literalNames[n]||this.parser.symbolicNames[n])+"<"+n+">";}console.log(n+" ttype out of range: "+this.parser.literalNames),console.log(""+this.parser.getInputStream().getTokens());}return ""+n;}getLookaheadName(n){return this.getTokenName(n.LA(1));}dumpDeadEndConfigs(n){console.log("dead end configs: ");const e=n.getDeadEndConfigs();for(let n=0;n<e.length;n++){const a=e[n];let h="no edges";if(a.state.transitions.length>0){const n=a.state.transitions[0];if(n instanceof AtomTransition)h="Atom "+this.getTokenName(n.label);else if(n instanceof f){h=(n instanceof w?"~":"")+"Set "+n.set;}}console.error(a.toString(this.parser,!0)+":"+h);}}noViableAlt(n,e,a,h){return new T(this.parser,n,n.get(h),n.LT(1),a,e);}getUniqueAlt(n){let e=s.INVALID_ALT_NUMBER;for(let a=0;a<n.items.length;a++){const h=n.items[a];if(e===s.INVALID_ALT_NUMBER)e=h.alt;else if(h.alt!==e)return s.INVALID_ALT_NUMBER;}return e;}addDFAEdge(n,e,a,h){if(this.debug&&console.log("EDGE "+e+" -> "+h+" upon "+this.getTokenName(a)),null===h)return null;if(h=this.addDFAState(n,h),null===e||a<-1||a>this.atn.maxTokenType)return h;if(null===e.edges&&(e.edges=[]),e.edges[a+1]=h,this.debug){const e=null===this.parser?null:this.parser.literalNames,a=null===this.parser?null:this.parser.symbolicNames;console.log("DFA=\n"+n.toString(e,a));}return h;}addDFAState(n,e){if(e===p.ERROR)return e;const a=n.states.get(e);return null!==a?a:(e.stateNumber=n.states.length,e.configs.readOnly||(e.configs.optimizeConfigs(this),e.configs.setReadonly(!0)),n.states.add(e),this.debug&&console.log("adding new DFA state: "+e),e);}reportAttemptingFullContext(n,e,a,h,t){if(this.debug||this.retry_debug){const e=new g(h,t+1);console.log("reportAttemptingFullContext decision="+n.decision+":"+a+", input="+this.parser.getTokenStream().getText(e));}null!==this.parser&&this.parser.getErrorListenerDispatch().reportAttemptingFullContext(this.parser,n,h,t,e,a);}reportContextSensitivity(n,e,a,h,t){if(this.debug||this.retry_debug){const e=new g(h,t+1);console.log("reportContextSensitivity decision="+n.decision+":"+a+", input="+this.parser.getTokenStream().getText(e));}null!==this.parser&&this.parser.getErrorListenerDispatch().reportContextSensitivity(this.parser,n,h,t,e,a);}reportAmbiguity(n,e,a,h,t,r,i){if(this.debug||this.retry_debug){const n=new g(a,h+1);console.log("reportAmbiguity "+r+":"+i+", input="+this.parser.getTokenStream().getText(n));}null!==this.parser&&this.parser.getErrorListenerDispatch().reportAmbiguity(this.parser,n,a,h,t,r,i);}};},function(n,e,a){e.DFA=a(42),e.DFASerializer=a(16).DFASerializer,e.LexerDFASerializer=a(16).LexerDFASerializer,e.PredPrediction=a(12).PredPrediction;},function(n,e,a){const{Set:h}=a(2),{DFAState:t}=a(12),{StarLoopEntryState:r}=a(5),{ATNConfigSet:i}=a(9),{DFASerializer:s}=a(16),{LexerDFASerializer:l}=a(16);n.exports=class{constructor(n,e){if(void 0===e&&(e=0),this.atnStartState=n,this.decision=e,this._states=new h(),this.s0=null,this.precedenceDfa=!1,n instanceof r&&n.isPrecedenceDecision){this.precedenceDfa=!0;const n=new t(null,new i());n.edges=[],n.isAcceptState=!1,n.requiresFullContext=!1,this.s0=n;}}getPrecedenceStartState(n){if(!this.precedenceDfa)throw "Only precedence DFAs may contain a precedence start state.";return n<0||n>=this.s0.edges.length?null:this.s0.edges[n]||null;}setPrecedenceStartState(n,e){if(!this.precedenceDfa)throw "Only precedence DFAs may contain a precedence start state.";n<0||(this.s0.edges[n]=e);}setPrecedenceDfa(n){if(this.precedenceDfa!==n){if(this._states=new h(),n){const n=new t(null,new i());n.edges=[],n.isAcceptState=!1,n.requiresFullContext=!1,this.s0=n;}else this.s0=null;this.precedenceDfa=n;}}sortedStates(){return this._states.values().sort(function(n,e){return n.stateNumber-e.stateNumber;});}toString(n,e){if(n=n||null,e=e||null,null===this.s0)return "";return new s(this,n,e).toString();}toLexerString(){if(null===this.s0)return "";return new l(this).toString();}get states(){return this._states;}};},function(n,e,a){const h=a(8),t=a(22);n.exports={...h,Trees:t};},function(n,e,a){n.exports.RecognitionException=a(4).RecognitionException,n.exports.NoViableAltException=a(4).NoViableAltException,n.exports.LexerNoViableAltException=a(4).LexerNoViableAltException,n.exports.InputMismatchException=a(4).InputMismatchException,n.exports.FailedPredicateException=a(4).FailedPredicateException,n.exports.DiagnosticErrorListener=a(45),n.exports.BailErrorStrategy=a(18).BailErrorStrategy,n.exports.DefaultErrorStrategy=a(18).DefaultErrorStrategy,n.exports.ErrorListener=a(15).ErrorListener;},function(n,e,a){const{BitSet:h}=a(2),{ErrorListener:t}=a(15),{Interval:r}=a(3);n.exports=class extends t{constructor(n){super(),n=n||!0,this.exactOnly=n;}reportAmbiguity(n,e,a,h,t,i,s){if(this.exactOnly&&!t)return;const l="reportAmbiguity d="+this.getDecisionDescription(n,e)+": ambigAlts="+this.getConflictingAlts(i,s)+", input='"+n.getTokenStream().getText(new r(a,h))+"'";n.notifyErrorListeners(l);}reportAttemptingFullContext(n,e,a,h,t,i){const s="reportAttemptingFullContext d="+this.getDecisionDescription(n,e)+", input='"+n.getTokenStream().getText(new r(a,h))+"'";n.notifyErrorListeners(s);}reportContextSensitivity(n,e,a,h,t,i){const s="reportContextSensitivity d="+this.getDecisionDescription(n,e)+", input='"+n.getTokenStream().getText(new r(a,h))+"'";n.notifyErrorListeners(s);}getDecisionDescription(n,e){const a=e.decision,h=e.atnStartState.ruleIndex,t=n.ruleNames;if(h<0||h>=t.length)return ""+a;const r=t[h]||null;return null===r||0===r.length?""+a:`${a} (${r})`;}getConflictingAlts(n,e){if(null!==n)return n;const a=new h();for(let n=0;n<e.items.length;n++)a.add(e.items[n].alt);return `{${a.values().join(", ")}}`;}};},function(n,e,a){const h=a(19),t=a(32),r={fromString:function(n){return new h(n,!0);},fromBlob:function(n,e,a,t){const r=new window.FileReader();r.onload=function(n){const e=new h(n.target.result,!0);a(e);},r.onerror=t,r.readAsText(n,e);},fromBuffer:function(n,e){return new h(n.toString(e),!0);},fromPath:function(n,e,a){t.readFile(n,e,function(n,e){let t=null;null!==e&&(t=new h(e,!0)),a(n,t);});},fromPathSync:function(n,e){const a=t.readFileSync(n,e);return new h(a,!0);}};n.exports=r;},function(n,e,a){const h=a(19),t=a(32);n.exports=class extends h{constructor(n,e){super(t.readFileSync(n,"utf8"),e),this.fileName=n;}};},function(n,e,a){const h=a(1).Token,t=a(49);n.exports=class extends t{constructor(n,e){super(n),this.channel=void 0===e?h.DEFAULT_CHANNEL:e;}adjustSeekIndex(n){return this.nextTokenOnChannel(n,this.channel);}LB(n){if(0===n||this.index-n<0)return null;let e=this.index,a=1;for(;a<=n;)e=this.previousTokenOnChannel(e-1,this.channel),a+=1;return e<0?null:this.tokens[e];}LT(n){if(this.lazyInit(),0===n)return null;if(n<0)return this.LB(-n);let e=this.index,a=1;for(;a<n;)this.sync(e+1)&&(e=this.nextTokenOnChannel(e+1,this.channel)),a+=1;return this.tokens[e];}getNumberOfOnChannelTokens(){let n=0;this.fill();for(let e=0;e<this.tokens.length;e++){const a=this.tokens[e];if(a.channel===this.channel&&(n+=1),a.type===h.EOF)break;}return n;}};},function(n,e,a){const{Token:h}=a(1),t=a(14),{Interval:r}=a(3);n.exports=class extends class{}{constructor(n){super(),this.tokenSource=n,this.tokens=[],this.index=-1,this.fetchedEOF=!1;}mark(){return 0;}release(n){}reset(){this.seek(0);}seek(n){this.lazyInit(),this.index=this.adjustSeekIndex(n);}get(n){return this.lazyInit(),this.tokens[n];}consume(){let n=!1;if(n=this.index>=0&&(this.fetchedEOF?this.index<this.tokens.length-1:this.index<this.tokens.length),!n&&this.LA(1)===h.EOF)throw "cannot consume EOF";this.sync(this.index+1)&&(this.index=this.adjustSeekIndex(this.index+1));}sync(n){const e=n-this.tokens.length+1;if(e>0){return this.fetch(e)>=e;}return !0;}fetch(n){if(this.fetchedEOF)return 0;for(let e=0;e<n;e++){const n=this.tokenSource.nextToken();if(n.tokenIndex=this.tokens.length,this.tokens.push(n),n.type===h.EOF)return this.fetchedEOF=!0,e+1;}return n;}getTokens(n,e,a){if(void 0===a&&(a=null),n<0||e<0)return null;this.lazyInit();const t=[];e>=this.tokens.length&&(e=this.tokens.length-1);for(let r=n;r<e;r++){const n=this.tokens[r];if(n.type===h.EOF)break;(null===a||a.contains(n.type))&&t.push(n);}return t;}LA(n){return this.LT(n).type;}LB(n){return this.index-n<0?null:this.tokens[this.index-n];}LT(n){if(this.lazyInit(),0===n)return null;if(n<0)return this.LB(-n);const e=this.index+n-1;return this.sync(e),e>=this.tokens.length?this.tokens[this.tokens.length-1]:this.tokens[e];}adjustSeekIndex(n){return n;}lazyInit(){-1===this.index&&this.setup();}setup(){this.sync(0),this.index=this.adjustSeekIndex(0);}setTokenSource(n){this.tokenSource=n,this.tokens=[],this.index=-1,this.fetchedEOF=!1;}nextTokenOnChannel(n,e){if(this.sync(n),n>=this.tokens.length)return -1;let a=this.tokens[n];for(;a.channel!==this.channel;){if(a.type===h.EOF)return -1;n+=1,this.sync(n),a=this.tokens[n];}return n;}previousTokenOnChannel(n,e){for(;n>=0&&this.tokens[n].channel!==e;)n-=1;return n;}getHiddenTokensToRight(n,e){if(void 0===e&&(e=-1),this.lazyInit(),n<0||n>=this.tokens.length)throw n+" not in 0.."+this.tokens.length-1;const a=this.nextTokenOnChannel(n+1,t.DEFAULT_TOKEN_CHANNEL),h=n+1,r=-1===a?this.tokens.length-1:a;return this.filterForChannel(h,r,e);}getHiddenTokensToLeft(n,e){if(void 0===e&&(e=-1),this.lazyInit(),n<0||n>=this.tokens.length)throw n+" not in 0.."+this.tokens.length-1;const a=this.previousTokenOnChannel(n-1,t.DEFAULT_TOKEN_CHANNEL);if(a===n-1)return null;const h=a+1,r=n-1;return this.filterForChannel(h,r,e);}filterForChannel(n,e,a){const h=[];for(let r=n;r<e+1;r++){const n=this.tokens[r];-1===a?n.channel!==t.DEFAULT_TOKEN_CHANNEL&&h.push(n):n.channel===a&&h.push(n);}return 0===h.length?null:h;}getSourceName(){return this.tokenSource.getSourceName();}getText(n){this.lazyInit(),this.fill(),null==n&&(n=new r(0,this.tokens.length-1));let e=n.start;e instanceof h&&(e=e.tokenIndex);let a=n.stop;if(a instanceof h&&(a=a.tokenIndex),null===e||null===a||e<0||a<0)return "";a>=this.tokens.length&&(a=this.tokens.length-1);let t="";for(let n=e;n<a+1;n++){const e=this.tokens[n];if(e.type===h.EOF)break;t+=e.text;}return t;}fill(){for(this.lazyInit();1e3===this.fetch(1e3););}};},function(n,e,a){const{Token:h}=a(1),{ParseTreeListener:t,TerminalNode:r,ErrorNode:i}=a(8),s=a(26),{DefaultErrorStrategy:l}=a(18),o=a(23),b=a(24),d=a(14);class y extends t{constructor(n){super(),this.parser=n;}enterEveryRule(n){console.log("enter   "+this.parser.ruleNames[n.ruleIndex]+", LT(1)="+this.parser._input.LT(1).text);}visitTerminal(n){console.log("consume "+n.symbol+" rule "+this.parser.ruleNames[this.parser._ctx.ruleIndex]);}exitEveryRule(n){console.log("exit    "+this.parser.ruleNames[n.ruleIndex]+", LT(1)="+this.parser._input.LT(1).text);}}class u extends s{constructor(n){super(),this._input=null,this._errHandler=new l(),this._precedenceStack=[],this._precedenceStack.push(0),this._ctx=null,this.buildParseTrees=!0,this._tracer=null,this._parseListeners=null,this._syntaxErrors=0,this.setInputStream(n);}reset(){null!==this._input&&this._input.seek(0),this._errHandler.reset(this),this._ctx=null,this._syntaxErrors=0,this.setTrace(!1),this._precedenceStack=[],this._precedenceStack.push(0),null!==this._interp&&this._interp.reset();}match(n){let e=this.getCurrentToken();return e.type===n?(this._errHandler.reportMatch(this),this.consume()):(e=this._errHandler.recoverInline(this),this.buildParseTrees&&-1===e.tokenIndex&&this._ctx.addErrorNode(e)),e;}matchWildcard(){let n=this.getCurrentToken();return n.type>0?(this._errHandler.reportMatch(this),this.consume()):(n=this._errHandler.recoverInline(this),this._buildParseTrees&&-1===n.tokenIndex&&this._ctx.addErrorNode(n)),n;}getParseListeners(){return this._parseListeners||[];}addParseListener(n){if(null===n)throw "listener";null===this._parseListeners&&(this._parseListeners=[]),this._parseListeners.push(n);}removeParseListener(n){if(null!==this._parseListeners){const e=this._parseListeners.indexOf(n);e>=0&&this._parseListeners.splice(e,1),0===this._parseListeners.length&&(this._parseListeners=null);}}removeParseListeners(){this._parseListeners=null;}triggerEnterRuleEvent(){if(null!==this._parseListeners){const n=this._ctx;this._parseListeners.map(function(e){e.enterEveryRule(n),n.enterRule(e);});}}triggerExitRuleEvent(){if(null!==this._parseListeners){const n=this._ctx;this._parseListeners.slice(0).reverse().map(function(e){n.exitRule(e),e.exitEveryRule(n);});}}getTokenFactory(){return this._input.tokenSource._factory;}setTokenFactory(n){this._input.tokenSource._factory=n;}getATNWithBypassAlts(){const n=this.getSerializedATN();if(null===n)throw "The current parser does not support an ATN with bypass alternatives.";let e=this.bypassAltsAtnCache[n];if(null===e){const a=new b();a.generateRuleBypassTransitions=!0,e=new o(a).deserialize(n),this.bypassAltsAtnCache[n]=e;}return e;}compileParseTreePattern(n,e,a){if(null===(a=a||null)&&null!==this.getTokenStream()){const n=this.getTokenStream().tokenSource;n instanceof d&&(a=n);}if(null===a)throw "Parser can't discover a lexer to use";return new ParseTreePatternMatcher(a,this).compile(n,e);}getInputStream(){return this.getTokenStream();}setInputStream(n){this.setTokenStream(n);}getTokenStream(){return this._input;}setTokenStream(n){this._input=null,this.reset(),this._input=n;}getCurrentToken(){return this._input.LT(1);}notifyErrorListeners(n,e,a){a=a||null,null===(e=e||null)&&(e=this.getCurrentToken()),this._syntaxErrors+=1;const h=e.line,t=e.column;this.getErrorListenerDispatch().syntaxError(this,e,h,t,n,a);}consume(){const n=this.getCurrentToken();n.type!==h.EOF&&this.getInputStream().consume();const e=null!==this._parseListeners&&this._parseListeners.length>0;if(this.buildParseTrees||e){let a;a=this._errHandler.inErrorRecoveryMode(this)?this._ctx.addErrorNode(n):this._ctx.addTokenNode(n),a.invokingState=this.state,e&&this._parseListeners.map(function(n){a instanceof i||void 0!==a.isErrorNode&&a.isErrorNode()?n.visitErrorNode(a):a instanceof r&&n.visitTerminal(a);});}return n;}addContextToParseTree(){null!==this._ctx.parentCtx&&this._ctx.parentCtx.addChild(this._ctx);}enterRule(n,e,a){this.state=e,this._ctx=n,this._ctx.start=this._input.LT(1),this.buildParseTrees&&this.addContextToParseTree(),null!==this._parseListeners&&this.triggerEnterRuleEvent();}exitRule(){this._ctx.stop=this._input.LT(-1),null!==this._parseListeners&&this.triggerExitRuleEvent(),this.state=this._ctx.invokingState,this._ctx=this._ctx.parentCtx;}enterOuterAlt(n,e){n.setAltNumber(e),this.buildParseTrees&&this._ctx!==n&&null!==this._ctx.parentCtx&&(this._ctx.parentCtx.removeLastChild(),this._ctx.parentCtx.addChild(n)),this._ctx=n;}getPrecedence(){return 0===this._precedenceStack.length?-1:this._precedenceStack[this._precedenceStack.length-1];}enterRecursionRule(n,e,a,h){this.state=e,this._precedenceStack.push(h),this._ctx=n,this._ctx.start=this._input.LT(1),null!==this._parseListeners&&this.triggerEnterRuleEvent();}pushNewRecursionContext(n,e,a){const h=this._ctx;h.parentCtx=n,h.invokingState=e,h.stop=this._input.LT(-1),this._ctx=n,this._ctx.start=h.start,this.buildParseTrees&&this._ctx.addChild(h),null!==this._parseListeners&&this.triggerEnterRuleEvent();}unrollRecursionContexts(n){this._precedenceStack.pop(),this._ctx.stop=this._input.LT(-1);const e=this._ctx;if(null!==this._parseListeners)for(;this._ctx!==n;)this.triggerExitRuleEvent(),this._ctx=this._ctx.parentCtx;else this._ctx=n;e.parentCtx=n,this.buildParseTrees&&null!==n&&n.addChild(e);}getInvokingContext(n){let e=this._ctx;for(;null!==e;){if(e.ruleIndex===n)return e;e=e.parentCtx;}return null;}precpred(n,e){return e>=this._precedenceStack[this._precedenceStack.length-1];}inContext(n){return !1;}isExpectedToken(n){const e=this._interp.atn;let a=this._ctx;const t=e.states[this.state];let r=e.nextTokens(t);if(r.contains(n))return !0;if(!r.contains(h.EPSILON))return !1;for(;null!==a&&a.invokingState>=0&&r.contains(h.EPSILON);){const h=e.states[a.invokingState].transitions[0];if(r=e.nextTokens(h.followState),r.contains(n))return !0;a=a.parentCtx;}return !(!r.contains(h.EPSILON)||n!==h.EOF);}getExpectedTokens(){return this._interp.atn.getExpectedTokens(this.state,this._ctx);}getExpectedTokensWithinCurrentRule(){const n=this._interp.atn,e=n.states[this.state];return n.nextTokens(e);}getRuleIndex(n){const e=this.getRuleIndexMap()[n];return null!==e?e:-1;}getRuleInvocationStack(n){null===(n=n||null)&&(n=this._ctx);const e=[];for(;null!==n;){const a=n.ruleIndex;a<0?e.push("n/a"):e.push(this.ruleNames[a]),n=n.parentCtx;}return e;}getDFAStrings(){return this._interp.decisionToDFA.toString();}dumpDFA(){let n=!1;for(let e=0;e<this._interp.decisionToDFA.length;e++){const a=this._interp.decisionToDFA[e];a.states.length>0&&(n&&console.log(),this.printer.println("Decision "+a.decision+":"),this.printer.print(a.toString(this.literalNames,this.symbolicNames)),n=!0);}}getSourceName(){return this._input.sourceName;}setTrace(n){n?(null!==this._tracer&&this.removeParseListener(this._tracer),this._tracer=new y(this),this.addParseListener(this._tracer)):(this.removeParseListener(this._tracer),this._tracer=null);}}u.bypassAltsAtnCache={},n.exports=u;},function(n,e){var a;a=function(){return this;}();try{a=a||new Function("return this")();}catch(n){"object"==typeof window&&(a=window);}n.exports=a;},function(n,e,a){(function(n){n&&(n.exports={a:["ey1","dt"],abalone:["ae b-ah l-ow1 n-iy","nn"],abandon:["ah b-ae1-n d-ah-n","vb vbp"],abandoned:["ah b-ae1-n d-ah-n-d","vbn vbd jj"],abandonment:["ah b-ae1-n d-ah-n m-ah-n-t","nn"],abashed:["ah b-ae1-sh-t","jj"],abate:["ah b-ey1-t","vb"],abbey:["ae1 b-iy","nn"],abbot:["ae1 b-ah-t","nn"],abbreviated:["ah b-r-iy1 v-iy ey t-ah-d","jj"],abbreviation:["ah b-r-iy v-iy ey1 sh-ah-n","nn"],abdicate:["ae1-b d-ah k-ey-t","vbp vb"],abdomen:["ae-b d-ow1 m-ah-n","nn"],abdominal:["ae-b d-aa1 m-ah n-ah-l","jj"],abduct:["ae-b-d-ah1-k-t","vb"],abduction:["ae-b d-ah1-k sh-ah-n","nn"],aberrant:["ae b-eh1 r-ah-n-t","jj"],aberration:["ae b-er ey1 sh-ah-n","nn"],abet:["ah b-eh1-t","vb"],abhor:["ae-b hh-ao1-r","vb"],abhorrent:["ae-b hh-ao1 r-ah-n-t","jj"],abide:["ah b-ay1-d","vb vbp"],abiding:["ah b-ay1 d-ih-ng","jj"],ability:["ah b-ih1 l-ah t-iy","nn"],abject:["ae1-b jh-eh-k-t","jj"],ablaze:["ah b-l-ey1-z","jj rb"],able:["ey1 b-ah-l","jj"],abnormal:["ae-b n-ao1-r m-ah-l","jj"],abnormality:["ae-b n-ao-r m-ae1 l-ah t-iy","nn"],abnormally:["ae-b n-ao1-r m-ah l-iy","rb"],aboard:["ah b-ao1-r-d","in rb rp"],abode:["ah b-ow1-d","nn"],abolish:["ah b-aa1 l-ih-sh","vb"],abolition:["ae b-ah l-ih1 sh-ah-n","nn"],abolitionist:["ae b-ah l-ih1 sh-ah n-ah-s-t","nn"],abominable:["ah b-aa1 m-ah n-ah b-ah-l","jj"],abomination:["ah b-aa m-ah n-ey1 sh-ah-n","nn"],aboriginal:["ae b-er ih1 jh-ah n-ah-l","jj"],aborigine:["ae b-er ih1 jh-ah n-iy","nn"],abort:["ah b-ao1-r-t","vb"],aborted:["ah b-ao1-r t-ih-d","jj vbd vbn"],abortion:["ah b-ao1-r sh-ah-n","nn"],abortionist:["ah b-ao1-r sh-ah-n ih-s-t","nn"],abortive:["ah b-ao1-r t-ih-v","jj"],abound:["ah b-aw1-n-d","vbp vb"],about:["ah b-aw1-t","in rb rp rbr"],above:["ah b-ah1-v","in jj rb"],aboveboard:["ah b-ah1-v b-ao-r-d","jj"],abrasive:["ah b-r-ey1 s-ih-v","jj"],abreast:["ah b-r-eh1-s-t","rb"],abridge:["ah-b-r-ih1-jh","vb"],abroad:["ah b-r-ao1-d","rb"],abrogate:["ae1 b-r-ah g-ey-t","vb"],abrupt:["ah b-r-ah1-p-t","jj"],abruptly:["ah b-r-ah1-p-t l-iy","rb"],abruptness:["ah b-r-ah1-p-t n-ah-s","nn"],abscess:["ae1-b s-eh-s","nn"],absence:["ae1-b s-ah-n-s","nn"],absent:["ae1-b s-ah-n-t","jj vb"],absentee:["ae-b s-ah-n t-iy1","jj nn"],absolute:["ae1-b s-ah l-uw-t","jj nn"],absolutely:["ae-b s-ah l-uw1-t l-iy","rb"],absoluteness:["ae1-b s-ah l-uw-t n-ah-s","nn"],absolution:["ae-b s-ah l-uw1 sh-ah-n","nn"],absolve:["ah-b z-aa1-l-v","vb vbp"],absorb:["ah-b z-ao1-r-b","vb vbp"],absorbed:["ah-b z-ao1-r-b-d","vbn jj vbd"],absorbency:["ah-b z-ao1-r b-ah-n s-iy","nn"],absorbent:["ah-b z-ao1-r b-ah-n-t","jj"],absorber:["ah-b z-ao1-r b-er","nn"],absorbing:["ah-b z-ao1-r b-ih-ng","vbg jj"],absorption:["ah-b z-ao1-r-p sh-ah-n","nn"],abstain:["ah-b s-t-ey1-n","vb vbp"],abstention:["ah-b s-t-eh1-n ch-ah-n","nn"],abstinence:["ae1-b s-t-ah n-ah-n-s","nn"],abstract:["ae-b s-t-r-ae1-k-t","jj nn vb vbp"],abstracted:["ae1-b s-t-r-ae-k t-ih-d","jj vbd"],abstraction:["ae-b s-t-r-ae1-k sh-ah-n","nn"],abstruse:["ah-b s-t-r-uw1-s","jj"],absurd:["ah-b s-er1-d","jj"],absurdist:["ah-b s-er1 d-ih-s-t","jj nn"],absurdity:["ah-b s-er1 d-ah t-iy","nn"],absurdly:["ah-b s-er1-d l-iy","rb"],abundance:["ah b-ah1-n d-ah-n-s","nn"],abundant:["ah b-ah1-n d-ah-n-t","jj"],abundantly:["ah b-ah1-n d-ah-n-t l-iy","rb"],abuse:["ah b-y-uw1-s","nn vb vbp"],abused:["ah b-y-uw1-z-d","vbn jj vbd"],abuser:["ah b-y-uw1 z-er","nn"],abusive:["ah b-y-uw1 s-ih-v","jj"],abuzz:["ah b-ah1-z","jj"],abysmal:["ah b-ih1-z m-ah-l","jj"],abyss:["ah b-ih1-s","nn"],acacia:["ah k-ey1 sh-ah","nn"],academia:["ae k-ah d-iy1 m-iy ah","nn"],academic:["ae k-ah d-eh1 m-ih-k","jj nn"],academically:["ae k-ah d-eh1 m-ih-k l-iy","rb"],academician:["ae k-ah d-ah m-ih1 sh-ah-n","nn"],academy:["ah k-ae1 d-ah m-iy","nn"],accede:["ae-k s-iy1-d","vb"],accelerate:["ae-k s-eh1 l-er ey-t","vb vbp"],accelerated:["ae-k s-eh1 l-er ey t-ih-d","vbn jj vbd"],accelerating:["ae-k s-eh1 l-er ey t-ih-ng","vbg jj"],acceleration:["ae-k s-eh l-er ey1 sh-ah-n","nn"],accelerator:["ae-k s-eh1 l-er ey t-er","nn"],accelerometer:["ae-k s-eh l-er aa1 m-ah t-er","nn"],accent:["ah-k s-eh1-n-t","nn vb"],accented:["ae1-k s-eh-n t-ih-d","vbn jj"],accentuate:["ae-k s-eh1-n ch-uw ey-t","vb"],accept:["ae-k s-eh1-p-t","vb vbp"],acceptability:["ah-k s-eh-p t-ah b-ih1 l-ah t-iy","nn"],acceptable:["ae-k s-eh1-p t-ah b-ah-l","jj"],acceptance:["ae-k s-eh1-p t-ah-n-s","nn"],accepted:["ae-k s-eh1-p t-ih-d","vbn jj vbd"],accepting:["ae-k s-eh1-p t-ih-ng","vbg jj"],access:["ae1-k s-eh-s","nn vb"],accessibility:["ae-k s-eh s-ah b-ih1 l-ih t-iy","nn"],accessible:["ae-k s-eh1 s-ah b-ah-l","jj"],accessory:["ae-k s-eh1 s-er iy","nn jj"],accident:["ae1-k s-ah d-ah-n-t","nn"],accidental:["ae-k s-ah d-eh1-n t-ah-l","jj"],accidentally:["ae-k s-ah d-eh1-n t-ah l-iy","rb"],accidently:["ae1-k s-ah d-ah-n-t l-iy","rb"],acclaim:["ah k-l-ey1-m","nn vb"],acclaimed:["ah k-l-ey1-m-d","vbn vbd jj"],accolade:["ae1 k-ah l-ey-d","nn"],accommodate:["ah k-aa1 m-ah d-ey-t","vb vbp"],accommodation:["ah k-aa m-ah d-ey1 sh-ah-n","nn"],accommodative:["ah k-aa1 m-ah d-ey t-ih-v","jj"],accompanied:["ah k-ah1-m p-ah n-iy-d","vbn vbd"],accompanies:["ah k-ah1-m p-ah n-iy-z","vbz"],accompaniment:["ah k-ah1-m-p n-ih m-ah-n-t","nn"],accompanist:["ah k-ah1-m p-ah n-ah-s-t","nn"],accompany:["ah k-ah1-m p-ah n-iy","vb vbp"],accompanying:["ah k-ah1-m p-ah n-iy ih-ng","vbg jj"],accompli:["aa k-aa1-m p-l-iy","nn"],accomplice:["ah k-aa1-m p-l-ah-s","nn"],accomplish:["ah k-aa1-m p-l-ih-sh","vb vbp"],accomplished:["ah k-aa1-m p-l-ih-sh-t","vbn jj vbd"],accomplishment:["ah k-aa1-m p-l-ih-sh m-ah-n-t","nn"],accord:["ah k-ao1-r-d","nn vbp rb vb"],accordance:["ah k-ao1-r d-ah-n-s","nn"],accordingly:["ah k-ao1-r d-ih-ng l-iy","rb"],accordion:["ah k-ao1-r d-iy ah-n","nn"],accost:["ah-k-ao1-s-t","vb"],account:["ah k-aw1-n-t","nn vbp vb"],accountability:["ah k-aw1-n t-ah b-ih l-ih t-iy","nn"],accountable:["ah k-aw1-n t-ah b-ah-l","jj"],accountant:["ah k-aw1-n t-ah-n-t","nn"],accouterment:["ah k-uw1 t-er m-ah-n-t","nn"],accredit:["ah-k-r-eh1-d-ih-t","vb"],accreditation:["ah k-r-eh d-ah t-ey1 sh-ah-n","nn"],accretion:["ah k-r-iy1 sh-ah-n","nn"],accrual:["ah k-r-uw1 ah-l","nn"],accrue:["ah k-r-uw1","vb"],accrued:["ah k-r-uw1-d","vbn jj"],accumulate:["ah k-y-uw1 m-y-ah l-ey-t","vb vbp"],accumulated:["ah k-y-uw1 m-y-ah l-ey t-ih-d","vbn jj vbd"],accumulating:["ah k-y-uw1 m-y-ah l-ey t-ih-ng","vbg jj"],accumulation:["ah k-y-uw m-y-ah l-ey1 sh-ah-n","nn"],accuracy:["ae1 k-y-er ah s-iy","nn"],accurate:["ae1 k-y-er ah-t","jj"],accurately:["ae1 k-y-er ah-t l-iy","rb"],accusation:["ae k-y-ah z-ey1 sh-ah-n","nn"],accusatory:["ah k-y-uw1 z-ah t-ao r-iy","jj"],accuse:["ah k-y-uw1-z","vb vbp"],accused:["ah k-y-uw1-z-d","vbn vbd jj nn"],accuser:["ah k-y-uw1 z-er","nn"],accusing:["ah k-y-uw1 z-ih-ng","vbg jj"],accusingly:["ah k-y-uw1 z-ih-ng l-iy","rb"],accustom:["ah-k-ah1-s-t-ah-m","vb"],accustomed:["ah k-ah1 s-t-ah-m-d","vbn jj"],ace:["ey1-s","nn"],acerbic:["ah s-eh1-r b-ih-k","jj"],acetate:["ae1 s-ah t-ey-t","nn"],acetone:["ae1 s-ah t-ow-n","nn"],acetylene:["ah s-eh1 t-ah l-iy-n","nn"],ache:["ey1-k","nn vb vbp"],achievable:["ah ch-iy1 v-ah b-ah-l","jj"],achieve:["ah ch-iy1-v","vb vbp"],achieved:["ah ch-iy1-v-d","vbn vbd jj"],achievement:["ah ch-iy1-v m-ah-n-t","nn"],aching:["ey1 k-ih-ng","vbg jj"],acid:["ae1 s-ah-d","nn jj"],acidified:["ah s-ih1 d-ah f-ay-d","vbn"],acidify:["ah-s-ih1-d-ah-f-ay","vb"],acidity:["ah s-ih1 d-ah t-iy","nn"],acidly:["ae1 s-ah-d l-iy","rb"],aciduria:["ae s-ah d-uh1 r-iy ah","nn"],acknowledge:["ae-k n-aa1 l-ih-jh","vbp vb"],acknowledged:["ae-k n-aa1 l-ih-jh-d","vbd vbn jj"],acknowledgement:["ae-k n-aa1 l-ih-jh m-ah-n-t","nn"],acknowledgment:["ae-k n-aa1 l-ih-jh m-ah-n-t","nn"],acne:["ae1-k n-iy","nn"],acolyte:["ae1 k-ah l-ay-t","nn"],acorn:["ey1 k-ao-r-n","nn"],acoustic:["ah k-uw1 s-t-ih-k","jj"],acoustical:["ah k-uw1 s-t-ih k-ah-l","jj"],acoustically:["ah k-uw1 s-t-ih-k l-iy","rb"],acquaint:["ah k-w-ey1-n-t","vb"],acquaintance:["ah k-w-ey1-n t-ah-n-s","nn"],acquiesce:["ae k-w-iy eh1-s","vb"],acquiescence:["ae k-w-iy eh1 s-ah-n-s","nn"],acquire:["ah k-w-ay1 er","vb nn vbp"],acquired:["ah k-w-ay1 er-d","vbn jj vbd"],acquirer:["ah k-w-ay1 er er","nn"],acquisition:["ae k-w-ah z-ih1 sh-ah-n","nn"],acquisitive:["ah k-w-ih1 z-ah t-ih-v","jj"],acquit:["ah k-w-ih1-t","vb"],acquittal:["ah k-w-ih1 t-ah-l","nn"],acre:["ey1 k-er","nn"],acreage:["ey1 k-er ih-jh","nn"],acrimonious:["ae k-r-ah m-ow1 n-iy ah-s","jj"],acrimony:["ae1 k-r-ih m-ow n-iy","nn"],acrobat:["ae1 k-r-ah b-ae-t","nn"],acrobatic:["ae k-r-ah b-ae1 t-ih-k","jj"],acronym:["ae1 k-r-ah n-ih-m","nn"],across:["ah k-r-ao1-s","in rb rp"],acrylic:["ah k-r-ih1 l-ih-k","nn"],act:["ae1-k-t","nn vbp vb"],acting:["ae1-k t-ih-ng","vbg jj nn"],action:["ae1-k sh-ah-n","nn"],actionable:["ae1-k sh-ah-n ah b-ah-l","jj"],activate:["ae1-k t-ah v-ey-t","vbp vb"],activated:["ae1-k t-ah v-ey t-ah-d","vbn jj"],activation:["ae-k t-ah v-ey1 sh-ah-n","nn"],active:["ae1-k t-ih-v","jj nn"],actively:["ae1-k t-ih-v l-iy","rb"],activism:["ae1-k t-ih v-ih z-ah-m","nn"],activist:["ae1-k t-ah v-ah-s-t","nn jj"],activity:["ae-k t-ih1 v-ah t-iy","nn"],actor:["ae1-k t-er","nn"],actress:["ae1-k t-r-ah-s","nn"],actual:["ae1-k ch-uw ah-l","jj"],actuality:["ae-k ch-uw ae1 l-ah t-iy","nn"],actually:["ae1-k ch-uw ah l-iy","rb"],actuarial:["ae-k ch-uw eh1 r-iy ah-l","jj"],actuary:["ae1-k ch-uw eh r-iy","nn"],acumen:["ah k-y-uw1 m-ah-n","nn"],acupuncture:["ae1 k-y-uw p-ah-ng-k ch-er","nn"],acute:["ah k-y-uw1-t","jj nn"],acutely:["ah k-y-uw1-t l-iy","rb"],ad:["ae1-d","nn"],adage:["ae1 d-ah-jh","nn"],adagio:["ah d-aa1 zh-iy ow","nn rb"],adamant:["ae1 d-ah m-ah-n-t","jj"],adamantly:["ae1 d-ah m-ah-n-t l-iy","rb"],adapt:["ah d-ae1-p-t","vb vbp"],adaptability:["ah d-ae-p t-ah b-ih1 l-ah t-iy","nn"],adaptable:["ah d-ae1-p t-ah b-ah-l","jj"],adaptation:["ae d-ah-p t-ey1 sh-ah-n","nn"],adapter:["ah d-ae1-p t-er","nn"],adaptor:["ah d-ae1-p t-er","nn"],add:["ae1-d","vb vbp"],added:["ae1 d-ah-d","vbd jj vbn"],addict:["ah d-ih1-k-t","nn vb"],addicted:["ah d-ih1-k t-ah-d","vbn jj"],addiction:["ah d-ih1-k sh-ah-n","nn"],addictive:["ah d-ih1-k t-ih-v","jj"],addition:["ah d-ih1 sh-ah-n","nn"],additional:["ah d-ih1 sh-ah n-ah-l","jj"],additionally:["ah d-ih1 sh-ah-n ah l-iy","rb"],additive:["ae1 d-ah t-ih-v","nn"],addle:["ae1-d-ah-l","vb"],addled:["ae1 d-ah-l-d","jj vbn"],address:["ae1 d-r-eh-s","nn vbp vb"],addressed:["ah d-r-eh1-s-t","vbn jj vbd"],addressee:["ae d-r-eh s-iy1","nn"],adept:["ah d-eh1-p-t","jj"],adequacy:["ae1 d-ah k-w-ah s-iy","nn"],adequate:["ae1 d-ah k-w-ah-t","jj"],adequately:["ae1 d-ah k-w-ah-t l-iy","rb"],adhere:["ah-d hh-ih1-r","vb vbp"],adherence:["ah-d hh-ih1 r-ah-n-s","nn"],adherent:["ah-d hh-ih1 r-ah-n-t","jj nn"],adhesive:["ae-d hh-iy1 s-ih-v","jj nn"],adjacent:["ah jh-ey1 s-ah-n-t","jj"],adjective:["ae1 jh-ih-k t-ih-v","nn"],adjoin:["ah-jh-oy1-n","vb"],adjoining:["ah jh-oy1 n-ih-ng","vbg jj"],adjourn:["ah jh-er1-n","vb"],adjournment:["ah jh-er1-n m-ah-n-t","nn"],adjudge:["ah-jh-ah1-jh","vb"],adjudicate:["ah jh-uw1 d-ih k-ey-t","vb"],adjudication:["ah jh-uw d-ah k-ey1 sh-ah-n","nn"],adjunct:["ae1 jh-ah-ng-k-t","nn jj"],adjust:["ah jh-ah1-s-t","vb vbp"],adjustable:["ah jh-ah1 s-t-ah b-ah-l","jj"],adjusted:["ah jh-ah1 s-t-ah-d","vbn jj vbd"],adjuster:["ah jh-ah1 s-t-er","nn"],adjustment:["ah jh-ah1-s-t m-ah-n-t","nn"],adman:["ae1-d m-ah-n","nn"],administer:["ah-d m-ih1 n-ah s-t-er","vb vbp"],administrate:["ae-d m-ih1 n-ih s-t-r-ey-t","vb"],administration:["ae-d m-ih n-ih s-t-r-ey1 sh-ah-n","nn"],administrative:["ah-d m-ih1 n-ah s-t-r-ey t-ih-v","jj"],administratively:["ae-d m-ih n-ah s-t-r-ey1 t-ih-v l-iy","rb"],administrator:["ah-d m-ih1 n-ah s-t-r-ey t-er","nn"],admirable:["ae1-d m-er ah b-ah-l","jj"],admirably:["ae1-d m-er ah b-l-iy","rb"],admiral:["ae1-d m-er ah-l","nn"],admiralty:["ae1-d m-er ah-l t-iy","nn"],admiration:["ae-d m-er ey1 sh-ah-n","nn"],admire:["ae-d m-ay1-r","vb vbp"],admired:["ah-d m-ay1 er-d","vbd vbn jj"],admirer:["ae-d m-ay1 r-er","nn"],admiringly:["ae-d m-ay1 r-ih-ng l-iy","rb"],admissible:["ah-d m-ih1 s-ah b-ah-l","jj"],admission:["ae-d m-ih1 sh-ah-n","nn"],admit:["ah-d m-ih1-t","vb vbp"],admittance:["ah-d m-ih1 t-ah-n-s","nn"],admitted:["ah-d m-ih1 t-ah-d","vbd vbn jj"],admittedly:["ae-d m-ih1 t-ih-d l-iy","rb"],admonish:["ae-d-m-aa1-n-ih-sh","vb"],admonition:["ae-d m-ah n-ih1 sh-ah-n","nn"],adobe:["ah d-ow1 b-iy","nn"],adolescence:["ae d-ah l-eh1 s-ah-n-s","nn"],adolescent:["ae d-ah l-eh1 s-ah-n-t","nn jj"],adopt:["ah d-aa1-p-t","vb vbp"],adoptable:["ah d-aa1-p t-ah b-ah-l","jj"],adopted:["ah d-aa1-p t-ah-d","vbn vbd jj"],adoptee:["ah d-aa1-p t-iy1","nn"],adoption:["ah d-aa1-p sh-ah-n","nn"],adoptive:["ah d-aa1-p t-ih-v","jj"],adorable:["ah d-ao1 r-ah b-ah-l","jj"],adore:["ah d-ao1-r","vbp vb"],adorn:["ah d-ao1-r-n","vb vbp"],adrenal:["ah d-r-iy1 n-ah-l","jj nn"],adrenaline:["ah d-r-eh1 n-ah l-ah-n","nn"],adrift:["ah d-r-ih1-f-t","rb"],adroit:["ah d-r-oy1-t","jj"],adroitly:["ah d-r-oy1-t l-iy","rb"],adulation:["ae jh-ah l-ey1 sh-ah-n","nn"],adult:["ah d-ah1-l-t","nn jj"],adulterate:["ah-d-ah1-l-t-er-ey-t","vb"],adulterated:["ah d-ah1-l t-er ey t-ih-d","vbn jj"],adulterer:["ah d-ah1-l t-er er","nn"],adulterous:["ah d-ah1-l t-er ah-s","jj"],adultery:["ah d-ah1-l t-er iy","nn"],adulthood:["ah d-ah1-l-t hh-uh-d","nn"],advance:["ah-d v-ae1-n-s","nn jj vb vbp"],advanced:["ah-d v-ae1-n-s-t","vbd vbn jj"],advancement:["ah-d v-ae1-n-s m-ah-n-t","nn"],advancer:["ah-d v-ae1-n s-er","nn"],advancing:["ah-d v-ae1-n s-ih-ng","vbg jj"],advantage:["ae-d v-ae1-n t-ih-jh","nn vb"],advantageous:["ae-d v-ah-n t-ey1 jh-ah-s","jj"],advent:["ae1-d v-eh-n-t","nn"],adventure:["ae-d v-eh1-n ch-er","nn vb"],adventurer:["ae-d v-eh1-n ch-er er","nn"],adventuresome:["ae-d v-eh1-n ch-er s-ah-m","jj"],adventurous:["ae-d v-eh1-n ch-er ah-s","jj"],adverb:["ae1-d v-er-b","nn"],adverbial:["ae-d v-er1 b-iy ah-l","jj"],adversarial:["ae-d v-er s-eh1 r-iy ah-l","jj"],adversary:["ae1-d v-er s-eh r-iy","nn jj"],adverse:["ae-d v-er1-s","jj"],adversely:["ae-d v-er1-s l-iy","rb"],adversity:["ae-d v-er1 s-ih t-iy","nn"],advertise:["ae1-d v-er t-ay-z","vb vbp"],advertised:["ae1-d v-er t-ay-z-d","vbn jj vbd"],advertisement:["ah-d v-er1 t-ah-z m-ah-n-t","nn"],advertiser:["ae1-d v-er t-ay z-er","nn"],advertorial:["ae-d v-er t-ao1 r-iy ah-l","jj"],advice:["ae-d v-ay1-s","nn"],advisable:["ah-d v-ay1 z-ah b-ah-l","jj"],advise:["ae-d v-ay1-z","vb vbp"],advised:["ae-d v-ay1-z-d","vbn vbd jj"],advisedly:["ae-d v-ay1 z-ah-d l-iy","rb"],advisement:["ah-d v-ay1-z m-ah-n-t","nn"],adviser:["ae-d v-ay1 z-er","nn"],advisor:["ae-d v-ay1 z-er","nn"],advisory:["ae-d v-ay1 z-er iy","jj nn"],advocacy:["ae1-d v-ah k-ah s-iy","nn"],advocate:["ae1-d v-ah k-ah-t","nn vb vbp"],aegis:["iy1 jh-ah-s","nn"],aerial:["eh1 r-iy ah-l","jj"],aerobic:["eh r-ow1 b-ih-k","jj"],aerobics:["er ow1 b-ih-k-s","nn"],aerodynamic:["eh r-ow d-ay n-ae1 m-ih-k","jj"],aeronautical:["eh r-ow n-aa1 t-ah k-ah-l","jj"],aerosol:["eh1 r-ah s-aa-l","nn"],aerospace:["eh1 r-ow s-p-ey-s","nn jj"],aesthetic:["eh-s th-eh1 t-ih-k","jj nn"],aesthetically:["eh-s th-eh1 t-ih-k l-iy","rb"],afar:["ah f-aa1-r","rb"],affable:["ae1 f-ah b-ah-l","jj"],affair:["ah f-eh1-r","nn"],affect:["ah f-eh1-k-t","vb vbp nn"],affectation:["ae f-eh-k t-ey1 sh-ah-n","nn"],affected:["ah f-eh1-k t-ah-d","vbn jj vbd"],affection:["ah f-eh1-k sh-ah-n","nn"],affectionate:["ah f-eh1-k sh-ah-n ah-t","jj"],affectionately:["ah f-eh1-k sh-ah-n ah-t l-iy","rb"],afferent:["ae1 f-er ah-n-t","jj"],affidavit:["ae f-ah d-ey1 v-ah-t","nn"],affiliate:["ah f-ih1 l-iy ey-t","nn vb"],affiliated:["ah f-ih1 l-iy ey t-ah-d","vbn jj"],affiliation:["ah f-ih l-iy ey1 sh-ah-n","nn"],affinity:["ah f-ih1 n-ah t-iy","nn"],affirm:["ah f-er1-m","vb vbp"],affirmation:["ae f-er m-ey1 sh-ah-n","nn"],affirmative:["ah f-er1 m-ah t-ih-v","jj nn"],affix:["ae1 f-ih-k-s","vb"],affixed:["ah f-ih1-k-s-t","vbn jj"],afflict:["ah f-l-ih1-k-t","vb"],afflicted:["ah f-l-ih1-k t-ah-d","vbn jj"],affliction:["ah f-l-ih1-k sh-ah-n","nn"],affluence:["ae1 f-l-uw ah-n-s","nn"],affluent:["ae1 f-l-uw ah-n-t","jj nn"],afford:["ah f-ao1-r-d","vb vbp"],affordability:["ah f-ao-r d-ah b-ih1 l-ah t-iy","nn"],affordable:["ah f-ao1-r d-ah b-ah-l","jj"],affront:["ah f-r-ah1-n-t","nn vb"],afghan:["ae1-f g-ae-n","nn"],aficionado:["ah f-iy sh-y-ah n-aa1 d-ow","nn"],afraid:["ah f-r-ey1-d","jj"],after:["ae1-f t-er","in rb rp"],afterburner:["ae1-f t-er b-er n-er","nn"],aftereffect:["ae1-f t-er ah f-eh-k-t","nn"],afterglow:["ae1-f t-er g-l-ow","nn"],aftermarket:["ae1-f t-er m-aa-r k-ih-t","jj nn"],aftermath:["ae1-f t-er m-ae-th","nn"],afternoon:["ae-f t-er n-uw1-n","nn"],aftershock:["ae1-f t-er sh-aa-k","nn"],afterthought:["ae1-f t-er th-aa-t","nn"],afterward:["ae1-f t-er w-er-d","rb"],afterwards:["ae1-f t-er w-er-d-z","rb"],again:["ah g-eh1-n","rb"],against:["ah g-eh1-n-s-t","in"],agate:["ae1 g-ah-t","nn"],age:["ey1-jh","nn vb vbp"],aged:["ey1-jh-d","vbn jj vbd"],ageless:["ey1-jh l-ah-s","jj"],agency:["ey1 jh-ah-n s-iy","nn"],agenda:["ah jh-eh1-n d-ah","nn"],agent:["ey1 jh-ah-n-t","nn"],agglomeration:["ah g-l-aa m-er ey1 sh-ah-n","nn"],aggrandize:["ah-g-r-ae1-n-d-ay-z","vb"],aggravate:["ae1 g-r-ah v-ey-t","vbp vb"],aggravating:["ae1 g-r-ah v-ey t-ih-ng","vbg jj"],aggregate:["ae1 g-r-ah g-ah-t","jj nn"],aggression:["ah g-r-eh1 sh-ah-n","nn"],aggressive:["ah g-r-eh1 s-ih-v","jj"],aggressively:["ah g-r-eh1 s-ih-v l-iy","rb"],aggressiveness:["ah g-r-eh1 s-ih-v n-ah-s","nn"],aggressor:["ah g-r-eh1 s-er","nn"],aggrieve:["ah-g-r-iy1-v","vb"],aggrieved:["ah g-r-iy1-v-d","vbn jj"],aghast:["ah g-ae1-s-t","jj"],agile:["ae1 jh-ah-l","jj"],agility:["ah jh-ih1 l-ah t-iy","nn"],aging:["ey1 jh-ih-ng","vbg jj nn"],agitate:["ae1 jh-ah t-ey-t","vb vbp"],agitation:["ae jh-ah t-ey1 sh-ah-n","nn"],agitator:["ae1 jh-ah t-ey t-er","nn"],agleam:["ah-g l-iy1-m","jj"],ago:["ah g-ow1","rb in"],agonize:["ae1 g-ah n-ay-z","vb vbp"],agonized:["ae1 g-ah n-ay-z-d","vbd jj"],agonizing:["ae1 g-ah n-ay z-ih-ng","jj"],agony:["ae1 g-ah n-iy","nn"],agrarian:["ah g-r-eh1 r-iy ah-n","jj nn"],agree:["ah g-r-iy1","vb vbp"],agreeable:["ah g-r-iy1 ah b-ah-l","jj"],agreed:["ah g-r-iy1-d","vbd vbn jj"],agreement:["ah g-r-iy1 m-ah-n-t","nn"],agricultural:["ae g-r-ah k-ah1-l ch-er ah-l","jj"],agriculture:["ae1 g-r-ih k-ah-l ch-er","nn"],agronomist:["ah g-r-aa1 n-ah m-ih-s-t","nn"],aground:["ah g-r-aw1-n-d","rb"],ahead:["ah hh-eh1-d","rb jj"],ahs:["aa1-z","uh"],aid:["ey1-d","nn vb vbp"],aide:["ey1-d","nn"],ail:["ey1-l","vb"],aileron:["ey1 l-er aa-n","nn"],ailing:["ey1 l-ih-ng","vbg jj"],ailment:["ey1-l m-ah-n-t","nn"],aim:["ey1-m","nn vbp vb"],aimless:["ey1-m l-ah-s","jj"],aimlessly:["ey1-m l-ah-s l-iy","rb"],air:["eh1-r","nn vb"],airbag:["eh1-r b-ae-g","nn"],airborne:["eh1-r b-ao-r-n","jj"],aircraft:["eh1-r k-r-ae-f-t","nn"],airfare:["eh1-r f-eh-r","nn"],airfield:["eh1-r f-iy-l-d","nn"],airflow:["eh1-r f-l-ow","nn"],airframe:["eh1-r f-r-ey-m","nn"],airless:["eh1-r l-ah-s","jj"],airlift:["eh1-r l-ih-f-t","nn vb"],airline:["eh1-r l-ay-n","nn"],airliner:["eh1-r l-ay n-er","nn"],airmail:["eh1-r m-ey-l","nn"],airman:["eh1-r m-ah-n","nn"],airplane:["eh1-r p-l-ey-n","nn"],airport:["eh1-r p-ao-r-t","nn"],airspeed:["eh1-r s-p-iy-d","nn"],airstrip:["eh1-r s-t-r-ih-p","nn"],airtime:["eh1-r t-ay-m","nn"],airwave:["eh1-r w-ey-v","nn"],airway:["eh1-r w-ey","nn"],airy:["eh1 r-iy","jj"],aisle:["ay1-l","nn"],ajar:["ah jh-aa1-r","rb"],alabaster:["ae1 l-ah b-ae s-t-er","jj"],alarm:["ah l-aa1-r-m","nn vb"],alarmed:["ah l-aa1-r-m-d","vbn jj"],alarming:["ah l-aa1-r m-ih-ng","jj vbg"],alarmingly:["ah l-aa1-r m-ih-ng l-iy","rb"],alarmist:["ah l-aa1-r m-ah-s-t","jj"],alas:["ah l-ae1-s","uh"],albatross:["ae1-l b-ah t-r-aa-s","nn"],albeit:["ao-l b-iy1 ih-t","in rb"],albino:["ae-l b-ay1 n-ow","nn"],album:["ae1-l b-ah-m","nn"],albumin:["ae-l b-y-uw1 m-ah-n","nn"],alchemy:["ae1-l k-ah m-iy","nn"],alcohol:["ae1-l k-ah hh-aa-l","nn"],alcoholic:["ae-l k-ah hh-aa1 l-ih-k","jj nn"],alcoholism:["ae1-l k-ah hh-ao l-ih z-ah-m","nn"],alcove:["ae1-l k-ow-v","nn"],alderman:["ao1-l d-er m-ah-n","nn"],ale:["ey1-l","nn"],alert:["ah l-er1-t","jj vbp nn vb"],alertness:["ah l-er1-t n-ah-s","nn"],alfalfa:["ae-l f-ae1-l f-ah","nn"],algae:["ae1-l jh-iy","nn"],algebra:["ae1-l jh-ah b-r-ah","nn"],algebraic:["ae-l jh-ah b-r-ey1 ih-k","jj"],algorithm:["ae1-l g-er ih dh-ah-m","nn"],alias:["ey1 l-iy ah-s","nn"],alibi:["ae1 l-ah b-ay","nn"],alien:["ey1 l-iy ah-n","jj nn"],alienate:["ey1 l-y-ah n-ey-t","vb"],alienating:["ey1 l-iy ah n-ey t-ih-ng","vbg jj"],alienation:["ey l-iy ah n-ey1 sh-ah-n","nn"],alight:["ah l-ay1-t","jj vb"],align:["ah l-ay1-n","vb vbp"],aligned:["ah l-ay1-n-d","vbn jj"],alignment:["ah l-ay1-n m-ah-n-t","nn"],alike:["ah l-ay1-k","rb jj"],alimony:["ae1 l-ah m-ow n-iy","nn"],alive:["ah l-ay1-v","jj rb"],alkali:["ae1-l k-ah l-ay","nn"],alkaline:["ae1-l k-ah l-ay-n","jj"],alkaloid:["ae1-l k-ah l-oy-d","nn"],all:["ao1-l","dt rb pdt"],allay:["ah l-ey1","vb"],allegation:["ae l-ah g-ey1 sh-ah-n","nn"],allege:["ah l-eh1-jh","vbp vb"],alleged:["ah l-eh1-jh-d","vbn jj vbd"],allegedly:["ah l-eh1 jh-ah-d l-iy","rb"],allegiance:["ah l-iy1 jh-ah-n-s","nn"],allegorical:["ae l-ah g-ao1 r-ah k-ah-l","jj"],allegory:["ae1 l-ah g-ao r-iy","nn"],allegro:["ah l-eh1 g-r-ow","jj"],allergic:["ah l-er1 jh-ih-k","jj"],allergy:["ae1 l-er jh-iy","nn"],alleviate:["ah l-iy1 v-iy ey-t","vb vbp"],alley:["ae1 l-iy","nn"],alleyway:["ae1 l-iy w-ey","nn"],alliance:["ah l-ay1 ah-n-s","nn"],allied:["ah l-ay1-d","vbn jj vbd"],alligator:["ae1 l-ah g-ey t-er","nn"],alliterative:["ah l-ih1 t-er ah t-ih-v","jj"],allocate:["ae1 l-ah k-ey-t","vb vbp"],allocation:["ae l-ah k-ey1 sh-ah-n","nn"],allocator:["ae1 l-ah k-ey t-er","nn"],allot:["ah l-aa1-t","vb"],allotment:["ah l-aa1-t m-ah-n-t","nn"],allow:["ah l-aw1","vb vbp"],allowable:["ah l-aw1 ah b-ah-l","jj"],allowance:["ah l-aw1 ah-n-s","nn"],allowed:["ah l-aw1-d","vbn jj vbd"],alloy:["ae1 l-oy","nn"],allude:["ah-l-uw1-d","vb"],allure:["ah l-uh1-r","nn"],alluring:["ah l-uh1 r-ih-ng","jj"],allusion:["ah l-uw1 zh-ah-n","nn"],alluvial:["ae l-uw1 v-iy ah-l","jj"],ally:["ae1 l-ay","nn"],alma:["ae1-l m-ah","jj nn"],almanac:["ao1-l m-ah n-ae-k","nn"],almond:["aa1 m-ah-n-d","nn"],almost:["ao1-l m-ow-s-t","rb jj"],aloft:["ah l-ao1-f-t","rb"],alone:["ah l-ow1-n","rb jj"],along:["ah l-ao1-ng","in rb rp"],alongside:["ah l-ao1-ng s-ay1-d","in rb"],aloof:["ah l-uw1-f","jj rb"],aloofness:["ah l-uw1-f n-ah-s","nn"],aloud:["ah l-aw1-d","rb"],alpha:["ae1-l f-ah","jj nn"],alphabet:["ae1-l f-ah b-eh-t","nn"],alphabetic:["ae-l f-ah b-eh1 t-ih-k","jj"],alphabetical:["ae-l f-ah b-eh1 t-ih k-ah-l","jj"],alphabetically:["ae-l f-ah b-eh1 t-ih-k l-iy","rb"],already:["ao-l r-eh1 d-iy","rb"],also:["ao1-l s-ow","rb ."],altar:["ao1-l t-er","nn"],alter:["ao1-l t-er","vb vbp"],alteration:["ao-l t-er ey1 sh-ah-n","nn"],altercation:["aa-l t-er k-ey1 sh-ah-n","nn"],altered:["ao1-l t-er-d","vbn jj vbd"],alternate:["ao1-l t-er n-ah-t","jj vbp nn vb"],alternately:["ao1-l t-er n-ah-t l-iy","rb"],alternative:["ao-l t-er1 n-ah t-ih-v","nn jj"],alternatively:["ao-l t-er1 n-ah t-ih-v l-iy","rb"],although:["ao-l dh-ow1","in"],altitude:["ae1-l t-ah t-uw-d","nn"],altogether:["ao-l t-ah g-eh1 dh-er","rb"],altruism:["ae1-l t-r-uw ih z-ah-m","nn"],altruistic:["ao-l t-r-uw ih1 s-t-ih-k","jj"],alum:["ae1 l-ah-m","nn"],aluminum:["ah l-uw1 m-ah n-ah-m","nn jj"],alumnus:["ah l-ah1-m n-ah-s","nn"],always:["ao1-l w-ey-z","rb"],am:["ae1-m","vbp rb"],amalgam:["ah m-ae1-l g-ah-m","nn"],amalgamate:["ah-m-ae1-l-g-ah-m-ey-t","vb"],amalgamation:["ah m-ae-l g-ah m-ey1 sh-ah-n","nn"],amass:["ah m-ae1-s","vb vbp"],amateur:["ae1 m-ah t-er","nn jj"],amateurish:["ae1 m-ah ch-er ih-sh","jj"],amaze:["ah m-ey1-z","vb vbp"],amazed:["ah m-ey1-z-d","vbn vbd jj"],amazement:["ah m-ey1-z m-ah-n-t","nn"],amazing:["ah m-ey1 z-ih-ng","jj"],amazingly:["ah m-ey1 z-ih-ng l-iy","rb"],amazon:["ae1 m-ah z-aa-n","nn"],ambassador:["ae-m b-ae1 s-ah d-er","nn"],amber:["ae1-m b-er","jj nn"],ambiance:["ae1-m b-iy ah-n-s","nn"],ambidextrous:["ae-m b-ah d-eh1-k-s t-r-ah-s","jj"],ambiguity:["ae-m b-ih g-y-uw1 ah t-iy","nn"],ambiguous:["ae-m b-ih1 g-y-uw ah-s","jj"],ambition:["ae-m b-ih1 sh-ah-n","nn"],ambitious:["ae-m b-ih1 sh-ah-s","jj"],ambitiously:["ae-m b-ih1 sh-ah-s l-iy","rb"],ambivalence:["ae-m b-ih1 v-ah l-ah-n-s","nn"],ambivalent:["ae-m b-ih1 v-ah l-ah-n-t","jj"],amble:["ae1-m b-ah-l","vb"],ambrosial:["ae-m b-r-ow1 zh-ah-l","jj"],ambulance:["ae1-m b-y-ah l-ah-n-s","nn"],ambulatory:["ae1-m b-y-ah l-ah t-ao r-iy","jj"],ambush:["ae1-m b-uh-sh","nn vb"],amelioration:["ah m-iy l-y-er ey1 sh-ah-n","nn"],amen:["ey m-eh1-n","uh"],amenable:["ah m-eh1 n-ah b-ah-l","jj"],amend:["ah m-eh1-n-d","vb vbp"],amendment:["ah m-eh1-n-d m-ah-n-t","nn"],amenity:["ah m-eh1 n-ah t-iy","nn"],amiable:["ey1 m-iy ah b-ah-l","jj"],amicable:["ae1 m-ih k-ah b-ah-l","jj"],amicably:["ae1 m-ih k-ah b-l-iy","rb"],amicus:["ah m-iy1 k-ah-s","nn"],amid:["ah m-ih1-d","in"],amidst:["ah m-ih1-d-s-t","in"],amiss:["ah m-ih1-s","jj"],amity:["ae1 m-ih t-iy","nn"],ammo:["ae1 m-ow","nn"],ammonia:["ah m-ow1 n-y-ah","nn"],ammonium:["ah m-ow1 n-iy ah-m","nn"],ammunition:["ae m-y-ah n-ih1 sh-ah-n","nn"],amnesty:["ae1-m n-ah s-t-iy","nn"],amniotic:["ae1-m n-iy ao t-ih-k","jj"],amok:["ah m-ah1-k","rb"],among:["ah m-ah1-ng","in"],amongst:["ah m-ah1-ng-s-t","in"],amoral:["ey m-ao1 r-ah-l","jj"],amorist:["ae1 m-er ah-s-t","nn"],amorous:["ae1 m-er ah-s","jj"],amorphous:["ah m-ao1-r f-ah-s","jj"],amortize:["ae1 m-er t-ay-z","vb"],amount:["ah m-aw1-n-t","nn vb vbp"],amphetamine:["ae-m f-eh1 t-ah m-iy-n","nn"],amphibious:["ae-m f-ih1 b-iy ah-s","jj"],amphitheater:["ae1-m f-ah th-iy ah t-er","nn"],ample:["ae1-m p-ah-l","jj"],amplification:["ae-m p-l-ah f-ah k-ey1 sh-ah-n","nn"],amplified:["ae1-m p-l-ah f-ay-d","vbn"],amplifier:["ae1-m p-l-ah f-ay er","nn"],amplifies:["ae1-m p-l-ah f-ay-z","vbz"],amplify:["ae1-m p-l-ah f-ay","vb"],amplitude:["ae1-m p-l-ah t-uw-d","nn"],amply:["ae1-m p-l-iy","rb"],amputate:["ae1-m-p-y-ah-t-ey-t","vb"],amputation:["ae-m p-y-ah t-ey1 sh-ah-n","nn"],amulet:["ae1 m-y-ah l-ah-t","nn"],amuse:["ah m-y-uw1-z","vb vbp"],amused:["ah m-y-uw1-z-d","vbn jj vbd"],amusement:["ah m-y-uw1-z m-ah-n-t","nn"],amusing:["ah m-y-uw1 z-ih-ng","jj"],amusingly:["ah m-y-uw1 z-ih-ng l-iy","rb"],an:["ae1-n","dt cc jj"],anachronism:["ah n-ae1 k-r-ah n-ih z-ah-m","nn"],anachronistic:["ah n-ae k-r-ah n-ih1 s-t-ih-k","jj"],anaconda:["ae n-ah k-aa1-n d-ah","nn"],anaerobic:["ae n-er ow1 b-ih-k","jj"],anaesthesia:["ae n-ah-s th-iy1 zh-ah","nn"],anagram:["ae1 n-ah g-r-ae-m","nn"],analgesic:["ae n-ah-l jh-iy1 s-ih-k","jj nn"],analog:["ae1 n-ah l-ao-g","nn jj"],analogous:["ah n-ae1 l-ah g-ah-s","jj"],analogue:["ae1 n-ah l-ao-g","nn"],analogy:["ah n-ae1 l-ah jh-iy","nn"],analyse:["ah n-ae1 l-ah-z","vb"],analysis:["ah n-ae1 l-ah s-ah-s","nn"],analyst:["ae1 n-ah l-ah-s-t","nn"],analytic:["ae n-ah l-ih1 t-ih-k","jj nn"],analytical:["ae n-ah l-ih1 t-ih k-ah-l","jj"],analytically:["ae n-ah l-ih1 t-ih-k l-iy","rb"],analyticity:["ae n-ah l-ah t-ih1 s-ah t-iy","nn"],analyzable:["ae1 n-ah l-ay z-ah b-ah-l","jj"],analyze:["ae1 n-ah l-ay-z","vb vbp"],analyzer:["ae1 n-ah l-ay z-er","nn"],anarchic:["ae n-aa1-r k-ih-k","jj"],anarchical:["ae n-aa1-r k-ah k-ah-l","jj"],anarchist:["ae1 n-er k-ah-s-t","nn"],anarchy:["ae1 n-er k-iy","nn"],anathema:["ah n-ae1 th-ah m-ah","nn"],anatomical:["ae n-ah t-aa1 m-ah k-ah-l","jj nn"],anatomically:["ae n-ah t-aa1 m-ah-k l-iy","rb"],anatomy:["ah n-ae1 t-ah m-iy","nn"],ancestor:["ae1-n s-eh s-t-er","nn"],ancestral:["ae-n s-eh1-s t-r-ah-l","jj"],ancestry:["ae1-n s-eh-s t-r-iy","nn"],anchor:["ae1-ng k-er","nn vbp vb"],anchorage:["ae1-ng k-er ah-jh","nn"],anchored:["ae1-ng k-er-d","vbn vbd jj"],anchovy:["ae-n ch-ow1 v-iy","nn"],ancient:["ey1-n ch-ah-n-t","jj nn"],ancillary:["ae1-n s-ah l-eh r-iy","jj"],and:["ae1-n-d","cc"],anecdotal:["ae n-ah-k d-ow1 t-ah-l","jj"],anecdote:["ae1 n-ah-k d-ow-t","nn"],anemia:["ah n-iy1 m-iy ah","nn"],anemic:["ah n-iy1 m-ih-k","jj"],anesthetic:["ae n-ah-s th-eh1 t-ih-k","nn"],anew:["ah n-uw1","rb"],angel:["ey1-n jh-ah-l","nn"],angelfish:["ey1-n jh-ah-l f-ih-sh","nn"],angelic:["ae-n jh-eh1 l-ih-k","jj"],angelica:["ae-n jh-eh1 l-ih k-ah","nn"],anger:["ae1-ng g-er","nn vb vbp"],angered:["ae1-ng g-er-d","vbn jj vbd"],angina:["ae-n jh-ay1 n-ah","nn"],angle:["ae1-ng g-ah-l","nn vb"],angler:["ae1-ng g-l-er","nn"],angora:["ae-ng g-ao1 r-ah","nn"],angrily:["ae1-ng g-r-ah l-iy","rb"],angry:["ae1-ng g-r-iy","jj"],angst:["aa1-ng-k-s-t","nn"],anguish:["ae1-ng g-w-ih-sh","nn"],anguished:["ae1-ng g-w-ih-sh-t","jj"],angular:["ae1-ng g-y-ah l-er","jj"],animal:["ae1 n-ah m-ah-l","nn jj"],animate:["ae1 n-ah m-ah-t","jj vb"],animated:["ae1 n-ah m-ey t-ah-d","jj vbd vbn"],animation:["ae n-ah m-ey1 sh-ah-n","nn"],animism:["ae1 n-ah m-ih z-ah-m","nn"],animosity:["ae n-ah m-aa1 s-ah t-iy","nn"],anise:["ae1 n-ah-s","nn"],ankle:["ae1-ng k-ah-l","nn"],annals:["ae1 n-ah-l-z","nn"],annex:["ae1 n-eh-k-s","nn vb"],annexation:["ae n-eh-k s-ey1 sh-ah-n","nn"],annihilate:["ah n-ay1 ah l-ey-t","vb"],annihilation:["ah n-ay ah l-ey1 sh-ah-n","nn"],anniversary:["ae n-ah v-er1 s-er iy","nn"],annotate:["ae1-n-ah-t-ey-t","vb"],announce:["ah n-aw1-n-s","vb vbp"],announced:["ah n-aw1-n-s-t","vbd vbn jj"],announcement:["ah n-aw1-n s-m-ah-n-t","nn"],announcer:["ah n-aw1-n s-er","nn"],announcment:["ah n-aw1-n s-m-ah-n-t","nn"],annoy:["ah n-oy1","vb vbp"],annoyance:["ah n-oy1 ah-n-s","nn"],annoyed:["ah n-oy1-d","vbn vbd jj"],annoying:["ah n-oy1 ih-ng","jj nn"],annual:["ae1 n-y-uw ah-l","jj nn vb"],annualize:["ae1-n-y-uw-w-ah-l-ay-z","vb"],annualized:["ae1 n-y-uw w-ah l-ay-z-d","vbn vbd jj"],annually:["ae1 n-y-uw ah l-iy","rb"],annuity:["ah n-uw1 ah t-iy","nn"],annul:["ae1-n-ah-l","vb"],annum:["ae1 n-ah-m","nn"],anode:["ae1 n-ow-d","nn"],anomalous:["ah n-aa1 m-ah l-ah-s","jj"],anomaly:["ah n-aa1 m-ah l-iy","nn"],anonymity:["ae n-ah n-ih1 m-ih t-iy","nn"],anonymous:["ah n-aa1 n-ah m-ah-s","jj"],anonymously:["ah n-aa1 n-ah m-ah-s l-iy","rb"],anorexia:["ae n-er eh1-k s-iy ah","nn"],another:["ah n-ah1 dh-er","dt jj nn"],answer:["ae1-n s-er","nn vb vbp"],answerable:["ae1-n s-er ah b-ah-l","jj"],ant:["ae1-n-t","nn"],antacid:["ae-n t-ae1 s-ah-d","nn"],antagonism:["ae-n t-ae1 g-ah n-ih z-ah-m","nn"],antagonist:["ae-n t-ae1 g-ah n-ah-s-t","nn"],antagonistic:["ae-n t-ae g-ah n-ih1 s-t-ih-k","jj"],antagonize:["ae-n t-ae1 g-ah n-ay-z","vb vbp"],ante:["ae1-n t-iy","nn vb"],anteater:["ae1-n-t iy t-er","nn"],antebellum:["ae-n t-ih b-eh1 l-ah-m","jj"],antecedent:["ae-n t-ih s-iy1 d-ah-n-t","nn"],antelope:["ae1-n t-ah l-ow-p","nn"],antenna:["ae-n t-eh1 n-ah","nn"],anterior:["ae-n t-ih1 r-iy er","jj"],anthem:["ae1-n th-ah-m","nn"],anthology:["ae-n th-aa1 l-ah jh-iy","nn"],anthrax:["ae1-n th-r-ae-k-s","nn"],anthropologist:["ae-n th-r-ah p-aa1 l-ah jh-ah-s-t","nn"],anthropology:["ae-n th-r-ah p-aa1 l-ah jh-iy","nn"],antibacterial:["ae-n t-iy b-ae-k t-ih1 r-iy ah-l","jj"],antibiotic:["ae-n t-iy b-iy aa1 t-ih-k","nn jj"],antibody:["ae1-n t-ih b-aa d-iy","nn"],antic:["ae1-n t-ih-k","jj"],anticipate:["ae-n t-ih1 s-ah p-ey-t","vb vbp"],anticipated:["ae-n t-ih1 s-ah p-ey t-ah-d","vbn jj vbd"],anticipation:["ae-n t-ih s-ah p-ey1 sh-ah-n","nn"],anticipatory:["ae-n t-ih1 s-ah p-ah t-ao r-iy","jj"],antidepressant:["ae-n t-iy d-ih p-r-eh1 s-ah-n-t","nn"],antidote:["ae1-n t-ih d-ow-t","nn"],antifreeze:["ae1-n t-iy f-r-iy-z","nn"],antigen:["ae1-n t-ah jh-ah-n","nn"],antihistamine:["ae-n t-iy hh-ih1 s-t-ah m-ah-n","nn"],antipathy:["ae-n t-ih1 p-ah th-iy","nn"],antiquated:["ae1-n t-ah k-w-ey t-ah-d","jj"],antique:["ae-n t-iy1-k","jj nn"],antiquity:["ae-n t-ih1 k-w-ah t-iy","nn"],antiseptic:["ae-n t-ah s-eh1-p t-ih-k","jj nn"],antisocial:["ae-n t-ih s-ow1 sh-ah-l","jj"],antithesis:["ae-n t-ih1 th-ah s-ah-s","nn"],antithetical:["ae-n t-ah th-eh1 t-ih k-ah-l","jj"],antiviral:["ae-n t-iy v-ay1 r-ah-l","jj nn"],antsy:["ae1-n-t s-iy","jj rb"],anvil:["ae1-n v-ah-l","nn"],anxiety:["ae-ng z-ay1 ah t-iy","nn"],anxious:["ae1-ng-k sh-ah-s","jj"],anxiously:["ae1-ng-k sh-ah-s l-iy","rb"],any:["eh1 n-iy","dt rb"],anybody:["eh1 n-iy b-ah d-iy","nn"],anyhow:["eh1 n-iy hh-aw","rb"],anymore:["eh n-iy m-ao1-r","rb"],anyone:["eh1 n-iy w-ah-n","nn"],anyplace:["eh1 n-iy p-l-ey-s","rb"],anything:["eh1 n-iy th-ih-ng","nn"],anytime:["eh1 n-iy t-ay-m","rb"],anyway:["eh1 n-iy w-ey","rb"],anyways:["eh1 n-iy w-ey-z","uh"],anywhere:["eh1 n-iy w-eh-r","rb"],aorta:["ey ao1-r t-ah","nn"],apace:["ah p-ey1-s","rb"],apart:["ah p-aa1-r-t","rb rp jj"],apartheid:["ah p-aa1-r-t ay-t","nn"],apartment:["ah p-aa1-r-t m-ah-n-t","nn"],apathetic:["ae p-ah th-eh1 t-ih-k","jj"],apathy:["ae1 p-ah th-iy","nn"],ape:["ey1-p","nn vb"],aperture:["ae1 p-er ch-er","nn"],apex:["ey1 p-eh-k-s","nn"],aphorism:["ae1 f-er ih z-ah-m","nn"],apiece:["ah p-iy1-s","rb jj"],aplenty:["ah p-l-eh1-n t-iy","jj rb"],aplomb:["ah p-l-aa1-m","nn"],apocalypse:["ah p-aa1 k-ah l-ih-p-s","nn"],apocalyptic:["ah p-aa k-ah l-ih1-p t-ih-k","jj"],apocryphal:["ah p-aa1 k-r-ah f-ah-l","jj"],apogee:["ae1 p-ah jh-iy","nn"],apologetic:["ah p-aa l-ah jh-eh1 t-ih-k","jj"],apologetically:["ah p-aa l-ah jh-eh1 t-ih-k l-iy","rb"],apologist:["ah p-aa1 l-ah jh-ah-s-t","nn"],apologize:["ah p-aa1 l-ah jh-ay-z","vb"],apology:["ah p-aa1 l-ah jh-iy","nn"],apoplectic:["ae p-ah p-l-eh1-k t-ih-k","jj"],apostle:["ah p-aa1 s-ah-l","nn"],apothecary:["ah p-aa1 th-ah k-eh r-iy","nn"],apotheosis:["ah p-aa th-iy ow1 s-ah-s","nn"],appall:["ah-p-ao1-l","vb"],appalled:["ah p-ao1-l-d","vbn jj"],appalling:["ah p-ao1 l-ih-ng","jj"],appallingly:["ah p-ao1 l-ih-ng l-iy","rb"],apparatus:["ae p-er ae1 t-ah-s","nn"],apparel:["ah p-ae1 r-ah-l","nn vb"],apparent:["ah p-eh1 r-ah-n-t","jj nn"],apparently:["ah p-eh1 r-ah-n-t l-iy","rb"],apparition:["ae p-er ih1 sh-ah-n","nn"],appeal:["ah p-iy1-l","nn vbp vb"],appealing:["ah p-iy1 l-ih-ng","jj vbg"],appear:["ah p-ih1-r","vb vbp"],appearance:["ah p-ih1 r-ah-n-s","nn"],appease:["ah p-iy1-z","vb"],appeasement:["ah p-iy1-z m-ah-n-t","nn"],appeasing:["ah p-iy1 z-ih-ng","nn"],appellate:["ah p-eh1 l-ih-t","jj nn"],append:["ah p-eh1-n-d","vb"],appendage:["ah p-eh1-n d-ih jh-ih","nn"],appetite:["ae1 p-ah t-ay-t","nn"],appetizer:["ae1 p-ah t-ay z-er","nn"],appetizing:["ae1 p-ih t-ay z-ih-ng","jj"],applaud:["ah p-l-ao1-d","vbp vb"],applause:["ah p-l-ao1-z","nn"],apple:["ae1 p-ah-l","nn"],appliance:["ah p-l-ay1 ah-n-s","nn"],applicability:["ae p-l-ah k-ah b-ih1 l-ah t-iy","nn"],applicable:["ae1 p-l-ah k-ah b-ah-l","jj"],applicant:["ae1 p-l-ih k-ah-n-t","nn"],application:["ae p-l-ah k-ey1 sh-ah-n","nn"],applicator:["ae1 p-l-ah k-ey t-er","nn"],applied:["ah p-l-ay1-d","vbn vbd jj"],applies:["ah p-l-ay1-z","vbz"],apply:["ah p-l-ay1","vb vbp"],appoint:["ah p-oy1-n-t","vb"],appointed:["ah p-oy1-n t-ah-d","vbn jj vbd"],appointee:["ah p-oy-n t-iy1","nn"],appointment:["ah p-oy1-n-t m-ah-n-t","nn"],apportion:["ah p-ao1-r sh-ah-n","vb"],appraisal:["ah p-r-ey1 z-ah-l","nn"],appraise:["ah p-r-ey1-z","vb"],appraiser:["ah p-r-ey1 z-er","nn"],appreciable:["ah p-r-iy1 sh-ah b-ah-l","jj"],appreciably:["ah p-r-iy1 sh-ah b-l-iy","rb"],appreciate:["ah p-r-iy1 sh-iy ey-t","vb vbp"],appreciated:["ah p-r-iy1 sh-iy ey t-ih-d","vbn vbd jj"],appreciation:["ah p-r-iy sh-iy ey1 sh-ah-n","nn"],appreciative:["ah p-r-iy1 sh-iy ey t-ih-v","jj"],appreciatively:["ah p-r-iy1 sh-iy ey t-ih-v l-iy","rb"],apprehend:["ae p-r-ih hh-eh1-n-d","vb"],apprehension:["ae p-r-ih hh-eh1-n sh-ah-n","nn"],apprehensive:["ae p-r-ih hh-eh1-n s-ih-v","jj"],apprentice:["ah p-r-eh1-n t-ah-s","nn vb"],apprenticeship:["ah p-r-eh1-n t-ah-s sh-ih-p","nn"],apprise:["ah-p-r-ay1-z","vb"],approach:["ah p-r-ow1-ch","nn vb vbp"],approachable:["ah p-r-ow1 ch-ah b-ah-l","jj"],appropriate:["ah p-r-ow1 p-r-iy ah-t","jj vbp vb"],appropriately:["ah p-r-ow1 p-r-iy ih-t l-iy","rb"],appropriateness:["ah p-r-ow1 p-r-iy ah-t n-ah-s","nn"],appropriation:["ah p-r-ow p-r-iy ey1 sh-ah-n","nn"],appropriator:["ah p-r-ow1 p-r-iy ey t-er","nn"],approval:["ah p-r-uw1 v-ah-l","nn"],approve:["ah p-r-uw1-v","vb vbp"],approved:["ah p-r-uw1-v-d","vbd vbn jj"],approvingly:["ah p-r-uw1 v-ih-ng l-iy","rb"],approximate:["ah p-r-aa1-k s-ah m-ah-t","jj vbp nn vb"],approximated:["ah p-r-aa1-k s-ah m-ey t-ah-d","vbn jj vbd"],approximately:["ah p-r-aa1-k s-ah m-ah-t l-iy","rb jj"],approximation:["ah p-r-aa-k s-ah m-ey1 sh-ah-n","nn"],apricot:["ey1 p-r-ah k-aa-t","nn"],april:["ey1 p-r-ah-l","nn"],apron:["ey1 p-r-ah-n","nn"],apt:["ae1-p-t","jj"],aptitude:["ae1-p t-ah t-uw-d","nn"],aquamarine:["aa k-w-ah m-er iy1-n","nn"],aquarium:["ah k-w-eh1 r-iy ah-m","nn"],aquatic:["ah k-w-aa1 t-ih-k","jj"],aqueduct:["ae1 k-w-ah d-ah-k-t","nn"],aqueous:["ey1 k-w-iy ah-s","jj"],aquifer:["ae1 k-w-ah f-er","nn"],arabic:["ae1 r-ah b-ih-k","jj"],arable:["eh1 r-ah b-ah-l","jj"],arbiter:["aa1-r b-ih t-er","nn"],arbitrage:["aa1-r b-ih t-r-aa-zh","nn"],arbitrarily:["aa1-r b-ih t-r-eh r-ah l-iy","rb"],arbitrary:["aa1-r b-ah t-r-eh r-iy","jj"],arbitrate:["aa1-r b-ah t-r-ey-t","vb"],arbitration:["aa-r b-ih t-r-ey1 sh-ah-n","nn"],arbitrator:["aa1-r b-ih t-r-ey t-er","nn"],arboreal:["aa-r b-ao1 r-iy ah-l","jj"],arc:["aa1-r-k","nn vb"],arcade:["aa-r k-ey1-d","nn"],arcane:["aa-r k-ey1-n","jj"],arch:["aa1-r-ch","nn vb vbp"],archaeological:["aa-r k-iy ah l-aa1 jh-ih k-ah-l","jj"],archaeologist:["aa-r k-iy aa1 l-ah jh-ih-s-t","nn"],archaeology:["aa-r k-iy aa1 l-ah jh-iy","nn"],archaic:["aa-r k-ey1 ih-k","jj"],archbishop:["aa1-r-ch b-ih1 sh-ah-p","nn"],archdiocese:["aa1-r-ch d-ay1 ah s-ah-s","nn"],arched:["aa1-r-ch-t","jj vbd vbn"],archenemy:["aa1-r ch-eh1 n-ah m-iy","nn"],archeological:["aa-r k-iy ah l-aa1 jh-ih k-ah-l","jj"],archery:["aa1-r ch-er iy","nn"],archetype:["aa1-r k-ih t-ay-p","nn"],archipelago:["aa-r k-ah p-eh1 l-ah g-ow","nn"],architect:["aa1-r k-ah t-eh-k-t","nn"],architectural:["aa-r k-ah t-eh1-k ch-er ah-l","jj"],architecturally:["aa-r k-ih t-eh1-k ch-er ah l-iy","rb"],architecture:["aa1-r k-ah t-eh-k ch-er","nn"],archival:["aa-r k-ay1 v-ah-l","jj"],archive:["aa1-r k-ay-v","nn"],archivist:["aa1-r k-ah v-ih-s-t","nn"],archrival:["aa1-r-ch r-ay v-ah-l","jj nn"],arctic:["aa1-r-k t-ih-k","jj"],ardent:["aa1-r d-ah-n-t","jj"],ardently:["aa1-r d-ah-n-t l-iy","rb"],ardor:["aa1-r d-er","nn"],arduous:["aa1-r jh-uw ah-s","jj"],are:["aa1-r","vbp"],"aren't":["aa1-r-ah-n-t","vbp"],area:["eh1 r-iy ah","nn"],arena:["er iy1 n-ah","nn"],argon:["aa1-r g-aa-n","nn"],argot:["aa1-r g-ah-t","nn"],arguably:["aa1-r g-y-uw ah b-l-iy","rb"],argue:["aa1-r g-y-uw","vbp vb"],argument:["aa1-r g-y-ah m-ah-n-t","nn"],aria:["aa1 r-iy ah","nn"],arid:["ae1 r-ah-d","jj"],arise:["er ay1-z","vb vbp"],arisen:["er ih1 z-ah-n","vbn"],aristocracy:["eh r-ah s-t-aa1 k-r-ah s-iy","nn"],aristocrat:["er ih1 s-t-ah k-r-ae-t","nn"],aristocratic:["er ih s-t-ah k-r-ae1 t-ih-k","jj"],arithmetic:["eh r-ih-th m-eh1 t-ih-k","nn"],arm:["aa1-r-m","nn vb"],armadillo:["aa-r m-ah d-ih1 l-ow","nn"],armament:["aa1-r m-ah m-ah-n-t","nn"],armchair:["aa1-r-m ch-eh-r","nn jj"],armed:["aa1-r-m-d","vbn jj"],arming:["aa1-r m-ih-ng","nn"],armistice:["aa1-r m-ah s-t-ah-s","nn"],armor:["aa1-r m-er","nn vb"],armored:["aa1-r m-er-d","jj vbn"],armory:["aa1-r m-er iy","nn"],armpit:["aa1-r-m p-ih-t","nn"],army:["aa1-r m-iy","nn"],aroma:["er ow1 m-ah","nn"],aromatic:["eh r-ah m-ae1 t-ih-k","jj"],arose:["er ow1-z","vbd"],around:["er aw1-n-d","in rb rp"],arousal:["er aw1 z-ah-l","jj"],arouse:["er aw1-z","vb vbp"],arraign:["er-ey1-n","vb"],arrange:["er ey1-n-jh","vb vbp"],arrangement:["er ey1-n-jh m-ah-n-t","nn"],array:["er ey1","nn vb"],arrearage:["er iy1 r-ih-jh","nn"],arrears:["er ih1-r-z","nn"],arrest:["er eh1-s-t","nn vbp vb"],arresting:["er eh1 s-t-ih-ng","vbg jj"],arrival:["er ay1 v-ah-l","nn"],arrive:["er ay1-v","vb vbp"],arrogance:["eh1 r-ah g-ah-n-s","nn"],arrogant:["eh1 r-ah g-ah-n-t","jj"],arrogantly:["eh1 r-ah g-ah-n-t l-iy","rb"],arrogate:["ae1 r-ow g-ey-t","vb"],arrow:["ae1 r-ow","nn"],arrowhead:["ae1 r-ow hh-eh-d","nn"],arsenal:["aa1-r s-ah n-ah-l","nn"],arsenic:["aa1-r s-ah n-ih-k","nn"],arson:["aa1-r s-ah-n","nn"],arsonist:["aa1-r s-ah n-ah-s-t","nn"],art:["aa1-r-t","nn"],arterial:["aa-r t-ih1 r-iy ah-l","jj"],artery:["aa1-r t-er iy","nn"],artful:["aa1-r-t f-ah-l","jj"],artfully:["aa1-r-t f-ah l-iy","rb"],arthritic:["aa-r th-r-ih1 t-ih-k","jj"],arthritis:["aa-r-th r-ay1 t-ah-s","nn"],artichoke:["aa1-r t-ah ch-ow-k","nn"],article:["aa1-r t-ah k-ah-l","nn"],articulate:["aa-r t-ih1 k-y-ah l-ey-t","jj vb"],articulation:["aa-r t-ih k-y-ah l-ey1 sh-ah-n","nn"],artifact:["aa1-r t-ah f-ae-k-t","nn"],artifice:["aa1-r t-ah f-ih-s","nn"],artificial:["aa-r t-ah f-ih1 sh-ah-l","jj nn"],artificially:["aa-r t-ah f-ih1 sh-ah l-iy","rb"],artillery:["aa-r t-ih1 l-er iy","nn"],artisan:["aa1-r t-ah z-ah-n","nn"],artist:["aa1-r t-ah-s-t","nn"],artistic:["aa-r t-ih1 s-t-ih-k","jj"],artistically:["aa-r t-ih1 s-t-ih-k l-iy","rb"],artistry:["aa1-r t-ih-s t-r-iy","nn"],artsy:["aa1-r-t s-iy1","jj"],artwork:["aa1-r-t w-er-k","nn"],arty:["aa1-r t-iy","jj"],as:["ae1-z","in rb"],asbestos:["ae-s b-eh1 s-t-ah-s","nn"],ascend:["ah s-eh1-n-d","vb"],ascendancy:["ah s-eh1-n d-ah-n s-iy","nn"],ascendency:["ah s-eh1-n d-ah-n s-iy","nn"],ascension:["ah s-eh1-n sh-ah-n","nn"],ascent:["ah s-eh1-n-t","nn"],ascertain:["ae s-er t-ey1-n","vb"],ascetic:["ah s-eh1 t-ih-k","nn"],ascribe:["ah s-k-r-ay1-b","vbp vb"],ash:["ae1-sh","nn"],ashamed:["ah sh-ey1-m-d","jj"],ashare:["ae1 sh-eh-r","nn"],ashen:["ae1 sh-ah-n","jj"],ashore:["ah sh-ao1-r","rb jj"],ashtray:["ae1-sh t-r-ey","nn"],aside:["ah s-ay1-d","rb rp"],asinine:["ae1 s-ah n-ay-n","jj"],ask:["ae1-s-k","vb vbp"],askance:["ah s-k-ae1-n-s","rb"],askew:["ah s-k-y-uw1","rb"],asleep:["ah s-l-iy1-p","rb jj"],asparagus:["ah s-p-eh1 r-ah g-ah-s","nn"],aspect:["ae1 s-p-eh-k-t","nn"],aspen:["ae1 s-p-ah-n","nn jj"],aspersion:["ah s-p-er1 zh-ah-n","nn"],asphalt:["ae1-s f-ao-l-t","nn jj"],aspirant:["ae1 s-p-er ah-n-t","nn"],aspiration:["ae s-p-er ey1 sh-ah-n","nn"],aspire:["ah s-p-ay1-r","vb vbp"],aspirin:["ae1 s-p-r-ih-n","nn"],aspiring:["ah s-p-ay1 r-ih-ng","jj vbg"],ass:["ae1-s","nn"],assail:["ah s-ey1-l","vb"],assailant:["ah s-ey1 l-ah-n-t","nn"],assassin:["ah s-ae1 s-ah-n","nn"],assassinate:["ah s-ae1 s-ah n-ey-t","vb"],assassination:["ah s-ae s-ah n-ey1 sh-ah-n","nn"],assault:["ah s-ao1-l-t","nn vb vbp"],assay:["ae1 s-iy","nn"],assemblage:["ah s-eh1-m b-l-ah-jh","nn"],assemble:["ah s-eh1-m b-ah-l","vb vbp"],assembled:["ah s-eh1-m b-ah-l-d","vbn vbd jj"],assembly:["ah s-eh1-m b-l-iy","nn"],assent:["ah s-eh1-n-t","vb"],assert:["ah s-er1-t","vb vbp"],assertedly:["ah s-er1 t-ih-d l-iy","rb"],assertion:["ah s-er1 sh-ah-n","nn"],assertive:["ah s-er1 t-ih-v","jj"],assertiveness:["ah s-er1 t-ih-v n-ah-s","nn"],assess:["ah s-eh1-s","vb vbp"],assessment:["ah s-eh1-s m-ah-n-t","nn"],assessor:["ah s-eh1 s-er","nn"],asset:["ae1 s-eh-t","nn"],assiduously:["ah s-ih1 d-w-ah-s l-iy","rb"],assign:["ah s-ay1-n","vb vbp"],assigned:["ah s-ay1-n-d","vbn vbd jj"],assignment:["ah s-ay1-n m-ah-n-t","nn"],assimilate:["ah s-ih1 m-ah l-ey-t","vb"],assimilated:["ah s-ih1 m-ah l-ey t-ih-d","vbn jj"],assimilation:["ah s-ih m-ah l-ey1 sh-ah-n","nn"],assist:["ah s-ih1-s-t","vb nn vbp"],assistance:["ah s-ih1 s-t-ah-n-s","nn"],assistant:["ah s-ih1 s-t-ah-n-t","nn jj"],associate:["ah s-ow1 s-iy ah-t","jj vbp nn vb"],associated:["ah s-ow1 s-iy ey t-ah-d","vbn vbd jj"],association:["ah s-ow s-iy ey1 sh-ah-n","nn"],assort:["ah-s-ao1-r-t","vb"],assorted:["ah s-ao1-r t-ih-d","jj vbn"],assortment:["ah s-ao1-r-t m-ah-n-t","nn"],assuage:["ah s-w-ey1-jh","vb"],assume:["ah s-uw1-m","vb vbp"],assumed:["ah s-uw1-m-d","vbn vbd jj"],assumption:["ah s-ah1-m-p sh-ah-n","nn"],assurance:["ah sh-uh1 r-ah-n-s","nn"],assure:["ah sh-uh1-r","vb vbp"],assured:["ah sh-uh1-r-d","vbn vbd jj nn"],assuredly:["ah sh-uh1 r-ah-d l-iy","rb"],aster:["ae1 s-t-er","nn"],asteroid:["ae1 s-t-er oy-d","jj nn"],asthma:["ae1-z m-ah","nn"],astonish:["ah-s-t-aa1-n-ih-sh","vb"],astonishing:["ah s-t-aa1 n-ih sh-ih-ng","jj"],astonishingly:["ah s-t-aa1 n-ih sh-ih-ng l-iy","rb"],astonishment:["ah s-t-aa1 n-ih-sh m-ah-n-t","nn"],astound:["ah s-t-aw1-n-d","vb"],astounded:["ah s-t-aw1-n d-ih-d","vbn jj"],astounding:["ah s-t-aw1-n d-ih-ng","jj"],astoundingly:["ah s-t-aw1-n d-ih-ng l-iy","rb"],astral:["ae1-s t-r-ah-l","jj"],astray:["ah s-t-r-ey1","rb"],astride:["ah s-t-r-ay1-d","in"],astringent:["ah s-t-r-ih1-n jh-ah-n-t","jj"],astrological:["ae-s t-r-ah l-aa1 jh-ih k-ah-l","jj"],astrology:["ah s-t-r-aa1 l-ah jh-iy","nn"],astronaut:["ae1 s-t-r-ah n-aa-t","nn"],astronomer:["ah s-t-r-aa1 n-ah m-er","nn"],astronomical:["ae s-t-r-ah n-aa1 m-ih k-ah-l","jj"],astronomically:["ae s-t-r-ah n-aa1 m-ih-k l-iy","rb"],astronomy:["ah s-t-r-aa1 n-ah m-iy","nn"],astrophysicist:["ae s-t-r-ow f-ih1 s-ih s-ih-s-t","nn"],astute:["ah s-t-uw1-t","jj"],astuteness:["ah s-t-uw1-t n-ah-s","nn"],asunder:["ah s-ah1-n d-er","rb"],asylum:["ah s-ay1 l-ah-m","nn"],asymmetry:["ey s-ih1 m-ah t-r-iy","nn"],at:["ae1-t","in rb rp"],atavistic:["ae1 t-ah v-ih s-t-ih-k","jj"],ataxia:["ey1 t-ae1-k s-iy ah","nn"],ate:["ey1-t","vbd"],atheism:["ah th-ay1 s-ah-m","nn"],atheist:["ey1 th-iy ah-s-t","jj nn"],atheistic:["ey th-iy ih1 s-t-ih-k","jj"],athlete:["ae1-th l-iy-t","nn"],athletic:["ae-th l-eh1 t-ih-k","jj"],athletically:["ae-th l-eh1 t-ih-k l-iy","rb"],atmosphere:["ae1-t m-ah s-f-ih-r","nn"],atmospheric:["ae-t m-ah-s f-eh1 r-ih-k","jj"],atom:["ae1 t-ah-m","nn"],atomic:["ah t-aa1 m-ih-k","jj"],atonal:["ey t-ow1 n-ah-l","jj"],atone:["ah t-ow1-n","vb"],atonement:["ah t-ow1-n m-ah-n-t","nn"],atop:["ah t-aa1-p","in"],atrium:["ey1 t-r-iy ah-m","nn"],atrocious:["ah t-r-ow1 sh-ah-s","jj"],atrocity:["ah t-r-aa1 s-ah t-iy","nn"],atrophied:["ae1 t-r-ah f-iy-d","vbn"],atrophy:["ae1 t-r-ah f-iy","nn vb vbp"],attach:["ah t-ae1-ch","vb vbp"],attache:["ae t-ah sh-ey1","nn"],attached:["ah t-ae1-ch-t","vbn jj vbd"],attachment:["ah t-ae1-ch m-ah-n-t","nn"],attack:["ah t-ae1-k","nn vbp vb"],attacker:["ah t-ae1 k-er","nn"],attain:["ah t-ey1-n","vb vbp"],attainable:["ah t-ey1 n-ah b-ah-l","jj"],attainment:["ah t-ey1-n m-ah-n-t","nn"],attempt:["ah t-eh1-m-p-t","nn vbp vb"],attempted:["ah t-eh1-m-p t-ah-d","vbd jj vbn"],attend:["ah t-eh1-n-d","vb vbp"],attendance:["ah t-eh1-n d-ah-n-s","nn"],attendant:["ah t-eh1-n d-ah-n-t","nn jj"],attendee:["ah t-eh1-n d-iy1","nn"],attention:["ah t-eh1-n sh-ah-n","nn"],attentive:["ah t-eh1-n t-ih-v","jj"],attentively:["ah t-eh1-n t-ih-v l-iy","rb"],attest:["ah t-eh1-s-t","vb vbp"],attic:["ae1 t-ih-k","nn"],attire:["ah t-ay1 er","nn vb"],attired:["ah t-ay1-r-d","jj vbn"],attitude:["ae1 t-ah t-uw-d","nn"],attorney:["ah t-er1 n-iy","nn"],attract:["ah t-r-ae1-k-t","vb vbp"],attraction:["ah t-r-ae1-k sh-ah-n","nn"],attractive:["ah t-r-ae1-k t-ih-v","jj"],attractively:["ah t-r-ae1-k t-ih-v l-iy","rb"],attractiveness:["ah t-r-ae1-k t-ih-v n-ah-s","nn"],attributable:["ah t-r-ih1 b-y-ah t-ah b-ah-l","jj"],attribute:["ae1 t-r-ah b-y-uw-t","vbp nn vb"],attrition:["ah t-r-ih1 sh-ah-n","nn"],attune:["ah-t-uw1-n","vb"],attuned:["ah t-uw1-n-d","vbn jj"],atypical:["ey t-ih1 p-ih k-ah-l","jj"],auburn:["aa1 b-er-n","jj"],auction:["aa1-k sh-ah-n","nn vb"],auctioneer:["aa-k sh-ah n-ih1-r","nn"],auctioning:["ao1-k sh-ah-n ih-ng","nn"],audacious:["aa d-ey1 sh-ah-s","jj"],audacity:["aa d-ae1 s-ah t-iy","nn"],audible:["aa1 d-ah b-ah-l","jj"],audibly:["aa1 d-ah b-l-iy","rb"],audience:["aa1 d-iy ah-n-s","nn"],audio:["aa1 d-iy ow","jj nn"],audiophile:["ao d-iy1 ow f-iy-l","nn"],audiotex:["ao1 d-iy ow t-eh-k-s","nn"],audiovisual:["ao d-iy ow v-ih1 zh-uw ah-l","jj"],audit:["ao1 d-ih-t","nn vb"],audited:["ao1 d-ih t-ih-d","vbn jj vbd"],audition:["aa d-ih1 sh-ah-n","nn vb"],auditor:["ao1 d-ih t-er","nn"],auditorium:["ao d-ah t-ao1 r-iy ah-m","nn"],augment:["ao-g m-eh1-n-t","vb vbp"],augmented:["aa-g m-eh1-n t-ah-d","vbn jj vbd"],augur:["ao1 g-er","vb vbp"],august:["aa1 g-ah-s-t","jj"],aunt:["ae1-n-t","nn"],aura:["ao1 r-ah","nn"],aural:["ao1 r-ah-l","jj"],auspice:["ao1 s-p-ih s-ih","nn"],auspicious:["aa s-p-ih1 sh-ah-s","jj"],austere:["ao s-t-ih1-r","jj"],austerely:["ao s-t-ih1-r l-iy","rb"],austerity:["ao s-t-eh1 r-ih t-iy","nn"],authentic:["ah th-eh1-n t-ih-k","jj"],authentically:["ao th-eh1-n t-ih-k l-iy","rb"],authenticate:["ao th-eh1-n t-ah k-ey-t","vb vbp"],authentication:["ao th-eh-n t-ah k-ey1 sh-ah-n","nn"],authenticity:["ao th-ah-n t-ih1 s-ih t-iy","nn"],author:["ao1 th-er","nn vb"],authoritarian:["ah th-ao r-ah t-eh1 r-iy ah-n","jj"],authoritarianism:["ah th-ao r-ah t-eh1 r-iy ah n-ih z-ah-m","nn"],authoritative:["ah th-ao1 r-ah t-ey t-ih-v","jj"],authority:["ah th-ao1 r-ah t-iy","nn"],authorization:["ao th-er ah z-ey1 sh-ah-n","nn"],authorize:["ao1 th-er ay-z","vb"],authorized:["ao1 th-er ay-z-d","vbn jj vbd"],authorship:["ao1 th-er sh-ih-p","nn"],autism:["ao1 t-ih z-ah-m","nn"],autistic:["ao t-ih1 s-t-ih-k","jj"],auto:["ao1 t-ow","nn"],autobiographical:["ao t-ah b-ay ah g-r-ae1 f-ih k-ah-l","jj"],autobiography:["ao t-ah b-ay aa1 g-r-ah f-iy","nn"],autoclave:["ao1 t-ow k-l-ey-v","nn"],autocracy:["ao t-aa1 k-r-ah s-iy","nn"],autocrat:["ao1 t-ah k-r-ae-t","nn"],autocratic:["ao t-ah k-r-ae1 t-ih-k","jj"],autograph:["ao1 t-ah g-r-ae-f","nn vb"],autographed:["ao1 t-ah g-r-ae-f-t","vbn jj"],autoimmune:["ao t-oy1 m-y-uw-n","jj"],automaker:["ao1 t-ow m-ey k-er","nn"],automate:["ao1 t-ah m-ey-t","vb"],automated:["ao1 t-ah m-ey t-ih-d","vbn jj vbd"],automatic:["ao t-ah m-ae1 t-ih-k","jj nn"],automatically:["ao t-ah m-ae1 t-ih-k l-iy","rb"],automation:["ao t-ah m-ey1 sh-ah-n","nn"],automaton:["ao t-aa1 m-ah t-aa-n","nn"],automobile:["ao1 t-ah m-ow b-iy-l","nn"],automotive:["ao t-ah m-ow1 t-ih-v","jj"],autonomic:["ao t-ah n-aa1 m-ih-k","jj"],autonomous:["ao t-aa1 n-ah m-ah-s","jj"],autonomously:["ao t-aa1 n-ow m-ah-s l-iy","rb"],autonomy:["ao t-aa1 n-ah m-iy","nn"],autopsy:["ao1 t-aa-p s-iy","nn vb"],autumn:["ao1 t-ah-m","nn"],autumnal:["ao t-ah1-m n-ah-l","jj"],auxiliary:["aa-g z-ih1 l-y-er iy","jj nn"],avail:["ah v-ey1-l","nn vb"],availability:["ah v-ey l-ah b-ih1 l-ah t-iy","nn"],available:["ah v-ey1 l-ah b-ah-l","jj"],avalanche:["ae1 v-ah l-ae-n-ch","nn"],avarice:["ae1 v-er ah-s","nn"],avenge:["ah v-eh1-n-jh","vb"],avenger:["ah v-eh1-n jh-er","nn"],avenging:["ah v-eh1-n jh-ih-ng","jj vbg"],avenue:["ae1 v-ah n-uw","nn"],average:["ae1 v-er ih-jh","jj nn vb vbp"],averaging:["ae1 v-r-ih jh-ih-ng","vbg jj nn"],averse:["ah v-er1-s","jj"],aversion:["ah v-er1 zh-ah-n","nn"],avert:["ah v-er1-t","vb"],aviary:["ey1 v-iy eh r-iy","nn"],aviation:["ey v-iy ey1 sh-ah-n","nn"],aviator:["ey1 v-iy ey t-er","nn"],avid:["ae1 v-ah-d","jj"],avidly:["ae1 v-ah-d l-iy","rb"],avionics:["ey v-iy aa1 n-ih-k-s","nn"],avocado:["ae v-ah k-aa1 d-ow","nn"],avocation:["ae v-ah k-ey1 sh-ah-n","nn"],avoid:["ah v-oy1-d","vb jj vbp"],avoidable:["ah v-oy1 d-ah b-ah-l","jj"],avoidance:["ah v-oy1 d-ah-n-s","nn"],avoided:["ah v-oy1 d-ah-d","vbn jj vbd"],avowed:["ah v-aw1-d","jj"],avowedly:["ah v-aw1 ah-d l-iy","rb"],avuncular:["ah v-ah1-ng k-y-ah l-er","jj"],await:["ah w-ey1-t","vb vbp"],awaited:["ah w-ey1 t-ah-d","vbd jj vbn"],awake:["ah w-ey1-k","jj rb vb"],awaken:["ah w-ey1 k-ah-n","vb vbp"],award:["ah w-ao1-r-d","nn vbp vb"],aware:["ah w-eh1-r","jj"],awareness:["ah w-eh1-r n-ah-s","nn"],awash:["ah w-aa1-sh","jj rb"],away:["ah w-ey1","rb rp"],awe:["aa1","nn vb"],awed:["ao1-d","vbn jj"],awesome:["aa1 s-ah-m","jj"],awful:["aa1 f-ah-l","jj rb"],awfully:["aa1-f l-iy","rb"],awfulness:["ao1 f-ah-l n-ah-s","nn"],awhile:["ah w-ay1-l","rb"],awkward:["aa1 k-w-er-d","jj"],awkwardly:["ao1 k-w-er-d l-iy","rb"],awkwardness:["ao1 k-w-er-d n-ah-s","nn"],awoke:["ah w-ow1-k","vbd"],awry:["er ay1","rb jj"],axe:["ae1-k-s","nn"],axiom:["ae1-k s-iy ah-m","nn"],axiomatic:["ae-k s-iy ah m-ae1 t-ih-k","jj"],axis:["ae1-k s-ah-s","nn"],axle:["ae1-k s-ah-l","nn"],ayatollah:["ay ah t-ow1 l-ah","nn"],azalea:["ah z-ey1 l-y-ah","nn"],azure:["ae1 zh-er","jj"],babble:["b-ae1 b-ah-l","nn vb"],babe:["b-ey1-b","nn"],baboon:["b-ah b-uw1-n","nn"],baby:["b-ey1 b-iy","nn uh"],babyhood:["b-ey1 b-iy hh-uh-d","nn"],bachelor:["b-ae1 ch-ah l-er","nn"],back:["b-ae1-k","rb in jj nn rp vb vbp"],backbone:["b-ae1-k b-ow-n","nn"],backdate:["b-ae1-k-d-ey-t","vb"],backdoor:["b-ae1-k d-ao-r","jj"],backdrop:["b-ae1-k d-r-aa-p","nn"],backed:["b-ae1-k-t","vbn jj vbd"],backer:["b-ae1 k-er","nn"],backfield:["b-ae1-k f-iy-l-d","nn"],backfire:["b-ae1-k f-ay-r","vb vbp"],background:["b-ae1-k g-r-aw-n-d","nn jj"],backhand:["b-ae1-k hh-ae-n-d","nn"],backhanded:["b-ae1-k hh-ae-n d-ah-d","jj"],backhoe:["b-ae1-k hh-ow","nn"],backlash:["b-ae1-k l-ae-sh","nn"],backlog:["b-ae1-k l-aa-g","nn"],backpack:["b-ae1-k p-ae-k","nn"],backpedal:["b-ae1-k-p-eh-d-ah-l","vb"],backroom:["b-ae1-k r-uw-m","nn"],backside:["b-ae1-k s-ay-d","nn"],backslap:["b-ae1-k-s-l-ae-p","vb"],backstage:["b-ae1-k s-t-ey1-jh","rb"],backstitch:["b-ae1-k s-t-ih-ch","nn vb"],backstop:["b-ae1-k s-t-aa-p","nn vb"],backtrack:["b-ae1-k-t-r-ae-k","vb"],backup:["b-ae1-k ah-p","nn jj"],backward:["b-ae1-k w-er-d","rb jj"],backwardness:["b-ae1 k-w-er-d n-ah-s","nn"],backwards:["b-ae1-k w-er-d-z","rb jj"],backwater:["b-ae1-k w-ao t-er","nn jj"],backwoods:["b-ae1-k w-uh1-d-z","nn"],backyard:["b-ae1-k y-aa-r-d","nn"],bacon:["b-ey1 k-ah-n","nn"],bacterial:["b-ae-k t-ih1 r-iy ah-l","jj"],bacterium:["b-ae-k t-ih1 r-iy ah-m","nn"],bad:["b-ae1-d","jj nn rb"],bade:["b-ey1-d","vbd"],badge:["b-ae1-jh","nn"],badger:["b-ae1-jh-er","vb"],badly:["b-ae1-d l-iy","rb"],badminton:["b-ae1-d m-ih-n t-ah-n","nn"],badness:["b-ae1-d n-ah-s","nn"],baffle:["b-ae1 f-ah-l","vb"],baffled:["b-ae1 f-ah-l-d","vbn jj vbd"],baffling:["b-ae1 f-ah-l ih-ng","jj"],bag:["b-ae1-g","nn vb"],bagel:["b-ey1 g-ah-l","nn"],baggage:["b-ae1 g-ah-jh","nn"],bagged:["b-ae1-g-d","vbd jj"],baggy:["b-ae1 g-iy","jj"],bagpipe:["b-ae1-g p-ay-p","nn"],bail:["b-ey1-l","vb nn"],bailiff:["b-ey1 l-ah-f","nn"],bailout:["b-ey1-l aw-t","nn"],bait:["b-ey1-t","nn vb"],bake:["b-ey1-k","jj vb"],baked:["b-ey1-k-t","jj vbd vbn"],baker:["b-ey1 k-er","nn"],bakery:["b-ey1 k-er iy","nn"],bakeware:["b-ey1-k w-eh-r","nn"],balance:["b-ae1 l-ah-n-s","nn vbp jj rb vb"],balanced:["b-ae1 l-ah-n-s-t","jj vbd vbn"],balcony:["b-ae1-l k-ah n-iy","nn"],bald:["b-ao1-l-d","jj"],balding:["b-ao1-l d-ih-ng","jj"],baldness:["b-ao1-l-d n-ah-s","nn"],bale:["b-ey1-l","nn vb vbp"],baleful:["b-ey1-l f-ah-l","jj"],balk:["b-ao1-k","vb vbp"],balkanized:["b-ao1-l k-ah n-ay-z-d","jj"],ball:["b-ao1-l","nn vb"],ballad:["b-ae1 l-ah-d","nn"],ballast:["b-ae1 l-ah-s-t","nn vb"],ballerina:["b-ae l-er iy1 n-ah","nn"],ballet:["b-ae l-ey1","nn"],ballistic:["b-ah l-ih1 s-t-ih-k","jj"],balloon:["b-ah l-uw1-n","nn vbp vb"],ballot:["b-ae1 l-ah-t","nn"],balloting:["b-ae1 l-ah t-ih-ng","nn"],ballpark:["b-ao1-l p-aa-r-k","nn"],ballplayer:["b-ao1-l p-l-ey er","nn"],ballroom:["b-ao1-l r-uw-m","nn"],ballyhoo:["b-ae1 l-iy hh-uw1","nn vb"],balm:["b-aa1-m","nn"],balmy:["b-aa1 m-iy","jj"],baloney:["b-ah l-ow1 n-iy","nn"],bam:["b-ae1-m","uh"],bambino:["b-ae-m b-iy1 n-ow","nn"],bamboo:["b-ae-m b-uw1","nn"],ban:["b-ae1-n","nn vb vbp"],banal:["b-ah n-aa1-l","jj"],banality:["b-ah n-ae1 l-ih t-iy","nn"],banana:["b-ah n-ae1 n-ah","nn"],band:["b-ae1-n-d","nn vb"],bandage:["b-ae1-n d-ih-jh","nn vb"],bandaged:["b-ae1-n d-ah-jh-d","vbn jj"],bandied:["b-ae1-n d-iy-d","vbn"],bandit:["b-ae1-n d-ah-t","nn"],bandstand:["b-ae1-n-d s-t-ae-n-d","nn"],bandwagon:["b-ae1-n-d w-ae g-ah-n","nn"],bandwidth:["b-ae1-n-d w-ih-d-th","nn"],bandy:["b-ae1-n-d-iy","vb"],bane:["b-ey1-n","nn"],bang:["b-ae1-ng","nn vb uh vbp"],bangish:["b-ae1 ng-ih-sh","jj"],banish:["b-ae1 n-ih-sh","vb"],banishment:["b-ae1 n-ih-sh m-ah-n-t","nn"],banister:["b-ae1 n-ih s-t-er","nn"],banjo:["b-ae1-n jh-ow","nn"],bank:["b-ae1-ng-k","nn vbp vb"],banked:["b-ae1-ng-k-t","vbd jj vbn"],banker:["b-ae1-ng k-er","nn"],bankroll:["b-ae1-ng-k r-ow-l","vb vbp"],bankrupt:["b-ae1-ng k-r-ah-p-t","jj nn vb vbp"],bankruptcy:["b-ae1-ng k-r-ah-p s-iy","nn"],banner:["b-ae1 n-er","nn"],banquet:["b-ae1-ng k-w-ah-t","nn"],banshee:["b-ae-n sh-iy1","nn"],banter:["b-ae1-n t-er","nn"],baptism:["b-ae1-p t-ih z-ah-m","nn"],baptismal:["b-ae-p t-ih1-z m-ah-l","jj"],baptistery:["b-ae1-p t-ah-s t-r-iy","nn"],baptize:["b-ae-p-t-ay1-z","vb"],bar:["b-aa1-r","nn vb vbp"],barb:["b-aa1-r-b","nn vb"],barbarian:["b-aa-r b-eh1 r-iy ah-n","nn"],barbaric:["b-aa-r b-ae1 r-ih-k","jj"],barbarous:["b-aa1-r b-er ah-s","jj"],barbecue:["b-aa1-r b-ih k-y-uw","nn vb"],barbed:["b-aa1-r-b-d","jj vbn"],barbequed:["b-aa1-r b-ih k-y-uw-d","jj"],barber:["b-aa1-r b-er","nn"],bard:["b-aa1-r-d","nn"],bare:["b-eh1-r","jj vb"],barefoot:["b-eh1-r f-uh-t","rb jj"],barely:["b-eh1-r l-iy","rb"],barest:["b-eh1 r-ah-s-t","jjs"],bargain:["b-aa1-r g-ah-n","nn vb"],bargaining:["b-aa1-r g-ih n-ih-ng","nn jj vbg"],barge:["b-aa1-r-jh","nn vb vbp"],baritone:["b-eh1 r-ah t-ow-n","nn jj"],barium:["b-eh1 r-iy ah-m","nn"],bark:["b-aa1-r-k","nn vb"],barley:["b-aa1-r l-iy","nn"],barn:["b-aa1-r-n","nn"],barnacle:["b-aa1-r n-ah k-ah-l","nn"],barnyard:["b-aa1-r-n y-aa-r-d","nn"],barometer:["b-er aa1 m-ih t-er","nn"],barometric:["b-ae r-ah m-eh1 t-r-ih-k","jj"],baron:["b-ae1 r-ah-n","nn"],baroque:["b-er ow1-k","jj nn"],barrack:["b-ae1 r-ah-k","nn"],barrage:["b-er aa1-zh","nn"],barrel:["b-ae1 r-ah-l","nn vb"],barren:["b-ae1 r-ah-n","jj"],barricade:["b-ae1 r-ah k-ey-d","nn vb"],barrier:["b-ae1 r-iy er","nn"],barrio:["b-aa1 r-iy ow","nn"],barrister:["b-ae1 r-ih-s t-er","nn"],barroom:["b-aa1-r r-uw-m","nn"],barrow:["b-ae1 r-ow","nn"],bartender:["b-aa1-r t-eh-n d-er","nn"],barter:["b-aa1-r t-er","nn vb"],base:["b-ey1-s","nn vbp jj vb"],baseball:["b-ey1-s b-ao1-l","nn"],baseless:["b-ey1-s l-ah-s","jj"],baseline:["b-ey1-s l-ay-n","nn jj"],baseman:["b-ey1-s m-ah-n","nn"],basement:["b-ey1-s m-ah-n-t","nn"],bash:["b-ae1-sh","nn vb"],basher:["b-ae1 sh-er","nn"],bashful:["b-ae1-sh f-ah-l","jj"],bashing:["b-ae1 sh-ih-ng","jj vbg"],basic:["b-ey1 s-ih-k","jj nn"],basically:["b-ey1 s-ih-k l-iy","rb"],basil:["b-ae1 z-ah-l","nn"],basin:["b-ey1 s-ah-n","nn"],basis:["b-ey1 s-ah-s","nn"],bask:["b-ae1-s-k","vb"],basket:["b-ae1 s-k-ah-t","nn"],basketball:["b-ae1 s-k-ah-t b-ao-l","nn"],bass:["b-ae1-s","nn"],bassist:["b-ey1 s-ih-s-t","nn"],bassoon:["b-ah s-uw1-n","nn"],bastard:["b-ae1 s-t-er-d","nn"],bastion:["b-ae1 s-ch-ah-n","nn"],bat:["b-ae1-t","nn vb"],batch:["b-ae1-ch","nn"],bated:["b-ey1 t-ih-d","jj"],bath:["b-ae1-th","nn"],bathe:["b-ey1-dh","vb"],bather:["b-ey1 dh-er","nn"],bathrobe:["b-ae1-th r-ow-b","nn"],bathroom:["b-ae1-th r-uw-m","nn"],bathtub:["b-ae1-th t-ah-b","nn"],baton:["b-ah t-aa1-n","nn"],battalion:["b-ah t-ae1 l-y-ah-n","nn"],batted:["b-ae1 t-ih-d","vbd vbn"],batter:["b-ae1 t-er","nn vb"],battered:["b-ae1 t-er-d","vbn vbd jj"],battery:["b-ae1 t-er iy","nn"],battle:["b-ae1 t-ah-l","nn vbp vb"],battlefield:["b-ae1 t-ah-l f-iy-l-d","nn"],battlefront:["b-ae1 t-ah-l f-r-ah-n-t","nn"],battleground:["b-ae1 t-ah-l g-r-aw-n-d","nn"],battlement:["b-ae1 t-ah-l m-ah-n-t","nn"],bauble:["b-ao1 b-ah-l","nn"],bawdy:["b-ao1 d-iy","jj"],bawl:["b-ao1-l","vb"],bay:["b-ey1","nn vb"],bayonet:["b-ey1 ah n-eh-t","nn"],bazaar:["b-ah z-aa1-r","nn"],be:["b-iy1","vb"],beach:["b-iy1-ch","nn vb"],beachfront:["b-iy1-ch f-r-aa-n-t","nn jj"],beachhead:["b-iy1-ch hh-eh-d","nn"],beacon:["b-iy1 k-ah-n","nn"],bead:["b-iy1-d","vb"],beadle:["b-iy1 d-ah-l","nn"],beadwork:["b-iy1-d w-er-k","nn"],beady:["b-iy1 d-iy","jj"],beak:["b-iy1-k","nn"],beaker:["b-iy1 k-er","nn"],beam:["b-iy1-m","nn vb"],beaming:["b-iy1 m-ih-ng","vbg jj"],bean:["b-iy1-n","nn vbn jj"],bear:["b-eh1-r","vb nn vbp"],bearable:["b-eh1 r-ah b-ah-l","jj"],beard:["b-ih1-r-d","nn vb"],bearded:["b-ih1-r d-ah-d","jj vbd vbn"],bearer:["b-eh1 r-er","nn"],bearing:["b-eh1 r-ih-ng","vbg jj nn"],bearish:["b-eh1 r-ih-sh","jj"],bearishly:["b-eh1 r-ih-sh l-iy","rb"],bearishness:["b-eh1 r-ih-sh n-ah-s","nn"],beast:["b-iy1-s-t","nn"],beat:["b-iy1-t","vb jj nn vbd vbn vbp"],beaten:["b-iy1 t-ah-n","vbn jj"],beatnik:["b-iy1-t n-ih-k","nn"],beau:["b-ow1","nn"],beautiful:["b-y-uw1 t-ah f-ah-l","jj"],beautifully:["b-y-uw1 t-ah f-l-iy","rb"],beautify:["b-y-uw1 t-ih f-ay","vb vbp"],beauty:["b-y-uw1 t-iy","nn"],beaver:["b-iy1 v-er","nn"],bebop:["b-iy1 b-aa-p","nn"],becalmed:["b-ih k-aa1-m-d","jj"],became:["b-ih k-ey1-m","vbd"],because:["b-ih k-ao1-z","in rb"],beckon:["b-eh1 k-ah-n","vbp vb"],become:["b-ih k-ah1-m","vb vbd vbn vbp"],bed:["b-eh1-d","nn vb vbp"],bedding:["b-eh1 d-ih-ng","nn"],bedevil:["b-ih d-eh1 v-ah-l","vb"],bedfellow:["b-eh1-d f-eh l-ow","nn"],bedlam:["b-eh1-d l-ah-m","nn"],bedpan:["b-eh1-d p-ae-n","nn"],bedraggled:["b-ih d-r-ae1 g-ah-l-d","jj"],bedridden:["b-eh1-d r-ih d-ah-n","jj"],bedrock:["b-eh1-d r-aa-k","nn"],bedroom:["b-eh1-d r-uw-m","nn"],bedside:["b-eh1-d s-ay-d","nn"],bedspread:["b-eh1-d s-p-r-eh-d","nn"],bedstraw:["b-eh1-d s-t-r-ao","nn"],bedtime:["b-eh1-d t-ay-m","nn"],bee:["b-iy1","nn"],beech:["b-iy1-ch","nn"],beef:["b-iy1-f","nn vb vbp"],beefsteak:["b-iy1-f s-t-ey-k","nn"],beefy:["b-iy1 f-iy","jj"],beehive:["b-iy1 hh-ay-v","nn"],been:["b-ih1-n","vbn"],beep:["b-iy1-p","nn"],beeper:["b-iy1 p-er","nn"],beer:["b-ih1-r","nn"],beet:["b-iy1-t","nn"],beetle:["b-iy1 t-ah-l","nn"],befall:["b-ih f-ao1-l","vb vbp"],befallen:["b-ah f-aa1 l-ah-n","vbn"],befell:["b-ih f-eh1-l","vbd"],befit:["b-ih-f-ih1-t","vb"],befitting:["b-ih f-ih1 t-ih-ng","vbg jj"],before:["b-ih f-ao1-r","in rb rp"],beforehand:["b-ih f-ao1-r hh-ae-n-d","rb"],befriend:["b-ih-f-r-eh1-n-d","vb"],befuddle:["b-ih-f-ah1-d-ah-l","vb"],beg:["b-eh1-g","vbp vb"],began:["b-ih g-ae1-n","vbd"],begat:["b-ih g-ae1-t","vbd"],beget:["b-ih g-eh1-t","vb vbp"],beggar:["b-eh1 g-er","nn"],begin:["b-ih g-ih1-n","vb vbp"],beginner:["b-ih g-ih1 n-er","nn"],beginning:["b-ih g-ih1 n-ih-ng","vbg jj nn"],begonia:["b-ih g-ow1 n-y-ah","nn"],begrudge:["b-ih g-r-ah1-jh","vb"],beguile:["b-ih-g-ay1-l","vb"],beguiling:["b-ih g-ay1 l-ih-ng","jj"],begun:["b-ih g-ah1-n","vbn"],behave:["b-ih hh-ey1-v","vb vbp"],behavior:["b-ih hh-ey1 v-y-er","nn"],behavioral:["b-ih hh-ey1 v-y-er ah-l","jj"],behead:["b-ih-hh-eh1-d","vb"],beheading:["b-ih hh-eh1 d-ih-ng","nn vbg"],behemoth:["b-ah hh-iy1 m-ah-th","nn"],behest:["b-ih hh-eh1-s-t","nn"],behind:["b-ih hh-ay1-n-d","in nn rb rp"],behold:["b-ih hh-ow1-l-d","vb"],beholden:["b-ih hh-ow1-l d-ah-n","jj"],beholder:["b-iy hh-ow1-l d-er","nn"],beige:["b-ey1-zh","jj"],being:["b-iy1 ih-ng","vbg jj nn"],belabor:["b-ih-l-ey1-b-er","vb"],belated:["b-ih l-ey1 t-ih-d","jj"],belatedly:["b-ih l-ey1 t-ah-d l-iy","rb"],belch:["b-eh1-l-ch","nn vb"],beleaguer:["b-ih-l-iy1-g-er","vb"],beleaguered:["b-ih l-iy1 g-er-d","jj vbn"],belfry:["b-eh1-l f-r-iy","nn"],belie:["b-ih l-ay1","vbp vb"],belief:["b-ih l-iy1-f","nn"],believable:["b-ah l-iy1 v-ah b-ah-l","jj"],believe:["b-ih l-iy1-v","vbp vb"],believer:["b-ah l-iy1 v-er","nn"],belittle:["b-ih l-ih1 t-ah-l","vbp vb"],belittled:["b-ih l-ih1 t-ah-l-d","jj"],bell:["b-eh1-l","nn"],bellhop:["b-eh1-l hh-aa-p","nn"],belligerence:["b-ah l-ih1 jh-er ah-n-s","nn"],belligerent:["b-ah l-ih1 jh-er ah-n-t","jj"],bellow:["b-eh1 l-ow","nn vb"],bellows:["b-eh1 l-ow-z","vbz nn"],bellwether:["b-eh1-l w-eh dh-er","nn jj"],belly:["b-eh1 l-iy","nn rb"],belong:["b-ih l-ao1-ng","vb vbp jj"],beloved:["b-ih l-ah1-v-d","jj vbn nn"],below:["b-ih l-ow1","in rb"],belt:["b-eh1-l-t","nn vb"],beltway:["b-eh1-l-t w-ey","nn"],beluga:["b-ih l-uw1 g-ah","nn"],bely:["b-ah-l-ay1","vb"],bemoan:["b-ih m-ow1-n","vb"],bemused:["b-ih m-y-uw1-z-d","jj"],bench:["b-eh1-n-ch","nn vb"],benchmark:["b-eh1-n-ch m-aa-r-k","nn jj"],bend:["b-eh1-n-d","vb nn"],beneath:["b-ih n-iy1-th","in rb"],benefactor:["b-eh1 n-ah f-ae-k t-er","nn"],beneficence:["b-ah n-eh1 f-ah s-ah-n-s","nn"],beneficial:["b-eh n-ah f-ih1 sh-ah-l","jj"],beneficially:["b-eh n-ah f-ih1 sh-ah l-iy","rb"],beneficiary:["b-eh n-ah f-ih1 sh-iy eh r-iy","nn jj"],benefit:["b-eh1 n-ah f-ih-t","nn vb vbp"],benevolence:["b-ah n-eh1 v-ah l-ah-n-s","nn"],benevolent:["b-ah n-eh1 v-ah l-ah-n-t","jj"],benighted:["b-ih n-ay1 t-ih-d","jj"],benign:["b-ih n-ay1-n","jj"],bent:["b-eh1-n-t","vbd vbn jj nn"],benzene:["b-eh-n z-iy1-n","nn"],bequeath:["b-ih k-w-iy1-th","vb"],bequest:["b-ih k-w-eh1-s-t","nn"],berate:["b-ih-r-ey1-t","vb"],bereavement:["b-er iy1-v m-ah-n-t","nn"],bereft:["b-er eh1-f-t","jj vbn"],beret:["b-eh1 r-ah-t","nn"],berg:["b-er1-g","nn"],berry:["b-eh1 r-iy","nn"],berserk:["b-er s-er1-k","jj rb"],berth:["b-er1-th","nn"],beryllium:["b-er ih1 l-iy ah-m","nn"],beset:["b-ih s-eh1-t","vbn jj vbd"],beside:["b-ih s-ay1-d","in rb"],besides:["b-ih s-ay1-d-z","in rb"],besiege:["b-ih s-iy1-jh","vb"],besieged:["b-ih s-iy1-jh-d","vbn jj"],bespeak:["b-ih-s-p-iy1-k","vb"],bespectacled:["b-ih s-p-eh1-k t-ah k-ah-l-d","jj"],best:["b-eh1-s-t","jjs rbs jjss nn rb vb"],bestial:["b-eh1 s-ch-ah-l","jj"],bestow:["b-ih s-t-ow1","vb"],bestseller:["b-eh1-s-t s-eh1 l-er","nn"],bestselling:["b-eh1-s-t s-eh1 l-ih-ng","jj"],bet:["b-eh1-t","nn rb vb vbd vbn vbp"],beta:["b-ey1 t-ah","nn jj"],betide:["b-ih t-ay1-d","vb"],betray:["b-ih t-r-ey1","vb vbp"],betrayal:["b-ih t-r-ey1 ah-l","nn"],better:["b-eh1 t-er","jjr rbr jj rb vb"],betterment:["b-eh1 t-er m-ah-n-t","nn"],between:["b-ih t-w-iy1-n","in rb"],bevel:["b-eh1 v-ah-l","vb"],beverage:["b-eh1 v-er ih-jh","nn"],bevy:["b-eh1 v-iy","nn"],beware:["b-ih w-eh1-r","vb vbp"],bewilder:["b-ih-w-ih1-l-d-er","vb"],bewildered:["b-ih w-ih1-l d-er-d","vbn jj"],bewildering:["b-ih w-ih1-l d-er ih-ng","vbg jj"],bewilderment:["b-ih w-ih1-l d-er m-ah-n-t","nn"],bewitch:["b-ih-w-ih1-ch","vb"],beyond:["b-ih aa1-n-d","in rb"],bi:["b-ay1","in"],bianco:["b-iy aa1-ng k-ow","nn"],biannual:["b-ay ae1 n-uw ah-l","jj"],bias:["b-ay1 ah-s","nn vb"],bib:["b-ih1-b","nn"],bible:["b-ay1 b-ah-l","jj nn"],biblical:["b-ih1 b-l-ah k-ah-l","jj"],bibliography:["b-ih b-l-iy aa1 g-r-ah f-iy","nn"],bicarbonate:["b-ay k-aa1-r b-ah n-ah-t","nn"],bicentennial:["b-ay s-eh-n t-eh1 n-iy ah-l","nn jj"],bicker:["b-ih1-k-er","vb"],bicycle:["b-ay1 s-ih k-ah-l","nn"],bicycling:["b-ay1 s-ih k-ah l-ih-ng","nn"],bid:["b-ih1-d","nn vbd vbn vbp vb"],bidder:["b-ih1 d-er","nn"],bide:["b-ay1-d","vb"],biennial:["b-ay eh1 n-iy ah-l","jj"],bifocal:["b-ay1 f-ow k-ah-l","nn"],bifurcated:["b-ih1 f-er k-ey t-ih-d","jj"],big:["b-ih1-g","jj rb"],bigger:["b-ih1 g-er","jjr rbr"],biggest:["b-ih1 g-ah-s-t","jjs rbs"],biggie:["b-ih1 g-iy","nn"],bigness:["b-ih1-g n-ah-s","nn"],bigot:["b-ih1 g-ah-t","nn"],bigoted:["b-ih1 g-ah t-ih-d","jj"],bigotry:["b-ih1 g-ah t-r-iy","nn"],bike:["b-ay1-k","nn"],biker:["b-ay1 k-er","nn"],biking:["b-ay1 k-ih-ng","nn"],bikini:["b-ih k-iy1 n-iy","nn"],bilateral:["b-ay l-ae1 t-er ah-l","jj"],bile:["b-ay1-l","nn"],bilingual:["b-ay l-ih1-ng g-w-ah-l","jj"],bilious:["b-ih1 l-iy ah-s","jj"],bilk:["b-ih1-l-k","vb"],bill:["b-ih1-l","nn vbp vb"],billable:["b-ih1 l-ah b-ah-l","jj"],billboard:["b-ih1-l b-ao-r-d","nn"],billed:["b-ih1-l-d","vbn jj vbd"],billet:["b-ih1 l-ah-t","nn"],billfold:["b-ih1-l f-ow-l-d","nn"],billiard:["b-ih1 l-y-er-d","nn"],billiards:["b-ih1 l-y-er-d-z","nn"],billing:["b-ih1 l-ih-ng","nn vbg"],billion:["b-ih1 l-y-ah-n","nn"],billionaire:["b-ih l-y-ah n-eh1-r","nn"],billon:["b-ih1 l-ah-n","nn"],billow:["b-ih1-l-ow","vb"],bimbo:["b-ih1-m b-ow","nn"],bimonthly:["b-ay m-ah1-n-th l-iy","jj"],bin:["b-ih1-n","nn"],binary:["b-ay1 n-er iy","jj"],binational:["b-ay n-ae1 sh-ah n-ah-l","jj"],bind:["b-ay1-n-d","nn vb vbp"],binder:["b-ay1-n d-er","nn"],binding:["b-ay1-n d-ih-ng","nn jj vbg"],binge:["b-ih1-n-jh","nn"],bingo:["b-ih1-ng g-ow","nn"],binocular:["b-ah n-aa1 k-y-ah l-er","nn"],binomial:["b-ay n-ow1 m-iy ah-l","nn"],bio:["b-ay ow1","nn jj"],biochemical:["b-ay ow k-eh1 m-ah k-ah-l","jj"],biochemist:["b-ay ow k-eh1 m-ah-s-t","nn"],biochemistry:["b-ay ow k-eh1 m-ah s-t-r-iy","nn"],biodegradable:["b-ay ow d-ah g-r-ey1 d-ah b-ah-l","jj"],biofeedback:["b-ay ow f-iy1-d b-ae-k","nn"],biographer:["b-ay aa1 g-r-ah f-er","nn"],biographical:["b-ay ah g-r-ae1 f-ih k-ah-l","jj"],biography:["b-ay aa1 g-r-ah f-iy","nn"],biological:["b-ay ah l-aa1 jh-ih k-ah-l","jj nn"],biologically:["b-ay ah l-aa1 jh-ih-k l-iy","rb"],biologist:["b-ay aa1 l-ah jh-ah-s-t","nn"],biology:["b-ay aa1 l-ah jh-iy","nn"],biomedical:["b-ay ow m-eh1 d-ih k-ah-l","jj"],biopsy:["b-ay1 aa-p s-iy","nn"],biotech:["b-ay1 ow t-eh-k","jj nn"],biotechnology:["b-ay ow t-eh-k n-aa1 l-ah jh-iy","nn"],bipartisan:["b-ay p-aa1-r t-ih z-ah-n","jj"],biplane:["b-ay1 p-l-ey-n","nn"],biracial:["b-ay r-ey1 sh-ah-l","jj"],birch:["b-er1-ch","nn"],bird:["b-er1-d","nn"],birdie:["b-er1 d-iy","nn vb"],birth:["b-er1-th","nn"],birthday:["b-er1-th d-ey","nn"],birthplace:["b-er1-th p-l-ey-s","nn"],birthrate:["b-er1-th r-ey-t","nn"],birthright:["b-er1-th r-ay-t","nn"],biscuit:["b-ih1 s-k-ah-t","nn"],bisexual:["b-ay s-eh1-k sh-uw ah-l","jj"],bishop:["b-ih1 sh-ah-p","nn"],bison:["b-ay1 s-ah-n","nn"],bisque:["b-ih1-s-k","nn"],bit:["b-ih1-t","nn vbd vbn jj rb vb"],bitch:["b-ih1-ch","nn vb"],bitchy:["b-ih1 ch-iy","jj"],bite:["b-ay1-t","vb vbp nn"],biting:["b-ay1 t-ih-ng","vbg jj"],bitten:["b-ih1 t-ah-n","vbn"],bitter:["b-ih1 t-er","jj"],bitterest:["b-ih1 t-er ah-s-t","jjs"],bitterly:["b-ih1 t-er l-iy","rb"],bitterness:["b-ih1 t-er n-ah-s","nn"],bittersweet:["b-ih1 t-er s-w-iy-t","jj"],bituminous:["b-ih t-uw1 m-ah n-ah-s","jj"],bivouac:["b-ih1-v w-ae-k","nn"],biweekly:["b-ay w-iy1-k l-iy","jj nn"],bizarre:["b-ah z-aa1-r","jj"],black:["b-l-ae1-k","jj nn vb"],blackberry:["b-l-ae1-k b-eh r-iy","nn"],blackboard:["b-l-ae1-k b-ao-r-d","nn"],blacken:["b-l-ae1-k-ah-n","vb"],blackened:["b-l-ae1 k-ah-n-d","vbn jj"],blacker:["b-l-ae1 k-er","jjr"],blackest:["b-l-ae1 k-ah-s-t","jjs"],blackjack:["b-l-ae1-k jh-ae-k","nn"],blacklist:["b-l-ae1-k l-ih-s-t","vb"],blackmail:["b-l-ae1-k m-ey-l","nn vb"],blackness:["b-l-ae1-k n-ah-s","nn"],blackout:["b-l-ae1-k aw-t","nn"],blacksmith:["b-l-ae1-k s-m-ih-th","nn"],bladder:["b-l-ae1 d-er","nn"],blade:["b-l-ey1-d","nn"],blame:["b-l-ey1-m","vb nn vbp"],blanche:["b-l-ae1-n-ch","jj nn"],bland:["b-l-ae1-n-d","jj"],blander:["b-l-ae1-n d-er","jjr"],blandly:["b-l-ae1-n-d l-iy","rb"],blandness:["b-l-ae1-n-d n-ah-s","nn"],blank:["b-l-ae1-ng-k","jj nn rb vb"],blanket:["b-l-ae1-ng k-ah-t","nn vbp jj vb"],blare:["b-l-eh1-r","vb"],blase:["b-l-ey1-z","jj nn"],blasphemous:["b-l-ae1-s f-ah m-ah-s","jj"],blasphemy:["b-l-ae1-s f-ah m-iy","nn"],blast:["b-l-ae1-s-t","nn vb"],blastdown:["b-l-ae1-s-t d-aw-n","nn"],blasting:["b-l-ae1 s-t-ih-ng","vbg jj"],blatant:["b-l-ey1 t-ah-n-t","jj"],blatantly:["b-l-ey1 t-ah-n-t l-iy","rb"],blaze:["b-l-ey1-z","nn vb vbp"],blazer:["b-l-ey1 z-er","nn"],blazing:["b-l-ey1 z-ih-ng","vbg jj"],bleach:["b-l-iy1-ch","nn vb"],bleached:["b-l-iy1-ch-t","jj vbn"],bleacher:["b-l-iy1 ch-er","nn"],bleak:["b-l-iy1-k","jj nn"],bleaker:["b-l-iy1 k-er","jjr"],bleary:["b-l-ih1 r-iy","jj"],bled:["b-l-eh1-d","vbd"],bleed:["b-l-iy1-d","vb vbp"],blemish:["b-l-eh1 m-ih-sh","nn"],blend:["b-l-eh1-n-d","nn vbp vb"],blended:["b-l-eh1-n d-ah-d","jj vbd vbn"],blender:["b-l-eh1-n d-er","nn"],bless:["b-l-eh1-s","vb"],blessed:["b-l-eh1-s-t","vbn jj vbd"],blessing:["b-l-eh1 s-ih-ng","nn vbg"],blew:["b-l-uw1","vbd"],blight:["b-l-ay1-t","nn vb"],blind:["b-l-ay1-n-d","jj vb"],blindfold:["b-l-ay1-n-d f-ow-l-d","nn vb"],blindfolded:["b-l-ay1-n-d f-ow-l d-ih-d","vbn jj vbd"],blinding:["b-l-ay1-n d-ih-ng","jj vbg"],blindly:["b-l-ay1-n-d l-iy","rb"],blindness:["b-l-ay1-n-d n-ah-s","nn"],blindside:["b-l-ay1-n-d-s-ay-d","vb"],blindsided:["b-l-ay1-n-d s-ay d-ih-d","vbn jj"],blink:["b-l-ih1-ng-k","vb nn"],blinking:["b-l-ih1-ng k-ih-ng","jj vbg rb"],blip:["b-l-ih1-p","nn vbp vb"],bliss:["b-l-ih1-s","nn"],blissful:["b-l-ih1-s f-ah-l","jj"],blissfully:["b-l-ih1-s f-ah l-iy","rb"],blister:["b-l-ih1 s-t-er","nn vb"],blistering:["b-l-ih1 s-t-er ih-ng","vbg jj"],blithe:["b-l-ay1-dh","jj"],blithely:["b-l-ay1-th l-iy","rb"],blitz:["b-l-ih1-t-s","nn"],blitzkrieg:["b-l-ih1-t s-k-r-iy-g","nn"],blizzard:["b-l-ih1 z-er-d","nn"],bloat:["b-l-ow1-t","nn vb"],bloated:["b-l-ow1 t-ih-d","jj vbn"],blob:["b-l-aa1-b","nn"],blobby:["b-l-aa1 b-iy","jj"],bloc:["b-l-aa1-k","nn"],block:["b-l-aa1-k","nn vbp jj vb"],blockade:["b-l-aa k-ey1-d","nn vb"],blockage:["b-l-aa1 k-ih jh-ih","nn"],blockbuster:["b-l-aa1-k b-ah s-t-er","nn jj"],blocked:["b-l-aa1-k-t","vbn jj vbd"],blocker:["b-l-aa1 k-er","nn"],blocking:["b-l-aa1 k-ih-ng","vbg jj nn"],bloke:["b-l-ow1-k","nn"],blond:["b-l-aa1-n-d","jj nn"],blonde:["b-l-aa1-n-d","jj nn"],blood:["b-l-ah1-d","nn vb"],bloodbath:["b-l-ah1-d b-ae-th","nn"],bloodied:["b-l-ah1 d-iy-d","jj vbn"],bloodiest:["b-l-ah1 d-iy ah-s-t","jjs"],bloodless:["b-l-ah1-d l-ah-s","jj"],bloodshed:["b-l-ah1-d sh-eh-d","nn"],bloodstain:["b-l-ah1-d s-t-ey-n","nn"],bloodstained:["b-l-ah1-d s-t-ey-n-d","jj"],bloodstream:["b-l-ah1-d s-t-r-iy-m","nn"],bloodsucking:["b-l-ah1-d s-ah k-ih-ng","vbg jj"],bloodthirsty:["b-l-ah1-d th-er s-t-iy","jj"],bloody:["b-l-ah1 d-iy","jj"],bloom:["b-l-uw1-m","nn vbp vb"],blooper:["b-l-uw1 p-er","nn"],blossom:["b-l-aa1 s-ah-m","vb jj nn"],blot:["b-l-aa1-t","nn vb"],blouse:["b-l-aw1-s","nn"],blow:["b-l-ow1","nn vb vbp"],blower:["b-l-ow1 er","nn"],blown:["b-l-ow1-n","vbn"],blowout:["b-l-ow1 aw-t","nn"],blowtorch:["b-l-ow1 t-ao-r-ch","nn"],blowup:["b-l-ow1 ah-p","nn"],blubber:["b-l-ah1 b-er","nn"],bludgeon:["b-l-ah1 jh-ah-n","vb nn"],blue:["b-l-uw1","jj nn"],blueberry:["b-l-uw1 b-eh r-iy","nn"],bluebonnet:["b-l-uw1 b-aa n-ah-t","nn"],bluechip:["b-l-uw1 ch-ih-p","jj"],blueprint:["b-l-uw1 p-r-ih-n-t","nn"],bluest:["b-l-uw1 ah-s-t","jjs"],bluff:["b-l-ah1-f","nn vb"],bluing:["b-l-uw1 ih-ng","nn"],bluish:["b-l-uw1 ih-sh","jj"],blunder:["b-l-ah1-n d-er","nn vb"],blunt:["b-l-ah1-n-t","vb jj"],blunted:["b-l-ah1-n t-ah-d","vbd jj vbn"],blunter:["b-l-ah1-n t-er","nn"],bluntest:["b-l-ah1-n t-ah-s-t","rbs"],bluntly:["b-l-ah1-n-t l-iy","rb"],bluntness:["b-l-ah1-n-t n-ah-s","nn"],blur:["b-l-er1","nn vb vbp"],blurred:["b-l-er1-d","vbn jj vbd"],blurry:["b-l-er1 iy","jj"],blurt:["b-l-er1-t","nn vb vbp"],blush:["b-l-ah1-sh","nn vb"],bluster:["b-l-ah1 s-t-er","nn vb"],blustery:["b-l-ah1 s-t-er iy","jj"],boa:["b-ow1 ah","nn"],boar:["b-ao1-r","nn"],board:["b-ao1-r-d","nn rb vb"],boarded:["b-ao1-r d-ah-d","vbd vbn jj"],boardinghouse:["b-ao1-r d-ih-ng hh-aw-s","nn"],boardroom:["b-ao1-r-d r-uw-m","nn"],boast:["b-ow1-s-t","vbp nn vb"],boastful:["b-ow1-s-t f-ah-l","jj"],boat:["b-ow1-t","nn vb"],boater:["b-ow1 t-er","nn"],boatload:["b-ow1-t l-ow-d","nn"],boatman:["b-ow1-t m-ah-n","nn"],bobby:["b-aa1 b-iy","nn jj"],bode:["b-ow1-d","vb vbp"],bodega:["b-ow d-ey1 g-ah","nn"],bodied:["b-aa1 d-iy-d","jj"],bodily:["b-aa1 d-ah l-iy","jj rb"],body:["b-aa1 d-iy","nn"],bodyguard:["b-aa1 d-iy g-aa-r-d","nn"],bog:["b-aa1-g","vb nn"],bogey:["b-ow1 g-iy","nn vb"],boggle:["b-aa1-g-ah-l","vb"],bogus:["b-ow1 g-ah-s","jj"],bohemian:["b-ow hh-iy1 m-iy ah-n","jj"],boil:["b-oy1-l","vb nn"],boiled:["b-oy1-l-d","vbn vbd jj"],boiler:["b-oy1 l-er","nn"],boilerplate:["b-oy1 l-er p-l-ey-t","nn"],boisterous:["b-oy1 s-t-er ah-s","jj"],bold:["b-ow1-l-d","jj"],bolder:["b-ow1-l d-er","jjr"],boldest:["b-ow1-l d-ih-s-t","jjs"],boldly:["b-ow1-l-d l-iy","rb"],boldness:["b-ow1-l-d n-ah-s","nn"],boll:["b-ow1-l","nn"],bolster:["b-ow1-l s-t-er","vb vbp nn"],bolt:["b-ow1-l-t","nn vb"],bomb:["b-aa1-m","nn vb"],bombard:["b-aa-m b-aa1-r-d","vb"],bombardment:["b-aa-m b-aa1-r-d m-ah-n-t","nn"],bombast:["b-aa1-m b-ae-s-t","nn"],bombastic:["b-aa-m b-ae1 s-t-ih-k","jj"],bomber:["b-aa1 m-er","nn"],bombing:["b-aa1 m-ih-ng","nn vbg"],bombshell:["b-aa1-m sh-eh-l","nn"],bonanza:["b-ah n-ae1-n z-ah","nn"],bond:["b-aa1-n-d","nn vb"],bondage:["b-aa1-n d-ih-jh","nn"],bonded:["b-aa1-n d-ah-d","vbn jj"],bondholder:["b-aa1-n-d hh-ow-l d-er","nn"],bone:["b-ow1-n","nn vb"],bonfire:["b-aa1-n f-ay er","nn"],bonkers:["b-aa1-ng k-er-z","jj"],bonnet:["b-aa1 n-ah-t","nn"],bonus:["b-ow1 n-ah-s","nn"],bony:["b-ow1 n-iy","jj"],boo:["b-uw1","vb"],booby:["b-uw1 b-iy","jj nn"],boogie:["b-uw1 g-iy","nn"],book:["b-uh1-k","nn vb"],bookcase:["b-uh1-k k-ey-s","nn"],booker:["b-uh1-k er","nn"],bookie:["b-uh1-k iy","nn"],booking:["b-uh1 k-ih-ng","nn vbg"],bookish:["b-uh1-k ih-sh","jj"],bookkeeper:["b-uh1-k k-iy p-er","nn"],booklet:["b-uh1-k l-ih-t","nn"],bookseller:["b-uh1-k s-eh l-er","nn"],bookshelf:["b-uh1-k sh-eh-l-f","nn"],bookstore:["b-uh1-k s-t-ao-r","nn"],boom:["b-uw1-m","nn vb"],boomer:["b-uw1 m-er","nn"],boomerang:["b-uw1 m-er ae-ng","nn vb"],booming:["b-uw1 m-ih-ng","jj vbg"],boomtown:["b-uw1-m t-aw-n","nn"],boon:["b-uw1-n","nn jj"],boondoggle:["b-uw-n d-aa1 g-ah-l","nn"],boor:["b-uh1-r","nn"],boorish:["b-uh1 r-ih-sh","jj"],boost:["b-uw1-s-t","vb nn vbp"],booster:["b-uw1 s-t-er","nn"],boot:["b-uw1-t","nn vb"],booted:["b-uw1 t-ih-d","vbn vbd jj"],booth:["b-uw1-th","nn"],bootleg:["b-uw1-t l-eh-g","jj nn"],bootlegger:["b-uw1-t l-eh g-er","nn"],bootlegging:["b-uw1-t l-eh g-ih-ng","nn"],booty:["b-uw1 t-iy","nn"],booze:["b-uw1-z","nn"],bop:["b-aa1-p","nn"],borax:["b-ao1 r-ae-k-s","nn"],border:["b-ao1-r d-er","nn vb"],borderline:["b-ao1-r d-er l-ay-n","jj nn rb"],bore:["b-ao1-r","vbd vbp jj nn vb"],bored:["b-ao1-r-d","vbn jj vbd"],boredom:["b-ao1-r d-ah-m","nn"],borer:["b-ao1 r-er","nn"],boring:["b-ao1 r-ih-ng","jj vbg"],born:["b-ao1-r-n","vbn"],borough:["b-er1 ow","nn"],borrow:["b-aa1 r-ow","vb vbp"],borrowed:["b-aa1 r-ow-d","vbn vbd jj"],borrower:["b-aa1 r-ow er","nn"],borrowing:["b-aa1 r-ow ih-ng","nn jj vbg"],bosom:["b-uh1 z-ah-m","nn"],boss:["b-aa1-s","nn"],bossman:["b-ao1-s m-ah-n","nn"],botanical:["b-ah t-ae1 n-ih k-ah-l","jj"],botanist:["b-aa1 t-ah n-ah-s-t","nn"],botany:["b-aa1 t-ah n-iy","nn"],botch:["b-aa1-ch","vb"],botched:["b-aa1-ch-t","vbn jj"],both:["b-aa1-th","jj rb prp"],bother:["b-aa1 dh-er","vb vbp"],bothersome:["b-aa1 dh-er s-ah-m","jj"],bottle:["b-aa1 t-ah-l","nn vb"],bottled:["b-aa1 t-ah-l-d","jj vbd vbn"],bottleneck:["b-aa1 t-ah-l n-eh-k","nn"],bottler:["b-aa1-t l-er","nn"],bottling:["b-aa1 t-ah-l ih-ng","nn vbg"],bottom:["b-aa1 t-ah-m","nn jj vb"],bottomless:["b-aa1 t-ah-m l-ah-s","jj"],bough:["b-aw1","nn"],bought:["b-aa1-t","vbd vbn"],boulder:["b-ow1-l d-er","nn"],boulevard:["b-uh1 l-ah v-aa-r-d","nn"],bounce:["b-aw1-n-s","vb vbp nn"],bouncy:["b-aw1-n s-iy","jj"],bound:["b-aw1-n-d","vbn jj nn vbd"],boundary:["b-aw1-n d-er iy","nn"],bounded:["b-aw1-n d-ah-d","vbn vbd jj"],boundless:["b-aw1-n-d l-ah-s","jj"],bounty:["b-aw1-n t-iy","nn"],bouquet:["b-uw k-ey1","nn"],bourbon:["b-er1 b-ah-n","nn"],bourgeois:["b-uh-r zh-w-aa1","jj"],bourgeoisie:["b-uh-r zh-w-aa z-iy1","nn"],bout:["b-aw1-t","nn"],boutique:["b-uw t-iy1-k","nn"],bovine:["b-ow1 v-ay-n","jj nn"],bow:["b-aw1","nn vb vbp"],bowed:["b-aw1-d","vbd vbn jj"],bowel:["b-aw1 ah-l","nn"],bower:["b-aw1 er","nn"],bowl:["b-ow1-l","nn vb vbp"],box:["b-aa1-k-s","nn vb"],boxcar:["b-aa1-k-s k-aa-r","nn"],boxer:["b-aa1-k s-er","nn"],boxing:["b-aa1-k s-ih-ng","nn"],boxy:["b-aa1-k s-iy","jj"],boy:["b-oy1","nn uh"],boycott:["b-oy1 k-aa-t","nn vb vbp"],boyfriend:["b-oy1 f-r-eh-n-d","nn"],boyhood:["b-oy1 hh-uh-d","nn"],boyish:["b-oy1 ih-sh","jj"],bra:["b-r-aa1","nn"],brace:["b-r-ey1-s","nn vb vbp"],bracelet:["b-r-ey1-s l-ah-t","nn"],bracket:["b-r-ae1 k-ih-t","nn"],brackish:["b-r-ae1 k-ih-sh","jj"],brad:["b-r-ae1-d","nn"],bradykinin:["b-r-ah d-ih1 k-ih n-ih-n","nn"],brag:["b-r-ae1-g","vb vbp nn"],braggadocio:["b-r-ae g-ah d-ow1 sh-iy ow","nn"],braid:["b-r-ey1-d","vb"],braided:["b-r-ey1 d-ih-d","jj vbn"],brain:["b-r-ey1-n","nn"],brainchild:["b-r-ey1-n ch-ay-l-d","nn"],brainpower:["b-r-ey1-n p-aw er","nn"],brainstorm:["b-r-ey1-n s-t-ao-r-m","nn"],brainwash:["b-r-ey1-n-w-aa-sh","vb"],brainwashing:["b-r-ey1-n w-aa sh-ih-ng","nn"],brainy:["b-r-ey1 n-iy","jj"],brake:["b-r-ey1-k","nn vb"],bramble:["b-r-ae1-m b-ah-l","nn"],bran:["b-r-ae1-n","nn"],branch:["b-r-ae1-n-ch","nn vb"],branched:["b-r-ae1-n-ch-t","vbn jj vbd"],brand:["b-r-ae1-n-d","nn vb vbp jj rb"],branded:["b-r-ae1-n d-ih-d","vbn jj"],brandish:["b-r-ae1-n-d-ih-sh","vb"],brandy:["b-r-ae1-n d-iy","nn vb"],brash:["b-r-ae1-sh","jj"],brashness:["b-r-ae1-sh n-ah-s","nn"],brass:["b-r-ae1-s","nn jj"],brassy:["b-r-ae1 s-iy","jj"],brat:["b-r-ae1-t","nn"],bratwurst:["b-r-ae1-t w-er-s-t","nn"],bravado:["b-r-ah v-aa1 d-ow","nn"],brave:["b-r-ey1-v","jj vb"],bravely:["b-r-ey1-v l-iy","rb"],braver:["b-r-ey1 v-er","jjr"],bravery:["b-r-ey1 v-er iy","nn"],bravest:["b-r-ey1 v-ah-s-t","jjs"],bravura:["b-r-ah v-y-uh1 r-ah","nn jj"],brawl:["b-r-ao1-l","nn"],brawling:["b-r-ao1 l-ih-ng","nn"],brawny:["b-r-ao1 n-iy","jj"],brazen:["b-r-ey1 z-ah-n","jj vb"],brazenly:["b-r-ey1 z-ah-n l-iy","rb"],brazier:["b-r-ey1 z-iy er","nn"],brazil:["b-r-ah z-ih1-l","nn"],breach:["b-r-iy1-ch","nn vb"],bread:["b-r-eh1-d","nn"],breadbasket:["b-r-eh1-d b-ae s-k-ah-t","nn"],breadbox:["b-r-eh1-d b-aa-k-s","nn"],breaded:["b-r-eh1 d-ih-d","jj"],breadth:["b-r-eh1-d-th","nn"],break:["b-r-ey1-k","vb nn vbp"],breakage:["b-r-ey1 k-ih-jh","nn"],breakaway:["b-r-ey1-k ah w-ey","nn"],breakdown:["b-r-ey1-k d-aw-n","nn"],breaker:["b-r-ey1 k-er","nn"],breakeven:["b-r-ey1 k-iy v-ah-n","jj nn"],breakfast:["b-r-eh1-k f-ah-s-t","nn"],breaking:["b-r-ey1 k-ih-ng","vbg jj nn"],breakneck:["b-r-ey1-k n-eh-k","jj"],breakthrough:["b-r-ey1-k th-r-uw","nn"],breakup:["b-r-ey1-k ah-p","nn"],breakwater:["b-r-ey1-k w-ao t-er","nn"],breast:["b-r-eh1-s-t","nn"],breath:["b-r-eh1-th","nn vb"],breathe:["b-r-iy1-dh","vb vbp"],breather:["b-r-iy1 dh-er","nn"],breathless:["b-r-eh1-th l-ah-s","jj"],breathlessly:["b-r-eh1-th l-ah-s l-iy","rb"],breathtaking:["b-r-eh1-th t-ey k-ih-ng","jj"],breathy:["b-r-eh1 th-iy","jj"],bred:["b-r-eh1-d","vbn vbd"],breed:["b-r-iy1-d","nn vb vbp"],breeder:["b-r-iy1 d-er","nn"],breeze:["b-r-iy1-z","nn vb"],breezy:["b-r-iy1 z-iy","jj"],brevity:["b-r-eh1 v-ah t-iy","nn"],brew:["b-r-uw1","nn vb"],brewer:["b-r-uw1 er","nn"],brewery:["b-r-uw1 er iy","nn"],bribe:["b-r-ay1-b","nn vb"],bribery:["b-r-ay1 b-er iy","nn"],brick:["b-r-ih1-k","nn"],bricklayer:["b-r-ih1-k l-ey er","nn"],bridal:["b-r-ay1 d-ah-l","jj"],bride:["b-r-ay1-d","nn"],bridegroom:["b-r-ay1-d g-r-uw-m","nn"],bridesmaid:["b-r-ay1-d-z m-ey-d","nn"],bridge:["b-r-ih1-jh","nn jj vb"],bridgehead:["b-r-ih1-jh hh-eh-d","nn"],bridging:["b-r-ih1 jh-ih-ng","vbg jj"],bridle:["b-r-ay1 d-ah-l","nn vb"],brie:["b-r-iy1","nn"],brief:["b-r-iy1-f","jj nn vb"],briefcase:["b-r-iy1-f k-ey-s","nn"],briefer:["b-r-iy1 f-er","jjr"],briefing:["b-r-iy1 f-ih-ng","nn vbg"],briefly:["b-r-iy1-f l-iy","nn rb"],brig:["b-r-ih1-g","nn"],brigade:["b-r-ah g-ey1-d","nn"],brigadier:["b-r-ih g-ah d-ih1-r","nn"],bright:["b-r-ay1-t","jj rb"],brighten:["b-r-ay1 t-ah-n","vb"],brighter:["b-r-ay1 t-er","jjr"],brightest:["b-r-ay1 t-ah-s-t","jjs"],brightly:["b-r-ay1-t l-iy","rb"],brightness:["b-r-ay1-t n-ah-s","nn"],brilliance:["b-r-ih1-l y-ah-n-s","nn"],brilliant:["b-r-ih1-l y-ah-n-t","jj"],brilliantly:["b-r-ih1-l y-ah-n-t l-iy","rb"],brim:["b-r-ih1-m","nn"],brimmed:["b-r-ih1-m-d","vbd vbn"],brindle:["b-r-ih1-n d-ah-l","nn"],brine:["b-r-ay1-n","nn"],bring:["b-r-ih1-ng","vb vbp"],brink:["b-r-ih1-ng-k","nn"],brinkmanship:["b-r-ih1-ng-k m-ah-n sh-ih-p","nn"],brinksmanship:["b-r-ih1-ng-k-s m-ah-n sh-ih-p","nn"],brisk:["b-r-ih1-s-k","jj"],brisker:["b-r-ih1 s-k-er","jjr"],briskly:["b-r-ih1-s-k l-iy","rb"],bristle:["b-r-ih1 s-ah-l","vbp vb nn"],bristling:["b-r-ih1 s-ah-l ih-ng","vbg jj"],brittle:["b-r-ih1 t-ah-l","jj"],broach:["b-r-ow1-ch","vb"],broad:["b-r-ao1-d","jj"],broadcast:["b-r-ao1-d k-ae-s-t","nn jj vb vbd vbn"],broadcaster:["b-r-ao1-d k-ae s-t-er","nn"],broaden:["b-r-ao1 d-ah-n","vb vbp"],broader:["b-r-ao1 d-er","jjr"],broadest:["b-r-ao1 d-ih-s-t","jjs"],broadly:["b-r-ao1-d l-iy","rb"],broadside:["b-r-ao1-d s-ay-d","jj nn rb"],brocade:["b-r-ow k-ey1-d","nn"],broccoli:["b-r-aa1 k-ah l-iy","nn"],brochure:["b-r-ow sh-uh1-r","nn"],broil:["b-r-oy1-l","nn vb"],broiler:["b-r-oy1 l-er","nn"],brok:["b-r-aa1-k","vbd"],broke:["b-r-ow1-k","vbd vbn jj rb vb"],broken:["b-r-ow1 k-ah-n","vbn jj"],broker:["b-r-ow1 k-er","nn vb"],brokerage:["b-r-ow1 k-er ih-jh","nn"],bromide:["b-r-ow1 m-ay-d","nn"],bronc:["b-r-aa1-ng-k","nn"],bronchial:["b-r-aa1-n ch-iy ah-l","jj"],bronchitis:["b-r-aa-ng k-ay1 t-ah-s","nn"],bronze:["b-r-aa1-n-z","nn jj"],bronzed:["b-r-aa1-n-z-d","jj"],brooch:["b-r-uw1-ch","nn"],brood:["b-r-uw1-d","nn jj vb"],brooding:["b-r-uw1 d-ih-ng","vbg jj nn"],broody:["b-r-uw1 d-iy","jj"],brook:["b-r-uh1-k","nn"],broom:["b-r-uw1-m","nn"],broth:["b-r-ao1-th","nn"],brothel:["b-r-aa1 th-ah-l","nn"],brother:["b-r-ah1 dh-er","nn"],brotherhood:["b-r-ah1 dh-er hh-uh-d","nn"],brotherly:["b-r-ah1 dh-er l-iy","jj"],brought:["b-r-ao1-t","vbn vbd"],brouhaha:["b-r-uw1 hh-aa hh-aa","nn"],brow:["b-r-aw1","nn"],browbeat:["b-r-aw1 b-iy-t","vb"],brown:["b-r-aw1-n","jj nn vb"],brownie:["b-r-aw1 n-iy","nn"],brownish:["b-r-aw1 n-ih-sh","jj"],brownout:["b-r-aw1-n aw-t","nn"],browse:["b-r-aw1-z","vb"],bruise:["b-r-uw1-z","nn vb"],bruised:["b-r-uw1-z-d","vbn jj"],bruising:["b-r-uw1 z-ih-ng","jj vbg"],brunch:["b-r-ah1-n-ch","nn"],brunette:["b-r-uw n-eh1-t","jj nn"],brunt:["b-r-ah1-n-t","nn"],brush:["b-r-ah1-sh","nn jj vb vbp"],brushed:["b-r-ah1-sh-t","vbd vbn jj"],brushwork:["b-r-ah1-sh w-er-k","nn"],brushy:["b-r-ah1 sh-iy","jj"],brusquely:["b-r-ah1-s-k l-iy","rb"],brutal:["b-r-uw1 t-ah-l","jj"],brutality:["b-r-uw t-ae1 l-ah t-iy","nn"],brutalize:["b-r-uw1-t-ah-l-ay-z","vb"],brutalized:["b-r-uw1 t-ah l-ay-z-d","vbn jj"],brutally:["b-r-uw1 t-ah l-iy","rb"],brute:["b-r-uw1-t","nn jj"],brutish:["b-r-uw1 t-ih-sh","jj"],bubble:["b-ah1 b-ah-l","nn vbp vb"],bubbly:["b-ah1 b-l-iy","jj nn"],buccaneer:["b-ah k-ah n-iy1-r","nn"],buck:["b-ah1-k","nn vbp vb"],bucket:["b-ah1 k-ah-t","nn"],buckle:["b-ah1 k-ah-l","vb nn"],buckled:["b-ah1 k-ah-l-d","vbd vbn jj"],buckshot:["b-ah1-k sh-aa-t","nn"],buckskin:["b-ah1-k s-k-ih-n","nn"],buckwheat:["b-ah1-k w-iy-t","nn"],bucolic:["b-y-uw k-aa1 l-ih-k","jj"],bud:["b-ah1-d","nn vb"],budding:["b-ah1 d-ih-ng","vbg jj"],buddy:["b-ah1 d-iy","nn"],budge:["b-ah1-jh","vb"],budget:["b-ah1 jh-ih-t","nn vb"],budgetary:["b-ah1 jh-ih t-eh r-iy","jj"],budgeteer:["b-ah jh-ih t-ih1-r","nn"],buff:["b-ah1-f","nn jj"],buffalo:["b-ah1 f-ah l-ow","nn"],buffer:["b-ah1 f-er","nn vb"],buffet:["b-ah1 f-ah-t","nn vb vbp"],buffoon:["b-ah f-uw1-n","nn"],bug:["b-ah1-g","nn vb vbp"],bugaboo:["b-ah1 g-ah b-uw","nn"],bugeyed:["b-ah1 g-ay-d","jj"],bugger:["b-ah1 g-er","nn"],bugging:["b-ah1 g-ih-ng","nn"],buggy:["b-ah1 g-iy","nn"],bugle:["b-y-uw1 g-ah-l","nn"],build:["b-ih1-l-d","vb vbn vbp nn"],builder:["b-ih1-l d-er","nn"],building:["b-ih1-l d-ih-ng","nn vbg"],buildup:["b-ih1-l-d ah-p","nn"],built:["b-ih1-l-t","vbn jj vbd"],bulb:["b-ah1-l-b","nn"],bulge:["b-ah1-l-jh","nn vb"],bulging:["b-ah1-l jh-ih-ng","vbg jj"],bulk:["b-ah1-l-k","nn jj"],bulkhead:["b-ah1-l-k hh-eh-d","nn"],bulky:["b-ah1-l k-iy","jj"],bull:["b-uh1-l","nn vb"],bulldog:["b-uh1-l d-ao-g","jj"],bulldoze:["b-uh1-l d-ow-z","vb"],bulldozer:["b-uh1-l d-ow z-er","nn"],bullet:["b-uh1 l-ah-t","nn"],bulletin:["b-uh1 l-ih t-ah-n","nn vb"],bulletproof:["b-uh1 l-ah-t p-r-uw-f","jj"],bullfighter:["b-uh1-l f-ay t-er","nn"],bullhorn:["b-uh1-l hh-ao-r-n","nn"],bullied:["b-uh1 l-iy-d","vbd vbn"],bullion:["b-uh1 l-y-ah-n","nn"],bullish:["b-uh1 l-ih-sh","jj"],bullishly:["b-uh1 l-ih-sh l-iy","rb"],bullishness:["b-uh1 l-ih-sh n-ah-s","nn"],bullock:["b-uh1 l-ah-k","nn"],bully:["b-uh1 l-iy","nn vbp vb"],bulwark:["b-uh1-l w-er-k","nn"],bum:["b-ah1-m","nn vb jj vbp"],bumble:["b-ah1-m b-ah-l","vb vbp"],bumbling:["b-ah1-m b-ah-l ih-ng","jj vbg"],bump:["b-ah1-m-p","vb nn vbp"],bumper:["b-ah1-m p-er","nn jj"],bumpy:["b-ah1-m p-iy","jj"],bun:["b-ah1-n","nn"],bunch:["b-ah1-n-ch","nn vb"],bundle:["b-ah1-n d-ah-l","nn vb"],bungalow:["b-ah1-ng g-ah l-ow","nn"],bungle:["b-ah1-ng g-ah-l","vb"],bunk:["b-ah1-ng-k","nn"],bunker:["b-ah1-ng k-er","nn"],bunny:["b-ah1 n-iy","nn"],bunt:["b-ah1-n-t","nn vb"],buoy:["b-uw1 iy","vb"],buoyancy:["b-oy1 ah-n s-iy","nn"],buoyant:["b-oy1 ah-n-t","jj"],burden:["b-er1 d-ah-n","nn vb vbp"],burdensome:["b-er1 d-ah-n s-ah-m","jj"],bureau:["b-y-uh1 r-ow","nn"],bureaucracy:["b-y-uh r-aa1 k-r-ah s-iy","nn"],bureaucrat:["b-y-uh1 r-ah k-r-ae-t","nn"],bureaucratic:["b-y-uh r-ah k-r-ae1 t-ih-k","jj"],burgeon:["b-er1-jh-ah-n","vb"],burgeoning:["b-er1 jh-ah n-ih-ng","vbg jj"],burger:["b-er1 g-er","nn"],burglar:["b-er1 g-l-er","nn"],burglary:["b-er1 g-l-er iy","nn"],burgundy:["b-er1 g-ah-n d-iy","nn"],burial:["b-eh1 r-iy ah-l","nn"],buried:["b-eh1 r-iy-d","vbn jj vbd"],burl:["b-er1-l","nn"],burlap:["b-er1 l-ae-p","nn"],burlesque:["b-er l-eh1-s-k","jj"],burley:["b-er1 l-iy","nn"],burly:["b-er1 l-iy","jj"],burn:["b-er1-n","vb vbp nn"],burne:["b-er1-n","vb"],burned:["b-er1-n-d","vbn jj vbd"],burner:["b-er1 n-er","nn"],burning:["b-er1 n-ih-ng","vbg jj nn"],burnish:["b-er1-n-ih-sh","vb"],burnout:["b-er1-n aw-t","nn"],burnt:["b-er1-n-t","vbn jj"],burp:["b-er1-p","vb"],burr:["b-er1","nn"],burrow:["b-er1 ow","nn vb"],burst:["b-er1-s-t","nn vbd vbn vbp vb"],bury:["b-eh1 r-iy","vb vbp"],bus:["b-ah1-s","nn vb vbp"],busboy:["b-ah1-s b-oy","nn"],bush:["b-uh1-sh","nn"],bushel:["b-uh1 sh-ah-l","nn"],bushy:["b-uh1 sh-iy","jj"],busied:["b-ih1 z-iy-d","vbd"],busier:["b-ih1 z-iy er","jjr"],busiest:["b-ih1 z-iy ah-s-t","jjs"],busily:["b-ih1 z-ah l-iy","rb"],business:["b-ih1-z n-ah-s","nn"],busload:["b-ah-s l-ow1-d","nn"],bust:["b-ah1-s-t","nn jj rb vb"],busted:["b-ah1 s-t-ih-d","jj vbd vbn"],buster:["b-ah1 s-t-er","nn"],bustle:["b-ah1 s-ah-l","nn vb"],bustling:["b-ah1 s-ah l-ih-ng","jj vbg"],busy:["b-ih1 z-iy","jj"],but:["b-ah1-t","cc"],butane:["b-y-uw t-ey1-n","nn"],butcher:["b-uh1 ch-er","nn vb"],butchering:["b-uh1 ch-er ih-ng","nn"],butchery:["b-uh1 ch-er iy","nn"],butler:["b-ah1-t l-er","nn"],butt:["b-ah1-t","nn"],butter:["b-ah1 t-er","nn"],butterfly:["b-ah1 t-er f-l-ay","nn"],buttery:["b-ah1 t-er iy","jj"],buttock:["b-ah1 t-ah-k","nn"],button:["b-ah1 t-ah-n","nn vb"],buttonhole:["b-ah1 t-ah-n hh-ow-l","nn"],buttress:["b-ah1 t-r-ah-s","vb"],buxom:["b-ah1-k s-ah-m","jj"],buy:["b-ay1","vb vbp nn jj"],buyback:["b-ay1 b-ae-k","jj nn"],buyer:["b-ay1 er","nn"],buying:["b-ay1 ih-ng","vbg jj"],buyout:["b-ay1 aw-t","nn"],buzz:["b-ah1-z","nn jj vb"],buzzer:["b-ah1 z-er","nn"],buzzing:["b-ah1 z-ih-ng","vbg jj"],buzzword:["b-ah1-z w-er-d","nn"],by:["b-ay1","in rb rp"],bygone:["b-ay1 g-ao-n","jj"],bylaw:["b-ay1 l-ao","nn"],byline:["b-ay1 l-ay-n","nn"],bypass:["b-ay1 p-ae-s","vb nn"],byproduct:["b-ay1 p-r-aa d-ah-k-t","nn"],bystander:["b-ay1 s-t-ae-n d-er","nn"],byte:["b-ay1-t","nn"],byway:["b-ay1 w-ey","nn"],byword:["b-ay1 w-er-d","nn"],byzantine:["b-ih1 z-ah-n t-ay-n","jj"],cab:["k-ae1-b","nn"],cabal:["k-ah b-aa1-l","nn"],cabana:["k-ah b-ae1 n-ah","nn"],cabaret:["k-ae b-er ey1","nn"],cabbage:["k-ae1 b-ih-jh","nn"],cabdriver:["k-ae1-b d-r-ay v-er","nn"],cabin:["k-ae1 b-ah-n","nn"],cabinet:["k-ae1 b-ah n-ah-t","nn"],cable:["k-ey1 b-ah-l","nn vb vbp"],cacao:["k-ah k-ey1 ow","nn"],cache:["k-ae1-sh","nn"],cachet:["k-ae1 sh-ey","nn"],cacophony:["k-ae k-aa1 f-ah n-iy","nn"],cactus:["k-ae1-k t-ah-s","nn"],cadaver:["k-ah d-ae1 v-er","nn"],cadence:["k-ey1 d-ah-n-s","nn"],cadet:["k-ah d-eh1-t","nn"],cadmium:["k-ae1-d m-iy ah-m","nn"],cadre:["k-ae1 d-r-iy","nn"],cafe:["k-ah f-ey1","nn"],cafeteria:["k-ae f-ah t-ih1 r-iy ah","nn"],caffeine:["k-ae f-iy1-n","nn"],cage:["k-ey1-jh","nn vb"],cagey:["k-ey1 jh-iy","jj"],cahoot:["k-ah hh-uw1-t","nn"],cajole:["k-ah jh-ow1-l","vb"],cajun:["k-ey1 jh-ah-n","jj"],cake:["k-ey1-k","nn"],calamitous:["k-ah l-ae1 m-ah t-ah-s","jj"],calamity:["k-ah l-ae1 m-ah t-iy","nn"],calcified:["k-ae1-l s-ah f-ay-d","vbd"],calcify:["k-ae1-l-s-ah-f-ay","vb"],calcium:["k-ae1-l s-iy ah-m","nn"],calculate:["k-ae1-l k-y-ah l-ey-t","vb vbp"],calculated:["k-ae1-l k-y-ah l-ey t-ah-d","vbn vbd jj"],calculating:["k-ae1-l k-y-ah l-ey t-ih-ng","vbg jj nn"],calculation:["k-ae-l k-y-ah l-ey1 sh-ah-n","nn"],calculator:["k-ae1-l k-y-ah l-ey t-er","nn"],calculus:["k-ae1-l k-y-ah l-ah-s","nn"],calendar:["k-ae1 l-ah-n d-er","nn"],calf:["k-ae1-f","nn"],caliber:["k-ae1 l-ah b-er","nn"],calibrate:["k-ae1-l-ah-b-r-ey-t","vb"],calibration:["k-ae l-ah b-r-ey1 sh-ah-n","nn"],calico:["k-ae1 l-ah k-ow","jj"],caliper:["k-ae1 l-ah p-er","nn"],calisthenics:["k-ae l-ah-s th-eh1 n-ih-k","nn"],call:["k-ao1-l","vb nn vbp"],called:["k-ao1-l-d","vbn vbd vb"],caller:["k-ao1 l-er","nn"],calligraphy:["k-ah l-ih1 g-r-ah f-iy","nn"],callous:["k-ae1 l-ah-s","jj"],calloused:["k-ae1 l-ah-s-t","jj"],callously:["k-ae1 l-ah-s l-iy","rb"],callousness:["k-ae1 l-ah-s n-ah-s","nn"],calm:["k-aa1-m","jj nn vb"],calmer:["k-aa1 m-er","jjr"],calming:["k-aa1 m-ih-ng","vbg jj"],calmly:["k-aa1-m l-iy","rb"],calmness:["k-aa1-m n-ah-s","nn"],caloric:["k-ah l-ao1 r-ih-k","jj"],calorie:["k-ae1 l-er iy","nn"],calve:["k-ae1-v","vb"],calypso:["k-ah l-ih1-p s-ow","nn jj"],camaraderie:["k-aa m-er aa1 d-er iy","nn"],camcorder:["k-ae1-m k-ao-r d-er","nn"],came:["k-ey1-m","vbd"],camel:["k-ae1 m-ah-l","nn"],cameo:["k-ae1 m-iy ow","nn jj"],camera:["k-ae1 m-er ah","nn"],cameraman:["k-ae1 m-er ah m-ah-n","nn"],camouflage:["k-ae1 m-ah f-l-aa-zh","nn vb"],camouflaged:["k-ae1 m-ah f-l-aa-zh-d","vbn jj"],camp:["k-ae1-m-p","nn vb"],campaign:["k-ae-m p-ey1-n","nn vb"],campaigner:["k-ae-m p-ey1 n-er","nn"],camper:["k-ae1-m p-er","nn"],campfire:["k-ae1-m-p f-ay er","nn"],campground:["k-ae1-m-p g-r-aw-n-d","nn"],campsite:["k-ae1-m-p s-ay-t","nn"],campus:["k-ae1-m p-ah-s","nn"],can:["k-ae1-n","md nn vb"],canal:["k-ah n-ae1-l","nn"],canard:["k-ah n-aa1-r-d","nn"],cancel:["k-ae1-n s-ah-l","vb nn"],canceled:["k-ae1-n s-ah-l-d","vbn vbd jj"],cancellation:["k-ae-n s-ah l-ey1 sh-ah-n","nn"],cancelled:["k-ae1-n s-ah-l-d","vbn"],cancer:["k-ae1-n s-er","nn"],cancerous:["k-ae1-n s-er ah-s","jj"],candid:["k-ae1-n d-ah-d","jj"],candidacy:["k-ae1-n d-ih d-ah s-iy","nn"],candidate:["k-ae1-n d-ah d-ey-t","nn"],candidly:["k-ae1-n d-ih-d l-iy","rb"],candle:["k-ae1-n d-ah-l","nn"],candlelight:["k-ae1-n d-ah-l l-ay-t","nn"],candor:["k-ae1-n d-er","nn"],candy:["k-ae1-n d-iy","nn"],cane:["k-ey1-n","nn"],canine:["k-ey1 n-ay-n","jj nn"],caning:["k-ey1 n-ih-ng","nn"],canister:["k-ae1 n-ah s-t-er","nn"],canker:["k-ae1-ng k-er","nn"],canned:["k-ae1-n-d","jj vbn"],cannery:["k-ae1 n-er iy","nn"],cannibalism:["k-ae1 n-ah b-ah l-ih z-ah-m","nn"],cannibalize:["k-ae1 n-ah b-ah l-ay-z","vb"],cannister:["k-ae1 n-ih s-t-er","nn"],cannon:["k-ae1 n-ah-n","nn"],cannot:["k-ae1 n-aa-t","md"],canny:["k-ae1 n-iy","jj"],canoe:["k-ah n-uw1","nn"],canon:["k-ae1 n-ah-n","nn"],canopy:["k-ae1 n-ah p-iy","nn"],cantaloupe:["k-ae1-n t-ah l-ow-p","nn"],canteen:["k-ae-n t-iy1-n","nn"],canter:["k-ae1-n t-er","nn vb"],canvas:["k-ae1-n v-ah-s","nn"],canvassed:["k-ae1-n v-ah-s-t","vbn"],canvasser:["k-ae1-n v-ah s-er","nn"],canyon:["k-ae1 n-y-ah-n","nn"],"can't":["k-ae1-n-t","md"],cap:["k-ae1-p","nn vbp vb"],capability:["k-ey p-ah b-ih1 l-ah t-iy","nn"],capable:["k-ey1 p-ah b-ah-l","jj"],capacious:["k-ah p-ey1 sh-ah-s","jj"],capacitance:["k-ah p-ae1 s-ah t-ah-n-s","nn"],capacitor:["k-ah p-ae1 s-ah t-er","nn"],capacity:["k-ah p-ae1 s-ah t-iy","nn"],cape:["k-ey1-p","nn"],caper:["k-ey1 p-er","nn"],capillary:["k-ae1 p-ah l-eh r-iy","nn"],capital:["k-ae1 p-ah t-ah-l","nn jj"],capitalism:["k-ae1 p-ih t-ah l-ih z-ah-m","nn"],capitalist:["k-ae1 p-ah t-ah l-ah-s-t","jj nn"],capitalistic:["k-ae p-ih t-ah l-ih1 s-t-ih-k","jj"],capitalization:["k-ae p-ih t-ah l-ih z-ey1 sh-ah-n","nn"],capitalize:["k-ae1 p-ah t-ah l-ay-z","vb"],capitalized:["k-ae1 p-ih t-ah l-ay-z-d","vbn jj vbd"],capitulate:["k-ah p-ih1 ch-uw l-ey-t","vb"],capitulation:["k-ah p-ih ch-ah l-ey1 sh-ah-n","nn"],capo:["k-aa1 p-ow","nn"],cappuccino:["k-ae p-uw ch-iy1 n-ow","nn"],capricious:["k-ah p-r-ih1 sh-ah-s","jj"],capriciously:["k-ah p-r-ih1 sh-ih-s l-iy","rb"],capstan:["k-ae1-p s-t-ah-n","nn"],capsule:["k-ae1-p s-ah-l","nn"],captain:["k-ae1-p t-ah-n","nn vb vbp"],caption:["k-ae1-p sh-ah-n","nn"],captivate:["k-ae1-p-t-ih-v-ey-t","vb"],captivated:["k-ae1-p t-ih v-ey t-ih-d","vbn vbd jj"],captivating:["k-ae1-p t-ih v-ey t-ih-ng","jj vbg"],captive:["k-ae1-p t-ih-v","jj nn"],captivity:["k-ae-p t-ih1 v-ah t-iy","nn"],captor:["k-ae1-p t-er","nn"],capture:["k-ae1-p ch-er","vb vbp nn"],captured:["k-ae1-p ch-er-d","vbn jj vbd"],car:["k-aa1-r","nn"],caramel:["k-eh1 r-ah m-ah-l","nn"],carat:["k-eh1 r-ah-t","nn"],caravan:["k-ae1 r-ah v-ae-n","nn"],caraway:["k-ae1 r-ah w-ey","jj"],carbide:["k-aa1-r b-ay-d","nn"],carbine:["k-aa1-r b-ay-n","nn"],carbohydrate:["k-aa-r b-ow hh-ay1 d-r-ey-t","nn"],carbon:["k-aa1-r b-ah-n","nn"],carbonate:["k-aa1-r b-ah n-ey-t","nn"],carcass:["k-aa1-r k-ah-s","nn"],carcinogen:["k-aa-r s-ih1 n-ah jh-ah-n","nn"],carcinogenic:["k-aa-r s-ah n-ow jh-eh1 n-ih-k","jj"],carcinoma:["k-aa-r s-ah n-ow1 m-ah","nn"],card:["k-aa1-r-d","nn"],cardboard:["k-aa1-r-d b-ao-r-d","nn jj"],cardholder:["k-aa1-r-d hh-ow-l d-er","nn"],cardiac:["k-aa1-r d-iy ae-k","jj"],cardigan:["k-aa1-r d-ih g-ah-n","nn"],cardinal:["k-aa1-r d-ah n-ah-l","jj nn"],cardiologist:["k-aa-r d-iy aa1 l-ah jh-ih-s-t","nn"],cardiovascular:["k-aa-r d-iy ow v-ae1 s-k-y-ah l-er","jj"],care:["k-eh1-r","nn vb vbp"],careen:["k-er iy1-n","vb"],career:["k-er ih1-r","nn"],careerist:["k-er ih1 r-ih-s-t","nn"],carefree:["k-eh1-r f-r-iy","jj"],careful:["k-eh1-r f-ah-l","jj"],carefully:["k-eh1-r f-ah l-iy","rb"],caregiver:["k-eh1-r g-ih v-er","nn"],careless:["k-eh1-r l-ah-s","jj"],carelessly:["k-eh1-r l-ah-s l-iy","rb"],carelessness:["k-eh1-r l-ah-s n-ah-s","nn"],caress:["k-er eh1-s","vb"],caretaker:["k-eh1-r t-ey k-er","nn"],cargo:["k-aa1-r g-ow","nn"],caribou:["k-eh1 r-ih b-uw","nn"],caricature:["k-eh1 r-ah k-ah ch-er","nn vb"],caricaturist:["k-eh1 r-ah k-ah ch-er ah-s-t","nn"],caring:["k-eh1 r-ih-ng","vbg jj nn"],carload:["k-aa1-r l-ow-d","nn"],carnage:["k-aa1-r n-ih-jh","nn"],carnal:["k-aa1-r n-ah-l","jj"],carnival:["k-aa1-r n-ah v-ah-l","nn"],carnivore:["k-aa1-r n-ah v-ao-r","nn"],carnivorous:["k-aa-r n-ih1 v-er ah-s","jj"],carob:["k-eh1 r-ah-b","nn"],carousel:["k-eh1 r-ah s-eh-l","nn"],carousing:["k-er aw1 z-ih-ng","nn"],carp:["k-aa1-r-p","vbp vb nn"],carpenter:["k-aa1-r p-ah-n t-er","nn"],carpentry:["k-aa1-r p-ah-n t-r-iy","nn"],carpet:["k-aa1-r p-ah-t","nn vb"],carpetbagger:["k-aa1-r p-ah-t b-ae g-er","nn"],carpeting:["k-aa1-r p-ah t-ih-ng","nn"],carping:["k-aa1-r p-ih-ng","vbg jj"],carport:["k-aa1-r p-ao-r-t","nn"],carriage:["k-ae1 r-ih-jh","nn"],carried:["k-ae1 r-iy-d","vbd vbn"],carrier:["k-ae1 r-iy er","nn"],carrion:["k-eh1 r-iy ah-n","jj nn"],carrot:["k-ae1 r-ah-t","nn"],carry:["k-ae1 r-iy","vb nn vbp"],carrying:["k-ae1 r-iy ih-ng","vbg jj nn"],carryover:["k-eh1 r-y-ow v-er","nn"],cart:["k-aa1-r-t","nn vbp vb"],cartel:["k-aa-r t-eh1-l","nn"],cartilage:["k-aa1-r t-ah l-ah-jh","nn"],carton:["k-aa1-r t-ah-n","nn"],cartoon:["k-aa-r t-uw1-n","nn"],cartoonist:["k-aa-r t-uw1 n-ah-s-t","nn"],cartridge:["k-aa1-r t-r-ah-jh","nn"],cartwheel:["k-aa1-r-t w-iy-l","nn"],carve:["k-aa1-r-v","vb vbp"],carved:["k-aa1-r-v-d","vbn jj vbd"],cascade:["k-ae s-k-ey1-d","nn vb"],cascading:["k-ae s-k-ey1 d-ih-ng","vbg jj"],case:["k-ey1-s","nn vb"],caseload:["k-ey1-s l-ow-d","nn"],caseworker:["k-ey1-s w-er k-er","nn"],cash:["k-ae1-sh","nn vb"],cashew:["k-ae1 sh-uw","nn"],cashflow:["k-ae1-sh f-l-ow","nn"],cashier:["k-ae sh-ih1-r","nn"],cashmere:["k-ae1-zh m-ih-r","nn"],casing:["k-ey1 s-ih-ng","nn"],casino:["k-ah s-iy1 n-ow","nn"],cask:["k-ae1-s-k","nn"],casket:["k-ae1 s-k-ah-t","nn"],cassette:["k-ah s-eh1-t","nn"],cast:["k-ae1-s-t","nn vb vbd vbn vbp"],caste:["k-ae1-s-t","nn"],caster:["k-ae1 s-t-er","nn"],castigate:["k-ae1 s-t-ah g-ey-t","vb"],castle:["k-ae1 s-ah-l","nn"],castor:["k-ae1 s-t-er","nn"],casual:["k-ae1 zh-ah w-ah-l","jj rb"],casually:["k-ae1 zh-ah-w ah l-iy","rb"],casualty:["k-ae1 zh-ah w-ah-l t-iy","nn"],cat:["k-ae1-t","nn"],cataclysmic:["k-ae t-ah k-l-ih1-z m-ih-k","jj"],catalog:["k-ae1 t-ah l-ao-g","nn vb"],catalogue:["k-ae1 t-ah l-ao-g","nn vb"],catalyst:["k-ae1 t-ah l-ah-s-t","nn"],catalytic:["k-ae t-ah l-ih1 t-ih-k","jj"],catalyze:["k-ae1-t-ah-l-ay-z","vb"],catamaran:["k-ae t-ah m-er ae1-n","nn"],catapult:["k-ae1 t-ah p-ah-l-t","vb vbp"],cataract:["k-ae1 t-er ae-k-t-s","nn"],catastrophe:["k-ah t-ae1-s t-r-ah f-iy","nn"],catastrophic:["k-ae t-ah s-t-r-aa1 f-ih-k","jj"],catbird:["k-ae1-t b-er-d","jj"],catcall:["k-ae1-t k-ao-l","nn"],catch:["k-ae1-ch","vb vbp nn"],catchall:["k-ae1 ch-ao-l","nn"],catcher:["k-ae1 ch-er","nn"],catchup:["k-ae1 ch-ah-p","jj nn"],catchword:["k-ae1-ch w-er-d","nn"],catchy:["k-ae1 ch-iy","jj"],catechism:["k-ae1 t-ah k-ih z-ah-m","nn"],categorical:["k-ae t-ah g-aa1 r-ih k-ah-l","jj"],categorically:["k-ae t-ah g-aa1 r-ih-k l-iy","rb"],categorize:["k-ae1 t-ah g-er ay-z","vb"],category:["k-ae1 t-ah g-ao r-iy","nn"],cater:["k-ey1 t-er","vbp vb"],catered:["k-ey1 t-er-d","vbd jj"],caterer:["k-ey1 t-er er","nn"],caterpillar:["k-ae1 t-ah p-ih l-er","nn"],catfish:["k-ae1-t f-ih-sh","nn"],catharsis:["k-ah th-aa1-r s-ah-s","nn"],cathartic:["k-ah th-aa1-r t-ih-k","jj"],cathedral:["k-ah th-iy1 d-r-ah-l","nn"],catheter:["k-ae1 th-ah t-er","nn"],cathode:["k-ae1 th-ow-d","nn"],catlike:["k-ae1-t l-ay-k","jj"],catsup:["k-eh1 ch-ah-p","nn"],cattle:["k-ae1 t-ah-l","nn"],catty:["k-ae1 t-iy","jj"],caucus:["k-ao1 k-ah-s","nn vb"],caught:["k-aa1-t","vbn vbd"],cauliflower:["k-aa1 l-ah f-l-aw er","nn"],causal:["k-ao1 z-ah-l","jj"],causative:["k-aa1 z-ah t-ih-v","jj"],cause:["k-aa1-z","nn vb vbg vbp"],causeway:["k-aa1-z w-ey","nn"],caustic:["k-aa1 s-t-ih-k","jj"],caution:["k-aa1 sh-ah-n","nn vbp vb"],cautionary:["k-ao1 sh-ah-n eh r-iy","jj"],cautious:["k-ao1 sh-ah-s","jj"],cautiously:["k-ao1 sh-ah-s l-iy","rb"],cautiousness:["k-ao1 sh-ah-s n-ah-s","nn"],cavalier:["k-ae v-ah l-ih1-r","jj"],cavalry:["k-ae1 v-ah-l r-iy","nn"],cave:["k-ey1-v","nn vb"],caveat:["k-ey1 v-iy ae-t","nn"],cavern:["k-ae1 v-er-n","nn"],cavernous:["k-ae1 v-er n-ah-s","jj"],caviar:["k-ae1 v-iy aa-r","nn"],cavity:["k-ae1 v-ah t-iy","nn"],cavort:["k-ah v-ao1-r-t","vbp vb"],cayenne:["k-ay eh1-n","nn"],cease:["s-iy1-s","vb vbp"],ceasefire:["s-iy1-s f-ay1 er","nn"],ceaseless:["s-iy1-s l-ih-s","jj"],ceaselessly:["s-iy1-z l-ah-s l-iy","rb"],cedar:["s-iy1 d-er","nn"],cede:["s-iy1-d","vb"],ceiling:["s-iy1 l-ih-ng","nn"],celebrant:["s-eh1 l-ah b-r-ah-n-t","nn"],celebrate:["s-eh1 l-ah b-r-ey-t","vb vbp"],celebrated:["s-eh1 l-ah b-r-ey t-ah-d","vbd jj vbn"],celebration:["s-eh l-ah b-r-ey1 sh-ah-n","nn"],celebrity:["s-ah l-eh1 b-r-ih t-iy","nn"],celery:["s-eh1 l-er iy","nn"],celestial:["s-ah l-eh1 s-ch-ah-l","jj"],cell:["s-eh1-l","nn"],cellar:["s-eh1 l-er","nn"],cellist:["ch-eh1 l-ah-s-t","nn"],cellophane:["s-eh1 l-ah f-ey-n","nn"],cellular:["s-eh1-l y-ah l-er","jj"],cellulose:["s-eh1-l y-ah l-ow-s","nn"],cement:["s-ah m-eh1-n-t","nn vb"],cemetery:["s-eh1 m-ah t-eh r-iy","nn"],censor:["s-eh1-n s-er","vbp vb"],censorship:["s-eh1-n s-er sh-ih-p","nn"],censure:["s-eh1-n sh-er","nn vb"],census:["s-eh1-n s-ah-s","nn"],cent:["s-eh1-n-t","nn"],centaur:["s-eh1-n t-ao-r","nn"],centenarian:["s-eh-n t-ah n-eh1 r-iy ah-n","nn"],centenary:["s-eh1-n t-ah n-eh r-iy","jj"],centennial:["s-eh-n t-eh1 n-iy ah-l","nn jj"],center:["s-eh1-n t-er","nn jj rb vb vbp"],centerfielder:["s-eh1-n t-er f-iy-l d-er","nn"],centerfold:["s-eh1-n t-er f-ow-l-d","nn"],centerpiece:["s-eh1-n t-er p-iy-s","nn"],centigrade:["s-eh1-n t-ah g-r-ey-d","jj"],centimeter:["s-eh1-n t-ah m-iy t-er","nn"],central:["s-eh1-n t-r-ah-l","jj nn"],centralization:["s-eh-n t-r-ah l-ih z-ey1 sh-ah-n","nn"],centralize:["s-eh1-n t-r-ah l-ay-z","vb"],centralized:["s-eh1-n t-r-ah l-ay-z-d","jj vbd vbn"],centralizing:["s-eh1-n t-r-ah l-ay z-ih-ng","vbg jj"],centrally:["s-eh1-n t-r-ah l-iy","rb"],centre:["s-eh1-n t-er","nn"],centrex:["s-eh1-n t-r-ah-k-s","nn"],centrifugal:["s-eh-n t-r-ih1 f-y-ih g-ah-l","jj"],centrifuge:["s-eh1-n t-r-ah f-y-uw-jh","nn"],centrist:["s-eh1-n t-r-ih-s-t","jj"],centum:["k-eh1-n t-ah-m","nn"],century:["s-eh1-n ch-er iy","nn"],ceramic:["s-er ae1 m-ih-k","jj"],cereal:["s-ih1 r-iy ah-l","nn"],cerebral:["s-eh1 r-ah b-r-ah-l","jj"],ceremonial:["s-eh r-ah m-ow1 n-iy ah-l","jj"],ceremony:["s-eh1 r-ah m-ow n-iy","nn"],certain:["s-er1 t-ah-n","jj rb"],certainly:["s-er1 t-ah-n l-iy","rb"],certainty:["s-er1 t-ah-n t-iy","nn"],certificate:["s-er t-ih1 f-ih k-ah-t","nn"],certification:["s-er t-ah f-ah k-ey1 sh-ah-n","nn"],certified:["s-er1 t-ah f-ay-d","vbn jj"],certifies:["s-er1 t-ah f-ay-z","vbz"],certify:["s-er1 t-ah f-ay","vb"],cervical:["s-er1 v-ah k-ah-l","jj"],cervix:["s-er1 v-ih-k-s","nn"],cessation:["s-eh s-ey1 sh-ah-n","nn"],chafe:["ch-ey1-f","vbp vb"],chaff:["ch-ae1-f","nn"],chafing:["ch-ey1 f-ih-ng","vbg jj"],chagrin:["sh-ah g-r-ih1-n","nn"],chain:["ch-ey1-n","nn vb vbp"],chained:["ch-ey1-n-d","vbd vbn jj"],chair:["ch-eh1-r","nn vb"],chaired:["ch-eh1-r-d","vbn jj vbd"],chairing:["ch-eh1 r-ih-ng","nn"],chairman:["ch-eh1-r m-ah-n","nn"],chairmanship:["ch-eh1-r m-ah-n sh-ih-p","nn"],chairwoman:["ch-eh1-r w-uh m-ah-n","nn"],chaise:["sh-ey1-z","nn"],chalk:["ch-aa1-k","nn vbp vb"],challenge:["ch-ae1 l-ah-n-jh","nn vb vbp"],challenger:["ch-ae1 l-ah-n jh-er","nn"],challenging:["ch-ae1 l-ah-n jh-ih-ng","vbg jj"],chamber:["ch-ey1-m b-er","nn vb"],chameleon:["ch-ah m-eh1 l-iy ah-n","nn"],champ:["ch-ae1-m-p","nn"],champagne:["sh-ae-m p-ey1-n","nn"],champion:["ch-ae1-m p-iy ah-n","nn jj vb vbp"],championship:["ch-ae1-m p-iy ah-n sh-ih-p","nn"],chance:["ch-ae1-n-s","nn jj vb vbp"],chancellor:["ch-ae1-n s-ah l-er","nn"],chancery:["ch-ae1-n s-er iy","nn"],chancy:["ch-ae1-n s-iy","jj"],chandelier:["sh-ae-n d-ah l-ih1-r","nn"],change:["ch-ey1-n-jh","nn vbp vb"],changeable:["ch-ey1-n jh-ah b-ah-l","jj"],changed:["ch-ey1-n-jh-d","vbn vbd jj"],changeover:["ch-ey1-n-jh ow v-er","nn"],changing:["ch-ey1-n jh-ih-ng","vbg jj nn"],channel:["ch-ae1 n-ah-l","nn vb vbp"],chant:["ch-ae1-n-t","nn vb"],chaos:["k-ey1 aa-s","nn"],chaotic:["k-ey aa1 t-ih-k","jj"],chap:["ch-ae1-p","nn"],chapel:["ch-ae1 p-ah-l","nn"],chaperone:["sh-ae1 p-er ow-n","nn"],chaplain:["ch-ae1-p l-ah-n","nn"],chapter:["ch-ae1-p t-er","nn"],char:["ch-aa1-r","vb"],character:["k-eh1 r-ih-k t-er","nn"],characteristic:["k-eh r-ah-k t-er ih1 s-t-ih-k","jj nn"],characteristically:["k-eh r-ah-k t-er ih1 s-t-ih-k l-iy","rb"],characterization:["k-eh r-ah-k t-er ih z-ey1 sh-ah-n","nn"],characterize:["k-eh1 r-ah-k t-er ay-z","vb vbp"],characterized:["k-eh1 r-ah-k t-er ay-z-d","vbn vbd jj"],charcoal:["ch-aa1-r k-ow-l","nn"],charge:["ch-aa1-r-jh","nn vbp vb"],chargeable:["ch-aa1-r jh-ah b-ah-l","jj"],charged:["ch-aa1-r-jh-d","vbn vbd jj"],chariot:["ch-eh1 r-iy ah-t","nn"],charisma:["k-er ih1-z m-ah","nn"],charismatic:["k-eh r-ih-z m-ae1 t-ih-k","jj"],charitable:["ch-ae1 r-ah t-ah b-ah-l","jj"],charitably:["ch-eh1 r-ih t-ah b-l-iy","rb"],charity:["ch-eh1 r-ih t-iy","nn"],charlatan:["sh-aa1-r l-ah t-ah-n","nn"],charlotte:["sh-aa1-r l-ah-t","nn"],charm:["ch-aa1-r-m","nn vb"],charmer:["ch-aa1-r m-er","nn"],charming:["ch-aa1-r m-ih-ng","jj"],charmingly:["ch-aa1-r m-ih-ng l-iy","rb"],charred:["ch-aa1-r-d","jj vbn"],chart:["ch-aa1-r-t","nn vb vbp"],charter:["ch-aa1-r t-er","nn jj vb"],chartered:["ch-aa1-r t-er-d","jj vbn vbd"],chartist:["ch-aa1-r t-ih-s-t","nn"],chary:["ch-aa1 r-iy","jj"],chase:["ch-ey1-s","nn jj vb vbp"],chaser:["ch-ey1 s-er","nn"],chasm:["k-ae1 z-ah-m","nn"],chassis:["ch-ae1 s-iy","nn"],chaste:["ch-ey1-s-t","jj"],chasten:["ch-ey1-s-ah-n","vb"],chastise:["ch-ae-s-t-ay1-z","vb"],chastity:["ch-ae1 s-t-ah t-iy","nn"],chat:["ch-ae1-t","nn vbp vb"],chateau:["sh-ae t-ow1","nn"],chateaux:["sh-ah t-ow1","nn"],chatter:["ch-ae1 t-er","nn vb vbp"],chatty:["ch-ae1 t-iy","jj"],chauffeur:["sh-ow f-er1","nn vb"],chauvinism:["sh-ow1 v-ah n-ih z-ah-m","nn"],chauvinistic:["ch-ow v-ah n-ih1 s-t-ih-k","jj"],chaw:["ch-ao1","nn"],cheap:["ch-iy1-p","jj nn rb"],cheapen:["ch-iy1-p-ah-n","vb"],cheaper:["ch-iy1 p-er","jjr rbr"],cheapest:["ch-iy1 p-ah-s-t","jjs"],cheaply:["ch-iy1-p l-iy","rb"],cheat:["ch-iy1-t","vb vbp"],cheated:["ch-iy1 t-ah-d","vbn jj vbd"],cheater:["ch-iy1 t-er","nn"],check:["ch-eh1-k","nn vbp vb"],checkbook:["ch-eh1-k b-uh-k","nn"],checked:["ch-eh1-k-t","vbn vbd jj"],checker:["ch-eh1 k-er","nn"],checklist:["ch-eh1-k l-ih-s-t","nn"],checkout:["ch-eh1-k aw-t","nn"],checkpoint:["ch-eh1-k p-oy-n-t","nn"],checkup:["ch-eh1-k ah-p","nn"],cheek:["ch-iy1-k","nn"],cheekbone:["ch-iy1-k b-ow-n","nn"],cheeky:["ch-iy1 k-iy","jj"],cheer:["ch-ih1-r","nn vb vbp"],cheerful:["ch-ih1-r f-ah-l","jj"],cheerfully:["ch-ih1-r f-ah l-iy","rb"],cheerleader:["ch-ih1-r l-iy d-er","nn"],cheerleading:["ch-ih1-r l-iy d-ih-ng","nn"],cheery:["ch-ih1 r-iy","jj"],cheese:["ch-iy1-z","nn"],cheeseburger:["ch-iy1-z b-er g-er","nn"],cheesecake:["ch-iy1-z k-ey-k","nn"],cheesy:["ch-iy1 z-iy","jj"],cheetah:["ch-iy1 t-ah","nn"],cheetal:["ch-iy1 t-ah-l","jj"],chef:["sh-eh1-f","nn"],chemical:["k-eh1 m-ah k-ah-l","nn jj"],chemically:["k-eh1 m-ah k-l-iy","rb"],chemise:["sh-ah m-iy1-z","nn"],chemist:["k-eh1 m-ih-s-t","nn"],chemistry:["k-eh1 m-ah s-t-r-iy","nn"],chemotherapy:["k-iy m-ow th-eh1 r-ah p-iy","nn"],cherish:["ch-eh1 r-ih-sh","vb vbp"],cherished:["ch-eh1 r-ih-sh-t","vbn jj vbd"],cherry:["ch-eh1 r-iy","jj nn"],cherub:["ch-eh1 r-ah-b","nn"],chess:["ch-eh1-s","nn"],chest:["ch-eh1-s-t","nn"],chestnut:["ch-eh1-s n-ah-t","nn"],chevrolet:["sh-eh-v r-ow l-ey1","nnp"],chew:["ch-uw1","vb vbp"],chewing:["ch-uw1 ih-ng","vbg jj"],chic:["sh-iy1-k","jj nn"],chicanery:["sh-ih k-ey1 n-er iy","nn"],chick:["ch-ih1-k","nn"],chicken:["ch-ih1 k-ah-n","nn"],chide:["ch-ay1-d","vb vbp"],chief:["ch-iy1-f","jj nn"],chiefdom:["ch-iy1-f d-ah-m","nn"],chiefly:["ch-iy1-f l-iy","rb"],chieftain:["ch-iy1-f t-ah-n","nn"],child:["ch-ay1-l-d","nn"],childbirth:["ch-ay1-l-d b-er-th","nn"],childcare:["ch-ay1-l-d k-eh-r","nn"],childhood:["ch-ay1-l-d hh-uh-d","nn"],childish:["ch-ay1-l d-ih-sh","jj"],childless:["ch-ay1-l-d l-ah-s","jj"],childlike:["ch-ay1-l-d l-ay-k","jj"],chili:["ch-ih1 l-iy","nn"],chill:["ch-ih1-l","nn jj vb"],chilled:["ch-ih1-l-d","vbn jj vbd"],chillier:["ch-ih1 l-iy er","nn"],chilling:["ch-ih1 l-ih-ng","vbg jj"],chillingly:["ch-ih1 l-ih-ng l-iy","rb"],chilly:["ch-ih1 l-iy","jj"],chime:["ch-ay1-m","vb"],chimney:["ch-ih1-m n-iy","nn"],chimp:["ch-ih1-m-p","nn"],chimpanzee:["ch-ih-m p-ae1-n z-iy","nn"],chin:["ch-ih1-n","nn vb"],china:["ch-ay1 n-ah","nn"],chip:["ch-ih1-p","nn"],chipped:["ch-ih1-p-t","vbn vbd jj"],chipper:["ch-ih1 p-er","jj"],chiropractor:["k-ay1 r-ah p-r-ae-k t-er","nn"],chirp:["ch-er1-p","vb"],chirpy:["ch-er1 p-iy","jj"],chisel:["ch-ih1 z-ah-l","nn vb"],chiseled:["ch-ih1 z-ah-l-d","vbn jj"],chit:["ch-ih1-t","nn"],chitchat:["ch-ih1-t ch-ae-t","nn"],chivalry:["sh-ih1 v-ah-l r-iy","nn"],chive:["ch-ay1-v","nn"],chloride:["k-l-ao1 r-ay-d","nn"],chlorine:["k-l-ao1 r-iy-n","nn"],chocolate:["ch-ao1-k l-ah-t","nn jj"],choice:["ch-oy1-s","nn jj"],choicest:["ch-oy1 s-ah-s-t","jjs"],choir:["k-w-ay1 er","nn"],choke:["ch-ow1-k","vb vbp nn"],choking:["ch-ow1 k-ih-ng","vbg jj nn"],cholera:["k-aa1 l-er ah","nn"],cholesterol:["k-ah l-eh1-s t-er ao-l","nn"],cholla:["ch-aa1 l-ah","nn"],chomp:["ch-aa1-m-p","nn vb vbp"],choose:["ch-uw1-z","vb vbp"],choosy:["ch-uw1 z-iy","jj"],chop:["ch-aa1-p","vb nn"],chopped:["ch-aa1-p-t","jj vbd vbn"],chopper:["ch-aa1 p-er","nn"],choppy:["ch-aa1 p-iy","jj"],chopstick:["ch-aa1-p s-t-ih-k","nn"],choral:["k-ao1 r-ah-l","jj"],chord:["k-ao1-r-d","nn"],chore:["ch-ao1-r","nn"],choreograph:["k-ao1-r-iy-ah-g-r-ae-f","vb"],choreographed:["k-ao1 r-iy ah g-r-ae-f-t","vbn jj"],choreographer:["k-ao r-iy aa1 g-r-ah f-er","nn"],choreography:["k-ao r-iy aa1 g-r-ah f-iy","nn"],chortle:["ch-ao1-r-t-ah-l","vb"],chorus:["k-ao1 r-ah-s","nn"],chose:["ch-ow1-z","vbd"],chosen:["ch-ow1 z-ah-n","vbn jj"],chow:["ch-aw1","nn"],chowder:["ch-aw1 d-er","nn"],christen:["k-r-ih1 s-ah-n","vb"],christening:["k-r-ih1 s-ah-n ih-ng","nn"],chrome:["k-r-ow1-m","nn"],chromium:["k-r-ow1 m-iy ah-m","nn"],chromosome:["k-r-ow1 m-ah s-ow-m","nn"],chronic:["k-r-aa1 n-ih-k","jj nn"],chronically:["k-r-aa1 n-ih k-ah l-iy","rb"],chronicle:["k-r-aa1 n-ih k-ah-l","nn vb"],chronicler:["k-r-aa1 n-ih k-l-er","nn"],chronological:["k-r-aa n-ah l-aa1 jh-ih k-ah-l","jj"],chronologically:["k-r-aa n-ah l-aa1 jh-ih-k l-iy","rb"],chronology:["k-r-ah n-aa1 l-ah jh-iy","nn"],chrysanthemum:["k-r-ih s-ae1-n th-ah m-ah-m","nn"],chubby:["ch-ah1 b-iy","jj"],chuck:["ch-ah1-k","nn vb"],chuckle:["ch-ah1 k-ah-l","nn vb vbp"],chug:["ch-ah1-g","vb vbp"],chum:["ch-ah1-m","nn"],chump:["ch-ah1-m-p","nn"],chunk:["ch-ah1-ng-k","nn"],chunky:["ch-ah1-ng k-iy","jj"],church:["ch-er1-ch","nn"],churchgoer:["ch-er1-ch g-ow er","nn"],churchyard:["ch-er1-ch y-aa-r-d","nn"],churn:["ch-er1-n","vb vbp"],chute:["sh-uw1-t","nn"],chutney:["ch-ah1-t n-iy","nn"],chutzpah:["ch-ah1-t s-p-aa","nn"],cicada:["s-ih k-ey1 d-ah","nn"],cider:["s-ay1 d-er","nn"],cigar:["s-ih g-aa1-r","nn"],cigarette:["s-ih g-er eh1-t","nn"],ciliate:["s-ih1 l-iy ah-t","nn"],cinch:["s-ih1-n-ch","nn vb"],cinder:["s-ih1-n d-er","nn"],cinema:["s-ih1 n-ah m-ah","nn"],cinematic:["s-ih n-ah m-ae1 t-ih-k","jj"],cinematographer:["s-ih n-ih m-ah t-aa1 g-r-ah f-er","nn"],cinematography:["s-ih n-ih m-ah t-aa1 g-r-ah f-iy","nn"],cipher:["s-ay1 f-er","vb"],circle:["s-er1 k-ah-l","nn vb"],circuit:["s-er1 k-ah-t","nn"],circuitous:["s-er k-y-uw1 ih t-ah-s","jj"],circuitry:["s-er1 k-ah t-r-iy","nn"],circular:["s-er1 k-y-ah l-er","jj nn"],circulate:["s-er1 k-y-ah l-ey-t","vb vbp"],circulation:["s-er1 k-y-ah l-ey sh-ah-n","nn"],circulatory:["s-er1 k-y-ah l-ah t-ao r-iy","jj"],circumcision:["s-er k-ah-m s-ih1 zh-ah-n","nn"],circumference:["s-er k-ah1-m f-r-ah-n-s","nn"],circumscribed:["s-er k-ah-m s-k-r-ay1-b-d","jj"],circumspect:["s-er1 k-ah-m s-p-eh-k-t","jj"],circumspection:["s-er k-ah-m s-p-eh1-k sh-ah-n","nn"],circumstance:["s-er1 k-ah-m s-t-ae-n-s","nn"],circumstantial:["s-er k-ah-m s-t-ae1-n ch-ah-l","jj"],circumvent:["s-er k-ah-m v-eh1-n-t","vb"],circumvention:["s-er k-ah-m v-eh1-n ch-ah-n","nn"],circus:["s-er1 k-ah-s","nn"],cirrhosis:["s-er ow1 s-ah-s","nn"],citation:["s-ay t-ey1 sh-ah-n","nn"],cite:["s-ay1-t","vbp vb"],citizen:["s-ih1 t-ah z-ah-n","nn"],citizenry:["s-ih1 t-ih z-ah-n r-iy","nn"],citizenship:["s-ih1 t-ih z-ah-n sh-ih-p","nn"],citric:["s-ih1 t-r-ih-k","jj"],citron:["s-ih1 t-r-ah-n","jj"],citrus:["s-ih1 t-r-ah-s","jj nn"],city:["s-ih1 t-iy","nn"],citywide:["s-ih1 t-iy w-ay-d","jj"],civic:["s-ih1 v-ih-k","jj"],civil:["s-ih1 v-ah-l","jj"],civilian:["s-ah v-ih1-l y-ah-n","jj nn"],civility:["s-ah v-ih1 l-ah t-iy","nn"],civilization:["s-ih v-ah l-ih z-ey1 sh-ah-n","nn"],civilize:["s-ih1 v-ah l-ay-z","vb"],civilized:["s-ih1 v-ah l-ay-z-d","jj vbn"],clad:["k-l-ae1-d","vbn jj"],claim:["k-l-ey1-m","nn vbp vb"],claimant:["k-l-ey1 m-ah-n-t","nn"],clairvoyance:["k-l-eh-r v-oy1 ah-n-s","nn"],clam:["k-l-ae1-m","nn"],clamber:["k-l-ae1-m-b-er","vb"],clammy:["k-l-ae1 m-iy","jj"],clamor:["k-l-ae1 m-er","vb vbp nn"],clamp:["k-l-ae1-m-p","vb nn"],clampdown:["k-l-ae1-m-p d-aw-n","nn"],clamshell:["k-l-ae1-m sh-eh-l","nn"],clan:["k-l-ae1-n","nn"],clandestine:["k-l-ae-n d-eh1 s-t-ih-n","jj"],clang:["k-l-ae1-ng","nn vb"],clanging:["k-l-ae1 ng-ih-ng","nn vbg"],clank:["k-l-ae1-ng-k","vb"],clannish:["k-l-ae1 n-ih-sh","jj"],clap:["k-l-ae1-p","nn"],clapboard:["k-l-ae1-p b-ao-r-d","nn"],clapped:["k-l-ae1-p-t","vbd"],clarification:["k-l-eh r-ah f-ah k-ey1 sh-ah-n","nn"],clarified:["k-l-eh1 r-ah f-ay-d","vbn vbd"],clarifies:["k-l-eh1 r-ah f-ay-z","vbz"],clarify:["k-l-eh1 r-ah f-ay","vb vbp"],clarinet:["k-l-eh r-ah n-eh1-t","nn"],clarinetist:["k-l-eh r-ah n-eh1 t-ih-s-t","nn"],clarity:["k-l-eh1 r-ah t-iy","nn"],clash:["k-l-ae1-sh","nn vbp vb"],clasp:["k-l-ae1-s-p","vb"],class:["k-l-ae1-s","nn vb"],classic:["k-l-ae1 s-ih-k","jj nn"],classical:["k-l-ae1 s-ih k-ah-l","jj"],classically:["k-l-ae1 s-ih-k l-iy","rb"],classification:["k-l-ae s-ah f-ah k-ey1 sh-ah-n","nn"],classified:["k-l-ae1 s-ah f-ay-d","vbn vbd jj"],classifies:["k-l-ae1 s-ah f-ay-z","vbz"],classify:["k-l-ae1 s-ah f-ay","vb vbp"],classless:["k-l-ae1-s l-ah-s","jj"],classmate:["k-l-ae1-s m-ey-t","nn"],classroom:["k-l-ae1-s r-uw-m","nn"],classy:["k-l-ae1 s-iy","jj"],clatter:["k-l-ae1 t-er","nn vb"],clause:["k-l-ao1-z","nn"],claustrophobia:["k-l-ao s-t-r-ah f-ow1 b-iy ah","nn"],claustrophobic:["k-l-ao s-t-r-ah f-ow1 b-ih-k","jj"],claw:["k-l-ao1","nn vb"],clay:["k-l-ey1","nn"],clean:["k-l-iy1-n","jj vbp rb vb"],cleaner:["k-l-iy1 n-er","jjr nn"],cleanest:["k-l-iy1 n-ah-s-t","jjs"],cleaning:["k-l-iy1 n-ih-ng","nn vbg"],cleanliness:["k-l-eh1-n l-iy n-ih-s","nn"],cleanly:["k-l-iy1-n l-iy","rb"],cleanse:["k-l-eh1-n-z","vb"],cleanser:["k-l-eh1-n z-er","nn"],cleansing:["k-l-eh1-n z-ih-ng","nn vbg"],cleanup:["k-l-iy1-n ah-p","nn"],clear:["k-l-ih1-r","jj rb vb vbp"],clearance:["k-l-ih1 r-ah-n-s","nn"],clearer:["k-l-ih1 r-er","jjr rbr"],clearest:["k-l-ih1 r-ih-s-t","jjs"],clearing:["k-l-ih1 r-ih-ng","vbg jj nn"],clearinghouse:["k-l-ih1 r-ih-ng hh-aw-s","nn"],clearly:["k-l-ih1-r l-iy","rb"],cleat:["k-l-iy1-t","nn"],cleavage:["k-l-iy1 v-ah-jh","nn"],cleaver:["k-l-iy1 v-er","nn"],clemency:["k-l-eh1 m-ah-n s-iy","nn"],clench:["k-l-eh1-n-ch","vb"],clenched:["k-l-eh1-n-ch-t","jj vbd vbn"],clergy:["k-l-er1 jh-iy","nn"],clergyman:["k-l-er1 jh-iy m-ah-n","nn"],cleric:["k-l-eh1 r-ih-k","nn"],clerical:["k-l-eh1 r-ah k-ah-l","jj nn"],clerk:["k-l-er1-k","nn"],clever:["k-l-eh1 v-er","jj"],cleverly:["k-l-eh1 v-er l-iy","rb"],cleverness:["k-l-eh1 v-er n-ah-s","nn"],cliche:["k-l-iy sh-ey1","nn"],cliched:["k-l-iy sh-ey1-d","jj"],click:["k-l-ih1-k","nn vb"],client:["k-l-ay1 ah-n-t","nn"],clientele:["k-l-ay ah-n t-eh1-l","nn"],cliff:["k-l-ih1-f","nn"],climactic:["k-l-ay m-ae1-k t-ih-k","jj"],climate:["k-l-ay1 m-ah-t","nn"],climatic:["k-l-ay m-ae1 t-ih-k","jj"],climax:["k-l-ay1 m-ae-k-s","nn vb"],climb:["k-l-ay1-m","vb vbp nn"],climber:["k-l-ay1 m-er","nn"],clime:["k-l-ay1-m","nn"],clinch:["k-l-ih1-n-ch","vb"],clincher:["k-l-ih1-n ch-er","nn"],cling:["k-l-ih1-ng","vbp vb"],clinic:["k-l-ih1 n-ih-k","nn"],clinical:["k-l-ih1 n-ah k-ah-l","jj"],clinically:["k-l-ih1 n-ih k-ah l-iy","rb"],clinician:["k-l-ih n-ih1 sh-ah-n","nn"],clip:["k-l-ih1-p","nn vb"],clipboard:["k-l-ih1-p b-ao-r-d","nn"],clipping:["k-l-ih1 p-ih-ng","nn"],clique:["k-l-iy1-k","nn"],cloak:["k-l-ow1-k","nn vb vbp"],clobber:["k-l-aa1 b-er","vb"],clock:["k-l-aa1-k","nn vb vbp"],clockwork:["k-l-aa1-k w-er-k","nn"],clog:["k-l-aa1-g","vb"],clogged:["k-l-ao1-g-d","jj vbn vbd"],cloister:["k-l-oy1 s-t-er","nn"],cloistered:["k-l-oy1 s-t-er-d","jj"],clone:["k-l-ow1-n","nn vb"],clones:["k-l-ow1-n","nn"],close:["k-l-ow1-s","vb vbp jj"],closed:["k-l-ow1-z-d","vbd vbn jj"],closeness:["k-l-ow1-s n-ih-s","nn"],closest:["k-l-ow1 s-ah-s-t","jjs"],closet:["k-l-aa1 z-ah-t","nn jj vb"],closeted:["k-l-aa1 z-ah t-ih-d","jj"],closeup:["k-l-ow1 s-ah1-p","jj"],closing:["k-l-ow1 z-ih-ng","vbg jj nn"],closure:["k-l-ow1 zh-er","nn"],clot:["k-l-aa1-t","nn"],cloth:["k-l-ao1-th","nn"],clothe:["k-l-ow1-dh","vb"],clothed:["k-l-ow1-dh-d","vbn jj"],clothes:["k-l-ow1-dh-z","nns"],clothier:["k-l-ow1 dh-y-er","nn"],clothing:["k-l-ow1 dh-ih-ng","nn"],clotted:["k-l-aa1 t-ah-d","jj"],cloud:["k-l-aw1-d","nn vb vbp"],cloudburst:["k-l-aw1-d b-er-s-t","nn"],clouded:["k-l-aw1 d-ih-d","vbn jj vbd"],clouding:["k-l-aw1 d-ih-ng","nn"],cloudless:["k-l-aw1-d l-ah-s","jj"],cloudy:["k-l-aw1 d-iy","jj"],clout:["k-l-aw1-t","nn"],clove:["k-l-ow1-v-z","nn"],clover:["k-l-ow1 v-er","nn"],clown:["k-l-aw1-n","nn"],clowning:["k-l-aw1 n-ih-ng","nn"],cloy:["k-l-oy1","vb"],cloying:["k-l-oy1 ih-ng","jj vbg"],club:["k-l-ah1-b","nn"],clubbed:["k-l-ah1-b-d","jj vbd"],clubby:["k-l-ah1 b-iy","jj"],clubhouse:["k-l-ah1-b hh-aw-s","nn"],cluck:["k-l-ah1-k","nn vb"],clue:["k-l-uw1","nn"],clump:["k-l-ah1-m-p","nn"],clumsily:["k-l-ah1-m s-ah l-iy","rb"],clumsy:["k-l-ah1-m z-iy","jj"],clung:["k-l-ah1-ng","vbd vbn"],clunky:["k-l-ah1-ng k-iy","jj"],cluster:["k-l-ah1 s-t-er","nn vb"],clutch:["k-l-ah1-ch","nn vbp vb"],clutter:["k-l-ah1 t-er","nn vb"],cluttered:["k-l-ah1 t-er-d","vbn jj"],coach:["k-ow1-ch","nn vb"],coachman:["k-ow1-ch m-ah-n","nn"],coagulate:["k-ow-ae1-g-y-ah-l-ey-t","vb"],coal:["k-ow1-l","nn"],coalesce:["k-ow ah l-eh1-s","vb vbp"],coalition:["k-ow ah l-ih1 sh-ah-n","nn"],coarse:["k-ao1-r-s","jj"],coast:["k-ow1-s-t","nn vb"],coastal:["k-ow1 s-t-ah-l","jj"],coaster:["k-ow1 s-t-er","nn"],coastline:["k-ow1-s-t l-ay-n","nn"],coat:["k-ow1-t","nn vb"],coated:["k-ow1 t-ah-d","vbn jj"],coating:["k-ow1 t-ih-ng","nn vbg"],coattail:["k-ow1-t t-ey-l","nn"],coax:["k-ow1-k-s","vb"],coaxial:["k-ow1 ae1-k s-iy ah-l","jj"],coaxing:["k-ow1-k s-ih-ng","jj vbg"],cobalt:["k-ow1 b-ao-l-t","nn"],cobble:["k-aa1-b-ah-l","vb"],cobbler:["k-aa1-b l-er","nn"],cobblestone:["k-aa1 b-ah-l s-t-ow-n","nn"],cobra:["k-ow1 b-r-ah","nn"],cobweb:["k-aa1-b w-eh-b","nn"],coca:["k-ow1 k-ah","nn"],cocaine:["k-ow k-ey1-n","nn"],cock:["k-aa1-k","nn vb"],cockatoo:["k-aa1 k-ah t-uw","nn"],cockeyed:["k-aa1-k ay-d","jj"],cockiness:["k-aa1 k-iy n-ah-s","nn"],cockpit:["k-aa1-k p-ih-t","nn"],cockroach:["k-aa1-k r-ow-ch","nn"],cocktail:["k-aa1-k t-ey-l","nn"],cocky:["k-aa1 k-iy","jj"],coco:["k-ow1 k-ow","nn"],cocoa:["k-ow1 k-ow","nn"],coconut:["k-ow1 k-ah n-ah-t","nn"],cocoon:["k-ah k-uw1-n","nn"],cod:["k-aa1-d","nn"],coddle:["k-aa1 d-ah-l","vb vbp"],coddling:["k-aa1 d-ah-l ih-ng","nn"],code:["k-ow1-d","nn vb"],coded:["k-ow1 d-ih-d","vbn jj"],codification:["k-aa d-ah f-ah k-ey1 sh-ah-n","nn"],codified:["k-aa1 d-ah f-ay-d","vbn"],codifies:["k-ow1 d-ah f-ay-z","vbz"],codify:["k-ow1-d-ah-f-ay","vb"],coding:["k-ow1 d-ih-ng","nn"],coed:["k-ow1 eh-d","nn"],coefficient:["k-ow ah f-ih1 sh-ah-n-t","nn"],coerce:["k-ow er1-s","vb"],coerced:["k-ow er1-s-t","vbn vbd jj"],coercion:["k-ow er1 sh-ah-n","nn"],coercive:["k-ow er1 s-ih-v","jj"],coexist:["k-ow ah-g z-ih1-s-t","vb vbp"],coexistence:["k-ow ih-g z-ih1 s-t-ah-n-s","nn"],coffee:["k-aa1 f-iy","nn"],coffer:["k-aa1 f-er","nn"],coffin:["k-ao1 f-ih-n","nn"],cofounder:["k-ow1 f-aw1-n d-er","nn"],cog:["k-ao1-g","nn"],cogeneration:["k-ow1 jh-eh1 n-er ey1 sh-ah-n","nn"],cognac:["k-ow1-n y-ae-k","nn"],cognitive:["k-aa1-g n-ih t-ih-v","jj"],cognizance:["k-aa1-g n-ah z-ah-n-s","nn"],cognizant:["k-aa1-g n-ah z-ah-n-t","jj"],cognoscenti:["k-aa-g n-ao sh-eh1-n t-iy","nn"],coherence:["k-ow hh-ih1 r-ah-n-s","nn"],coherent:["k-ow hh-ih1 r-ah-n-t","jj"],coherently:["k-ow hh-iy1 r-ah-n-t l-iy","rb"],cohesion:["k-ow hh-iy1 zh-ah-n","nn"],cohesive:["k-ow hh-iy1 s-ih-v","jj"],cohesively:["k-ow hh-iy1 s-ih-v l-iy","rb"],cohesiveness:["k-ow hh-iy1 s-ih-v n-ah-s","nn"],cohort:["k-ow1 hh-ao-r-t","nn"],coiffed:["k-oy1-f-t","jj"],coil:["k-oy1-l","nn vb"],coin:["k-oy1-n","nn vb"],coincide:["k-ow ih-n s-ay1-d","vb vbp"],coincidence:["k-ow ih1-n s-ih d-ah-n-s","nn"],coincident:["k-ow ih1-n s-ah d-ah-n-t","jj"],coincidental:["k-ow ih-n s-ah d-eh1-n t-ah-l","jj"],coincidentally:["k-ow ih-n s-ih d-eh1-n t-ah l-iy","rb"],coinciding:["k-ow ah-n s-ay1 d-ih-ng","vbg jj"],coke:["k-ow1-k","nn"],cola:["k-ow1 l-ah","nn"],cold:["k-ow1-l-d","jj nn"],colder:["k-ow1-l d-er","jjr rbr"],coldest:["k-ow1-l d-ah-s-t","jjs"],coldly:["k-ow1-l-d l-iy","rb"],coldness:["k-ow1-l-d n-ah-s","nn"],coliseum:["k-aa l-ah s-iy1 ah-m","nn"],collaborate:["k-ah l-ae1 b-er ey-t","vb vbp"],collaboration:["k-ah l-ae b-er ey1 sh-ah-n","nn"],collaborative:["k-ah l-ae1 b-er ey t-ih-v","jj"],collaborator:["k-ah l-ae1 b-er ey t-er","nn"],collage:["k-ah l-aa1-zh","nn"],collagen:["k-aa1 l-ah g-ah-n","nn"],collapse:["k-ah l-ae1-p-s","nn vb"],collapsed:["k-ah l-ae1-p-s-t","vbd jj vbn"],collapsible:["k-ah l-ae1-p s-ah b-ah-l","jj"],collar:["k-aa1 l-er","nn vb"],collarbone:["k-aa1 l-er b-ow-n","nn"],collateral:["k-ah l-ae1 t-er ah-l","nn jj"],collateralize:["k-ah-l-ae1-t-er-ah-l-ay-z","vb"],collateralized:["k-ah l-ae1 t-er ah l-ay-z-d","jj vbn"],colleague:["k-aa1 l-iy-g","nn"],collect:["k-ah l-eh1-k-t","vb jj vbp"],collectible:["k-ah l-eh1-k t-ah b-ah-l","jj"],collection:["k-ah l-eh1-k sh-ah-n","nn"],collective:["k-ah l-eh1-k t-ih-v","jj nn"],collectively:["k-ah l-eh1-k t-ih-v l-iy","rb"],collectivization:["k-ah l-eh-k t-ih v-ih z-ey1 sh-ah-n","nn"],collector:["k-ah l-eh1-k t-er","nn"],college:["k-aa1 l-ih-jh","nn"],collegial:["k-ah l-iy1 jh-iy ah-l","jj"],collegian:["k-ah l-iy1 jh-ah-n","nn"],collegiate:["k-ah l-iy1 jh-ih-t","jj"],collide:["k-ah-l-ay1-d","vb"],collie:["k-aa1 l-iy","nn"],collision:["k-ah l-ih1 zh-ah-n","nn"],colloidal:["k-ah l-oy1 d-ah-l","jj"],colloquial:["k-ah l-ow1-k w-iy ah-l","jj"],colloquium:["k-ah l-ow1 k-w-iy ah-m","nn"],colloquy:["k-aa1 l-ah k-w-iy","nn"],collude:["k-ah l-uw1-d","vb"],collusion:["k-ah l-uw1 zh-ah-n","nn"],cologne:["k-ah l-ow1-n","nn"],colon:["k-ow1 l-ah-n","nn"],colonel:["k-er1 n-ah-l","nn"],colonial:["k-ah l-ow1 n-iy ah-l","jj nn"],colonialism:["k-ah l-ow1 n-iy ah l-ih z-ah-m","nn"],colonialist:["k-ah l-ow1 n-iy ah l-ih-s-t","nn"],colonist:["k-aa1 l-ah n-ih-s-t","nn"],colonization:["k-aa l-ah n-ih z-ey1 sh-ah-n","nn"],colonize:["k-aa1-l-ah-n-ay-z","vb"],colonnade:["k-aa l-ah n-ey1-d","nn"],colony:["k-aa1 l-ah n-iy","nn"],color:["k-ah1 l-er","nn jj vb vbp"],coloration:["k-ah l-er ey1 sh-ah-n","nn"],coloratura:["k-ah l-er ah t-uh1 r-ah","nn"],colorblind:["k-ah1 l-er b-l-ay-n-d","jj"],colored:["k-ah1 l-er-d","jj vbn"],colorful:["k-ah1 l-er f-ah-l","jj"],coloring:["k-ah1 l-er ih-ng","nn"],colorization:["k-ah l-er ah z-ey1 sh-ah-n","nn"],colorless:["k-ah1 l-er l-ah-s","jj"],colossal:["k-ah l-aa1 s-ah-l","jj"],colossus:["k-ah l-aa1 s-ah-s","nn"],coloured:["k-ah1 l-er-d","jj"],colt:["k-ow1-l-t","nn"],columbine:["k-aa1 l-ah-m b-ay-n","nn"],column:["k-aa1 l-ah-m","nn"],columnist:["k-aa1 l-ah-m n-ah-s-t","nn"],coma:["k-ow1 m-ah","nn"],comb:["k-ow1-m","nn vb"],combat:["k-aa1-m b-ae-t","nn vb"],combatant:["k-ah-m b-ae1 t-ah-n-t","jj nn"],combative:["k-ah-m b-ae1 t-ih-v","jj"],combinable:["k-ah-m b-ay1 n-ah b-ah-l","jj"],combination:["k-aa-m b-ah n-ey1 sh-ah-n","nn"],combine:["k-aa1-m b-ay-n","vb nn vbp"],combined:["k-ah-m b-ay1-n-d","vbn jj vbd"],combing:["k-ow1 m-ih-ng","vbg jj"],combo:["k-aa1-m b-ow","nn"],combustion:["k-ah-m b-ah1-s ch-ah-n","nn"],come:["k-ah1-m","vb vbd vbn vbp vbz jj"],comeback:["k-ah1-m b-ae-k","nn"],comedian:["k-ah m-iy1 d-iy ah-n","nn"],comedic:["k-ah m-iy1 d-ih-k","jj"],comedy:["k-aa1 m-ah d-iy","nn"],comely:["k-ah1-m l-iy","jj"],comer:["k-ah1 m-er","nn"],comet:["k-aa1 m-ah-t","nn"],cometary:["k-aa1 m-ah t-eh r-iy","jj"],comeuppance:["k-ah m-ah1 p-ah-n-s","nn"],comfort:["k-ah1-m f-er-t","nn vb"],comfortable:["k-ah1-m f-er t-ah b-ah-l","jj nn"],comfortably:["k-ah1-m f-er t-ah b-l-iy","rb"],comforting:["k-ah1-m f-er t-ih-ng","vbg jj"],comfy:["k-ah1-m f-iy","jj"],comic:["k-aa1 m-ih-k","jj nn"],comical:["k-aa1 m-ih k-ah-l","jj"],comically:["k-aa1 m-ih k-ah l-iy","rb"],coming:["k-ah1 m-ih-ng","vbg jj nn"],comma:["k-aa1 m-ah","nn"],command:["k-ah m-ae1-n-d","nn vbp vb"],commandant:["k-aa m-ah-n d-aa1-n-t","nn"],commandeer:["k-aa-m-ah-n-d-ih1-r","vb"],commander:["k-ah m-ae1-n d-er","nn"],commanding:["k-ah m-ae1-n d-ih-ng","vbg jj nn"],commandment:["k-ah m-ae1-n-d m-ah-n-t","nn"],commando:["k-ah m-ae1-n d-ow","nn"],commemorate:["k-ah m-eh1 m-er ey-t","vb vbp"],commemorative:["k-ah m-eh1-m r-ah t-ih-v","jj nn"],commence:["k-ah m-eh1-n-s","vb vbp"],commencement:["k-ah m-eh1-n s-m-ah-n-t","nn"],commend:["k-ah m-eh1-n-d","vb vbp"],commendable:["k-ah m-eh1-n d-ah b-ah-l","jj"],commendation:["k-aa m-ah-n d-ey1 sh-ah-n","nn"],commensurate:["k-ah m-eh1-n s-er ah-t","jj"],comment:["k-aa1 m-eh-n-t","vb vbp nn"],commentary:["k-aa1 m-ah-n t-eh r-iy","nn"],commentator:["k-aa1 m-ah-n t-ey t-er","nn"],commerce:["k-aa1 m-er-s","nn"],commercial:["k-ah m-er1 sh-ah-l","jj nn"],commercialism:["k-ah m-er1 sh-ah l-ih z-ah-m","nn"],commercialization:["k-ah m-er sh-ah l-ih z-ey1 sh-ah-n","nn"],commercialize:["k-ah m-er1 sh-ah l-ay-z","vb"],commercially:["k-ah m-er1 sh-ah l-iy","rb"],commerical:["k-ah m-er1 sh-ah-l","jj"],commie:["k-aa1 m-iy","jj"],commingle:["k-ah-m-ih1-ng-g-ah-l","vb"],commiserate:["k-ah m-ih1 s-er ey-t","vb"],commissar:["k-aa1 m-ah s-aa-r","nn"],commissary:["k-aa1 m-ah s-eh r-iy","nn"],commission:["k-ah m-ih1 sh-ah-n","nn vb"],commissioner:["k-ah m-ih1 sh-ah-n er","nn"],commit:["k-ah m-ih1-t","vb jj vbp"],commitment:["k-ah m-ih1-t m-ah-n-t","nn"],committed:["k-ah m-ih1 t-ah-d","vbn jj vb vbd"],committee:["k-ah m-ih1 t-iy","nn"],commodity:["k-ah m-aa1 d-ah t-iy","nn"],common:["k-aa1 m-ah-n","jj nn"],commonality:["k-aa m-ah n-ae1 l-ah t-iy","nn"],commoner:["k-aa1 m-ah n-er","nn"],commonly:["k-aa1 m-ah-n l-iy","rb"],commonplace:["k-aa1 m-ah-n p-l-ey-s","jj nn"],commons:["k-aa1 m-ah-n-z","nn"],commonwealth:["k-aa1 m-ah-n w-eh-l-th","nn"],commotion:["k-ah m-ow1 sh-ah-n","nn"],communal:["k-ah m-y-uw1 n-ah-l","jj"],commune:["k-aa1 m-y-uw-n","nn vb"],communicable:["k-ah m-y-uw1 n-ah k-ah b-ah-l","jj"],communicate:["k-ah m-y-uw1 n-ah k-ey-t","vb vbp"],communication:["k-ah m-y-uw n-ah k-ey1 sh-ah-n","nn"],communicative:["k-ah m-y-uw1 n-ah k-ah t-ih-v","jj"],communicator:["k-ah m-y-uw1 n-ah k-ey t-er","nn"],communion:["k-ah m-y-uw1 n-y-ah-n","nn"],communique:["k-ah m-y-uw1 n-ah k-ey","nn"],communism:["k-aa1 m-y-ah n-ih z-ah-m","nn"],communist:["k-aa1 m-y-ah n-ah-s-t","jj nn"],community:["k-ah m-y-uw1 n-ah t-iy","nn"],communize:["k-aa1 m-y-ah n-ay-z","vb"],commute:["k-ah m-y-uw1-t","vb nn vbp"],commuter:["k-ah m-y-uw1 t-er","nn"],compact:["k-aa1-m p-ae-k-t","jj nn vb"],compacted:["k-ah-m p-ae1-k t-ih-d","jj vbn"],companion:["k-ah-m p-ae1 n-y-ah-n","nn jj"],companionship:["k-ah-m p-ae1 n-y-ah-n sh-ih-p","nn"],companionway:["k-ah-m p-ae1 n-y-ah-n w-ey","nn"],company:["k-ah1-m p-ah n-iy","nn"],companywide:["k-ah1-m p-ah n-iy w-ay-d","jj rb"],comparability:["k-aa-m p-er ah b-ih1 l-ih t-iy","nn"],comparable:["k-aa1-m p-er ah b-ah-l","jj"],comparably:["k-aa1-m p-er ah b-l-iy","rb"],comparative:["k-ah-m p-eh1 r-ah t-ih-v","jj nn"],comparatively:["k-ah-m p-eh1 r-ah t-ih-v l-iy","rb"],compare:["k-ah-m p-eh1-r","vb vbp nn"],comparison:["k-ah-m p-eh1 r-ah s-ah-n","nn"],compartment:["k-ah-m p-aa1-r-t m-ah-n-t","nn"],compass:["k-ah1-m p-ah-s","nn vb"],compassion:["k-ah-m p-ae1 sh-ah-n","nn"],compassionate:["k-ah-m p-ae1 sh-ah n-ah-t","jj"],compatibility:["k-ah-m p-ae t-ah b-ih1 l-ah t-iy","nn"],compatible:["k-ah-m p-ae1 t-ah b-ah-l","jj"],compatriot:["k-ah-m p-ey1 t-r-iy ah-t","nn"],compel:["k-ah-m p-eh1-l","vb"],compelled:["k-ah-m p-eh1-l-d","vbn vbd jj"],compelling:["k-ah-m p-eh1 l-ih-ng","jj vbg"],compellingly:["k-ah-m p-eh1 l-ih-ng l-iy","rb"],compendium:["k-ah-m p-eh1-n d-iy ah-m","nn"],compensate:["k-aa1-m p-ah-n s-ey-t","vb vbp"],compensation:["k-aa-m p-ah-n s-ey1 sh-ah-n","nn"],compensatory:["k-ah-m p-eh1-n s-ah t-ao r-iy","jj"],compete:["k-ah-m p-iy1-t","vb vbp"],competence:["k-aa1-m p-ah t-ih-n-s","nn"],competency:["k-aa1-m p-ah t-ih-n s-iy","nn"],competent:["k-aa1-m p-ah t-ih-n-t","jj"],competently:["k-aa1-m p-ah t-ih-n-t l-iy","rb"],competing:["k-ah-m p-iy1 t-ih-ng","vbg jj"],competition:["k-aa-m p-ah t-ih1 sh-ah-n","nn"],competitive:["k-ah-m p-eh1 t-ah t-ih-v","jj"],competitively:["k-ah-m p-eh1 t-ih t-ih-v l-iy","rb"],competitiveness:["k-ah-m p-eh1 t-ih t-ih-v n-ih-s","nn"],competitor:["k-ah-m p-eh1 t-ah t-er","nn"],compilation:["k-aa-m p-ah l-ey1 sh-ah-n","nn"],compile:["k-ah-m p-ay1-l","vb"],complacency:["k-ah-m p-l-ey1 s-ah-n s-iy","nn"],complacent:["k-ah-m p-l-ey1 s-ah-n-t","jj"],complacently:["k-ah-m p-l-ey1 s-ah-n-t l-iy","rb"],complain:["k-ah-m p-l-ey1-n","vbp vb"],complaint:["k-ah-m p-l-ey1-n-t","nn"],complaisant:["k-ah-m p-l-ey1 s-ah-n-t","jj"],complement:["k-aa1-m p-l-ah m-ah-n-t","nn vbp vb"],complementary:["k-aa-m p-l-ah m-eh1-n t-r-iy","jj"],complete:["k-ah-m p-l-iy1-t","jj vb vbp"],completed:["k-ah-m p-l-iy1 t-ah-d","vbn jj vbd"],completely:["k-ah-m p-l-iy1-t l-iy","rb"],completeness:["k-ah-m p-l-iy1-t n-ah-s","nn"],completion:["k-ah-m p-l-iy1 sh-ah-n","nn"],complex:["k-aa1-m p-l-eh-k-s","jj nn"],complexion:["k-ah-m p-eh1-k sh-ah-n","nn"],complexity:["k-ah-m p-l-eh1-k s-ah t-iy","nn"],compliance:["k-ah-m p-l-ay1 ah-n-s","nn"],compliant:["k-ah-m p-l-ay1 ah-n-t","jj"],complicate:["k-aa1-m p-l-ah k-ey-t","vb vbp"],complicated:["k-aa1-m p-l-ah k-ey t-ah-d","vbn jj vbd"],complication:["k-aa-m p-l-ah k-ey1 sh-ah-n","nn"],complicity:["k-ah-m p-l-ih1 s-ah t-iy","nn"],complied:["k-ah-m p-l-ay1-d","vbn vbd"],complies:["k-ah-m p-l-ay1-z","vbz"],compliment:["k-aa1-m p-l-ah m-eh-n-t","nn vbp vb"],complimentary:["k-aa-m p-l-ah m-eh1-n t-er iy","jj"],comply:["k-ah-m p-l-ay1","vb vbp"],component:["k-ah-m p-ow1 n-ah-n-t","nn"],comportment:["k-ah-m p-ao1-r-t m-ah-n-t","nn"],compose:["k-ah-m p-ow1-z","vb vbp"],composed:["k-ah-m p-ow1-z-d","vbn vbd jj"],composer:["k-ah-m p-ow1 z-er","nn"],composite:["k-ah-m p-aa1 z-ah-t","jj nn"],composition:["k-aa-m p-ah z-ih1 sh-ah-n","nn"],compositional:["k-aa-m p-ah z-ih1 sh-ah n-ah-l","jj"],compost:["k-aa1-m p-ow-s-t","nn"],composting:["k-aa1-m p-ow s-t-ih-ng","nn"],composure:["k-ah-m p-ow1 zh-er","nn"],compote:["k-aa1-m p-ow-t","nn"],compound:["k-aa1-m p-aw-n-d","nn jj vb vbp"],compounded:["k-ah-m p-aw1-n d-ah-d","vbn jj vbd"],comprehend:["k-aa-m p-r-iy hh-eh1-n-d","vb"],comprehension:["k-aa-m p-r-iy hh-eh1-n sh-ah-n","nn"],comprehensive:["k-aa-m p-r-iy hh-eh1-n s-ih-v","jj"],comprehensively:["k-aa-m p-r-ih hh-eh1-n s-ih-v l-iy","rb"],compress:["k-aa1-m p-r-eh-s","vb"],compression:["k-ah-m p-r-eh1 sh-ah-n","nn"],compressor:["k-ah-m p-r-eh1 s-er","nn"],comprise:["k-ah-m p-r-ay1-z","vbp vb"],compromise:["k-aa1-m p-r-ah m-ay-z","nn jj vb"],compromising:["k-aa1-m p-r-ah m-ay z-ih-ng","vbg jj"],comptroller:["k-ah-n t-r-ow1 l-er","nn"],compulsion:["k-ah-m p-ah1-l sh-ah-n","nn"],compulsive:["k-ah-m p-ah1-l s-ih-v","jj"],compulsively:["k-ah-m p-ah1-l s-ih-v l-iy","rb"],compulsory:["k-ah-m p-ah1-l s-er iy","jj"],computation:["k-aa-m p-y-ah t-ey1 sh-ah-n","nn"],computational:["k-aa-m p-y-uw t-ey1 sh-ah n-ah-l","jj"],compute:["k-ah-m p-y-uw1-t","vb"],computed:["k-ah-m p-y-uw1 t-ah-d","vbn jj"],computer:["k-ah-m p-y-uw1 t-er","nn"],computerize:["k-ah-m p-y-uw1 t-er ay-z","vb"],computerized:["k-ah-m p-y-uw1 t-er ay-z-d","jj nn vb vbn"],comrade:["k-aa1-m r-ae-d","nn"],con:["k-aa1-n","nn"],concave:["k-aa-n k-ey1-v","jj"],conceal:["k-ah-n s-iy1-l","vb"],concealed:["k-ah-n s-iy1-l-d","vbn jj vbd"],concealment:["k-ah-n s-iy1-l m-ah-n-t","nn"],concede:["k-ah-n s-iy1-d","vbp vb"],conceit:["k-ah-n s-iy1-t","nn"],conceivable:["k-ah-n s-iy1 v-ah b-ah-l","jj"],conceivably:["k-ah-n s-iy1 v-ah b-l-iy","rb"],conceive:["k-ah-n s-iy1-v","vb vbp"],conceived:["k-ah-n s-iy1-v-d","vbn vbd jj"],concentrate:["k-aa1-n s-ah-n t-r-ey-t","vb vbp nn"],concentrated:["k-aa1-n s-ah-n t-r-ey t-ah-d","vbn jj vbd"],concentration:["k-aa-n s-ah-n t-r-ey1 sh-ah-n","nn"],concentric:["k-ah-n s-eh1-n t-r-ih-k","jj"],concept:["k-aa1-n s-eh-p-t","nn"],conception:["k-ah-n s-eh1-p sh-ah-n","nn"],conceptual:["k-ah-n s-eh1-p ch-uw ah-l","jj"],conceptually:["k-ah-n s-eh1-p ch-uw ah l-iy","rb"],concern:["k-ah-n s-er1-n","nn vbp vb"],concerned:["k-ah-n s-er1-n-d","vbn jj vb vbd"],concert:["k-aa1-n s-er-t","nn vb"],concerted:["k-ah-n s-er1 t-ah-d","jj vbn"],concertmaster:["k-aa1-n s-er-t m-ae s-t-er","nn"],concerto:["k-ah-n ch-eh1-r t-ow","nn"],concession:["k-ah-n s-eh1 sh-ah-n","nn"],concessionaire:["k-ah-n s-eh sh-ah n-eh1-r","nn"],concierge:["k-aa-n s-iy eh1-r-zh","nn"],conciliator:["k-ah-n s-ih1 l-iy ey t-er","nn"],conciliatory:["k-ah-n s-ih1 l-iy ah t-ao r-iy","jj"],concise:["k-ah-n s-ay1-s","jj"],concisely:["k-ah-n s-ay1-s l-iy","rb"],conclave:["k-aa1-n k-l-ey-v","nn"],conclude:["k-ah-n k-l-uw1-d","vb vbp"],concluding:["k-ah-n k-l-uw1 d-ih-ng","vbg jj"],conclusion:["k-ah-n k-l-uw1 zh-ah-n","nn"],conclusive:["k-ah-n k-l-uw1 s-ih-v","jj"],conclusively:["k-ah-n k-l-uw1 s-ih-v l-iy","rb"],concoct:["k-ah-n k-aa1-k-t","vb"],concoction:["k-ah-n k-aa1-k sh-ah-n","nn"],concomitant:["k-aa-n k-aa1 m-ah t-ah-n-t","jj nn"],concomitantly:["k-aa-n k-aa1 m-ah t-ah-n-t l-iy","rb"],concord:["k-aa1-n k-ao-r-d","nn"],concrete:["k-ah-n k-r-iy1-t","jj nn"],concretely:["k-aa1-n k-r-iy-t l-iy","rb"],concur:["k-ah-n k-er1","vbp vb"],concurrence:["k-ah-n k-er1 ah-n-s","nn"],concurrent:["k-ah-n k-er1 ah-n-t","jj"],concurrently:["k-ah-n k-er1 ah-n-t l-iy","rb"],concussion:["k-ah-n k-ah1 sh-ah-n","nn"],condemn:["k-ah-n d-eh1-m","vb vbp"],condemnation:["k-aa-n d-ah-m n-ey1 sh-ah-n","nn"],condemned:["k-ah-n d-eh1-m-d","vbn jj vbd"],condensate:["k-aa1-n d-ah-n s-ey-t","nn"],condensation:["k-aa-n d-ah-n s-ey1 sh-ah-n","nn"],condense:["k-ah-n d-eh1-n-s","vb"],condensed:["k-ah-n d-eh1-n-s-t","jj vbn"],condenser:["k-ah-n d-eh1-n s-er","nn"],condescend:["k-aa-n-d-ih-s-eh1-n-d","vb"],condescending:["k-aa-n d-ih s-eh1-n d-ih-ng","jj vbg"],condescension:["k-aa-n d-ah s-eh1-n sh-ah-n","nn"],condiment:["k-aa1-n d-ah m-ah-n-t","nn"],condition:["k-ah-n d-ih1 sh-ah-n","nn vbp vb"],conditional:["k-ah-n d-ih1 sh-ah n-ah-l","jj nn"],conditionally:["k-ah-n d-ih1 sh-ah-n ah l-iy","rb"],conditioned:["k-ah-n d-ih1 sh-ah-n-d","vbn vbd jj"],conditioner:["k-ah-n d-ih1 sh-ah-n er","nn"],conditioning:["k-ah-n d-ih1 sh-ah-n ih-ng","nn vbg"],condo:["k-aa1-n d-ow","nn"],condolence:["k-ah-n d-ow1 l-ah-n s-ah","nn"],condom:["k-aa1-n d-ah-m","nn"],condominium:["k-aa-n d-ah m-ih1 n-iy ah-m","nn"],condone:["k-ah-n d-ow1-n","vb"],conducive:["k-ah-n d-uw1 s-ih-v","jj"],conduct:["k-ah-n d-ah1-k-t","nn vbp vb"],conduction:["k-ah-n d-ah1-k sh-ah-n","nn"],conductivity:["k-aa-n d-ah-k t-ih1 v-ah t-iy","nn"],conductor:["k-ah-n d-ah1-k t-er","nn"],conduit:["k-aa1-n d-uw ih-t","nn"],cone:["k-ow1-n","nn vb"],confabulation:["k-ah-n f-ae b-y-ah l-ey1 sh-ah-n","nn"],confectionary:["k-ah-n f-eh1-k sh-ah-n eh r-iy","jj"],confectioner:["k-ah-n f-eh1-k sh-ah-n er","nn"],confectionery:["k-ah-n f-eh1-k sh-ah-n eh r-iy","nn"],confederacy:["k-ah-n f-eh1 d-er ah s-iy","nn"],confederation:["k-ah-n f-eh d-er ey1 sh-ah-n","nn"],confer:["k-ah-n f-er1","vb vbp"],conferee:["k-aa-n f-er iy1","nn"],conference:["k-aa1-n f-er ah-n-s","nn"],confess:["k-ah-n f-eh1-s","vb vbp"],confession:["k-ah-n f-eh1 sh-ah-n","nn"],confessional:["k-ah-n f-eh1 sh-ah n-ah-l","nn jj"],confidant:["k-aa1-n f-ah d-aa-n-t","nn"],confidante:["k-aa1-n f-ah d-ae-n-t","nn"],confide:["k-ah-n f-ay1-d","vb vbp"],confidence:["k-aa1-n f-ah d-ah-n-s","nn"],confident:["k-aa1-n f-ah d-ah-n-t","jj"],confidential:["k-aa-n f-ah d-eh1-n sh-ah-l","jj"],confidentiality:["k-aa-n f-ah d-eh-n sh-iy ae1 l-ah t-iy","nn"],confidentially:["k-aa-n f-ah d-eh1-n sh-ah l-iy","rb"],confidently:["k-aa1-n f-ah d-ah-n-t l-iy","rb"],confiding:["k-ah-n f-ay1 d-ih-ng","vbg jj"],configuration:["k-ah-n f-ih g-y-er ey1 sh-ah-n","nn"],confine:["k-ah-n f-ay1-n","vb vbp"],confined:["k-ah-n f-ay1-n-d","vbn jj vbd"],confinement:["k-ah-n f-ay1-n m-ah-n-t","nn"],confirm:["k-ah-n f-er1-m","vb vbp"],confirmation:["k-aa-n f-er m-ey1 sh-ah-n","nn"],confirmed:["k-ah-n f-er1-m-d","vbd vbn jj"],confiscate:["k-aa1-n f-ah s-k-ey-t","vb"],confiscation:["k-aa-n f-ah s-k-ey1 sh-ah-n","nn"],confiscatory:["k-ah-n f-ih1-s k-ah t-ao r-iy","jj"],conflagration:["k-aa-n f-l-ah g-r-ey1 sh-ah-n","nn"],conflict:["k-aa1-n f-l-ih-k-t","nn vb vbp"],conflicting:["k-ah-n f-l-ih1-k t-ih-ng","vbg jj"],confluence:["k-aa1-n f-l-uw ah-n-s","nn"],conform:["k-ah-n f-ao1-r-m","vb vbp"],conformance:["k-ah-n f-ao1-r m-ah-n-s","nn"],conformational:["k-aa-n f-er m-ey1 sh-ah n-ah-l","jj"],conformist:["k-ah-n f-ao1-r m-ih-s-t","jj nn"],conformity:["k-ah-n f-ao1-r m-ah t-iy","nn"],confound:["k-aa-n f-aw1-n-d","vb"],confront:["k-ah-n f-r-ah1-n-t","vb vbp"],confrontation:["k-aa-n f-r-ah-n t-ey1 sh-ah-n","nn"],confrontational:["k-aa-n f-r-ah-n t-ey1 sh-ah n-ah-l","jj"],confuse:["k-ah-n f-y-uw1-z","vb vbp"],confused:["k-ah-n f-y-uw1-z-d","vbn jj vbd"],confusing:["k-ah-n f-y-uw1 z-ih-ng","jj vbg"],confusion:["k-ah-n f-y-uw1 zh-ah-n","nn"],congeal:["k-ah-n jh-iy1-l","vb"],congenial:["k-ah-n jh-iy1 n-y-ah-l","jj"],congeniality:["k-ah-n jh-iy n-iy ae1 l-ah t-iy","nn"],congenital:["k-ah-n jh-eh1 n-ah t-ah-l","jj"],congest:["k-ah-n-jh-eh1-s-t","vb"],congested:["k-ah-n jh-eh1 s-t-ah-d","jj vbn"],congestion:["k-ah-n jh-eh1-s ch-ah-n","nn"],congestive:["k-ah-n jh-eh1 s-t-ih-v","jj"],conglomerate:["k-ah-n g-l-aa1 m-er ah-t","nn jj"],congratulate:["k-ah-n g-r-ae1 ch-ah l-ey-t","vbp vb"],congratulating:["k-ah-n g-r-ae1 ch-ah l-ey t-ih-ng","nn"],congratulation:["k-ah-n g-r-ae ch-ah l-ey1 sh-ah-n","nn"],congratulatory:["k-ah-n g-r-ae1 ch-ah l-ah t-ao r-iy","jj"],congregate:["k-aa1-ng g-r-ah g-ey-t","vb"],congregation:["k-aa-ng g-r-ah g-ey1 sh-ah-n","nn"],congregational:["k-aa-ng g-r-ah g-ey1 sh-ah n-ah-l","jj"],congress:["k-aa1-ng g-r-ah-s","nn"],congressman:["k-aa1-ng g-r-ah-s m-ah-n","nn"],congruence:["k-ao1-n g-r-uw ah-n-s","nn"],conjecture:["k-ah-n jh-eh1-k ch-er","nn"],conjunction:["k-ah-n jh-ah1-ng-k sh-ah-n","nn"],conjure:["k-aa1-n jh-er","vb vbp"],connect:["k-ah n-eh1-k-t","vb vbp"],connected:["k-ah n-eh1-k t-ah-d","vbn jj vbd"],connecting:["k-ah n-eh1-k t-ih-ng","vbg jj"],connection:["k-ah n-eh1-k sh-ah-n","nn"],connective:["k-ah n-eh1-k t-ih-v","jj"],connector:["k-ah n-eh1-k t-er","nn"],conned:["k-aa1-n-d","vbn"],connivance:["k-ah n-ay1 v-ah-n-s","nn"],connoisseur:["k-aa n-ah s-er1","nn"],connotation:["k-aa n-ah t-ey1 sh-ah-n","nn"],connote:["k-ah n-ow1-t","vb vbp"],conquer:["k-aa1-ng k-er","vb vbp"],conqueror:["k-aa1-ng k-er er","nn"],conquest:["k-aa1-ng k-w-eh-s-t","nn"],conscience:["k-aa1-n sh-ah-n-s","nn"],conscientious:["k-aa-n sh-iy eh1-n sh-ah-s","jj"],conscious:["k-aa1-n sh-ah-s","jj nn"],consciously:["k-aa1-n sh-ah-s l-iy","rb"],consciousness:["k-aa1-n sh-ah-s n-ah-s","nn"],conscript:["k-aa1-n s-k-r-ih-p-t","nn jj vb"],conscription:["k-ah-n s-k-r-ih1-p sh-ah-n","nn"],consecutive:["k-ah-n s-eh1 k-y-ah t-ih-v","jj"],consensual:["k-ah-n s-eh1-n s-uw ah-l","jj"],consensus:["k-ah-n s-eh1-n s-ah-s","nn"],consent:["k-ah-n s-eh1-n-t","nn vb"],consenting:["k-ah-n s-eh1-n t-ih-ng","vbg jj"],consequence:["k-aa1-n s-ah k-w-ah-n-s","nn"],consequent:["k-aa1-n s-ah k-w-ah-n-t","jj"],consequential:["k-aa-n s-ah k-w-eh1-n ch-ah-l","jj"],consequently:["k-aa1-n s-ah k-w-ah-n-t l-iy","rb"],conservancy:["k-ah-n s-er1 v-ah-n s-iy","nn"],conservation:["k-aa-n s-er v-ey1 sh-ah-n","nn"],conservationist:["k-aa-n s-er v-ey1 sh-ah-n ah-s-t","nn"],conservatism:["k-ah-n s-er1 v-ah t-ih z-ah-m","nn"],conservative:["k-ah-n s-er1 v-ah t-ih-v","jj nn"],conservatively:["k-ah-n s-er1 v-ah t-ih-v l-iy","rb"],conservator:["k-ah-n s-er1 v-ah t-er","nn"],conservatorship:["k-ah-n s-er1 v-ah t-er sh-ih-p","nn"],conservatory:["k-ah-n s-er1 v-ah t-ao r-iy","nn"],conserve:["k-ah-n s-er1-v","vb"],consider:["k-ah-n s-ih1 d-er","vb vbp"],considerable:["k-ah-n s-ih1 d-er ah b-ah-l","jj"],considerably:["k-ah-n s-ih1 d-er ah b-l-iy","rb"],considerate:["k-ah-n s-ih1 d-er ah-t","jj"],consideration:["k-ah-n s-ih d-er ey1 sh-ah-n","nn"],considered:["k-ah-n s-ih1 d-er-d","vbn vbd jj"],consign:["k-ah-n s-ay1-n","vb"],consist:["k-ah-n s-ih1-s-t","vb vbp"],consistence:["k-ah-n s-ih1 s-t-ah-n-s","nn"],consistency:["k-ah-n s-ih1 s-t-ah-n s-iy","nn"],consistent:["k-ah-n s-ih1 s-t-ah-n-t","jj"],consistently:["k-ah-n s-ih1 s-t-ah-n-t l-iy","rb"],consolation:["k-aa-n s-ah l-ey1 sh-ah-n","nn"],console:["k-aa1-n s-ow-l","vb vbp"],consolidate:["k-ah-n s-aa1 l-ih d-ey-t","vb vbp"],consolidated:["k-ah-n s-aa1 l-ah d-ey t-ah-d","jj vbd vbn"],consolidating:["k-ah-n s-aa1 l-ah d-ey t-ih-ng","vbg jj"],consolidation:["k-ah-n s-aa l-ah d-ey1 sh-ah-n","nn"],consonant:["k-aa1-n s-ah n-ah-n-t","jj nn"],consonantal:["k-aa-n s-ah n-aa1-n t-ah-l","jj"],consort:["k-ah-n-s-ao1-r-t","vb"],consortium:["k-ah-n s-ao1-r sh-iy ah-m","nn"],conspicuous:["k-ah-n s-p-ih1 k-y-uw ah-s","jj"],conspicuously:["k-ah-n s-p-ih1 k-y-uw ah-s l-iy","rb"],conspiracy:["k-ah-n s-p-ih1 r-ah s-iy","nn"],conspirator:["k-ah-n s-p-ih1 r-ah t-er","nn"],conspiratorial:["k-ah-n s-p-ih r-ah t-ao1 r-iy ah-l","jj"],conspire:["k-ah-n s-p-ay1 er","vbp vb"],constable:["k-aa1-n s-t-ah b-ah-l","nn"],constancy:["k-aa1-n s-t-ah-n s-iy","nn"],constant:["k-aa1-n s-t-ah-n-t","jj nn rb"],constantly:["k-aa1-n s-t-ah-n-t l-iy","rb"],constellation:["k-aa-n s-t-ah l-ey1 sh-ah-n","nn"],consternation:["k-aa-n s-t-er n-ey1 sh-ah-n","nn"],constipation:["k-aa-n s-t-ah p-ey1 sh-ah-n","nn"],constituency:["k-ah-n s-t-ih1 ch-uw ah-n s-iy","nn"],constituent:["k-ah-n s-t-ih1 ch-uw ah-n-t","nn jj"],constitute:["k-aa1-n s-t-ah t-uw-t","vbp vb"],constitution:["k-aa-n s-t-ah t-uw1 sh-ah-n","nn"],constitutional:["k-aa-n s-t-ah t-uw1 sh-ah n-ah-l","jj"],constitutionality:["k-aa-n s-t-ih t-uw sh-ah n-ae1 l-ih t-iy","nn"],constitutionally:["k-aa-n s-t-ah t-uw1 sh-ah-n ah-l iy","rb"],constrain:["k-ah-n s-t-r-ey1-n","vb"],constrained:["k-ah-n s-t-r-ey1-n-d","vbn jj"],constraint:["k-ah-n s-t-r-ey1-n-t","nn"],constrict:["k-ah-n-s-t-r-ih1-k-t","vb"],constricted:["k-ah-n s-t-r-ih1-k t-ah-d","jj vbd vbn"],constriction:["k-ah-n s-t-r-ih1-k sh-ah-n","nn"],constrictor:["k-ah-n s-t-r-ih1-k t-er","nn"],construct:["k-ah-n s-t-r-ah1-k-t","vb vbp"],construction:["k-ah-n s-t-r-ah1-k sh-ah-n","nn"],constructive:["k-ah-n s-t-r-ah1-k t-ih-v","jj"],constructively:["k-ah-n s-t-r-ah1-k t-ih-v l-iy","rb"],construe:["k-ah-n s-t-r-uw1","vb vbp"],consul:["k-aa1-n s-ah-l","nn"],consular:["k-aa1-n s-ah l-er","jj"],consulate:["k-aa1-n s-ah l-ah-t","nn"],consult:["k-ah-n s-ah1-l-t","vb"],consultancy:["k-ah-n s-ah1-l t-ah-n s-iy","nn"],consultant:["k-ah-n s-ah1-l t-ah-n-t","nn"],consultation:["k-aa-n s-ah-l t-ey1 sh-ah-n","nn"],consultative:["k-ah-n s-ah1-l t-ah t-ih-v","jj"],consulting:["k-ah-n s-ah1-l t-ih-ng","jj vbg"],consume:["k-ah-n s-uw1-m","vbp vb"],consumer:["k-ah-n s-uw1 m-er","nn"],consumerism:["k-ah-n s-uw1 m-er ih z-ah-m","nn"],consummate:["k-aa1-n s-ah m-ah-t","jj vb"],consummation:["k-aa-n s-ah m-ey1 sh-ah-n","nn"],consumption:["k-ah-n s-ah1-m-p sh-ah-n","nn"],contact:["k-aa1-n t-ae-k-t","nn jj vb"],contagion:["k-ah-n t-ey1 jh-ah-n","nn"],contagious:["k-ah-n t-ey1 jh-ah-s","jj"],contain:["k-ah-n t-ey1-n","vb vbp"],contained:["k-ah-n t-ey1-n-d","vbd vbn jj"],container:["k-ah-n t-ey1 n-er","nn"],containerboard:["k-ah-n t-ey1 n-er b-ao-r-d","nn"],containment:["k-ah-n t-ey1-n m-ah-n-t","nn"],contaminant:["k-ah-n t-ae1 m-ah n-ah-n-t","nn"],contaminate:["k-ah-n t-ae1 m-ah n-ey-t","vb"],contaminated:["k-ah-n t-ae1 m-ah n-ey t-ah-d","vbn vbd jj"],contamination:["k-ah-n t-ae m-ah n-ey1 sh-ah-n","nn"],contemplate:["k-aa1-n t-ah-m p-l-ey-t","vb vbp"],contemplated:["k-aa1-n t-ah-m p-l-ey t-ih-d","vbn jj vbd"],contemplation:["k-aa-n t-ah-m p-l-ey1 sh-ah-n","nn"],contemplative:["k-ah-n t-eh1-m p-l-ah t-ih-v","jj"],contemporary:["k-ah-n t-eh1-m p-er eh r-iy","jj nn"],contempt:["k-ah-n t-eh1-m-p-t","nn"],contemptible:["k-ah-n t-eh1-m-p t-ah b-ah-l","jj"],contemptuous:["k-ah-n t-eh1-m-p ch-uw ah-s","jj"],contemptuously:["k-ah-n t-eh1-m-p ch-w-ah-s l-iy","rb"],contend:["k-ah-n t-eh1-n-d","vbp vb"],contender:["k-ah-n t-eh1-n d-er","nn"],content:["k-aa1-n t-eh-n-t","nn jj vb"],contented:["k-ah-n t-eh1-n t-ah-d","vbn jj"],contentedly:["k-ah-n t-eh1-n t-ah-d l-iy","rb"],contention:["k-ah-n t-eh1-n sh-ah-n","nn"],contentious:["k-ah-n t-eh1-n sh-ah-s","jj"],contentment:["k-ah-n t-eh1-n-t m-ah-n-t","nn"],contest:["k-aa1-n t-eh-s-t","nn vb"],contestant:["k-ah-n t-eh1 s-t-ah-n-t","nn"],contested:["k-ah-n t-eh1 s-t-ah-d","vbn jj vbd"],context:["k-aa1-n t-eh-k-s-t","nn"],contiguous:["k-ah-n t-ih1 g-y-uw ah-s","jj"],continent:["k-aa1-n t-ah n-ah-n-t","nn"],continental:["k-aa-n t-ah n-eh1-n t-ah-l","jj"],continentally:["k-aa-n t-ah n-eh1-n t-ah l-iy","rb"],contingency:["k-ah-n t-ih1-n jh-ah-n s-iy","nn"],contingent:["k-ah-n t-ih1-n jh-ah-n-t","jj nn"],continual:["k-ah-n t-ih1 n-y-uw ah-l","jj"],continually:["k-ah-n t-ih1 n-y-uw ah l-iy","rb"],continuance:["k-ah-n t-ih1 n-y-uw ah-n-s","nn"],continuation:["k-ah-n t-ih n-y-uw ey1 sh-ah-n","nn"],continue:["k-ah-n t-ih1 n-y-uw","vb vbp"],continued:["k-ah-n t-ih1 n-y-uw-d","vbd jj vbn"],continuing:["k-ah-n t-ih1 n-y-uw ih-ng","vbg jj"],continuity:["k-aa-n t-ah n-uw1 ah t-iy","nn"],continuous:["k-ah-n t-ih1 n-y-uw ah-s","jj"],continuously:["k-ah-n t-ih1 n-y-uw ah-s l-iy","rb"],continuum:["k-ah-n t-ih1 n-y-uw ah-m","nn"],contorted:["k-ah-n t-ao1-r t-ah-d","jj"],contortion:["k-ah-n t-ao1-r sh-ah-n","nn"],contour:["k-aa1-n t-uh-r","nn"],contraband:["k-aa1-n t-r-ah b-ae-n-d","jj nn"],contraception:["k-aa-n t-r-ah s-eh1-p sh-ah-n","nn"],contraceptive:["k-aa-n t-r-ah s-eh1-p t-ih-v","jj nn"],contract:["k-aa1-n t-r-ae-k-t","nn vb vbp"],contraction:["k-ah-n t-r-ae1-k sh-ah-n","nn"],contractor:["k-aa1-n t-r-ae-k t-er","nn"],contractual:["k-ah-n t-r-ae1-k ch-uw ah-l","jj"],contractually:["k-ah-n t-r-ae1-k ch-uw ah l-iy","rb"],contradict:["k-aa-n t-r-ah d-ih1-k-t","vb vbp"],contradiction:["k-aa-n t-r-ah d-ih1-k sh-ah-n","nn"],contradictorily:["k-aa-n t-r-ah d-ih1-k t-er ah l-iy","rb"],contradictory:["k-aa-n t-r-ah d-ih1-k t-er iy","jj nn"],contraption:["k-ah-n t-r-ae1-p sh-ah-n","nn"],contrarian:["k-aa-n t-r-eh1 r-iy ah-n","jj nn"],contrary:["k-aa1-n t-r-eh r-iy","jj nn"],contrast:["k-aa1-n t-r-ae-s-t","nn vb vbp"],contrasting:["k-ah-n t-r-ae1 s-t-ih-ng","vbg jj"],contretemps:["k-aa1-n t-r-ah t-eh-m-p-s","nn"],contribute:["k-ah-n t-r-ih1 b-y-uw-t","vb vbp"],contributing:["k-ah-n t-r-ih1 b-y-uw t-ih-ng","vbg jj"],contribution:["k-aa-n t-r-ah b-y-uw1 sh-ah-n","nn"],contributor:["k-ah-n t-r-ih1 b-y-ah t-er","nn"],contributory:["k-ah-n t-r-ih1 b-y-ah t-ao r-iy","jj"],contrite:["k-ah-n t-r-ay1-t","jj"],contrition:["k-ah-n t-r-ih1 sh-ah-n","nn"],contrivance:["k-ah-n t-r-ay1 v-ah-n-s","nn"],contrive:["k-ah-n t-r-ay1-v","vb"],contrived:["k-ah-n t-r-ay1-v-d","vbn jj"],control:["k-ah-n t-r-ow1-l","nn jj vb vbp"],controllable:["k-ah-n t-r-ow1 l-ah b-ah-l","jj"],controlled:["k-ah-n t-r-ow1-l-d","vbn jj vbd"],controller:["k-ah-n t-r-ow1 l-er","nn"],controlling:["k-ah-n t-r-ow1 l-ih-ng","vbg jj nn"],controversial:["k-aa-n t-r-ah v-er1 sh-ah-l","jj"],controversy:["k-aa1-n t-r-ah v-er s-iy","nn"],conundrum:["k-ah n-ah1-n d-r-ah-m","nn"],convalescence:["k-aa-n v-ah l-eh1 s-ah-n-s","nn"],convene:["k-ah-n v-iy1-n","vb vbp"],convenience:["k-ah-n v-iy1 n-y-ah-n-s","nn"],convenient:["k-ah-n v-iy1 n-y-ah-n-t","jj"],conveniently:["k-ah-n v-iy1 n-y-ah-n-t l-iy","rb"],convent:["k-aa1-n v-ah-n-t","nn"],convention:["k-ah-n v-eh1-n sh-ah-n","nn"],conventional:["k-ah-n v-eh1-n sh-ah n-ah-l","jj"],conventionally:["k-ah-n v-eh1-n sh-ah-n ah l-iy","rb"],conventioneer:["k-ah-n v-eh-n sh-ah n-ih1-r","nn"],converge:["k-ah-n v-er1-jh","vb vbp"],conversant:["k-ah-n v-er1 s-ah-n-t","nn"],conversation:["k-aa-n v-er s-ey1 sh-ah-n","nn"],conversational:["k-aa-n v-er s-ey1 sh-ah n-ah-l","jj"],converse:["k-aa1-n v-er-s","vb nn"],conversely:["k-aa1-n v-er-s l-iy","rb"],conversion:["k-ah-n v-er1 zh-ah-n","nn"],convert:["k-aa1-n v-er-t","vb vbp nn"],converted:["k-ah-n v-er1 t-ih-d","vbn jj vbd"],converter:["k-ah-n v-er1 t-er","nn"],convertibility:["k-aa-n v-er t-ih b-ih1 l-ih t-iy","nn"],convertible:["k-ah-n v-er1 t-ah b-ah-l","jj nn"],convex:["k-ah-n v-eh1-k-s","jj"],convey:["k-ah-n v-ey1","vb vbp"],conveyance:["k-ah-n v-ey1 ah-n-s","nn"],conveyor:["k-ah-n v-ey1 er","nn"],convict:["k-aa1-n v-ih-k-t","nn vb"],conviction:["k-ah-n v-ih1-k sh-ah-n","nn"],convince:["k-ah-n v-ih1-n-s","vb vbp"],convinced:["k-ah-n v-ih1-n-s-t","vbn jj vbd"],convincing:["k-ah-n v-ih1-n s-ih-ng","jj vbg"],convincingly:["k-ah-n v-ih1-n s-ih-ng l-iy","rb"],convivial:["k-ah-n v-ih1 v-iy ah-l","jj"],convocation:["k-aa-n v-ah k-ey1 sh-ah-n","nn"],convolute:["k-aa1-n-v-ah-l-uw-t","vb"],convoluted:["k-aa1-n v-ah l-uw t-ah-d","jj vbn"],convoy:["k-aa1-n v-oy","nn"],convulsion:["k-ah-n v-ah1-l sh-ah-n","nn"],convulsive:["k-ah-n v-ah1-l s-ih-v","jj"],cook:["k-uh1-k","nn vb vbp"],cookbook:["k-uh1-k b-uh-k","nn"],cooker:["k-uh1 k-er","nn"],cookie:["k-uh1 k-iy","nn"],cooking:["k-uh1 k-ih-ng","nn vbg"],cookware:["k-uh1-k w-eh-r","nn"],cool:["k-uw1-l","jj vb vbp"],coolant:["k-uw1 l-ah-n-t","nn"],cooled:["k-uw1-l-d","vbn jj vbd"],cooler:["k-uw1 l-er","jjr nn"],coolest:["k-uw1 l-ah-s-t","jjs"],coolly:["k-uw1 l-iy","rb"],coolness:["k-uw1-l n-ah-s","nn"],coop:["k-uw1-p","nn"],cooperate:["k-ow aa1 p-er ey-t","vb vbp"],cooperation:["k-ow aa p-er ey1 sh-ah-n","nn"],cooperative:["k-ow aa1 p-er ey t-ih-v","jj nn"],cooperatively:["k-ow aa1 p-r-ah t-ih-v l-iy","rb"],coordinate:["k-ow ao1-r d-ah-n ah-t","vb nn vbp"],coordinated:["k-ow ao1-r d-ah n-ey t-ih-d","vbn vbd jj"],coordination:["k-ow ao-r d-ah-n ey1 sh-ah-n","nn"],coordinator:["k-ow ao1-r d-ah-n ey t-er","nn"],cop:["k-aa1-p","nn"],cope:["k-ow1-p","vb nn"],copied:["k-aa1 p-iy-d","vbn vbd"],copier:["k-aa1 p-iy er","nn"],copious:["k-ow1 p-iy ah-s","jj"],copper:["k-aa1 p-er","nn"],coppery:["k-aa1 p-er iy","jj nn"],copra:["k-ow1 p-r-ah","nn"],copy:["k-aa1 p-iy","nn vbp vb"],copycat:["k-aa1 p-iy k-ae-t","nn"],copyright:["k-aa1 p-iy r-ay-t","nn vb"],copywriter:["k-aa1 p-iy r-ay t-er","nn"],coral:["k-ao1 r-ah-l","jj"],cord:["k-ao1-r-d","nn"],corded:["k-ao1-r d-ah-d","vbn jj"],cordial:["k-ao1-r jh-ah-l","jj nn"],cordless:["k-ao1-r-d l-ah-s","jj"],cordon:["k-ao1-r d-ah-n","nn vb"],corduroy:["k-ao1-r d-er oy","nn"],core:["k-ao1-r","nn"],coriander:["k-ao r-iy ae1-n d-er","nn"],corinthian:["k-er ih1-n th-iy ah-n","jj"],cork:["k-ao1-r-k","nn"],corkscrew:["k-ao1-r-k s-k-r-uw","nn"],corn:["k-ao1-r-n","nn"],cornea:["k-ao1-r n-iy ah","nn"],corneal:["k-ao-r n-iy1-l","jj"],corner:["k-ao1-r n-er","nn vb"],cornered:["k-ao1-r n-er-d","vbn vbd jj"],cornerstone:["k-ao1-r n-er s-t-ow-n","nn"],cornfield:["k-ao1-r-n f-iy-l-d","nn"],cornmeal:["k-ao1-r-n m-iy-l","nn"],cornstarch:["k-ao1-r-n s-t-aa-r-ch","nn"],cornucopia:["k-ao-r n-ah k-ow1 p-iy ah","nn"],corny:["k-ao1-r n-iy","jj"],corollary:["k-ao1 r-ah l-eh r-iy","nn"],corona:["k-er ow1 n-ah","nn"],coronary:["k-ao1 r-ah n-eh r-iy","jj"],coroner:["k-ao1 r-ah n-er","nn"],corporal:["k-ao1-r p-er ah-l","nn"],corporate:["k-ao1-r p-er ah-t","jj"],corporatewide:["k-ao1-r p-er ih-t w-ay-d","jj"],corporation:["k-ao-r p-er ey1 sh-ah-n","nn"],corporatist:["k-ao1-r p-er ah t-ih-s-t","nn"],corpse:["k-ao1-r-p-s","nn"],corpus:["k-ao1-r p-ah-s","nn"],corral:["k-er ae1-l","nn vb"],correct:["k-er eh1-k-t","jj vbp vb"],corrected:["k-er eh1-k t-ah-d","vbn vbd jj"],correction:["k-er eh1-k sh-ah-n","nn"],correctional:["k-er eh1-k sh-ah n-ah-l","jj"],corrective:["k-er eh1-k t-ih-v","jj"],correctly:["k-er eh1-k-t l-iy","rb"],correctness:["k-er eh1-k-t n-ah-s","nn"],correlate:["k-ao1 r-ah l-ey-t","vb vbp"],correlated:["k-ao1 r-ah l-ey t-ah-d","jj vbd vbn"],correlation:["k-ao r-ah l-ey1 sh-ah-n","nn"],correspond:["k-ao r-ah s-p-aa1-n-d","vb vbp"],correspondence:["k-ao r-ah s-p-aa1-n d-ah-n-s","nn"],correspondent:["k-ao r-ah s-p-aa1-n d-ah-n-t","nn"],corresponding:["k-ao r-ah s-p-aa1-n d-ih-ng","jj vbg"],correspondingly:["k-ao r-ah s-p-aa1-n d-ih-ng l-iy","rb"],corridor:["k-ao1 r-ah d-er","nn"],corroborate:["k-er aa1 b-er ey-t","vb vbp"],corrode:["k-er ow1-d","vbp vb"],corrosion:["k-er ow1 zh-ah-n","nn"],corrosive:["k-er ow1 s-ih-v","jj"],corrugate:["k-ao1-r-ah-g-ey-t","vb"],corrugated:["k-ao1 r-ah g-ey t-ah-d","jj vbn"],corrupt:["k-er ah1-p-t","jj vb"],corrupting:["k-er ah1-p t-ih-ng","vbg jj nn"],corruption:["k-er ah1-p sh-ah-n","nn"],corsage:["k-ao-r s-aa1-zh","nn"],corset:["k-ao1-r s-ah-t","nn"],cortex:["k-ao1-r t-eh-k-s","nn"],cortisone:["k-ao1-r t-ah z-ow-n","nn"],corvette:["k-ao-r v-eh1-t","nn"],cosmetic:["k-aa-z m-eh1 t-ih-k","jj nn"],cosmetology:["k-aa-z m-ah t-aa1 l-ah jh-iy","nn"],cosmic:["k-aa1-z m-ih-k","jj"],cosmopolitan:["k-aa-z m-ah p-aa1 l-ah t-ah-n","jj"],cosmos:["k-aa1-z m-ow-s","nn"],cost:["k-aa1-s-t","nn vbp vb"],costlier:["k-ao1-s-t l-iy er","jjr"],costliest:["k-ao1-s-t l-iy ih-s-t","jjs"],costly:["k-aa1-s-t l-iy","jj rb"],costume:["k-aa s-t-uw1-m","nn vb"],cot:["k-aa1-t","nn"],coterie:["k-ow1 t-er iy","nn"],cottage:["k-aa1 t-ah-jh","nn"],cotton:["k-aa1 t-ah-n","nn"],cottonmouth:["k-aa1 t-ah-n m-aw-th","nn"],cottonseed:["k-aa1 t-ah-n s-iy-d","nn"],couch:["k-aw1-ch","nn"],cough:["k-aa1-f","nn vb"],could:["k-uh1-d","md"],"couldn't":["k-uh1-d-ah-n-t","md"],council:["k-aw1-n s-ah-l","nn"],councilman:["k-aw1-n s-ah-l m-ah-n","nn"],councilor:["k-aw1-n s-ah-l er","nn"],counsel:["k-aw1-n s-ah-l","nn vb vbp"],counselor:["k-aw1-n s-ah-l er","nn"],count:["k-aw1-n-t","nn vb vbp"],countdown:["k-aw1-n-t d-aw-n","nn"],countenance:["k-aw1-n t-ah n-ah-n-s","nn vb"],counter:["k-aw1-n t-er","nn vb vbp"],counteract:["k-aw1-n t-er ae-k-t","vb"],counterattack:["k-aw1-n t-er ah t-ae-k","nn vb"],counterbalance:["k-aw1-n t-er b-ae l-ah-n-s","vb nn"],countercultural:["k-aw-n t-er k-ah1-l ch-er ah-l","jj"],counterculture:["k-aw1-n t-er k-ah-l ch-er","jj"],counterfeit:["k-aw1-n t-er f-ih-t","jj"],counterforce:["k-aw1-n t-er f-ao-r-s","nn"],countermeasure:["k-aw1-n t-er m-eh zh-er","nn"],counteroffer:["k-aw1-n t-er ao f-er","nn"],counterpart:["k-aw1-n t-er p-aa-r-t","nn jj"],counterpoint:["k-aw1-n t-er p-oy-n-t","nn"],countersue:["k-aw1-n-t-er-s-uw","vb"],countersuit:["k-aw1-n t-er s-uw-t","nn"],countertenor:["k-aw1-n t-er t-eh n-er","nn"],counterterrorism:["k-aw1-n t-er t-eh r-er ih z-ah-m","nn"],countertop:["k-aw1-n t-er t-aa-p","nn"],counterweight:["k-aw1-n t-er w-ey-t","nn"],countess:["k-aw1-n t-ah-s","nn"],countless:["k-aw1-n-t l-ah-s","jj"],country:["k-ah1-n t-r-iy","nn"],countryman:["k-ah1-n t-r-iy m-ah-n","nn"],countryside:["k-ah1-n t-r-iy s-ay-d","nn"],county:["k-aw1-n t-iy","nn"],coup:["k-uw1","nn"],coupe:["k-uw1-p","nn"],couple:["k-ah1 p-ah-l","nn jj vb"],coupler:["k-ah1-p l-er","nn"],coupon:["k-uw1 p-ao-n","nn"],couponing:["k-uw1 p-aa n-ih-ng","nn"],courage:["k-er1 ah-jh","nn"],courageous:["k-er ey1 jh-ah-s","jj"],courageously:["k-er ey1 jh-ah-s l-iy","rb"],courier:["k-er1 iy er","nn"],course:["k-ao1-r-s","nn rb vb"],court:["k-ao1-r-t","nn vbp vb"],courteous:["k-er1 t-iy ah-s","jj"],courtesy:["k-er1 t-ah s-iy","nn"],courthouse:["k-ao1-r-t hh-aw-s","nn"],courtier:["k-ao1-r t-iy er","nn"],courtly:["k-ao1-r-t l-iy","jj"],courtroom:["k-ao1-r-t r-uw-m","nn"],courtship:["k-ao1-r ch-ih-p","nn"],courtyard:["k-ao1-r-t y-aa-r-d","nn"],cousin:["k-ah1 z-ah-n","nn"],couture:["k-uw t-uh1-r","nn"],cove:["k-ow1-v","nn"],covenant:["k-ah1 v-ah n-ah-n-t","nn vb"],cover:["k-ah1 v-er","vb nn vbp"],coverage:["k-ah1 v-er ah-jh","nn"],covered:["k-ah1 v-er-d","vbn jj vbd"],covert:["k-ow1 v-er-t","jj"],covertly:["k-ah1 v-er-t l-iy","rb"],coverup:["k-ah1 v-er ah-p","nn"],covet:["k-ah1 v-ah-t","vb vbp"],coveted:["k-ah1 v-ah t-ih-d","vbn jj"],cow:["k-aw1","nn vb"],coward:["k-aw1 er-d","nn"],cowardice:["k-aw1 er d-ah-s","nn"],cowardly:["k-aw1 er-d l-iy","jj"],cowboy:["k-aw1 b-oy","nn"],cower:["k-aw1 er","vbp vb"],cowling:["k-aw1 l-ih-ng","nn"],cowman:["k-aw1 m-ah-n","nn"],coworker:["k-ow1 w-er1 k-er","nn"],coy:["k-oy1","jj"],coyly:["k-oy1 l-iy","rb"],coyote:["k-ay ow1 t-iy","nn"],coziness:["k-ow1 z-iy n-ah-s","nn"],cozy:["k-ow1 z-iy","jj rb"],crab:["k-r-ae1-b","nn"],crabbed:["k-r-ae1-b-d","jj"],crabby:["k-r-ae1 b-iy","jj"],crabmeat:["k-r-ae1-b m-iy-t","nn"],crack:["k-r-ae1-k","nn jj vb vbp"],crackdown:["k-r-ae1-k d-aw-n","nn"],cracked:["k-r-ae1-k-t","vbd vbn jj"],cracker:["k-r-ae1 k-er","nn"],cracking:["k-r-ae1 k-ih-ng","vbg jj nn"],crackle:["k-r-ae1 k-ah-l","nn vb vbp"],crackling:["k-r-ae1 k-l-ih-ng","nn"],crackpot:["k-r-ae1-k p-aa-t","nn"],cradle:["k-r-ey1 d-ah-l","nn vb"],craft:["k-r-ae1-f-t","nn vb"],craftsman:["k-r-ae1-f-t-s m-ah-n","nn"],craftsmanship:["k-r-ae1-f-t-s m-ah-n sh-ih-p","nn"],crafty:["k-r-ae1-f t-iy","jj"],craggy:["k-r-ae1 g-iy","jj"],cram:["k-r-ae1-m","vb"],cramp:["k-r-ae1-m-p","nn"],cramped:["k-r-ae1-m-p-t","jj"],cranberry:["k-r-ae1-n b-eh r-iy","nn"],crane:["k-r-ey1-n","nn vb"],crank:["k-r-ae1-ng-k","vb nn"],crankshaft:["k-r-ae1-ng-k sh-ae-f-t","nn"],cranky:["k-r-ae1-ng k-iy","jj"],cranny:["k-r-ae1 n-iy","nn"],crap:["k-r-ae1-p","nn uh"],crapshoot:["k-r-ae1-p sh-uw-t","nn vb"],crash:["k-r-ae1-sh","nn vbp jj vb"],crashed:["k-r-ae1-sh-t","vbd jj vbn"],crass:["k-r-ae1-s","jj"],crate:["k-r-ey1-t","nn"],crater:["k-r-ey1 t-er","nn vb"],crave:["k-r-ey1-v","vbp vb"],craven:["k-r-ey1 v-ah-n","jj"],craving:["k-r-ey1 v-ih-ng","nn vbg"],crawl:["k-r-ao1-l","vb nn"],crayon:["k-r-ey1 aa-n","nn"],craze:["k-r-ey1-z","nn vb"],crazed:["k-r-ey1-z-d","jj vbd"],crazily:["k-r-ey1 z-ah l-iy","rb"],craziness:["k-r-ey1 z-iy n-ah-s","nn"],crazy:["k-r-ey1 z-iy","jj"],creak:["k-r-iy1-k","vb"],cream:["k-r-iy1-m","nn jj vb"],creamer:["k-r-iy1 m-er","nn"],creamier:["k-r-iy1 m-iy er","jjr"],creamy:["k-r-iy1 m-iy","jj"],crease:["k-r-iy1-s","nn"],create:["k-r-iy ey1-t","vb vbp"],created:["k-r-iy ey1 t-ah-d","vbn vbd jj"],creation:["k-r-iy ey1 sh-ah-n","nn"],creationism:["k-r-iy ey1 sh-ah-n ih z-ah-m","nn"],creative:["k-r-iy ey1 t-ih-v","jj"],creatively:["k-r-iy ey1 t-ih-v l-iy","rb"],creativeness:["k-r-iy ey1 t-ih-v n-ah-s","nn"],creativity:["k-r-iy ey t-ih1 v-ah t-iy","nn"],creator:["k-r-iy ey1 t-er","nn"],creature:["k-r-iy1 ch-er","nn"],credence:["k-r-iy1 d-ah-n-s","nn"],credential:["k-r-ih d-eh1-n ch-ah-l","nn"],credibility:["k-r-eh d-ah b-ih1 l-ih t-iy","nn"],credible:["k-r-eh1 d-ah b-ah-l","jj"],credibly:["k-r-eh1 d-ah b-l-iy","rb"],credit:["k-r-eh1 d-ah-t","nn vb vbp"],creditable:["k-r-eh1 d-ah t-ah b-ah-l","jj"],creditably:["k-r-eh1 d-ah t-ah b-l-iy","rb"],creditor:["k-r-eh1 d-ah t-er","nn"],creditworthy:["k-r-eh1 d-ih-t w-er dh-iy","nn"],credo:["k-r-ey1 d-ow","nn"],credulity:["k-r-ih d-uw1 l-ah t-iy","nn"],creed:["k-r-iy1-d","nn"],creek:["k-r-iy1-k","nn"],creep:["k-r-iy1-p","vb vbp jj nn"],creeping:["k-r-iy1 p-ih-ng","vbg jj"],creepy:["k-r-iy1 p-iy","jj"],cremate:["k-r-iy1 m-ey-t","vb"],cremation:["k-r-iy m-ey1 sh-ah-n","nn"],creole:["k-r-iy1 ow-l","nn"],crepe:["k-r-ey1-p","jj"],crept:["k-r-eh1-p-t","vbd vbn"],crescendo:["k-r-ih sh-eh1-n d-ow","nn"],crescent:["k-r-eh1 s-ah-n-t","nn"],crest:["k-r-eh1-s-t","nn vb"],crested:["k-r-eh1 s-t-ah-d","jj"],crestfallen:["k-r-eh1-s-t f-ao l-ah-n","jj"],crevice:["k-r-eh1 v-ah-s","nn"],crew:["k-r-uw1","nn"],crewel:["k-r-uw1 ah-l","nn"],crib:["k-r-ih1-b","nn jj"],cricket:["k-r-ih1 k-ah-t","nn"],cried:["k-r-ay1-d","vbd vbn"],crime:["k-r-ay1-m","nn"],criminal:["k-r-ih1 m-ah n-ah-l","jj nn"],criminality:["k-r-ih m-ah n-ae1 l-ih t-iy","nn"],criminalize:["k-r-ih1 m-ah n-ah l-ay-z","vb"],criminally:["k-r-ih1 m-ah n-ah l-iy","rb"],criminologist:["k-r-ih m-ih n-aa1 l-ah jh-ih-s-t","nn"],criminology:["k-r-ih m-ih n-aa1 l-ah jh-iy","nn"],crimp:["k-r-ih1-m-p","vb nn"],crimped:["k-r-ih1-m-p-t","jj vbn"],crimson:["k-r-ih1-m z-ah-n","jj nn"],cringe:["k-r-ih1-n-jh","vbp vb"],cripple:["k-r-ih1 p-ah-l","vb nn vbp"],crippled:["k-r-ih1 p-ah-l-d","vbn jj vbd"],crippling:["k-r-ih1 p-ah-l ih-ng","jj vbg"],crisis:["k-r-ay1 s-ah-s","nn"],crisp:["k-r-ih1-s-p","jj nn"],crisper:["k-r-ih1 s-p-er","nn"],crisply:["k-r-ih1-s-p l-iy","rb"],crispness:["k-r-ih1-s-p n-ah-s","nn"],crispy:["k-r-ih1 s-p-iy","jj"],crisscross:["k-r-ih1-s k-r-ao-s","vb vbp"],criterion:["k-r-ay t-ih1 r-iy ah-n","nn"],critic:["k-r-ih1 t-ih-k","nn"],critical:["k-r-ih1 t-ih k-ah-l","jj"],criticality:["k-r-ih t-ah k-ae1 l-ah t-iy","nn"],critically:["k-r-ih1 t-ih k-ah l-iy","rb"],criticism:["k-r-ih1 t-ih s-ih z-ah-m","nn"],criticize:["k-r-ih1 t-ih s-ay-z","vb vbp"],critique:["k-r-ah t-iy1-k","nn"],critter:["k-r-ih1 t-er","nn"],croak:["k-r-ow1-k","nn vb vbp"],croaking:["k-r-ow1 k-ih-ng","nn"],crochet:["k-r-ow sh-ey1","vb"],crocodile:["k-r-aa1 k-ah d-ay-l","nn"],croissant:["k-w-aa s-aa1-n-t","nn"],crone:["k-r-ow1-n","nn"],crony:["k-r-ow1 n-iy","nn"],cronyism:["k-r-ow1 n-iy ih z-ah-m","nn"],crook:["k-r-uh1-k","nn"],crooked:["k-r-uh1 k-ah-d","jj"],croon:["k-r-uw1-n","vb"],crooner:["k-r-uw1 n-er","nn"],crop:["k-r-aa1-p","nn rp vb vbp"],cross:["k-r-ao1-s","vb jj nn rb vbp"],crossborder:["k-r-ao1-s b-ao-r d-er","jj"],crosscurrent:["k-r-ao1-s k-er ah-n-t","nn"],crossfire:["k-r-ao1-s f-ay-r","nn"],crossover:["k-r-ao1-s ow v-er","nn"],crossroads:["k-r-ao1-s r-ow-d-z","nn"],crosswise:["k-r-ao1-s w-ay-z","rb"],crotch:["k-r-aa1-ch","nn"],crotchety:["k-r-aa1 ch-ah t-iy","jj"],crouch:["k-r-aw1-ch","nn vb"],crow:["k-r-ow1","nn vb"],crowd:["k-r-aw1-d","nn vbp vb"],crowded:["k-r-aw1 d-ah-d","vbn vbd jj"],crown:["k-r-aw1-n","nn vb"],crowning:["k-r-aw1 n-ih-ng","jj vbg"],crucial:["k-r-uw1 sh-ah-l","jj"],crucially:["k-r-uw1 sh-ah l-l-iy","rb"],crucible:["k-r-uw1 s-ah b-ah-l","nn"],crucified:["k-r-uw1 s-ah f-ay-d","vbd vbn"],crucifix:["k-r-uw1 s-ah f-ih-k-s","nn"],crucifixion:["k-r-uw s-ih f-ih1-k sh-ah-n","nn"],crucify:["k-r-uw1-s-ah-f-ay","vb"],crude:["k-r-uw1-d","nn jj"],crudely:["k-r-uw1-d l-iy","rb"],cruel:["k-r-uw1 ah-l","jj"],cruelest:["k-r-uw1 l-ah-s-t","jjs"],cruelly:["k-r-uw1 l-iy","rb"],cruelty:["k-r-uw1-l t-iy","nn"],cruise:["k-r-uw1-z","nn vb vbp"],cruiser:["k-r-uw1 z-er","nn"],crumble:["k-r-ah1-m b-ah-l","vb"],crumbled:["k-r-ah1-m b-ah-l-d","vbd vbn jj"],crumbling:["k-r-ah1-m b-ah-l ih-ng","vbg jj"],crummy:["k-r-ah1 m-iy","jj"],crumple:["k-r-ah1-m-p-ah-l","vb"],crumpled:["k-r-ah1-m p-ah-l-d","jj vbd vbn"],crunch:["k-r-ah1-n-ch","nn vb"],crusade:["k-r-uw s-ey1-d","nn vb"],crusader:["k-r-uw s-ey1 d-er","nn"],crush:["k-r-ah1-sh","nn vb"],crushed:["k-r-ah1-sh-t","vbn jj vbd"],crusher:["k-r-ah1 sh-er","nn"],crushing:["k-r-ah1 sh-ih-ng","vbg jj nn"],crust:["k-r-ah1-s-t","nn"],crusty:["k-r-ah1 s-t-iy","jj"],crutch:["k-r-ah1-ch","nn"],crux:["k-r-ah1-k-s","nn"],cry:["k-r-ay1","nn vb vbp"],crypt:["k-r-ih1-p-t","nn"],cryptic:["k-r-ih1-p t-ih-k","jj"],crystal:["k-r-ih1 s-t-ah-l","nn jj"],crystalline:["k-r-ih1 s-t-ah l-ay-n","jj"],crystallize:["k-r-ih1 s-t-ah l-ay-z","vb"],crystallography:["k-r-ih s-t-ah l-aa1 g-r-ah f-iy","nn"],cub:["k-ah1-b","nn"],cubbyhole:["k-ah1 b-iy hh-ow-l","nn"],cube:["k-y-uw1-b","nn"],cubic:["k-y-uw1 b-ih-k","jj"],cubism:["k-y-uw1 b-ih z-ah-m","nn"],cubist:["k-y-uw1 b-ih-s-t","jj"],cuckoo:["k-ah1 k-uw","nn"],cucumber:["k-y-uw1 k-ah-m b-er","nn"],cuddle:["k-ah1-d-ah-l","vb"],cuddly:["k-ah1-d l-iy","jj"],cudgel:["k-ah1 jh-ah-l","nn"],cue:["k-y-uw1","nn vb"],cuff:["k-ah1-f","nn vb"],cuisine:["k-w-ih z-iy1-n","nn"],cul:["k-ah1-l","nn"],culinary:["k-y-uw1 l-ih n-eh r-iy","jj"],cull:["k-ah1-l","vb vbp"],culminate:["k-ah1-l m-ih n-ey-t","vb vbp"],culmination:["k-ah-l m-ah n-ey1 sh-ah-n","nn"],culpable:["k-ah1-l p-ah b-ah-l","jj"],culprit:["k-ah1-l p-r-ih-t","nn"],cult:["k-ah1-l-t","nn"],cultist:["k-ah1-l t-ah-s-t","nn"],cultivate:["k-ah1-l t-ah v-ey-t","vb"],cultivated:["k-ah1-l t-ah v-ey t-ah-d","vbn jj vbd"],cultivation:["k-ah-l t-ih v-ey1 sh-ah-n","nn"],cultural:["k-ah1-l ch-er ah-l","jj"],culturally:["k-ah1-l ch-er ah l-iy","rb"],culture:["k-ah1-l ch-er","nn vb"],cultured:["k-ah1-l ch-er-d","jj vbn"],cumbersome:["k-ah1-m b-er s-ah-m","jj"],cumulative:["k-y-uw1 m-y-ah l-ah t-ih-v","jj"],cumulatively:["k-y-uw1 m-y-ah l-ah t-ih-v l-iy","rb"],cunning:["k-ah1 n-ih-ng","jj nn"],cup:["k-ah1-p","nn vb"],cupboard:["k-ah1 b-er-d","nn"],cupid:["k-y-uw1 p-ih-d","nn"],curative:["k-y-uh1 r-ah t-ih-v","jj"],curator:["k-y-uh r-ey1 t-er","nn"],curb:["k-er1-b","vb nn"],curbside:["k-er1-b s-ay-d","nn jj"],curd:["k-er1-d","nn"],cure:["k-y-uh1-r","nn vbp vb"],curfew:["k-er1 f-y-uw","nn"],curiosity:["k-y-uh r-iy aa1 s-ah t-iy","nn"],curious:["k-y-uh1 r-iy ah-s","jj"],curiously:["k-y-uh1 r-iy ah-s l-iy","rb"],curl:["k-er1-l","vb vbp"],curly:["k-er1 l-iy","jj"],currency:["k-er1 ah-n s-iy","nn"],current:["k-er1 ah-n-t","jj nn"],currently:["k-er1 ah-n-t l-iy","rb jj"],curricular:["k-er ih1 k-y-ah l-er","jj"],curriculum:["k-er ih1 k-y-ah l-ah-m","nn"],curry:["k-ah1 r-iy","vb nn"],curse:["k-er1-s","nn vb"],cursory:["k-er1 s-er iy","jj"],curt:["k-er1-t","jj"],curtail:["k-er t-ey1-l","vb vbp"],curtailment:["k-er t-ey1-l m-ah-n-t","nn"],curtain:["k-er1 t-ah-n","nn"],curtly:["k-er1-t l-iy","rb"],curve:["k-er1-v","nn vb"],curved:["k-er1-v-d","jj vbn"],curvy:["k-er1 v-iy","jj"],cushion:["k-uh1 sh-ah-n","nn vb"],cusp:["k-ah1-s-p","nn"],custodial:["k-ah s-t-ow1 d-iy ah-l","jj"],custodian:["k-ah s-t-ow1 d-iy ah-n","nn"],custody:["k-ah1 s-t-ah d-iy","nn"],custom:["k-ah1 s-t-ah-m","nn jj rb"],customarily:["k-ah s-t-ah m-eh1 r-ah l-iy","rb"],customary:["k-ah1 s-t-ah m-eh r-iy","jj"],customer:["k-ah1 s-t-ah m-er","nn"],customize:["k-ah1-s-t-ah-m-ay-z","vb"],customized:["k-ah1 s-t-ah m-ay-z-d","vbn jj"],cut:["k-ah1-t","vb vbd vbn vbp jj nn"],cutback:["k-ah1-t b-ae-k","nn"],cute:["k-y-uw1-t","jj"],cuteness:["k-y-uw1-t n-ah-s","nn"],cutlass:["k-ah1-t l-ah-s","nn"],cutlery:["k-ah1-t l-er iy","nn"],cutoff:["k-ah1 t-ao-f","nn jj"],cutout:["k-ah1-t aw-t","nn"],cutter:["k-ah1 t-er","nn"],cutthroat:["k-ah1-t th-r-ow-t","jj"],cutting:["k-ah1 t-ih-ng","vbg jj"],cyanide:["s-ay1 ah n-ay-d","nn"],cycle:["s-ay1 k-ah-l","nn vb"],cyclical:["s-ay1 k-l-ih k-ah-l","jj"],cyclicality:["s-ih k-l-ih k-ae1 l-ih t-iy","nn"],cyclist:["s-ay1 k-ah l-ih-s-t","nn"],cylinder:["s-ih1 l-ah-n d-er","nn"],cylindrical:["s-ah l-ih1-n d-r-ih k-ah-l","jj"],cynic:["s-ih1 n-ih-k","nn jj"],cynical:["s-ih1 n-ih k-ah-l","jj"],cynically:["s-ih1 n-ih k-ah l-iy","rb"],cynicism:["s-ih1 n-ih s-ih z-ah-m","nn"],cypress:["s-ay1 p-r-ah-s","nn"],cyst:["s-ih1-s-t","nn"],cystic:["s-ih1 s-t-ih-k","jj"],cytoplasm:["s-ay1 t-ah p-l-ae z-ah-m","nn"],czar:["z-aa1-r","nn"],dabble:["d-ae1 b-ah-l","vb"],dad:["d-ae1-d","nn"],dada:["d-aa1 d-aa","nn"],daddy:["d-ae1 d-iy","nn"],daffodil:["d-ae1 f-ah d-ih-l","nn"],daft:["d-ae1-f-t","jj"],daily:["d-ey1 l-iy","jj nn rb"],dainty:["d-ey1-n t-iy","jj"],dairy:["d-eh1 r-iy","nn jj"],dais:["d-ey1-z","nn"],daisy:["d-ey1 z-iy","nn"],dale:["d-ey1-l","nn"],dally:["d-ae1 l-iy","vb"],dam:["d-ae1-m","nn jj uh"],damage:["d-ae1 m-ah-jh","nn vbp vb"],damaged:["d-ae1 m-ah-jh-d","vbn jj vbd"],damaging:["d-ae1 m-ih jh-ih-ng","jj vbg"],dame:["d-ey1-m","nn"],daminozide:["d-ae m-ih1 n-ah z-ay-d","nn"],dammed:["d-ae1-m-d","vbd"],damn:["d-ae1-m","jj nn rb vb uh"],damnation:["d-ae-m n-ey1 sh-ah-n","nn"],damned:["d-ae1-m-d","jj vbn rb"],damp:["d-ae1-m-p","vb vbp jj nn"],dampen:["d-ae1-m p-ah-n","vb"],dampening:["d-ae1-m p-ah n-ih-ng","jj"],damper:["d-ae1-m p-er","nn"],damping:["d-ae1-m p-ih-ng","vbg jj"],damsel:["d-ae1-m z-ah-l","nn"],dance:["d-ae1-n-s","nn vb vbp"],dancer:["d-ae1-n s-er","nn"],dandelion:["d-ae1-n d-ah l-ay ah-n","nn"],dandy:["d-ae1-n d-iy","jj"],dang:["d-ae1-ng","jj"],danger:["d-ey1-n jh-er","nn"],dangerous:["d-ey1-n jh-er ah-s","jj"],dangerously:["d-ey1-n jh-er ah-s l-iy","rb"],dangle:["d-ae1-ng g-ah-l","vb"],dangling:["d-ae1-ng g-ah l-ih-ng","vbg jj"],dank:["d-ae1-ng-k","jj"],dapper:["d-ae1 p-er","jj"],dare:["d-eh1-r","vb vbp nn"],darin:["d-ae1 r-ih-n","jj"],daring:["d-eh1 r-ih-ng","jj vbg"],dark:["d-aa1-r-k","jj nn rb"],darken:["d-aa1-r k-ah-n","vb vbp"],darkened:["d-aa1-r k-ah-n-d","vbd vbn jj"],darker:["d-aa1-r k-er","jjr"],darkest:["d-aa1-r k-ah-s-t","jjs"],darkly:["d-aa1-r-k l-iy","rb"],darkness:["d-aa1-r-k n-ah-s","nn"],darkroom:["d-aa1-r-k r-uw-m","nn"],darling:["d-aa1-r l-ih-ng","nn jj"],darn:["d-aa1-r-n","jj vb"],darned:["d-aa1-r-n-d","rb"],dart:["d-aa1-r-t","nn vb vbp"],dartboard:["d-aa1-r-t b-ao-r-d","nn"],dash:["d-ae1-sh","nn vb"],dashboard:["d-ae1-sh b-ao-r-d","nn"],dashed:["d-ae1-sh-t","vbn jj vbd"],dashing:["d-ae1 sh-ih-ng","vbg jj"],dastardly:["d-ae1 s-t-er-d l-iy","jj"],database:["d-ey1 t-ah b-ey-s","nn"],date:["d-ey1-t","nn vbp vb"],dated:["d-ey1 t-ih-d","vbn jj vbd"],datum:["d-ae1 t-ah-m","nn"],daub:["d-ao1-b","vb"],daughter:["d-ao1 t-er","nn"],daunt:["d-ao1-n-t","vb"],daunted:["d-ao1-n t-ih-d","vbd vbn jj"],daunting:["d-ao1-n t-ih-ng","jj vbg"],davenport:["d-ae1 v-ah-n p-ao-r-t","nn"],dawdle:["d-ao1-d-ah-l","vb"],dawn:["d-ao1-n","nn vb"],day:["d-ey1","nn"],daybreak:["d-ey1 b-r-ey-k","nn"],daydream:["d-ey1 d-r-iy-m","nn vb"],daylight:["d-ey1 l-ay-t","nn"],daylong:["d-ey1 l-ao-ng","jj"],daytime:["d-ey1 t-ay-m","jj nn"],daze:["d-ey1-z","nn vb"],dazed:["d-ey1-z-d","jj vbd vbn"],dazzle:["d-ae1 z-ah-l","vb"],dazzled:["d-ae1 z-ah-l-d","vbn jj"],dazzling:["d-ae1 z-ah-l ih-ng","jj vbg"],deacon:["d-iy1 k-ah-n","nn"],deactivate:["d-iy-ae1-k-t-ih-v-ey-t","vb"],dead:["d-eh1-d","jj nn rb vbn"],deadbeat:["d-eh1-d b-iy-t","nn"],deader:["d-eh1 d-er","jjr"],deadliest:["d-eh1-d l-iy ah-s-t","jjs"],deadline:["d-eh1-d l-ay-n","nn"],deadliness:["d-eh1-d l-iy n-ah-s","nn"],deadlock:["d-eh1-d l-aa-k","nn vb"],deadlocked:["d-eh1-d l-aa-k-t","vbn jj"],deadly:["d-eh1-d l-iy","jj rb"],deadpan:["d-eh1-d p-ae-n","jj"],deadweight:["d-eh1-d w-ey-t","nn"],deadwood:["d-eh1-d w-uh-d","nn"],deaf:["d-eh1-f","jj"],deafen:["d-eh1-f-ah-n","vb"],deafening:["d-eh1 f-ah-n ih-ng","vbg jj"],deafness:["d-eh1-f n-ah-s","nn"],deal:["d-iy1-l","nn vb vbp"],dealer:["d-iy1 l-er","nn"],dealership:["d-iy1 l-er sh-ih-p","nn"],dealt:["d-eh1-l-t","vbn vbd"],dean:["d-iy1-n","nn"],dear:["d-ih1-r","jj nn rb uh"],dearest:["d-ih1 r-ah-s-t","jjs"],dearly:["d-ih1-r l-iy","rb"],dearth:["d-er1-th","nn"],death:["d-eh1-th","nn"],deathbed:["d-eh1-th b-eh-d","nn"],deathly:["d-eh1-th l-iy","jj"],deathwatch:["d-eh1-th w-aa-ch","nn"],debacle:["d-ah b-aa1 k-ah-l","nn"],debase:["d-ah-b-ey1-s","vb"],debasement:["d-ah b-ey1-s m-ah-n-t","nn"],debatable:["d-ah b-ey1 t-ah b-ah-l","jj"],debate:["d-ah b-ey1-t","nn vb vbp"],debating:["d-ah b-ey1 t-ih-ng","vbg jj"],debauchery:["d-ah b-ao1 ch-er iy","nn"],debilitate:["d-ah-b-ih1-l-ah-t-ey-t","vb"],debilitated:["d-ah b-ih1 l-ah t-ey t-ih-d","vbn jj"],debilitating:["d-ah b-ih1 l-ah t-ey t-ih-ng","jj"],debility:["d-ah b-ih1 l-ah t-iy","nn"],debit:["d-eh1 b-ih-t","nn"],debonair:["d-eh b-ah n-eh1-r","jj"],debris:["d-ah b-r-iy1","nn"],debt:["d-eh1-t","nn"],debtholder:["d-eh1-t hh-ow-l d-er","nn"],debtor:["d-eh1 t-er","nn jj"],debunk:["d-ih b-ah1-ng-k","vb"],debunking:["d-ih b-ah1-ng k-ih-ng","nn"],debut:["d-ey b-y-uw1","nn vb vbp"],debutante:["d-eh1 b-y-ah t-aa1-n-t","nn"],decade:["d-eh k-ey1-d","nn"],decadence:["d-eh1 k-ah d-ah-n-s","nn"],decadent:["d-eh1 k-ah d-ah-n-t","jj"],decaffeinate:["d-iy-k-ae1-f-ah-n-ey-t","vb"],decamp:["d-ah-k-ae1-m-p","vb"],decant:["d-ah-k-ae1-n-t","vb"],decay:["d-ah k-ey1","nn vb"],decayed:["d-ah k-ey1-d","jj vbd vbn"],decaying:["d-ah k-ey1 ih-ng","vbg jj"],decease:["d-ih-s-iy1-s","vb"],deceased:["d-ih s-iy1-s-t","jj nn vbn"],decedent:["d-eh s-iy1 d-ah-n-t","nn"],deceit:["d-ah s-iy1-t","nn"],deceitful:["d-ah s-iy1-t f-ah-l","jj"],deceive:["d-ih s-iy1-v","vb"],decelerate:["d-ih s-eh1 l-er ey-t","vb"],deceleration:["d-ih s-eh l-er ey1 sh-ah-n","nn"],decency:["d-iy1 s-ah-n s-iy","nn"],decent:["d-iy1 s-ah-n-t","jj"],decently:["d-iy1 s-ah-n-t l-iy","rb"],decentralization:["d-ih s-eh-n t-r-ah l-ih z-ey1 sh-ah-n","nn"],decentralize:["d-ih s-eh1-n t-r-ah l-ay-z","vb"],decentralized:["d-ih s-eh1-n t-r-ah l-ay-z-d","jj vbd vbn"],deception:["d-ih s-eh1-p sh-ah-n","nn"],deceptive:["d-ih s-eh1-p t-ih-v","jj"],deceptively:["d-ih s-eh1-p t-ih-v l-iy","rb"],decertified:["d-iy s-er1 t-ah f-ay-d","vbn"],decertify:["d-iy-s-er1-t-ah-f-ay","vb"],decide:["d-ih s-ay1-d","vb vbp"],decided:["d-ih s-ay1 d-ih-d","vbd vbn jj"],decidedly:["d-ih s-ay1 d-ah-d l-iy","rb"],deciding:["d-ah s-ay1 d-ih-ng","vbg jj"],decimal:["d-eh1 s-ah m-ah-l","nn jj"],decimate:["d-eh1-s-ah-m-ey-t","vb"],decipher:["d-ih s-ay1 f-er","vb"],decision:["d-ih s-ih1 zh-ah-n","nn"],decisionmaking:["d-ih s-ih1 zh-ah-n m-ey k-ih-ng","nn"],decisive:["d-ih s-ay1 s-ih-v","jj"],decisively:["d-ih s-ay1 s-ih-v l-iy","rb"],decisiveness:["d-ih s-ay1 s-ih-v n-ah-s","nn"],deck:["d-eh1-k","nn vb"],declaim:["d-ih-k-l-ey1-m","vb"],declaration:["d-eh k-l-er ey1 sh-ah-n","nn"],declaratory:["d-ih k-l-eh1 r-ah t-ao r-iy","jj"],declare:["d-ih k-l-eh1-r","vb vbp"],declared:["d-ih k-l-eh1-r-d","vbd vbn jj"],decline:["d-ih k-l-ay1-n","nn vb vbp"],decliner:["d-ih k-l-ay1 n-er","nn"],declining:["d-ih k-l-ay1 n-ih-ng","vbg jj nn"],decode:["d-ih k-ow1-d","vb"],decommission:["d-iy-k-ah-m-ih1-sh-ah-n","vb"],decompose:["d-iy k-ah-m p-ow1-z","vb"],decomposed:["d-iy k-ah-m p-ow1-z-d","jj"],decompression:["d-iy k-ah-m p-r-eh1 sh-ah-n","nn"],decontamination:["d-iy k-ah-n t-ae m-ah n-ey1 sh-ah-n","nn"],decor:["d-ih k-ao1-r","nn"],decorate:["d-eh1 k-er ey-t","vbp vb"],decorated:["d-eh1 k-er ey t-ah-d","vbn vbd jj"],decoration:["d-eh k-er ey1 sh-ah-n","nn"],decorative:["d-eh1 k-r-ah t-ih-v","jj"],decorator:["d-eh1 k-er ey t-er","nn"],decorous:["d-eh1 k-er ah-s","jj"],decorum:["d-ih k-ao1 r-ah-m","nn"],decoy:["d-ah k-oy1","nn"],decrease:["d-ih k-r-iy1-s","nn vb vbp"],decree:["d-ih k-r-iy1","nn vb"],decrepit:["d-ah k-r-eh1 p-ih-t","jj"],decried:["d-ih k-r-ay1-d","vbd"],decries:["d-ih k-r-ay1-z","vbz"],decriminalization:["d-iy k-r-ih m-ah n-ah l-ah z-ey1 sh-ah-n","nn"],decry:["d-ih k-r-ay1","vb vbp"],dedicate:["d-eh1 d-ah k-ey-t","vb"],dedicated:["d-eh1 d-ah k-ey t-ah-d","vbn jj vbd"],dedication:["d-eh d-ah k-ey1 sh-ah-n","nn"],deduce:["d-ih d-uw1-s","vb"],deduct:["d-ih d-ah1-k-t","vb vbp"],deductibility:["d-ih d-ah-k t-ah b-ih1 l-ah t-iy","nn"],deductible:["d-ih d-ah1-k t-ah b-ah-l","jj"],deduction:["d-ih d-ah1-k sh-ah-n","nn"],deed:["d-iy1-d","nn"],deem:["d-iy1-m","vbp vb"],deep:["d-iy1-p","jj rb"],deepen:["d-iy1 p-ah-n","vb"],deeper:["d-iy1 p-er","jjr rbr rb"],deepest:["d-iy1 p-ah-s-t","jjs"],deeply:["d-iy1-p l-iy","rb"],deer:["d-ih1-r","nn"],defamation:["d-eh f-ah m-ey1 sh-ah-n","nn"],defamatory:["d-ih f-ae1 m-ah t-ao r-iy","jj"],defame:["d-ih-f-ey1-m","vb"],default:["d-ih f-ao1-l-t","nn vb"],defaulted:["d-ih f-ao1-l t-ih-d","vbd vbn jj"],defaulter:["d-ih f-ao1-l t-er","nn"],defeat:["d-ih f-iy1-t","nn vb vbp"],defeatism:["d-ih f-iy1 t-ih z-ah-m","nn"],defect:["d-iy1 f-eh-k-t","nn vb"],defection:["d-ih f-eh1-k sh-ah-n","nn"],defective:["d-ih f-eh1-k t-ih-v","jj"],defector:["d-ih f-eh1-k t-er","nn"],defend:["d-ih f-eh1-n-d","vb vbp"],defendant:["d-ih f-eh1-n d-ah-n-t","nn"],defender:["d-ih f-eh1-n d-er","nn"],defending:["d-ih f-eh1-n d-ih-ng","vbg jj"],defense:["d-ih f-eh1-n-s","nn"],defenseless:["d-ih f-eh1-n-s l-ah-s","jj"],defensible:["d-ih f-eh1-n s-ah b-ah-l","jj"],defensive:["d-ih f-eh1-n s-ih-v","jj nn"],defensively:["d-ih f-eh1-n s-ih-v l-iy","rb"],defensiveness:["d-ih f-eh1-n s-ih-v n-ah-s","nn"],defer:["d-ih f-er1","vb"],deference:["d-eh1 f-er ah-n-s","nn"],deferment:["d-ih f-er1 m-ah-n-t","nn"],deferred:["d-ih f-er1-d","vbn vbd jj"],defiance:["d-ih f-ay1 ah-n-s","nn"],defiant:["d-ih f-ay1 ah-n-t","jj"],defiantly:["d-ih f-ay1 ah-n-t l-iy","rb"],deficiency:["d-ih f-ih1 sh-ah-n s-iy","nn"],deficient:["d-ih f-ih1 sh-ah-n-t","jj"],deficit:["d-eh1 f-ah s-ah-t","nn"],defied:["d-ih f-ay1-d","vbd vbn"],defies:["d-ih f-ay1-z","vbz"],definable:["d-ih f-ay1 n-ah b-ah-l","jj"],define:["d-ih f-ay1-n","vb vbp"],defined:["d-ih f-ay1-n-d","vbn jj vbd"],definite:["d-eh1 f-ah n-ah-t","jj"],definitely:["d-eh1 f-ah n-ah-t l-iy","rb"],definition:["d-eh f-ah n-ih1 sh-ah-n","nn"],definitive:["d-ih f-ih1 n-ih t-ih-v","jj"],definitively:["d-ih f-ih1 n-ih t-ih-v l-iy","rb"],deflate:["d-ih f-l-ey1-t","vb"],deflated:["d-ih f-l-ey1 t-ih-d","vbd jj vbn"],deflationary:["d-ih f-l-ey1 sh-ah-n eh r-iy","jj"],deflator:["d-ih f-l-ey1 t-er","nn"],deflect:["d-ih f-l-eh1-k-t","vb"],deforestation:["d-ih f-ao r-ih s-t-ey1 sh-ah-n","nn"],deform:["d-iy-f-ao1-r-m","vb"],deformation:["d-iy f-ao-r m-ey1 sh-ah-n","nn"],deformed:["d-ih f-ao1-r-m-d","jj vbn"],deformity:["d-ih f-ao1-r m-ah t-iy","nn"],defraud:["d-ih f-r-ao1-d","vb"],defray:["d-ih f-r-ey1","vb"],deft:["d-eh1-f-t","jj"],deftly:["d-eh1-f-t l-iy","rb"],defunct:["d-ih f-ah1-ng-k-t","jj vb"],defuse:["d-ih f-y-uw1-z","vb"],defy:["d-ih f-ay1","vb vbp"],degeneracy:["d-ih jh-eh1 n-er ah s-iy","nn"],degenerate:["d-ih jh-eh1 n-er ah-t","jj vb"],degeneration:["d-ih jh-eh n-er ey1 sh-ah-n","nn"],degenerative:["d-ih jh-eh1 n-er ah t-ih-v","jj"],degradation:["d-eh g-r-ah d-ey1 sh-ah-n","nn"],degrade:["d-ih g-r-ey1-d","vb"],degraded:["d-ih g-r-ey1 d-ah-d","jj"],degrading:["d-ih g-r-ey1 d-ih-ng","jj vbg"],degree:["d-ih g-r-iy1","nn"],dehumanize:["d-ih-hh-y-uw1-m-ah-n-ay-z","vb"],dehydrate:["d-ih-hh-ay1-d-r-ey-t","vb"],dehydrated:["d-ih hh-ay1 d-r-ey t-ah-d","jj vbn"],dehydration:["d-iy hh-ay d-r-ey1 sh-ah-n","nn"],deification:["d-iy ah f-ah k-ey1 sh-ah-n","nn"],deinstitutionalization:["d-iy ih-n s-t-ih t-uw sh-ah n-ah-l ah z-ey1 sh-ah-n","nn"],deity:["d-iy1 ah t-iy","nn"],delay:["d-ih l-ey1","nn vb vbp"],delayed:["d-ih l-ey1-d","vbn jj vbd"],delaying:["d-ih l-ey1 ih-ng","vbg jj nn"],delectable:["d-ih l-eh1-k t-ah b-ah-l","jj"],delegate:["d-eh1 l-ah g-ey-t","nn vb"],delegation:["d-eh l-ah g-ey1 sh-ah-n","nn"],delete:["d-ih l-iy1-t","vb"],deleterious:["d-eh l-ah t-ih1 r-iy ah-s","jj"],deletion:["d-ih l-iy1 sh-ah-n","nn"],deliberate:["d-ih l-ih1 b-er ah-t","jj vb"],deliberately:["d-ih l-ih1 b-er ah-t l-iy","rb"],deliberation:["d-ih l-ih b-er ey1 sh-ah-n","nn"],deliberative:["d-ih l-ih1 b-er ey t-ih-v","jj"],delicacy:["d-eh1 l-ah k-ah s-iy","nn"],delicate:["d-eh1 l-ah k-ah-t","jj"],delicately:["d-eh1 l-ah k-ah-t l-iy","rb"],delicatessen:["d-eh l-ih k-ah t-eh1 s-ah-n","nn"],delicious:["d-ih l-ih1 sh-ah-s","jj"],deliciously:["d-ih l-ih1 sh-ah-sh l-iy","rb"],delight:["d-ih l-ay1-t","nn vb vbp"],delighted:["d-ih l-ay1 t-ah-d","vbn jj vbd"],delightful:["d-ih l-ay1-t f-ah-l","jj"],delightfully:["d-ih l-ay1-t f-ah l-iy","rb"],delineate:["d-ih l-ih1 n-iy ey-t","vb"],delineation:["d-ih l-ih n-iy ey1 sh-ah-n","nn"],delinquency:["d-ih l-ih1-ng k-w-ah-n s-iy","nn"],delinquent:["d-ih l-ih1-ng k-w-ah-n-t","jj nn"],delirium:["d-ih l-ih1 r-iy ah-m","nn"],deliver:["d-ih l-ih1 v-er","vb vbp"],deliverable:["d-ih l-ih1 v-er ah b-ah-l","jj"],deliverance:["d-ih l-ih1 v-er ah-n-s","nn"],deliverer:["d-ih l-ih1 v-er er","nn"],deliveries:["d-ih l-ih1 v-er iy-z","nn"],delivery:["d-ih l-ih1 v-er iy","nn"],dell:["d-eh1-l","nn"],delphic:["d-eh1-l f-ih-k","jj"],delta:["d-eh1-l t-ah","nn jj"],delude:["d-ih l-uw1-d","vb vbp"],deluded:["d-ih l-uw1 d-ih-d","jj vbd"],deluge:["d-eh1 l-y-uw-jh","nn vb"],delusion:["d-ih l-uw1 zh-ah-n","nn"],deluxe:["d-ah l-ah1-k-s","jj"],delve:["d-eh1-l-v","vb"],demagogic:["d-eh m-ah g-aa1 jh-ih-k","jj"],demagogue:["d-eh1 m-ah g-aa-g","nn"],demagoguery:["d-eh1 m-ah g-aa g-er iy","nn"],demand:["d-ih m-ae1-n-d","nn vb vbp"],demanding:["d-ih m-ae1-n d-ih-ng","vbg jj"],demandingly:["d-ih m-ae1-n d-ih-ng l-iy","rb"],demarcation:["d-iy m-aa-r k-ey1 sh-ah-n","nn"],demean:["d-ih-m-iy1-n","vb"],demeaning:["d-ih m-iy1 n-ih-ng","jj"],demeanor:["d-ih m-iy1 n-er","nn"],dement:["d-ah-m-eh1-n-t","vb"],demented:["d-ih m-eh1-n t-ih-d","jj vbn"],dementia:["d-ih m-eh1-n sh-iy ah","nn"],demilitarize:["d-iy m-ih1 l-ah t-er ay-z","vb"],demise:["d-ih m-ay1-z","nn"],demo:["d-eh1 m-ow","nn"],demobilize:["d-ih m-ow1 b-ah l-ay-z","vb"],democracy:["d-ih m-aa1 k-r-ah s-iy","nn"],democrat:["d-eh1 m-ah k-r-ae-t","nn"],democratic:["d-eh m-ah k-r-ae1 t-ih-k","jj"],democratically:["d-eh m-ah k-r-ae1 t-ih-k l-iy","rb"],democratization:["d-ih m-aa k-r-ah t-ah z-ey1 sh-ah-n","nn"],democratize:["d-ih m-aa1 k-r-ah t-ay-z","vb"],demographic:["d-eh m-ah g-r-ae1 f-ih-k","jj"],demographically:["d-eh m-ah g-r-ae1 f-ih-k l-iy","rb"],demography:["d-ih m-aa1 g-r-ah f-iy","nn"],demolish:["d-ih m-aa1 l-ih-sh","vb"],demolition:["d-eh m-ah l-ih1 sh-ah-n","nn jj"],demon:["d-iy1 m-ah-n","nn"],demonic:["d-ih m-aa1 n-ih-k","jj"],demonize:["d-iy1 m-ah n-ay-z","vb"],demonizing:["d-iy1 m-ah n-ay z-ih-ng","nn"],demonstrable:["d-eh1 m-ah-n s-t-r-ah b-ah-l","jj"],demonstrably:["d-ih m-aa1-n s-t-r-ah b-l-iy","rb"],demonstrate:["d-eh1 m-ah-n s-t-r-ey-t","vb vbp"],demonstrated:["d-eh1 m-ah-n s-t-r-ey t-ah-d","vbn vbd jj"],demonstration:["d-eh m-ah-n s-t-r-ey1 sh-ah-n","nn"],demonstrator:["d-eh1 m-ah-n s-t-r-ey t-er","nn"],demoralization:["d-ih m-ao r-ah l-ih z-ey1 sh-ah-n","nn"],demoralize:["d-ih m-ao1 r-ah l-ay-z","vb vbp"],demoralized:["d-ih m-ao1 r-ah l-ay-z-d","vbn jj"],demote:["d-ih-m-ow1-t","vb"],demotion:["d-ih m-ow1 sh-ah-n","nn"],demur:["d-ih m-er1","vb vbp"],demure:["d-ih m-y-uh1-r","jj"],den:["d-eh1-n","nn"],denationalization:["d-iy n-ae sh-ah-n ah l-ih z-ey1 sh-ah-n","nn"],denationalize:["d-ih-n-ae1-sh-ah-n-ah-l-ay-z","vb"],denial:["d-ih n-ay1 ah-l","nn"],denied:["d-ih n-ay1-d","vbn vbd"],denies:["d-ih n-ay1-z","vbz"],denigrate:["d-eh1 n-ah g-r-ey-t","vb"],denizen:["d-eh1 n-ah z-ah-n","nn"],denominate:["d-ih-n-aa1-m-ah-n-ey-t","vb"],denomination:["d-ih n-ao m-ah n-ey1 sh-ah-n","nn"],denominator:["d-ih n-aa1 m-ah n-ey t-er","nn"],denote:["d-ih n-ow1-t","vb vbp"],denouement:["d-ey n-uw m-aa1-n","nn"],denounce:["d-ih n-aw1-n-s","vbp vb"],dense:["d-eh1-n-s","jj"],densely:["d-eh1-n-s l-iy","rb"],densest:["d-eh1-n s-ah-s-t","jjs"],density:["d-eh1-n s-ah t-iy","nn"],dent:["d-eh1-n-t","nn vb"],dental:["d-eh1-n t-ah-l","jj nn"],dentist:["d-eh1-n t-ah-s-t","nn"],dentistry:["d-eh1-n t-ah-s t-r-iy","nn"],denture:["d-eh1-n ch-er","nn"],denuclearize:["d-ih n-uw1 k-l-iy er ay-z","vb"],denude:["d-ih-n-uw1-d","vb"],denunciation:["d-ih n-ah-n s-iy ey1 sh-ah-n","nn"],deny:["d-ih n-ay1","vb vbp"],deodorant:["d-iy ow1 d-er ah-n-t","nn jj"],depart:["d-ih p-aa1-r-t","vb vbp"],departed:["d-ih p-aa1-r t-ah-d","vbd jj vbn"],department:["d-ih p-aa1-r-t m-ah-n-t","nn"],departmental:["d-ih p-aa-r-t m-eh1 n-ah-l","jj"],departure:["d-ih p-aa1-r ch-er","nn"],depend:["d-ih p-eh1-n-d","vb vbp"],dependable:["d-ih p-eh1-n d-ah b-ah-l","jj"],dependence:["d-ih p-eh1-n d-ah-n-s","nn"],dependency:["d-ih p-eh1-n d-ah-n s-iy","nn"],dependent:["d-ih p-eh1-n d-ah-n-t","jj nn"],depict:["d-ih p-ih1-k-t","vb vbp"],depiction:["d-ih p-ih1-k sh-ah-n","nn"],deplete:["d-ih p-l-iy1-t","vb"],depletion:["d-ih p-l-iy1 sh-ah-n","nn"],deplorable:["d-ih p-l-ao1 r-ah b-ah-l","jj"],deplore:["d-ih p-l-ao1-r","vb"],deploy:["d-ih p-l-oy1","vb vbp"],deployable:["d-ih p-l-oy1 ah b-ah-l","jj"],deployment:["d-ih p-l-oy1 m-ah-n-t","nn"],deport:["d-ih p-ao1-r-t","vb"],deportation:["d-iy p-ao-r t-ey1 sh-ah-n","nn"],deportee:["d-iy p-ao-r t-iy1","nn"],depose:["d-ih p-ow1-z","vb"],deposit:["d-ah p-aa1 z-ih-t","nn vb vbp"],depositary:["d-ah p-aa1 z-ih t-eh r-iy","nn jj"],deposition:["d-eh p-ah z-ih1 sh-ah-n","nn"],depositor:["d-ah p-aa1 z-ih t-er","nn"],depository:["d-ih p-aa1 z-ah t-ao r-iy","nn jj"],depot:["d-iy1 p-ow","nn"],depravity:["d-ih p-r-ae1 v-ah t-iy","nn"],depreciable:["d-ih p-r-ih1 sh-ah b-ah-l","jj"],depreciate:["d-ih-p-r-iy1-sh-iy-ey-t","vb"],depreciation:["d-ih p-r-iy sh-iy ey1 sh-ah-n","nn"],depredation:["d-eh p-r-ah d-ey1 sh-ah-n","nn"],depress:["d-ih p-r-eh1-s","vb vbp"],depressant:["d-ih p-r-eh1 s-ah-n-t","nn"],depressed:["d-ih p-r-eh1-s-t","jj vbd vbn"],depressing:["d-ih p-r-eh1 s-ih-ng","jj vbg"],depressingly:["d-ih p-r-eh1 s-ih-ng l-iy","rb"],depression:["d-ih p-r-eh1 sh-ah-n","nn"],deprivation:["d-eh p-r-ah v-ey1 sh-ah-n","nn"],deprive:["d-ih p-r-ay1-v","vb"],deprived:["d-ih p-r-ay1-v-d","vbn jj vbd"],depth:["d-eh1-p-th","nn"],deputy:["d-eh1 p-y-ah t-iy","nn jj"],derail:["d-ih r-ey1-l","vb vbp"],derailment:["d-ih r-ey1-l m-ah-n-t","nn"],derange:["d-ih-r-ey1-n-jh","vb"],deranged:["d-ih r-ey1-n-jh-d","jj vbn"],derby:["d-er1 b-iy","nn"],deregulate:["d-iy r-eh1 g-y-ah l-ey-t","vb nn"],deregulated:["d-iy r-eh1 g-y-ah l-ey t-ih-d","vbn jj vbd"],deregulation:["d-iy r-eh g-y-ah l-ey1 sh-ah-n","nn"],derelict:["d-eh1 r-ah l-ih-k-t","nn jj"],dereliction:["d-eh r-ah l-ih1-k sh-ah-n","nn"],deride:["d-ih r-ay1-d","vb vbp"],derision:["d-er ih1 zh-ah-n","nn"],derisively:["d-er ih1 s-ih-v l-iy","rb"],derivation:["d-eh r-ah v-ey1 sh-ah-n","nn"],derivative:["d-er ih1 v-ah t-ih-v","jj nn"],derive:["d-er ay1-v","vbp vb"],dermal:["d-er1 m-ah-l","jj"],dermatological:["d-er m-ah t-ah l-aa1 jh-ih k-ah-l","jj"],derogatory:["d-er aa1 g-ah t-ao r-iy","jj"],derrick:["d-eh1 r-ih-k","nn"],derring:["d-eh1 r-ih-ng","nn"],dervish:["d-er1 v-ih-sh","nn"],descend:["d-ih s-eh1-n-d","vb vbp"],descendant:["d-ih s-eh1-n d-ah-n-t","nn"],descendent:["d-ih s-eh1-n d-ah-n-t","nn"],descent:["d-ih s-eh1-n-t","nn"],describe:["d-ih s-k-r-ay1-b","vb vbp"],description:["d-ih s-k-r-ih1-p sh-ah-n","nn"],descriptive:["d-ih s-k-r-ih1-p t-ih-v","jj"],desecrate:["d-eh-z-ah-k-r-ey1-t","vb"],desecration:["d-eh s-ah k-r-ey1 sh-ah-n","nn"],desegregate:["d-ih s-eh1 g-r-ah g-ey-t","vb"],desegregation:["d-ih s-eh g-r-ah g-ey1 sh-ah-n","nn"],desert:["d-eh1 z-er-t","nn jj vb vbp"],deserted:["d-ih z-er1 t-ih-d","vbn vbd jj"],desertion:["d-ih z-er1 sh-ah-n","nn"],deserve:["d-ih z-er1-v","vbp vb"],deserving:["d-ih z-er1 v-ih-ng","jj nn"],design:["d-ih z-ay1-n","nn vb vbp"],designate:["d-eh1 z-ah-g n-ey-t","vb jj nn"],designated:["d-eh1 z-ih-g n-ey t-ih-d","vbn vbd jj"],designation:["d-eh z-ah-g n-ey1 sh-ah-n","nn"],designee:["d-eh z-ih-g n-iy1","nn"],designer:["d-ih z-ay1 n-er","nn"],desirability:["d-ih z-ay r-ah b-ih1 l-ih t-iy","nn"],desirable:["d-ih z-ay1 r-ah b-ah-l","jj"],desire:["d-ih z-ay1 er","nn vbp vb"],desired:["d-ih z-ay1 er-d","vbn vbd jj"],desist:["d-ih s-ih1-s-t","vb vbp"],desk:["d-eh1-s-k","nn"],desktop:["d-eh1-s-k t-aa-p","nn jj"],desolate:["d-eh1 s-ah l-ah-t","jj"],desolation:["d-eh s-ah l-ey1 sh-ah-n","nn"],despair:["d-ih s-p-eh1-r","nn vb"],despairing:["d-ih s-p-eh1 r-ih-ng","jj vbg"],desperado:["d-eh s-p-er aa1 d-ow-z","nn"],desperate:["d-eh1 s-p-r-ih-t","jj"],desperately:["d-eh1 s-p-er ah-t l-iy","rb"],desperation:["d-eh s-p-er ey1 sh-ah-n","nn"],despicable:["d-ih s-p-ih1 k-ah b-ah-l","jj"],despise:["d-ih s-p-ay1-z","vbp vb"],despite:["d-ih s-p-ay1-t","in"],despondency:["d-ih s-p-aa1-n d-ah-n s-iy","nn"],despondent:["d-ih s-p-aa1-n d-ah-n-t","jj"],despot:["d-eh1 s-p-ah-t","nn"],despotism:["d-eh1 s-p-ah t-ih z-ah-m","nn"],dessert:["d-ih z-er1-t","nn"],destabilize:["d-ih s-t-ey1 b-ah l-ay-z","vb"],destabilizing:["d-ih s-t-ey1 b-ah l-ay z-ih-ng","vbg jj"],destination:["d-eh s-t-ah n-ey1 sh-ah-n","nn"],destine:["d-eh1 s-t-ih-n","vb"],destiny:["d-eh1 s-t-ah n-iy","nn"],destitute:["d-eh1 s-t-ah t-uw-t","jj"],destroy:["d-ih s-t-r-oy1","vb vbp"],destroyed:["d-ih s-t-r-oy1-d","vbn vbd jj"],destroyer:["d-ih s-t-r-oy1 er","nn"],destruction:["d-ih-s t-r-ah1-k sh-ah-n","nn"],destructive:["d-ih s-t-r-ah1-k t-ih-v","jj"],desultory:["d-eh1 s-ah-l t-ao r-iy","jj"],detach:["d-ih t-ae1-ch","vb"],detachable:["d-ih t-ae1 ch-ah b-ah-l","jj"],detached:["d-ih t-ae1-ch-t","vbn jj vbd"],detachment:["d-ih t-ae1-ch m-ah-n-t","nn"],detail:["d-ih t-ey1-l","nn vb"],detailed:["d-ih t-ey1-l-d","vbn jj vbd"],detain:["d-ih t-ey1-n","vb"],detect:["d-ih t-eh1-k-t","vb vbp"],detectable:["d-ih t-eh1-k t-ah b-ah-l","jj"],detection:["d-ih t-eh1-k sh-ah-n","nn"],detective:["d-ih t-eh1-k t-ih-v","nn"],detector:["d-ih t-eh1-k t-er","nn"],detente:["d-ey t-aa1-n-t","nn"],detention:["d-ih t-eh1-n sh-ah-n","nn"],deter:["d-ih t-er1","vb vbp"],detergent:["d-ih t-er1 jh-ah-n-t","nn"],deteriorate:["d-ih t-ih1 r-iy er ey-t","vb vbp"],deteriorated:["d-ih t-ih1 r-iy er ey t-ih-d","vbn jj vbd"],deteriorating:["d-ih t-ih1 r-iy er ey t-ih-ng","vbg jj"],deterioration:["d-ih t-ih1 r-iy er ey sh-ah-n","nn"],determinable:["d-ih t-er1 m-ah n-ah b-ah-l","jj"],determinant:["d-ih t-er1 m-ah n-ah-n-t","nn"],determinate:["d-ih t-er1 m-ah n-ey-t","jj"],determination:["d-ih t-er m-ah n-ey1 sh-ah-n","nn"],determine:["d-ah t-er1 m-ah-n","vb vbp"],determined:["d-ih t-er1 m-ah-n-d","vbn vbd jj"],determinedly:["d-ah t-er1 m-ah n-ah-d l-iy","rb"],determining:["d-ih t-er1 m-ah n-ih-ng","vbg jj nn"],determinism:["d-ih t-er1 m-ah n-ih z-ah-m","nn"],deterministic:["d-ih t-er m-ah n-ih1 s-t-ih-k","jj"],deterrence:["d-ih t-er1 ah-n-s","nn"],deterrent:["d-ih t-er1 r-ah-n-t","nn"],detest:["d-ih t-eh1-s-t","vbp vb"],dethrone:["d-ih-th-r-ow1-n","vb"],detonate:["d-eh1 t-ah n-ey-t","vb vbp"],detonation:["d-eh t-ah n-ey1 sh-ah-n","nn"],detour:["d-ih t-uh1-r","nn"],detoxification:["d-ih t-aa-k s-ih f-ih k-ey1 sh-ah-n","nn"],detoxify:["d-ih t-aa1-k s-ah f-ay","vb"],detract:["d-ih t-r-ae1-k-t","vb vbp"],detractor:["d-ih t-r-ae1-k t-er","nn"],detriment:["d-eh1 t-r-ah m-ah-n-t","nn"],detrimental:["d-eh t-r-ah m-eh1-n t-ah-l","jj"],deuterium:["d-uw t-iy1 r-iy ah-m","nn"],devaluation:["d-ih v-ae-l y-uw ey1 sh-ah-n","nn"],devalue:["d-ih v-ae1-l y-uw","vb"],devastate:["d-eh1 v-ah s-t-ey-t","vb"],devastated:["d-eh1 v-ah s-t-ey t-ah-d","vbn vbd jj"],devastating:["d-eh1 v-ah s-t-ey t-ih-ng","jj vbg"],devastatingly:["d-eh1 v-ah s-t-ey t-ih-ng l-iy","rb"],devastation:["d-eh v-ah s-t-ey1 sh-ah-n","nn"],develop:["d-ih v-eh1 l-ah-p","vb vbp"],developed:["d-ih v-eh1 l-ah-p-t","vbn jj vbd"],developer:["d-ih v-eh1 l-ah p-er","nn"],developing:["d-ih v-eh1 l-ah p-ih-ng","vbg jj"],development:["d-ih v-eh1 l-ah-p m-ah-n-t","nn"],developmental:["d-ih v-eh l-ah-p m-eh1-n t-ah-l","jj"],deviance:["d-iy1 v-iy ah-n-s","nn"],deviant:["d-iy1 v-iy ah-n-t","jj"],deviate:["d-iy1 v-iy ey-t","vb"],deviation:["d-iy v-iy ey1 sh-ah-n","nn"],device:["d-ih v-ay1-s","nn"],devil:["d-eh1 v-ah-l","nn"],devilish:["d-eh1-v l-ih-sh","jj"],devious:["d-iy1 v-iy ah-s","jj"],devise:["d-ih v-ay1-z","vb vbp"],devoid:["d-ih v-oy1-d","jj"],devote:["d-ih v-ow1-t","vb vbp"],devoted:["d-ih v-ow1 t-ah-d","vbn vbd jj"],devotee:["d-eh v-ah t-iy1","nn"],devotion:["d-ih v-ow1 sh-ah-n","nn"],devotional:["d-ih v-ow1 sh-ah n-ah-l","jj"],devour:["d-ih v-aw1 er","vb vbp"],devout:["d-ih v-aw1-t","jj"],devoutly:["d-ih v-aw1-t l-iy","rb"],dew:["d-uw1","nn"],dexterity:["d-eh-k s-t-eh1 r-ah t-iy","nn"],dextrous:["d-eh1-k s-t-r-ah-s","jj"],diabetes:["d-ay ah b-iy1 t-iy-z","nn"],diabetic:["d-ay ah b-eh1 t-ih-k","jj nn"],diabolical:["d-ay ah b-aa1 l-ih k-ah-l","jj"],diagnose:["d-ay ah-g n-ow1-s","vb vbp"],diagnosis:["d-ay ah-g n-ow1 s-ah-s","nn"],diagnostic:["d-ay ah-g n-aa1 s-t-ih-k","jj nn"],diagonal:["d-ay ae1 g-ah n-ah-l","jj"],diagonally:["d-ay ae1 g-ah n-ah l-iy","rb"],diagram:["d-ay1 ah g-r-ae-m","nn"],dial:["d-ay1 ah-l","nn vb"],dialect:["d-ay1 ah l-eh-k-t","nn"],dialectic:["d-ay ah l-eh1-k t-ih-k","nn"],dialectical:["d-ay ah l-eh1-k t-ih k-ah-l","jj"],dialogue:["d-ay1 ah l-ao-g","nn"],dialysis:["d-ay ae1 l-ah s-ah-s","nn"],diameter:["d-ay ae1 m-ah t-er","nn"],diametrically:["d-ay ah m-eh1 t-r-ih k-ah l-iy","rb"],diamond:["d-ay1 m-ah-n-d","nn"],diaper:["d-ay1 p-er","nn"],diaphragm:["d-ay1 ah f-r-ae-m","nn"],diarrhea:["d-ay er iy1 ah","nn"],diary:["d-ay1 er iy","nn"],diatomic:["d-ay ah t-aa1 m-ih-k","jj"],diatribe:["d-ay1 ah t-r-ay-b","nn"],dibs:["d-ih1-b-z","nn"],dice:["d-ay1-s","nn nns"],dichotomy:["d-ay k-aa1 t-ah m-iy","nn"],dick:["d-ih1-k","nn"],dicker:["d-ih1 k-er","vb"],dickering:["d-ih1 k-er ih-ng","nn"],dictate:["d-ih-k t-ey1-t","vb vbp"],dictation:["d-ih-k t-ey1 sh-ah-n","nn"],dictator:["d-ih-k t-ey1 t-er","nn"],dictatorial:["d-ih-k t-ah t-ao1 r-iy ah-l","jj"],dictatorship:["d-ih-k t-ey1 t-er sh-ih-p","nn"],diction:["d-ih1-k sh-ah-n","nn"],dictionary:["d-ih1-k sh-ah n-eh r-iy","nn"],dictum:["d-ih1-k t-ah-m","nn"],did:["d-ih1-d","vbd"],"didn't":["d-ih1-d-ah-n-t","vbd"],didactic:["d-ay d-ae1-k t-ih-k","jj"],die:["d-ay1","vb vbp nn"],diehard:["d-ay1 hh-aa-r-d","jj"],diesel:["d-iy1 s-ah-l","nn jj"],diet:["d-ay1 ah-t","nn vb"],dietary:["d-ay1 ah t-eh r-iy","jj"],dieter:["d-ay1 ah t-er","nn"],differ:["d-ih1 f-er","vbp vb"],difference:["d-ih1 f-er ah-n-s","nn"],different:["d-ih1 f-er ah-n-t","jj"],differential:["d-ih f-er eh1-n ch-ah-l","jj nn"],differentiate:["d-ih f-er eh1-n sh-iy ey-t","vb vbp"],differentiated:["d-ih f-er eh1-n ch-iy ey t-ih-d","vbn jj vbd"],differentiation:["d-ih f-er eh-n sh-iy ey1 sh-ah-n","nn"],differently:["d-ih1 f-r-ah-n-t l-iy","rb"],differing:["d-ih1 f-er ih-ng","vbg jj"],difficult:["d-ih1 f-ah k-ah-l-t","jj"],difficulty:["d-ih1 f-ah k-ah-l t-iy","nn"],diffraction:["d-ih f-r-ae1-k sh-ah-n","nn"],diffuse:["d-ih f-y-uw1-s","jj vb"],diffusion:["d-ih f-y-uw1 zh-ah-n","nn"],dig:["d-ih1-g","vb nn vbp"],digest:["d-ay jh-eh1-s-t","vb nn"],digestible:["d-ay jh-eh1 s-t-ah b-ah-l","jj"],digestion:["d-ay jh-eh1-s ch-ah-n","nn"],digestive:["d-ay jh-eh1 s-t-ih-v","jj"],digger:["d-ih1 g-er","nn"],digit:["d-ih1 jh-ah-t","nn"],digital:["d-ih1 jh-ah t-ah-l","jj"],digitalis:["d-ih jh-ah t-ae1 l-ah-s","nn"],dignified:["d-ih1-g n-ah f-ay-d","vbn jj"],dignify:["d-ih1-g n-ah f-ay","vb"],dignitary:["d-ih1-g n-ah t-eh r-iy","nn"],dignity:["d-ih1-g n-ah t-iy","nn"],digress:["d-ay g-r-eh1-s","vb"],digression:["d-ay g-r-eh1 sh-ah-n","nn"],dike:["d-ay1-k","nn"],dilapidate:["d-ih-l-ae1-p-ah-d-ey-t","vb"],dilapidated:["d-ah l-ae1 p-ah d-ey t-ih-d","jj vbn"],dilatation:["d-ih l-ah t-ey1 sh-ah-n","nn"],dilate:["d-ay l-ey1-t","vb"],dilation:["d-ay l-ey1 sh-ah-n","nn"],dilemma:["d-ih l-eh1 m-ah","nn"],diligence:["d-ih1 l-ah jh-ah-n-s","nn"],diligent:["d-ih1 l-ih jh-ah-n-t","jj"],diligently:["d-ih1 l-ah jh-ah-n-t l-iy","rb"],dill:["d-ih1-l","nn"],dilute:["d-ay l-uw1-t","vb jj"],diluted:["d-ay l-uw1 t-ah-d","vbn jj vbd"],dilution:["d-ay l-uw1 sh-ah-n","nn"],dilutive:["d-ah l-uw1 t-ih-v","jj"],dim:["d-ih1-m","jj vb"],dime:["d-ay1-m","nn"],dimension:["d-ih m-eh1-n sh-ah-n","nn vb"],dimensional:["d-ih m-eh1-n sh-ah n-ah-l","jj"],diminish:["d-ih m-ih1 n-ih-sh","vb vbp"],diminished:["d-ih m-ih1 n-ih-sh-t","vbn jj vbd"],diminution:["d-ih m-ah n-uw1 sh-ah-n","nn"],diminutive:["d-ih m-ih1 n-y-ah t-ih-v","jj"],dimly:["d-ih1-m l-iy","rb"],dimmer:["d-ih1 m-er","nn jjr"],din:["d-ih1-n","nn"],dine:["d-ay1-n","vb"],diner:["d-ay1 n-er","nn"],dinghy:["d-ih1-ng iy","nn"],dingo:["d-ih1-ng g-ow","nn"],dingy:["d-ih1-n jh-iy","jj"],dining:["d-ay1 n-ih-ng","nn jj vbg"],dinner:["d-ih1 n-er","nn"],dinnertime:["d-ih1 n-er t-ay-m","nn"],dinnerware:["d-ih1 n-er w-eh-r","nn"],dinosaur:["d-ay1 n-ah s-ao-r","nn"],dioxide:["d-ay aa1-k s-ay-d","nn"],dioxin:["d-ay aa1-k s-ih-n","nn"],dip:["d-ih1-p","nn vbp vb"],diphtheria:["d-ih-f th-ih1 r-iy ah","nn"],diploma:["d-ih p-l-ow1 m-ah","nn"],diplomacy:["d-ih p-l-ow1 m-ah s-iy","nn"],diplomat:["d-ih1 p-l-ah m-ae-t","nn"],diplomatic:["d-ih p-l-ah m-ae1 t-ih-k","jj"],diplomatically:["d-ih p-l-ah m-ae1 t-ih-k l-iy","rb"],dipole:["d-ay1 p-ow-l","jj nn"],dipper:["d-ih1 p-er","nn"],dippy:["d-ih1 p-iy","jj"],dire:["d-ay1-r","jj"],direct:["d-er eh1-k-t","jj vbp rb vb"],directed:["d-er eh1-k t-ah-d","vbn vbd jj"],direction:["d-er eh1-k sh-ah-n","nn"],directional:["d-er eh1-k sh-ah n-ah-l","jj"],directionless:["d-er eh1-k sh-ah-n l-ah-s","jj"],directive:["d-er eh1-k t-ih-v","nn"],directly:["d-er eh1-k-t l-iy","rb"],directness:["d-er eh1-k-t n-ah-s","nn"],director:["d-er eh1-k t-er","nn"],directorate:["d-er eh1-k t-er ah-t","nn"],directorial:["d-er eh-k t-ao1 r-iy ah-l","jj"],directorship:["d-er eh1-k t-er sh-ih-p","nn"],directory:["d-er eh1-k t-er iy","nn jj"],dirge:["d-er1-jh","nn"],dirt:["d-er1-t","nn jj"],dirtier:["d-er1 t-iy er","jjr"],dirtiest:["d-er1 t-iy ah-s-t","jjs"],dirty:["d-er1 t-iy","jj vb"],disability:["d-ih-s ah b-ih1 l-ih t-iy","nn"],disable:["d-ih-s ey1 b-ah-l","vb"],disabled:["d-ih-s ey1 b-ah-l-d","jj nn vbn"],disadvantage:["d-ih-s ah-d v-ae1-n t-ih-jh","nn"],disadvantaged:["d-ih-s ah-d v-ae1-n t-ih-jh-d","jj"],disadvantageous:["d-ih-s ae-d v-ae-n t-ey1 jh-ah-s","jj"],disaffected:["d-ih-s ah f-eh1-k t-ih-d","jj"],disaffection:["d-ih-s ah f-eh1-k sh-ah-n","nn"],disagree:["d-ih-s ah g-r-iy1","vbp vb"],disagreeable:["d-ih-s ah g-r-iy1 ah b-ah-l","jj"],disagreement:["d-ih-s ah g-r-iy1 m-ah-n-t","nn"],disallow:["d-ih-s ah l-aw1","vb"],disallowance:["d-ih-s ah l-aw1 ah-n-s","nn"],disappear:["d-ih-s ah p-ih1-r","vb vbp"],disappearance:["d-ih-s ah p-ih1 r-ah-n-s","nn"],disappoint:["d-ih-s ah p-oy1-n-t","vb"],disappointed:["d-ih-s ah p-oy1-n t-ih-d","vbn jj vbd"],disappointing:["d-ih-s ah p-oy1-n t-ih-ng","jj"],disappointingly:["d-ih-s ah p-oy1-n t-ih-ng l-iy","rb"],disappointment:["d-ih-s ah p-oy1-n-t m-ah-n-t","nn"],disapproval:["d-ih-s ah p-r-uw1 v-ah-l","nn"],disapprove:["d-ih-s ah p-r-uw1-v","vbp vb"],disapproving:["d-ih-s ah p-r-uw1 v-ih-ng","jj"],disarm:["d-ih-s aa1-r-m","vb"],disarmament:["d-ih-s aa1-r m-ah m-ah-n-t","nn"],disarmed:["d-ih-s aa1-r-m-d","jj vbn"],disarming:["d-ih-s aa1-r m-ih-ng","vbg jj"],disarmingly:["d-ih-s aa1-r m-ih-ng l-iy","rb"],disarray:["d-ih-s er ey1","nn"],disassemble:["d-ih-s-ah-s-eh1-m-b-ah-l","vb"],disassociate:["d-ih-s ah s-ow1 sh-iy ey-t","vb"],disaster:["d-ih z-ae1 s-t-er","nn"],disastrous:["d-ih z-ae1 s-t-r-ah-s","jj"],disastrously:["d-ih z-ae1 s-t-r-ah-s l-iy","rb"],disavow:["d-ih-s-ah-v-aw1","vb"],disband:["d-ih-s b-ae1-n-d","vb"],disbanded:["d-ih-s b-ae1-n d-ih-d","vbn vbd jj"],disbelief:["d-ih-s b-ih l-iy1-f","nn"],disbelieve:["d-ih-s b-ah l-iy1-v","vb"],disburse:["d-ih-s-b-er1-s","vb"],disbursement:["d-ih-s b-er1-s m-ah-n-t","nn"],disc:["d-ih1-s-k","nn"],discard:["d-ih-s k-aa1-r-d","vb vbp"],discern:["d-ih s-er1-n","vb vbp"],discernible:["d-ih s-er1 n-ah b-ah-l","jj"],discerning:["d-ih s-er1 n-ih-ng","jj"],discernment:["d-ih s-er1-n m-ah-n-t","nn"],discharge:["d-ih-s ch-aa1-r-jh","nn vb"],disciple:["d-ih s-ay1 p-ah-l","nn"],disciplinary:["d-ih1 s-ah p-l-ah n-eh r-iy","jj"],discipline:["d-ih1 s-ah p-l-ah-n","nn vb vbp"],disciplined:["d-ih1 s-ah p-l-ah-n-d","vbn vbd jj"],disclaim:["d-ih-s-k-l-ey1-m","vb"],disclaimer:["d-ih-s k-l-ey1 m-er","nn"],disclose:["d-ih-s k-l-ow1-z","vb vbp"],disclosed:["d-ih-s k-l-ow1-z-d","vbn jj vbd"],disclosure:["d-ih-s k-l-ow1 zh-er","nn"],disco:["d-ih1 s-k-ow","nn"],discolor:["d-ih-s-k-ah1-l-er","vb"],discomfort:["d-ih-s k-ah1-m f-er-t","nn"],disconcert:["d-ih-s-k-ah-n-s-er1-t","vb"],disconcerting:["d-ih-s k-ah-n s-er1 t-ih-ng","jj vbg"],disconnect:["d-ih-s k-ah n-eh1-k-t","vb"],disconnected:["d-ih-s k-ah n-eh1-k t-ih-d","vbn jj"],discontent:["d-ih-s k-ah-n t-eh1-n-t","nn"],discontented:["d-ih-s k-ah-n t-eh1-n t-ih-d","jj"],discontinuance:["d-ih-s k-ah-n t-ih1 n-y-uw ah-n-s","nn"],discontinuation:["d-ih-s k-ah-n t-ih n-y-uw ey1 sh-ah-n","nn"],discontinue:["d-ih-s k-ah-n t-ih1 n-y-uw","vb"],discontinued:["d-ih-s k-ah-n t-ih1 n-y-uw-d","vbn jj vbd"],discord:["d-ih1 s-k-ao-r-d","nn"],discordant:["d-ih s-k-ao1-r d-ah-n-t","jj"],discotheque:["d-ih1 s-k-ow t-eh-k","nn"],discount:["d-ih-s k-aw1-n-t","nn vbp jj vb"],discounted:["d-ih1-s k-aw-n t-ih-d","vbn jj vbd"],discounter:["d-ih1-s k-aw-n t-er","nn"],discourage:["d-ih s-k-er1 ih-jh","vb vbp"],discouraged:["d-ih s-k-er1 ah-jh-d","vbn vbd jj"],discouragement:["d-ih s-k-er1 ih-jh m-ah-n-t","nn"],discouraging:["d-ih s-k-er1 ah jh-ih-ng","vbg jj"],discourse:["d-ih1-s k-ao-r-s","nn vb"],discover:["d-ih s-k-ah1 v-er","vb vbp"],discovered:["d-ih s-k-ah1 v-er-d","vbn jj vbd"],discovery:["d-ih s-k-ah1 v-er iy","nn"],discredit:["d-ih-s k-r-eh1 d-ah-t","vb nn"],discredited:["d-ih-s k-r-eh1 d-ih t-ih-d","vbn jj"],discreet:["d-ih s-k-r-iy1-t","jj"],discreetly:["d-ih s-k-r-iy1-t l-iy","rb"],discrepancy:["d-ih s-k-r-eh1 p-ah-n s-iy","nn"],discrete:["d-ih s-k-r-iy1-t","jj"],discretion:["d-ih s-k-r-eh1 sh-ah-n","nn"],discretionary:["d-ih s-k-r-eh1 sh-ah-n eh r-iy","jj"],discriminate:["d-ih s-k-r-ih1 m-ah n-ey-t","vb vbp jj"],discriminated:["d-ih s-k-r-ih1 m-ah n-ey t-ah-d","vbd jj nn vb"],discriminating:["d-ih s-k-r-ih1 m-ah n-ey t-ih-ng","vbg jj"],discrimination:["d-ih s-k-r-ih m-ah n-ey1 sh-ah-n","nn"],discriminatory:["d-ih s-k-r-ih1 m-ah n-ah t-ao r-iy","jj"],discursive:["d-ih s-k-er1 s-ih-v","jj"],discus:["d-ih1 s-k-ah-s","nn"],discuss:["d-ih s-k-ah1-s","vb vbp"],discussion:["d-ih s-k-ah1 sh-ah-n","nn"],disdain:["d-ih-s d-ey1-n","nn vbp vb"],disdainful:["d-ih-s d-ey1-n f-ah-l","jj"],disease:["d-ih z-iy1-z","nn"],diseased:["d-ih z-iy1-z-d","jj"],disembodied:["d-ih-s ih b-aa1 d-iy-d","jj"],disenchant:["d-ih-s ih-n ch-ae1-n t-ih-d","vb"],disenchanted:["d-ih-s ih-n ch-ae1-n t-ih-d","vbn jj"],disenfranchise:["d-ih-s-ih-n-f-r-ae1-n-ch-ay-z","vb"],disenfranchisement:["d-ih-s ih-n f-r-ae1-n ch-ay-z m-ah-n-t","nn"],disengage:["d-ih-s ih-n g-ey1-jh","vb"],disengagement:["d-ih-s ih-n g-ey1-jh m-ah-n-t","nn"],disentangle:["d-ih-s ah-n t-ae1-ng g-ah-l","vb"],disfavor:["d-ih-s f-ey1 v-er","nn"],disfigure:["d-ih-s-f-ih1-g-y-er","vb"],disfigured:["d-ih-s f-ih1 g-y-er-d","vbd vbn jj"],disgorge:["d-ih-s g-ao1-r-jh","vb"],disgorgement:["d-ih-s g-ao1-r-jh m-ah-n-t","nn"],disgrace:["d-ih-s g-r-ey1-s","nn vb"],disgraceful:["d-ih-s g-r-ey1-s f-ah-l","jj"],disgruntle:["d-ih-s g-r-ah1-n t-ah-l","vb"],disgruntled:["d-ih-s g-r-ah1-n t-ah-l-d","jj vbn"],disguise:["d-ih-s g-ay1-z","vb vbp nn"],disguised:["d-ih-s g-ay1-z-d","vbn vbd jj"],disgust:["d-ih-s g-ah1-s-t","nn vb"],disgusted:["d-ih-s g-ah1 s-t-ah-d","vbn jj"],disgusting:["d-ih-s g-ah1 s-t-ih-ng","jj"],dish:["d-ih1-sh","nn vb"],disharmony:["d-ih-s hh-aa1-r m-ah n-iy","nn"],dishearten:["d-ih-s hh-aa1-r t-ah-n","vb"],disheartening:["d-ih-s hh-aa1-r t-ah-n ih-ng","jj"],disheveled:["d-ih sh-eh1 v-ah-l-d","jj"],dishonest:["d-ih-s aa1 n-ah-s-t","jj"],dishonestly:["d-ih-s ao1 n-ah-s-t l-iy","rb"],dishonesty:["d-ih-s aa1 n-ah s-t-iy","nn"],dishonor:["d-ih-s aa1 n-er","nn vb"],dishonorable:["d-ih-s aa1 n-er ah b-ah-l","jj"],dishwasher:["d-ih1-sh w-aa sh-er","nn"],disillusion:["d-ih-s-ih-l-uw1-zh-ah-n","vb"],disillusioned:["d-ih-s ih l-uw1 zh-ah-n-d","vbn jj"],disillusioning:["d-ih-s ih l-uw1 zh-ah-n ih-ng","jj"],disillusionment:["d-ih-s ih l-uw1 zh-ah-n m-ah-n-t","nn"],disincentive:["d-ih-s ih-n s-eh1-n t-ih-v","nn"],disinclination:["d-ih-s ih-n k-l-ah n-ey1 sh-ah-n","nn"],disincline:["d-ih-s-ih-n-k-l-ay1-n","vb"],disinclined:["d-ih-s ih-n k-l-ay1-n-d","vbn jj"],disinfectant:["d-ih-s ih-n f-eh1-k t-ah-n-t","nn"],disinflation:["d-ih-s ih-n f-l-ey1 sh-ah-n","nn"],disinflationary:["d-ih-s ih-n f-l-ey1 sh-ah-n eh r-iy","jj"],disingenuous:["d-ih-s ih-n jh-eh1 n-y-uw ah-s","jj"],disintegrate:["d-ih-s ih1-n t-ah g-r-ey-t","vb"],disintegration:["d-ih-s ih-n t-ah g-r-ey1 sh-ah-n","nn"],disinterest:["d-ih-s ih1-n t-er ah-s-t","nn"],disinterested:["d-ih-s ih1-n t-r-ih s-t-ih-d","jj"],disjoint:["d-ih-s-jh-oy1-n-t","vb"],disjointed:["d-ih-s jh-oy1-n t-ih-d","vbn jj"],disk:["d-ih1-s-k","nn"],diskette:["d-ih s-k-eh1-t","nn"],dislike:["d-ih-s l-ay1-k","nn vb vbp"],disliked:["d-ih-s l-ay1-k-t","vbd jj vbn"],dislocated:["d-ih1-s l-ow k-ey t-ih-d","jj"],dislocation:["d-ih-s l-ow1 k-ey1 sh-ah-n","nn"],dislodge:["d-ih-s l-aa1-jh","vb"],disloyal:["d-ih-s l-oy1 ah-l","jj"],disloyalty:["d-ih-s l-oy1 ah-l t-iy","nn"],dismal:["d-ih1-z m-ah-l","jj"],dismally:["d-ih1-z m-ah l-iy","rb"],dismantle:["d-ih-s m-ae1-n t-ah-l","vb"],dismay:["d-ih-s m-ey1","nn vb"],dismayed:["d-ih-s m-ey1-d","vbn jj"],dismember:["d-ih-s m-eh1-m b-er","vb"],dismemberment:["d-ih-s m-eh1-m b-er m-ah-n-t","nn"],dismiss:["d-ih-s m-ih1-s","vb vbp"],dismissal:["d-ih-s m-ih1 s-ah-l","nn"],disobedience:["d-ih-s ah b-iy1 d-iy ah-n-s","nn"],disobey:["d-ih-s ah b-ey1","vb"],disorder:["d-ih-s ao1-r d-er","nn vb"],disorderly:["d-ih-s ao1-r d-er l-iy","jj"],disorganization:["d-ih-s ao-r g-ah n-ah z-ey1 sh-ah-n","nn"],disorganize:["d-ih-s-ao1-r-g-ah-n-ay-z","vb"],disorganized:["d-ih-s ao1-r g-ah n-ay-z-d","jj vbn"],disorient:["d-ih-s-ao1-r-iy-eh-n-t","vb"],disoriented:["d-ih-s ao1 r-iy eh-n t-ih-d","vbn jj"],disown:["d-ih-s-ow1-n","vb"],disparage:["d-ih s-p-eh1 r-ih-jh","vb"],disparate:["d-ih1 s-p-er ih-t","jj"],disparity:["d-ih s-p-eh1 r-ah t-iy","nn"],dispassionate:["d-ih s-p-ae1 sh-ah-n ah-t","jj"],dispassionately:["d-ih s-p-ae1 sh-ah-n ah-t l-iy","rb"],dispatch:["d-ih s-p-ae1-ch","nn vb"],dispatcher:["d-ih s-p-ae1 ch-er","nn"],dispel:["d-ih s-p-eh1-l","vb"],dispensable:["d-ih s-p-eh1-n s-ah b-ah-l","jj"],dispense:["d-ih s-p-eh1-n-s","vb vbp"],dispenser:["d-ih s-p-eh1-n s-er","nn"],dispersal:["d-ih s-p-er1 s-ah-l","nn"],dispersant:["d-ih s-p-er1 s-ah-n-t","nn"],disperse:["d-ih s-p-er1-s","vb"],dispersed:["d-ih s-p-er1-s-t","vbn jj vbd"],dispersion:["d-ih s-p-er1 zh-ah-n","nn"],displace:["d-ih-s p-l-ey1-s","vb"],displacement:["d-ih-s p-l-ey1-s m-ah-n-t","nn"],display:["d-ih s-p-l-ey1","nn vbp vb"],displease:["d-ih-s-p-l-iy1-z","vb"],displeased:["d-ih-s p-l-iy1-z-d","vbn jj"],displeasure:["d-ih-s p-l-eh1 zh-er","nn"],disposable:["d-ih s-p-ow1 z-ah b-ah-l","jj nn"],disposal:["d-ih s-p-ow1 z-ah-l","nn"],dispose:["d-ih s-p-ow1-z","vb"],disposed:["d-ih s-p-ow1-z-d","vbn jj vbd"],disposition:["d-ih s-p-ah z-ih1 sh-ah-n","nn"],dispossess:["d-ih-s-p-ah-z-eh1-s","vb"],dispossessed:["d-ih-s p-ah z-eh1-s-t","vbn jj"],disprove:["d-ih-s p-r-uw1-v","vb"],dispute:["d-ih s-p-y-uw1-t","nn vbp vb"],disputed:["d-ih s-p-y-uw1 t-ah-d","vbn vbd jj"],disqualification:["d-ih-s k-w-aa l-ah f-ah k-ey1 sh-ah-n","nn"],disqualified:["d-ih-s k-w-aa1 l-ah f-ay-d","vbn vbd"],disqualify:["d-ih-s k-w-aa1 l-ah f-ay","vb"],disquiet:["d-ih-s k-w-ay1 ah-t","nn"],disquieting:["d-ih-s k-w-ay1 ah t-ih-ng","jj"],disregard:["d-ih-s r-ih g-aa1-r-d","nn vb"],disrepair:["d-ih-s r-ih p-eh1-r","nn"],disreputable:["d-ih-s r-eh1 p-y-ah t-ah b-ah-l","jj"],disrepute:["d-ih-s r-ih p-y-uw1-t","nn"],disrespect:["d-ih-s r-ih s-p-eh1-k-t","nn"],disrupt:["d-ih-s r-ah1-p-t","vb vbp"],disrupted:["d-ih-s r-ah1-p t-ih-d","vbn jj vbd"],disruption:["d-ih-s r-ah1-p sh-ah-n","nn"],disruptive:["d-ih-s r-ah1-p t-ih-v","jj"],dissatisfaction:["d-ih-s ae t-ih-s f-ae1-k sh-ah-n","nn"],dissatisfied:["d-ih-s ae1 t-ah-s f-ay-d","jj vbn"],dissatisfy:["d-ih-s-ae1-t-ah-s-f-ay","vb"],dissect:["d-ay-s-eh1-k-t","vb"],dissection:["d-ay s-eh1-k sh-ah-n","nn"],disseminate:["d-ih s-eh1 m-ah n-ey-t","vb"],dissemination:["d-ih s-eh m-ah n-ey1 sh-ah-n","nn"],dissension:["d-ih s-eh1-n sh-ah-n","nn"],dissent:["d-ih s-eh1-n-t","nn vbp vb"],dissenter:["d-ih s-eh1-n t-er","nn"],dissenting:["d-ih s-eh1-n t-ih-ng","jj vbg"],disservice:["d-ih-s s-er1 v-ah-s","nn"],dissident:["d-ih1 s-ah d-ih-n-t","jj nn"],dissimilar:["d-ih s-s-ih1 m-ah l-er","jj"],dissipate:["d-ih1 s-ah p-ey-t","vb"],dissociate:["d-ih s-ow1 s-iy ey-t","vb"],dissociation:["d-ih s-ow s-iy ey1 sh-ah-n","nn"],dissolution:["d-ih s-ah l-uw1 sh-ah-n","nn"],dissolve:["d-ih z-aa1-l-v","vb vbp nn"],dissolving:["d-ih z-ao1-l v-ih-ng","vbg jj"],dissonance:["d-ih1 s-ah n-ah-n-s","nn"],dissuade:["d-ih s-w-ey1-d","vb"],distal:["d-ih1 s-t-ah-l","jj"],distance:["d-ih1 s-t-ah-n-s","nn vb"],distant:["d-ih1 s-t-ah-n-t","jj"],distaste:["d-ih-s t-ey1-s-t","nn"],distasteful:["d-ih-s t-ey1-s-t f-ah-l","jj"],distill:["d-ih-s-t-ih1-l","vb"],distillate:["d-ih1 s-t-ah l-ey-t","nn"],distillation:["d-ih s-t-ah l-ey1 sh-ah-n","nn"],distilled:["d-ih s-t-ih1-l-d","vbn jj"],distiller:["d-ih s-t-ih1 l-er","nn"],distillery:["d-ih s-t-ih1 l-er iy","nn"],distinct:["d-ih s-t-ih1-ng-k-t","jj"],distinction:["d-ih s-t-ih1-ng-k sh-ah-n","nn"],distinctive:["d-ih s-t-ih1-ng-k t-ih-v","jj"],distinctively:["d-ih s-t-ih1-ng-k t-ih-v l-iy","rb"],distinctiveness:["d-ih s-t-ih1-ng-k t-ih-v n-ah-s","nn"],distinctly:["d-ih s-t-ih1-ng-k-t l-iy","rb"],distinguish:["d-ih s-t-ih1-ng g-w-ih-sh","vb vbp"],distinguishable:["d-ih s-t-ih1-ng g-w-ih sh-ah b-ah-l","jj"],distinguished:["d-ih s-t-ih1-ng g-w-ih-sh-t","vbn jj vbd"],distinguishing:["d-ih s-t-ih1-ng g-w-ih sh-ih-ng","vbg jj"],distort:["d-ih s-t-ao1-r-t","vb vbp"],distorted:["d-ih s-t-ao1-r t-ah-d","vbn vbd jj"],distortion:["d-ih s-t-ao1-r sh-ah-n","nn"],distract:["d-ih s-t-r-ae1-k-t","vb"],distracting:["d-ih s-t-r-ae1-k t-ih-ng","vbg jj"],distraction:["d-ih-s t-r-ae1-k sh-ah-n","nn"],distraught:["d-ih s-t-r-ao1-t","jj"],distress:["d-ih s-t-r-eh1-s","nn vb"],distressed:["d-ih s-t-r-eh1-s-t","jj vbn"],distressing:["d-ih s-t-r-eh1 s-ih-ng","jj"],distressingly:["d-ih s-t-r-eh1 s-ih-ng l-iy","rb"],distribute:["d-ih s-t-r-ih1 b-y-uw-t","vb vbp"],distributed:["d-ih-s t-r-ih1 b-y-ah t-ah-d","vbn vbd jj"],distribution:["d-ih-s t-r-ah b-y-uw1 sh-ah-n","nn"],distributive:["d-ih s-t-r-ih1 b-y-uw t-ih-v","jj"],distributor:["d-ih-s t-r-ih1 b-y-ah t-er","nn"],distributorship:["d-ih s-t-r-ih1 b-y-uw t-er sh-ih-p","nn"],district:["d-ih1 s-t-r-ih-k-t","nn jj"],distrust:["d-ih-s t-r-ah1-s-t","nn vbp vb"],disturb:["d-ih s-t-er1-b","vb vbp"],disturbance:["d-ih s-t-er1 b-ah-n-s","nn"],disturbed:["d-ih s-t-er1-b-d","vbn vbd jj"],disturbing:["d-ih s-t-er1 b-ih-ng","jj vbg"],disturbingly:["d-ih s-t-er1 b-ih-ng l-iy","rb"],disunion:["d-ih-s y-uw1 n-y-ah-n","nn"],disunity:["d-ih-s y-uw1 n-ah t-iy","nn"],ditch:["d-ih1-ch","nn vb"],dither:["d-ih1-dh-er","vb"],ditto:["d-ih1 t-ow","nn"],ditty:["d-ih1 t-iy","nn"],diuretic:["d-ay uw r-eh1 t-ih-k","nn jj"],diurnal:["d-ay er1 n-ah-l","jj"],diva:["d-iy1 v-ah","nn"],divan:["d-ih v-ae1-n","nn"],dive:["d-ay1-v","nn vbp vb"],diver:["d-ay1 v-er","nn"],diverge:["d-ih v-er1-jh","vb vbp"],divergence:["d-ay v-er1 jh-ah-n-s","nn"],divergent:["d-ay v-er1 jh-ah-n-t","jj"],diverse:["d-ay v-er1-s","jj"],diversification:["d-ay v-er s-ah f-ah k-ey1 sh-ah-n","nn"],diversified:["d-ay v-er1 s-ah f-ay-d","jj vbd vbn"],diversify:["d-ay v-er1 s-ah f-ay","vb"],diversion:["d-ay v-er1 zh-ah-n","nn"],diversionary:["d-ay v-er1 zh-ah-n eh r-iy","jj"],diversity:["d-ih v-er1 s-ah t-iy","nn"],divert:["d-ay v-er1-t","vb vbp"],divertimento:["d-ih v-er t-ah m-eh1-n t-ow","jj"],divest:["d-ay v-eh1-s-t","vb vbp"],divested:["d-ay v-eh1 s-t-ih-d","vbn jj vbd"],divestiture:["d-ih v-eh1 s-t-ih ch-er","nn"],divestment:["d-ay v-eh1-s-t m-ah-n-t","nn"],divide:["d-ih v-ay1-d","vb nn vbp"],divided:["d-ih v-ay1 d-ah-d","vbn vbd jj"],dividend:["d-ih1 v-ih d-eh-n-d","nn"],divider:["d-ih v-ay1 d-er","nn"],dividing:["d-ih v-ay1 d-ih-ng","vbg jj"],divination:["d-ih v-ah n-ey1 sh-ah-n","nn"],divine:["d-ih v-ay1-n","jj nn vb"],divinely:["d-ih v-ay1-n l-iy","rb"],diving:["d-ay1 v-ih-ng","vbg jj nn"],divinity:["d-ih v-ih1 n-ah t-iy","nn"],divisible:["d-ih v-ih1 z-ah b-ah-l","jj"],division:["d-ih v-ih1 zh-ah-n","nn"],divisional:["d-ih v-ih1 zh-ah n-ah-l","jj"],divisive:["d-ih v-ay1 s-ih-v","jj"],divisiveness:["d-ih v-ay1 s-ih-v n-ah-s","nn"],divorce:["d-ih v-ao1-r-s","nn vb vbp"],divorced:["d-ih v-ao1-r-s-t","vbn jj vbd"],divorcee:["d-ah v-ao1-r s-iy","nn"],divulge:["d-ih v-ah1-l-jh","vb"],divvied:["d-ih1 v-iy-d","vbn"],divvy:["d-ih1-v-iy","vb"],dizziness:["d-ih1 z-iy n-ah-s","nn"],dizzy:["d-ih1 z-iy","jj vb"],dizzying:["d-ih1 z-iy ih-ng","jj vbg"],do:["d-uw1","vb"],doable:["d-uw1 ah b-ah-l","jj"],docile:["d-aa1 s-ah-l","jj"],dock:["d-aa1-k","nn vb"],docket:["d-aa1 k-ah-t","nn"],dockside:["d-aa1-k s-ay-d","nn"],dockworker:["d-aa1-k w-er k-er","nn"],doctor:["d-aa1-k t-er","nn vb"],doctoral:["d-aa1-k t-er ah-l","jj"],doctorate:["d-aa1-k t-er ah-t","nn"],doctoring:["d-aa1-k t-er ih-ng","nn"],doctrinaire:["d-aa-k t-r-ah n-eh1-r","jj nn"],doctrinal:["d-aa1-k t-r-ah n-ah-l","jj"],doctrine:["d-aa1-k t-r-ah-n","nn"],document:["d-aa1 k-y-ah m-eh-n-t","nn vb vbp"],documentary:["d-aa k-y-ah m-eh1-n t-er iy","nn jj"],documentation:["d-aa k-y-ah m-eh-n t-ey1 sh-ah-n","nn"],doddering:["d-aa1 d-er ih-ng","jj"],dodge:["d-aa1-jh","vbp nn vb"],doe:["d-ow1","nn"],doer:["d-uw1-r","nn"],"doesn't":["d-ah1-z-ah-n-t","vbz"],doff:["d-ao1-f","vb"],dog:["d-ao1-g","nn"],dogfight:["d-aa1-g f-ay-t","nn"],dogged:["d-ao1-g-d","vbn jj vbd"],doggedly:["d-ao1 g-ah-d l-iy","rb"],doggerel:["d-aa1 g-er ah-l","nn"],doghouse:["d-ao1-g hh-aw-s","nn"],dogma:["d-aa1-g m-ah","nn"],dogmatic:["d-aa-g m-ae1 t-ih-k","jj"],dogmatically:["d-aa-g m-ae1 t-ih-k l-iy","rb"],dogmatism:["d-aa1-g m-ah t-ih z-ah-m","nn"],dogwood:["d-ao1-g w-uh-d","nn"],doldrums:["d-ow1-l d-r-ah-m-z","nn"],dole:["d-ow1-l","vb nn vbp"],doleful:["d-ow1-l f-ah-l","jj"],doll:["d-aa1-l","nn"],dollar:["d-aa1 l-er","nn"],dollop:["d-aa1 l-ah-p","nn"],dolphin:["d-aa1-l f-ah-n","nn"],domain:["d-ow m-ey1-n","nn"],dome:["d-ow1-m","nn"],domed:["d-ow1-m-d","jj"],domestic:["d-ah m-eh1 s-t-ih-k","jj nn"],domestically:["d-ah m-eh1 s-t-ih-k l-iy","rb"],domesticity:["d-ow m-eh s-t-ih1 s-ah t-iy","nn"],dominance:["d-aa1 m-ah n-ah-n-s","nn"],dominant:["d-aa1 m-ah n-ah-n-t","jj"],dominate:["d-aa1 m-ah n-ey-t","vb vbp"],dominating:["d-aa1 m-ah n-ey t-ih-ng","vbg jj"],domination:["d-aa m-ah n-ey1 sh-ah-n","nn"],domineer:["d-aa-m-ah-n-ih1-r","vb"],domineering:["d-aa m-ah n-ih1 r-ih-ng","vbg jj"],dominion:["d-ah m-ih1 n-y-ah-n","nn"],domino:["d-aa1 m-ah n-ow","nn"],dominoes:["d-aa1 m-ah n-ow-z","nn"],don:["d-aa1-n","vb nn vbp"],donate:["d-ow1 n-ey-t","vb vbp"],donation:["d-ow n-ey1 sh-ah-n","nn"],done:["d-ah1-n","vbn jj rb vbd"],donkey:["d-aa1-ng k-iy","nn"],donna:["d-aa1 n-ah","nn"],donnybrook:["d-aa1 n-iy b-r-uh-k","nn"],donor:["d-ow1 n-er","nn"],donut:["d-ow1 n-ah-t","nn"],"don't":["d-ow1-n-t","vbp"],doo:["d-uw1","nn vb"],doodad:["d-uw1 d-ae-d","nn"],doom:["d-uw1-m","nn vb"],doomed:["d-uw1-m-d","vbn vbd jj"],doomsayer:["d-uw-m s-ey1 er","nn"],doomsday:["d-uw1-m-z d-ey","nn"],door:["d-ao1-r","nn rb"],doorkeeper:["d-ao1-r k-iy p-er","nn"],doorknob:["d-uw1-r n-aa-b","nn"],doorman:["d-ao1-r m-ae-n","nn"],doorstep:["d-ao1-r s-t-eh-p","nn"],doorway:["d-ao1-r w-ey","nn"],dope:["d-ow1-p","nn"],doped:["d-ow1-p-t","jj"],dorm:["d-ao1-r-m","nn"],dormant:["d-ao1-r m-ah-n-t","jj"],dormitory:["d-ao1-r m-ah t-ao r-iy","nn"],dosage:["d-ow1 s-ah-jh","nn"],dose:["d-ow1-s","nn"],dossier:["d-ao s-y-ey1","nn"],dot:["d-aa1-t","nn vbp vb"],doting:["d-ow1 t-ih-ng","vbg jj"],dotted:["d-aa1 t-ah-d","vbn vbd jj"],double:["d-ah1 b-ah-l","jj vbp nn rb vb"],doubly:["d-ah1 b-l-iy","rb"],doubt:["d-aw1-t","nn vbp rb vb"],doubter:["d-aw1 t-er","nn"],doubtful:["d-aw1-t f-ah-l","jj"],doubting:["d-aw1 t-ih-ng","vbg jj"],doubtless:["d-aw1-t l-ah-s","rb"],dough:["d-ow1","nn"],doughnut:["d-ow1 n-ah-t","nn"],doughty:["d-ao1 t-iy","jj"],dour:["d-aw1 er","jj"],douse:["d-aw1-s","vb"],dove:["d-ah1-v","nn vbd"],dovetail:["d-ah1-v t-ey-l","vbp vb"],dovish:["d-ow1 v-ih-sh","jj"],dowdy:["d-aw1 d-iy","jj"],dowel:["d-aw1 ah-l","nn"],dower:["d-aw1-r","nn"],down:["d-aw1-n","rb in rbr vbp jj nn rp vb"],downbeat:["d-aw-n b-iy1-t","jj nn"],downcast:["d-aw1-n k-ae-s-t","jj"],downdraft:["d-aw1-n d-r-ae-f-t","nn"],downer:["d-aw1 n-er","nn"],downfall:["d-aw1-n f-ao-l","nn"],downgrade:["d-aw1-n g-r-ey1-d","nn vb"],downhill:["d-aw1-n hh-ih1-l","rb jj"],downpayment:["d-aw-n p-ey1 m-ah-n-t","nn"],downplay:["d-aw1-n p-l-ey","vb"],downpour:["d-aw1-n p-ao-r","nn"],downright:["d-aw1-n r-ay-t","rb jj"],downside:["d-aw1-n s-ay-d","nn jj"],downsize:["d-aw1-n s-ay-z","vb"],downstairs:["d-aw1-n s-t-eh1-r-z","nn rb"],downstream:["d-aw1-n s-t-r-iy1-m","rb jj"],downtime:["d-aw1-n t-ay-m","nn"],downtown:["d-aw1-n t-aw1-n","nn jj rb"],downtrend:["d-aw1-n t-r-eh-n-d","nn"],downtrodden:["d-aw-n t-r-aa1 d-ah-n","jj"],downturn:["d-aw1-n t-er-n","nn"],downward:["d-aw1-n w-er-d","jj rb"],dowry:["d-aw1 r-iy","nn"],doze:["d-ow1-z","vb"],dozen:["d-ah1 z-ah-n","nn"],drab:["d-r-ae1-b","jj"],drachma:["d-r-ae1-k m-ah","nn"],draconian:["d-r-ey k-ow1 n-iy ah-n","jj"],draft:["d-r-ae1-f-t","nn jj vb vbp"],draftee:["d-r-ae1-f t-iy1","nn"],drafter:["d-r-ae1-f t-er","nn"],drafty:["d-r-ae1-f t-iy","jj"],drag:["d-r-ae1-g","nn vbp vb"],dragnet:["d-r-ae1-g n-eh-t","nn"],dragon:["d-r-ae1 g-ah-n","nn"],drain:["d-r-ey1-n","nn vbp vb"],drainage:["d-r-ey1 n-ah-jh","nn"],dram:["d-r-ae1-m","nn"],drama:["d-r-aa1 m-ah","nn"],dramas:["d-r-aa1 m-ah-z","nn"],dramatic:["d-r-ah m-ae1 t-ih-k","jj"],dramatically:["d-r-ah m-ae1 t-ih-k l-iy","rb"],dramatist:["d-r-aa1 m-ah t-ih-s-t","nn"],dramatization:["d-r-ae m-ah t-ah z-ey1 sh-ah-n","nn"],dramatize:["d-r-aa1 m-ah t-ay-z","vb vbp"],drank:["d-r-ae1-ng-k","vbd"],drape:["d-r-ey1-p","nn vb"],draped:["d-r-ey1-p-t","vbd jj vbn"],draper:["d-r-ey1 p-er","nn"],drapery:["d-r-ey1 p-er iy","nn"],drastic:["d-r-ae1 s-t-ih-k","jj rb"],drastically:["d-r-ae1 s-t-ih-k l-iy","rb"],draught:["d-r-ae1-f-t","nn"],draughts:["d-r-ae1-f-t-s","nn"],draw:["d-r-ao1","vb vbp nn"],drawback:["d-r-ao1 b-ae-k","nn"],drawbridge:["d-r-ao1 b-r-ih-jh","nn"],drawdown:["d-r-ao1 d-aw-n","nn"],drawer:["d-r-ao1-r","nn"],drawing:["d-r-ao1 ih-ng","vbg jj nn"],drawl:["d-r-ao1-l","nn vb"],drawn:["d-r-ao1-n","vbn jj"],dread:["d-r-eh1-d","nn jj vb"],dreaded:["d-r-eh1 d-ih-d","vbn vbd jj"],dreadful:["d-r-eh1-d f-ah-l","jj nn"],dreadfully:["d-r-eh1-d f-ah l-iy","rb"],dream:["d-r-iy1-m","nn vb vbp"],dreamer:["d-r-iy1 m-er","nn"],dreamlike:["d-r-iy1-m l-ay-k","jj"],dreamt:["d-r-eh1-m-t","vbd vbn"],dreamy:["d-r-iy1 m-iy","jj"],dreariness:["d-r-iy1 r-iy n-ah-s","nn"],dreary:["d-r-ih1 r-iy","jj"],dredge:["d-r-eh1-jh","vb"],dreg:["d-r-eh1-g","nn"],drenching:["d-r-eh1-n ch-ih-ng","nn"],dress:["d-r-eh1-s","nn vbp vb"],dressed:["d-r-eh1-s-t","vbn jj vbd"],dresser:["d-r-eh1 s-er","nn"],dressing:["d-r-eh1 s-ih-ng","nn vbg jj"],dressmaking:["d-r-eh1-s m-ey k-ih-ng","nn"],dressy:["d-r-eh1 s-iy","jj"],drew:["d-r-uw1","vbd"],dribble:["d-r-ih1 b-ah-l","nn vb"],dried:["d-r-ay1-d","vbn vbd jj"],drier:["d-r-ay1 er","nn jjr rbr"],drift:["d-r-ih1-f-t","nn vbp vb"],drifter:["d-r-ih1-f t-er","nn"],drifting:["d-r-ih1-f t-ih-ng","vbg jj nn"],driftnet:["d-r-ih1-f-t n-eh-t","nn"],driftwood:["d-r-ih1-f-t w-uh-d","nn"],drill:["d-r-ih1-l","nn vb"],driller:["d-r-ih1 l-er","nn"],drilling:["d-r-ih1 l-ih-ng","nn jj vbg"],drink:["d-r-ih1-ng-k","nn vbp vb"],drinker:["d-r-ih1-ng k-er","nn"],drinking:["d-r-ih1-ng k-ih-ng","nn jj vbg"],drip:["d-r-ih1-p","nn vb"],drive:["d-r-ay1-v","nn vbp vb"],driven:["d-r-ih1 v-ah-n","vbn jj"],driver:["d-r-ay1 v-er","nn"],driveway:["d-r-ay1-v w-ey","nn"],driving:["d-r-ay1 v-ih-ng","vbg jj nn"],drizzle:["d-r-ih1 z-ah-l","nn vb"],drizzly:["d-r-ih1-z l-iy","jj"],drone:["d-r-ow1-n","nn jj"],drool:["d-r-uw1-l","vb"],droop:["d-r-uw1-p","vb vbp nn"],drop:["d-r-aa1-p","nn jj vb vbp"],droplet:["d-r-aa1 p-l-ah-t","nn"],dropoff:["d-r-aa1 p-ao-f","nn"],dropout:["d-r-aa1-p aw-t","nn"],dropper:["d-r-aa1 p-er","nn"],dross:["d-r-ao1-s","nn"],drought:["d-r-aw1-t","nn"],drove:["d-r-ow1-v","vbd nn"],drover:["d-r-ow1 v-er","nn"],drown:["d-r-aw1-n","vb vbp"],drowned:["d-r-aw1-n-d","vbn jj vbd"],drowsy:["d-r-aw1 z-iy","jj"],drub:["d-r-ah1-b","vb"],drubbing:["d-r-ah1 b-ih-ng","nn"],drudgery:["d-r-ah1 jh-er iy","nn"],drug:["d-r-ah1-g","nn"],drugged:["d-r-ah1-g-d","vbn jj"],druggist:["d-r-ah1 g-ih-s-t","nn"],drugstore:["d-r-ah1-g s-t-ao-r","nn"],drum:["d-r-ah1-m","vb nn"],drumbeat:["d-r-ah1-m b-iy-t","nn"],drummer:["d-r-ah1 m-er","nn"],drunk:["d-r-ah1-ng-k","jj nn vbn"],drunkard:["d-r-ah1-ng k-er-d","nn"],drunken:["d-r-ah1-ng k-ah-n","jj"],drunkenness:["d-r-ah1-ng k-ah-n n-ah-s","nn"],dry:["d-r-ay1","jj vb vbp"],dryer:["d-r-ay1 er","nn"],dryly:["d-r-ay1 l-iy","rb"],dryness:["d-r-ay1 n-ah-s","nn"],dual:["d-uw1 ah-l","jj"],dualism:["d-uw1 ah l-ih z-ah-m","nn"],dub:["d-ah1-b","vb"],dubious:["d-uw1 b-iy ah-s","jj"],duck:["d-ah1-k","nn vb"],duckling:["d-ah1 k-l-ih-ng","nn"],duct:["d-ah1-k-t","nn"],dud:["d-ah1-d","nn"],dudgeon:["d-ah1 jh-ah-n","nn"],due:["d-uw1","jj nn "],duel:["d-uw1 ah-l","nn vb"],duet:["d-uw eh1-t","nn"],duffel:["d-ah1 f-ah-l","nn"],duffer:["d-ah1 f-er","nn"],dug:["d-ah1-g","vbd vbn"],dugout:["d-ah1-g aw-t","nn"],duke:["d-uw1-k","nn"],dull:["d-ah1-l","jj vb"],duller:["d-ah1 l-er","jjr rbr"],dullest:["d-ah1 l-ah-s-t","jjs"],dullness:["d-ah1-l n-ah-s","nn"],duly:["d-uw1 l-iy","rb"],dumb:["d-ah1-m","jj"],dumbbell:["d-ah1-m b-eh-l","nn"],dumber:["d-ah1 m-er","jjr"],dumbest:["d-ah1 m-ah-s-t","jjs"],dumbfounded:["d-ah1-m f-aw-n d-ih-d","jj vbn"],dummy:["d-ah1 m-iy","jj nn"],dump:["d-ah1-m-p","vb vbp nn"],dumpster:["d-ah1-m-p s-t-er","nn"],dumpy:["d-ah1-m p-iy","jj"],dun:["d-ah1-n","nn"],dune:["d-uw1-n","nn"],dung:["d-ah1-ng","nn"],dungeon:["d-ah1-n jh-ah-n","nn"],dunk:["d-ah1-ng-k","nn vb"],duo:["d-uw1 ow","nn"],duodenal:["d-uw1 ah d-iy1 n-ah-l","jj"],duopoly:["d-uw1 ow p-aa l-iy","rb"],dupe:["d-uw1-p","vb"],duplex:["d-uw1 p-l-eh-k-s","nn jj"],duplicate:["d-uw1 p-l-ah k-ah-t","vb jj"],duplication:["d-y-uw p-l-ah k-ey1 sh-ah-n","nn"],duplicative:["d-uw p-l-ih1 k-ah t-ih-v","jj"],duplicity:["d-uw p-l-ih1 s-ih t-iy","nn"],durability:["d-er ah b-ih1 l-ih t-iy","nn"],durable:["d-uh1 r-ah b-ah-l","jj"],duration:["d-uh1 r-ey1 sh-ah-n","nn"],duress:["d-uh1 r-eh-s","nn"],during:["d-uh1 r-ih-ng","in"],durn:["d-er1-n","jj"],dusk:["d-ah1-s-k","nn"],dust:["d-ah1-s-t","nn vb vbp"],dusty:["d-ah1 s-t-iy","jj"],dutiful:["d-uw1 t-iy f-ah-l","jj"],dutifully:["d-uw1 t-iy f-ah l-iy","rb"],duty:["d-uw1 t-iy","nn"],dwarf:["d-w-ao1-r-f","nn vbp vb"],dwell:["d-w-eh1-l","vbp vb"],dweller:["d-w-eh1 l-er","nn"],dwelling:["d-w-eh1 l-ih-ng","nn vbg"],dwelt:["d-w-eh1-l-t","vbd"],dwindle:["d-w-ih1-n d-ah-l","vb"],dye:["d-ay1","nn vb"],dyeing:["d-ay1 ih-ng","nn"],dying:["d-ay1 ih-ng","vbg jj nn"],dyke:["d-ay1-k","nn"],dynamic:["d-ay n-ae1 m-ih-k","jj nn"],dynamism:["d-ay1 n-ah m-ih z-ah-m","nn"],dynamite:["d-ay1 n-ah m-ay-t","nn jj"],dynamo:["d-ay1 n-ah m-ow","nn"],dynastic:["d-ay n-ae1 s-t-ih-k","jj"],dynasty:["d-ay1 n-ah s-t-iy","nn"],dysentery:["d-ih1-s ah-n t-eh r-iy","nn"],dysfunction:["d-ih-s f-ah1-ng-k sh-ah-n","nn"],dyslexia:["d-ih-s l-eh1-k s-iy ah","nn"],dysplasia:["d-ih s-p-l-ey1 zh-ah","nn"],dystrophy:["d-ih1-s t-r-ah f-iy","nn"],each:["iy1-ch","dt"],eager:["iy1 g-er","jj"],eagerly:["iy1 g-er l-iy","rb"],eagerness:["iy1 g-er n-ah-s","nn"],eagle:["iy1 g-ah-l","nn"],ear:["ih1-r","nn"],eared:["ih1-r-d","jj"],earful:["iy1-r f-ah-l","nn"],earl:["er1-l","nn"],earlier:["er1 l-iy er","rbr jjr jj nn rb"],earliest:["er1 l-iy ah-s-t","jjs rbs"],early:["er1 l-iy","jj rb"],earmark:["ih1-r m-aa-r-k","vb"],earmarked:["ih1-r m-aa-r-k-t","vbn vbd jj"],earn:["er1-n","vb vbp"],earned:["er1-n-d","vbd jj vbn"],earner:["er1 n-er","nn"],earnest:["er1 n-ih-s-t","nn jj"],earnestly:["er1 n-ah-s-t l-iy","rb"],earnestness:["er1 n-ah-s-t n-ah-s","nn"],earphone:["ih1-r f-ow-n","nn"],earring:["ih1 r-ih-ng","nn"],earth:["er1-th","nn"],earthbound:["er1-th b-aw-n-d","jj"],earthenware:["er1 th-ah-n w-eh-r","nn"],earthling:["er1-th l-ih-ng","nn"],earthly:["er1-th l-iy","jj"],earthmoving:["er1-th m-uw v-ih-ng","jj nn"],earthquake:["er1-th k-w-ey-k","nn"],earthshaking:["er1-th sh-ey k-ih-ng","jj"],earthworm:["er1-th w-er-m","nn"],earthy:["er1 th-iy","jj"],ease:["iy1-z","vb nn vbp"],easel:["iy1 z-ah-l","nn"],easement:["iy1-z m-ah-n-t","nn"],easier:["iy1 z-iy er","jjr rbr rb"],easiest:["iy1 z-iy ah-s-t","jjs"],easily:["iy1 z-ah l-iy","rb"],easing:["iy1 z-ih-ng","vbg jj nn"],east:["iy1-s-t","jj nn rb"],eastern:["iy1 s-t-er-n","jj"],eastward:["iy1-s-t w-er-d","rb"],easy:["iy1 z-iy","jj rb"],easygoing:["iy1 z-iy g-ow1 ih-ng","jj"],eat:["iy1-t","vb vbp"],eaten:["iy1 t-ah-n","vbn"],eater:["iy1 t-er","nn"],eatery:["iy1 t-er iy","nn"],eating:["iy1 t-ih-ng","vbg jj nn"],eave:["iy1-v","nn"],eavesdrop:["iy1-v-z d-r-aa-p","vb"],ebb:["eh1-b","nn vb"],ebony:["eh1 b-ah n-iy","nn jj"],ebullient:["ih b-ah1-l y-ah-n-t","jj"],eccentric:["ih-k s-eh1-n t-r-ih-k","jj nn"],eccentricity:["eh-k s-ah-n t-r-ih1 s-ah t-iy","nn"],ecclesiastical:["ih k-l-iy z-iy ae1 s-t-ih k-ah-l","jj"],echelon:["eh1 sh-ah l-aa-n","nn"],echo:["eh1 k-ow","nn vbp vb"],eclectic:["ih k-l-eh1-k t-ih-k","jj nn"],eclipse:["ih k-l-ih1-p-s","vb nn vbp"],ecliptic:["ih k-l-ih1-p t-ih-k","nn jj"],ecological:["iy k-ah l-aa1 jh-ih k-ah-l","jj"],ecologically:["iy k-ah l-aa1 jh-ih-k l-iy","rb"],ecologist:["ih k-aa1 l-ah jh-ih-s-t","nn"],ecology:["ih k-aa1 l-ah jh-iy","nn"],economic:["eh k-ah n-aa1 m-ih-k","jj"],economical:["eh k-ah n-aa1 m-ih k-ah-l","jj"],economically:["eh k-ah n-aa1 m-ih-k l-iy","rb"],economics:["eh k-ah n-aa1 m-ih-k-s","nn"],economist:["ih k-aa1 n-ah m-ih-s-t","nn"],economize:["ih k-aa1 n-ah m-ay-z","vb"],economy:["ih k-aa1 n-ah m-iy","nn"],ecstasy:["eh1-k s-t-ah s-iy","nn"],ecstatic:["eh-k s-t-ae1 t-ih-k","jj nn"],ecstatically:["eh-k s-t-ae1 t-ih-k l-iy","rb"],ecumenical:["eh k-y-uw m-eh1 n-ih k-ah-l","jj"],edema:["ih d-iy1 m-ah","nn"],edge:["eh1-jh","nn vb"],edged:["eh1-jh-d","vbd jj vbn"],edginess:["eh1 jh-iy n-ah-s","nn"],edgy:["eh1 jh-iy","jj"],edible:["eh1 d-ah b-ah-l","jj"],edict:["iy1 d-ih-k-t","nn"],edifice:["eh1 d-ah f-ah-s","nn"],edifying:["eh1 d-ah f-ay ih-ng","jj"],edit:["eh1 d-ah-t","vb"],edition:["ah d-ih1 sh-ah-n","nn"],editor:["eh1 d-ah t-er","nn"],editorial:["eh d-ah t-ao1 r-iy ah-l","nn jj"],editorialist:["eh d-ah t-ao1 r-iy ah l-ih-s-t","nn"],editorialize:["eh d-ah t-ao1 r-iy ah l-ay-z","vb"],editorially:["eh d-ah t-ao1 r-iy ah l-iy","rb"],editorship:["eh1 d-ah t-er sh-ih-p","nn"],educate:["eh1 jh-ah k-ey-t","vb"],educated:["eh1 jh-ah k-ey t-ah-d","vbn jj"],education:["eh jh-ah k-ey1 sh-ah-n","nn"],educational:["eh jh-ah k-ey1 sh-ah n-ah-l","jj"],educator:["eh1 jh-ah k-ey t-er","nn"],eel:["iy1-l","nn"],eerie:["ih1 r-iy","jj"],eerily:["ih1 r-ah l-iy","rb"],effect:["ih f-eh1-k-t","nn jj vb vbp"],effective:["ih f-eh1-k t-ih-v","jj vbn nn"],effectively:["ih f-eh1-k t-ih-v l-iy","rb"],effectiveness:["ih f-eh1-k t-ih-v n-ah-s","nn"],effete:["eh f-iy1-t","jj"],efficacious:["eh f-ah k-ey1 sh-ah-s","jj"],efficacy:["eh1 f-ih k-ae s-iy","nn"],efficiency:["ih f-ih1 sh-ah-n s-iy","nn"],efficient:["ih f-ih1 sh-ah-n-t","jj"],efficiently:["ih f-ih1 sh-ah-n-t l-iy","rb"],effigy:["eh1 f-ih jh-iy","nn"],effluent:["eh1 f-l-uw ah-n-t","nn jj"],effort:["eh1 f-er-t","nn"],effortless:["eh1 f-er-t l-ah-s","jj"],effortlessly:["eh1 f-er-t l-ah-s l-iy","rb"],effrontery:["ih f-r-ah1-n t-er iy","nn"],effusive:["eh1 f-y-uw s-ih-v","jj"],egalitarian:["ih g-ae l-ah t-eh1 r-iy ah-n","jj"],egalitarianism:["iy g-ae l-ah t-eh1 r-iy ah n-ih z-ah-m","nn"],egg:["eh1-g","nn vb"],egghead:["eh1-g hh-eh-d","nn"],eggplant:["eh1-g p-l-ae-n-t","nn"],eggshell:["eh1-g sh-eh-l","jj"],ego:["iy1 g-ow","nn"],egocentric:["iy g-ow s-eh1-n t-r-ih-k","jj"],egotism:["iy1 g-ah t-ih z-ah-m","nn"],egotist:["iy1 g-ah t-ih-s-t","nn"],egotistical:["iy g-ah t-ih1 s-t-ih k-ah-l","jj"],egregious:["ih g-r-iy1 jh-ah-s","jj"],egregiously:["ih g-r-iy1 jh-ah-s l-iy","rb"],eight:["ey1-t","cd"],eighth:["ey1-t-th","jj nn"],eighty:["ey1 t-iy","nn"],either:["iy1 dh-er","dt cc in rb rbr"],eject:["ih jh-eh1-k-t","vb"],ejection:["ih jh-eh1-k sh-ah-n","nn"],eke:["iy1-k","vb"],elaborate:["ih l-ae1 b-r-ah-t","vb jj"],elaborately:["ih l-ae1 b-r-ah-t l-iy","rb"],elaboration:["ih l-ae b-er ey1 sh-ah-n","nn"],elapse:["ih l-ae1-p-s","vb"],elastic:["ih l-ae1 s-t-ih-k","jj nn"],elasticity:["iy l-ae s-t-ih1 s-ah t-iy","nn"],elate:["ih-l-ey1-t","vb"],elated:["ih l-ey1 t-ah-d","jj vbn"],elation:["ih l-ey1 sh-ah-n","nn"],elbow:["eh1-l b-ow","nn vb"],elder:["eh1-l d-er","jjr jj nn"],elderly:["eh1-l d-er l-iy","jj nn"],eldest:["eh1-l d-ah-s-t","jjs"],elect:["ih l-eh1-k-t","vb vbp"],elected:["ih l-eh1-k t-ah-d","vbn jj vbd"],election:["ih l-eh1-k sh-ah-n","nn"],elective:["ih l-eh1-k t-ih-v","jj"],elector:["ih l-eh1-k t-er","nn"],electoral:["ih l-eh1-k t-er ah-l","jj"],electorate:["ih l-eh1-k t-er ah-t","nn"],electric:["ih l-eh1-k t-r-ih-k","jj nn"],electrical:["ih l-eh1-k t-r-ih k-ah-l","jj"],electrically:["ih l-eh1-k t-r-ih k-ah l-iy","rb"],electrician:["ih l-eh-k t-r-ih1 sh-ah-n","nn"],electricity:["ih l-eh-k t-r-ih1 s-ah t-iy","nn"],electrified:["ih l-eh1-k t-r-ah f-ay-d","vbn"],electrify:["ih-l-eh1-k-t-r-ah-f-ay","vb"],electrifying:["ih l-eh1-k t-r-ah f-ay ih-ng","jj"],electrocardiogram:["ih l-eh-k t-r-ow k-aa1-r d-iy ah g-r-ae-m","nn"],electrode:["ih l-eh1-k t-r-ow-d","nn"],electrodynamics:["ih l-eh-k t-r-ow d-ay n-ae1 m-ih-k-s","nn"],electrolysis:["ih l-eh-k t-r-aa1 l-ah s-ah-s","nn"],electrolytic:["ih l-eh-k t-r-ah l-ih1 t-ih-k","jj"],electromagnet:["ih l-eh-k t-r-ow m-ae1-g n-ah-t","nn"],electromagnetism:["ih l-eh-k t-r-ow m-ae1-g n-ah t-ih z-ah-m","nn"],electromechanical:["ih l-eh-k t-r-ow m-ah k-ae1 n-ih k-ah-l","jj"],electron:["ih l-eh1-k t-r-aa-n","nn"],electronic:["ih l-eh-k t-r-aa1 n-ih-k","jj"],electronically:["ih l-eh-k t-r-aa1 n-ih k-ah l-iy","rb"],electronics:["ih l-eh-k t-r-aa1 n-ih-k-s","nn"],electroplating:["ih l-eh1-k t-r-ah p-l-ey t-ih-ng","nn"],electroshock:["ih l-eh1-k t-r-ow sh-aa-k","nn"],electrostatic:["ih l-eh-k t-r-ow s-t-ae1 t-ih-k","jj"],elegance:["eh1 l-ah g-ah-n-s","nn"],elegant:["eh1 l-ah g-ah-n-t","jj"],elegantly:["eh1 l-ih g-ah-n-t l-iy","rb"],element:["eh1 l-ah m-ah-n-t","nn"],elemental:["eh l-ah m-eh1-n t-ah-l","jj nn"],elementary:["eh l-ah m-eh1-n t-r-iy","jj"],elephant:["eh1 l-ah f-ah-n-t","nn"],elephantine:["eh l-ah f-ae1-n t-iy-n","jj"],elevate:["eh1 l-ah v-ey-t","vb vbp"],elevated:["eh1 l-ah v-ey t-ih-d","vbn vbd jj"],elevation:["eh l-ah v-ey1 sh-ah-n","nn"],elevator:["eh1 l-ah v-ey t-er","nn"],eleventh:["ih l-eh1 v-ah-n-th","jj"],elfin:["eh1-l f-ih-n","jj"],elicit:["ih l-ih1 s-ih-t","vb"],eligibility:["eh l-ih jh-ah b-ih1 l-ih t-iy","nn"],eligible:["eh1 l-ah jh-ah b-ah-l","jj nn"],eliminate:["ih l-ih1 m-ah n-ey-t","vb vbp"],elimination:["ih l-ih m-ah n-ey1 sh-ah-n","nn"],elite:["ih l-iy1-t","nn jj"],elitist:["ey l-iy1 t-ih-s-t","jj"],elixir:["ih l-ih1-k s-er","nn"],elk:["eh1-l-k","nn"],ellipsoid:["ih l-ih1-p s-oy-d","nn"],elliptical:["ih l-ih1-p t-ih k-ah-l","jj"],elm:["eh1-l-m","nn"],elongate:["ih l-ao1-ng g-ey-t","vb"],elongated:["ih l-ao1-ng g-ey t-ah-d","vbn jj"],elongation:["iy l-ao-ng g-ey1 sh-ah-n","nn"],eloquence:["eh1 l-ah k-w-ah-n-s","nn"],eloquent:["eh1 l-ah k-w-ah-n-t","jj"],eloquently:["eh1 l-ah k-w-ah-n-t l-iy","rb"],else:["eh1-l-s","rb jj nn"],elsewhere:["eh1-l s-w-eh-r","rb nn"],elucidate:["ih-l-uw1-s-ah-d-ey-t","vb"],elude:["ih-l-uw1-d","vb"],elusive:["ih l-uw1 s-ih-v","jj"],elusiveness:["ih l-uw1 s-ih-v n-ah-s","nn"],emaciate:["ih-m-ey1-sh-iy-ey-t","vb"],emaciated:["ih m-ey1 sh-iy ey t-ih-d","vbn jj"],emanate:["eh1-m-ah-n-ey-t","vb"],emanation:["eh m-ah n-ey1 sh-ah-n","nn"],emancipate:["ih m-ae1-n s-ah p-ey-t","vb"],emancipated:["ih m-ae1-n s-ah p-ey t-ih-d","vbn jj"],emancipation:["ih m-ae-n s-ah p-ey1 sh-ah-n","nn"],emasculate:["ah m-ae1-s k-y-uw l-ih-t","vb"],embankment:["eh-m b-ae1-ng-k m-ah-n-t","nn"],embargo:["eh-m b-aa1-r g-ow","nn vb"],embargoed:["ih-m b-aa1-r g-ow-d","jj vbd vbn"],embark:["eh-m b-aa1-r-k","vb vbp"],embarrass:["ih-m b-eh1 r-ah-s","vb"],embarrassed:["ih-m b-eh1 r-ah-s-t","vbn vbd jj"],embarrassing:["ih-m b-eh1 r-ah s-ih-ng","jj vbg"],embarrassingly:["ih-m b-eh1 r-ah s-ih-ng l-iy","rb"],embarrassment:["ih-m b-eh1 r-ah-s m-ah-n-t","nn"],embassy:["eh1-m b-ah s-iy","nn"],embattle:["eh-m-b-ae1-t-ah-l","vb"],embattled:["eh-m b-ae1 t-ah-l-d","jj vbn"],embed:["ih-m-b-eh1-d","vb"],embedded:["eh-m b-eh1 d-ih-d","vbn jj"],embellish:["ih-m b-eh1 l-ih-sh","vb"],embezzle:["ih-m b-eh1 z-ah-l","vb"],embezzlement:["eh-m b-eh1 z-ah-l m-ah-n-t","nn"],embezzler:["ih-m b-eh1 z-ah-l er","nn"],embitter:["eh-m-b-ih1-t-er","vb"],embittered:["eh-m b-ih1 t-er-d","vbn jj"],emblazon:["eh-m-b-l-ey1-z-ah-n","vb"],emblem:["eh1-m b-l-ah-m","nn"],emblematic:["eh-m b-l-ah m-ae1 t-ih-k","jj"],embodied:["ih-m b-aa1 d-iy-d","vbn vbd"],embodies:["eh-m b-aa1 d-iy-z","vbz"],embodiment:["eh-m b-aa1 d-iy m-ah-n-t","nn"],embody:["ih-m b-aa1 d-iy","vb vbp"],embolden:["eh-m-b-ow1-l-d-ah-n","vb"],embolism:["eh1-m b-ow l-ih z-ah-m","nn"],emboss:["ih-m-b-ao1-s","vb"],embrace:["eh-m b-r-ey1-s","vb vbp nn"],embroider:["ih-m b-r-oy1 d-er","vbp vb"],embroidery:["eh-m b-r-oy1 d-er iy","nn"],embroil:["eh-m-b-r-oy1-l","vb"],embryo:["eh1-m b-r-iy ow","nn"],embryonic:["eh-m b-r-iy aa1 n-ih-k","jj"],emcee:["eh1-m s-iy1","nn"],emerald:["eh1-m r-ah-l-d","jj nn"],emerge:["ih m-er1-jh","vb vbp"],emergence:["ih m-er1 jh-ah-n-s","nn"],emergency:["ih m-er1 jh-ah-n s-iy","nn jj"],emergent:["ih m-er1 jh-ah-n-t","jj"],emeritus:["ih m-eh1 r-ah t-ah-s","nn jj"],emigrant:["eh1 m-ah g-r-ah-n-t","nn"],emigrate:["eh1 m-ah g-r-ey-t","vb vbp"],emigration:["eh m-ah g-r-ey1 sh-ah-n","nn"],emigre:["eh1 m-ah g-r-ey","nn"],eminence:["eh1 m-ah n-ah-n-s","nn"],eminent:["eh1 m-ah n-ah-n-t","jj"],eminently:["eh1 m-ah n-ah-n-t l-iy","rb"],emissary:["eh1 m-ah s-eh r-iy","nn"],emission:["ih m-ih1 sh-ah-n","nn"],emit:["ih m-ih1-t","vb vbp"],emotion:["ih m-ow1 sh-ah-n","nn"],emotional:["ih m-ow1 sh-ah n-ah-l","jj"],emotionally:["ih m-ow1-sh n-ah l-iy","rb"],empathetic:["eh-m p-ah th-eh1 t-ih-k","jj"],empathize:["eh1-m p-ah th-ay-z","vb"],empathy:["eh1-m p-ah th-iy","nn"],emperor:["eh1-m p-er er","nn"],emphasis:["eh1-m f-ah s-ah-s","nn"],emphasize:["eh1-m f-ah s-ay-z","vb vbp"],emphatic:["eh-m f-ae1 t-ih-k","jj"],emphatically:["eh-m f-ae1 t-ih-k l-iy","rb"],emphysema:["eh-m f-ah z-iy1 m-ah","nn"],empire:["eh1-m p-ay er","nn"],empirical:["eh-m p-ih1 r-ih k-ah-l","jj"],empirically:["eh-m p-ih1 r-ih k-ah l-iy","rb"],empiricism:["eh-m p-ih1 r-ah s-ih z-ah-m","nn"],employ:["eh-m p-l-oy1","vb nn vbp"],employee:["eh-m p-l-oy1 iy","nn"],employer:["eh-m p-l-oy1 er","nn"],employment:["eh-m p-l-oy1 m-ah-n-t","nn"],empower:["ih-m p-aw1 er","vb vbp"],empowerment:["ih-m p-aw1 er m-ah-n-t","nn"],emptied:["eh1-m-p t-iy-d","vbn vbd"],emptier:["eh1-m-p t-iy er","jjr rbr"],empties:["eh1-m-p t-iy-z","vbz"],emptiness:["eh1-m-p t-iy n-ah-s","nn"],empty:["eh1-m-p t-iy","jj nn rb vb vbp"],emulate:["eh1 m-y-ah l-ey-t","vb"],emulsion:["ih m-ah1-l sh-ah-n","nn"],enable:["eh n-ey1 b-ah-l","vb vbp"],enact:["ih n-ae1-k-t","vb"],enactment:["eh n-ae1-k-t m-ah-n-t","nn"],enamel:["ih n-ae1 m-ah-l","nn"],enamored:["eh n-ae1 m-er-d","jj"],encamp:["ih-n-k-ae1-m-p","vb"],encase:["eh-n-k-ey1-s","vb"],encephalitis:["eh-n s-eh f-ah l-ay1 t-ah-s","nn"],enchant:["eh-n-ch-ae1-n-t","vb"],enchanted:["eh-n ch-ae1-n t-ih-d","vbn jj"],enchanting:["eh-n ch-ae1-n t-ih-ng","jj"],enchantment:["eh-n ch-ae1-n-t m-ah-n-t","nn"],encircle:["eh-n s-er1 k-ah-l","vb"],encircled:["ih-n s-er1 k-ah-l-d","vbd jj"],enclave:["aa1-n k-l-ey-v","nn"],enclose:["ih-n-k-l-ow1-z","vb"],enclosure:["eh-n k-l-ow1 zh-er","nn"],encode:["eh-n-k-ow1-d","vb"],encompass:["eh-n k-ah1-m p-ah-s","vb"],encore:["aa1-n k-ao-r","nn"],encounter:["ih-n k-aw1-n t-er","nn vb vbp"],encourage:["eh-n k-er1 ih-jh","vb vbp"],encouraged:["eh-n k-er1 ih-jh-d","vbn vbd jj"],encouragement:["eh-n k-er1 ih-jh m-ah-n-t","nn"],encouraging:["eh-n k-er1 ih jh-ih-ng","vbg jj"],encroach:["ih-n k-r-ow1-ch","vb"],encroachment:["eh-n k-r-ow1-ch m-ah-n-t","nn"],encrust:["eh-n-k-r-ah1-s-t","vb"],encumber:["eh-n k-ah1-m b-er","vb"],encyclopedia:["ih-n s-ay k-l-ah p-iy1 d-iy ah","nn"],encyclopedic:["ih-n s-ay k-l-ah p-iy1 d-ih-k","jj"],end:["eh1-n-d","nn vbp jj rb vb"],endanger:["eh-n d-ey1-n jh-er","vb vbp"],endangered:["eh-n d-ey1-n jh-er-d","vbn vbd jj"],endangerment:["eh-n d-ey1-n jh-er m-ah-n-t","nn"],endear:["eh-n-d-iy1-r","vb"],endearing:["eh-n d-iy1 r-ih-ng","jj"],endearment:["ih-n d-ih1-r m-ah-n-t","nn"],endeavor:["ih-n d-eh1 v-er","nn"],endeavored:["ih-n d-eh1 v-er-d","vbd vbn"],ended:["eh1-n d-ah-d","vbd jj vb vbn"],endemic:["eh-n d-eh1 m-ih-k","jj"],ending:["eh1-n d-ih-ng","vbg jj nn vbn"],endless:["eh1-n-d l-ah-s","jj"],endlessly:["eh1-n-d l-ah-s l-iy","rb"],endocrine:["eh1-n d-ow k-r-ay-n","jj"],endocrinologist:["eh-n d-ow k-r-ah n-aa1 l-ah jh-ah-s-t","nn"],endorse:["eh-n d-ao1-r-s","vb vbp"],endorsement:["eh-n d-ao1-r-s m-ah-n-t","nn"],endorser:["ih-n d-ao1-r s-er","nn"],endosperm:["eh1-n d-ah s-p-er-m","nn"],endothermic:["eh-n d-ow th-er1 m-ih-k","jj"],endow:["eh-n d-aw1","vb vbp"],endowed:["eh-n d-aw1-d","vbn vbd jj"],endowment:["eh-n d-aw1 m-ah-n-t","nn"],endurance:["eh1-n d-er ah-n-s","nn"],endure:["eh-n d-y-uh1-r","vb vbp"],enduring:["eh-n d-y-uh1 r-ih-ng","vbg jj"],enemy:["eh1 n-ah m-iy","nn"],energetic:["eh n-er jh-eh1 t-ih-k","jj"],energetically:["eh n-er jh-eh1 t-ih-k l-iy","rb"],energize:["eh1 n-er jh-ay-z","vb"],energy:["eh1 n-er jh-iy","nn"],enforce:["eh-n f-ao1-r-s","vb vbp"],enforceable:["eh-n f-ao1-r s-ah b-ah-l","jj"],enforced:["eh-n f-ao1-r-s-t","vbn vbd jj"],enforcement:["eh-n f-ao1-r-s m-ah-n-t","nn"],enforcer:["eh-n f-ao1-r s-er","nn"],engage:["eh-n g-ey1-jh","vb vbp"],engaged:["eh-n g-ey1-jh-d","vbn jj vbd"],engagement:["eh-n g-ey1-jh m-ah-n-t","nn"],engaging:["eh-n g-ey1 jh-ih-ng","vbg jj"],engender:["eh-n jh-eh1-n d-er","vb"],engine:["eh1-n jh-ah-n","nn"],engineer:["eh1-n jh-ah n-ih1-r","nn vb"],engineered:["eh-n jh-ah n-iy1-r-d","vbn vbd jj"],engrave:["ih-n g-r-ey1-v","vb"],engraved:["ih-n g-r-ey1-v-d","vbn jj"],engraver:["ih-n g-r-ey1 v-er","nn"],engraving:["ih-n g-r-ey1 v-ih-ng","nn"],engross:["ih-n-g-r-ow1-s","vb"],engrossed:["ih-n g-r-ow1-s-t","jj vbn"],engrossing:["ih-n g-r-ow1 s-ih-ng","jj"],engulf:["ih-n g-ah1-l-f","vb"],engulfing:["ih-n g-ah1-l f-ih-ng","vbg jj"],enhance:["eh-n hh-ae1-n-s","vb vbp"],enhanced:["eh-n hh-ae1-n-s-t","vbn vbd jj"],enhancement:["eh-n hh-ae1-n-s m-ah-n-t","nn"],enigma:["ih n-ih1-g m-ah","nn"],enigmatic:["eh n-ih-g m-ae1 t-ih-k","jj"],enjoin:["eh-n jh-oy1-n","vb"],enjoy:["eh-n jh-oy1","vb vbp"],enjoyable:["eh-n jh-oy1 ah b-ah-l","jj"],enjoyment:["eh-n jh-oy1 m-ah-n-t","nn"],enlarge:["eh-n l-aa1-r-jh","vb"],enlarged:["eh-n l-aa1-r-jh-d","vbn jj vbd"],enlargement:["ih-n l-aa1-r-jh m-ah-n-t","nn"],enlighten:["eh-n l-ay1 t-ah-n","vb"],enlightened:["eh-n l-ay1 t-ah-n-d","jj vbn"],enlightening:["eh-n l-ay1 t-ah-n ih-ng","vbg jj"],enlightenment:["eh-n l-ay1 t-ah-n m-ah-n-t","nn"],enlist:["eh-n l-ih1-s-t","vb"],enlisted:["eh-n l-ih1 s-t-ih-d","vbd jj vbn"],enlistment:["eh-n l-ih1-s-t m-ah-n-t","nn"],enliven:["eh-n l-ay1 v-ah-n","vb vbp"],enmesh:["eh-n-m-eh1-sh","vb"],enmity:["eh1-n m-ah t-iy","nn"],ennui:["eh n-uw1 iy","nn"],enormity:["ih n-ao1-r m-ah t-iy","nn"],enormous:["ih n-ao1-r m-ah-s","jj"],enormously:["ih n-ao1-r m-ah-s l-iy","rb"],enough:["ih-n ah1-f","rb jj nn"],enrage:["eh-n r-ey1-jh","nn vb"],enraged:["eh-n r-ey1-jh-d","jj vbd vbn"],enrapture:["eh-n-r-ae1-p-ch-er","vb"],enrich:["eh-n r-ih1-ch","vb vbp"],enrichment:["eh-n r-ih1-ch m-ah-n-t","nn"],enroll:["eh-n r-ow1-l","vb vbp"],enrolled:["eh-n r-ow1-l-d","vbn vbd jj"],enrollee:["eh-n r-ow1 l-iy1","nn"],enrolling:["eh-n r-ow1 l-ih-ng","nn"],enrollment:["eh-n r-ow1-l m-ah-n-t","nn"],enroute:["eh-n r-uw1-t","rb"],ensconce:["ih-n-s-k-aa1-n-s","vb"],ensemble:["aa-n s-aa1-m b-ah-l","nn"],enshrine:["eh-n-sh-r-ay1-n","vb"],enslave:["eh-n-s-l-ey1-v","vb"],enslavement:["eh-n s-l-ey1-v m-ah-n-t","nn"],ensnare:["ih-n s-n-eh1-r","vb"],ensnarl:["ih-n-s-n-aa1-r-l","vb"],ensue:["ih-n s-uw1","vb vbp"],ensure:["eh-n sh-uh1-r","vb vbp"],entail:["eh-n t-ey1-l","vb vbp"],entangle:["eh-n-t-ae1-ng-g-ah-l","vb"],entangled:["eh-n t-ae1-ng g-ah-l-d","jj vbd vbn"],entanglement:["eh-n t-ae1-ng g-ah-l m-ah-n-t","nn"],enter:["eh1-n t-er","vb vbn vbp"],enterprise:["eh1-n t-er p-r-ay-z","nn"],enterprising:["eh1-n t-er p-r-ay z-ih-ng","jj"],entertain:["eh-n t-er t-ey1-n","vb"],entertainer:["eh-n t-er t-ey1 n-er","nn"],entertaining:["eh-n t-er t-ey1 n-ih-ng","vbg jj nn"],entertainment:["eh-n t-er t-ey1-n m-ah-n-t","nn"],enthral:["eh-n th-r-ao1-l","vb"],enthralled:["eh-n th-r-ao1-l-d","jj vbn"],enthusiasm:["ih-n th-uw1 z-iy ae z-ah-m","nn"],enthusiast:["eh-n th-uw1 z-iy ae-s-t","nn"],enthusiastic:["ih-n th-uw z-iy ae1 s-t-ih-k","jj"],enthusiastically:["ih-n th-uw z-iy ae1 s-t-ih-k l-iy","rb"],entice:["ih-n t-ay1-s","vb vbp"],enticement:["ih-n t-ay1-s m-ah-n-t","nn"],enticing:["eh-n t-ay1 s-ih-ng","vbg jj"],entire:["ih-n t-ay1 er","jj nn"],entirely:["ih-n t-ay1 er l-iy","rb"],entirety:["ih-n t-ay1 er t-iy","nn"],entitle:["eh-n t-ay1 t-ah-l","vb vbp"],entitlement:["eh-n t-ay1 t-ah-l m-ah-n-t","nn jj"],entity:["eh1-n t-ah t-iy","nn"],entomb:["eh-n-t-uw1-m","vb"],entomologist:["eh-n t-ah m-aa1 l-ah jh-ah-s-t","nn"],entourage:["aa-n t-uh r-aa1-zh","nn"],entrance:["eh1-n t-r-ah-n-s","nn vb"],entrant:["eh1-n t-r-ah-n-t","nn"],entrapment:["ih-n t-r-ae1-p m-ah-n-t","nn"],entre:["aa1-n t-r-ey","nn"],entreaty:["eh-n t-r-iy1 t-iy","nn"],entrench:["eh-n t-r-eh1-n-ch","vb"],entrenched:["eh-n t-r-eh1-n-ch-t","vbn vbd jj"],entrenchment:["eh-n t-r-eh1-n-ch m-ah-n-t","nn"],entrepreneur:["aa-n t-r-ah p-r-ah n-er1","nn"],entrepreneurial:["aa-n t-r-ah p-r-ah n-er1 iy ah-l","jj"],entrepreneurship:["aa-n t-r-ah p-r-ah n-er1 sh-ih-p","nn"],entropy:["eh1-n t-r-ah p-iy","nn"],entrust:["eh-n t-r-ah1-s-t","vb vbp"],entry:["eh1-n t-r-iy","nn"],entwine:["eh-n-t-w-ay1-n","vb"],entwined:["eh-n t-w-ay1-n-d","vbn jj"],enumerate:["ih-n-uw1-m-er-ey-t","vb"],enumerated:["ih n-uw1 m-er ey t-ih-d","vbn jj"],enumeration:["ih n-uw m-er ey1 sh-ah-n","nn"],enunciate:["ih-n-ah1-n-s-iy-ey-t","vb"],envelop:["eh-n v-eh1 l-ah-p","vb"],envelope:["eh1-n v-ah l-ow-p","nn"],enviable:["eh1-n v-iy ah b-ah-l","jj"],envied:["eh1-n v-iy-d","vbd"],envious:["eh1-n v-iy ah-s","jj"],enviously:["eh1-n v-iy ah-s l-iy","rb"],environ:["ih-n v-ay1 r-ah-n","nn"],environment:["ih-n v-ay1 r-ah-n m-ah-n-t","nn"],environmental:["ih-n v-ay r-ah-n m-eh1-n t-ah-l","jj"],environmentalism:["eh-n v-ay1 r-ah-n m-eh-n t-ah l-ih z-ah-m","nn"],environmentalist:["ih-n v-ay r-ah-n m-eh1-n t-ah l-ih-s-t","nn jj"],environmentally:["ih-n v-ay r-ah-n m-eh1-n t-ah l-iy","rb"],envisage:["eh-n v-ih1 z-ih-jh","vb"],envision:["eh-n v-ih1 zh-ah-n","vbp vb"],envoy:["eh1-n v-oy","nn"],envy:["eh1-n v-iy","nn vbp vb"],enzymatic:["eh-n z-ay m-ae1 t-ih-k","jj"],enzyme:["eh1-n z-ay-m","nn"],eon:["iy1 ah-n","nn"],ephemeral:["ih f-eh1 m-er ah-l","jj"],epic:["eh1 p-ih-k","nn jj"],epicenter:["eh1 p-ah s-eh-n t-er","nn"],epicure:["eh1 p-ih k-y-uh-r","nn"],epicurean:["eh p-ah k-y-uh r-iy1 ah-n","nn"],epidemic:["eh p-ah d-eh1 m-ih-k","nn jj"],epidemiological:["eh p-ah d-iy m-iy ah l-aa1 jh-ih k-ah-l","jj"],epidemiologist:["eh p-ah d-iy m-iy aa1 l-ah jh-ih-s-t","nn"],epidermis:["eh p-ah d-er1 m-ah-s","nn"],epigenetic:["eh p-ah jh-ah n-eh1 t-ih-k","jj"],epilepsy:["eh1 p-ah l-eh-p s-iy","nn"],epileptic:["eh p-ah l-eh1-p t-ih-k","jj"],epilogue:["eh1 p-ah l-ao-g","nn"],epiphany:["ih p-ih1 f-ah n-iy","nn"],episode:["eh1 p-ah s-ow-d","nn"],episodic:["eh p-ah s-aa1 d-ih-k","jj"],epistemology:["ih p-ih s-t-ah m-aa1 l-ah jh-iy","nn"],epitaph:["eh1 p-ah t-ae-f","nn"],epithet:["eh1 p-ah th-eh-t","nn"],epitome:["ih p-ih1 t-ah m-iy","nn"],epitomize:["ih p-ih1 t-ah m-ay-z","vb vbp"],epoch:["eh1 p-ah-k","nn"],epochal:["eh1 p-ah k-ah-l","jj"],epoxy:["ih p-aa1-k s-iy","jj"],epsom:["eh1-p s-ah-m","nn"],equal:["iy1 k-w-ah-l","jj nn vb vbp"],equality:["ih k-w-aa1 l-ah t-iy","nn"],equalization:["iy k-w-ah l-ih z-ey1 sh-ah-n","nn"],equalize:["iy1 k-w-ah l-ay-z","vb"],equalizer:["iy1 k-w-ah l-ay z-er","nn"],equalizing:["iy1 k-w-ah l-ay z-ih-ng","nn"],equally:["iy1 k-w-ah l-iy","rb"],equanimity:["iy k-w-ah n-ih1 m-ih t-iy","nn"],equate:["ih k-w-ey1-t","vb vbp"],equation:["ih k-w-ey1 zh-ah-n","nn"],equator:["ih k-w-ey1 t-er","nn"],equatorial:["iy k-w-ah t-ao1 r-iy ah-l","jj"],equestrian:["ih k-w-eh1-s t-r-iy ah-n","jj"],equilibrium:["iy k-w-ah l-ih1 b-r-iy ah-m","nn"],equine:["iy1 k-w-ay-n","nn"],equip:["ih k-w-ih1-p","vb vbp"],equipment:["ih k-w-ih1-p m-ah-n-t","nn"],equitable:["eh1 k-w-ah t-ah b-ah-l","jj"],equitably:["eh1 k-w-ih t-ah b-l-iy","rb"],equity:["eh1 k-w-ah t-iy","nn"],equivalence:["ih k-w-ih1 v-ah l-ah-n-s","nn"],equivalent:["ih k-w-ih1 v-ah l-ah-n-t","nn jj"],equivocal:["ih k-w-ih1 v-ah k-ah-l","jj"],era:["eh1 r-ah","nn"],eradicate:["ih r-ae1 d-ah k-ey-t","vb"],eradication:["ih r-ae d-ah k-ey1 sh-ah-n","nn"],erasable:["ih r-ey1 s-ah b-ah-l","jj"],erase:["ih r-ey1-s","vb"],eraser:["ih r-ey1 s-er","nn"],erect:["ih r-eh1-k-t","vb vbp jj"],erection:["ih r-eh1-k sh-ah-n","nn"],erode:["ih r-ow1-d","vb vbp"],eroded:["ih r-ow1 d-ah-d","vbn jj vbd"],erosion:["ih r-ow1 zh-ah-n","nn"],erotic:["ih r-aa1 t-ih-k","jj"],errand:["eh1 r-ah-n-d","nn"],errant:["eh1 r-ah-n-t","jj"],erratic:["ih r-ae1 t-ih-k","jj"],erratically:["eh r-ae1 t-ih-k l-iy","rb"],erroneous:["eh r-ow1 n-iy ah-s","jj"],erroneously:["eh r-ow1 n-iy ah-s l-iy","rb"],error:["eh1 r-er","nn"],ersatz:["eh1-r s-aa-t-s","jj"],erstwhile:["er1-s-t w-ay-l","jj"],erudite:["eh1 r-ah d-ay-t","jj"],erudition:["eh r-ah d-ih1 sh-ah-n","nn"],erupt:["ih r-ah1-p-t","vb vbp"],eruption:["ih r-ah1-p sh-ah-n","nn"],escalate:["eh1 s-k-ah l-ey-t","vb vbp"],escalation:["eh s-k-ah l-ey1 sh-ah-n","nn"],escalator:["eh1 s-k-ah l-ey t-er","nn"],escapade:["eh1 s-k-ah p-ey-d","nn"],escape:["ih s-k-ey1-p","vb nn vbp"],escapee:["ih s-k-ey p-iy1","nn"],eschew:["eh-s ch-uw1","vb"],escort:["eh s-k-ao1-r-t","nn vb"],escrow:["eh s-k-r-ow1","nn jj vb"],escudo:["eh s-k-uw1 d-ow","nn"],esophagus:["ih s-aa1 f-ah g-ah-s","nn"],esoteric:["eh s-ah t-eh1 r-ih-k","jj"],especially:["ah s-p-eh1-sh l-iy","rb"],espionage:["eh1 s-p-iy ah n-aa-jh","nn"],esplanade:["eh-s p-l-ah n-aa1-d","nn"],espouse:["ih s-p-aw1-z","vb vbp"],espresso:["eh s-p-r-eh1 s-ow","nn"],essay:["eh s-ey1","nn"],essayist:["eh1 s-ey ih-s-t","nn"],essence:["eh1 s-ah-n-s","nn"],essential:["ih s-eh1-n sh-ah-l","jj nn"],essentially:["ih s-eh1-n sh-ah l-iy","rb"],establish:["ih s-t-ae1 b-l-ih-sh","vb vbp"],established:["ih s-t-ae1 b-l-ih-sh-t","vbn jj vbd"],establishment:["ih s-t-ae1 b-l-ih-sh m-ah-n-t","nn"],estate:["ih s-t-ey1-t","nn"],esteem:["ah s-t-iy1-m","nn vb"],estimable:["eh1 s-t-ah m-ah b-ah-l","jj"],estimate:["eh1 s-t-ah m-ah-t","nn vb vbp"],estimated:["eh1 s-t-ah m-ey t-ah-d","vbn jj vbd"],estimation:["eh s-t-ah m-ey1 sh-ah-n","nn"],estimator:["eh s-t-ih1 m-ah t-er","nn"],estrange:["eh-s-t-r-ey1-n-jh","vb"],estranged:["eh s-t-r-ey1-n-jh-d","vbn vbd jj"],estrangement:["ih s-t-r-ey1-n-jh m-ah-n-t","nn"],estrogen:["eh1 s-t-r-ah jh-ah-n","nn"],estuary:["eh1-s ch-uw eh r-iy","nn"],etcetera:["eh1-t s-eh1 t-er ah","nn"],etch:["eh1-ch","vb"],etching:["eh1 ch-ih-ng","nn"],eternal:["ih t-er1 n-ah-l","jj"],eternally:["ih t-er1 n-ah l-iy","rb"],eternity:["ih t-er1 n-ah t-iy","nn"],ethane:["eh1 th-ey-n","nn"],ethanol:["eh1 th-ah n-ao-l","nn"],ether:["iy1 th-er","nn cc"],ethereal:["ih th-ih1 r-iy ah-l","jj"],ethic:["eh1 th-ih-k","nn"],ethical:["eh1 th-ah k-ah-l","jj"],ethically:["eh1 th-ih k-ah l-iy","rb"],ethicist:["eh1 th-ih s-ih-s-t","nn"],ethics:["eh1 th-ih-k-s","nn"],ethnic:["eh1-th n-ih-k","jj"],ethnically:["eh1-th n-ih-k l-iy","rb"],ethnicity:["eh-th n-ih1 s-ih t-iy","nn"],ethos:["iy1 th-aa-s","nn"],ethyl:["eh1 th-ah-l","nn"],ethylene:["eh1 th-ah l-iy-n","nn"],etiquette:["eh1 t-ah k-ah-t","nn"],etymology:["eh t-ah m-aa1 l-ah jh-iy","nn"],eucalyptus:["y-uw k-ah l-ih1-p t-ah-s","nn"],eulogy:["y-uw1 l-ah jh-iy","nn"],euphemism:["y-uw1 f-ah m-ih z-ah-m","nn"],euphoria:["y-uw f-ao1 r-iy ah","nn"],euphoric:["y-uw f-aa1 r-ih-k","jj"],evacuate:["ih v-ae1 k-y-ah ey-t","vb"],evacuation:["ih v-ae k-y-ah-w ey1 sh-ah-n","nn"],evade:["ih v-ey1-d","vb"],evader:["ih v-ey1 d-er","nn"],evaluate:["ih v-ae1-l y-uw ey-t","vb vbp"],evaluation:["ih v-ae-l y-uw ey1 sh-ah-n","nn"],evangelical:["iy v-ae-n jh-eh1 l-ih k-ah-l","jj"],evangelism:["ih v-ae1-n jh-ah l-ih z-ah-m","nn"],evangelist:["ih v-ae1-n jh-ah l-ah-s-t","nn"],evaporate:["ih v-ae1 p-er ey-t","vb vbp"],evaporation:["ih v-ae p-er ey1 sh-ah-n","nn"],evasion:["ih v-ey1 zh-ah-n","nn"],evasive:["ih v-ey1 s-ih-v","jj"],eve:["iy1-v","nn"],even:["iy1 v-ih-n","rb vb"],evenhanded:["iy1 v-ah-n hh-ae1-n d-ih-d","jj"],evening:["iy1-v n-ih-ng","nn vbg"],evenly:["iy1 v-ah-n l-iy","rb"],event:["ih v-eh1-n-t","nn"],eventful:["ih v-eh1-n-t f-ah-l","jj"],eventual:["ah v-eh1-n ch-uw ah-l","jj"],eventuality:["ah v-eh-n ch-uw ae1 l-ih t-iy","nn"],eventually:["ih v-eh1-n ch-ah-w ah l-iy","rb"],ever:["eh1 v-er","rb rbr rp"],evergreen:["eh1 v-er g-r-iy-n","nn"],everlasting:["eh v-er l-ae1 s-t-ih-ng","jj nn"],every:["eh1 v-er iy","dt"],everybody:["eh1 v-r-iy b-aa d-iy","nn"],everyday:["eh1 v-r-iy d-ey1","jj"],everyone:["eh1 v-r-iy w-ah-n","nn"],everything:["eh1 v-r-iy th-ih-ng","nn"],everywhere:["eh1 v-r-iy w-eh-r","rb"],evict:["ih v-ih1-k-t","vb"],evidence:["eh1 v-ah d-ah-n-s","nn vb"],evident:["eh1 v-ah d-ah-n-t","jj"],evidently:["eh1 v-ah d-ah-n-t l-iy","rb"],evil:["iy1 v-ah-l","jj nn"],evildoer:["iy1 v-ah-l d-uw er","nn"],evince:["ih-v-ih1-n-s","vb"],eviscerate:["ah v-ih1 s-er ey-t","vb"],evocation:["iy v-ow k-ey1 sh-ah-n","nn"],evocative:["ih v-aa1 k-ah t-ih-v","jj"],evoke:["ih v-ow1-k","vb vbp"],evolution:["eh v-ah l-uw1 sh-ah-n","nn"],evolutionary:["eh v-ah l-uw1 sh-ah-n eh r-iy","jj"],evolve:["ih v-aa1-l-v","vb vbp"],evolved:["ih v-aa1-l-v-d","vbn jj vbd"],exacerbate:["ih-g z-ae1 s-er b-ey-t","vb vbp"],exacerbation:["ih-g z-ae s-er b-ey1 sh-ah-n","nn"],exact:["ih-g z-ae1-k-t","jj vb"],exacting:["ih-g z-ae1-k t-ih-ng","jj"],exactly:["ih-g z-ae1-k-t l-iy","rb"],exaggerate:["ih-g z-ae1 jh-er ey-t","vb vbp"],exaggerated:["ih-g z-ae1 jh-er ey t-ah-d","vbn jj vbd"],exaggeration:["ih-g z-ae jh-er ey1 sh-ah-n","nn"],exalt:["ih-g z-ao1-l-t","vbp vb"],exalted:["ih-g z-ao1-l t-ih-d","jj vbd"],exam:["ih-g z-ae1-m","nn"],examination:["ih-g z-ae m-ah n-ey1 sh-ah-n","nn"],examine:["ih-g z-ae1 m-ih-n","vb vbp"],examiner:["ih-g z-ae1 m-ah n-er","nn"],example:["ih-g z-ae1-m p-ah-l","nn"],exasperate:["ih-g-z-ae1-s-p-er-ey-t","vb"],exasperated:["ih-g z-ae1 s-p-er ey t-ih-d","jj"],exasperating:["ih-g z-ae1 s-p-er ey t-ih-ng","vbg jj"],exasperation:["eh-k s-ae s-p-er ey1 sh-ah-n","nn"],excavate:["eh1-k s-k-ah v-ey-t","vb"],excavation:["eh-k s-k-ah v-ey1 sh-ah-n","nn"],excavator:["eh1-k s-k-ah v-ey t-er","nn"],exceed:["ih-k s-iy1-d","vb vbp"],exceeding:["ih-k s-iy1 d-ih-ng","vbg jj"],exceedingly:["ih-k s-iy1 d-ih-ng l-iy","rb"],excel:["ih-k s-eh1-l","vbp vb"],excellence:["eh1-k s-ah l-ah-n-s","nn"],excellent:["eh1-k s-ah l-ah-n-t","jj"],excellently:["eh1-k s-ah l-ah-n-t l-iy","rb"],excelsior:["ih-k s-eh1-l s-iy er","nn"],except:["ih-k s-eh1-p-t","in vb"],exception:["ih-k s-eh1-p sh-ah-n","nn"],exceptional:["ih-k s-eh1-p sh-ah n-ah-l","jj"],exceptionally:["ih-k s-eh1-p sh-ah-n ah l-iy","rb"],excerpt:["eh1-k s-er-p-t","nn"],excess:["eh1-k s-eh-s","jj nn"],excessive:["ih-k s-eh1 s-ih-v","jj"],excessively:["ih-k s-eh1 s-ih-v l-iy","rb"],exchange:["ih-k-s ch-ey1-n-jh","nn vb vbp"],exchangeable:["ih-k-s ch-ey1-n jh-ah b-ah-l","jj"],exchanger:["ih-k-s ch-ey1-n jh-er","nn"],exchequer:["eh1-k-s ch-eh k-er","nn"],excise:["eh-k s-ay1-s","nn jj vb"],excision:["ih-k s-ih1 zh-ah-n","nn"],excite:["ih-k s-ay1-t","vb"],excited:["ih-k s-ay1 t-ah-d","vbn jj vbd"],excitedly:["ih-k s-ay1 t-ah-d l-iy","rb"],excitement:["ih-k s-ay1-t m-ah-n-t","nn"],exciting:["ih-k s-ay1 t-ih-ng","jj vbg"],exclaim:["ih-k s-k-l-ey1-m","vb"],exclamation:["eh-k s-k-l-ah m-ey1 sh-ah-n","nn"],exclude:["ih-k s-k-l-uw1-d","vb vbp"],exclusion:["ih-k s-k-l-uw1 zh-ah-n","nn"],exclusionary:["ih-k s-k-l-uw1 zh-ah-n eh r-iy","jj"],exclusive:["ih-k s-k-l-uw1 s-ih-v","jj nn"],exclusively:["ih-k s-k-l-uw1 s-ih-v l-iy","rb"],exclusivity:["eh-k s-k-l-uw s-ih1 v-ah t-iy","nn"],excommunicate:["eh-k-s-k-ah-m-y-uw1-n-ah-k-ey-t","vb"],excoriate:["eh-k-s-k-ao1-r-iy-ey-t","vb"],excrement:["eh1-k s-k-r-ah m-ah-n-t","nn"],excrete:["ih-k s-k-r-iy1-t","vb"],excretion:["ih-k s-k-r-iy1 sh-ah-n","nn"],excretory:["eh1-k s-k-r-ah t-ao r-iy","jj"],excruciating:["ih-k s-k-r-uw1 sh-iy ey t-ih-ng","jj"],excursion:["ih-k s-k-er1 zh-ah-n","nn"],excuse:["ih-k s-k-y-uw1-s","nn vbp vb"],exec:["eh-g z-eh1-k","nn"],execute:["eh1-k s-ah k-y-uw-t","vb vbp"],executed:["eh1-k s-ah k-y-uw t-ah-d","vbn jj vbd"],execution:["eh-k s-ah k-y-uw1 sh-ah-n","nn"],executioner:["eh-k s-ah k-y-uw1 sh-ah-n er","nn"],executive:["ih-g z-eh1 k-y-ah t-ih-v","nn jj"],executor:["ih-g z-eh1 k-y-ah t-er","nn"],exemplary:["ih-g z-eh1-m p-l-er iy","jj"],exemplified:["ih-g z-eh1-m p-l-ah f-ay-d","vbn"],exemplifies:["ih-g z-eh1-m p-l-ah f-ay-z","vbz"],exemplify:["ih-g z-eh1-m p-l-ah f-ay","vbp vb"],exempt:["ih-g z-eh1-m-p-t","jj vb"],exemption:["ih-g z-eh1-m-p sh-ah-n","nn"],exercisable:["eh1-k s-er s-ay z-ah b-ah-l","jj"],exercise:["eh1-k s-er s-ay-z","nn vbp vb"],exercised:["eh1-k s-er s-ay-z-d","vbn vbd jj"],exert:["ih-g z-er1-t","vb vbp"],exertion:["ih-g z-er1 sh-ah-n","nn"],exhale:["eh-k-s-hh-ey1-l","vb"],exhaust:["ih-g z-ao1-s-t","nn vb vbp"],exhausting:["ih-g z-ao1 s-t-ih-ng","vbg jj"],exhaustion:["ih-g z-ao1-s ch-ah-n","nn"],exhaustive:["ih-g z-ao1 s-t-ih-v","jj"],exhaustively:["ih-g z-aa1 s-t-ih-v l-iy","rb"],exhibit:["ih-g z-ih1 b-ih-t","nn vbp vb"],exhibition:["eh-k s-ah b-ih1 sh-ah-n","nn"],exhibitor:["ih-g z-ih1 b-ah t-er","nn"],exhilarate:["ih-g-z-ih1-l-er-ey-t","vb"],exhilarating:["ih-g z-ih1 l-er ey t-ih-ng","jj"],exhilaration:["ih-g z-ih l-er ey1 sh-ah-n","nn"],exhort:["ih-g z-ao1-r-t","vb"],exhortation:["eh-g z-ao-r t-ey1 sh-ah-n","nn"],exigency:["eh-k s-ih1 jh-ah-n s-iy","nn"],exile:["eh1-g z-ay-l","nn vb"],exiled:["eh1-g z-ay-l-d","vbn vbd jj"],exist:["ih-g z-ih1-s-t","vb vbp"],existence:["eh-g z-ih1 s-t-ah-n-s","nn"],existent:["eh-g z-ih1 s-t-ah-n-t","jj nn"],existential:["eh-k s-ih s-t-eh1-n ch-ah-l","jj"],existing:["ih-g z-ih1 s-t-ih-ng","vbg jj"],exit:["eh1-g z-ih-t","nn vb"],exodus:["eh1-k s-ah d-ah-s","nn"],exonerate:["ih-g z-aa1 n-er ey-t","vb"],exorbitant:["ih-g z-ao1-r b-ih t-ah-n-t","jj"],exorcism:["eh1-k s-er s-ih1-z ah-m","nn"],exorcist:["eh1-k s-er s-ah-s-t","nn"],exothermic:["eh-k s-ow th-er1 m-ih-k","jj"],exotic:["ih-g z-aa1 t-ih-k","jj"],expand:["ih-k s-p-ae1-n-d","vb vbp"],expandable:["ih-k s-p-ae1-n d-ah b-ah-l","jj"],expanded:["ih-k s-p-ae1-n d-ah-d","vbn vbd jj"],expanding:["ih-k s-p-ae1-n d-ih-ng","vbg jj"],expanse:["ih-k s-p-ae1-n-s","nn jj"],expansion:["ih-k s-p-ae1-n sh-ah-n","nn jj"],expansionism:["ih-k s-p-ae1-n sh-ah n-ih z-ah-m","nn"],expansive:["ih-k s-p-ae1-n s-ih-v","jj"],expatriate:["eh-k-s p-ey1 t-r-iy ey-t","nn"],expect:["ih-k s-p-eh1-k-t","vbp vb in"],expectancy:["ih-k s-p-eh1-k t-ah-n s-iy","nn"],expectant:["ih-k s-p-eh1-k t-ah-n-t","jj"],expectation:["eh-k s-p-eh-k t-ey1 sh-ah-n","nn"],expected:["ih-k s-p-eh1-k t-ah-d","vbn vbd jj vb"],expediency:["ih-k s-p-iy1 d-iy ah-n s-iy","nn"],expedient:["ih-k s-p-iy1 d-iy ah-n-t","jj nn"],expedite:["eh1-k s-p-ih d-ay-t","vb"],expedited:["eh1-k s-p-ih d-ay t-ih-d","vbn vbd jj"],expedition:["eh-k s-p-ah d-ih1 sh-ah-n","nn"],expeditious:["eh-k s-p-ah d-ih1 sh-ah-s","jj"],expeditiously:["eh-k s-p-ah d-ih1 sh-ah-s l-iy","rb"],expel:["ih-k s-p-eh1-l","vb"],expend:["ih-k s-p-eh1-n-d","vb vbp"],expendable:["ih-k s-p-eh1-n d-ah b-ah-l","jj"],expenditure:["ih-k s-p-eh1-n d-ah ch-er","nn"],expense:["ih-k s-p-eh1-n-s","nn"],expensive:["ih-k s-p-eh1-n s-ih-v","jj rb"],experience:["ih-k s-p-ih1 r-iy ah-n-s","nn vbp vb"],experienced:["ih-k s-p-ih1 r-iy ah-n-s-t","vbn jj vbd"],experiment:["ih-k s-p-eh1 r-ah m-ah-n-t","nn vbp vb"],experimental:["ih-k s-p-eh r-ah m-eh1-n t-ah-l","jj"],experimentally:["ih-k s-p-eh r-ah m-eh1-n t-ah l-iy","rb"],experimentation:["ih-k s-p-eh r-ah m-ah-n t-ey1 sh-ah-n","nn"],experimenter:["ih-k s-p-eh1 r-ah m-eh-n t-er","nn"],expert:["eh1-k s-p-er-t","nn jj"],expertise:["eh-k s-p-er t-iy1-z","nn"],expertly:["eh1-k s-p-er-t l-iy","rb"],expiration:["eh-k s-p-er ey1 sh-ah-n","nn"],expire:["ih-k s-p-ay1-r","vb vbp"],expired:["ih-k s-p-ay1-r-d","vbd vbn jj"],explain:["ih-k s-p-l-ey1-n","vb vbp"],explanation:["eh-k s-p-l-ah n-ey1 sh-ah-n","nn"],explanatory:["ih-k s-p-l-ae1 n-ah t-ao r-iy","jj"],expletive:["eh1-k s-p-l-ah t-ih-v","nn"],explicit:["ih-k s-p-l-ih1 s-ah-t","jj"],explicitly:["ih-k s-p-l-ih1 s-ah-t l-iy","rb"],explode:["ih-k s-p-l-ow1-d","vb vbp"],exploit:["eh1-k s-p-l-oy-t","vb nn vbp"],exploitation:["eh-k s-p-l-oy t-ey1 sh-ah-n","nn"],exploitative:["eh-k s-p-l-oy1 t-ah t-ih-v","jj"],exploration:["eh-k s-p-l-er ey1 sh-ah-n","nn"],exploratory:["ih-k s-p-l-ao1 r-ah t-ao r-iy","jj"],explore:["ih-k s-p-l-ao1-r","vb vbp"],explorer:["ih-k s-p-l-ao1 r-er","nn"],explosion:["ih-k s-p-l-ow1 zh-ah-n","nn"],explosive:["ih-k s-p-l-ow1 s-ih-v","jj nn"],explosively:["eh-k s-p-l-ow1 s-ih-v l-iy","rb"],expo:["eh1-k s-p-ow","nn"],exponent:["ih-k s-p-ow1 n-ah-n-t","nn"],exponential:["eh-k s-p-ow n-eh1-n ch-ah-l","jj"],exponentially:["eh-k s-p-ow n-eh1-n sh-ah l-iy","rb"],export:["eh1-k s-p-ao-r-t","nn vbp jj vb"],exporter:["ih-k s-p-ao1-r t-er","nn"],expose:["ih-k s-p-ow1-z","vb nn vbp"],exposed:["ih-k s-p-ow1-z-d","vbn jj vbd"],exposing:["ih-k s-p-ow1 z-ih-ng","vbg jj"],exposition:["eh-k s-p-ah z-ih1 sh-ah-n","nn"],exposure:["ih-k s-p-ow1 zh-er","nn"],expound:["ih-k-s-p-aw1-n-d","vb"],express:["ih-k s-p-r-eh1-s","vb vbp jj nn"],expressed:["ih-k s-p-r-eh1-s-t","vbn vbd jj"],expression:["ih-k s-p-r-eh1 sh-ah-n","nn"],expressionism:["ih-k s-p-r-eh1 sh-ah-n ih z-ah-m","nn"],expressionist:["ih-k s-p-r-eh1 sh-ah-n ah-s-t","nn"],expressionistic:["ih-k s-p-r-eh sh-ah n-ih1 s-t-ih-k","jj"],expressive:["ih-k s-p-r-eh1 s-ih-v","jj"],expressly:["eh-k s-p-r-eh1-s l-iy","rb"],expressway:["ih-k s-p-r-eh1-s w-ey","nn"],expropriated:["eh-k-s p-r-ow1 p-r-iy ey t-ih-d","jj"],expulsion:["ih-k s-p-ah1-l sh-ah-n","nn"],expunge:["ih-k-s-p-ah1-n-jh","vb"],exquisite:["eh1-k s-k-w-ah z-ah-t","jj"],exquisitely:["eh-k s-k-w-ih1 z-ih-t l-iy","rb"],extant:["eh1-k s-t-ah-n-t","jj"],extend:["ih-k s-t-eh1-n-d","vb vbp"],extended:["ih-k s-t-eh1-n d-ah-d","vbn vbd jj"],extendible:["eh-k s-t-eh1-n d-ih b-ah-l","jj"],extension:["ih-k s-t-eh1-n sh-ah-n","nn"],extensive:["ih-k s-t-eh1-n s-ih-v","jj"],extensively:["ih-k s-t-eh1-n s-ih-v l-iy","rb"],extent:["ih-k s-t-eh1-n-t","nn"],extenuate:["ih-k-s-t-eh1-n-y-uw-ey-t","vb"],exterior:["ih-k s-t-ih1 r-iy er","jj nn"],exterminate:["ih-k-s-t-er1-m-ah-n-ey-t","vb"],extermination:["ih-k s-t-er m-ah n-ey1 sh-ah-n","nn"],exterminator:["ih-k s-t-er1 m-ah n-ey t-er","nn"],external:["ih-k s-t-er1 n-ah-l","jj"],externally:["ih-k s-t-er1 n-ah l-iy","rb"],extinct:["ih-k s-t-ih1-ng-k-t","jj"],extinction:["ih-k s-t-ih1-ng-k sh-ah-n","nn"],extinguish:["ih-k s-t-ih1-ng g-w-ih-sh","vb"],extinguisher:["ih-k s-t-ih1-ng g-w-ih sh-er","nn"],extinguishment:["ih-k s-t-ih1-ng g-w-ih-sh m-ah-n-t","nn"],extol:["ih-k s-t-ow1-l","vb"],extort:["ih-k s-t-ao1-r-t","vb"],extortion:["ih-k s-t-ao1-r sh-ah-n","nn"],extortionate:["ih-k s-t-ao1-r sh-ah-n ah-t","jj"],extra:["eh1-k s-t-r-ah","jj nn rb"],extract:["ih-k s-t-r-ae1-k-t","vb nn vbp"],extraction:["ih-k s-t-r-ae1-k sh-ah-n","nn"],extracurricular:["eh-k s-t-r-ah k-er ih1 k-y-ah l-er","jj"],extradite:["eh1-k s-t-r-ah d-ay-t","vb"],extradition:["eh-k s-t-r-ah d-ih1 sh-ah-n","nn"],extralegal:["eh-k s-t-r-ah l-iy1 g-ah-l","jj"],extramarital:["eh-k s-t-r-ah m-eh1 r-ah t-ah-l","jj"],extraneous:["eh-k s-t-r-ey1 n-iy ah-s","jj"],extraordinarily:["ih-k s-t-r-ao-r d-ah n-eh1 r-ah l-iy","rb"],extraordinary:["ih-k s-t-r-ao1-r d-ah-n eh r-iy","jj nn"],extrapolate:["ih-k s-t-r-ae1 p-ah l-ey-t","vb"],extrapolation:["ih-k s-t-r-ae p-ah l-ey1 sh-ah-n","nn"],extraterrestrial:["eh-k s-t-r-ah t-er eh1-s t-r-iy ah-l","jj"],extraterritorial:["eh-k s-t-r-ah t-eh r-ih t-ao1 r-iy ah-l","jj"],extravagance:["ih-k s-t-r-ae1 v-ah g-ah-n-s","nn"],extravagant:["ih-k s-t-r-ae1 v-ah g-ah-n-t","jj"],extravagantly:["eh-k s-t-r-ae1 v-ah g-ah-n-t l-iy","rb"],extravaganza:["ih-k s-t-r-ae v-ah g-ae1-n z-ah","nn"],extreme:["ih-k s-t-r-iy1-m","jj nn"],extremely:["ih-k s-t-r-iy1-m l-iy","rb"],extremist:["ih-k s-t-r-iy1 m-ih-s-t","jj nn"],extremity:["ih-k-s t-r-eh1 m-ah t-iy","nn"],extricate:["eh1-k s-t-r-ah k-ey-t","vb"],extrude:["ih-k-s-t-r-uw1-d","vb"],extruded:["ih-k s-t-r-uw1 d-ah-d","vbn jj"],extrusion:["ih-k-s t-r-uw1 zh-ah-n","nn"],exuberance:["ih-g z-uw1 b-er ah-n-s","nn"],exuberant:["ih-g z-uw1 b-er ah-n-t","jj"],exude:["ih-g z-uw1-d","vb vbp"],exult:["ih-g-z-ah1-l-t","vb"],exultantly:["ih-g z-ah1-l t-ah-n-t l-iy","rb"],eye:["ay1","nn vb"],eyeball:["ay1 b-ao-l","nn"],eyebrow:["ay1 b-r-aw","nn"],eyeglasses:["ay1 g-l-ae s-ah-z","nn"],eyelash:["ay1 l-ae-sh","nn"],eyelet:["ay1 l-ah-t","nn"],eyelid:["ay1 l-ih-d","nn"],eyepiece:["ay1 p-iy-s","nn"],eyesight:["ay1 s-ay-t","nn"],eyesore:["ay1 s-ao-r","nn"],eyewear:["ay1 w-eh-r","jj nn"],eyewitness:["ay1 w-ih1-t n-ah-s","nn jj"],fable:["f-ey1 b-ah-l","nn"],fabled:["f-ey1 b-ah-l-d","jj"],fabric:["f-ae1 b-r-ih-k","nn"],fabricate:["f-ae1 b-r-ah k-ey-t","vb vbp"],fabricated:["f-ae1 b-r-ih k-ey t-ah-d","vbn vbd jj"],fabrication:["f-ae b-r-ih k-ey1 sh-ah-n","nn"],fabricator:["f-ae1 b-r-ih k-ey t-er","nn"],fabulous:["f-ae1 b-y-ah l-ah-s","jj"],fabulously:["f-ae1 b-y-uw l-ah-s l-iy","rb"],facade:["f-ah s-aa1-d","nn"],face:["f-ey1-s","nn vbp jj rb vb"],faceless:["f-ey1-s l-ah-s","jj"],facelift:["f-ey1-s l-ih-f-t","nn"],facet:["f-ae1 s-ah-t","nn"],facetious:["f-ah s-iy1 sh-ah-s","jj"],facetiously:["f-ah s-iy1 sh-ah-s l-iy","rb"],facial:["f-ey1 sh-ah-l","jj"],facile:["f-ae1 s-ih-l","jj"],facilitate:["f-ah s-ih1 l-ah t-ey-t","vb vbp"],facilitator:["f-ah s-ih1 l-ah t-ey t-er","nn"],facility:["f-ah s-ih1 l-ih t-iy","nn"],facing:["f-ey1 s-ih-ng","vbg jj"],facsimile:["f-ae-k s-ih1 m-ah l-iy","nn jj"],fact:["f-ae1-k-t","nn"],faction:["f-ae1-k sh-ah-n","nn"],factor:["f-ae1-k t-er","nn vb vbp"],factored:["f-ae1-k t-er-d","vbn jj"],factory:["f-ae1-k t-er iy","nn jj"],factual:["f-ae1-k ch-uw ah-l","jj"],factually:["f-ae1-k ch-uw ah l-iy","rb"],faculty:["f-ae1 k-ah-l t-iy","nn"],fad:["f-ae1-d","nn"],faddish:["f-ae1 d-ih-sh","jj"],fade:["f-ey1-d","vb vbp nn"],faded:["f-ey1 d-ah-d","vbn vbd jj"],fading:["f-ey1 d-ih-ng","vbg jj nn"],fail:["f-ey1-l","vb vbp nn"],failed:["f-ey1-l-d","vbd vbn jj"],failure:["f-ey1 l-y-er","nn"],faint:["f-ey1-n-t","jj nn vb"],fainter:["f-ey1-n t-er","jjr"],faintest:["f-ey1-n t-ah-s-t","jjs"],faintly:["f-ey1-n-t l-iy","rb"],fair:["f-eh1-r","jj nn rb"],faire:["f-eh1-r","nn"],fairer:["f-eh1 r-er","jjr"],fairest:["f-eh1 r-ih-s-t","jjs"],fairly:["f-eh1-r l-iy","rb"],fairness:["f-eh1-r n-ah-s","nn"],fairway:["f-eh1-r w-ey","nn"],fairy:["f-eh1 r-iy","jj nn"],faith:["f-ey1-th","nn"],faithful:["f-ey1-th f-ah-l","jj nn"],faithfully:["f-ey1-th f-ah l-iy","rb"],fajita:["f-ah jh-iy1 t-ah","nn"],fake:["f-ey1-k","jj nn vb vbp"],falcon:["f-ae1-l k-ah-n","nn"],falconer:["f-ae1-l k-ah n-er","nn"],falconry:["f-ae1-l k-ah-n r-iy","nn"],fall:["f-ao1-l","nn vbp vb"],fallacious:["f-ah l-ey1 sh-ah-s","jj"],fallacy:["f-ae1 l-ah s-iy","nn"],fallback:["f-ao1-l b-ae-k","nn jj"],fallen:["f-aa1 l-ah-n","vbn jj"],fallible:["f-ae1 l-ah b-ah-l","jj"],falling:["f-aa1 l-ih-ng","vbg jj nn"],falloff:["f-ao1-l ao-f","nn"],fallout:["f-ao1-l aw-t","nn"],fallow:["f-ae1 l-ow","jj"],false:["f-ao1-l-s","jj rb"],falsehood:["f-ae1-l-s hh-uh-d","nn"],falsely:["f-ao1-l-s l-iy","rb"],falsification:["f-ae-l s-ah f-ah k-ey1 sh-ah-n","nn"],falsified:["f-ao1-l s-ah f-ay-d","vbn"],falsify:["f-ao1-l s-ah f-ay","vb"],falsity:["f-ao1-l s-ah t-iy","nn"],falter:["f-ao1-l t-er","vb vbp"],fame:["f-ey1-m","nn vb"],famed:["f-ey1-m-d","jj vbn"],familial:["f-ah m-ih1 l-y-ah-l","jj"],familiar:["f-ah m-ih1 l-y-er","jj nn"],familiarity:["f-ah m-ih l-y-eh1 r-ah t-iy","nn"],familiarize:["f-ah m-ih1 l-y-er ay-z","vb"],family:["f-ae1 m-ah l-iy","nn"],famine:["f-ae1 m-ah-n","nn"],famous:["f-ey1 m-ah-s","jj"],famously:["f-ey1 m-ah-s l-iy","rb"],fan:["f-ae1-n","nn vbp vb"],fanatic:["f-ah n-ae1 t-ih-k","nn jj"],fanatical:["f-ah n-ae1 t-ih k-ah-l","jj"],fanatically:["f-ah n-ae1 t-ih k-ah l-iy","rb"],fanaticism:["f-ah n-ae1 t-ah s-ih z-ah-m","nn"],fancied:["f-ae1-n s-iy-d","vbd"],fancier:["f-ae1-n s-iy er","jjr"],fancies:["f-ae1-n s-iy-z","vbz"],fanciest:["f-ae1-n s-iy ah-s-t","jjs"],fanciful:["f-ae1-n s-ih f-ah-l","jj"],fancy:["f-ae1-n s-iy","jj nn vb"],fanfare:["f-ae1-n f-eh-r","nn"],fang:["f-ae1-ng","nn"],fanny:["f-ae1 n-iy","nn"],fantasia:["f-ae-n t-ey1 zh-ah","nn"],fantasize:["f-ae1-n t-ah s-ay-z","vbp vb"],fantastic:["f-ae-n t-ae1 s-t-ih-k","jj"],fantastically:["f-ae-n t-ae1 s-t-ih-k l-iy","rb"],fantasy:["f-ae1-n t-ah s-iy","nn"],far:["f-aa1-r","rb in jj"],faraway:["f-aa1 r-ah w-ey1","jj"],farce:["f-aa1-r-s","nn"],fare:["f-eh1-r","nn vbp vb"],farewell:["f-eh-r w-eh1-l","nn uh"],farfetched:["f-aa1-r f-eh1-ch-t","jj"],farm:["f-aa1-r-m","nn vb"],farmed:["f-aa1-r-m-d","vbd jj"],farmer:["f-aa1-r m-er","nn"],farmhand:["f-aa1-r-m hh-ae-n-d","nn"],farmhouse:["f-aa1-r-m hh-aw-s","nn"],farmland:["f-aa1-r-m l-ae-n-d","nn"],faro:["f-eh1 r-ow","nn"],farther:["f-aa1-r dh-er","rb rbr"],farthest:["f-aa1-r dh-ah-s-t","jjs rbs"],fascinate:["f-ae1 s-ah n-ey-t","vb vbp"],fascinated:["f-ae1 s-ah n-ey t-ah-d","vbn jj vbd"],fascinating:["f-ae1 s-ah n-ey t-ih-ng","jj"],fascination:["f-ae s-ah n-ey1 sh-ah-n","nn"],fascism:["f-ae1 sh-ih z-ah-m","nn"],fascist:["f-ae1 sh-ah-s-t","jj"],fashion:["f-ae1 sh-ah-n","nn vb"],fashionable:["f-ae1 sh-ah-n ah b-ah-l","jj nn"],fast:["f-ae1-s-t","rb jj nn rp"],fastball:["f-ae1-s-t b-ao-l","nn"],fasten:["f-ae1 s-ah-n","vb vbp"],fastener:["f-ae1 s-ah n-er","nn"],fastening:["f-ae1 s-ah n-ih-ng","nn"],faster:["f-ae1 s-t-er","rbr jjr rb"],fastest:["f-ae1 s-t-ah-s-t","jjs rbs"],fastidious:["f-ae s-t-ih1 d-iy ah-s","jj"],fastness:["f-ae1-s-t n-ah-s","nn"],fat:["f-ae1-t","jj nn"],fatal:["f-ey1 t-ah-l","jj"],fatality:["f-ah t-ae1 l-ah t-iy","nn"],fatally:["f-ey1 t-ah l-iy","rb"],fate:["f-ey1-t","nn"],fateful:["f-ey1-t f-ah-l","jj"],father:["f-aa1 dh-er","nn vb"],fatherly:["f-aa1 dh-er l-iy","jj"],fathom:["f-ae1 dh-ah-m","vb"],fatigue:["f-ah t-iy1-g","nn vb vbp"],fatigued:["f-ah t-iy1-g-d","vbn jj"],fatten:["f-ae1 t-ah-n","vb vbp"],fatter:["f-ae1 t-er","jjr"],fatty:["f-ae1 t-iy","jj"],fatuous:["f-ae1 ch-ah-w ah-s","jj"],faucet:["f-ao1 s-ah-t","nn"],fault:["f-ao1-l-t","nn vb vbp"],faulty:["f-ao1-l t-iy","jj"],fauna:["f-ao1 n-ah","nn"],faux:["f-ao1-k-s","jj"],favor:["f-ey1 v-er","nn vbp vb"],favorable:["f-ey1 v-er ah b-ah-l","jj"],favorably:["f-ey1 v-er ah b-l-iy","rb"],favored:["f-ey1 v-er-d","vbn vbd jj"],favorite:["f-ey1 v-er ih-t","jj nn"],favoritism:["f-ey1 v-er ih t-ih z-ah-m","nn"],fawn:["f-ao1-n","nn jj vb"],fax:["f-ae1-k-s","nn vb"],faze:["f-ey1-z","vb"],fealty:["f-iy1 ah-l t-iy","nn"],fear:["f-ih1-r","nn vb vbp"],feared:["f-ih1-r-d","vbd vbn jj"],fearful:["f-ih1-r f-ah-l","jj"],fearless:["f-ih1-r l-ah-s","jj"],fearsome:["f-ih1-r s-ah-m","jj"],feasibility:["f-iy z-ah b-ih1 l-ah t-iy","nn"],feasible:["f-iy1 z-ah b-ah-l","jj"],feast:["f-iy1-s-t","nn vb"],feat:["f-iy1-t","nn"],feather:["f-eh1 dh-er","nn vb"],featherbedding:["f-eh1 dh-er b-eh d-ih-ng","nn"],feathered:["f-eh1 dh-er-d","jj vbn"],featherless:["f-eh1 dh-er l-ah-s","jj"],feathery:["f-eh1 dh-er iy","jj"],feature:["f-iy1 ch-er","nn vbp jj vb"],featured:["f-iy1 ch-er-d","vbn vbd jj"],featureless:["f-iy1 ch-er l-ah-s","jj"],fecal:["f-iy1 k-ah-l","jj"],feckless:["f-eh1-k l-ih-s","jj"],federal:["f-eh1 d-er ah-l","jj"],federalist:["f-eh1 d-er ah l-ih-s-t","nn"],federalized:["f-eh1 d-er ah l-ay-z-d","jj"],federally:["f-eh1 d-er ah l-iy","rb"],federation:["f-eh d-er ey1 sh-ah-n","nn"],fedora:["f-ih d-ao1 r-ah","nn"],fee:["f-iy1","nn"],feeble:["f-iy1 b-ah-l","jj"],feebly:["f-iy1 b-l-iy","rb"],feed:["f-iy1-d","nn vb"],feedback:["f-iy1-d b-ae-k","nn"],feeder:["f-iy1 d-er","nn"],feedlot:["f-iy1-d l-aa-t","nn"],feedstock:["f-iy1-d s-t-aa-k","nn"],feel:["f-iy1-l","vb vbp nn"],feeler:["f-iy1 l-er","nn"],feeling:["f-iy1 l-ih-ng","nn vbg"],feign:["f-ey1-n","vb"],feigned:["f-ey1-n-d","jj vbn"],feint:["f-ey1-n-t","nn vb"],feisty:["f-ay1 s-t-iy","jj"],felicitous:["f-ih l-ih1 s-ah t-ah-s","jj"],felicity:["f-ih l-ih1 s-ah t-iy","nn"],feline:["f-iy1 l-ay-n","jj"],fell:["f-eh1-l","vbd jj nn vbn"],felled:["f-eh1-l-d","vbn vbd"],feller:["f-eh1 l-er","nn"],fellow:["f-eh1 l-ow","nn jj"],fellowship:["f-eh1 l-ow sh-ih-p","nn"],felon:["f-eh1 l-ah-n","nn"],felony:["f-eh1 l-ah n-iy","nn"],felt:["f-eh1-l-t","vbd vbn"],female:["f-iy1 m-ey-l","jj nn"],feminine:["f-eh1 m-ah n-ah-n","jj nn"],femininity:["f-eh m-ah n-ih1 n-ah t-iy","nn"],feminism:["f-eh1 m-ih n-ih z-ah-m","nn"],feminist:["f-eh1 m-ah n-ah-s-t","jj nn"],fence:["f-eh1-n-s","nn vb"],fenced:["f-eh1-n-s-t","jj vbn"],fencing:["f-eh1-n s-ih-ng","nn"],fend:["f-eh1-n-d","vb"],fender:["f-eh1-n d-er","nn"],fennel:["f-eh1 n-ah-l","nn"],fenugreek:["f-eh1 n-uw g-r-iy-k","nn"],ferment:["f-er m-eh1-n-t","nn vb"],fermentation:["f-er m-ah-n t-ey1 sh-ah-n","jj nn"],fern:["f-er1-n","nn"],fernery:["f-er1 n-er iy","nn"],ferocious:["f-er ow1 sh-ah-s","jj"],ferociously:["f-er ow1 sh-ih-s l-iy","rb"],ferocity:["f-er aa1 s-ah t-iy","nn"],ferret:["f-eh1 r-ah-t","vb nn"],ferried:["f-eh1 r-iy-d","vbd vbn"],ferris:["f-eh1 r-ih-s","jj"],ferromagnetic:["f-eh r-ow m-ae-g n-eh1 t-ih-k","jj"],ferry:["f-eh1 r-iy","nn vb"],fertile:["f-er1 t-ah-l","jj"],fertility:["f-er t-ih1 l-ah t-iy","nn"],fertilization:["f-er t-ah l-ih z-ey1 sh-ah-n","nn"],fertilize:["f-er1-t-ah-l-ay-z","vb"],fertilized:["f-er1 t-ah l-ay-z-d","vbn jj"],fertilizer:["f-er1 t-ah l-ay z-er","nn"],fervent:["f-er1 v-ah-n-t","jj"],fervently:["f-er1 v-ah-n-t l-iy","rb"],fervid:["f-er1 v-ah-d","nn"],fervor:["f-er1 v-er","nn"],fest:["f-eh1-s-t","nn jjs"],fester:["f-eh1 s-t-er","vb"],festival:["f-eh1 s-t-ah v-ah-l","nn"],festive:["f-eh1 s-t-ih-v","jj"],festivity:["f-eh s-t-ih1 v-ah t-iy","nn"],festoon:["f-eh-s-t-uw1-n","vb"],fetal:["f-iy1 t-ah-l","jj"],fetch:["f-eh1-ch","vb vbp"],fete:["f-ey1-t","vb"],fetid:["f-eh1 t-ah-d","jj"],fetish:["f-eh1 t-ih-sh","nn"],fetter:["f-eh1-t-er","vb"],fetus:["f-iy1 t-ah-s","nn"],feud:["f-y-uw1-d","nn vb"],feudal:["f-y-uw1 d-ah-l","jj"],feudalism:["f-y-uw1 d-ah l-ih z-ah-m","nn"],feudalistic:["f-y-uw d-ah l-ih1 s-t-ih-k","jj"],fever:["f-iy1 v-er","nn"],fevered:["f-iy1 v-er-d","jj"],feverish:["f-iy1 v-er ih-sh","jj"],feverishly:["f-eh1 v-er ih-sh l-iy","rb"],few:["f-y-uw1","jj"],fewer:["f-y-uw1 er","jjr rb rbr"],fewest:["f-y-uw1 ah-s-t","jjs"],fiance:["f-iy aa1-n s-ey","nn"],fiancee:["f-iy ae1-n s-iy","nn"],fiasco:["f-iy ae1-s k-ow","nn"],fiat:["f-ay1 ae-t","nn"],fiber:["f-ay1 b-er","nn"],fiberglass:["f-ay1 b-er g-l-ae-s","nn"],fiberoptic:["f-ay1 b-er aa-p t-ih-k","jj"],fibrillation:["f-ih b-r-ih l-ey1 sh-ah-n","nn"],fibrin:["f-ay1 b-r-ah-n","nn"],fibrosis:["f-ay b-r-ow1 s-ah-s","nn"],fibrous:["f-ay1 b-r-ah-s","jj"],fickle:["f-ih1 k-ah-l","jj"],fickleness:["f-ih1 k-ah-l n-ah-s","nn"],fiction:["f-ih1-k sh-ah-n","nn"],fictional:["f-ih1-k sh-ah n-ah-l","jj"],fictionalize:["f-ih1-k-sh-ah-n-ah-l-ay-z","vb"],fictitious:["f-ih-k t-ih1 sh-ah-s","jj"],fiddle:["f-ih1 d-ah-l","nn vb"],fiddling:["f-ih1-d l-ih-ng","nn jj vbg"],fidelity:["f-ah d-eh1 l-ah t-iy","nn"],fidget:["f-ih1-jh-ih-t","vb"],fiduciary:["f-ah d-uw1 sh-iy eh r-iy","jj"],fiefdom:["f-iy1-f d-ah-m","nn"],field:["f-iy1-l-d","nn jj vb vbp"],fielder:["f-iy1-l d-er","nn"],fieldwork:["f-iy1-l-d w-er-k","nn"],fiend:["f-iy1-n-d","nn"],fiendish:["f-iy1-n d-ih-sh","jj"],fierce:["f-ih1-r-s","jj"],fiercely:["f-ih1-r-s l-iy","rb"],fiercer:["f-ih1-r s-er","jjr"],fiercest:["f-ih1-r s-ah-s-t","jjs"],fiery:["f-ay1 er iy","jj"],fiesta:["f-iy eh1 s-t-ah","nn"],fifth:["f-ih1-f-th","jj nn rb"],fig:["f-ih1-g","nn"],fight:["f-ay1-t","nn vb vbp"],fighter:["f-ay1 t-er","nn"],fighting:["f-ay1 t-ih-ng","vbg jj"],figurative:["f-ih1 g-y-er ah t-ih-v","jj"],figuratively:["f-ih g-y-uh1 r-ah t-ih-v l-iy","rb"],figure:["f-ih1 g-y-er","nn vb vbp vbz"],figured:["f-ih1 g-y-er-d","vbd jj vbn"],figurehead:["f-ih1 g-y-er hh-eh-d","nn"],filament:["f-ih1 l-ah m-ah-n-t","nn"],filbert:["f-ih1-l b-er-t","jj"],filch:["f-ih1-l-ch","vb"],file:["f-ay1-l","vb nn vbp"],filer:["f-ay1 l-er","nn"],filet:["f-ih l-ey1","nn"],filial:["f-ih1 l-iy ah-l","jj"],filibuster:["f-ih1 l-ah b-ah s-t-er","nn vb"],filigree:["f-ih1 l-ah g-r-iy","jj nn"],filing:["f-ay1 l-ih-ng","nn vbg"],fill:["f-ih1-l","vb vbp nn"],filled:["f-ih1-l-d","vbn jj vbd"],filler:["f-ih1 l-er","nn"],fillet:["f-ah-l-ey1","vb"],fillip:["f-ih1 l-ah-p","nn"],filly:["f-ih1 l-iy","nn"],film:["f-ih1-l-m","nn vb"],filmed:["f-ih1-l-m-d","vbn vbd jj"],filmmaker:["f-ih1-l m-ey k-er","nn"],filmmaking:["f-ih1-l m-ey k-ih-ng","nn"],filter:["f-ih1-l t-er","nn vb"],filtered:["f-ih1-l t-er-d","vbn jj"],filth:["f-ih1-l-th","nn"],filthy:["f-ih1-l th-iy","jj"],filtration:["f-ih-l t-r-ey1 sh-ah-n","nn"],fin:["f-ih1-n","nn"],final:["f-ay1 n-ah-l","jj"],finale:["f-ah n-ae1 l-iy","nn"],finalist:["f-ay1 n-ah l-ih-s-t","nn"],finality:["f-ay n-ae1 l-ah t-iy","nn"],finalize:["f-ay1-n-ah-l-ay-z","vb"],finally:["f-ay1 n-ah l-iy","rb"],finance:["f-ah n-ae1-n-s","nn vbp vb"],financed:["f-ih n-ae1-n-s-t","vbn jj vbd"],financial:["f-ah n-ae1-n sh-ah-l","jj"],financially:["f-ah n-ae1-n sh-ah l-iy","rb"],financier:["f-ih n-ah-n s-ih1-r","nn"],financing:["f-ah n-ae1-n s-ih-ng","nn jj vbg"],find:["f-ay1-n-d","vb vbp nn"],finder:["f-ay1-n d-er","nn"],fine:["f-ay1-n","jj nn rb vb"],finely:["f-ay1-n l-iy","rb"],finer:["f-ay1 n-er","jjr"],finery:["f-ay1 n-er iy","nn"],finesse:["f-ih n-eh1-s","nn vb"],finest:["f-ay1 n-ah-s-t","jjs"],finger:["f-ih1-ng g-er","nn vb"],fingernail:["f-ih1-ng g-er n-ey-l","nn"],fingerprint:["f-ih1-ng g-er p-r-ih-n-t","nn vb"],fingertip:["f-ih1-ng g-er t-ih-p","nn"],finicky:["f-ih1 n-ah k-iy","jj"],fining:["f-ay1 n-ih-ng","nn"],finish:["f-ih1 n-ih-sh","vb nn vbp"],finished:["f-ih1 n-ih-sh-t","vbd jj vb vbn"],finisher:["f-ih1 n-ih sh-er","nn"],finishing:["f-ih1 n-ih sh-ih-ng","vbg jj nn"],finite:["f-ay1 n-ay-t","jj nn"],fir:["f-er1","nn"],fire:["f-ay1 er","nn vb"],firearm:["f-ay1 er aa-r-m","nn"],fireball:["f-ay1 er b-ao-l","nn"],firebomb:["f-ay1-er-b-aa-m","vb"],firebombing:["f-ay1 er b-aa m-ih-ng","nn"],firebrand:["f-ay1 er b-r-ae-n-d","nn"],firebug:["f-ay1 er b-ah-g","nn"],firecracker:["f-ay1 er k-r-ae k-er","nn"],firefighter:["f-ay1-r f-ay t-er","nn"],firefighting:["f-ay1-r f-ay t-ih-ng","nn"],firehouse:["f-ay1 er hh-aw-s","nn"],fireman:["f-ay1-r m-ah-n","nn"],fireplace:["f-ay1 er p-l-ey-s","nn"],firepower:["f-ay1-r p-aw er","nn"],fireproof:["f-ay1-er-p-r-uw-f","vb"],firestorm:["f-ay1-r s-t-ao-r-m","nn"],fireweed:["f-ay1 er w-iy-d","nn"],firewood:["f-ay1 er w-uh-d","nn"],firework:["f-ay1-r w-er-k","nn"],firing:["f-ay1 r-ih-ng","vbg jj nn"],firm:["f-er1-m","nn jj vb"],firmer:["f-er1 m-er","jjr rb rbr"],firmly:["f-er1-m l-iy","rb"],firmness:["f-er1-m n-ah-s","nn"],first:["f-er1-s-t","jj rb nn"],firsthand:["f-er-s-t hh-ae1-n-d","rb jj nn"],fiscal:["f-ih1-s k-ah-l","jj in nn"],fiscally:["f-ih1-s k-ah l-iy","rb"],fish:["f-ih1-sh","nn vb"],fishbowl:["f-ih1-sh b-ow-l","nn"],fisher:["f-ih1 sh-er","nn"],fisherman:["f-ih1 sh-er m-ae-n","nn"],fishery:["f-ih1 sh-er iy","nn"],fishing:["f-ih1 sh-ih-ng","nn vbg jj"],fishy:["f-ih1 sh-iy","jj"],fission:["f-ih1 sh-ah-n","nn"],fissionable:["f-ih1 sh-ah-n ah b-ah-l","jj"],fissure:["f-ih1-sh-er","vb"],fist:["f-ih1-s-t","nn vb"],fit:["f-ih1-t","vb vbn vbp jj nn rb vbd"],fitful:["f-ih1-t f-ah-l","jj"],fitfully:["f-ih1-t f-ah l-iy","rb"],fitness:["f-ih1-t n-ah-s","nn"],fitted:["f-ih1 t-ah-d","vbn vbd jj"],fittest:["f-ih1 t-ah-s-t","jjs"],fitting:["f-ih1 t-ih-ng","jj nn vbg"],five:["f-ay1-v","cd"],fivefold:["f-ay1-v f-ow-l-d","jj rb"],fix:["f-ih1-k-s","vb vbp nn"],fixable:["f-ih1-k s-ah b-ah-l","jj"],fixate:["f-ih1-k-s-ey-t","vb"],fixation:["f-ih-k s-ey1 sh-ah-n","nn"],fixed:["f-ih1-k-s-t","vbn jj vbd"],fixture:["f-ih1-k-s ch-er","nn"],fizzle:["f-ih1-z-ah-l","vb"],fjord:["f-y-ao1-r-d","nn"],flabbergast:["f-l-ae1-b-er-g-ae-s-t","vb"],flabbergasted:["f-l-ae1 b-er g-ae s-t-ih-d","jj vbn"],flaccid:["f-l-ae1-k s-ih-d","jj"],flag:["f-l-ae1-g","nn vb"],flagellate:["f-l-ae1-jh-ah-l-ey-t","vb"],flageolet:["f-l-ae jh-ah l-eh1-t","nn"],flagging:["f-l-ae1 g-ih-ng","jj vbg"],flagpole:["f-l-ae1-g p-ow-l","nn"],flagrant:["f-l-ey1 g-r-ah-n-t","jj"],flagrantly:["f-l-ey1 g-r-ah-n-t l-iy","rb"],flagship:["f-l-ae1-g sh-ih-p","nn jj"],flail:["f-l-ey1-l","nn vb"],flair:["f-l-eh1-r","nn"],flak:["f-l-ae1-k","nn"],flake:["f-l-ey1-k","nn"],flaky:["f-l-ey1 k-iy","jj"],flamboyant:["f-l-ae-m b-oy1 ah-n-t","jj"],flamboyantly:["f-l-ae-m b-oy1 ah-n-t l-iy","rb"],flame:["f-l-ey1-m","nn vbp vb"],flaming:["f-l-ey1 m-ih-ng","jj vbg"],flammable:["f-l-ae1 m-ah b-ah-l","jj"],flange:["f-l-ae1-n-jh","nn"],flank:["f-l-ae1-ng-k","nn vb"],flannel:["f-l-ae1 n-ah-l","nn"],flap:["f-l-ae1-p","nn"],flapper:["f-l-ae1 p-er","nn"],flapping:["f-l-ae1 p-ih-ng","vbg jj"],flare:["f-l-eh1-r","nn vb vbp"],flared:["f-l-eh1-r-d","vbd vbn jj"],flaring:["f-l-eh1 r-ih-ng","vbg jj"],flash:["f-l-ae1-sh","nn vbp jj vb"],flashback:["f-l-ae1-sh b-ae-k","nn"],flasher:["f-l-ae1 sh-er","nn"],flashier:["f-l-ae1 sh-iy er","jjr"],flashlight:["f-l-ae1-sh l-ay-t","nn"],flashpoint:["f-l-ae1-sh p-oy-n-t","nn"],flashy:["f-l-ae1 sh-iy","jj"],flask:["f-l-ae1-s-k","nn"],flat:["f-l-ae1-t","jj nn rb"],flathead:["f-l-ae1-t hh-eh-d","jj"],flatland:["f-l-ae1-t l-ae-n-d","nn"],flatly:["f-l-ae1-t l-iy","rb"],flatness:["f-l-ae1-t n-ah-s","nn"],flatten:["f-l-ae1 t-ah-n","vb"],flattened:["f-l-ae1 t-ah-n-d","vbn vbd jj"],flatter:["f-l-ae1 t-er","vb"],flattered:["f-l-ae1 t-er-d","vbn jj vbd"],flattering:["f-l-ae1 t-er ih-ng","jj"],flattery:["f-l-ae1 t-er iy","nn"],flattish:["f-l-ae1 t-ih-sh","jj"],flatulent:["f-l-ae1 ch-ah l-ah-n-t","jj"],flatware:["f-l-ae1-t w-eh-r","nn"],flaunt:["f-l-ao1-n-t","vb vbp"],flavor:["f-l-ey1 v-er","nn vb"],flavored:["f-l-ey1 v-er-d","jj vbn"],flavorful:["f-l-ey1 v-er f-ah-l","jj"],flaw:["f-l-ao1","nn vb"],flawed:["f-l-ao1-d","jj vbn"],flawless:["f-l-ao1 l-ah-s","jj"],flax:["f-l-ae1-k-s","nn"],flaxseed:["f-l-ae1-k s-iy-d","nn"],flea:["f-l-iy1","nn"],fleck:["f-l-eh1-k","nn"],fled:["f-l-eh1-d","vbd vbn"],fledge:["f-l-eh1-jh","vb"],fledgling:["f-l-eh1-jh l-ih-ng","nn jj"],flee:["f-l-iy1","vb"],fleece:["f-l-iy1-s","nn vb"],fleet:["f-l-iy1-t","nn jj"],fleeting:["f-l-iy1 t-ih-ng","jj"],flesh:["f-l-eh1-sh","nn vb"],fleshy:["f-l-eh1 sh-iy","jj"],flew:["f-l-uw1","vbd"],flex:["f-l-eh1-k-s","nn jj vb"],flexibility:["f-l-eh-k s-ah b-ih1 l-ah t-iy","nn"],flexible:["f-l-eh1-k s-ah b-ah-l","jj"],flextime:["f-l-eh1-k s-t-ay-m","nn"],flick:["f-l-ih1-k","nn vb"],flicker:["f-l-ih1 k-er","nn vb"],flied:["f-l-ay1-d","vbd"],flier:["f-l-ay1 er","nn"],flight:["f-l-ay1-t","nn"],flighty:["f-l-ay1 t-iy","jj"],flimflam:["f-l-ih1-m f-l-ae-m","nn"],flimsy:["f-l-ih1-m z-iy","jj"],flinch:["f-l-ih1-n-ch","vb"],fling:["f-l-ih1-ng","nn vb"],flint:["f-l-ih1-n-t","nn"],flinty:["f-l-ih1-n t-iy","jj"],flip:["f-l-ih1-p","jj vb"],flippant:["f-l-ih1 p-ah-n-t","jj"],flipper:["f-l-ih1 p-er","nn"],flipping:["f-l-ih1 p-ih-ng","vbg jj rb"],flirt:["f-l-er1-t","vb vbp"],flirtation:["f-l-er t-ey1 sh-ah-n","nn"],flirtatious:["f-l-er t-ey1 sh-ah-s","jj"],flit:["f-l-ih1-t","vb vbp"],float:["f-l-ow1-t","vb nn vbp"],floater:["f-l-ow1 t-er","nn"],floating:["f-l-ow1 t-ih-ng","vbg jj"],flock:["f-l-aa1-k","nn vb vbp"],floe:["f-l-ow1","nn"],flood:["f-l-ah1-d","nn vb vbp"],floor:["f-l-ao1-r","nn"],floorboard:["f-l-ao1-r b-ao-r-d","nn"],flooring:["f-l-ao1 r-ih-ng","nn"],flop:["f-l-aa1-p","nn vbp vb"],floppy:["f-l-aa1 p-iy","jj"],flora:["f-l-ao1 r-ah","nn"],floral:["f-l-ao1 r-ah-l","jj"],florid:["f-l-ao1 r-ah-d","jj"],florist:["f-l-aa1 r-ah-s-t","nn"],flotation:["f-l-ow t-ey1 sh-ah-n","nn"],flotilla:["f-l-ow t-ih1 l-ah","nn"],flounder:["f-l-aw1-n d-er","vb"],floundering:["f-l-aw1-n d-er ih-ng","vbg jj"],flour:["f-l-aw1 er","nn"],flourish:["f-l-er1 ih-sh","vb nn vbp"],flourishing:["f-l-er1 ih sh-ih-ng","vbg jj"],flout:["f-l-aw1-t","vb"],flow:["f-l-ow1","nn vbp vb"],flower:["f-l-aw1 er","nn vb"],flowered:["f-l-aw1 er-d","jj vbd vbn"],flowerpot:["f-l-aw1 er p-aa-t","nn"],flowing:["f-l-ow1 ih-ng","vbg jj"],flown:["f-l-ow1-n","vbn"],flu:["f-l-uw1","nn"],fluctuate:["f-l-ah1-k ch-ah-w ey-t","vbp vb"],fluctuation:["f-l-ah-k ch-uw ey1 sh-ah-n","nn"],flue:["f-l-uw1","nn"],fluency:["f-l-uw1 ah-n s-iy","nn"],fluent:["f-l-uw1 ah-n-t","jj"],fluff:["f-l-ah1-f","nn"],fluffy:["f-l-ah1 f-iy","jj"],fluid:["f-l-uw1 ah-d","nn jj"],fluidity:["f-l-uw ih1 d-ah t-iy","nn"],fluke:["f-l-uw1-k","nn"],flung:["f-l-ah1-ng","vbd vbn"],flunk:["f-l-ah1-ng-k","vb"],fluorescent:["f-l-uh r-eh1 s-ah-n-t","jj"],fluoride:["f-l-uh1 r-ay-d","nn"],flurried:["f-l-er1 iy-d","vbd"],flurry:["f-l-er1 iy","nn"],flush:["f-l-ah1-sh","jj nn rb vb vbp"],fluster:["f-l-ah1-s-t-er","vb"],flute:["f-l-uw1-t","nn"],flutist:["f-l-uw1 t-ih-s-t","nn"],flutter:["f-l-ah1 t-er","nn vb"],flux:["f-l-ah1-k-s","nn"],fly:["f-l-ay1","vb nn vbp"],flyer:["f-l-ay1 er","nn"],flying:["f-l-ay1 ih-ng","vbg jj"],foal:["f-ow1-l","nn"],foam:["f-ow1-m","nn vb vbp"],foamy:["f-ow1 m-iy","jj"],focal:["f-ow1 k-ah-l","jj"],focus:["f-ow1 k-ah-s","nn vbp vb"],focused:["f-ow1 k-ah-s-t","vbn jj vbd"],focussed:["f-ow1 k-ah-s-t","vbn vbd"],fodder:["f-aa1 d-er","nn"],foe:["f-ow1","nn"],fog:["f-aa1-g","nn vb"],foggy:["f-aa1 g-iy","jj"],fogy:["f-ow1 g-iy","nn"],foible:["f-oy1 b-ah-l","nn"],foil:["f-oy1-l","nn vb"],foiled:["f-oy1-l-d","vbn jj vbd"],foist:["f-oy1-s-t","vb"],fold:["f-ow1-l-d","vb nn vbp"],folded:["f-ow1-l d-ah-d","vbn vbd jj"],folder:["f-ow1-l d-er","nn"],folding:["f-ow1-l d-ih-ng","vbg jj nn"],foliage:["f-ow1 l-ih-jh","nn"],folk:["f-ow1-k","nn"],folkish:["f-ow1 k-ih-sh","jj"],folklore:["f-ow1-k l-ao-r","nn"],folksy:["f-ow1-k s-iy","jj"],follow:["f-aa1 l-ow","vb vbp"],followed:["f-aa1 l-ow-d","vbd vbn jj"],follower:["f-aa1 l-ow er","nn"],following:["f-aa1 l-ow ih-ng","vbg jj nn"],followup:["f-aa1 l-ow ah-p","jj"],folly:["f-aa1 l-iy","nn"],foment:["f-ow1 m-eh-n-t","vb"],fond:["f-aa1-n-d","jj nn vb"],fonder:["f-aa1-n d-er","jjr"],fondest:["f-aa1-n d-ah-s-t","jjs"],fondly:["f-aa1-n-d l-iy","rb"],fondness:["f-aa1-n-d n-ah-s","nn"],font:["f-aa1-n-t","nn"],food:["f-uw1-d","nn"],foodservice:["f-uw1-d s-er1 v-ih-s","nn"],foodstuff:["f-uw1-d s-t-ah-f","nn"],fool:["f-uw1-l","nn jj vb"],foolhardy:["f-uw1-l hh-aa-r d-iy","jj"],foolish:["f-uw1 l-ih-sh","jj"],foolishly:["f-uw1 l-ih-sh l-iy","rb"],foolishness:["f-uw1 l-ih-sh n-ah-s","nn"],foolproof:["f-uw1-l p-r-uw-f","jj"],foot:["f-uh1-t","nn"],footage:["f-uh1 t-ih-jh","nn"],football:["f-uh1-t b-ao-l","nn"],footfall:["f-uh1-t f-ao-l","nn"],foothill:["f-uh1-t hh-ih-l","nn"],foothold:["f-uh1-t hh-ow-l-d","nn"],footing:["f-uh1 t-ih-ng","nn"],footlight:["f-uh1-t l-ay-t","nn"],footloose:["f-uh1-t l-uw-s","jj"],footman:["f-uh1-t m-ah-n","nn"],footnote:["f-uh1-t n-ow-t","nn vb"],footpath:["f-uh1-t p-ae-th","nn"],footprint:["f-uh1-t p-r-ih-n-t","nn"],footstep:["f-uh1-t s-t-eh-p","nn"],footwear:["f-uh1-t w-eh-r","nn"],footwork:["f-uh1-t w-er-k","nn"],for:["f-ao1-r","in cc jj rb rp"],forage:["f-ao1 r-ih-jh","nn vb"],foray:["f-ao1 r-ey","nn"],forbade:["f-er b-ey1-d","vbd"],forbearance:["f-ao-r b-eh1 r-ah-n-s","nn"],forbid:["f-er b-ih1-d","vb vbp uh"],forbidden:["f-ao1-r b-ih d-ah-n","vbn jj"],forbidding:["f-er b-ih1 d-ih-ng","vbg jj"],force:["f-ao1-r-s","nn vb vbp"],forced:["f-ao1-r-s-t","vbn jj vbd"],forceful:["f-ao1-r-s f-ah-l","jj"],forcefully:["f-ao1-r-s f-ah l-iy","rb"],forcefulness:["f-ao1-r-s f-ah-l n-ah-s","nn"],forcibly:["f-ao1-r s-ah b-l-iy","rb"],ford:["f-ao1-r-d","nn"],fore:["f-ao1-r","nn rb"],forearm:["f-ao r-aa1-r-m","nn"],forebear:["f-ao1-r b-eh-r","nn"],foreboding:["f-ao-r b-ow1 d-ih-ng","nn jj"],forecast:["f-ao1-r k-ae-s-t","nn vbd vbn vbp vb"],forecaster:["f-ao1-r k-ae s-t-er","nn"],forecasting:["f-ao1-r k-ae s-t-ih-ng","nn jj vbg"],foreclose:["f-ao-r k-l-ow1-z","vb"],foreclosed:["f-ao-r k-l-ow1-z-d","vbn jj vbd"],foreclosure:["f-ao-r k-l-ow1 zh-er","nn"],forefather:["f-ao1-r f-aa dh-er","nn"],forefinger:["f-ao1-r f-ih-ng g-er","nn"],forefront:["f-ao1-r f-r-ah-n-t","nn"],forego:["f-ao-r g-ow1","vb vbp"],foregoing:["f-ao-r g-ow1 ih-ng","nn jj vbg"],foregone:["f-ao1-r g-ao1-n","jj vbn"],foreground:["f-ao1-r g-r-aw-n-d","nn"],forehead:["f-ao1 r-hh-eh-d","nn"],foreign:["f-ao1 r-ah-n","jj"],foreigner:["f-ao1 r-ah n-er","nn"],foreman:["f-ao1-r m-ah-n","nn"],foremost:["f-ao1-r m-ow-s-t","jj rb"],forensic:["f-er eh1-n s-ih-k","jj"],forerunner:["f-ao1 r-ah n-er","nn"],foresaw:["f-ao-r s-ao1","vbd"],foresee:["f-ao-r s-iy1","vbp vb"],foreseeable:["f-ao-r s-iy1 ah b-ah-l","jj"],foreseen:["f-ao-r s-iy1-n","vbn"],foreshadow:["f-ao-r sh-ae1 d-ow","vb vbp"],foresight:["f-ao1-r s-ay-t","nn"],forest:["f-ao1 r-ah-s-t","nn"],forestall:["f-ao-r s-t-ao1-l","vb"],forestry:["f-ao1 r-ah s-t-r-iy","nn"],foretell:["f-ao-r t-eh1-l","vb"],forethought:["f-ao1-r th-ao-t","nn"],forever:["f-er eh1 v-er","rb"],foreword:["f-ao1-r w-er-d","nn"],forfeit:["f-ao1-r f-ih-t","vb nn"],forfeitable:["f-ao1-r f-ah t-ah b-ah-l","jj"],forfeiture:["f-ao1-r f-ah ch-er","nn"],forgave:["f-er g-ey1-v","vbd"],forge:["f-ao1-r-jh","vb vbp nn"],forged:["f-ao1-r-jh-d","vbn jj vbd"],forger:["f-ao1-r jh-er","nn"],forgery:["f-ao1-r jh-er iy","nn"],forget:["f-er g-eh1-t","vb vbp"],forgetful:["f-ao-r g-eh1-t f-ah-l","jj"],forgettable:["f-ao-r g-eh1 t-ah b-ah-l","jj"],forgive:["f-er g-ih1-v","vb vbp"],forgiven:["f-er g-ih1 v-ah-n","vbn"],forgiveness:["f-er g-ih1-v n-ah-s","nn"],forgiving:["f-er g-ih1 v-ih-ng","vbg jj"],forgo:["f-ao-r g-ow1","vb vbp"],forgone:["f-ao-r g-aa1-n","jj"],forgot:["f-er g-aa1-t","vbd vbn"],forgotten:["f-er g-aa1 t-ah-n","vbn jj"],forint:["f-ao1 r-ih-n-t","nn"],fork:["f-ao1-r-k","nn vb"],forked:["f-ao1-r-k-t","jj vbd vbn"],forklift:["f-ao1-r-k l-ih-f-t","nn"],forlorn:["f-er l-ao1-r-n","jj"],form:["f-ao1-r-m","nn vbp jj vb"],formal:["f-ao1-r m-ah-l","jj"],formaldehyde:["f-ao-r m-ae1-l d-ah hh-ay-d","nn"],formalism:["f-ao1-r m-ah l-ih z-ah-m","nn"],formality:["f-ao-r m-ae1 l-ah t-iy","nn"],formalize:["f-ao1-r m-ah l-ay-z","vb"],formalized:["f-ao1-r m-ah l-ay-z-d","jj vbn"],formally:["f-ao1-r m-ah l-iy","rb"],format:["f-ao1-r m-ae-t","nn"],formation:["f-ao-r m-ey1 sh-ah-n","nn"],formative:["f-ao1-r m-ah t-ih-v","jj nn"],formed:["f-ao1-r-m-d","vbn vbd jj"],former:["f-ao1-r m-er","jj nn"],formerly:["f-ao1-r m-er l-iy","rb"],formidable:["f-ao1-r m-ah d-ah b-ah-l","jj"],formidably:["f-ao1-r m-ah d-ah b-l-iy","rb"],formula:["f-ao1-r m-y-ah l-ah","nn"],formulaic:["f-ao-r m-y-ah l-ey1 ih-k","jj"],formulate:["f-ao1-r m-y-ah l-ey-t","vb"],formulation:["f-ao-r m-y-ah l-ey1 sh-ah-n","nn"],forsake:["f-ao-r s-ey1-k","vb"],forsaken:["f-ao-r s-ey1 k-ah-n","vbn"],forseeable:["f-ao-r s-iy1 ah b-ah-l","jj"],fort:["f-ao1-r-t","nn"],forth:["f-ao1-r-th","rb rp"],forthcoming:["f-ao1-r-th k-ah1 m-ih-ng","jj vbg"],forthright:["f-ao1-r-th r-ay1-t","jj"],forthrightly:["f-ao1-r-th r-ay1-t l-iy","rb"],forthrightness:["f-ao1-r-th r-ay1-t n-ah-s","nn"],forthwith:["f-ao1-r-th w-ih1-th","rb"],fortification:["f-ao-r t-ah f-ah k-ey1 sh-ah-n","nn"],fortified:["f-ao1-r t-ah f-ay-d","vbn vbd jj"],fortify:["f-ao1-r t-ih f-ay","vb"],fortitude:["f-ao1-r t-ih t-uw-d","nn"],fortnight:["f-ao1-r-t n-ay-t","nn"],fortress:["f-ao1-r t-r-ah-s","nn"],fortuitous:["f-ao-r t-uw1 ih t-ah-s","jj"],fortunate:["f-ao1-r ch-ah n-ah-t","jj"],fortunately:["f-ao1-r ch-ah n-ah-t l-iy","rb"],fortune:["f-ao1-r ch-ah-n","nn"],forum:["f-ao1 r-ah-m","nn"],forward:["f-ao1-r w-er-d","rb jj nn vb"],forwarder:["f-ao1-r w-er d-er","nn"],forwards:["f-ao1-r w-er-d-z","rb"],fossil:["f-aa1 s-ah-l","jj nn"],fossilized:["f-aa1 s-ah l-ay-z-d","jj"],foster:["f-aa1 s-t-er","vb jj"],fought:["f-ao1-t","vbd vbn"],foul:["f-aw1-l","jj rb vb uh"],fouled:["f-aw1-l-d","vbd jj vbn"],found:["f-aw1-n-d","vbd vbn"],foundation:["f-aw-n d-ey1 sh-ah-n","nn"],founded:["f-aw1-n d-ah-d","vbn vbd"],founder:["f-aw1-n d-er","nn vb"],foundering:["f-aw1-n d-er ih-ng","vbg jj"],foundling:["f-aw1-n-d l-ih-ng","nn"],foundry:["f-aw1-n d-r-iy","nn"],fountain:["f-aw1-n t-ah-n","nn"],four:["f-ao1-r","cd"],fourfold:["f-ao1-r f-ow1-l-d","rb jj"],foursome:["f-ao1-r s-ah-m","nn"],fourth:["f-ao1-r-th","jj rb"],fowl:["f-aw1-l","nn"],fox:["f-aa1-k-s","nn"],foxhole:["f-aa1-k-s hh-ow-l","nn"],foxtail:["f-aa1-k-s t-ey-l","nn"],foyer:["f-oy1 er","nn"],fracas:["f-r-ey1 k-ah-s","nn"],fraction:["f-r-ae1-k sh-ah-n","nn"],fractional:["f-r-ae1-k sh-ah n-ah-l","jj"],fractionally:["f-r-ae1-k sh-ah-n ah-l iy","rb"],fractious:["f-r-ae1-k sh-ah-s","jj"],fracture:["f-r-ae1-k ch-er","nn vb"],fractured:["f-r-ae1-k ch-er-d","vbn jj vbd"],fragile:["f-r-ae1 jh-ah-l","jj"],fragility:["f-r-ah jh-ih1 l-ah t-iy","nn"],fragment:["f-r-ae1-g m-ah-n-t","nn vb"],fragmentary:["f-r-ae1-g m-ah-n t-eh r-iy","jj rb"],fragmentation:["f-r-ae-g m-ah-n t-ey1 sh-ah-n","nn"],fragmented:["f-r-ae1-g m-ah-n t-ih-d","jj vbn"],fragrance:["f-r-ey1 g-r-ah-n-s","nn"],fragrant:["f-r-ey1 g-r-ah-n-t","jj"],frail:["f-r-ey1-l","jj"],frailty:["f-r-ey1-l t-iy","nn"],frame:["f-r-ey1-m","nn vbp vb"],framed:["f-r-ey1-m-d","vbn vbd jj"],framer:["f-r-ey1 m-er","nn"],framework:["f-r-ey1-m w-er-k","nn"],franc:["f-r-ae1-ng-k","nn"],franchise:["f-r-ae1-n ch-ay-z","nn vb"],franchised:["f-r-ae1-n ch-ay-z-d","vbn jj"],franchisee:["f-r-ae1-n ch-ay z-iy1","nn"],franchiser:["f-r-ae1-n ch-ay z-er","nn"],frank:["f-r-ae1-ng-k","jj nn vb"],franked:["f-r-ae1-ng-k-t","jj vbn"],frankfurter:["f-r-ae1-ng-k f-er t-er","nn"],frankly:["f-r-ae1-ng k-l-iy","rb"],frankness:["f-r-ae1-ng-k n-ah-s","nn"],frantic:["f-r-ae1-n t-ih-k","jj"],frantically:["f-r-ae1-n t-ah k-ah l-iy","rb"],fraternity:["f-r-ah t-er1 n-ah t-iy","nn"],frau:["f-r-aw1","nn"],fraud:["f-r-ao1-d","nn"],fraudulent:["f-r-ao1 jh-ah l-ah-n-t","jj"],fraudulently:["f-r-ao1 d-uw l-ah-n-t l-iy","rb"],fraught:["f-r-ao1-t","jj"],fray:["f-r-ey1","nn vb"],frayed:["f-r-ey1-d","jj vbn"],frazzle:["f-r-ae1-z-ah-l","vb"],freak:["f-r-iy1-k","nn vb vbp"],freckled:["f-r-eh1 k-ah-l-d","jj"],free:["f-r-iy1","jj rb vb vbp"],freebie:["f-r-iy1 b-iy","nn"],freed:["f-r-iy1-d","jj"],freedom:["f-r-iy1 d-ah-m","nn"],freefall:["f-r-iy1 f-ao-l","nn"],freehand:["f-r-iy1 hh-ae-n-d","jj rb"],freeholder:["f-r-iy1 hh-ow-l d-er","nn"],freelance:["f-r-iy1 l-ae-n-s","jj"],freely:["f-r-iy1 l-iy","rb"],freeman:["f-r-iy1 m-ah-n","nn"],freer:["f-r-iy1 er","jjr"],freest:["f-r-iy1 ih-s-t","jjs"],freethinker:["f-r-iy1 th-ih1-ng k-er","nn"],freeway:["f-r-iy1 w-ey","nn"],freewheeling:["f-r-iy1 w-iy l-ih-ng","jj"],freeze:["f-r-iy1-z","nn vb vbp"],freezer:["f-r-iy1 z-er","nn"],freezing:["f-r-iy1 z-ih-ng","vbg jj nn"],freight:["f-r-ey1-t","nn vb"],freighter:["f-r-ey1 t-er","nn"],french:["f-r-eh1-n-ch","jj"],frenetic:["f-r-ah n-eh1 t-ih-k","jj"],frenzied:["f-r-eh1-n z-iy-d","jj"],frenzy:["f-r-eh1-n z-iy","nn"],frequency:["f-r-iy1 k-w-ah-n s-iy","nn"],frequent:["f-r-iy1 k-w-ah-n-t","jj vbp vb"],frequently:["f-r-iy1 k-w-ah-n-t l-iy","rb"],fresco:["f-r-eh1-s k-ow","nn"],frescoed:["f-r-eh1-s k-ow-d","jj"],fresh:["f-r-eh1-sh","jj rb"],fresher:["f-r-eh1 sh-er","jjr"],freshly:["f-r-eh1-sh l-iy","rb"],freshman:["f-r-eh1-sh m-ah-n","nn"],freshness:["f-r-eh1-sh n-ah-s","nn"],fret:["f-r-eh1-t","vbp nn vb"],friar:["f-r-ay1 er","nn"],friction:["f-r-ih1-k sh-ah-n","nn"],frictionless:["f-r-ih1-k sh-ah-n l-ah-s","jj"],fridge:["f-r-ih1-jh","nn"],fried:["f-r-ay1-d","jj vbn"],friend:["f-r-eh1-n-d","nn"],friendlier:["f-r-eh1-n-d l-iy er","jjr rbr"],friendliness:["f-r-eh1-n-d l-iy n-ih-s","nn"],friendly:["f-r-eh1-n-d l-iy","jj"],friendship:["f-r-eh1-n-d sh-ih-p","nn"],frieze:["f-r-iy1-z","nn"],frigate:["f-r-ih1 g-ah-t","nn"],fright:["f-r-ay1-t","nn"],frighten:["f-r-ay1 t-ah-n","vb vbp"],frightened:["f-r-ay1 t-ah-n-d","vbn jj vbd"],frightening:["f-r-ay1 t-ah-n ih-ng","jj vbg"],frighteningly:["f-r-ay1 t-ah-n ih-ng l-iy","rb"],frightful:["f-r-ay1-t f-ah-l","jj"],frightfully:["f-r-ay1-t f-ah l-iy","rb"],frigid:["f-r-ih1 jh-ah-d","jj"],frill:["f-r-ih1-l","nn"],frilly:["f-r-ih1 l-iy","jj"],fringe:["f-r-ih1-n-jh","nn jj"],frisky:["f-r-ih1-s k-iy","jj"],fritter:["f-r-ih1-t-er","vb"],frivolity:["f-r-ah v-aa1 l-ah t-iy","nn"],frivolous:["f-r-ih1 v-ah l-ah-s","jj"],frock:["f-r-aa1-k","nn"],frog:["f-r-aa1-g","nn"],frolic:["f-r-aa1 l-ih-k","nn vb"],from:["f-r-ah1-m","in rb rp"],frond:["f-r-aa1-n-d","nn"],front:["f-r-ah1-n-t","nn jj vb"],frontage:["f-r-ah1-n t-ih-jh","nn"],frontal:["f-r-ah1-n t-ah-l","jj"],frontier:["f-r-ah-n t-ih1-r","nn"],frontrunner:["f-r-ah1-n t-r-ah n-er","nn"],frost:["f-r-ao1-s-t","nn vb"],frostbite:["f-r-ao1-s-t b-ay-t","nn"],frosting:["f-r-ao1 s-t-ih-ng","nn"],frosty:["f-r-ao1 s-t-iy","jj"],froth:["f-r-ao1-th","nn vb"],frothy:["f-r-ao1 th-iy","jj"],frown:["f-r-aw1-n","vb vbp"],frowningly:["f-r-aw1 n-ih-ng l-iy","rb"],froze:["f-r-ow1-z","vbd vbn"],frozen:["f-r-ow1 z-ah-n","vbn jj"],fructose:["f-r-ah1-k t-ow-s","nn"],frugal:["f-r-uw1 g-ah-l","jj"],frugality:["f-r-uw g-ae1 l-ah t-iy","nn"],frugally:["f-r-uw1 g-ah l-iy","rb"],fruit:["f-r-uw1-t","nn"],fruitful:["f-r-uw1-t f-ah-l","jj"],fruition:["f-r-uw ih1 sh-ah-n","nn"],fruitless:["f-r-uw1-t l-ah-s","jj"],fruitlessly:["f-r-uw1-t l-ah-s l-iy","rb"],fruity:["f-r-uw1 t-iy","jj"],frumpy:["f-r-ah1-m p-iy","jj"],frustrate:["f-r-ah1 s-t-r-ey-t","vb"],frustrated:["f-r-ah1 s-t-r-ey t-ah-d","vbn jj vbd"],frustrating:["f-r-ah1 s-t-r-ey t-ih-ng","jj vbg"],frustration:["f-r-ah-s t-r-ey1 sh-ah-n","nn"],fry:["f-r-ay1","nn vbp vb"],fryer:["f-r-ay1 er","nn"],fudge:["f-ah1-jh","vb vbp nn"],fudging:["f-ah1 jh-ih-ng","nn"],fuel:["f-y-uw1 ah-l","nn vbp vb"],fugitive:["f-y-uw1 jh-ah t-ih-v","jj nn"],fulcrum:["f-uh1-l k-r-ah-m","nn"],fulfill:["f-uh-l f-ih1-l","vb vbp"],fulfillment:["f-uh-l f-ih1-l m-ah-n-t","nn"],full:["f-uh1-l","jj rb"],fullback:["f-uh1-l b-ae-k","nn"],fuller:["f-uh1 l-er","jjr"],fullest:["f-uh1 l-ah-s-t","jjs"],fullness:["f-uh1-l n-ah-s","nn"],fully:["f-uh1 l-iy","rb"],fulminate:["f-uh1-l m-ah n-ey-t","vb"],fumble:["f-ah1-m b-ah-l","nn vb"],fumbling:["f-ah1-m b-ah-l ih-ng","vbg jj"],fume:["f-y-uw1-m","vb"],fun:["f-ah1-n","nn jj"],function:["f-ah1-ng-k sh-ah-n","nn vb vbp"],functional:["f-ah1-ng-k sh-ah n-ah-l","jj nn"],functionally:["f-ah1-ng-k sh-ah-n ah-l iy","rb"],functionary:["f-ah1-ng-k sh-ah-n eh r-iy","nn"],fund:["f-ah1-n-d","nn vbp vb"],fundamental:["f-ah-n d-ah m-eh1-n t-ah-l","jj"],fundamentalism:["f-ah-n d-ah m-eh1-n t-ah l-ih z-ah-m","nn"],fundamentalist:["f-ah-n d-ah m-eh1-n t-ah l-ih-s-t","jj nn"],fundamentally:["f-ah-n d-ah m-eh1-n t-ah l-iy","rb"],funded:["f-ah1-n d-ah-d","vbn vbd jj"],funding:["f-ah1-n d-ih-ng","vbg jj"],fundraiser:["f-ah1-n d-r-ey z-er","nn"],funeral:["f-y-uw1 n-er ah-l","nn jj"],fungal:["f-ah1-ng g-ah-l","jj"],fungible:["f-ah1-n jh-ih b-ah-l","jj"],fungicide:["f-ah1-n jh-ah s-ay-d","nn"],fungus:["f-ah1-ng g-ah-s","nn"],funk:["f-ah1-ng-k","nn"],funky:["f-ah1-ng k-iy","jj"],funnel:["f-ah1 n-ah-l","vb nn"],funnier:["f-ah1 n-iy er","jjr"],funniest:["f-ah1 n-iy ah-s-t","jjs"],funny:["f-ah1 n-iy","jj"],fur:["f-er1","nn"],furbishing:["f-er1 b-ih sh-ih-ng","nn"],furious:["f-y-uh1 r-iy ah-s","jj"],furiouser:["f-y-uh1 r-iy ah s-er","rbr"],furiously:["f-y-uh1 r-iy ah-s l-iy","rb"],furlough:["f-er1 l-ow","nn vb"],furnace:["f-er1 n-ah-s","nn"],furnish:["f-er1 n-ih-sh","vb vbp"],furnished:["f-er1 n-ih-sh-t","vbn vbd jj"],furnishing:["f-er1 n-ih sh-ih-ng","nn vbg"],furniture:["f-er1 n-ih ch-er","nn"],furor:["f-y-uh1 r-ao-r","nn"],furrier:["f-er1 iy er","nn"],furrow:["f-er1 ow","nn"],furry:["f-er1 iy","jj"],further:["f-er1 dh-er","jj vb"],furthermore:["f-er1 dh-er m-ao-r","rb"],furthest:["f-er1 th-ah-s-t","jjs rbs"],furtive:["f-er1 t-ih-v","jj"],furtively:["f-er1 t-ih-v l-iy","rb"],fury:["f-y-uh1 r-iy","nn"],fuse:["f-y-uw1-z","nn vb"],fuselage:["f-y-uw1 s-ah l-aa-jh","nn"],fusillade:["f-y-uw1 s-ih l-ey-d","nn"],fusion:["f-y-uw1 zh-ah-n","nn"],fuss:["f-ah1-s","nn vb"],fussy:["f-ah1 s-iy","jj"],futile:["f-y-uw1 t-ah-l","jj"],futility:["f-y-uw t-ih1 l-ah t-iy","nn"],future:["f-y-uw1 ch-er","nn jj"],futurist:["f-y-uw1 ch-er ih-s-t","nn"],futuristic:["f-y-uw ch-er ih1 s-t-ih-k","jj"],fuzz:["f-ah1-z","nn"],fuzzier:["f-ah1 z-iy er","jjr"],fuzzy:["f-ah1 z-iy","jj"],gabardine:["g-ae1 b-er d-iy-n","nn"],gable:["g-ey1 b-ah-l","nn"],gadfly:["g-ae1-d f-l-ay","nn"],gadget:["g-ae1 jh-ah-t","nn"],gadgetry:["g-ae1 jh-ah t-r-iy","nn"],gaffe:["g-ae1-f","nn"],gag:["g-ae1-g","nn"],gage:["g-ey1-jh","nn vb"],gagged:["g-ae1-g-d","vbn vbd"],gaggle:["g-ae1 g-ah-l","nn"],gaily:["g-ey1 l-iy","rb"],gain:["g-ey1-n","nn vbp vb"],gained:["g-ey1-n-d","vbd vbn vb"],gainer:["g-ey1 n-er","nn"],gainful:["g-ey1-n f-ah-l","jj"],gait:["g-ey1-t","nn"],gal:["g-ae1-l","nn"],gala:["g-ae1 l-ah","jj nn"],galactic:["g-ah l-ae1-k t-ih-k","jj"],galaxy:["g-ae1 l-ah-k s-iy","nn"],gale:["g-ey1-l","nn"],gall:["g-ao1-l","nn vb"],gallant:["g-ae1 l-ah-n-t","jj"],gallantry:["g-ae1 l-ah-n t-r-iy","nn"],gallbladder:["g-ao1-l b-l-ae d-er","nn"],gallery:["g-ae1 l-er iy","nn"],galley:["g-ae1 l-iy","nn"],galling:["g-ao1 l-ih-ng","jj"],gallium:["g-ae1 l-iy ah-m","nn"],gallon:["g-ae1 l-ah-n","nn"],gallop:["g-ae1 l-ah-p","nn vb"],galloping:["g-ae1 l-ah p-ih-ng","vbg jj"],gallows:["g-ae1 l-ow-z","nn"],gallstone:["g-ao1-l s-t-ow-n","nn"],galvanic:["g-ae-l v-ae1 n-ih-k","jj"],galvanize:["g-ae1-l v-ah n-ay-z","vb"],galvanized:["g-ae1-l v-ah n-ay-z-d","jj vbd vbn"],gambit:["g-ae1-m b-ih-t","nn"],gamble:["g-ae1-m b-ah-l","nn vb"],gambler:["g-ae1-m b-l-er","nn"],game:["g-ey1-m","nn"],gaming:["g-ey1 m-ih-ng","nn"],gamma:["g-ae1 m-ah","nn jj"],gamut:["g-ae1 m-ah-t","nn"],gander:["g-ae1-n d-er","nn"],gang:["g-ae1-ng","nn vb"],gangbuster:["g-ae1-ng b-ah s-t-er","nn"],gangplank:["g-ae1-ng p-l-ae-ng-k","nn"],gangster:["g-ae1-ng s-t-er","nn"],gantlet:["g-ao1-n-t l-ah-t","nn"],gap:["g-ae1-p","nn vb"],gaping:["g-ey1 p-ih-ng","vbg jj"],garage:["g-er aa1-zh","nn"],garb:["g-aa1-r-b","nn vb"],garbage:["g-aa1-r b-ih-jh","nn"],garble:["g-aa1-r-b-ah-l","vb"],garden:["g-aa1-r d-ah-n","nn vb"],gardener:["g-aa1-r d-ah-n er","nn"],gardenia:["g-aa-r d-iy1 n-y-ah","nn"],gargantuan:["g-aa-r g-ae1-n ch-uw ah-n","jj"],garish:["g-eh1 r-ih-sh","jj"],garland:["g-aa1-r l-ah-n-d","nn"],garlic:["g-aa1-r l-ih-k","nn"],garment:["g-aa1-r m-ah-n-t","nn"],garner:["g-aa1-r n-er","vb vbp"],garnet:["g-aa1-r n-ah-t","nn"],garnish:["g-aa1-r n-ih-sh","nn"],garrison:["g-ae1 r-ih s-ah-n","nn vb"],garrulous:["g-eh1 r-ah l-ah-s","jj"],garter:["g-aa1-r t-er","nn"],gas:["g-ae1-s","nn vb"],gaseous:["g-ae1 s-iy ah-s","jj"],gash:["g-ae1-sh","nn"],gasket:["g-ae1-s k-ah-t","nn"],gasoline:["g-ae1 s-ah l-iy-n","nn"],gasp:["g-ae1-s-p","nn vb"],gass:["g-ae1-s","nn"],gasser:["g-ae1 s-er","nn"],gassing:["g-ae1 s-ih-ng","nn"],gastric:["g-ae1 s-t-r-ih-k","jj"],gastrointestinal:["g-ae s-t-r-ow ih-n t-eh1 s-t-ah n-ah-l","jj"],gastronomy:["g-ae-s t-r-aa1 n-ah m-iy","nn"],gate:["g-ey1-t","nn"],gateway:["g-ey1-t w-ey","nn"],gather:["g-ae1 dh-er","vb vbp"],gathering:["g-ae1 dh-er ih-ng","nn vbg"],gauche:["g-ow1-sh","jj"],gaucho:["g-aw1 ch-ow","nn"],gaudy:["g-ao1 d-iy","jj"],gauge:["g-ey1-jh","nn vb"],gaunt:["g-ao1-n-t","jj"],gauntlet:["g-ao1-n-t l-ah-t","nn"],gauss:["g-aw1-s","nn"],gauze:["g-ao1-z","nn"],gave:["g-ey1-v","vbd"],gawky:["g-ao1 k-iy","jj"],gay:["g-ey1","jj"],gaze:["g-ey1-z","nn vb vbp"],gazelle:["g-ah z-eh1-l","nn"],gear:["g-ih1-r","nn vb vbp"],gearbox:["g-ih1-r b-aa-k-s","nn"],gee:["jh-iy1","uh vb"],geek:["g-iy1-k","nn"],gel:["jh-eh1-l","nn vb"],gelatin:["jh-eh1 l-ah t-ah-n","nn"],gem:["jh-eh1-m","nn"],gemsbok:["g-eh1-m-z b-aa-k","nn"],gemstone:["jh-eh1-m s-t-ow-n","nn"],gen:["jh-eh1 n-er ah-l","nn"],gendarme:["zh-aa1-n d-aa-r-m","nn"],gender:["jh-eh1-n d-er","nn vb"],gene:["jh-iy1-n","nn"],genera:["jh-eh1 n-er ah","nn"],general:["jh-eh1 n-er ah-l","jj nn"],generalist:["jh-eh1 n-er ah l-ih-s-t","nn"],generality:["jh-eh n-er ae1 l-ah t-iy","nn"],generalization:["jh-eh n-er ah l-ih z-ey1 sh-ah-n","nn"],generalize:["jh-eh1 n-er ah l-ay-z","vb vbp"],generalized:["jh-eh1 n-er ah l-ay-z-d","jj vbn"],generally:["jh-eh1 n-er ah l-iy","rb"],generalship:["jh-eh1 n-er ah-l sh-ih-p","nn"],generate:["jh-eh1 n-er ey-t","vb vbp"],generation:["jh-eh n-er ey1 sh-ah-n","nn"],generational:["jh-eh n-er ey1 sh-ah n-ah-l","jj"],generator:["jh-eh1 n-er ey t-er","nn"],generic:["jh-ah n-eh1 r-ih-k","jj"],generically:["jh-ah n-eh1 r-ih-k l-iy","rb"],generosity:["jh-eh n-er aa1 s-ah t-iy","nn"],generous:["jh-eh1 n-er ah-s","jj"],generously:["jh-eh1 n-er ah-s l-iy","rb"],genesis:["jh-eh1 n-ah s-ah-s","nn"],genetic:["jh-ah n-eh1 t-ih-k","jj"],genetically:["jh-ah n-eh1 t-ih-k l-iy","rb"],geneticist:["jh-ah n-eh1 t-ah s-ah-s-t","nn"],genial:["jh-iy1 n-y-ah-l","jj"],genie:["jh-iy1 n-iy","nn"],genital:["jh-eh1 n-ah t-ah-l","jj"],genius:["jh-iy1 n-y-ah-s","nn"],genocide:["jh-eh1 n-ah s-ay-d","nn"],genome:["jh-iy1 n-ow-m","nn"],genre:["zh-aa1-n r-ah","nn"],genteel:["jh-eh-n t-iy1-l","jj"],gentian:["jh-eh1-n sh-ah-n","nn"],gentile:["jh-eh1-n t-ay-l","nn jj"],gentility:["jh-eh-n t-ih1 l-ih t-iy","nn"],gentle:["jh-eh1-n t-ah-l","jj vb"],gentleman:["jh-eh1-n t-ah-l m-ah-n","nn"],gentlemanly:["jh-eh1-n t-ah-l m-ah-n l-iy","jj"],gentleness:["jh-eh1-n t-ah-l n-ah-s","nn"],gentler:["jh-eh1-n-t l-er","jjr"],gently:["jh-eh1-n-t l-iy","rb"],gentrified:["jh-eh1-n t-r-ih f-ay-d","vbn"],gentrify:["jh-eh1-n-t-r-ih-f-ay","vb"],gentry:["jh-eh1-n t-r-iy","nn"],genuine:["jh-eh1-n y-uw w-ah-n","jj"],genuinely:["jh-eh1-n y-uw w-ah-n l-iy","rb"],genus:["jh-iy1 n-ah-s","nn"],geocentric:["jh-iy ow s-eh1-n t-r-ih-k","jj"],geochemistry:["jh-iy ow k-eh1 m-ah s-t-r-iy","nn"],geographer:["jh-iy aa1 g-r-ah f-er","nn"],geographic:["jh-iy ah g-r-ae1 f-ih-k","jj"],geographical:["jh-iy ah g-r-ae1 f-ih k-ah-l","jj"],geographically:["jh-iy ah g-r-ae1 f-ih k-ah l-iy","rb"],geography:["jh-iy aa1 g-r-ah f-iy","nn"],geologic:["jh-iy ah l-aa1 jh-ih-k","jj"],geological:["jh-iy ah l-aa1 jh-ih k-ah-l","jj"],geologist:["jh-iy aa1 l-ah jh-ah-s-t","nn"],geology:["jh-iy aa1 l-ah jh-iy","nn"],geometric:["jh-iy ah m-eh1 t-r-ih-k","jj"],geometrical:["jh-iy ah m-eh1 t-r-ih k-ah-l","jj"],geometrically:["jh-iy ah m-eh1 t-r-ih-k l-iy","rb"],geometry:["jh-iy aa1 m-ah t-r-iy","nn"],geopolitical:["jh-iy ow p-ah l-ih1 t-ih k-ah-l","jj"],geothermal:["jh-iy ow th-er1 m-ah-l","jj"],geranium:["jh-er ey1 n-iy ah-m","nn"],geriatric:["jh-eh r-iy ae1 t-r-ih-k","jj"],germ:["jh-er1-m","nn"],germane:["jh-er m-ey1-n","jj"],germinate:["jh-er1 m-ah n-ey-t","vb vbp"],germinated:["jh-er1 m-ah n-ey t-ih-d","jj"],gerrymandering:["jh-eh r-iy m-ae1-n d-er ih-ng","nn"],gesture:["jh-eh1-s ch-er","nn vb"],get:["g-eh1-t","vb vbp"],getaway:["g-eh1-t ah w-ey","nn"],geyser:["g-ay1 z-er","nn"],ghastly:["g-ae1-s-t l-iy","jj"],ghetto:["g-eh1 t-ow","nn"],ghost:["g-ow1-s-t","nn"],ghostbuster:["g-ow1-s-t b-ah s-t-er","nn"],ghostlike:["g-ow1-s-t l-ay-k","jj"],ghostly:["g-ow1-s-t l-iy","jj"],ghoulish:["g-uw1 l-ih-sh","jj"],giant:["jh-ay1 ah-n-t","nn jj"],gibberish:["g-ih1 b-er ih-sh","nn"],giblet:["jh-ih1 b-l-ah-t","nn"],giddy:["g-ih1 d-iy","jj"],gift:["g-ih1-f-t","nn vb"],gifted:["g-ih1-f t-ah-d","jj vbn"],gig:["g-ih1-g","nn"],gigantic:["jh-ay g-ae1-n t-ih-k","jj"],giggle:["g-ih1 g-ah-l","nn vb"],gigolo:["jh-ih1-g ah l-ow","nn"],gilded:["g-ih1-l d-ih-d","jj"],gilding:["g-ih1-l d-ih-ng","nn"],gilt:["g-ih1-l-t","jj nn"],gimmick:["g-ih1 m-ih-k","nn"],gimmickry:["g-ih1 m-ih k-r-iy","nn"],gimmicky:["g-ih m-ih1 k-iy","jj"],gin:["jh-ih1-n","nn"],ginger:["jh-ih1-n jh-er","nn"],gingerly:["jh-ih1-n jh-er l-iy","rb jj"],ginning:["jh-ih1 n-ih-ng","nn"],ginseng:["jh-ih1-n s-eh-ng","nn"],gird:["g-er1-d","vb"],girder:["g-er1 d-er","nn"],girdle:["g-er1 d-ah-l","nn"],girl:["g-er1-l","nn"],girlfriend:["g-er1-l f-r-eh-n-d","nn"],girlie:["g-er1 l-iy","nn"],girlish:["g-er1 l-ih-sh","jj"],girlishly:["g-er1 l-ih-sh l-iy","rb"],girth:["g-er1-th","nn"],gist:["jh-ih1-s-t","nn"],give:["g-ih1-v","vb vbp"],giveaway:["g-ih1 v-ah w-ey","nn jj"],giveback:["g-ih1-v b-ae-k","nn"],given:["g-ih1 v-ah-n","vbn jj"],givenness:["g-ih1 v-ah n-ah-s","nn"],giver:["g-ih1 v-er","nn"],gizmo:["g-ih1-z m-ow","nn"],glacial:["g-l-ey1 sh-ah-l","jj"],glacier:["g-l-ey1 sh-er","nn"],glad:["g-l-ae1-d","jj"],glade:["g-l-ey1-d","nn"],gladiator:["g-l-ae1 d-iy ey t-er","nn"],gladly:["g-l-ae1-d l-iy","rb"],glamor:["g-l-ae1 m-er","nn"],glamorous:["g-l-ae1 m-er ah-s","jj"],glamour:["g-l-ae1 m-er","nn"],glance:["g-l-ae1-n-s","nn vb"],glancing:["g-l-ae1-n s-ih-ng","vbg jj"],gland:["g-l-ae1-n-d","nn"],glandular:["g-l-ae1-n jh-ah l-er","jj"],glare:["g-l-eh1-r","nn vb"],glaring:["g-l-eh1 r-ih-ng","jj vbg"],glasnost:["g-l-ae1-s n-aa-s-t","nn"],glass:["g-l-ae1-s","nn"],glassware:["g-l-ae1-s w-eh-r","nn"],glassy:["g-l-ae1 s-iy","jj"],glaucoma:["g-l-ao k-ow1 m-ah","nn"],glaze:["g-l-ey1-z","nn vb vbp"],gleam:["g-l-iy1-m","nn vb vbp"],glean:["g-l-iy1-n","vb"],glee:["g-l-iy1","nn"],gleeful:["g-l-iy1 f-ah-l","jj"],gleefully:["g-l-iy1 f-ah l-iy","rb"],glen:["g-l-eh1-n","nn"],glib:["g-l-ih1-b","jj"],glibly:["g-l-ih1 b-l-iy","rb"],glide:["g-l-ay1-d","vb vbp"],glider:["g-l-ay1 d-er","nn"],glimmer:["g-l-ih1 m-er","nn vb"],glimpse:["g-l-ih1-m-p-s","nn vb"],glint:["g-l-ih1-n-t","nn"],glisten:["g-l-ih1-s-ah-n","vb"],glitch:["g-l-ih1-ch","nn"],glitter:["g-l-ih1 t-er","nn vb"],glittery:["g-l-ih1 t-er iy","nn"],glitz:["g-l-ih1-t-s","nn"],glitzy:["g-l-ih1-t s-iy","jj nn"],gloat:["g-l-ow1-t","vb nn"],global:["g-l-ow1 b-ah-l","jj"],globalization:["g-l-ow b-ah-l ih z-ey1 sh-ah-n","nn"],globalized:["g-l-ow1 b-ah-l ay-z-d","jj"],globally:["g-l-ow1 b-ah-l iy","rb"],globe:["g-l-ow1-b","nn"],globulin:["g-l-aa1 b-y-ah l-ih-n","nn"],gloom:["g-l-uw1-m","nn"],gloomier:["g-l-uw1 m-iy er","jjr rbr"],gloomily:["g-l-uw1 m-ah l-iy","rb"],gloomy:["g-l-uw1 m-iy","jj"],glop:["g-l-aa1-p","nn"],glorified:["g-l-ao1 r-ah f-ay-d","vbn jj"],glorify:["g-l-ao1 r-ah f-ay","vb vbp"],glorious:["g-l-ao1 r-iy ah-s","jj"],gloriously:["g-l-ao1 r-iy ah-s l-iy","rb"],glory:["g-l-ao1 r-iy","nn"],gloss:["g-l-ao1-s","vb nn vbp"],glossary:["g-l-ao1 s-er iy","nn"],glossy:["g-l-ao1 s-iy","jj"],glottal:["g-l-aa1 t-ah-l","jj"],glove:["g-l-ah1-v","nn vb"],gloved:["g-l-ah1-v-d","vbn jj"],glover:["g-l-ah1 v-er","nn"],glow:["g-l-ow1","nn vb"],glower:["g-l-aw1-er","vb"],glowing:["g-l-ow1 ih-ng","vbg jj"],glucose:["g-l-uw1 k-ow-s","nn"],glue:["g-l-uw1","nn vb"],glum:["g-l-ah1-m","jj nn"],glumly:["g-l-ah1-m l-iy","rb"],glut:["g-l-ah1-t","nn vb"],glutamate:["g-l-uw1 t-ah m-ey-t","nn"],glutamic:["g-l-uw t-ae1 m-ih-k","jj"],glutaric:["g-l-uw t-ae1 r-ih-k","jj"],gluten:["g-l-uw1 t-ah-n","nn"],glutted:["g-l-ah1 t-ih-d","vbn jj"],glutton:["g-l-ah1 t-ah-n","nn"],gluttony:["g-l-ah1 t-ah-n iy","nn"],glycerol:["g-l-ih1 s-er ow-l","nn"],glycol:["g-l-ay1 k-ao-l","nn"],gnarled:["n-aa1-r-l-d","jj"],gnash:["n-ae1-sh","vb"],gnaw:["n-ao1","vb"],gnawing:["n-ao1 ih-ng","nn"],gnome:["n-ow1-m","nn"],go:["g-ow1","vb jj nn rp vbp"],goad:["g-ow1-d","nn vb"],goal:["g-ow1-l","nn"],goat:["g-ow1-t","nn"],goatee:["g-ow1 t-iy1","nn"],gob:["g-aa1-b","nn"],gobble:["g-aa1 b-ah-l","nn vb"],gobbledygook:["g-aa b-ah-l d-iy g-uh1-k","nn"],gobbler:["g-aa1 b-ah-l er","nn"],god:["g-aa1-d","nn"],goddam:["g-aa1 d-d-ae-m","jj"],goddamn:["g-aa1 d-d-ae-m","uh vbn jj"],goddess:["g-aa1 d-ah-s","nn"],godfather:["g-aa1-d f-aa dh-er","nn"],godhead:["g-aa1-d hh-eh-d","nn"],godless:["g-aa1-d l-ah-s","jj"],godmother:["g-aa1-d m-ah dh-er","nn"],godsend:["g-aa1-d s-eh-n-d","nn"],goggle:["g-aa1 g-ah-l","nn vb"],going:["g-ow1 ih-ng","vbg jj nn"],gold:["g-ow1-l-d","nn jj"],golden:["g-ow1-l d-ah-n","jj"],goldfish:["g-ow1-l-d f-ih-sh","nn"],goldsmith:["g-ow1-l-d s-m-ih-th","nn"],goldstock:["g-ow1-l-d s-t-aa-k","nn"],golf:["g-aa1-l-f","nn vb"],golfer:["g-aa1-l f-er","nn"],golfing:["g-aa1-l f-ih-ng","nn jj vbg"],golly:["g-aa1 l-iy","uh"],gone:["g-ao1-n","vbn jj"],goo:["g-uw1","nn"],good:["g-uh1-d","jj nn rb"],goodbye:["g-uh-d b-ay1","nn uh"],goodness:["g-uh1-d n-ah-s","nn"],goodnight:["g-uh1-d n-ay-t","nn"],goodwill:["g-uh1-d w-ih1-l","nn"],goody:["g-uh1 d-iy","uh"],gooey:["g-uw1 iy","jj"],goof:["g-uw1-f","vb"],goofy:["g-uw1 f-iy","jj"],google:["g-uw1 g-ah-l","nn vb"],goon:["g-uw1-n","nn"],goose:["g-uw1-s","nn"],gooseberry:["g-uw1-s b-eh r-iy","nn"],goosey:["g-uw1 s-iy","jj"],gore:["g-ao1-r","vb"],gorge:["g-ao1-r-jh","nn"],gorgeous:["g-ao1-r jh-ah-s","jj"],gorilla:["g-er ih1 l-ah","nn"],gory:["g-ao1 r-iy","jj"],gosh:["g-aa1-sh","uh"],gospel:["g-aa1 s-p-ah-l","nn"],gossamer:["g-aa1 s-ah m-er","nn"],gossip:["g-aa1 s-ah-p","nn vb"],gossipy:["g-aa1 s-ah p-iy","jj"],got:["g-aa1-t","vbd vbn vbp vb"],gothic:["g-aa1 th-ih-k","jj"],gotten:["g-aa1 t-ah-n","vbn"],gouge:["g-aw1-jh","vb vbp"],gourd:["g-ao1-r-d","nn"],gourmet:["g-uh1-r m-ey","nn jj"],gout:["g-aw1-t","nn"],gouty:["g-aw1 t-iy","jj"],govern:["g-ah1 v-er-n","vb vbp"],governance:["g-ah1 v-er n-ah-n-s","nn"],governed:["g-ah1 v-er-n-d","vbn jj vbd"],governess:["g-ah1 v-er n-ah-s","nn"],governing:["g-ah1 v-er n-ih-ng","vbg jj nn"],government:["g-ah1 v-er m-ah-n-t","nn"],governmental:["g-ah1 v-er m-eh-n t-ah-l","jj"],governor:["g-ah1 v-er n-er","nn"],gown:["g-aw1-n","nn"],grab:["g-r-ae1-b","vb jj nn vbp"],grace:["g-r-ey1-s","nn vb vbp"],graceful:["g-r-ey1-s f-ah-l","jj"],gracefully:["g-r-ey1-s f-ah l-iy","rb"],gracious:["g-r-ey1 sh-ah-s","jj"],graciously:["g-r-ey1 sh-ah-s l-iy","rb"],grad:["g-r-ae1-d","nn"],grade:["g-r-ey1-d","nn vb"],grader:["g-r-ey1 d-er","nn"],gradual:["g-r-ae1 jh-uw ah-l","jj rb"],gradualist:["g-r-ae1 jh-ah-w ah l-ih-s-t","nn"],gradually:["g-r-ae1 jh-uw ah l-iy","rb"],graduate:["g-r-ae1 jh-ah-w ah-t","nn jj vb vbp"],graduated:["g-r-ae1 jh-uw ey t-ih-d","vbn vbd jj"],graduation:["g-r-ae jh-uw ey1 sh-ah-n","nn"],graffiti:["g-r-ah f-iy1 t-iy","nn"],graft:["g-r-ae1-f-t","nn vb"],grafted:["g-r-ae1-f t-ih-d","jj vbn"],graham:["g-r-ey1 ah-m","nn"],grain:["g-r-ey1-n","nn"],grained:["g-r-ey1-n-d","jj"],grainy:["g-r-ey1 n-iy","jj"],gram:["g-r-ae1-m","nn"],grammar:["g-r-ae1 m-er","nn"],grammatical:["g-r-ah m-ae1 t-ah k-ah-l","jj"],grand:["g-r-ae1-n-d","jj"],grandchild:["g-r-ae1-n-d ch-ay-l-d","nn"],granddaughter:["g-r-ae1-n d-ao t-er","nn"],grander:["g-r-ae1-n d-er","jjr rbr"],grandest:["g-r-ae1-n d-ah-s-t","jjs"],grandeur:["g-r-ae-n d-uw1-r","nn"],grandfather:["g-r-ae1-n-d f-aa dh-er","nn vb"],grandiloquent:["g-r-ae-n d-ih1 l-ah k-w-ah-n-t","jj"],grandiose:["g-r-ae-n d-iy ow1-s","jj"],grandkid:["g-r-ae1-n-d k-ih-d","nn"],grandly:["g-r-ae1-n-d l-iy","rb"],grandma:["g-r-ae1 m-aa","nn"],grandmother:["g-r-ae1-n-d m-ah dh-er","nn"],grandmotherly:["g-r-ae1-n-d m-ah dh-er l-iy","jj"],grandparent:["g-r-ae1-n-d p-eh r-ah-n-t","nn"],grandson:["g-r-ae1-n-d s-ah-n","nn"],grandstand:["g-r-ae1-n-d s-t-ae-n-d","nn"],granite:["g-r-ae1 n-ah-t","nn"],grant:["g-r-ae1-n-t","nn vbp vb"],granted:["g-r-ae1-n t-ah-d","vbn jj vbd"],grantor:["g-r-ae1-n t-er","nn"],granular:["g-r-ae1 n-y-ah l-er","jj"],grape:["g-r-ey1-p","nn"],grapefruit:["g-r-ey1-p f-r-uw-t","nn"],grapeshot:["g-r-ey1-p sh-aa-t","nn"],grapevine:["g-r-ey1-p v-ay-n","nn"],graph:["g-r-ae1-f","nn"],graphic:["g-r-ae1 f-ih-k","jj"],graphical:["g-r-ae1 f-ih k-ah-l","jj"],graphically:["g-r-ae1 f-ih-k l-iy","rb"],graphite:["g-r-ae1 f-ay-t","nn"],grapple:["g-r-ae1 p-ah-l","vb"],grasp:["g-r-ae1-s-p","vb vbp nn"],grass:["g-r-ae1-s","nn vb"],grasser:["g-r-ae1 s-er","nn"],grasshopper:["g-r-ae1-s hh-aa p-er","nn"],grassland:["g-r-ae1-s l-ae-n-d","nn"],grassroot:["g-r-ae1-s r-uw1-t","nn"],grassy:["g-r-ae1 s-iy","jj"],grate:["g-r-ey1-t","nn vb"],grated:["g-r-ey1 t-ih-d","vbd jj"],grateful:["g-r-ey1-t f-ah-l","jj"],gratefully:["g-r-ey1-t f-ah l-iy","rb"],gratification:["g-r-ae t-ah f-ah k-ey1 sh-ah-n","nn"],gratified:["g-r-ae1 t-ah f-ay-d","vbn jj"],gratify:["g-r-ae1 t-ah f-ay","vb"],gratifying:["g-r-ae1 t-ah f-ay ih-ng","jj vbg"],grating:["g-r-ey1 t-ih-ng","nn"],gratis:["g-r-ae1 t-ah-s","jj rb"],gratitude:["g-r-ae1 t-ah t-uw-d","nn"],gratuitous:["g-r-ah t-uw1 ah t-ah-s","jj"],gratuitously:["g-r-ah t-uw1 ah t-ah-s l-iy","rb"],gratuity:["g-r-ah t-uw1 ih t-iy","nn"],grave:["g-r-ey1-v","jj nn"],gravel:["g-r-ae1 v-ah-l","nn"],gravely:["g-r-ey1-v l-iy","rb"],graven:["g-r-ey1 v-ah-n","jj"],graver:["g-r-ey1 v-er","jjr rbr"],gravest:["g-r-ae1 v-ah-s-t","jjs"],graveyard:["g-r-ey1-v y-aa-r-d","nn"],gravitate:["g-r-ae1-v-ih-t-ey-t","vb"],gravitational:["g-r-ae v-ih t-ey1 sh-ah n-ah-l","jj"],gravity:["g-r-ae1 v-ah t-iy","nn"],gravy:["g-r-ey1 v-iy","nn"],gray:["g-r-ey1","jj nn vb"],grayer:["g-r-ey1 er","jjr"],graze:["g-r-ey1-z","vbp vb"],grazer:["g-r-ey1 z-er","nn"],grazing:["g-r-ey1 z-ih-ng","vbg jj nn"],grease:["g-r-iy1-s","nn vb"],greasy:["g-r-iy1 s-iy","jj"],great:["g-r-ey1-t","jj rb"],greater:["g-r-ey1 t-er","jjr rbr"],greatest:["g-r-ey1 t-ah-s-t","jjs"],greatly:["g-r-ey1-t l-iy","rb"],greatness:["g-r-ey1-t n-ah-s","nn"],greed:["g-r-iy1-d","nn"],greedily:["g-r-iy1 d-ah l-iy","rb"],greedy:["g-r-iy1 d-iy","jj"],green:["g-r-iy1-n","jj"],greenback:["g-r-iy1-n b-ae-k","nn"],greener:["g-r-iy1 n-er","jjr"],greenfield:["g-r-iy1-n f-iy-l-d","nn"],greenhouse:["g-r-iy1-n hh-aw-s","nn"],greenish:["g-r-iy1 n-ih-sh","jj"],greenly:["g-r-iy1-n l-iy","rb"],greet:["g-r-iy1-t","vb vbp"],greeting:["g-r-iy1 t-ih-ng","nn vbg jj"],gregarious:["g-r-ah g-eh1 r-iy ah-s","jj"],grenade:["g-r-ah n-ey1-d","nn"],grew:["g-r-uw1","vbd vbn"],grey:["g-r-ey1","jj"],grid:["g-r-ih1-d","nn"],gridiron:["g-r-ih1-d ay er-n","nn"],gridlock:["g-r-ih1-d l-aa-k","nn vb"],gridlocked:["g-r-ih1-d l-aa-k-t","vbn jj"],grief:["g-r-iy1-f","nn"],grievance:["g-r-iy1 v-ah-n-s","nn"],grieve:["g-r-iy1-v","vb"],grievous:["g-r-iy1 v-ah-s","jj"],grill:["g-r-ih1-l","nn vb vbp"],grille:["g-r-ih1-l","nn"],grilled:["g-r-ih1-l-d","jj vbn"],grim:["g-r-ih1-m","jj"],grimace:["g-r-ih1-m-ah-s","vb"],grime:["g-r-ay1-m","nn"],grimly:["g-r-ih1-m l-iy","rb"],grimmer:["g-r-ih1 m-er","rbr"],grimmest:["g-r-ih1 m-ah-s-t","jjs"],grimness:["g-r-ih1-m n-ah-s","nn"],grimy:["g-r-ay1 m-iy","jj nn"],grin:["g-r-ih1-n","nn vb"],grind:["g-r-ay1-n-d","vbp nn vb"],grinder:["g-r-ay1-n d-er","nn"],grindstone:["g-r-ay1-n-d s-t-ow-n","nn"],gringo:["g-r-ih1-ng g-ow","nn"],grinning:["g-r-ih1 n-ih-ng","vbg jj"],grip:["g-r-ih1-p","nn vb vbp"],gripe:["g-r-ay1-p","vbp nn vb"],griping:["g-r-ay1 p-ih-ng","nn"],gripping:["g-r-ih1 p-ih-ng","vbg jj"],grisly:["g-r-ih1-z l-iy","jj"],grist:["g-r-ih1-s-t","nn"],grit:["g-r-ih1-t","nn vb"],gritty:["g-r-ih1 t-iy","jj"],grizzled:["g-r-ih1 z-ah-l-d","jj"],grizzly:["g-r-ih1-z l-iy","nn"],groan:["g-r-ow1-n","nn vb"],grocer:["g-r-ow1 s-er","nn"],grocery:["g-r-ow1 s-er iy","nn"],groggy:["g-r-aa1 g-iy","jj"],groin:["g-r-oy1-n","nn"],groom:["g-r-uw1-m","nn vb"],groove:["g-r-uw1-v","nn"],grope:["g-r-ow1-p","vb vbp"],gross:["g-r-ow1-s","jj nn vb"],grossly:["g-r-ow1-s l-iy","rb"],grotesque:["g-r-ow t-eh1-s-k","jj"],grotesquely:["g-r-ow t-eh1-s-k l-iy","rb"],ground:["g-r-aw1-n-d","nn jj vb vbd vbn"],grounded:["g-r-aw1-n d-ih-d","vbn vbd jj"],groundless:["g-r-aw1-n-d l-ah-s","jj"],groundwater:["g-r-aw1-n-d w-aa t-er","nn"],groundwork:["g-r-aw1-n-d w-er-k","nn"],group:["g-r-uw1-p","nn vb vbp"],grouper:["g-r-uw1 p-er","nn"],grouping:["g-r-uw1 p-ih-ng","nn vbg"],grouse:["g-r-aw1-s","nn vb"],grove:["g-r-ow1-v","nn"],grovel:["g-r-aa1 v-ah-l","vb"],grow:["g-r-ow1","vb vbp"],grower:["g-r-ow1 er","nn"],growing:["g-r-ow1 ih-ng","vbg jj nn"],growl:["g-r-aw1-l","nn vb"],grown:["g-r-ow1-n","vbn vbd jj"],grownup:["g-r-ow1 n-ah-p","nn"],growth:["g-r-ow1-th","nn jj vb"],grub:["g-r-ah1-b","nn"],grubby:["g-r-ah1 b-iy","jj"],grudge:["g-r-ah1-jh","nn"],grudging:["g-r-ah1 jh-ih-ng","jj"],grudgingly:["g-r-ah1 jh-ih-ng l-iy","rb"],grueling:["g-r-uw1 ih l-ih-ng","jj vbg"],gruesome:["g-r-uw1 s-ah-m","jj"],gruff:["g-r-ah1-f","jj"],grumble:["g-r-ah1-m b-ah-l","vbp vb"],grunt:["g-r-ah1-n-t","vb nn"],guarantee:["g-eh r-ah-n t-iy1","nn vb vbp"],guaranteed:["g-eh r-ah-n t-iy1-d","vbn jj vbd"],guarantor:["g-eh r-ah-n t-ao1-r","nn"],guaranty:["g-eh r-ah-n t-iy1","nn"],guard:["g-aa1-r-d","nn jj vb vbp"],guarded:["g-aa1-r d-ah-d","vbn jj vbd"],guardedly:["g-aa1-r d-ih-d l-iy","rb"],guardian:["g-aa1-r d-iy ah-n","nn"],guardianship:["g-aa1-r d-iy ah-n sh-ih-p","nn"],gubernatorial:["g-uw b-er n-ah t-ao1 r-iy ah-l","jj"],guerilla:["g-er ih1 l-ah","nn"],guerrilla:["g-er ih1 l-ah","nn jj"],guess:["g-eh1-s","vbp nn vb"],guesstimate:["g-eh1 s-t-ih m-ih-t","nn"],guesswork:["g-eh1-s w-er-k","nn"],guest:["g-eh1-s-t","nn jj"],guffaw:["g-ah f-ao1","nn"],guidance:["g-ay1 d-ah-n-s","nn"],guide:["g-ay1-d","nn vbp vb"],guidebook:["g-ay1-d b-uh-k","nn"],guided:["g-ay1 d-ah-d","vbn vbd jj"],guideline:["g-ay1-d l-ay-n","nn"],guidepost:["g-ay1-d p-ow-s-t","nn"],guiding:["g-ay1 d-ih-ng","vbg jj"],guild:["g-ih1-l-d","nn"],guilder:["g-ih1-l d-er","nn"],guile:["g-ay1-l","nn"],guileless:["g-ay1-l l-ah-s","jj"],guillotine:["g-ih1 l-ah t-iy-n","nn"],guilt:["g-ih1-l-t","nn"],guilty:["g-ih1-l t-iy","jj rb"],guinea:["g-ih1 n-iy","nn"],guise:["g-ay1-z","nn"],guitar:["g-ih t-aa1-r","nn"],guitarist:["g-ih t-aa1 r-ah-s-t","nn"],gulag:["g-y-uw1 l-ae-g","nn"],gulf:["g-ah1-l-f","nn"],gull:["g-ah1-l","nn"],gullet:["g-ah1 l-ah-t","nn"],gulley:["g-ah1 l-iy","nn"],gullibility:["g-ah l-ah b-ih1 l-ih t-iy","nn"],gullible:["g-ah1 l-ah b-ah-l","jj"],gully:["g-ah1 l-iy","nn"],gulp:["g-ah1-l-p","nn vb"],gum:["g-ah1-m","nn vb"],gummy:["g-ah1 m-iy","jj"],gumption:["g-ah1-m-p sh-ah-n","nn"],gun:["g-ah1-n","nn vb"],gunboat:["g-ah1-n b-ow-t","nn"],gunfight:["g-ah1-n f-ay-t","nn"],gunfighter:["g-ah1-n f-ay t-er","nn"],gunfire:["g-ah1-n f-ay er","nn"],gunflint:["g-ah1-n f-l-ih-n-t","nn"],gunman:["g-ah1-n m-ah-n","nn"],gunner:["g-ah1 n-er","nn"],gunny:["g-ah1 n-iy","nn"],gunpoint:["g-ah1-n p-oy-n-t","nn"],gunpowder:["g-ah1-n p-aw d-er","nn"],gunship:["g-ah1-n sh-ih-p","nn"],gunshot:["g-ah1-n sh-aa-t","nn"],gunslinger:["g-ah1-n s-l-ih ng-er","nn"],guppy:["g-ah1 p-iy","nn"],gurgle:["g-er1 g-ah-l","nn vb"],guru:["g-uw1 r-uw","nn"],gush:["g-ah1-sh","vbp vb"],gusher:["g-ah1 sh-er","nn"],gussied:["g-ah1 s-iy-d","vbn"],gussy:["g-ah1-s-iy","vb"],gust:["g-ah1-s-t","nn rb"],gusto:["g-ah1 s-t-ow","nn"],gusty:["g-ah1 s-t-iy","jj"],gut:["g-ah1-t","nn vb"],gutsy:["g-ah1-t s-iy1","jj"],gutter:["g-ah1 t-er","nn vb"],guttural:["g-ah1 t-er ah-l","jj nn"],guy:["g-ay1","nn"],guzzle:["g-ah1 z-ah-l","vb"],guzzler:["g-ah1-z l-er","nn"],guzzling:["g-ah1 z-ah-l ih-ng","nn"],gym:["jh-ih1-m","nn"],gymnast:["jh-ih1-m n-ah-s-t","nn"],gymnastic:["jh-ih-m n-ae1 s-t-ih-k","jj"],gynecologic:["g-ay n-ah k-ah l-aa1 jh-ih-k","jj"],gynecological:["g-ay n-ah k-ah l-aa1 jh-ih k-ah-l","jj"],gynecologist:["g-ay n-ah k-aa1 l-ah jh-ah-s-t","nn"],gynecology:["g-ay n-ah k-aa1 l-ah jh-iy","nn"],gypsum:["jh-ih1-p s-ah-m","nn"],gypsy:["jh-ih1-p s-iy","nn"],gyrate:["jh-ay1 r-ey-t","vb"],gyration:["jh-ay r-ey1 sh-ah-n","nn"],gyro:["jh-ay1 r-ow","nn"],gyroscope:["jh-ay1 r-ah s-k-ow-p","nn"],haberdashery:["hh-ae1 b-er d-ae sh-er iy","nn"],habit:["hh-ae1 b-ah-t","nn"],habitable:["hh-ae1 b-ah t-ah b-ah-l","jj"],habitat:["hh-ae1 b-ah t-ae-t","nn"],habitual:["hh-ah b-ih1 ch-uw ah-l","jj"],habitually:["hh-ah b-ih1 ch-uw ah l-iy","rb"],habitue:["hh-ae1 b-ih ch-uw","nn"],hable:["hh-ey1 b-ah-l","jj"],hack:["hh-ae1-k","nn vb"],hacker:["hh-ae1 k-er","nn"],hacking:["hh-ae1 k-ih-ng","jj nn"],hackle:["hh-ae1 k-ah-l","nn"],hackneyed:["hh-ae1-k n-iy-d","jj"],hacksaw:["hh-ae1-k s-ao","nn"],had:["hh-ae1-d","vbd vbn"],"hadn't":["hh-ae1-d-ah-n-d","vbd vbn"],hadd:["hh-ae1-d","vbn"],haddock:["hh-ae1 d-ah-k","nn"],hafta:["hh-ae1-f t-ah","vb vbp"],haggard:["hh-ae1 g-er-d","jj"],haggle:["hh-ae1 g-ah-l","vb nn"],hail:["hh-ey1-l","nn vb vbp"],hailstorm:["hh-ey1-l s-t-ao-r-m","nn"],hair:["hh-eh1-r","nn"],haircut:["hh-eh1-r k-ah-t","nn"],hairdo:["hh-eh1-r d-uw","nn"],hairdresser:["hh-eh1-r d-r-eh s-er","nn"],hairless:["hh-eh1-r l-ah-s","jj"],hairline:["hh-eh1-r l-ay-n","nn"],hairspray:["hh-eh1-r s-p-r-ey","nn"],hairy:["hh-eh1 r-iy","jj"],halcyon:["hh-ae1-l s-iy ah-n","jj"],half:["hh-ae1-f","nn jj prp"],halfback:["hh-ae1-f b-ae-k","nn"],halfhearted:["hh-ae1-f hh-aa-r t-ih-d","jj"],halftime:["hh-ae1-f t-ay-m","nn"],halfway:["hh-ae1-f w-ey1","rb jj"],hall:["hh-ao1-l","nn"],hallmark:["hh-aa1-l m-aa-r-k","nn"],hallowed:["hh-ae1 l-ow-d","jj"],hallucination:["hh-ah l-uw s-ah n-ey1 sh-ah-n","nn"],hallucinatory:["hh-ah l-uw1 s-ah n-ah t-ao r-iy","jj"],hallway:["hh-ao1-l w-ey","nn"],halo:["hh-ey1 l-ow","nn"],halogen:["hh-ae1 l-ah jh-ah-n","nn"],halogenate:["hh-ae1-l-ah-jh-ah-n-ey-t","vb"],halt:["hh-ao1-l-t","nn jj vb vbp"],halted:["hh-ao1-l t-ah-d","vbn nn vbd"],halter:["hh-ao1-l t-er","nn"],halting:["hh-ao1-l t-ih-ng","vbg jj"],haltingly:["hh-ao1-l t-ih-ng l-iy","rb"],halve:["hh-ae1-v","vb"],halved:["hh-ae1-v-d","vbn jj vbd"],ham:["hh-ae1-m","nn"],hamburger:["hh-ae1-m b-er g-er","nn"],hamlet:["hh-ae1-m l-ah-t","nn"],hammer:["hh-ae1 m-er","nn vbp vb"],hammerlock:["hh-ae1 m-er l-aa-k","nn"],hammock:["hh-ae1 m-ah-k","nn"],hamper:["hh-ae1-m p-er","vb nn"],hamstring:["hh-ae1-m s-t-r-ih-ng","vb"],hamstrung:["hh-ae1-m s-t-r-ah-ng","jj vbn vbp"],han:["hh-aa1-n","nn"],hand:["hh-ae1-n-d","nn rb vb vbp jj"],handbag:["hh-ae1-n-d b-ae-g","nn"],handbill:["hh-ae1-n-d b-ih-l","nn"],handbook:["hh-ae1-n-d b-uh-k","nn"],handclasp:["hh-ae1-n-d k-l-ae-s-p","nn"],handcraft:["hh-ae1-n-d-k-r-ae-f-t","vb"],handcuff:["hh-ae1-n-d k-ah-f","vb vbp"],hander:["hh-ae1-n d-er","nn"],handful:["hh-ae1-n-d f-uh-l","nn"],handgun:["hh-ae1-n-d g-ah-n","nn"],handheld:["hh-ae1-n-d hh-eh1-l-d","jj"],handicap:["hh-ae1-n d-iy k-ae-p","nn vb"],handicapped:["hh-ae1-n d-iy k-ae-p-t","jj vbn"],handicraft:["hh-ae1-n d-iy k-r-ae-f-t","nn"],handier:["hh-ae1-n d-iy er","jjr"],handily:["hh-ae1-n d-ah l-iy","rb"],handiwork:["hh-ae1-n d-iy w-er-k","nn"],handkerchief:["hh-ae1-ng k-er ch-ih-f","nn"],handle:["hh-ae1-n d-ah-l","vb nn vbp"],handlebar:["hh-ae1-n d-ah-l b-aa-r","nn"],handler:["hh-ae1-n-d l-er","nn"],handmade:["hh-ae1-n-d m-ey1-d","jj"],handout:["hh-ae1-n-d aw-t","nn"],handpick:["hh-ae1-n-d-p-ih1-k","vb"],handset:["hh-ae1-n-d s-eh-t","nn"],handshake:["hh-ae1-n-d sh-ey-k","nn"],handsome:["hh-ae1-n s-ah-m","jj"],handsomely:["hh-ae1-n s-ah-m l-iy","rb"],handstand:["hh-ae1-n-d s-t-ae-n-d","nn"],handwriting:["hh-ae1-n-d r-ay t-ih-ng","nn"],handwritten:["hh-ae1-n-d r-ih t-ah-n","jj"],handy:["hh-ae1-n d-iy","jj"],handyman:["hh-ae1-n d-iy m-ae-n","nn"],hang:["hh-ae1-ng","vb jj vbp nn"],hangar:["hh-ae1 ng-er","nn"],hanger:["hh-ae1 ng-er","nn"],hanging:["hh-ae1 ng-ih-ng","vbg jj nn"],hangman:["hh-ae1-ng m-ah-n","nn"],hangout:["hh-ae1-ng aw-t","nn"],hangover:["hh-ae1-ng ow v-er","nn"],hank:["hh-ae1-ng-k","nn"],hanky:["hh-ae1-ng k-iy","nn"],hansom:["hh-ae1-n s-ah-m","jj"],haphazard:["hh-ae-p hh-ae1 z-er-d","jj"],haphazardly:["hh-ae1-f ah z-er-d l-iy","rb"],hapless:["hh-ae1-p l-ah-s","jj"],happen:["hh-ae1 p-ah-n","vb vbp"],happenstance:["hh-ae1 p-ah-n s-t-ae-n-s","nn"],happier:["hh-ae1 p-iy er","jjr"],happiest:["hh-ae1 p-iy ah-s-t","jjs"],happily:["hh-ae1 p-ah l-iy","rb"],happiness:["hh-ae1 p-iy n-ah-s","nn"],happy:["hh-ae1 p-iy","jj"],harangue:["hh-er-ae1-ng","vb"],harass:["hh-er ae1-s","vb vbp"],harassment:["hh-er ae1-s m-ah-n-t","nn"],harbinger:["hh-aa1-r b-ih-n jh-er","nn"],harbor:["hh-aa1-r b-er","nn vb vbp"],harborside:["hh-aa1-r b-er s-ay-d","nn"],hard:["hh-aa1-r-d","jj rb"],hardball:["hh-aa1-r-d b-ao-l","nn"],hardboard:["hh-aa1-r-d b-ao-r-d","nn"],hardcore:["hh-aa1-r-d k-ao1-r","jj nn"],hardcover:["hh-aa1-r-d k-ah v-er","nn"],harden:["hh-aa1-r d-ah-n","vb"],hardened:["hh-aa1-r d-ah-n-d","vbn jj vbd"],hardener:["hh-aa1-r d-ah-n er","nn"],harder:["hh-aa1-r d-er","jjr rbr jj rb"],hardest:["hh-aa1-r d-ah-s-t","jjs rbs rb"],hardier:["hh-aa1-r d-iy er","jjr"],hardline:["hh-aa1-r-d l-ay-n","jj nn"],hardliner:["hh-aa1-r-d l-ay n-er","nn"],hardly:["hh-aa1-r-d l-iy","rb"],hardness:["hh-aa1-r-d n-ah-s","nn"],hardscrabble:["hh-aa1-r-d s-k-r-ae b-ah-l","jj"],hardship:["hh-aa1-r-d sh-ih-p","nn"],hardware:["hh-aa1-r-d w-eh-r","nn"],hardwood:["hh-aa1-r-d w-uh-d","nn"],hardworking:["hh-aa1-r-d w-er k-ih-ng","jj"],hardy:["hh-aa1-r d-iy","jj"],hare:["hh-eh1-r","nn"],harem:["hh-eh1 r-ah-m","nn"],harm:["hh-aa1-r-m","nn vb vbp"],harmful:["hh-aa1-r-m f-ah-l","jj"],harmless:["hh-aa1-r-m l-ah-s","jj"],harmlessly:["hh-aa1-r-m l-ah-s l-iy","rb"],harmonic:["hh-aa-r m-aa1 n-ih-k","jj"],harmonious:["hh-aa-r m-ow1 n-iy ah-s","jj"],harmonization:["hh-aa-r m-ah n-ih z-ey1 sh-ah-n","nn"],harmonize:["hh-aa1-r m-ah n-ay-z","vb"],harmony:["hh-aa1-r m-ah n-iy","nn"],harness:["hh-aa1-r n-ah-s","nn vbp vb"],harp:["hh-aa1-r-p","nn vb"],harpsichord:["hh-aa1-r-p s-ah k-ao-r-d","nn"],harried:["hh-eh1 r-iy-d","vbn vbd"],harrow:["hh-ae1-r-ow","vb"],harrowing:["hh-eh1 r-ow ih-ng","jj vbg"],harry:["hh-eh1 r-iy","vb"],harsh:["hh-aa1-r-sh","jj"],harsher:["hh-aa1-r sh-er","jjr rbr"],harshest:["hh-aa1-r sh-ah-s-t","jjs"],harshly:["hh-aa1-r-sh l-iy","rb"],harshness:["hh-aa1-r-sh n-ah-s","nn"],harvest:["hh-aa1-r v-ah-s-t","nn vb vbp"],has:["hh-ae1-z","vbz vbn"],"hasn't":["hh-ae1-z-ah-n-t","vbz"],hash:["hh-ae1-sh","nn"],hashish:["hh-ae1 sh-ih-sh","nn"],hassle:["hh-ae1 s-ah-l","nn vb"],haste:["hh-ey1-s-t","nn"],hasten:["hh-ey1 s-ah-n","vb vbp"],hastily:["hh-ey1 s-t-ah l-iy","rb"],hasty:["hh-ey1 s-t-iy","jj"],hat:["hh-ae1-t","nn"],hatch:["hh-ae1-ch","nn vbp vb"],hatchback:["hh-ae1-ch b-ae-k","nn"],hatchery:["hh-ae1 ch-er iy","nn"],hatchet:["hh-ae1 ch-ah-t","nn"],hatching:["hh-ae1 ch-ih-ng","nn vbg"],hate:["hh-ey1-t","vb"],hateful:["hh-ey1-t f-ah-l","jj"],hater:["hh-ey1 t-er","nn"],hatred:["hh-ey1 t-r-ah-d","nn"],haughty:["hh-ao1 t-iy","jj"],haul:["hh-ao1-l","nn vb"],hauler:["hh-ao1 l-er","nn"],haunt:["hh-ao1-n-t","vb vbp nn"],haunted:["hh-ao1-n t-ah-d","vbn vbd jj"],haunting:["hh-ao1-n t-ih-ng","jj vbg"],hauntingly:["hh-ao1-n t-ih-ng l-iy","rb"],have:["hh-ae1-v","vbp jj nn vb vbn"],haven:["hh-ey1 v-ah-n","nn"],"haven't":["hh-ae1-v-ah-n-t","vbp vbn"],havoc:["hh-ae1 v-ah-k","nn"],haw:["hh-ao1","vb"],hawk:["hh-ao1-k","nn vbp vb"],hawker:["hh-ao1 k-er","nn"],hawkish:["hh-ao1 k-ih-sh","jj"],hay:["hh-ey1","nn vb"],hayfield:["hh-ey1 f-iy-l-d","nn"],haystack:["hh-ey1 s-t-ae-k","nn"],hazard:["hh-ae1 z-er-d","nn vb"],hazardous:["hh-ae1 z-er d-ah-s","jj"],haze:["hh-ey1-z","nn"],hazel:["hh-ey1 z-ah-l","jj"],hazelnut:["hh-ey1 z-ah-l n-ah-t","nn"],hazy:["hh-ey1 z-iy","jj"],he:["hh-iy1","prp vb"],head:["hh-eh1-d","nn jj rb vb vbp"],headache:["hh-eh1-d ey-k","nn"],headboard:["hh-eh1-d b-ao-r-d","nn"],headcount:["hh-eh1-d k-aw-n-t","nn"],headdress:["hh-eh1-d r-eh-s","nn"],header:["hh-eh1 d-er","nn"],headhunter:["hh-eh1-d hh-ah-n t-er","nn"],headless:["hh-eh1-d l-ah-s","jj"],headlight:["hh-eh1-d l-ay-t","nn"],headline:["hh-eh1-d l-ay-n","nn vb"],headlong:["hh-eh1-d l-ao-ng","rb"],headmaster:["hh-eh1-d m-ae1 s-t-er","nn"],headphone:["hh-eh1-d f-ow-n","nn"],headquartered:["hh-eh1-d k-ao-r t-er-d","vbn"],headquarters:["hh-eh1-d k-w-ao-r t-er-z","nn"],headrest:["hh-eh1-d r-eh-s-t","nn"],headroom:["hh-eh1-d r-uw-m","nn"],headset:["hh-eh1-d s-eh-t","nn"],headship:["hh-eh1-d sh-ih-p","nn"],headsman:["hh-eh1-d-z m-ah-n","nn"],headstrong:["hh-eh1-d s-t-r-ao-ng","jj"],headwaters:["hh-eh1-d w-ao t-er-z","nn"],headway:["hh-eh1-d w-ey","nn"],heady:["hh-eh1 d-iy","jj"],heal:["hh-iy1-l","vb"],healer:["hh-iy1 l-er","nn"],healing:["hh-iy1 l-ih-ng","nn jj vbg"],health:["hh-eh1-l-th","nn"],healthcare:["hh-eh1-l-th k-eh-r","nn"],healthful:["hh-eh1-l-th f-ah-l","jj"],healthier:["hh-eh1-l th-iy er","jjr rbr"],healthiest:["hh-eh1-l th-iy ih-s-t","jjs"],healthy:["hh-eh1-l th-iy","jj"],heap:["hh-iy1-p","nn vb"],hear:["hh-ih1-r","vb vbp"],hearer:["hh-ih1 r-er","nn"],hearing:["hh-ih1 r-ih-ng","nn vbg"],hearsay:["hh-ih1-r s-ey","nn"],hearse:["hh-er1-s","nn"],heart:["hh-aa1-r-t","nn rb vb"],heartbeat:["hh-aa1-r-t b-iy-t","nn"],heartbreak:["hh-aa1-r-t b-r-ey-k","nn"],heartbreaking:["hh-aa1-r-t b-r-ey k-ih-ng","jj"],heartburn:["hh-aa1-r-t b-er-n","nn"],hearten:["hh-aa1-r-t-ah-n","vb"],heartening:["hh-aa1-r t-ah-n ih-ng","jj"],heartfelt:["hh-aa1-r-t f-eh-l-t","jj"],hearth:["hh-aa1-r-th","nn"],heartily:["hh-aa1-r t-ah l-iy","rb"],heartland:["hh-aa1-r-t l-ae-n-d","nn"],heartless:["hh-aa1-r-t l-ah-s","jj"],heartthrob:["hh-aa1-r-t th-r-aa-b","nn"],hearty:["hh-aa1-r t-iy","jj"],heat:["hh-iy1-t","nn vb vbp"],heated:["hh-iy1 t-ah-d","vbn jj vbd"],heatedly:["hh-iy1 t-ih-d l-iy","rb"],heater:["hh-iy1 t-er","nn"],heath:["hh-iy1-th","nn"],heathen:["hh-iy1 dh-ah-n","jj nn"],heather:["hh-eh1 dh-er","nn"],heave:["hh-iy1-v","nn vb"],heaven:["hh-eh1 v-ah-n","nn"],heavenly:["hh-eh1 v-ah-n l-iy","jj"],heaves:["hh-iy1-v-z","nn vbd"],heavier:["hh-eh1 v-iy er","jjr rbr"],heaviest:["hh-eh1 v-iy ah-s-t","jjs"],heavily:["hh-eh1 v-ah l-iy","rb"],heavy:["hh-eh1 v-iy","jj nn rb"],heavyweight:["hh-eh1 v-iy w-ey-t","nn jj"],heck:["hh-eh1-k","nn uh"],heckle:["hh-eh1-k-ah-l","vb"],hectare:["hh-eh1-k t-aa-r","nn"],hectic:["hh-eh1-k t-ih-k","jj"],hedge:["hh-eh1-jh","vb jj nn vbp"],hedgehog:["hh-eh1-jh hh-aa-g","nn"],hedger:["hh-eh1 jh-er","nn"],hedging:["hh-eh1 jh-ih-ng","vbg jj nn"],hedonism:["hh-iy1 d-ah n-ih z-ah-m","nn"],hedonistic:["hh-iy d-ah n-ih1 s-t-ih-k","jj"],heed:["hh-iy1-d","vb vbp nn"],heel:["hh-iy1-l","nn"],heft:["hh-eh1-f-t","nn"],heftier:["hh-eh1-f t-iy er","jjr"],heftiest:["hh-eh1-f t-iy ah-s-t","jjs"],hefty:["hh-eh1-f t-iy","jj"],hegemonic:["hh-eh g-ah m-aa1 n-ih-k","jj"],hegemony:["hh-iy jh-eh1 m-ah n-iy","nn"],heifer:["hh-eh1 f-er","nn"],height:["hh-ay1-t","nn"],heighten:["hh-ay1 t-ah-n","vb"],heightened:["hh-ay1 t-ah-n-d","vbn vbd jj"],heinous:["hh-ey1 n-ah-s","jj"],heir:["eh1-r","nn"],heiress:["eh1 r-ah-s","nn"],heist:["hh-ay1-s-t","nn"],held:["hh-eh1-l-d","vbn vbd jj"],helicopter:["hh-eh1 l-ih k-aa-p t-er","nn"],heliotrope:["hh-iy1 l-iy ah t-r-ow-p","nn"],helium:["hh-iy1 l-iy ah-m","nn"],helix:["hh-iy1 l-ih-k-s","nn"],hell:["hh-eh1-l","nn uh"],hellfire:["hh-eh1-l f-ay-r","nn"],hello:["hh-ah l-ow1","uh nn"],helluva:["hh-eh l-uw1 v-ah","jj"],helm:["hh-eh1-l-m","nn"],helmet:["hh-eh1-l m-ah-t","nn"],helmsman:["hh-eh1-l-m-z m-ae-n","nn"],help:["hh-eh1-l-p","vb nn vbp"],helper:["hh-eh1-l p-er","nn"],helpful:["hh-eh1-l-p f-ah-l","jj"],helpfully:["hh-eh1-l-p f-ah l-iy","rb"],helpless:["hh-eh1-l-p l-ah-s","jj"],helplessly:["hh-eh1-l-p l-ah-s l-iy","rb"],helplessness:["hh-eh1-l-p l-ah-s n-ah-s","nn"],hem:["hh-eh1-m","nn"],hemisphere:["hh-eh1 m-ih s-f-ih-r","nn"],hemispheric:["hh-eh m-ah s-f-ih1 r-ih-k","jj"],hemline:["hh-eh1-m l-ay-n","nn"],hemmed:["hh-eh1-m-d","vbn"],hemoglobin:["hh-iy m-ah g-l-ow1 b-ah-n","nn"],hemolytic:["hh-iy m-ah l-ih1 t-ih-k","jj"],hemophilia:["hh-iy m-ah f-iy1 l-iy ah","nn"],hemophiliac:["hh-iy m-ah f-ih1 l-iy ae-k","nn"],hemorrhage:["hh-eh1 m-er ih-jh","nn vb"],hemorrhaging:["hh-eh1 m-er ih jh-ih-ng","vbg jj nn"],hemorrhoid:["hh-eh1 m-er oy-d","nn"],hen:["hh-eh1-n","nn"],hence:["hh-eh1-n-s","rb"],henceforth:["hh-eh1-n-s f-ao1-r-th","rb"],henchman:["hh-eh1-n-ch m-ah-n","nn"],henpecked:["hh-eh1-n p-eh-k-t","jj"],hepatitis:["hh-eh p-ah t-ay1 t-ah-s","nn"],her:["hh-er","prp$"],herald:["hh-eh1 r-ah-l-d","vb vbp"],heraldic:["hh-eh r-ae1-l d-ih-k","jj"],herb:["er1-b","nn"],herbaceous:["er b-ey1 sh-ah-s","jj"],herbal:["er1 b-ah-l","jj"],herbicide:["hh-er1 b-ih s-ay-d","nn"],herculean:["hh-er k-y-uw1 l-iy ah-n","jj"],herd:["hh-er1-d","nn vb"],here:["hh-ih1-r","rb"],hereabout:["hh-ih1 r-ah b-aw-t","jj"],hereabouts:["hh-ih1 r-ah b-aw-t-s","rb"],hereafter:["hh-ih r-ae1-f t-er","rb"],hereby:["hh-ih-r b-ay1","rb"],hereditary:["hh-er eh1 d-ah t-eh r-iy","jj"],heredity:["hh-er eh1 d-ah t-iy","nn"],herein:["hh-ih r-ih1-n","rb"],heresy:["hh-eh1 r-ah s-iy","nn"],heretical:["hh-er eh1 t-ih k-ah-l","jj"],heretofore:["hh-ih-r t-ah f-ao1-r","rb"],herewith:["hh-ih1-r w-ih1-th","rb"],heritage:["hh-eh1 r-ah t-ah-jh","nn"],hermetically:["hh-er m-eh1 t-ih k-ah l-iy","rb"],hero:["hh-ih1 r-ow","nn"],heroic:["hh-ih r-ow1 ih-k","jj"],heroically:["hh-ih r-ow1 ih-k l-iy","rb"],heroin:["hh-eh1 r-ow ah-n","nn"],heroine:["hh-eh1 r-ow ah-n","nn"],heroism:["hh-eh1 r-ow ih z-ah-m","nn"],heron:["hh-eh1 r-ah-n","nn"],herring:["hh-eh1 r-ih-ng","nn"],hers:["hh-er-z","prp jj"],herself:["hh-er s-eh1-l-f","prp"],hesitancy:["hh-eh1 z-ih t-ah-n s-iy","nn"],hesitant:["hh-eh1 z-ih t-ah-n-t","jj"],hesitantly:["hh-eh1 z-ih t-ah-n-t l-iy","rb"],hesitate:["hh-eh1 z-ah t-ey-t","vb vbp"],hesitation:["hh-eh z-ah t-ey1 sh-ah-n","nn"],heterogeneity:["hh-eh t-er ah jh-ih n-iy1 ah t-iy","nn"],heterogeneous:["hh-eh t-er ah jh-iy1 n-y-ah-s","jj"],heterozygous:["hh-eh t-er ah z-ay1 g-ah-s","jj"],hew:["hh-y-uw1","vb"],hewn:["hh-y-uw1-n","vbn"],hexagon:["hh-eh1-k s-ah g-aa-n","nn"],hexagonal:["hh-eh-k s-ae1 g-ah n-ah-l","jj"],hey:["hh-ey1","uh"],heyday:["hh-ey1 d-ey","nn"],hiatus:["hh-ay ey1 t-ah-s","nn"],hibachi:["hh-ah b-aa1 ch-iy","nn"],hibernate:["hh-ay1 b-er n-ey-t","vbp vb"],hiccup:["hh-ih1 k-ah-p","nn"],hick:["hh-ih1-k","nn"],hickory:["hh-ih1 k-er iy","nn"],hid:["hh-ih1-d","vbd vbn"],hidden:["hh-ih1 d-ah-n","vbn jj"],hide:["hh-ay1-d","vb vbp nn"],hideaway:["hh-ay1 d-ah w-ey","nn"],hidebound:["hh-ay1-d b-aw-n-d","jj"],hideous:["hh-ih1 d-iy ah-s","jj"],hideously:["hh-ih1 d-iy ah-s l-iy","rb"],hideout:["hh-ay1 d-aw-t","nn"],hierarchical:["hh-ay r-aa1-r k-ah k-ah-l","jj"],hierarchy:["hh-ay1 er aa-r k-iy","nn"],high:["hh-ay1","jj nn rb rp"],highboy:["hh-ay1 b-oy","nn"],highbrow:["hh-ay1 b-r-aw","jj"],higher:["hh-ay1 er","jjr rb rbr"],highest:["hh-ay1 ah-s-t","jjs rb rbs"],highfalutin:["hh-ay f-ah l-uw1 t-ih-n","jj"],highflying:["hh-ay1 f-l-ay ih-ng","jj"],highland:["hh-ay1 l-ah-n-d","nn"],highlight:["hh-ay1 l-ay-t","vb vbp nn"],highly:["hh-ay1 l-iy","rb"],highness:["hh-ay1 n-ah-s","nn"],highway:["hh-ay1 w-ey","nn"],highyield:["hh-ay1 y-iy1-l-d","jj"],hijack:["hh-ay1-jh-ae-k","vb"],hijacker:["hh-ay1 jh-ae k-er","nn"],hijacking:["hh-ay1 jh-ae k-ih-ng","nn vbg"],hike:["hh-ay1-k","nn vb"],hiker:["hh-ay1 k-er","nn"],hilarious:["hh-ih l-eh1 r-iy ah-s","jj"],hilariously:["hh-ih l-eh1 r-iy ah-s l-iy","rb"],hilarity:["hh-ih l-eh1 r-ah t-iy","nn"],hill:["hh-ih1-l","nn"],hillbilly:["hh-ih1-l b-ih l-iy","nn"],hillside:["hh-ih1-l s-ay-d","nn"],hilltop:["hh-ih1-l t-aa-p","nn"],hilly:["hh-ih1 l-iy","jj"],hilt:["hh-ih1-l-t","nn"],him:["hh-ih1-m","prp"],himself:["hh-ih-m s-eh1-l-f","prp"],hind:["hh-ay1-n-d","jj"],hinder:["hh-ih1-n d-er","vb"],hindering:["hh-ih1-n d-er ih-ng","vbg jj"],hindquarter:["hh-ay1-n-d k-w-ao-r t-er","nn"],hindrance:["hh-ih1-n d-r-ah-n-s","nn"],hindsight:["hh-ay1-n-d s-ay-t","nn"],hinge:["hh-ih1-n-jh","vb nn"],hint:["hh-ih1-n-t","nn vbp vb"],hinterland:["hh-ih1-n t-er l-ae-n-d","nn"],hip:["hh-ih1-p","nn jj"],hipper:["hh-ih1 p-er","jjr"],hippie:["hh-ih1 p-iy","nn"],hire:["hh-ay1 er","vb vbp nn"],hired:["hh-ay1 er-d","vbn jj vbd"],his:["hh-ih1-z","prp$"],hissed:["hh-ih1-s-t","vbd"],histology:["hh-ih s-t-aa1 l-ah jh-iy","nn"],historian:["hh-ih s-t-ao1 r-iy ah-n","nn"],historic:["hh-ih s-t-ao1 r-ih-k","jj"],historical:["hh-ih s-t-ao1 r-ih k-ah-l","jj"],historically:["hh-ih s-t-ao1 r-ih k-ah l-iy","rb"],historiography:["hh-ih s-t-ao r-iy aa1 g-r-ah f-iy","nn"],history:["hh-ih1 s-t-er iy","nn"],hit:["hh-ih1-t","vbd jj nn vb vbn vbp"],hitch:["hh-ih1-ch","nn vb"],hither:["hh-ih1 dh-er","rb"],hitherto:["hh-ih1 dh-er t-uw1","rb"],hitter:["hh-ih1 t-er","nn"],hive:["hh-ay1-v","nn"],hoard:["hh-ao1-r-d","nn vb vbp"],hoarse:["hh-ao1-r-s","jj"],hoarseness:["hh-ao1-r-s n-ah-s","nn"],hoax:["hh-ow1-k-s","nn"],hob:["hh-aa1-b","nn"],hobble:["hh-aa1 b-ah-l","vb"],hobby:["hh-aa1 b-iy","nn"],hobbyist:["hh-aa1 b-iy ih-s-t","nn"],hobnob:["hh-aa1-b n-aa-b","vb"],hock:["hh-aa1-k","nn vb"],hockey:["hh-aa1 k-iy","nn"],hodgepodge:["hh-aa1-jh p-aa-jh","nn"],hoe:["hh-ow1","nn"],hog:["hh-aa1-g","nn"],hoist:["hh-oy1-s-t","vb"],hoisting:["hh-oy1 s-t-ih-ng","nn"],hokey:["hh-ow1 k-iy","jj"],hold:["hh-ow1-l-d","vb nn rb vbp"],holder:["hh-ow1-l d-er","nn"],holding:["hh-ow1-l d-ih-ng","vbg jj nn"],holdout:["hh-ow1-l-d aw-t","nn"],holdover:["hh-ow1-l-d ow v-er","nn"],holdup:["hh-ow1-l-d ah-p","nn"],hole:["hh-ow1-l","nn vbp vb"],holiday:["hh-aa1 l-ah d-ey","nn"],holiest:["hh-ow1 l-iy ih-s-t","jjs"],holistic:["hh-ow l-ih1 s-t-ih-k","jj"],holler:["hh-aa1 l-er","vb"],hollering:["hh-aa1 l-er ih-ng","vbg jj"],hollow:["hh-aa1 l-ow","jj nn"],hollyhock:["hh-aa1 l-iy hh-aa-k","nn"],holocaust:["hh-aa1 l-ah k-ao-s-t","nn"],holster:["hh-ow1-l s-t-er","nn"],holy:["hh-ow1 l-iy","jj"],homage:["aa1 m-ah-jh","nn"],home:["hh-ow1-m","nn vbp rb vb"],homebuilder:["hh-ow1-m b-ih-l d-er","nn"],homebuilding:["hh-ow1-m b-ih-l d-ih-ng","nn"],homecoming:["hh-ow1-m k-ah m-ih-ng","nn"],homeland:["hh-ow1-m l-ae-n-d","nn"],homeless:["hh-ow1-m l-ah-s","jj nn"],homelessness:["hh-ow1-m l-ah-s n-ah-s","nn"],homely:["hh-ow1-m l-iy","jj"],homemade:["hh-ow1-m m-ey1-d","jj"],homemaker:["hh-ow1-m m-ey k-er","nn"],homeowner:["hh-ow1 m-ow n-er","nn"],homer:["hh-ow1 m-er","nn vb"],homesick:["hh-ow1-m s-ih-k","jj"],homesickness:["hh-ow1-m s-ih-k n-ah-s","nn"],homespun:["hh-ow1-m s-p-ah-n","jj"],homestead:["hh-ow1-m s-t-eh-d","nn"],hometown:["hh-ow1-m t-aw-n","nn jj"],homeward:["hh-ow1-m w-er-d","rb"],homework:["hh-ow1-m w-er-k","nn"],homey:["hh-ow1 m-iy","jj"],homicidal:["hh-aa m-ah s-ay1 d-ah-l","jj"],homicide:["hh-aa1 m-ah s-ay-d","nn"],homily:["hh-ow1 m-ah l-iy","nn"],homogeneity:["hh-aa m-ah jh-ah n-iy1 ah t-iy","nn"],homogeneous:["hh-ow m-ah jh-iy1 n-iy ah-s","jj"],homogenize:["hh-ow-m-aa1-jh-ah-n-ay-z","vb"],homogenous:["hh-ah m-aa1 jh-ah n-ah-s","jj"],homologous:["hh-ah m-aa1 l-ah g-ah-s","rb"],homophobia:["hh-ow m-ah f-ow1 b-iy ah","nn"],homosexual:["hh-ow m-ow s-eh1-k sh-ah w-ah-l","jj nn"],homosexuality:["hh-ow m-ow s-eh-k sh-ah-w ae1 l-ah t-iy","nn"],hone:["hh-ow1-n","vb vbp nn"],honed:["hh-ow1-n-d","vbn jj"],honest:["aa1 n-ah-s-t","jj"],honestly:["aa1 n-ah-s-t l-iy","rb"],honesty:["aa1 n-ah s-t-iy","nn"],honey:["hh-ah1 n-iy","nn vb uh jj"],honeybee:["hh-ah1 n-iy b-iy","nn"],honeymoon:["hh-ah1 n-iy m-uw-n","nn vb"],honeymooner:["hh-ah1 n-iy m-uw n-er","nn"],honk:["hh-aa1-ng-k","vb vbp"],honor:["aa1 n-er","nn vbp vb"],honorable:["aa1 n-er ah b-ah-l","jj nn"],honorably:["aa1 n-er ah b-l-iy","rb"],honorarium:["aa n-er eh1 r-iy ah-m","nn"],honorary:["aa1 n-er eh r-iy","jj"],honored:["aa1 n-er-d","vbn jj vbd"],honorific:["aa n-er ih1 f-ih-k","nn"],hooch:["hh-uw1-ch","nn"],hood:["hh-uh1-d","nn"],hoodlum:["hh-uh1-d l-ah-m","nn"],hoodwink:["hh-uh1-d-w-ih-ng-k","vb"],hoof:["hh-uw1-f","nn"],hook:["hh-uh1-k","nn vb"],hooked:["hh-uh1-k-t","vbn jj vbd"],hooker:["hh-uh1 k-er","nn"],hookup:["hh-uh1-k ah-p","nn"],hookworm:["hh-uh1-k w-er-m","nn"],hooliganism:["hh-uw1 l-ih g-ah n-ih z-ah-m","nn"],hoop:["hh-uw1-p","nn"],hoopla:["hh-uw1 p-l-aa","nn"],hoot:["hh-uw1-t","nn vb vbp"],hop:["hh-aa1-p","nn vb"],hope:["hh-ow1-p","nn vb vbp"],hopeful:["hh-ow1-p f-ah-l","jj nn"],hopefully:["hh-ow1-p f-ah l-iy","rb"],hopeless:["hh-ow1-p l-ah-s","jj"],hopelessly:["hh-ow1-p l-ah-s l-iy","rb"],hopelessness:["hh-ow1-p l-ah-s n-ah-s","nn"],hopper:["hh-aa1 p-er","nn"],hopscotch:["hh-aa1-p s-k-aa-ch","nn"],horde:["hh-ao1-r-d","nn"],horizon:["hh-er ay1 z-ah-n","nn"],horizontal:["hh-ao r-ah z-aa1-n t-ah-l","jj nn"],horizontally:["hh-ao r-ih z-aa1-n t-ah l-iy","rb"],hormonal:["hh-ao1-r m-ow n-ah-l","jj"],hormone:["hh-ao1-r m-ow-n","nn"],horn:["hh-ao1-r-n","nn vb"],horned:["hh-ao1-r-n-d","jj"],hornet:["hh-ao1-r n-ih-t","nn"],horoscope:["hh-ao1 r-ah s-k-ow-p","nn"],horrendous:["hh-ao r-eh1-n d-ah-s","jj"],horrible:["hh-ao1 r-ah b-ah-l","jj nn"],horribly:["hh-ao1 r-ah b-l-iy","rb"],horrid:["hh-ao1 r-ah-d","jj"],horrific:["hh-ao r-ih1 f-ih-k","jj"],horrified:["hh-ao1 r-ah f-ay-d","vbn jj"],horrify:["hh-ao1-r-ah-f-ay","vb"],horrifying:["hh-ao1 r-ah f-ay ih-ng","jj"],horror:["hh-ao1 r-er","nn"],horse:["hh-ao1-r-s","nn"],horseback:["hh-ao1-r-s b-ae-k","nn jj rb"],horseflesh:["hh-ao1-r-s f-l-eh-sh","nn"],horseman:["hh-ao1-r-s m-ah-n","nn"],horsemanship:["hh-ao1-r-s m-ah-n sh-ih-p","nn"],horseplay:["hh-ao1-r-s p-l-ey","nn"],horsepower:["hh-ao1-r-s p-aw er","nn"],horseradish:["hh-ao1-r-s r-ae d-ih-sh","nn"],horticultural:["hh-ao-r t-ah k-ah1-l ch-er ah-l","jj"],horticulture:["hh-ao1-r t-ih k-ah-l ch-er","nn"],horticulturist:["hh-ao-r t-ih k-ah1-l ch-er ih-s-t","nn"],hose:["hh-ow1-z","nn vb"],hospice:["hh-aa1-s p-ah-s","nn"],hospitable:["hh-aa1 s-p-ih1 t-ah b-ah-l","jj"],hospital:["hh-aa1-s p-ih t-ah-l","nn"],hospitality:["hh-aa-s p-ah t-ae1 l-ah t-iy","nn"],hospitalization:["hh-aa-s p-ih t-ah-l ah z-ey1 sh-ah-n","nn"],hospitalize:["hh-ao1-s-p-ih-t-ah-l-ay-z","vb"],hospitalized:["hh-aa1-s p-ih t-ah-l ay-z-d","vbn jj"],hoss:["hh-aa1-s","nn"],host:["hh-ow1-s-t","nn vb"],hostage:["hh-aa1 s-t-ih-jh","nn"],hosted:["hh-ow1 s-t-ih-d","vbn jj vbd"],hostess:["hh-ow1 s-t-ah-s","nn"],hostile:["hh-aa1 s-t-ah-l","jj nn"],hostility:["hh-aa s-t-ih1 l-ah t-iy","nn"],hostler:["hh-aa1-s l-er","nn"],hot:["hh-aa1-t","jj"],hotbed:["hh-aa1-t b-eh-d","nn"],hotdog:["hh-aa1-t d-ao-g","nn"],hotel:["hh-ow t-eh1-l","nn"],hotelier:["hh-ow t-eh1 l-y-er","nn"],hothouse:["hh-aa1-t hh-aw-s","jj"],hotline:["hh-aa1-t l-ay-n","nn"],hotly:["hh-aa1-t l-iy","rb"],hotter:["hh-aa1 t-er","jjr"],hottest:["hh-aa1 t-ah-s-t","jjs"],hound:["hh-aw1-n-d","nn vb"],hour:["aw1 er","nn"],hourlong:["aw1-r l-ao-ng","jj"],hourly:["aw1-r l-iy","jj"],house:["hh-aw1-s","nn vbp vb"],houseboat:["hh-aw1-s b-ow-t","nn"],housebroken:["hh-aw1-s b-r-ow k-ah-n","jj"],housecleaning:["hh-aw1-s-k l-iy n-ih-ng","nn"],houseful:["hh-aw1-s f-ah-l","nn"],household:["hh-aw1-s hh-ow-l-d","nn jj"],householder:["hh-aw1-s hh-ow-l d-er","nn"],housekeeper:["hh-aw1-s k-iy p-er","nn"],housekeeping:["hh-aw1-s k-iy p-ih-ng","nn"],houseman:["hh-aw1-s m-ah-n","nn"],houseware:["hh-aw1-s w-eh-r","nn"],housewife:["hh-aw1-s w-ay-f","nn"],housework:["hh-aw1-s w-er-k","nn"],housing:["hh-aw1 z-ih-ng","nn vbg jj"],hove:["hh-ow1-v","vbd"],hovel:["hh-ah1 v-ah-l","nn"],hover:["hh-ah1 v-er","vb vbp"],how:["hh-aw1","wrb"],howdy:["hh-aw1 d-iy","uh"],howe:["hh-aw1","wrb"],however:["hh-aw eh1 v-er","rb rbr wrb"],howitzer:["hh-aw1 ah-t s-er","nn"],howl:["hh-aw1-l","nn vb"],hub:["hh-ah1-b","nn"],hubbub:["hh-ah1 b-ah-b","nn"],hubby:["hh-ah1 b-iy","nn"],hubris:["hh-y-uw1 b-r-ah-s","nn"],huckster:["hh-ah1-k s-t-er","nn vb"],huddle:["hh-ah1 d-ah-l","nn vb"],huddled:["hh-ah1 d-ah-l-d","vbd vbn jj"],hue:["hh-y-uw1","nn"],huff:["hh-ah1-f","vb"],hug:["hh-ah1-g","nn vb vbp"],huge:["hh-y-uw1-jh","jj"],hugely:["hh-y-uw1-jh l-iy","rb"],huh:["hh-ah1","uh"],hulk:["hh-ah1-l-k","nn vb"],hulking:["hh-ah1-l k-ih-ng","jj vbg"],hull:["hh-ah1-l","nn"],hullabaloo:["hh-ah l-ah b-ah l-uw1","nn"],hum:["hh-ah1-m","nn vb"],human:["hh-y-uw1 m-ah-n","jj nn"],humane:["hh-y-uw m-ey1-n","jj"],humanism:["hh-y-uw1 m-ah n-ih z-ah-m","nn"],humanist:["hh-y-uw1 m-ah n-ih-s-t","jj nn"],humanistic:["hh-y-uw m-ah n-ih1 s-t-ih-k","jj"],humanitarian:["hh-y-uw m-ae n-ah t-eh1 r-iy ah-n","jj nn"],humanity:["hh-y-uw m-ae1 n-ih t-iy","nn"],humanize:["hh-y-uw1 m-ah n-ay-z","vb"],humankind:["hh-y-uw1 m-ah-n k-ay-n-d","nn"],humanly:["hh-y-uw1 m-ah-n l-iy","rb"],humanness:["hh-y-uw1 m-ah-n n-ah-s","nn"],humble:["hh-ah1-m b-ah-l","jj vb"],humblest:["hh-ah1-m b-ah l-ah-s-t","jjs"],humbling:["hh-ah1-m b-ah-l ih-ng","jj"],humbly:["hh-ah1-m b-l-iy","rb"],humid:["hh-y-uw1 m-ah-d","jj"],humidity:["hh-y-uw m-ih1 d-ah t-iy","nn"],humiliate:["hh-y-uw-m-ih1-l-iy-ey-t","vb"],humiliated:["hh-y-uw m-ih1 l-iy ey t-ih-d","vbn jj"],humiliating:["hh-y-uw m-ih1 l-iy ey t-ih-ng","jj"],humiliation:["hh-y-uw m-ih l-iy ey1 sh-ah-n","nn"],humility:["hh-y-uw m-ih1 l-ih t-iy","nn"],humongous:["hh-y-uw m-ao1-ng g-ah-s","jj"],humor:["hh-y-uw1 m-er","nn vb"],humorist:["hh-y-uw1 m-er ah-s-t","nn"],humorless:["hh-y-uw1 m-er l-ah-s","jj"],humorous:["hh-y-uw1 m-er ah-s","jj"],hump:["hh-ah1-m-p","nn"],humped:["hh-ah1-m-p-t","nn"],hunch:["hh-ah1-n-ch","nn vb"],hunched:["hh-ah1-n-ch-t","vbn vbd jj"],hundred:["hh-ah1-n d-r-ah-d","nn"],hundredth:["hh-ah1-n d-r-ah-d-th","jj"],hundredweight:["hh-ah1-n d-r-ah-d w-ey-t","nn"],hung:["hh-ah1-ng","vbd jj vbn"],hunger:["hh-ah1-ng g-er","nn"],hungrier:["hh-ah1-ng g-r-iy er","jjr"],hungrily:["hh-ah1-ng g-r-ah l-iy","rb"],hungry:["hh-ah1-ng g-r-iy","jj"],hunk:["hh-ah1-ng-k","nn"],hunker:["hh-ah1-ng k-er","vb"],hunt:["hh-ah1-n-t","nn vb vbp"],hunted:["hh-ah1-n t-ah-d","vbn vbd jj"],hunter:["hh-ah1-n t-er","nn"],hurdle:["hh-er1 d-ah-l","nn vb"],hurl:["hh-er1-l","vb vbp"],hurley:["hh-er1 l-iy","nn"],hurrah:["hh-uh r-aa1","nn"],hurricane:["hh-er1 ah k-ey-n","nn"],hurried:["hh-er1 iy-d","vbd vbn jj"],hurriedly:["hh-er1 iy-d l-iy","rb"],hurries:["hh-er1 iy-z","vbz"],hurry:["hh-er1 iy","nn vbp vb"],hurrying:["hh-er1 iy ih-ng","vbg jj"],hurt:["hh-er1-t","vbn jj nn vb vbd vbp"],hurtle:["hh-er1-t-ah-l","vb"],husband:["hh-ah1-z b-ah-n-d","nn"],husbandry:["hh-ah1-z b-ah-n d-r-iy","nn"],hush:["hh-ah1-sh","jj nn uh"],hushed:["hh-ah1-sh-t","jj"],husk:["hh-ah1-s-k","nn"],husky:["hh-ah1-s k-iy","jj"],hustings:["hh-ah1 s-t-ih-ng-z","nn"],hustle:["hh-ah1 s-ah-l","vb nn"],hustler:["hh-ah1 s-ah l-er","nn"],hut:["hh-ah1-t","nn"],hutch:["hh-ah1-ch","nn"],hyacinth:["hh-ay1 ah s-ih-n-th","nn"],hyaluronic:["hh-ay ah l-er aa1 n-ih-k","jj"],hybrid:["hh-ay1 b-r-ah-d","jj nn"],hydrated:["hh-ay1 d-r-ey t-ah-d","jj"],hydration:["hh-ay d-r-ey1 sh-ah-n","nn"],hydraulic:["hh-ay d-r-ao1 l-ih-k","jj"],hydraulics:["hh-ay d-r-ao1 l-ih-k-s","nn"],hydride:["hh-ay1 d-r-ay-d","nn"],hydrocarbon:["hh-ay d-r-ow k-aa1-r b-ah-n","nn"],hydroelectric:["hh-ay d-r-ow ih l-eh1-k t-r-ih-k","jj"],hydrogen:["hh-ay1 d-r-ah jh-ah-n","nn"],hydrolysis:["hh-ay d-r-aa1 l-ah s-ah-s","nn"],hydrolyze:["hh-ay1-d-r-ah-l-ay-z","vb"],hydrophilic:["hh-ay d-r-ah f-ih1 l-ih-k","jj"],hydrotherapy:["hh-ay d-r-ow th-eh1 r-ah p-iy","nn"],hydrous:["hh-ay1 d-r-ah-s","jj"],hyena:["hh-ay iy1 n-ah","nn"],hygiene:["hh-ay1 jh-iy-n","nn"],hymn:["hh-ih1-m","nn"],hype:["hh-ay1-p","nn vb"],hyper:["hh-ay1 p-er","jj"],hyperactive:["hh-ay p-er ae1-k t-ih-v","jj"],hyperbole:["hh-ay p-er1 b-ah l-iy","nn"],hyperbolic:["hh-ay p-er b-aa1 l-ih-k","jj"],hyperinflation:["hh-ay p-er ih-n f-l-ey1 sh-ah-n","nn"],hypermarket:["hh-ay1 p-er m-aa-r k-ih-t","nn"],hypersonic:["hh-ay p-er s-aa1 n-ih-k","jj"],hypertension:["hh-ay p-er t-eh1-n sh-ah-n","nn"],hyphenate:["hh-ay1-f-ah-n-ey-t","vb"],hyphenated:["hh-ay1 f-ah n-ey t-ih-d","jj vbn"],hypnosis:["hh-ih-p n-ow1 s-ah-s","nn"],hypnotic:["hh-ih-p n-aa1 t-ih-k","jj"],hypnotize:["hh-ih1-p-n-ah-t-ay-z","vb"],hypocrisy:["hh-ih p-aa1 k-r-ah s-iy","nn"],hypocrite:["hh-ih1 p-ah k-r-ih-t","nn"],hypocritical:["hh-ih p-ah k-r-ih1 t-ih k-ah-l","jj"],hypodermic:["hh-ay p-ah d-er1 m-ih-k","jj"],hypoglycemia:["hh-ay p-ow g-l-ay s-iy1 m-iy ah","nn"],hypoglycemic:["hh-ay p-ow g-l-ay s-iy1 m-ih-k","jj"],hypothalamic:["hh-ay p-ow th-ah l-ae1 m-ih-k","jj"],hypothesis:["hh-ay p-aa1 th-ah s-ah-s","nn"],hypothesize:["hh-ay p-aa1 th-ah s-ay-z","vb"],hypothetical:["hh-ay p-ah th-eh1 t-ah k-ah-l","jj"],hypothetically:["hh-ay p-ah th-eh1 t-ih-k l-iy","rb"],hysterectomy:["hh-ih s-t-er eh1-k t-ah m-iy","nn"],hysteria:["hh-ih s-t-eh1 r-iy ah","nn"],hysterical:["hh-ih s-t-eh1 r-ih k-ah-l","jj"],hysterically:["hh-ih s-t-eh1 r-ih-k l-iy","rb"],i:["ay1","prp"],ice:["ay1-s","nn jj"],iceberg:["ay1-s b-er-g","nn"],icebox:["ay1-s b-aa-k-s","nn"],iced:["ay1-s-t","jj"],icing:["ay1 s-ih-ng","nn"],icon:["ay1 k-aa-n","nn"],iconoclasm:["ay k-aa1 n-ah k-l-ae z-ah-m","nn"],iconoclast:["ay k-aa1 n-ah k-l-ae-s-t","nn"],iconoclastic:["ay k-ah n-ah k-l-ae1 s-t-ih-k","jj"],icy:["ay1 s-iy","jj"],idea:["ay d-iy1 ah","nn"],ideal:["ay d-iy1-l","jj nn"],idealism:["ay d-iy1 l-ih z-ah-m","nn"],idealist:["ay d-iy1 l-ih-s-t","nn"],idealistic:["ay d-iy ah l-ih1 s-t-ih-k","jj"],idealize:["ay-d-iy1-ah-l-ay-z","vb"],idealized:["ay d-iy1 ah l-ay-z-d","vbn jj"],ideally:["ay d-iy1 l-iy","rb"],identical:["ay d-eh1-n t-ih k-ah-l","jj"],identifiable:["ay d-eh1-n t-ah f-ay ah b-ah-l","jj"],identification:["ay d-eh-n t-ah f-ah k-ey1 sh-ah-n","nn"],identified:["ay d-eh1-n t-ah f-ay-d","vbn jj vbd"],identifies:["ay d-eh1-n t-ah f-ay-z","vbz"],identify:["ay d-eh1-n t-ah f-ay","vb vbp"],identity:["ay d-eh1-n t-ah t-iy","nn"],ideological:["ay d-iy ah l-aa1 jh-ih k-ah-l","jj"],ideologically:["ay d-iy ah l-aa1 jh-ih-k l-iy","rb"],ideologist:["ay d-iy aa1 l-ah jh-ah-s-t","nn"],ideologue:["ay1 d-iy ah l-ao-g","nn"],ideology:["ay d-iy aa1 l-ah jh-iy","nn"],idiocy:["ih1 d-iy ah s-iy","nn"],idiom:["ih1 d-iy ah-m","nn"],idiomatic:["ih d-iy ah m-ae1 t-ih-k","jj"],idiosyncratic:["ih d-iy ow s-ih-n k-r-ae1 t-ih-k","jj"],idiot:["ih1 d-iy ah-t","jj nn"],idiotic:["ih d-iy aa1 t-ih-k","jj"],idiotically:["ih d-iy aa1 t-ih-k l-iy","rb"],idle:["ay1 d-ah-l","jj vb"],idleness:["ay1 d-ah-l n-ah-s","nn"],idler:["ay1 d-ah l-er","nn"],idly:["ay1-d l-iy","rb"],idol:["ay1 d-ah-l","nn"],idolize:["ay1 d-ah l-ay-z","vb vbp"],idolized:["ay1 d-ah l-ay-z-d","jj"],idyll:["ay1 d-ah-l","nn"],idyllic:["ay d-ih1 l-ih-k","jj"],if:["ih1-f","in"],iffy:["ih1 f-iy","jj"],igloo:["ih1 g-l-uw","nn"],igneous:["ih1-g n-iy ah-s","jj"],ignite:["ih-g n-ay1-t","vb"],ignition:["ih-g n-ih1 sh-ah-n","nn"],ignoble:["ih-g n-ow1 b-ah-l","jj"],ignominious:["ih-g n-ah m-ih1 n-iy ah-s","jj"],ignoramus:["ih-g n-er ey1 m-ah-s","nn"],ignorance:["ih1-g n-er ah-n-s","nn"],ignorant:["ih1-g n-er ah-n-t","jj"],ignore:["ih-g n-ao1-r","vb vbp"],iguana:["ay g-w-aa1 n-ah","jj"],ilk:["ih1-l-k","nn"],ill:["ih1-l","jj rb"],illegal:["ih l-iy1 g-ah-l","jj"],illegality:["ih l-iy g-ae1 l-ih t-iy","nn"],illegally:["ih l-iy1 g-ah l-iy","rb"],illegitimacy:["ih l-ih jh-ih1 t-ah m-ah s-iy","nn"],illegitimate:["ih l-ih jh-ih1 t-ah m-ih-t","jj"],illicit:["ih l-ih1 s-ah-t","jj"],illicitly:["ih1 l-ih s-ih-t l-iy","rb"],illiquid:["ih l-ih1 k-w-ih-d","jj"],illiquidity:["ih l-ih k-w-ih1 d-ih t-iy","nn"],illiteracy:["ih l-ih1 t-er ah s-iy","nn"],illiterate:["ih l-ih1 t-er ah-t","jj"],illness:["ih1-l n-ah-s","nn"],illogic:["ih l-aa1 jh-ih-k","nn"],illogical:["ih l-aa1 jh-ih k-ah-l","jj"],illuminate:["ih l-uw1 m-ih n-ih-t","vb"],illuminated:["ih l-uw1 m-ah n-ey t-ah-d","vbn jj vbd"],illuminating:["ih l-uw1 m-ah n-ey t-ih-ng","jj vbg"],illumination:["ih l-uw m-ah n-ey1 sh-ah-n","nn"],illumine:["ih l-uw1 m-ah-n","vb"],illusion:["ih l-uw1 zh-ah-n","nn"],illusionary:["ih l-uw1 zh-ah n-eh r-iy","jj"],illusionist:["ih l-uw1 zh-ah n-ah-s-t","nn"],illusory:["ih l-uw1 s-er iy","jj"],illustrate:["ih1 l-ah-s t-r-ey-t","vb vbp"],illustrated:["ih1 l-ah-s t-r-ey t-ah-d","vbn jj vbd"],illustration:["ih l-ah-s t-r-ey1 sh-ah-n","nn"],illustrative:["ih l-ah1-s t-r-ah t-ih-v","jj"],illustrator:["ih1 l-ah-s t-r-ey t-er","nn"],illustrious:["ih l-ah1-s t-r-iy ah-s","jj"],image:["ih1 m-ah-jh","nn vb"],imagery:["ih1 m-ah jh-r-iy","nn"],imaginable:["ih m-ae1 jh-ah n-ah b-ah-l","jj"],imaginary:["ih m-ae1 jh-ah n-eh r-iy","jj nn"],imagination:["ih m-ae jh-ah n-ey1 sh-ah-n","nn"],imaginative:["ih m-ae1 jh-ah n-ah t-ih-v","jj"],imaginatively:["ih m-ae1 jh-ah n-ah t-ih-v l-iy","rb"],imagine:["ih m-ae1 jh-ah-n","vb vbp"],imagined:["ih m-ae1 jh-ah-n-d","vbn vbd jj"],imaging:["ih1 m-ih jh-ih-ng","nn jj"],imbalance:["ih-m b-ae1 l-ah-n-s","nn"],imbibe:["ih-m b-ay1-b","vb"],imbroglio:["ih-m b-r-ow1 l-y-ow","nn"],imbue:["ih-m-b-y-uw1","vb"],imitate:["ih1 m-ah t-ey-t","vb vbp"],imitation:["ih m-ah t-ey1 sh-ah-n","nn"],imitative:["ih1 m-ah t-ey t-ih-v","jj"],imitator:["ih1 m-ih t-ey t-er","nn"],immaculate:["ih m-ae1 k-y-uw l-ih-t-s","jj"],immanent:["ih1 m-ah n-ah-n-t","jj"],immaterial:["ih m-ah t-ih1 r-iy ah-l","jj"],immature:["ih m-ah t-y-uh1-r","jj"],immaturity:["ih m-ah ch-uh1 r-ih t-iy","nn"],immeasurably:["ih m-eh1 zh-er ae b-l-iy","rb"],immediacy:["ih m-iy1 d-iy ah s-iy","nn"],immediate:["ih m-iy1 d-iy ah-t","jj"],immediately:["ih m-iy1 d-iy ah-t l-iy","rb"],immemorial:["ih m-ah m-ao1 r-iy ah-l","jj"],immense:["ih m-eh1-n-s","jj nn"],immensely:["ih m-eh1-n-s l-iy","rb"],immerse:["ih-m-er1-s","vb"],immersion:["ih m-er1 zh-ah-n","nn"],immigrant:["ih1 m-ah g-r-ah-n-t","nn jj"],immigrate:["ih1-m-ah-g-r-ey-t","vb"],immigration:["ih m-ah g-r-ey1 sh-ah-n","nn"],imminent:["ih1 m-ah n-ah-n-t","jj"],imminently:["ih1 m-ah n-ah-n-t l-iy","rb"],immobility:["ih m-ow b-ih1 l-ih t-iy","nn"],immobilize:["ih-m-ow1-b-ah-l-ay-z","vb"],immoral:["ih m-ao1 r-ah-l","jj"],immorality:["ih m-er ae1 l-ih t-iy","nn"],immortal:["ih m-ao1-r t-ah-l","jj"],immortality:["ih m-ao-r t-ae1 l-ih t-iy","nn"],immortalize:["ih-m-ao1-r-t-ah-l-ay-z","vb"],immovable:["ih m-uw1 v-ah b-ah-l","jj"],immune:["ih m-y-uw1-n","jj nn"],immunity:["ih m-y-uw1 n-ah t-iy","nn"],immunization:["ih m-y-uw n-ah z-ey1 sh-ah-n","nn"],immunize:["ih1-m-y-uw-n-ay-z","vb"],immunological:["ih m-y-uw n-ah l-aa1 jh-ih k-ah-l","jj"],immunologist:["ih m-y-uw n-aa1 l-ah jh-ih-s-t","nn"],immunology:["ih m-y-uw n-aa1 l-ah jh-iy","nn"],immutable:["ih m-y-uw1 t-ah b-ah-l","jj"],impact:["ih-m p-ae1-k-t","nn vb"],impacted:["ih1-m p-ae-k t-ih-d","vbn jj"],impair:["ih-m p-eh1-r","vb nn"],impaired:["ih-m p-eh1-r-d","vbn jj"],impairment:["ih-m p-eh1-r m-ah-n-t","nn"],impale:["ih-m-p-ey1-l","vb"],impart:["ih-m p-aa1-r-t","vb"],impartial:["ih-m p-aa1-r sh-ah-l","jj"],impartiality:["ih-m p-aa-r sh-iy ae1 l-ih t-iy","nn"],impassable:["ih-m p-ae1 s-ah b-ah-l","jj"],impasse:["ih-m p-ae1-s","nn"],impassioned:["ih-m p-ae1 sh-ah-n-d","jj"],impassive:["ih-m p-ae1 s-ih-v","jj"],impassively:["ih-m p-ae1 s-ih-v l-iy","rb"],impatience:["ih-m p-ey1 sh-ah-n-s","nn"],impatiens:["ih-m p-ey1 sh-ah-n-z","nn"],impatient:["ih-m p-ey1 sh-ah-n-t","jj nn"],impatiently:["ih-m p-ey1 sh-ah-n-t l-iy","rb"],impeach:["ih-m-p-iy1-ch","vb"],impeachment:["ih-m p-iy1-ch m-ah-n-t","nn"],impeccable:["ih-m p-eh1 k-ah b-ah-l","jj"],impeccably:["ih-m p-eh1 k-ah b-l-iy","rb"],impede:["ih-m p-iy1-d","vb vbp"],impediment:["ih-m p-eh1 d-ah m-ah-n-t","nn"],impel:["ih-m-p-eh1-l","vb"],impend:["ih-m-p-eh1-n-d","vb"],impending:["ih-m p-eh1-n d-ih-ng","jj vbg"],impenetrable:["ih-m p-eh1 n-ah t-r-ah b-ah-l","jj"],imperative:["ih-m p-eh1 r-ah t-ih-v","jj nn"],imperceptible:["ih-m p-er s-eh1-p t-ih b-ah-l","jj"],imperceptibly:["ih-m p-er s-eh1-p t-ih b-l-iy","rb"],imperfect:["ih-m p-er1 f-ih-k-t","jj"],imperfection:["ih-m p-er f-eh1-k sh-ah-n","nn"],imperfectly:["ih-m p-er1 f-ih-k-t l-iy","rb"],imperial:["ih-m p-ih1 r-iy ah-l","jj"],imperialism:["ih-m p-ih1 r-iy ah l-ih z-ah-m","nn"],imperialist:["ih-m p-ih1 r-iy ah l-ih-s-t","nn"],imperil:["ih-m p-eh1 r-ah-l","vb"],imperiled:["ih-m p-eh1 r-ah-l-d","vbn jj"],imperious:["ih-m p-ih1 r-iy ah-s","jj"],impermissible:["ih-m p-er m-ih1 s-ih b-ah-l","jj"],impersonal:["ih-m p-er1 s-ah n-ah-l","jj"],impersonation:["ih-m p-er s-ah n-ey1 sh-ah-n","nn"],impersonator:["ih-m p-er1 s-ah n-ey t-er","nn"],impertinent:["ih-m p-er1 t-ah n-ah-n-t","jj"],impervious:["ih-m p-er1 v-iy ah-s","jj"],impetuous:["ih-m p-eh1 ch-w-ah-s","jj"],impetus:["ih1-m p-ah t-ah-s","nn"],impinge:["ih-m p-ih1-n-jh","vb vbp"],implacable:["ih-m p-l-ae1 k-ah b-ah-l","jj"],implant:["ih-m p-l-ae1-n-t","nn vb"],implantable:["ih1-m p-l-ae-n t-ah b-ah-l","jj"],implantation:["ih-m p-l-ae-n t-ey1 sh-ah-n","nn"],implausible:["ih-m p-l-ao1 z-ah b-ah-l","jj"],implausibly:["ih-m p-l-ao1 z-ah b-l-iy","rb"],implement:["ih1-m p-l-ah m-ah-n-t","vb vbp"],implementation:["ih-m p-l-ah m-eh-n t-ey1 sh-ah-n","nn"],implicate:["ih1-m p-l-ih k-ey-t","vb"],implication:["ih-m p-l-ah k-ey1 sh-ah-n","nn"],implicit:["ih-m p-l-ih1 s-ah-t","jj"],implicitly:["ih-m p-l-ih1 s-ah-t l-iy","rb"],implied:["ih-m p-l-ay1-d","vbn jj vbd"],implies:["ih-m p-l-ay1-z","vbz"],implore:["ih-m p-l-ao1-r","vb"],imply:["ih-m p-l-ay1","vb vbp"],impolite:["ih-m p-ah l-ay-t","jj"],impolitic:["ih-m p-ao1 l-ih1 t-ih-k","jj"],imponderable:["ih-m p-aa1-n d-er ah b-ah-l","jj nn"],import:["ih-m p-ao1-r-t","nn vb vbp"],importance:["ih-m p-ao1-r t-ah-n-s","nn"],important:["ih-m p-ao1-r t-ah-n-t","jj"],importantly:["ih-m p-ao1-r t-ah-n-t l-iy","rb"],importation:["ih-m p-ao-r t-ey1 sh-ah-n","nn"],imported:["ih-m p-ao1-r t-ih-d","vbn vbd jj"],importer:["ih-m p-ao1-r t-er","nn"],impose:["ih-m p-ow1-z","vb vbp"],imposed:["ih-m p-ow1-z-d","vbn vbd jj"],imposing:["ih-m p-ow1 z-ih-ng","vbg jj"],imposition:["ih-m p-ah z-ih1 sh-ah-n","nn"],impossibility:["ih-m p-ao s-ih b-ih1 l-ih t-iy","nn"],impossible:["ih-m p-aa1 s-ah b-ah-l","jj"],impossibly:["ih-m p-aa1 s-ah b-l-iy","rb"],impotence:["ih1-m p-ah t-ah-n-s","nn"],impotent:["ih1-m p-ah t-ah-n-t","jj"],impound:["ih-m p-aw1-n-d","vb"],impoundment:["ih-m p-aw1-n-d m-ah-n-t","nn"],impoverish:["ih-m-p-aa1-v-r-ih-sh","vb"],impoverished:["ih-m p-aa1 v-r-ih-sh-t","jj vbn"],impoverishment:["ih-m p-aa1 v-r-ih-sh m-ah-n-t","nn"],impracticable:["ih-m p-r-ae1-k t-ih k-ah b-ah-l","jj"],impractical:["ih-m p-r-ae1-k t-ah k-ah-l","jj"],imprecise:["ih1-m p-r-ah s-ay-s","jj"],impregnable:["ih-m p-r-eh1-g n-ah b-ah-l","jj"],impresario:["ih-m p-r-ih s-aa1 r-iy ow","nn"],impress:["ih-m p-r-eh1-s","vb nn vbp"],impressed:["ih-m p-r-eh1-s-t","vbn jj vbd"],impression:["ih-m p-r-eh1 sh-ah-n","nn"],impressionism:["ih-m p-r-eh1 sh-ah-n ih z-ah-m","nn"],impressionist:["ih-m p-r-eh1 sh-ah-n ah-s-t","nn jj"],impressionistic:["ih-m p-r-eh sh-ah n-ih1 s-t-ih-k","jj"],impressive:["ih-m p-r-eh1 s-ih-v","jj"],impressively:["ih-m p-r-eh1 s-ih-v l-iy","rb"],imprimatur:["ih-m p-r-ih m-aa1 t-er","nn"],imprint:["ih-m p-r-ih1-n-t","vb nn"],imprison:["ih-m p-r-ih1 z-ah-n","vb"],imprisoned:["ih-m p-r-ih1 z-ah-n-d","vbn vbd jj"],imprisonment:["ih-m p-r-ih1 z-ah-n m-ah-n-t","nn"],improbable:["ih-m p-r-aa1 b-ah b-ah-l","jj"],improbably:["ih-m p-r-aa1 b-ah b-l-iy","rb"],impromptu:["ih-m p-r-aa1-m-p t-uw","jj nn"],improper:["ih-m p-r-aa1 p-er","jj"],improperly:["ih-m p-r-aa1 p-er l-iy","rb"],impropriety:["ih-m p-r-ah p-r-ay1 ah t-iy","nn"],improve:["ih-m p-r-uw1-v","vb vbp"],improved:["ih-m p-r-uw1-v-d","vbn jj vbd"],improvement:["ih-m p-r-uw1-v m-ah-n-t","nn"],improvisation:["ih-m p-r-aa v-ih z-ey1 sh-ah-n","nn"],improvisational:["ih-m p-r-aa v-ih z-ey1 sh-ah n-ah-l","jj"],improvise:["ih1-m p-r-ah v-ay-z","vb"],improvising:["ih1-m p-r-ah v-ay z-ih-ng","nn"],imprudence:["ih-m p-r-uw1 d-ah-n-s","nn"],imprudent:["ih-m p-r-uw1 d-ah-n-t","jj"],imprudently:["ih-m p-r-uw1 d-ah-n-t l-iy","rb"],impugn:["ih-m p-y-uw1-n","vb"],impulse:["ih1-m p-ah-l-s","nn jj"],impulsive:["ih-m p-ah1-l s-ih-v","jj"],impulsively:["ih-m p-ah1-l s-ih-v l-iy","rb"],impunity:["ih-m p-y-uw1 n-ih t-iy","nn"],impure:["ih-m p-y-uh1-r","jj"],impurity:["ih-m p-y-uh1 r-ah t-iy","nn"],imputation:["ih-m p-y-ah t-ey1 sh-ah-n","nn"],impute:["ih-m-p-y-uw1-t","vb"],imputed:["ih-m p-y-uw1 t-ih-d","vbn jj"],in:["ih-n","in nn rb rp rbr"],inability:["ih-n ah b-ih1 l-ih t-iy","nn"],inaccessible:["ih-n ah-k s-eh1 s-ah b-ah-l","jj"],inaccuracy:["ih-n ae1 k-y-er ah s-iy","nn"],inaccurate:["ih-n ae1 k-y-er ah-t","jj"],inaccurately:["ih-n ae1 k-y-er ah-t l-iy","rb"],inaction:["ih-n ae1-k sh-ah-n","nn"],inactivate:["ih-n-ae1-k-t-ih-v-ey-t","vb"],inactivation:["ih-n ae-k t-ih v-ey1 sh-ah-n","nn"],inactive:["ih-n ae1-k t-ih-v","jj"],inactivity:["ih-n ae-k t-ih1 v-ih t-iy","nn"],inadequacy:["ih-n ae1 d-ih k-w-ah s-iy","nn"],inadequate:["ih-n ae1 d-ah k-w-ah-t","jj"],inadequately:["ih-n ae1 d-ah k-w-ah-t l-iy","rb"],inadvertent:["ih-n ah-d v-er1 t-ah-n-t","jj"],inadvertently:["ih-n ah-d v-er1 t-ah-n-t l-iy","rb"],inadvisable:["ih-n ah-d v-ay1 z-ah b-ah-l","jj"],inalienable:["ih-n ey1 l-y-ah n-ah b-ah-l","jj"],inane:["ih-n ey1-n","jj"],inanimate:["ih-n ae1 n-ah m-ah-t","jj"],inapplicable:["ih-n ae1 p-l-ih k-ah b-ah-l","jj"],inappropriate:["ih-n ah p-r-ow1 p-r-iy ih-t","jj"],inappropriately:["ih-n ah p-r-aa1 p-r-iy ah-t l-iy","rb"],inarticulate:["ih-n aa-r t-ih1 k-y-ah l-ah-t","jj"],inasmuch:["ih-n ae1-s m-ah-k","rb"],inattention:["ih-n ah t-eh1-n ch-ah-n","nn"],inattentive:["ih-n ah t-eh1-n t-ih-v","jj"],inaudible:["ih-n ao1 d-ah b-ah-l","jj"],inaugural:["ih n-ao1 g-er ah-l","jj nn"],inaugurate:["ih-n-ao1-g-y-ah-r-ey-t","vb"],inauguration:["ih n-ao g-y-er ey1 sh-ah-n","nn"],inauspicious:["ih-n aw s-p-ih1 sh-ih-s","jj"],inboard:["ih1-n b-ao-r-d","jj rb"],inborn:["ih1-n b-ao-r-n","jj"],inbound:["ih-n b-aw1-n-d","jj"],incalculable:["ih-n k-ae1-l k-y-ah l-ah b-ah-l","jj"],incandescent:["ih-n k-ah-n d-eh1 s-ah-n-t","jj"],incantation:["ih-n k-ae1-n t-ey1 sh-ah-n","nn"],incapable:["ih-n k-ey1 p-ah b-ah-l","jj nn"],incapacitate:["ih-n-k-ah-p-ae1-s-ih-t-ey-t","vb"],incapacity:["ih-n k-ah p-ae1 s-ah t-iy","nn"],incarcerate:["ih-n k-aa1-r s-er ey-t","vb"],incarceration:["ih-n k-aa-r s-er ey1 sh-ah-n","nn"],incarnate:["ih-n k-aa1-r n-ah-t","jj vb"],incarnation:["ih-n k-aa1-r n-ey1 sh-ah-n","nn"],incendiary:["ih-n s-eh1-n d-iy eh r-iy","jj"],incense:["ih-n s-eh1-n-s","nn vb"],incensed:["ih1-n s-eh-n-s-t","vbn jj"],incentive:["ih-n s-eh1-n t-ih-v","nn jj"],inception:["ih-n s-eh1-p sh-ah-n","nn"],incessant:["ih-n s-eh1 s-ah-n-t","jj"],incessantly:["ih-n s-eh1 s-ah-n-t l-iy","rb"],incest:["ih1-n s-eh-s-t","nn"],incestuous:["ih-n s-eh1 s-ch-w-ah-s","jj"],inch:["ih1-n-ch","nn rb vb"],inches:["ih1-n ch-ah-z","nn"],incidence:["ih1-n s-ah d-ah-n-s","nn"],incident:["ih1-n s-ah d-ah-n-t","nn jj"],incidental:["ih-n s-ih d-eh1-n t-ah-l","jj"],incidentally:["ih-n s-ih d-eh1-n t-ah l-iy","rb"],incineration:["ih-n s-ih1 n-er ey sh-ah-n","nn"],incinerator:["ih-n s-ih1 n-er ey t-er","nn"],incipient:["ih-n s-ih1 p-iy ah-n-t","jj"],incisive:["ih-n s-ay1 s-ih-v","jj"],incite:["ih-n s-ay1-t","vb vbp"],inclement:["ih-n k-l-eh1 m-ah-n-t","jj"],inclination:["ih-n k-l-ah n-ey1 sh-ah-n","nn"],incline:["ih-n k-l-ay1-n","nn vb"],inclined:["ih-n k-l-ay1-n-d","vbn jj"],include:["ih-n k-l-uw1-d","vbp vbn vb"],included:["ih-n k-l-uw1 d-ah-d","vbd vbn jj"],inclusion:["ih-n k-l-uw1 zh-ah-n","nn"],inclusive:["ih-n k-l-uw1 s-ih-v","jj"],incoherence:["ih-n k-ow hh-ih1 r-ah-n-s","nn"],incoherent:["ih-n k-ow hh-ih1 r-ah-n-t","jj"],incoherently:["ih-n k-ow hh-ih1 r-ah-n-t l-iy","rb"],income:["ih1-n k-ah-m","nn"],incoming:["ih1-n k-ah m-ih-ng","jj"],incomparable:["ih-n k-aa1-m p-er ah b-ah-l","jj"],incomparably:["ih-n k-aa1-m p-er ah b-l-iy","rb"],incompatibility:["ih-n k-aa-m p-ah t-ih b-ih1 l-ih t-iy","nn"],incompatible:["ih-n k-ah-m p-ae1 t-ah b-ah-l","jj"],incompetence:["ih-n k-aa1-m p-ah t-ah-n-s","nn"],incompetent:["ih-n k-aa1-m p-ah t-ah-n-t","jj"],incomplete:["ih-n k-ah-m p-l-iy1-t","jj"],incomprehensible:["ih-ng k-aa-m p-r-ah hh-eh1-n s-ih b-ah-l","jj nn"],inconceivable:["ih-n k-ah-n s-iy1 v-ah b-ah-l","jj"],inconclusive:["ih-n k-ah-n k-l-uw1 s-ih-v","jj"],inconclusively:["ih-ng k-aa1-n k-l-uw s-ih-v l-iy","rb"],incongruity:["ih-ng k-ao-ng r-uw1 ih t-iy","nn"],incongruous:["ih-ng k-ao1-ng r-uw ah-s","jj"],inconsequential:["ih-ng k-aa-n s-ah k-w-eh1-n ch-ah-l","jj"],inconsistency:["ih-n k-ah-n s-ih1 s-t-ah-n s-iy","nn"],inconsistent:["ih-n k-ah-n s-ih1 s-t-ah-n-t","jj"],inconspicuous:["ih-ng k-aa1-n s-p-ih k-w-ah-s","jj"],incontrovertible:["ih-ng k-aa-n t-r-ow v-er1 t-ih b-ah-l","jj"],inconvenience:["ih-n k-ah-n v-iy1 n-y-ah-n-s","nn"],inconvenient:["ih-n k-ah-n v-iy1 n-y-ah-n-t","jj"],incorporate:["ih-n k-ao1-r p-er ey-t","vb vbp jj"],incorporated:["ih-n k-ao1-r p-er ey t-ah-d","vbn jj vbd"],incorporating:["ih-n k-ao1-r p-er ey t-ih-ng","jj vbg"],incorporation:["ih-n k-ao-r p-er ey1 sh-ah-n","nn"],incorrect:["ih-n k-er eh1-k-t","jj"],incorrectly:["ih-n k-er eh1-k-t l-iy","rb"],incorrigible:["ih-n k-aa1 r-ah jh-ah b-ah-l","jj"],increase:["ih-n k-r-iy1-s","nn vb vbp"],increased:["ih-n k-r-iy1-s-t","vbn jj vb vbd"],increasing:["ih-n k-r-iy1 s-ih-ng","vbg jj nn"],increasingly:["ih-n k-r-iy1 s-ih-ng l-iy","rb"],incredible:["ih-n k-r-eh1 d-ah b-ah-l","jj"],incredibly:["ih-n k-r-eh1 d-ah b-l-iy","rb"],incredulity:["ih-n k-r-ah d-uw1 l-ih t-iy","nn"],increment:["ih1-n k-r-ah m-ah-n-t","nn"],incremental:["ih-n k-r-ah m-eh1-n t-ah-l","jj"],incriminate:["ih-n-k-r-ih1-m-ah-n-ey-t","vb"],incriminating:["ih-n k-r-ih1 m-ah n-ey t-ih-ng","vbg jj"],incubate:["ih1-n-k-y-ah-b-ey-t","vb"],incubation:["ih-ng k-y-uw b-ey1 sh-ah-n","nn"],incumbency:["ih-n k-ah1-m b-ah-n s-iy","nn"],incumbent:["ih-n k-ah1-m b-ah-n-t","jj nn"],incur:["ih-n k-er1","vb vbp"],incurable:["ih-n k-y-uh1 r-ah b-ah-l","jj"],incursion:["ih-n k-er1 zh-ah-n","nn"],indebted:["ih-n d-eh1 t-ah-d","jj"],indebtedness:["ih-n d-eh1 t-ih-d n-ih-s","nn"],indecency:["ih-n d-iy1 s-ah-n s-iy","nn"],indecent:["ih-n d-iy1 s-ah-n-t","jj"],indecision:["ih-n d-ih s-ih1 zh-ah-n","nn"],indecisive:["ih-n d-ih s-ay1 s-ih-v","jj"],indecisiveness:["ih-n d-eh1 s-ih s-ih-v n-ah-s","nn"],indeed:["ih-n d-iy1-d","rb uh"],indefatigable:["ih-n d-ih f-ae1 t-ih g-ah b-ah-l","jj"],indefensible:["ih-n d-ih f-eh1-n s-ah b-ah-l","jj"],indefinable:["ih-n d-ih f-ay1 n-ah b-ah-l","jj"],indefinite:["ih-n d-eh1 f-ah n-ah-t","jj nn"],indefinitely:["ih-n d-eh1 f-ah n-ah-t l-iy","rb"],indelible:["ih-n d-eh1 l-ih b-ah-l","jj"],indelibly:["ih-n d-eh1 l-ah b-l-iy","rb"],indelicate:["ih-n d-eh1 l-ih k-ah-t","jj"],indemnification:["ih-n d-eh-m n-ah f-ih k-ey1 sh-ah-n","nn"],indemnify:["ih-n d-eh1-m n-ah f-ay","vb"],indemnity:["ih-n d-eh1-m n-ah t-iy","nn"],indenture:["ih-n d-eh1-n ch-er","nn vb"],independence:["ih-n d-ih p-eh1-n d-ah-n-s","nn"],independent:["ih-n d-ih p-eh1-n d-ah-n-t","jj nn"],independently:["ih-n d-ih p-eh1-n d-ah-n-t l-iy","rb"],indestructibility:["ih-n d-ah-s-t r-ah-k t-ih b-ih1 l-ih t-iy","nn"],indestructible:["ih-n d-ah-s-t r-ah1-k t-ih b-ah-l","jj"],indeterminate:["ih-n d-ih t-er1 m-ih n-ih-t","jj"],index:["ih1-n d-eh-k-s","nn vb"],indexation:["ih1-n d-eh-k s-ey1 sh-ah-n","nn"],indexed:["ih1-n d-eh-k-s-t","vbn jj"],indexer:["ih1-n d-eh-k s-er","nn"],indicate:["ih1-n d-ah k-ey-t","vb vbp"],indicated:["ih1-n d-ah k-ey t-ah-d","vbd jj vbn"],indication:["ih-n d-ah k-ey1 sh-ah-n","nn"],indicative:["ih-n d-ih1 k-ah t-ih-v","jj"],indicator:["ih1-n d-ah k-ey t-er","nn"],indict:["ih-n d-ay1-t","vb"],indictment:["ih-n d-ay1-t m-ah-n-t","nn"],indifference:["ih-n d-ih1 f-er ah-n-s","nn"],indifferent:["ih-n d-ih1 f-r-ah-n-t","jj"],indigenous:["ih-n d-ih1 jh-ah n-ah-s","jj"],indigent:["ih1-n d-ih jh-ah-n-t","jj"],indigestion:["ih-n d-ay jh-eh1-s ch-ah-n","nn"],indignant:["ih-n d-ih1-g n-ah-n-t","jj"],indignantly:["ih-n d-ih1-g n-ah-n-t l-iy","rb"],indignation:["ih-n d-ih-g n-ey1 sh-ah-n","nn"],indignity:["ih-n d-ih1-g n-ah t-iy","nn"],indirect:["ih-n d-er eh1-k-t","jj"],indirectly:["ih-n d-er eh1-k-t l-iy","rb"],indiscreet:["ih-n d-ih s-k-r-iy1-t","jj"],indiscretion:["ih-n d-ih s-k-r-eh1 sh-ah-n","nn"],indiscriminate:["ih-n d-ih s-k-r-ih1 m-ah n-ah-t","jj"],indispensable:["ih-n d-ih s-p-eh1-n s-ah b-ah-l","jj nn"],indispensible:["ih-n d-ih s-p-eh1-n s-ih b-ah-l","jj"],indisputable:["ih-n d-ih-s p-y-uw1 t-ah b-ah-l","jj"],indisputably:["ih-n d-ih1 s-p-y-uw t-ae b-l-iy","rb"],indistinct:["ih-n d-ih s-t-ih1-ng-k-t","jj"],indistinguishable:["ih-n d-ih s-t-ih1-ng g-w-ih sh-ah b-ah-l","jj"],indium:["ih1-n d-iy ah-m","nn"],individual:["ih-n d-ah v-ih1 jh-ah w-ah-l","jj nn"],individualism:["ih-n d-ih v-ih d-uw1 ah l-ih z-ah-m","nn"],individualist:["ih-n d-ih v-ih d-uw1 ah l-ih-s-t","nn"],individualistic:["ih-n d-ih v-ih jh-uw ah l-ih1 s-t-ih-k","jj"],individuality:["ih-n d-ih v-ih jh-uw ae1 l-ih t-iy","nn"],individualize:["ih-n-d-ih-v-ih1-jh-uw-ah-l-ay-z","vb"],individualized:["ih-n d-ih v-ih1 jh-uw ah l-ay-z-d","jj vbn"],individually:["ih-n d-ih v-ih1 jh-uw ah l-iy","rb"],indivisible:["ih-n d-ih v-ih1 s-ih b-ah-l","jj"],indoctrinate:["ih-n d-aa1-k t-r-ah n-ey-t","vb"],indoctrination:["ih-n d-aa-k t-r-ah n-ey1 sh-ah-n","nn"],indolent:["ih1-n d-ah l-ah-n-t","jj"],indomitable:["ih-n d-aa1 m-ah t-ah b-ah-l","jj"],indoor:["ih1-n d-ao-r","jj"],indoors:["ih1-n d-ao-r-z","nn rb"],induce:["ih-n d-uw1-s","vb"],inducement:["ih-n d-uw1-s m-ah-n-t","nn"],induct:["ih-n-d-ah1-k-t","vb"],inductee:["ih-n d-ah1-k t-iy1","nn"],induction:["ih-n d-ah1-k sh-ah-n","nn"],indulge:["ih-n d-ah1-l-jh","vb vbp"],indulgence:["ih-n d-ah1-l jh-ah-n-s","nn"],indulgent:["ih-n d-ah1-l jh-ah-n-t","jj"],industrial:["ih-n d-ah1-s t-r-iy ah-l","jj"],industrialist:["ih-n d-ah1-s t-r-iy ah l-ih-s-t","nn"],industrialization:["ih-n d-ah-s t-r-iy ah l-ih z-ey1 sh-ah-n","nn"],industrialize:["ih-n d-ah1-s t-r-iy ah l-ay-z","vb"],industrialized:["ih-n d-ah1-s t-r-iy ah l-ay-z-d","vbn jj"],industrially:["ih-n d-ah1-s t-r-iy ah l-iy","rb"],industrious:["ih-n d-ah1-s t-r-iy ah-s","jj"],industry:["ih1-n d-ah-s t-r-iy","nn"],industrywide:["ih1-n d-ah-s t-r-iy w-ay-d","jj rb"],inedible:["ih-n eh1 d-ah b-ah-l","jj"],ineffable:["ih-n eh1 f-ah b-ah-l","jj"],ineffective:["ih-n ih f-eh1-k t-ih-v","jj"],ineffectiveness:["ih-n ah f-eh1-k t-ih-v n-ah-s","nn"],ineffectual:["ih-n ah f-eh1-k ch-uw ah-l","jj"],inefficiency:["ih-n ih f-ih1 sh-ah-n s-iy","nn"],inefficient:["ih-n ih f-ih1 sh-ah-n-t","jj"],ineligible:["ih-n eh1 l-ih jh-ah b-ah-l","jj"],inept:["ih-n eh1-p-t","jj"],ineptitude:["ih-n eh1-p t-ih t-uw-d","nn"],ineptly:["ih-n eh1-p-t l-iy","rb"],inequality:["ih-n ih k-w-aa1 l-ah t-iy","nn"],inequitable:["ih-n eh1 k-w-ah t-ah b-ah-l","jj"],inequity:["ih-n eh1 k-w-ah t-iy","nn"],inert:["ih n-er1-t","jj"],inertia:["ih n-er1 sh-ah","nn"],inertial:["ih n-er1 sh-ah-l","jj"],inescapable:["ih-n ih-s k-ey1 p-ah b-ah-l","jj"],inevitability:["ih-n eh v-ih t-ah b-ih1 l-ih t-iy","nn"],inevitable:["ih-n eh1 v-ah t-ah b-ah-l","jj"],inevitably:["ih-n eh1 v-ah t-ah b-l-iy","rb"],inexact:["ih-n ih-g z-ae1-k-t","jj"],inexcusable:["ih-n ih-k s-k-y-uw1 z-ah b-ah-l","jj"],inexhaustible:["ih-n ih-g z-ao1 s-t-ah b-ah-l","jj"],inexorable:["ih-n eh1-k s-er ah b-ah-l","jj"],inexorably:["ih-n eh1-k s-er ah b-l-iy","rb"],inexpensive:["ih-n ih-k s-p-eh1-n s-ih-v","jj"],inexperience:["ih-n ih-k s-p-ih1 r-iy ah-n-s","nn"],inexperienced:["ih-n ih-k s-p-ih1 r-iy ah-n-s-t","jj"],inexplicable:["ih-n ah-k s-p-l-ih1 s-ah b-ah-l","jj"],inexplicably:["ih-n ih-k s-p-l-ih1 k-ah b-l-iy","rb"],inextricably:["ih-n eh1-k s-t-r-ih k-ah b-l-iy","rb"],infallibility:["ih-n f-ae l-ih b-ih1 l-ih t-iy","nn"],infallible:["ih-n f-ae1 l-ah b-ah-l","jj nn"],infamous:["ih1-n f-ah m-ah-s","jj"],infamy:["ih1-n f-ah m-iy","nn"],infancy:["ih1-n f-ah-n s-iy","nn"],infant:["ih1-n f-ah-n-t","nn jj"],infantile:["ih1-n f-ah-n t-ih-l","jj"],infantry:["ih1-n f-ah-n t-r-iy","nn"],infantryman:["ih1-n f-ae-n t-r-iy m-ah-n","nn"],infarction:["ih-n f-aa1-r-k sh-ah-n","nn"],infatuation:["ih-n f-ae ch-uw ey1 sh-ah-n","nn"],infect:["ih-n f-eh1-k-t","vb"],infected:["ih-n f-eh1-k t-ah-d","vbn vbd jj"],infection:["ih-n f-eh1-k sh-ah-n","nn"],infectious:["ih-n f-eh1-k sh-ah-s","jj"],infer:["ih-n f-er1","vb"],inference:["ih1-n f-er ah-n-s","nn"],inferior:["ih-n f-ih1 r-iy er","jj"],inferiority:["ih-n f-ih r-iy ao1 r-ih t-iy","nn"],infernal:["ih-n f-er1 n-ah-l","jj"],inferno:["ih-n f-er1 n-ow","nn"],infertile:["ih-n f-er1 t-ah-l","jj"],infertility:["ih-n f-er t-ih1 l-ih t-iy","nn"],infest:["ih-n f-eh1-s-t","vb"],infestation:["ih-n f-eh1 s-t-ey1 sh-ah-n","nn"],infested:["ih-n f-eh1 s-t-ah-d","vbn jj"],infidel:["ih1-n f-ih d-eh-l","jj"],infidelity:["ih-n f-ih d-eh1 l-ih t-iy","nn"],infield:["ih1-n f-iy-l-d","nn"],infielder:["ih1-n f-iy-l d-er","nn"],infighting:["ih1-n f-ay t-ih-ng","nn"],infiltrate:["ih-n f-ih1-l t-r-ey-t","vb"],infiltration:["ih-n f-ih-l t-r-ey1 sh-ah-n","nn"],infinite:["ih1-n f-ah n-ah-t","jj nn"],infinitely:["ih1-n f-ah n-ah-t l-iy","rb"],infinitesimal:["ih-n f-ih n-ih t-eh1 s-ih m-ah-l","jj"],infinity:["ih-n f-ih1 n-ah t-iy","nn"],infirm:["ih-n f-er1-m","jj"],infirmary:["ih-n f-er1 m-er iy","nn"],inflame:["ih-n f-l-ey1-m","vb"],inflamed:["ih-n f-l-ey1-m-d","jj vbd"],inflammation:["ih-n f-l-ah m-ey1 sh-ah-n","nn"],inflammatory:["ih-n f-l-ae1 m-ah t-ao r-iy","jj"],inflate:["ih-n f-l-ey1-t","vb"],inflated:["ih-n f-l-ey1 t-ah-d","jj vbd vbn"],inflation:["ih-n f-l-ey1 sh-ah-n","nn"],inflationary:["ih-n f-l-ey1 sh-ah-n eh r-iy","jj"],inflect:["ih-n f-l-eh1-k-t","vb"],inflected:["ih-n f-l-eh1-k t-ah-d","vbn jj"],inflection:["ih-n f-l-eh1-k sh-ah-n","nn"],inflexible:["ih-n f-l-eh1-k s-ah b-ah-l","jj"],inflict:["ih-n f-l-ih1-k-t","vb"],infliction:["ih-n f-l-ih1-k sh-ah-n","nn"],inflight:["ih1-n f-l-ay-t","jj"],inflow:["ih1-n f-l-ow","nn"],influence:["ih1-n f-l-uw ah-n-s","nn vb vbp"],influential:["ih-n f-l-uw eh1-n ch-ah-l","jj"],influenza:["ih-n f-l-uw eh1-n z-ah","nn"],influx:["ih1-n f-l-ah-k-s","nn"],inform:["ih-n f-ao1-r-m","vb vbp"],informal:["ih-n f-ao1-r m-ah-l","jj"],informality:["ih-n f-er m-ae1 l-ih t-iy","nn"],informally:["ih-n f-ao1-r m-ah l-iy","rb"],informant:["ih-n f-ao1-r m-ah-n-t","nn"],information:["ih-n f-er m-ey1 sh-ah-n","nn"],informational:["ih-n f-er m-ey1 sh-ah n-ah-l","jj"],informative:["ih-n f-ao1-r m-ah t-ih-v","jj"],informed:["ih-n f-ao1-r-m-d","vbn vbd jj"],informer:["ih-n f-ao1-r m-er","jj"],infraction:["ih-n f-r-ae1-k sh-ah-n","nn"],infrared:["ih-n f-r-er eh1-d","jj nn"],infrastructural:["ih-n f-r-ah s-t-r-ah1-k ch-er ah-l","jj"],infrastructure:["ih-n f-r-ah s-t-r-ah1-k ch-er","nn"],infrequent:["ih-n f-r-iy1 k-w-ah-n-t","jj"],infrequently:["ih-n f-r-iy1 k-w-ah-n-t l-iy","rb"],infringe:["ih-n f-r-ih1-n-jh","vb vbp"],infringement:["ih-n f-r-ih1-n-jh m-ah-n-t","nn"],infuriate:["ih-n f-y-uh1 r-iy ey-t","vb"],infuriating:["ih-n f-y-uh1 r-iy ey t-ih-ng","jj vbg"],infuse:["ih-n f-y-uw1-z","vb"],infusion:["ih-n f-y-uw1 zh-ah-n","nn"],ingenious:["ih-n jh-iy1 n-y-ah-s","jj"],ingeniously:["ih-n jh-iy1 n-y-ah-s l-iy","rb"],ingenuity:["ih-n jh-ah n-uw1 ah t-iy","nn"],ingest:["ih-n jh-eh1-s-t","vbp vb"],ingestion:["ih-n jh-eh1-s ch-ah-n","nn"],inglorious:["ih-n g-l-ao1 r-iy ah-s","jj"],ingot:["ih1-ng g-ah-t","nn"],ingrained:["ih-n g-r-ey1-n-d","jj"],ingratiate:["ih-ng g-r-ey1 sh-iy ey-t","vb"],ingratiating:["ih-ng g-r-ey1 sh-iy ey t-ih-ng","jj"],ingredient:["ih-n g-r-iy1 d-iy ah-n-t","nn"],inhabit:["ih-n hh-ae1 b-ah-t","vb vbp"],inhabitant:["ih-n hh-ae1 b-ah t-ah-n-t","nn"],inhabitation:["ih-n hh-ae b-ah t-ey1 sh-ah-n","nn"],inhabited:["ih-n hh-ae1 b-ah t-ah-d","vbn vbd jj"],inhalation:["ih-n ah l-ey1 sh-ah-n","nn"],inhale:["ih-n-hh-ey1-l","vb"],inherent:["ih-n hh-ih1 r-ah-n-t","jj"],inherently:["ih-n hh-ih1 r-ah-n-t l-iy","rb"],inherit:["ih-n hh-eh1 r-ah-t","vb vbp"],inheritable:["ih-n hh-eh1 r-ah t-ah b-ah-l","jj"],inheritance:["ih-n hh-eh1 r-ah t-ah-n-s","nn"],inherited:["ih-n hh-eh1 r-ah t-ih-d","vbn vbd jj"],inhibit:["ih-n hh-ih1 b-ah-t","vb vbp"],inhibiting:["ih-n hh-ih1 b-ah t-ih-ng","vbg jj"],inhibition:["ih-n hh-ah b-ih1 sh-ah-n","nn"],inhibitor:["ih-n hh-ih1 b-ah t-er","nn"],inhibitory:["ih-n hh-ih1 b-ah t-ao r-iy","jj"],inhospitable:["ih-n hh-aa1 s-p-ah t-ah b-ah-l","jj"],inhuman:["ih-n hh-y-uw1 m-ah-n","jj"],inhumane:["ih-n hh-y-uw m-ey1-n","jj"],inimical:["ih n-ih1 m-ih k-ah-l","jj"],inimitable:["ih n-ih1 m-ah t-ah b-ah-l","jj"],initial:["ih n-ih1 sh-ah-l","jj nn vb"],initially:["ih n-ih1 sh-ah l-iy","rb"],initiate:["ih n-ih1 sh-iy ey-t","vb nn vbp"],initiation:["ih n-ih sh-iy ey1 sh-ah-n","nn"],initiative:["ih n-ih1 sh-ah t-ih-v","nn"],initiator:["ih n-ih sh-iy1 ey t-er","nn"],inject:["ih-n jh-eh1-k-t","vb vbp"],injection:["ih-n jh-eh1-k sh-ah-n","nn"],injunction:["ih-n jh-ah1-ng-k sh-ah-n","nn"],injunctive:["ih-n jh-ah1-ng-k t-ih-v","jj"],injure:["ih1-n jh-er","vb vbp"],injured:["ih1-n jh-er-d","vbn vbd jj"],injurious:["ih-n jh-uh1 r-iy ah-s","jj"],injury:["ih1-n jh-er iy","nn"],injustice:["ih-n jh-ah1 s-t-ih-s","nn"],ink:["ih1-ng-k","nn"],inkling:["ih1-ng k-l-ih-ng","nn"],inlaid:["ih1-n l-ey-d","vbn"],inland:["ih1-n l-ae-n-d","rb jj"],inlay:["ih1-n l-ey","nn"],inlet:["ih1-n l-eh-t","nn"],inmate:["ih1-n m-ey-t","nn"],inn:["ih1-n","nn"],innards:["ih1 n-er-d-z","nn"],innate:["ih n-ey1-t","jj"],inner:["ih1 n-er","jj"],innermost:["ih1 n-er m-ow-s-t","jj"],inning:["ih1 n-ih-ng","nn"],innocence:["ih1 n-ah s-ah-n-s","nn"],innocent:["ih1 n-ah s-ah-n-t","jj"],innocently:["ih1 n-ah s-ah-n-t l-iy","rb"],innocuous:["ih-n aa1 k-y-uw ah-s","jj"],innovate:["ih1 n-ah v-ey-t","vb"],innovation:["ih n-ah v-ey1 sh-ah-n","nn"],innovative:["ih1 n-ah v-ey t-ih-v","jj"],innovator:["ih1 n-ah v-ey t-er","nn"],innuendo:["ih n-y-uw eh1-n d-ow","nn"],innumerable:["ih n-uw1 m-er ah b-ah-l","jj"],inoculate:["ih-n aa1 k-y-ah l-ey-t","vb"],inoculation:["ih-n aa k-y-ah l-ey1 sh-ah-n","nn"],inoperable:["ih-n aa1 p-er ah b-ah-l","jj"],inoperative:["ih-n aa1 p-er ah t-ih-v","jj"],inopportune:["ih-n aa p-er t-uw1-n","jj"],inordinate:["ih-n ao1-r d-ah n-ih-t","jj"],inordinately:["ih-n ao1-r d-ah n-ah-t l-iy","rb"],inorganic:["ih-n ao-r g-ae1 n-ih-k","jj"],inpatient:["ih1-n p-ey sh-ah-n-t","nn"],input:["ih1-n p-uh-t","nn"],inquest:["ih1-n k-w-eh-s-t","nn"],inquire:["ih-n k-w-ay1-r","vb"],inquiring:["ih-n k-w-ay1 er ih-ng","jj vbg"],inquiry:["ih-n k-w-ay1 r-iy","nn"],inquisitive:["ih-n k-w-ih1 z-ih t-ih-v","jj"],inroad:["ih1-n r-ow-d","nn"],insane:["ih-n s-ey1-n","jj"],insanity:["ih-n s-ae1 n-ah t-iy","nn"],insatiable:["ih-n s-ey1 sh-ah b-ah-l","jj"],inscribe:["ih-n-s-k-r-ay1-b","vb"],inscribed:["ih-n s-k-r-ay1-b-d","vbn vbd jj"],inscription:["ih-n s-k-r-ih1-p sh-ah-n","nn"],inscrutable:["ih-n s-k-r-uw1 t-ah b-ah-l","jj"],insect:["ih1-n s-eh-k-t","nn jj"],insecticide:["ih-n s-eh1-k t-ah s-ay-d","nn"],insecure:["ih1-n s-ah k-y-er","jj"],insecurity:["ih-n s-ih k-y-uh1 r-ih t-iy","nn"],insemination:["ih-n s-eh m-ah n-ey1 sh-ah-n","nn"],insensitive:["ih-n s-eh1-n s-ah t-ih-v","jj"],insensitivity:["ih-n s-eh-n s-ah t-ih1 v-ah t-iy","nn"],inseparable:["ih-n s-eh1 p-er ah b-ah-l","jj"],insert:["ih-n s-er1-t","vb vbp nn"],insertion:["ih-n s-er1 sh-ah-n","nn"],inset:["ih1-n s-eh-t","nn"],inshore:["ih1-n sh-ao1-r","jj rb"],inside:["ih-n s-ay1-d","in jj nn rb"],insider:["ih-n s-ay1 d-er","nn jj"],insidious:["ih-n s-ih1 d-iy ah-s","jj"],insight:["ih1-n s-ay-t","nn"],insightful:["ih1-n s-ay-t f-ah-l","jj"],insignificance:["ih-n s-ih-g n-y-ih1 f-ih k-ah-n-s","nn"],insignificant:["ih-n s-ih-g n-y-ih1 f-ih k-ah-n-t","jj"],insincere:["ih-n s-ih-n s-ih1-r","jj"],insinuate:["ih-n s-ih1 n-y-uw ey-t","vb"],insinuation:["ih-n s-ih n-y-uw ey1 sh-ah-n","nn"],insist:["ih-n s-ih1-s-t","vbp vb"],insistence:["ih-n s-ih1 s-t-ah-n-s","nn"],insistent:["ih-n s-ih1 s-t-ah-n-t","jj"],insistently:["ih-n s-ih1 s-t-ah-n-t l-iy","rb"],insofar:["ih1-n s-ah f-aa-r","rb in"],insolence:["ih1-n s-ah l-ah-n-s","nn"],insolent:["ih1-n s-ah l-ah-n-t","jj"],insoluble:["ih-n s-aa1 l-y-ah b-ah-l","jj nn"],insolvency:["ih-n s-aa1-l v-ah-n s-iy","nn"],insolvent:["ih-n s-aa1-l v-ah-n-t","jj nn"],insomnia:["ih-n s-aa1-m n-iy ah","nn"],inspect:["ih-n s-p-eh1-k-t","vb vbp"],inspection:["ih-n s-p-eh1-k sh-ah-n","nn"],inspector:["ih-n s-p-eh1-k t-er","nn"],inspiration:["ih-n s-p-er ey1 sh-ah-n","nn"],inspirational:["ih-n s-p-er ey1 sh-ah n-ah-l","jj"],inspire:["ih-n s-p-ay1-r","vb vbp"],inspired:["ih-n s-p-ay1 er-d","vbn jj vbd"],inspiring:["ih-n s-p-ay1 r-ih-ng","jj vbg"],instability:["ih-n s-t-ah b-ih1 l-ih t-iy","nn"],install:["ih-n s-t-ao1-l","vb vbp"],installation:["ih-n s-t-ah l-ey1 sh-ah-n","nn"],installed:["ih-n s-t-ao1-l-d","vbn jj vbd"],installer:["ih-n s-t-ao1 l-er","nn"],installment:["ih-n s-t-ao1-l m-ah-n-t","nn jj"],instance:["ih1-n s-t-ah-n-s","nn"],instant:["ih1-n s-t-ah-n-t","nn jj"],instantaneous:["ih-n s-t-ah-n t-ae1 n-iy ah-s","jj"],instantaneously:["ih-n s-t-ah-n t-ae1 n-iy ah-s l-iy","rb"],instantly:["ih1-n s-t-ah-n-t l-iy","rb"],instead:["ih-n s-t-eh1-d","rb"],instigate:["ih1-n s-t-ah g-ey-t","vb"],instigation:["ih-n s-t-ih g-ey1 sh-ah-n","nn"],instigator:["ih1-n s-t-ah g-ey t-er","nn"],instill:["ih-n s-t-ih1-l","vb"],instinct:["ih1-n s-t-ih-ng-k-t","nn"],instinctive:["ih-n s-t-ih1-ng-k t-ih-v","jj"],instinctively:["ih-n s-t-ih1-ng-k t-ih-v l-iy","rb"],institute:["ih1-n s-t-ah t-uw-t","nn vb"],institutes:["ih1-n s-t-ah t-uw-t-s","nn"],institution:["ih-n s-t-ih t-uw1 sh-ah-n","nn"],institutional:["ih-n s-t-ih t-uw1 sh-ah n-ah-l","jj"],institutionalize:["ih-n-s-t-ih-t-uw1-sh-ah-n-ah-l-ay-z","vb"],institutionalized:["ih-n s-t-ih t-uw1 sh-ah n-ah-l ay-z-d","vbn jj"],institutionally:["ih-n s-t-ih t-uw1 sh-ah n-ah-l iy","rb"],instruct:["ih-n s-t-r-ah1-k-t","vb vbp"],instruction:["ih-n s-t-r-ah1-k sh-ah-n","nn"],instructional:["ih-n s-t-r-ah1-k sh-ah n-ah-l","jj"],instructive:["ih-n s-t-r-ah1-k t-ih-v","jj"],instructor:["ih-n s-t-r-ah1-k t-er","nn"],instrument:["ih1-n s-t-r-ah m-ah-n-t","nn"],instrumental:["ih-n-s t-r-ah m-eh1-n t-ah-l","jj nn"],instrumentalist:["ih-n-s t-r-ah m-eh1-n t-ah l-ih-s-t","nn"],instrumentation:["ih-n-s t-r-ah m-eh-n t-ey1 sh-ah-n","nn"],insubordination:["ih-n s-ah b-ao-r d-ah n-ey1 sh-ah-n","nn"],insubstantial:["ih-n s-ah-b s-t-ae1-n ch-ah-l","jj"],insufferable:["ih-n s-ah1 f-er ah b-ah-l","jj"],insufficient:["ih-n s-ah f-ih1 sh-ah-n-t","jj"],insufficiently:["ih-n s-ah f-ih1 sh-ah-n-t l-iy","rb"],insularity:["ih-n s-ah l-eh1 r-ih t-iy","nn"],insulate:["ih1-n s-ah l-ey-t","vb vbp"],insulated:["ih1-n s-ah l-ey t-ah-d","vbn . jj"],insulating:["ih1-n s-ah l-ey t-ih-ng","vbg jj nn"],insulation:["ih-n s-ah l-ey1 sh-ah-n","nn"],insulator:["ih1-n s-ah l-ey t-er","nn"],insulin:["ih1-n s-ah l-ah-n","nn"],insult:["ih-n s-ah1-l-t","nn vb"],insulting:["ih-n s-ah1-l t-ih-ng","jj vbg"],insupportable:["ih-n s-ah p-ao1-r t-ah b-ah-l","jj"],insurance:["ih-n sh-uh1 r-ah-n-s","nn"],insure:["ih-n sh-uh1-r","vb vbp"],insured:["ih-n sh-uh1-r-d","vbn vbd jj nn"],insurer:["ih-n sh-uh1 r-er","nn"],insurgency:["ih-n s-er1 jh-ah-n s-iy","nn"],insurgent:["ih-n s-er1 jh-ah-n-t","jj"],insurmountable:["ih-n s-er m-aw1-n t-ah b-ah-l","jj"],insurrection:["ih-n s-er eh1-k sh-ah-n","nn jj"],intact:["ih-n t-ae1-k-t","jj"],intake:["ih1-n t-ey-k","nn"],intangible:["ih-n t-ae1-n jh-ah b-ah-l","jj nn"],integer:["ih1-n t-ah jh-er","nn"],integral:["ih1-n t-ah g-r-ah-l","nn jj"],integrate:["ih1-n t-ah g-r-ey-t","vb vbp"],integrated:["ih1-n t-ah g-r-ey t-ah-d","vbn jj"],integration:["ih-n t-ah g-r-ey1 sh-ah-n","nn"],integrator:["ih1-n t-ah g-r-ey t-er","nn"],integrity:["ih-n t-eh1 g-r-ah t-iy","nn"],intellect:["ih1-n t-ah l-eh-k-t","nn"],intellectual:["ih-n t-ah l-eh1-k ch-uw ah-l","jj nn"],intellectually:["ih-n t-ah l-eh1-k ch-uw ah l-iy","rb"],intelligence:["ih-n t-eh1 l-ah jh-ah-n-s","nn"],intelligent:["ih-n t-eh1 l-ah jh-ah-n-t","jj"],intelligently:["ih-n t-eh1 l-ih jh-ah-n-t l-iy","rb"],intelligentsia:["ih-n t-eh l-ah jh-eh1-n-t s-iy ah","nn"],intelligible:["ih-n t-eh1 l-ah jh-ah b-ah-l","jj nn"],intend:["ih-n t-eh1-n-d","vbp vb"],intended:["ih-n t-eh1-n d-ah-d","vbn vbd jj"],intense:["ih-n t-eh1-n-s","jj"],intensely:["ih-n t-eh1-n-s l-iy","rb"],intensification:["ih-n t-eh-n s-ah f-ah k-ey1 sh-ah-n","nn"],intensified:["ih-n t-eh1-n s-ah f-ay-d","vbn vbd jj"],intensify:["ih-n t-eh1-n s-ah f-ay","vb vbp"],intensifying:["ih-n t-eh1-n s-ah f-ay ih-ng","vbg jj"],intensity:["ih-n t-eh1-n s-ah t-iy","nn"],intensive:["ih-n t-eh1-n s-ih-v","jj nn"],intensively:["ih-n t-eh1-n s-ih-v l-iy","rb"],intent:["ih-n t-eh1-n-t","nn jj"],intention:["ih-n t-eh1-n ch-ah-n","nn"],intentional:["ih-n t-eh1-n sh-ah n-ah-l","jj"],intentionally:["ih-n t-eh1-n sh-ah-n ah l-iy","rb"],intentioned:["ih-n t-eh1-n ch-ah-n-d","jj"],intently:["ih-n t-eh1-n-t l-iy","rb"],inter:["ih-n-t-er1","vb"],interact:["ih-n t-er ae1-k-t","vbp vb"],interaction:["ih-n t-er ae1-k sh-ah-n","nn"],interactive:["ih-n t-er ae1-k t-ih-v","jj"],interagency:["ih-n t-er ey1 jh-ah-n s-iy","nn jj"],interbank:["ih-n t-er b-ae1-ng-k","nn jj rb"],intercede:["ih-n t-er s-iy1-d","vb"],intercept:["ih-n t-er s-eh1-p-t","nn vbp vb"],interception:["ih-n t-er s-eh1-p sh-ah-n","nn"],interceptor:["ih-n t-er s-eh1-p t-er","nn"],interchange:["ih-n t-er ch-ey1-n-jh","nn"],interchangeable:["ih-n t-er ch-ey1-n jh-ah b-ah-l","jj"],intercity:["ih1-n t-er s-ih t-iy","jj nn"],intercollegiate:["ih-n t-er k-ah l-iy1 jh-ah-t","jj"],intercom:["ih1-n t-er k-aa-m","nn"],intercompany:["ih-n t-er k-ah1-m p-ah n-iy","nn"],interconnect:["ih-n t-er k-ah n-eh1-k-t","nn vb"],interconnection:["ih-n t-er k-ah n-eh1-k sh-ah-n","nn"],intercontinental:["ih-n t-er k-aa-n t-ah n-eh1-n t-ah-l","jj"],intercourse:["ih1-n t-er k-ao-r-s","nn"],interdependence:["ih-n t-er d-ah p-eh1-n d-ah-n-s","nn"],interdependent:["ih-n t-er d-ih p-eh1-n d-ah-n-t","jj"],interdict:["ih1-n-t-er-d-ih-k-t","vb"],interdiction:["ih-n t-er d-ih1-k sh-ah-n","nn"],interest:["ih1-n t-r-ah-s-t","nn vbp vb"],interested:["ih1-n t-r-ah s-t-ah-d","jj vbd vbn"],interesting:["ih1-n t-r-ah s-t-ih-ng","jj"],interestingly:["ih1-n t-er eh s-t-ih-ng l-iy","rb"],interestrate:["ih1-n t-er ah s-t-r-ey-t","nn"],interface:["ih1-n t-er f-ey-s","nn vb"],interfaith:["ih-n t-er f-ey1-th","jj"],interfere:["ih-n t-er f-ih1-r","vb vbp"],interference:["ih-n t-er f-ih1 r-ah-n-s","nn"],interferometer:["ih-n t-er f-er aa1 m-ah t-er","nn"],interferon:["ih-n t-er f-eh1 r-aa-n","nn"],intergenerational:["ih-n t-er jh-eh1 n-er ey1 sh-ah n-ah-l","jj"],intergovernmental:["ih-n t-er g-ah v-er-n m-eh1-n t-ah-l","jj"],intergroup:["ih-n t-er g-r-uw1-p","jj nn"],interim:["ih1-n t-er ah-m","jj nn"],interior:["ih-n t-ih1 r-iy er","jj nn"],interject:["ih-n t-er jh-eh1-k-t","vb vbp"],interlace:["ih-n-t-er-l-ey1-s","vb"],interlaced:["ih-n t-er l-ey1-s-t","vbn jj"],interlock:["ih-n-t-er-l-aa1-k","vb"],interlocking:["ih1-n t-er l-aa k-ih-ng","jj"],interloper:["ih1-n t-er l-ow p-er","nn"],interlude:["ih1-n t-er l-uw-d","nn"],intermediary:["ih-n t-er m-iy1 d-iy eh r-iy","nn jj"],intermediate:["ih-n t-er m-iy1 d-iy ih-t","jj"],interminable:["ih-n t-er1 m-ah n-ah b-ah-l","jj"],intermingle:["ih-n t-er m-ih1-ng g-ah-l","vb vbp"],intermission:["ih-n t-er m-ih1 sh-ah-n","nn"],intermittent:["ih-n t-er m-ih1 t-ah-n-t","jj"],intermittently:["ih-n t-er m-ih1 t-ah-n-t l-iy","rb"],intern:["ih1-n t-er-n","nn vb"],internal:["ih-n t-er1 n-ah-l","jj"],internally:["ih-n t-er1 n-ah l-iy","rb"],international:["ih-n t-er n-ae1 sh-ah n-ah-l","jj nn"],internationalization:["ih-n t-er n-ae sh-ah-n ah l-ih z-ey1 sh-ah-n","nn"],internationalize:["ih-n t-er n-ae1 sh-ah-n ah l-ay-z","vb"],internationally:["ih-n t-er n-ae1 sh-ah-n ah l-iy","rb"],internist:["ih-n t-er1 n-ih-s-t","nn"],internment:["ih-n t-er1-n m-ah-n-t","nn"],interoffice:["ih-n t-er ao1 f-ah-s","jj"],interpersonal:["ih-n t-er p-er1 s-ah n-ah-l","jj"],interplanetary:["ih-n t-er p-l-ae1 n-ah t-eh r-iy","jj"],interplay:["ih1-n t-er p-l-ey","nn"],interpolate:["ih-t-er1-p-ah-l-ey-t","vb"],interpret:["ih-n t-er1 p-r-ah-t","vb vbp"],interpretation:["ih-n t-er p-r-ih t-ey1 sh-ah-n","nn"],interpreter:["ih-n t-er1 p-r-ah t-er","nn"],interpretive:["ih-n t-er1 p-r-ah t-ih-v","jj"],interprovincial:["ih-n t-er p-r-ow v-ih1-n sh-ah-l","jj"],interrelate:["ih-n-t-er-r-ih-l-ey1-t","vb"],interrelated:["ih-n t-er r-ih l-ey1 t-ih-d","vbn jj"],interrogate:["ih-n t-eh1 r-ah g-ey-t","vb"],interrogation:["ih-n t-eh r-ah g-ey1 sh-ah-n","nn"],interrogator:["ih-n t-eh1 r-ah g-ey t-er","nn"],interrupt:["ih-n t-er ah1-p-t","vb vbp"],interrupted:["ih-n t-er ah1-p t-ih-d","vbn jj vbd"],interruption:["ih-n t-er ah1-p sh-ah-n","nn"],intersect:["ih-n t-er s-eh1-k-t","vb vbp"],intersection:["ih-n t-er s-eh1-k sh-ah-n","nn"],intersperse:["ih-n-t-er-s-p-er1-s","vb"],interstate:["ih-n t-er s-t-ey1-t","jj nn"],interstellar:["ih-n t-er s-t-eh1 l-er","jj"],intertwine:["ih-n-t-er-t-w-ay1-n","vb"],intertwined:["ih-n t-er t-w-ay1-n-d","vbn jj"],intertwining:["ih1-n t-er t-w-ay n-ih-ng","vbg jj"],interval:["ih1-n t-er v-ah-l","nn"],intervene:["ih-n t-er v-iy1-n","vb"],intervenor:["ih-n t-er v-iy1 n-er","nn"],intervention:["ih-n t-er v-eh1-n ch-ah-n","nn"],interventionist:["ih-n t-er v-eh1-n sh-ah n-ih-s-t","jj"],interview:["ih1-n t-er v-y-uw","nn vb"],interviewee:["ih-n t-er v-y-uw iy1","nn"],interviewer:["ih1-n t-er v-y-uw er","nn"],interweave:["ih-n-t-er-w-iy1-v","vb"],interwoven:["ih-n t-er w-ow1 v-ah-n","vbn vbd"],intestinal:["ih-n t-eh1 s-t-ah n-ah-l","jj"],intestine:["ih-n t-eh1 s-t-ah-n","nn"],intifada:["ih-n t-ih f-aa1 d-ah","nn"],intimacy:["ih1-n t-ah m-ah s-iy","nn"],intimate:["ih1-n t-ah m-ah-t","jj nn vb"],intimately:["ih1-n t-ah m-ah-t l-iy","rb"],intimation:["ih-n t-ah m-ey1 sh-ah-n","nn"],intimidate:["ih-n t-ih1 m-ih d-ey-t","vb"],intimidating:["ih-n t-ih1 m-ih d-ey t-ih-ng","vbg jj"],intimidation:["ih-n t-ih m-ih d-ey1 sh-ah-n","nn"],into:["ih-n t-uw1","in rp"],intolerable:["ih-n t-aa1 l-er ah b-ah-l","jj"],intolerably:["ih-n t-aa1 l-er ah b-l-iy","rb"],intolerance:["ih-n t-aa1 l-er ah-n-s","nn"],intolerant:["ih-n t-aa1 l-er ah-n-t","jj"],intone:["ih-n-t-ow1-n","vb"],intoxicated:["ih-n t-aa1-k s-ah k-ey t-ah-d","jj"],intoxicating:["ih-n t-aa1-k s-ih k-ey t-ih-ng","jj"],intoxication:["ih-n t-aa-k s-ah k-ey1 sh-ah-n","nn"],intracompany:["ih-n t-r-ah k-aa1-m p-ah n-iy","jj"],intractable:["ih-n t-r-ae1-k t-ah b-ah-l","jj"],intramural:["ih-n t-r-ah m-y-uh1 r-ah-l","jj"],intransigence:["ih-n t-r-ae1-n s-ah jh-ah-n-s","nn"],intransigent:["ih-n t-r-ae1-n s-ah jh-ah-n-t","jj"],intraocular:["ih-n t-r-ah ow1 k-y-uw l-er","jj"],intraparty:["ih1-n t-r-ah p-aa-r t-iy","jj"],intrastate:["ih-n t-r-ah s-t-ey1-t","jj"],intrauterine:["ih-n t-r-ah y-uw1 t-er ih-n","jj"],intravenous:["ih-n t-r-ah v-iy1 n-ah-s","jj"],intravenously:["ih-n t-r-ae1 v-ah n-ah-s l-iy","rb"],intrepid:["ih-n t-r-eh1 p-ah-d","jj"],intricacy:["ih1-n t-r-ah k-ah s-iy","nn"],intricate:["ih1-n t-r-ah k-ah-t","jj"],intricately:["ih1-n t-r-ah k-ah-t l-iy","rb"],intrigue:["ih-n t-r-iy1-g","nn vb"],intrigued:["ih1-n t-r-iy-g-d","vbn jj"],intriguing:["ih-n t-r-iy1 g-ih-ng","jj vbg"],intriguingly:["ih-n t-r-iy1 g-ih-ng l-iy","rb"],intrinsic:["ih-n t-r-ih1-n s-ih-k","jj"],intrinsically:["ih-n t-r-ih1-n s-ih k-ah l-iy","rb"],introduce:["ih-n t-r-ah d-uw1-s","vb vbp"],introduction:["ih-n t-r-ah d-ah1-k sh-ah-n","nn"],introductory:["ih-n t-r-ah d-ah1-k t-er iy","jj"],introspection:["ih-n t-r-ah s-p-eh1-k sh-ah-n","nn"],introspective:["ih-n t-r-ah s-p-eh1-k t-ih-v","jj"],introvert:["ih1-n-t-r-ow-v-er-t","vb"],introverted:["ih1-n t-r-ow v-er t-ih-d","vbn jj"],intrude:["ih-n t-r-uw1-d","vb vbp"],intruder:["ih-n t-r-uw1 d-er","nn"],intrusion:["ih-n t-r-uw1 zh-ah-n","nn"],intrusive:["ih-n t-r-uw1 s-ih-v","jj"],intuition:["ih-n t-uw ih1 sh-ah-n","nn"],intuitive:["ih-n t-uw1 ah t-ih-v","jj"],intuitively:["ih-n t-uw1 ih t-ih-v l-iy","rb"],inundate:["ih1-n-ah-n-d-ey-t","vb"],inundated:["ih1 n-ah-n d-ey t-ih-d","vbn jj"],inundation:["ih n-ah-n d-ey1 sh-ah-n","nn"],inure:["ih-n-y-uh1-r","vb"],invade:["ih-n v-ey1-d","vb vbp"],invader:["ih-n v-ey1 d-er","nn"],invalid:["ih1-n v-ah l-ah-d","jj nn"],invalidate:["ih-n v-ae1 l-ih d-ey-t","vb"],invaluable:["ih-n v-ae1-l y-ah b-ah-l","jj"],invariably:["ih-n v-eh1 r-iy ah b-l-iy","rb"],invariant:["ih-n v-eh1 r-iy ah-n-t","jj nn"],invasion:["ih-n v-ey1 zh-ah-n","nn"],invasive:["ih-n v-ey1 s-ih-v","jj"],invective:["ih-n v-eh1-k t-ih-v","nn"],invent:["ih-n v-eh1-n-t","vb vbp"],invention:["ih-n v-eh1-n sh-ah-n","nn"],inventive:["ih-n v-eh1-n t-ih-v","jj"],inventiveness:["ih-n v-eh1-n t-ih-v n-ah-s","nn"],inventor:["ih-n v-eh1-n t-er","nn"],inventory:["ih-n v-ah-n t-ao1 r-iy","nn"],inverse:["ih-n v-er1-s","jj nn"],inversely:["ih-n v-er1-s l-iy","rb"],inversion:["ih-n v-er1 zh-ah-n","nn"],invert:["ih-n-v-er1-t","vb"],invertebrate:["ih-n v-er1 t-ah b-r-ah-t","nn"],inverted:["ih-n v-er1 t-ih-d","jj vbn"],invest:["ih-n v-eh1-s-t","vb vbp"],investable:["ih-n v-eh1 s-t-ah b-ah-l","jj"],invested:["ih-n v-eh1 s-t-ah-d","vbn jj vbd"],investigate:["ih-n v-eh1 s-t-ah g-ey-t","vb vbp"],investigation:["ih-n v-eh s-t-ah g-ey1 sh-ah-n","nn"],investigational:["ih-n v-eh s-t-ih g-ey1 sh-ah n-ah-l","jj"],investigative:["ih-n v-eh1 s-t-ah g-ey t-ih-v","jj"],investigator:["ih-n v-eh1 s-t-ah g-ey t-er","nn"],investing:["ih-n v-eh1 s-t-ih-ng","vbg jj nn"],investment:["ih-n v-eh1-s-t m-ah-n-t","nn jj"],investor:["ih-n v-eh1 s-t-er","nn"],inveterate:["ih-n v-eh1 t-er ah-t","jj"],invidious:["ih-n v-ih1 d-iy ah-s","jj"],invigorate:["ih-n v-ih1 g-er ih-t","vb"],invincible:["ih-n v-ih1-n s-ah b-ah-l","jj"],inviolable:["ih-n v-ay1 ah l-ah b-ah-l","jj"],inviolate:["ih-n v-ay1 ah l-ih-t","jj"],invisible:["ih-n v-ih1 z-ah b-ah-l","jj"],invitation:["ih-n v-ih t-ey1 sh-ah-n","nn"],invitational:["ih-n v-ah t-ey1 sh-ah n-ah-l","jj"],invite:["ih-n v-ay1-t","vb vbp nn"],inviting:["ih-n v-ay1 t-ih-ng","vbg jj"],invocation:["ih-n v-ah k-ey1 sh-ah-n","nn"],invoice:["ih1-n v-oy s-ih","nn"],invoicing:["ih1-n v-oy s-ih-ng","nn"],invoke:["ih-n v-ow1-k","vb"],involuntarily:["ih-n v-ow l-ah1-n t-er ih l-iy","rb"],involuntary:["ih-n v-aa1 l-ah-n t-eh r-iy","jj"],involve:["ih-n v-aa1-l-v","vb vbp"],involved:["ih-n v-aa1-l-v-d","vbn vbd jj vb"],involvement:["ih-n v-aa1-l-v m-ah-n-t","nn"],invulnerability:["ih-n v-ah-l n-er ah b-ih1 l-ih t-iy","nn"],invulnerable:["ih-n v-ah1-l n-er ah b-ah-l","jj"],inward:["ih1-n w-er-d","rb jj"],inwardly:["ih1-n w-er-d l-iy","rb"],iodide:["ay1 ah d-ay-d","nn"],iodine:["ay1 ah d-ay-n","nn"],ion:["ay1 ah-n","nn"],ionic:["ay aa1 n-ih-k","jj"],ionize:["ay1-ah-n-ay-z","vb"],iota:["ay ow1 t-ah","nn"],ip:["ih1-p","nn"],irate:["ay r-ey1-t","jj"],ire:["ay1-r","nn"],iridescent:["ih r-ah d-eh1 s-ah-n-t","jj"],iridium:["ih r-ih1 d-iy ah-m","nn"],irk:["er1-k","vb"],irksome:["er1-k s-ah-m","jj"],iron:["ay1 er-n","nn vb"],ironclad:["ay1 er-n k-l-ae-d","jj"],ironic:["ay r-aa1 n-ih-k","jj"],ironical:["ay r-aa1 n-ih k-ah-l","jj"],ironically:["ay r-aa1 n-ih-k l-iy","rb"],irony:["ay1 r-ah n-iy","nn"],irradiate:["ih-r-ey1-d-iy-ey-t","vb"],irradiated:["ih r-ey1 d-iy ey t-ih-d","vbn jj"],irradiation:["ih r-ey d-iy ey1 sh-ah-n","nn"],irrational:["ih r-ae1 sh-ah n-ah-l","jj"],irrationality:["ih r-ae sh-ah n-ae1 l-ah t-iy","nn"],irrationally:["ih r-ae1 sh-ah-n ah l-iy","rb"],irreconcilable:["ih r-eh1 k-ah-n s-ay l-ah b-ah-l","jj"],irrefutable:["ih r-ah f-y-uw1 t-ah b-ah-l","jj"],irregular:["ih r-eh1 g-y-ah l-er","jj nn"],irregularity:["ih r-eh g-y-ah l-eh1 r-ah t-iy","nn"],irregularly:["ih r-eh1 g-y-ah l-er l-iy","rb"],irrelevant:["ih r-eh1 l-ah v-ah-n-t","jj"],irremediable:["ih r-ih m-iy1 d-iy ah b-ah-l","jj"],irreparable:["ih r-eh1 p-er ah b-ah-l","jj"],irreparably:["ih r-eh1 p-er ah b-l-iy","rb"],irreplaceable:["ih r-ah p-l-ey1 s-ah b-ah-l","jj"],irrepressible:["ih r-ah p-r-eh1 s-ah b-ah-l","jj"],irresistible:["ih r-ih z-ih1 s-t-ah b-ah-l","jj"],irresistibly:["ih r-ih z-ih1 s-t-ah b-l-iy","rb"],irrespective:["ih r-ah s-p-eh1-k t-ih-v","rb"],irresponsibility:["ih r-ah s-p-aa-n s-ah b-ih1 l-ah t-iy","nn"],irresponsible:["ih r-ah s-p-aa1-n s-ah b-ah-l","jj nn"],irresponsibly:["ih r-ah s-p-aa1-n s-ah b-l-iy","rb"],irretrievably:["ih r-ah t-r-iy1 v-ah b-l-iy","rb"],irreverence:["ih r-eh1 v-er ah-n-s","nn"],irreverent:["ih r-eh1 v-er ah-n-t","jj"],irreversible:["ih r-ih v-er1 s-ah b-ah-l","jj"],irreversibly:["ih r-ih v-er1 s-ah b-l-iy","rb"],irrevocable:["ih r-eh1 v-ah k-ah b-ah-l","jj"],irrevocably:["ih r-eh1 v-ah k-ah b-l-iy","rb"],irrigate:["ih1 r-ah g-ey-t","vb"],irrigation:["ih r-ah g-ey1 sh-ah-n","nn"],irritable:["ih1 r-ah t-ah b-ah-l","jj"],irritant:["ih1 r-ah t-ah-n-t","nn"],irritate:["ih1 r-ih t-ey-t","vb"],irritated:["ih1 r-ah t-ey t-ah-d","vbn jj vbd"],irritating:["ih1 r-ah t-ey t-ih-ng","jj"],irritation:["ih r-ih t-ey1 sh-ah-n","nn"],is:["ih1-s","vbz"],"isn't":["ih1-z-ah-n-t","vbz vbp"],island:["ay1 l-ah-n-d","nn"],islander:["ay1 l-ah-n d-er","nn"],isle:["ay1-l","nn"],isolate:["ay1 s-ah l-ey-t","vb vbp"],isolated:["ay1 s-ah l-ey t-ah-d","vbn jj vbd"],isolating:["ay1 s-ah l-ey t-ih-ng","vbg jj"],isolation:["ay s-ah l-ey1 sh-ah-n","nn"],isolationism:["ay s-ah l-ey1 sh-ah-n ih z-ah-m","nn"],isomer:["ay1 s-ah m-er","nn"],isothermal:["ay s-ah th-er1 m-ah-l","jj"],isotonic:["ay s-ah t-aa1 n-ih-k","jj"],isotopic:["ay s-ah t-aa1 p-ih-k","jj"],issuable:["ih1 sh-uw ah b-ah-l","jj"],issuance:["ih1 sh-uw ah-n-s","nn"],issue:["ih1 sh-uw","nn vbp vb"],issued:["ih1 sh-uw-d","vbn vbd jj"],issuer:["ih1 sh-uw er","nn"],isthmus:["ih1-s m-ah-s","nn"],it:["ih1-t","prp"],italic:["ay t-ae1 l-ih-k","nn"],itch:["ih1-ch","vb nn"],itchy:["ih1 ch-iy","jj"],item:["ay1 t-ah-m","nn"],itemize:["ay1 t-ah m-ay-z","vb"],itinerant:["ay t-ih1 n-er ah-n-t","jj"],itinerary:["ay t-ih1 n-er eh r-iy","nn"],its:["ih1-t-s","prp$"],itself:["ih-t s-eh1-l-f","prp"],ivory:["ay1 v-er iy","nn jj"],ivy:["ay1 v-iy","nn"],jab:["jh-ae1-b","nn"],jabbed:["jh-ae1-b-d","vbd"],jack:["jh-ae1-k","vb nn"],jackass:["jh-ae1 k-ae-s","nn"],jacket:["jh-ae1 k-ah-t","nn vb"],jackhammer:["jh-ae1-k hh-ae m-er","nn"],jackpot:["jh-ae1-k p-aa-t","nn"],jade:["jh-ey1-d","nn vb"],jaded:["jh-ey1 d-ah-d","jj vbn"],jag:["jh-ae1-g-d","vb"],jagged:["jh-ae1-g-d","jj vbn"],jail:["jh-ey1-l","nn vb"],jailed:["jh-ey1-l-d","vbn vbd jj"],jailhouse:["jh-ey1-l hh-aw-s","nn"],jalopy:["jh-ah l-aa1 p-iy","nn"],jam:["jh-ae1-m","nn vb vbp"],jammed:["jh-ae1-m-d","vbn vbd jj"],jamming:["jh-ae1 m-ih-ng","nn"],janitor:["jh-ae1 n-ah t-er","nn"],jar:["jh-aa1-r","nn"],jargon:["jh-aa1-r g-ah-n","nn"],jarred:["jh-aa1-r-d","vbd vbn"],jarring:["jh-aa1 r-ih-ng","vbg jj"],jasmine:["jh-ae1-z m-ah-n","nn"],jaunt:["jh-ao1-n-t","nn"],jauntily:["jh-ao1-n t-ah l-iy","rb"],jaunty:["jh-ao1-n t-iy","jj"],java:["jh-aa1 v-ah","nn"],jaw:["jh-ao1","nn"],jawbone:["jh-ao1 b-ow-n","nn"],jawboning:["jh-ao1 b-ow n-ih-ng","nn"],jay:["jh-ey1","nn"],jazz:["jh-ae1-z","nn"],jazzy:["jh-ae1 z-iy","jj"],jealous:["jh-eh1 l-ah-s","jj"],jealously:["jh-eh1 l-ah-s l-iy","rb"],jealousy:["jh-eh1 l-ah s-iy","nn"],jeans:["jh-iy1-n-s","nn"],jeep:["jh-iy1-p","nn"],jeer:["jh-iy1-r","nn vb"],jelly:["jh-eh1 l-iy","nn"],jellyfish:["jh-eh1 l-iy f-ih-sh","nn"],jeopardize:["jh-eh1 p-er d-ay-z","vb vbp"],jeopardy:["jh-eh1 p-er d-iy","nn"],jerk:["jh-er1-k","nn vb"],jerky:["jh-er1 k-iy","jj nn"],jest:["jh-eh1-s-t","nn"],jester:["jh-eh1 s-t-er","nn"],jet:["jh-eh1-t","nn vb vbp"],jetliner:["jh-eh1-t l-ay n-er","nn"],jettison:["jh-eh1 t-ih s-ah-n","vb"],jetty:["jh-eh1 t-iy","nn"],jewel:["jh-uw1 ah-l","nn"],jeweler:["jh-uw1 ah l-er","nn"],jewelry:["jh-uw1 ah-l r-iy","nn"],jibe:["jh-ay1-b","nn"],jiffy:["jh-ih1 f-iy","nn"],jig:["jh-ih1-g","nn"],jiggle:["jh-ih1-g-ah-l","vb"],jigsaw:["jh-ih1-g s-ao","nn"],jihad:["jh-iy1 hh-ae-d","nn"],jillion:["jh-ih1 l-y-ah-n","nn"],jilt:["jh-ih1-l-t","vb"],jimmied:["jh-ih1 m-iy-d","vbd"],jimmy:["jh-ih1-m-iy","vb"],jingle:["jh-ih1-ng g-ah-l","nn"],jink:["jh-ih1-ng-k","nn"],jinx:["jh-ih1-ng-k-s","nn"],jitter:["jh-ih1 t-er","vb"],jitters:["jh-ih1 t-er-z","vbz nn"],jittery:["jh-ih1 t-er iy","jj"],jive:["jh-ay1-v","vb"],job:["jh-aa1-b","nn"],jobless:["jh-aa1-b l-ah-s","jj"],joblessness:["jh-aa1-b l-ah-s n-ah-s","nn"],jock:["jh-aa1-k","nn"],jockey:["jh-aa1 k-iy","nn vb vbp"],jocular:["jh-aa1 k-y-ah l-er","jj"],jog:["jh-aa1-g","vb"],jogger:["jh-aa1 g-er","nn"],jogging:["jh-aa1 g-ih-ng","nn"],john:["jh-aa1-n","nn"],join:["jh-oy1-n","vb vbp"],joiner:["jh-oy1 n-er","nn"],joint:["jh-oy1-n-t","jj nn"],jointly:["jh-oy1-n-t l-iy","rb"],joke:["jh-ow1-k","nn vbp vb"],joker:["jh-ow1 k-er","nn"],jokingly:["jh-ow1 k-ih-ng l-iy","rb"],jolly:["jh-aa1 l-iy","jj"],jolt:["jh-ow1-l-t","nn vb"],joss:["jh-ao1-s","nn"],jostle:["jh-aa1 s-ah-l","vbp vb"],jot:["jh-aa1-t","nn"],jotted:["jh-aa1 t-ih-d","jj"],journal:["jh-er1 n-ah-l","nn"],journalism:["jh-er1 n-ah l-ih z-ah-m","nn"],journalist:["jh-er1 n-ah l-ah-s-t","nn"],journalistic:["jh-er n-ah l-ih1 s-t-ih-k","jj"],journey:["jh-er1 n-iy","nn vb"],joust:["jh-aw1-s-t","vb"],jovial:["jh-ow1 v-iy ah-l","jj"],jowl:["jh-aw1-l","nn"],jowly:["jh-aw1 l-iy","jj"],joy:["jh-oy1","nn"],joyful:["jh-oy1 f-ah-l","jj"],joyfully:["jh-oy1 f-ah l-iy","rb"],joyous:["jh-oy1 ah-s","jj"],joyride:["jh-oy1 r-ay-d","nn"],jubilant:["jh-uw1 b-ah l-ah-n-t","jj"],jubilation:["jh-uw b-ah l-ey1 sh-ah-n","nn"],judge:["jh-ah1-jh","nn vb vbp"],judgement:["jh-ah1-jh m-ah-n-t","nn"],judgeship:["jh-ah1-jh sh-ih-p","nn"],judgment:["jh-ah1-jh m-ah-n-t","nn"],judgmental:["jh-ah-jh m-eh1-n t-ah-l","jj"],judicial:["jh-uw d-ih1 sh-ah-l","jj"],judicially:["jh-uw d-ih1 sh-ah l-iy","rb"],judiciary:["jh-uw d-ih1 sh-iy eh r-iy","nn jj"],judicious:["jh-uw d-ih1 sh-ah-s","jj"],judiciously:["jh-uw d-ih1 sh-ih-s l-iy","rb"],jug:["jh-ah1-g","nn"],juggernaut:["jh-ah1 g-er n-ao-t","nn"],juggle:["jh-ah1 g-ah-l","vb"],juggler:["jh-ah1 g-ah l-er","nn"],juice:["jh-uw1-s","nn"],juiciest:["jh-uw1 s-iy ah-s-t","jjs"],juicy:["jh-uw1 s-iy","jj"],jumble:["jh-ah1-m b-ah-l","nn vb"],jumbo:["jh-ah1-m b-ow","jj nn"],jump:["jh-ah1-m-p","nn vbp jj vb"],jumper:["jh-ah1-m p-er","nn"],jumpy:["jh-ah1-m p-iy","jj"],junction:["jh-ah1-ng-k sh-ah-n","nn"],juncture:["jh-ah1-ng-k ch-er","nn"],jungle:["jh-ah1-ng g-ah-l","nn"],junior:["jh-uw1 n-y-er","jj nn"],junk:["jh-ah1-ng-k","nn vb"],junkbond:["jh-ah1-ng-k b-aa-n-d","nn"],junket:["jh-ah1-ng k-ih-t","nn"],junkholder:["jh-ah1-ng-k hh-ow-l d-er","nn"],junkie:["jh-ah1-ng k-iy","nn"],junkyard:["jh-ah1-ng-k y-aa-r-d","nn"],junta:["hh-uh1-n t-ah","nn"],jurisdiction:["jh-uh r-ah-s d-ih1-k sh-ah-n","nn"],jurist:["jh-uh1 r-ah-s-t","nn"],juror:["jh-uh1 r-er","nn"],jury:["jh-uh1 r-iy","nn"],just:["jh-ah1-s-t","rb jj rp"],justice:["jh-ah1 s-t-ah-s","nn"],justifiable:["jh-ah1 s-t-ah f-ay ah b-ah-l","jj"],justifiably:["jh-ah1 s-t-ah f-ay ah b-l-iy","rb"],justification:["jh-ah s-t-ah f-ah k-ey1 sh-ah-n","nn"],justified:["jh-ah1 s-t-ah f-ay-d","vbn vbd jj"],justifies:["jh-ah1 s-t-ah f-ay-z","vbz"],justify:["jh-ah1 s-t-ah f-ay","vb vbp"],justly:["jh-ah1-s-t l-iy","rb"],jute:["jh-uw1-t","nn"],juvenile:["jh-uw1 v-ah n-ah-l","jj nn"],juxtapose:["jh-ah-k-s-t-ah-p-ow1-z","vb"],juxtaposition:["jh-ah-k s-t-ah p-ah z-ih1 sh-ah-n","nn"],kale:["k-ey1-l","nn"],kaleidoscope:["k-ah l-ay1 d-ah s-k-ow-p","nn"],kamikaze:["k-aa m-ah k-aa1 z-iy","nn"],kangaroo:["k-ae-ng g-er uw1","nn"],karaoke:["k-eh r-iy ow1 k-iy","nn"],kayo:["k-ey ow1","vb"],kazoo:["k-ah z-uw1","nn"],keel:["k-iy1-l","nn vb"],keelson:["k-eh1-l s-ah-n","nn"],keen:["k-iy1-n","jj nn vb"],keener:["k-iy1 n-er","jjr"],keenest:["k-iy1 n-ah-s-t","jjs"],keenly:["k-iy1-n l-iy","rb"],keep:["k-iy1-p","vb nn vbp"],keeper:["k-iy1 p-er","nn"],keepsake:["k-iy1-p s-ey-k","nn"],keg:["k-eh1-g","nn"],kelp:["k-eh1-l-p","nn"],kennel:["k-eh1 n-ah-l","nn"],kenning:["k-eh1 n-ih-ng","nn"],keno:["k-iy1 n-ow","jj"],kept:["k-eh1-p-t","vbd vbn"],kerchief:["k-er1 ch-ah-f","nn"],kernel:["k-er1 n-ah-l","nn"],kerosene:["k-eh1 r-ah s-iy-n","nn"],ketchup:["k-eh1 ch-ah-p","nn vb in"],kettle:["k-eh1 t-ah-l","nn"],key:["k-iy1","nn vb"],keyboard:["k-iy1 b-ao-r-d","nn"],keyed:["k-iy1-d","vbn jj"],keyhole:["k-iy1 hh-ow-l","nn"],keyless:["k-iy1 l-ah-s","jj"],keynote:["k-iy1 n-ow-t","vbp nn vb"],keypad:["k-iy1 p-ae-d","nn"],keystone:["k-iy1 s-t-ow-n","nn"],khaki:["k-aa1 k-iy","jj"],kibbutz:["k-ih b-uh1-t-s","nn"],kick:["k-ih1-k","nn vb vbp"],kickback:["k-ih1-k b-ae-k","nn"],kicker:["k-ih1 k-er","nn"],kickoff:["k-ih1-k ao-f","nn"],kid:["k-ih1-d","nn vb"],kiddie:["k-ih1 d-iy","nn"],kidnap:["k-ih1-d n-ae-p","vb"],kidnapper:["k-ih1-d n-ae p-er","nn"],kidnapping:["k-ih1-d n-ae p-ih-ng","nn vbg"],kidney:["k-ih1-d n-iy","nn"],kill:["k-ih1-l","vb vbp nn"],killer:["k-ih1 l-er","nn"],killing:["k-ih1 l-ih-ng","vbg jj nn"],kiln:["k-ih1-l-n","nn"],kilobyte:["k-ih1 l-ow b-ay-t","nn"],kilogram:["k-ih1 l-ah g-r-ae-m","nn"],kilometer:["k-ah l-aa1 m-ah t-er","nn"],kilowatt:["k-ih1 l-ah w-aa-t","nn"],kilt:["k-ih1-l-t","nn"],kilter:["k-ih1-l t-er","nn"],kimchi:["k-ih1-m ch-iy","nn"],kimono:["k-ah m-ow1 n-ah","nn"],kin:["k-ih1-n","nn"],kind:["k-ay1-n-d","nn jj rb"],kinder:["k-ay1-n d-er","jjr"],kindergarten:["k-ih1-n d-er g-aa-r t-ah-n","nn"],kindest:["k-ay1-n d-ah-s-t","jjs"],kindle:["k-ih1-n d-ah-l","vb"],kindly:["k-ay1-n-d l-iy","rb jj"],kindness:["k-ay1-n-d n-ah-s","nn"],kindred:["k-ih1-n d-r-ih-d","jj"],kinesthetic:["k-ih n-ah-s th-eh1 t-ih-k","jj"],kinetic:["k-ah n-eh1 t-ih-k","jj"],king:["k-ih1-ng","nn"],kingdom:["k-ih1-ng d-ah-m","nn"],kingmaker:["k-ih1-ng m-ey k-er","nn"],kingpin:["k-ih1-ng p-ih-n","nn"],kinship:["k-ih1-n sh-ih-p","nn"],kiosk:["k-iy1 ao-s-k","nn"],kiss:["k-ih1-s","nn vb vbp"],kit:["k-ih1-t","nn"],kitchen:["k-ih1 ch-ah-n","nn"],kitchenette:["k-ih ch-ah n-eh1-t","nn"],kitchenware:["k-ih1 ch-ah-n w-eh-r","nn"],kite:["k-ay1-t","nn"],kitten:["k-ih1 t-ah-n","nn"],kitty:["k-ih1 t-iy","nn"],kiwi:["k-iy1 w-iy","nn"],klieg:["k-l-iy1-g","nn"],knack:["n-ae1-k","nn"],knead:["n-iy1-d","vb"],knee:["n-iy1","nn"],kneecap:["n-iy1 k-ae-p","nn"],kneel:["n-iy1-l","vb"],knell:["n-eh1-l","nn"],knelt:["n-eh1-l-t","vbd vbn"],knew:["n-uw1","vbd"],knife:["n-ay1-f","nn"],knifelike:["n-ay1 f-l-ay-k","jj"],knight:["n-ay1-t","nn"],knightly:["n-ay1-t l-iy","jj"],knit:["n-ih1-t","vbn jj nn vb"],knitted:["n-ih1 t-ah-d","vbn vbd jj"],knitwear:["n-ih1-t w-eh-r","nn"],knob:["n-aa1-b","nn"],knock:["n-aa1-k","vb vbp nn"],knockdown:["n-aa1-k d-aw-n","nn"],knockoff:["n-aa1-k ao-f","nn"],knockout:["n-aa1-k aw-t","nn"],knoll:["n-ow1-l","nn"],knot:["n-aa1-t","nn vb"],knotted:["n-aa1 t-ih-d","jj vbd vbn"],knotty:["n-aa1 t-iy","jj"],know:["n-ow1","vb nn vbp"],knowing:["n-ow1 ih-ng","vbg jj nn"],knowingly:["n-ow1 ih-ng l-iy","rb"],knowledge:["n-aa1 l-ah-jh","nn"],knowledgeable:["n-aa1 l-ah jh-ah b-ah-l","jj"],known:["n-ow1-n","vbn jj"],knuckle:["n-ah1 k-ah-l","nn vb"],kook:["k-uw1-k","nn"],kosher:["k-ow1 sh-er","jj"],kraft:["k-r-ae1-f-t","nn"],kraut:["k-r-aw1-t","nn"],krona:["k-r-ow1 n-ah","nn"],kroner:["k-r-ow1 n-er","nn"],kronor:["k-r-ow1 n-er","nn"],kudo:["k-uw1 d-ow","nn"],lab:["l-ae1-b","nn"],label:["l-ey1 b-ah-l","nn vb vbp"],labor:["l-ey1 b-er","nn vbp vb"],laboratory:["l-ae1 b-r-ah t-ao r-iy","nn"],labored:["l-ey1 b-er-d","vbd vbn jj"],laborer:["l-ey1 b-er er","nn"],laborious:["l-ah b-ao1 r-iy ah-s","jj"],laboriously:["l-ah b-ao1 r-iy ah-s l-iy","rb"],labyrinth:["l-ae1 b-er ih-n-th","nn"],lace:["l-ey1-s","nn vb"],laced:["l-ey1-s-t","vbn vbd jj"],lacerate:["l-ae1 s-er ey-t","vb"],laceration:["l-ae s-er ey1 sh-ah-n","nn"],lacey:["l-ey1 s-iy","jj nn"],lack:["l-ae1-k","nn vb vbp"],lackadaisical:["l-ae k-ah d-ey1 z-ih k-ah-l","jj"],lackey:["l-ae1 k-iy","nn"],lacking:["l-ae1 k-ih-ng","vbg jj"],lackluster:["l-ae1-k l-ah s-t-er","jj nn rb"],lacquer:["l-ae1 k-er","nn vb"],lactate:["l-ae1-k-t-ey-t","vb"],lacy:["l-ey1 s-iy","jj"],lad:["l-ae1-d","nn"],ladder:["l-ae1 d-er","nn"],lade:["l-ey1-d","vb"],laden:["l-ey1 d-ah-n","jj vbn"],ladle:["l-ey1 d-ah-l","nn"],lady:["l-ey1 d-iy","nn"],ladylike:["l-ey1 d-iy l-ay-k","jj"],lag:["l-ae1-g","vb nn vbp jj"],laggard:["l-ae1 g-er-d","jj nn"],lagging:["l-ae1 g-ih-ng","vbg jj nn"],lagoon:["l-ah g-uw1-n","nn"],laid:["l-ey1-d","vbn vbd"],lain:["l-ey1-n","vbn"],laity:["l-ey1 ah t-iy","nn"],lak:["l-ae1-k","in"],lake:["l-ey1-k","nn"],lamb:["l-ae1-m","nn"],lambaste:["l-ae-m b-ae1-s-t","vb vbp"],lame:["l-ey1-m","jj"],lament:["l-ah m-eh1-n-t","nn vb"],laminate:["l-ae1-m-ah-n-ah-t","vb"],laminated:["l-ae1 m-ah n-ey t-ah-d","vbn jj"],lamp:["l-ae1-m-p","nn"],lampoon:["l-ae-m p-uw1-n","vb"],lamppost:["l-ae1-m-p p-ow-s-t","nn"],lance:["l-ae1-n-s","nn"],land:["l-ae1-n-d","nn vbp vb"],landau:["l-ae1-n d-aw","nn"],landes:["l-ae1-n-d-z","nn"],landfall:["l-ae1-n-d f-ao-l","nn"],landfill:["l-ae1-n-d f-ih-l","nn"],landholding:["l-ae1-n-d hh-ow-l d-ih-ng","nn"],landing:["l-ae1-n d-ih-ng","nn vbg"],landlocked:["l-ae1-n-d l-aa-k-t","jj"],landlord:["l-ae1-n-d l-ao-r-d","nn"],landmark:["l-ae1-n-d m-aa-r-k","nn jj"],landowner:["l-ae1-n-d ow n-er","nn"],landscape:["l-ae1-n-d s-k-ey-p","nn vb"],landscaped:["l-ae1-n-d s-k-ey-p-t","vbn jj"],landscaper:["l-ae1-n-d s-k-ey p-er","nn"],landslide:["l-ae1-n-d s-l-ay-d","nn"],lane:["l-ey1-n","nn"],language:["l-ae1-ng g-w-ah-jh","nn"],languid:["l-ae1-ng g-w-ah-d","jj"],languish:["l-ae1-ng g-w-ih-sh","vb"],languishing:["l-ae1-ng g-w-ih sh-ih-ng","vbg jj"],lanky:["l-ae1-ng k-iy","jj"],lantern:["l-ae1-n t-er-n","nn"],lanthanum:["l-ae1-n th-ah n-ah-m","nn"],lap:["l-ae1-p","nn"],lapel:["l-ah p-eh1-l","nn"],lapidary:["l-ae1 p-ah d-eh r-iy","jj nn"],lapped:["l-ae1-p-t","vbd vbn"],lapse:["l-ae1-p-s","nn vb vbp"],lapsed:["l-ae1-p-s-t","jj vbd vbn"],laptop:["l-ae1-p t-aa-p","nn jj"],larceny:["l-aa1-r s-ah n-iy","nn"],lard:["l-aa1-r-d","nn"],larder:["l-aa1-r d-er","nn"],large:["l-aa1-r-jh","jj rb"],largely:["l-aa1-r-jh l-iy","rb"],larger:["l-aa1-r jh-er","jjr rbr"],largess:["l-aa1-r jh-ah-s","nn"],largesse:["l-aa-r g-eh1-s","nn vb"],largest:["l-aa1-r jh-ah-s-t","jjs rbs"],lark:["l-aa1-r-k","nn"],larkspur:["l-aa1-r-k s-p-er","nn"],larval:["l-aa1-r v-ah-l","jj"],larynx:["l-eh1 r-ih-ng-k-s","nn"],laser:["l-ey1 z-er","nn"],lash:["l-ae1-sh","vb vbp nn"],lass:["l-ae1-s","nn"],lasso:["l-ae1 s-ow","nn vb"],last:["l-ae1-s-t","jj nn rb vb vbp"],lastest:["l-ae1 s-t-ah-s-t","jjs"],lasting:["l-ae1 s-t-ih-ng","vbg jj"],lastly:["l-ae1-s-t l-iy","rb"],lat:["l-aa1-t","nn"],latch:["l-ae1-ch","nn vb vbp"],late:["l-ey1-t","jj rb"],latecomer:["l-ey1-t k-ah m-er","nn"],lately:["l-ey1-t l-iy","rb"],latent:["l-ey1 t-ah-n-t","jj nn"],later:["l-ey1 t-er","rb rp jjr rbr"],lateral:["l-ae1 t-er ah-l","jj"],latest:["l-ey1 t-ah-s-t","jjs jj"],latex:["l-ey1 t-eh-k-s","nn"],lath:["l-ae1-th","nn"],lathe:["l-ey1-dh","nn"],lather:["l-ae1 dh-er","nn"],latitude:["l-ae1 t-ah t-uw-d","nn"],latter:["l-ae1 t-er","nn jj"],lattice:["l-ae1 t-ah-s","nn"],laud:["l-ao1-d","vb"],laudable:["l-ao1 d-ah b-ah-l","jj"],laudanum:["l-ao1 d-ah n-ah-m","nn"],laudatory:["l-ao1 d-ah t-ao r-iy","jj"],laugh:["l-ae1-f","nn vbp vb"],laughing:["l-ae1 f-ih-ng","vbg jj nn"],laughingly:["l-ae1 f-ih-ng l-iy","rb"],laughingstock:["l-ae1 f-ih-ng s-t-aa-k","nn"],laughter:["l-ae1-f t-er","nn"],launch:["l-ao1-n-ch","vb nn"],launched:["l-ao1-n-ch-t","vbn vbd vb"],launcher:["l-ao1-n ch-er","nn"],launder:["l-ao1-n d-er","vb"],launderer:["l-ao1-n d-er er","nn"],laundromat:["l-ao1-n d-r-ah m-ae-t","nn"],laundry:["l-ao1-n d-r-iy","nn"],laureate:["l-ao1 r-iy ah-t","nn"],laurel:["l-ao1 r-ah-l","nn"],lava:["l-aa1 v-ah","nn"],lavatory:["l-ae1 v-ah t-ao r-iy","nn"],lavender:["l-ae1 v-ah-n d-er","jj nn"],lavish:["l-ae1 v-ih-sh","jj vb"],lavishly:["l-ae1 v-ih-sh l-iy","rb"],law:["l-ao1","nn"],lawbreaker:["l-ao1 b-r-ey k-er","nn"],lawful:["l-ao1 f-ah-l","jj"],lawfully:["l-ao1 f-ah l-iy","rb"],lawless:["l-ao1 l-ah-s","jj"],lawlessness:["l-ao1 l-ah-s n-ah-s","nn"],lawmaker:["l-ao1 m-ey k-er","nn"],lawmaking:["l-ao1 m-ey k-ih-ng","jj nn"],lawman:["l-ao1 m-ah-n","nn"],lawn:["l-ao1-n","nn"],lawnmower:["l-ao1-n m-ow er","nn"],lawsuit:["l-ao1 s-uw-t","nn"],lawyer:["l-ao1 y-er","nn"],lawyering:["l-ao1 y-er ih-ng","nn"],lax:["l-ae1-k-s","jj"],laxative:["l-ae1-k s-ah t-ih-v","nn"],laxity:["l-ae1-k s-ah t-iy","nn"],lay:["l-ey1","vbd vbp jj vb"],layer:["l-ey1 er","nn vb"],layman:["l-ey1 m-ah-n","nn"],layoff:["l-ey1 ao-f","nn"],layout:["l-ey1 aw-t","nn"],lazily:["l-ae1 z-ah l-iy","rb"],lazy:["l-ey1 z-iy","jj"],leach:["l-iy1-ch","vb"],leaching:["l-iy1 ch-ih-ng","nn"],lead:["l-eh1-d","vb vbn vbp jj nn"],leaded:["l-eh1 d-ih-d","jj"],leaden:["l-eh1 d-ah-n","jj"],leader:["l-iy1 d-er","nn"],leaderless:["l-iy1 d-er l-ah-s","jj"],leadership:["l-iy1 d-er sh-ih-p","nn"],leading:["l-iy1 d-ih-ng","vbg jj nn"],leadoff:["l-iy1-d ao-f","nn"],leaf:["l-iy1-f","nn vb"],leaflet:["l-iy1-f l-ah-t","nn"],leafy:["l-iy1 f-iy","jj"],league:["l-iy1-g","nn"],leaguer:["l-iy1 g-er","nn"],leak:["l-iy1-k","nn vb"],leakage:["l-iy1 k-ah-jh","nn"],leaker:["l-iy1 k-er","nn"],leaky:["l-iy1 k-iy","jj"],lean:["l-iy1-n","jj vbp vb"],leap:["l-iy1-p","nn vbp vb"],leapfrog:["l-iy1-p f-r-ao-g","vb nn"],leaping:["l-iy1 p-ih-ng","vbg jj"],leapt:["l-eh1-p-t","vbd"],learn:["l-er1-n","vb vbp"],learned:["l-er1-n-d","jj"],learner:["l-er1 n-er","nn"],lease:["l-iy1-s","nn vbp vb"],leaseback:["l-iy1-s b-ae-k","nn"],leased:["l-iy1-s-t","vbn vbd jj"],leash:["l-iy1-sh","nn"],least:["l-iy1-s-t","jjs rbs jj"],leather:["l-eh1 dh-er","nn jj"],leathery:["l-eh1 dh-er iy","jj"],leave:["l-iy1-v","vb nn vbp"],leaven:["l-eh1-v-ah-n","vb"],leavened:["l-eh1 v-ah-n-d","vbd vbn jj"],lecher:["l-eh1 ch-er","nn"],lecherous:["l-eh1 ch-er ah-s","jj"],lectern:["l-eh1-k t-er-n","nn"],lecture:["l-eh1-k ch-er","nn vbp vb"],lecturer:["l-eh1-k ch-er er","nn"],led:["l-eh1-d","vbn vbd vb"],ledge:["l-eh1-jh","nn"],ledger:["l-eh1 jh-er","nn"],leech:["l-iy1-ch","nn vb"],leery:["l-ih1 r-iy","jj"],leeway:["l-iy1 w-ey","nn"],left:["l-eh1-f-t","vbn jj nn rb vbd"],leftist:["l-eh1-f t-ih-s-t","jj"],leftover:["l-eh1-f-t ow v-er","jj"],leftward:["l-eh1-f-t w-er-d","jj"],leg:["l-eh1-g","nn"],legacy:["l-eh1 g-ah s-iy","nn"],legal:["l-iy1 g-ah-l","jj"],legalistic:["l-eh g-ah l-ih1 s-t-ih-k","jj"],legality:["l-iy g-ae1 l-ah t-iy","nn"],legalization:["l-iy g-ah l-ah z-ey1 sh-ah-n","nn"],legalize:["l-iy1 g-ah l-ay-z","vb vbp"],legally:["l-iy1 g-ah l-iy","rb"],legend:["l-eh1 jh-ah-n-d","nn"],legendary:["l-eh1 jh-ah-n d-eh r-iy","jj"],legged:["l-eh1 g-ah-d","jj"],leggings:["l-eh1 g-ih-ng-z","nn"],leggy:["l-eh1 g-iy","jj"],legibility:["l-eh jh-ah b-ih1 l-ah t-iy","nn"],legible:["l-eh1 jh-ah b-ah-l","jj"],legion:["l-iy1 jh-ah-n","jj nn"],legislate:["l-eh1 jh-ih s-l-ey-t","vb"],legislation:["l-eh jh-ah-s l-ey1 sh-ah-n","nn"],legislative:["l-eh1 jh-ah-s l-ey t-ih-v","jj"],legislatively:["l-eh1 jh-ih s-l-ey t-ih-v l-iy","rb"],legislator:["l-eh1 jh-ah-s l-ey t-er","nn"],legislature:["l-eh1 jh-ah-s l-ey ch-er","nn"],legitimacy:["l-ah jh-ih1 t-ah m-ah s-iy","nn"],legitimate:["l-ah jh-ih1 t-ah m-ah-t","jj"],legitimately:["l-ah jh-ih1 t-ah m-ah-t l-iy","rb"],legitimize:["l-ah jh-ih1 t-ah m-ay-z","vb"],legume:["l-eh1 g-y-uw-m","nn"],leisure:["l-eh1 zh-er","nn"],leisurely:["l-iy1 z-er l-iy","jj rb"],leitmotif:["l-ay1-t m-ow t-iy-f","nn"],lemming:["l-eh1 m-ih-ng","nn"],lemon:["l-eh1 m-ah-n","nn jj"],lemonade:["l-eh1 m-ah n-ey1-d","nn"],lend:["l-eh1-n-d","vb vbp"],lender:["l-eh1-n d-er","nn"],lending:["l-eh1-n d-ih-ng","vbg jj"],length:["l-eh1-ng-k-th","nn"],lengthen:["l-eh1-ng th-ah-n","vb vbp"],lengthened:["l-eh1-ng th-ah-n-d","vbn vbd jj"],lengthwise:["l-eh1-ng-th w-ay-z","rb jj"],lengthy:["l-eh1-ng th-iy","jj"],leniency:["l-iy1 n-y-ah-n s-iy","nn"],lenient:["l-iy1 n-iy ah-n-t","jj"],lens:["l-eh1-n-z","nn"],lent:["l-eh1-n-t","vbd vbn"],lentil:["l-eh1-n t-ah-l","nn"],leopard:["l-eh1 p-er-d","nn"],leprosy:["l-eh1 p-r-ah s-iy","nn"],lesbian:["l-eh1-z b-iy ah-n","nn"],lesion:["l-iy1 zh-ah-n","nn"],less:["l-eh1-s","jjs cc rb rbr rbs"],lessen:["l-eh1 s-ah-n","vb"],lessened:["l-eh1 s-ah-n-d","vbn jj vbd"],lesser:["l-eh1 s-er","jjr rbr"],lesson:["l-eh1 s-ah-n","nn"],lessor:["l-eh1 s-er","nn"],lest:["l-eh1-s-t","in"],let:["l-eh1-t","vb vbd vbn vbp nn"],letdown:["l-eh1-t d-aw-n","nn"],lethal:["l-iy1 th-ah-l","jj"],lethality:["l-iy th-ae1 l-ah t-iy","nn"],lethargic:["l-ah th-aa1-r jh-ih-k","jj"],lethargy:["l-eh1 th-er jh-iy","nn"],letter:["l-eh1 t-er","nn vb"],letterhead:["l-eh1 t-er hh-eh-d","nn"],lettering:["l-eh1 t-er ih-ng","nn"],letterman:["l-eh1 t-er m-ah-n","nn"],lettuce:["l-eh1 t-ah-s","nn"],letup:["l-eh1-t ah-p","nn"],leukemia:["l-uw k-iy1 m-iy ah","nn"],levamisole:["l-ah v-ae1 m-ih s-ow-l","nn"],levee:["l-eh1 v-iy","nn"],level:["l-eh1 v-ah-l","nn vbp jj vb"],lever:["l-eh1 v-er","nn"],leverage:["l-eh1 v-er ih-jh","nn vb"],leveraged:["l-iy1 v-er ih-jh-d","jj vbn nn"],leviathan:["l-ah v-ay1 ah th-ah-n","jj nn"],levied:["l-eh1 v-iy-d","vbn vbd"],levitation:["l-eh v-ih t-ey1 sh-ah-n","nn"],levity:["l-eh1 v-ih t-iy","nn"],levy:["l-eh1 v-iy","nn vbp vb"],lewd:["l-uw1-d","jj"],lexical:["l-eh1-k s-ih k-ah-l","jj"],lexicon:["l-eh1-k s-ih k-aa-n","nn"],liability:["l-ay ah b-ih1 l-ih t-iy","nn"],liable:["l-ay1 ah b-ah-l","jj"],liaison:["l-iy ey1 z-aa-n","nn jj"],liar:["l-ay1 er","nn"],libel:["l-ay1 b-ah-l","nn vb"],libelous:["l-ay1 b-ah l-ah-s","jj"],liberal:["l-ih1 b-er ah-l","jj nn"],liberalism:["l-ih1 b-er ah l-ih z-ah-m","nn"],liberality:["l-ih b-er ae1 l-ah t-iy","nn"],liberalization:["l-ih b-r-ah l-ih z-ey1 sh-ah-n","nn"],liberalize:["l-ih1 b-er ah l-ay-z","vb vbp"],liberalized:["l-ih1 b-er ah l-ay-z-d","vbn jj vbd"],liberally:["l-ih1 b-er ah l-iy","rb"],liberate:["l-ih1 b-er ey-t","vb"],liberated:["l-ih1 b-er ey t-ih-d","vbn jj vbd"],liberating:["l-ih1 b-er ey t-ih-ng","vbg jj"],liberation:["l-ih b-er ey1 sh-ah-n","nn"],libertarian:["l-ih b-er t-eh1 r-iy ah-n","jj"],libertine:["l-ih1 b-er t-iy-n","nn"],liberty:["l-ih1 b-er t-iy","nn"],libido:["l-ah b-iy1 d-ow","nn"],librarian:["l-ay b-r-eh1 r-iy ah-n","nn"],library:["l-ay1 b-r-eh r-iy","nn"],libretto:["l-ah b-r-eh1 t-ow","nn"],lice:["l-ay1-s","nns"],license:["l-ay1 s-ah-n-s","nn vbp vb"],licensed:["l-ay1 s-ah-n-s-t","vbn vbd jj"],licensee:["l-ay s-ah-n s-iy1","nn"],licensing:["l-ay1 s-ah-n s-ih-ng","vbg jj"],lichen:["l-ay1 k-ah-n","nn"],lick:["l-ih1-k","vb"],lid:["l-ih1-d","nn"],lie:["l-ay1","vb vbp nn"],lieder:["l-iy1 d-er","jj nn"],lien:["l-iy1-n","nn"],lieutenant:["l-uw t-eh1 n-ah-n-t","nn"],life:["l-ay1-f","nn rb"],lifeblood:["l-ay1-f b-l-ah-d","nn"],lifeboat:["l-ay1-f b-ow-t","nn"],lifeguard:["l-ay1-f g-aa-r-d","nn"],lifeless:["l-ay1-f l-ah-s","jj"],lifelike:["l-ay1-f l-ay-k","jj"],lifeline:["l-ay1-f l-ay-n","nn"],lifelong:["l-ay1-f l-ao1-ng","jj"],lifer:["l-ay1 f-er","nn"],lifestyle:["l-ay1-f s-t-ay-l","nn"],lifetime:["l-ay1-f t-ay-m","nn jj"],lift:["l-ih1-f-t","vb nn vbp"],lifter:["l-ih1-f t-er","nn"],lifting:["l-ih1-f t-ih-ng","vbg jj nn"],liftoff:["l-ih1-f-t ao-f","nn"],ligament:["l-ih1 g-ah m-ah-n-t","nn"],ligand:["l-ih1 g-ah-n-d","nn"],light:["l-ay1-t","nn jj vb vbp"],lighted:["l-ay1 t-ah-d","vbn vbd"],lighten:["l-ay1 t-ah-n","vb"],lighter:["l-ay1 t-er","jjr rbr nn"],lightest:["l-ay1 t-ah-s-t","jjs"],lighthearted:["l-ay1-t hh-aa-r t-ih-d","jj"],lighthouse:["l-ay1-t hh-aw-s","nn"],lighting:["l-ay1 t-ih-ng","nn vbg"],lightly:["l-ay1-t l-iy","rb"],lightness:["l-ay1-t n-ah-s","nn"],lightning:["l-ay1-t n-ih-ng","nn"],lightweight:["l-ay1-t w-ey1-t","jj nn"],lignite:["l-ih1-g n-ay-t","jj nn"],likable:["l-ay1 k-ah b-ah-l","jj"],like:["l-ay1-k","vb"],likelier:["l-ay1-k l-iy er","jjr"],likeliest:["l-ay1-k l-iy ah-s-t","jjs"],likelihood:["l-ay1-k l-iy hh-uh-d","nn"],likely:["l-ay1-k l-iy","jj rb"],liken:["l-ay1-k-ah-n","vb"],likeness:["l-ay1-k n-ah-s","nn"],likewise:["l-ay1-k w-ay-z","rb"],lilac:["l-ay1 l-ae-k","jj"],lilt:["l-ih1-l-t","nn"],lily:["l-ih1 l-iy","nn"],limb:["l-ih1-m","nn"],limber:["l-ih1-m b-er","jj"],limbo:["l-ih1-m b-ow","nn"],lime:["l-ay1-m","nn"],limelight:["l-ay1-m l-ay-t","nn"],limestone:["l-ay1-m s-t-ow-n","nn"],limit:["l-ih1 m-ah-t","nn vb vbp"],limitation:["l-ih m-ih t-ey1 sh-ah-n","nn"],limited:["l-ih1 m-ah t-ah-d","jj vbd vbn"],limitless:["l-ih1 m-ah-t l-ah-s","jj"],limo:["l-ih1 m-ow","nn"],limousine:["l-ih1 m-ah z-iy-n","nn"],limp:["l-ih1-m-p","jj nn vb"],linchpin:["l-ih1-n-ch p-ih-n","nn"],linden:["l-ih1-n d-ah-n","nn"],line:["l-ay1-n","nn vbp rb vb"],lineage:["l-ih1 n-iy ah-jh","nn"],lineal:["l-ih1 n-iy ah-l","jj"],linear:["l-ih1 n-iy er","jj"],linearly:["l-ih1 n-iy er l-iy","rb"],linebacker:["l-ay1-n b-ae k-er","nn"],lined:["l-ay1-n-d","vbn vbd jj"],lineman:["l-ay1-n m-ah-n","nn"],linen:["l-ih1 n-ah-n","nn jj"],lineup:["l-ay1-n ah-p","nn"],linger:["l-ih1-ng g-er","vb vbp"],lingerie:["l-aa1-n zh-er ey","nn"],lingering:["l-ih1-ng g-er ih-ng","vbg jj"],lingo:["l-ih1-ng g-ow","nn"],linguist:["l-ih1-ng g-w-ih-s-t","nn"],linguistic:["l-ih-ng g-w-ih1 s-t-ih-k","jj"],link:["l-ih1-ng-k","nn vb vbp"],linkage:["l-ih1-ng k-ah-jh","nn"],linked:["l-ih1-ng-k-t","vbn vbd jj"],linoleum:["l-ah n-ow1 l-iy ah-m","nn"],lint:["l-ih1-n-t","nn"],lion:["l-ay1 ah-n","nn"],lionize:["l-ay1-ah-n-ay-z","vb"],lip:["l-ih1-p","nn jj"],lipid:["l-ay1 p-ah-d","nn"],lipstick:["l-ih1-p s-t-ih-k","nn"],liquefied:["l-ih1 k-w-ah f-ay-d","vbn"],liquefy:["l-ih1 k-w-ah f-ay","vb vbp"],liqueur:["l-ih k-er1","nn"],liquid:["l-ih1 k-w-ah-d","jj nn"],liquidate:["l-ih1 k-w-ih d-ey-t","vb"],liquidation:["l-ih k-w-ih d-ey1 sh-ah-n","nn"],liquidator:["l-ih1 k-w-ih d-ey t-er","nn"],liquidity:["l-ih k-w-ih1 d-ah t-iy","nn"],liquor:["l-ih1 k-er","nn"],list:["l-ih1-s-t","nn vbp vb"],listed:["l-ih1 s-t-ah-d","vbn vbd jj"],listen:["l-ih1 s-ah-n","vb vbp"],listener:["l-ih1 s-ah-n er","nn"],listing:["l-ih1 s-t-ih-ng","nn vbg"],listless:["l-ih1-s-t l-ah-s","jj"],listlessly:["l-ih1-s-t l-ah-s l-iy","rb"],lit:["l-ih1-t","vbd vbn jj nn"],litany:["l-ih1 t-ah n-iy","nn"],liter:["l-iy1 t-er","nn"],literacy:["l-ih1 t-er ah s-iy","nn"],literal:["l-ih1 t-er ah-l","jj"],literally:["l-ih1 t-er ah l-iy","rb"],literary:["l-ih1 t-er eh r-iy","jj nn"],literate:["l-ih1 t-er ah-t","jj"],literature:["l-ih1 t-er ah ch-er","nn"],lithe:["l-ay1-dh","jj"],lithium:["l-ih1 th-iy ah-m","nn"],lithograph:["l-ih1 th-ah g-r-ae-f","nn"],lithography:["l-ah th-aa1 g-r-ah f-iy","nn"],litigant:["l-ih1 t-ih g-ah-n-t","nn"],litigate:["l-ih1 t-ih g-ey-t","vb"],litigation:["l-ih t-ah g-ey1 sh-ah-n","nn"],litigator:["l-ih1 t-ah g-ey t-er","nn"],litigious:["l-ih t-ih1 jh-ah-s","jj"],litle:["l-ay1 t-ah-l","jj nn"],litmus:["l-ih1-t m-ah-s","nn"],litter:["l-ih1 t-er","nn vb vbp"],littering:["l-ih1 t-er ih-ng","nn"],little:["l-ih1 t-ah-l","jj rb"],littlest:["l-ih1 t-ah-l ah-s-t","jjs"],liturgical:["l-ah t-er1 jh-ih k-ah-l","jj"],liturgy:["l-ih1 t-er jh-iy","nn"],livable:["l-ih1 v-ah b-ah-l","jj"],live:["l-ay1-v","vb rb vbp jj"],lived:["l-ay1-v-d","vbd vbn vb"],livelier:["l-ay1-v l-iy er","jjr"],liveliest:["l-ay1-v l-iy ah-s-t","jjs"],livelihood:["l-ay1-v l-iy hh-uh-d","nn"],liveliness:["l-ay1-v l-iy n-ah-s","nn"],lively:["l-ay1-v l-iy","jj rb"],liver:["l-ih1 v-er","nn"],liveried:["l-ih1 v-r-iy-d","jj"],livestock:["l-ay1-v s-t-aa-k","nn"],livid:["l-ih1 v-ih-d","jj"],living:["l-ih1 v-ih-ng","vbg jj nn"],lizard:["l-ih1 z-er-d","nn"],lo:["l-ow1","uh"],load:["l-ow1-d","nn vb vbp"],loaded:["l-ow1 d-ah-d","vbn jj vbd"],loader:["l-ow1 d-er","nn"],loaf:["l-ow1-f","nn"],loafer:["l-ow1 f-er","nn"],loan:["l-ow1-n","nn vb"],loath:["l-ow1-th","jj"],loathe:["l-ow1-dh","vb"],loathsome:["l-ow1-dh s-ah-m","jj"],loave:["l-ow1-v","nn"],lob:["l-aa1-b","vb"],lobbied:["l-aa1 b-iy-d","vbd vbn"],lobby:["l-aa1 b-iy","nn vb"],lobbying:["l-aa1 b-iy ih-ng","vbg jj nn"],lobbyist:["l-aa1 b-iy ah-s-t","nn"],lobe:["l-ow1-b","nn"],loblolly:["l-aa1 b-l-aa l-iy","nn"],lobo:["l-ow1 b-ow","nn"],lobster:["l-aa1-b s-t-er","nn"],lobule:["l-aa1 b-y-uw-l","nn"],local:["l-ow1 k-ah-l","jj nn"],locale:["l-ow k-ae1-l","nn"],locality:["l-ow k-ae1 l-ah t-iy","nn"],localization:["l-ow k-ah l-ah z-ey1 sh-ah-n","nn"],localize:["l-ow1-k-ah-l-ay-z","vb"],localized:["l-ow1 k-ah l-ay-z-d","jj vbn"],locally:["l-ow1 k-ah l-iy","rb"],locate:["l-ow1 k-ey-t","vb vbp"],located:["l-ow1 k-ey t-ah-d","vbn jj vbd"],location:["l-ow k-ey1 sh-ah-n","nn"],loch:["l-aa1-k","nn"],lock:["l-aa1-k","vb vbp jj nn"],locked:["l-aa1-k-t","vbn jj vbd"],locker:["l-aa1 k-er","nn"],locking:["l-aa1 k-ih-ng","jj vbg"],lockout:["l-aa1-k aw-t","nn"],lockstep:["l-aa1-k s-t-eh-p","nn"],lockup:["l-aa1-k ah-p","nn"],locomotive:["l-ow k-ah m-ow1 t-ih-v","nn"],locus:["l-ow1 k-ah-s","nn"],locust:["l-ow1 k-ah-s-t","nn"],lodge:["l-aa1-jh","nn vb"],lodging:["l-aa1 jh-ih-ng","nn vbg"],loft:["l-ao1-f-t","nn"],lofty:["l-ao1-f t-iy","jj"],log:["l-ao1-g","nn vb vbp"],logarithm:["l-aa1 g-er ih dh-ah-m","nn"],logger:["l-aa1 g-er","nn"],loggerhead:["l-aa1 g-er hh-eh-d","nn"],logging:["l-ao1 g-ih-ng","vbg jj"],logic:["l-aa1 jh-ih-k","nn"],logical:["l-aa1 jh-ih k-ah-l","jj"],logically:["l-aa1 jh-ih-k l-iy","rb"],logistic:["l-ah jh-ih1 s-t-ih-k","jj"],logistical:["l-ah jh-ih1 s-t-ih k-ah-l","jj"],logjam:["l-aa1-g jh-ae-m","nn"],logo:["l-ow1 g-ow","nn"],loin:["l-oy1-n","nn"],loincloth:["l-oy1-n k-l-ao-th","nn"],loiter:["l-oy1-t-er","vb"],loll:["l-aa1-l","vb"],lollipop:["l-aa1 l-iy p-aa-p","nn"],lone:["l-ow1-n","jj"],loneliness:["l-ow1-n l-iy n-ah-s","nn"],lonely:["l-ow1-n l-iy","jj"],loner:["l-ow1 n-er","nn"],lonesome:["l-ow1-n s-ah-m","jj"],long:["l-ao1-ng","jj vb vbp rb"],longer:["l-ao1-ng g-er","rb jjr rbr"],longest:["l-ao1-ng g-ah-s-t","jjs"],longevity:["l-ao-n jh-eh1 v-ah t-iy","nn"],longhand:["l-ao1-ng hh-ae-n-d","jj nn"],longhorn:["l-ao1-ng hh-ao-r-n","nn"],longing:["l-ao1 ng-ih-ng","nn vbg"],longish:["l-ao1 ng-ih-sh","jj"],longitude:["l-aa1-n jh-ah t-uw-d","nn"],longitudinal:["l-aa-n jh-ah t-uw1 d-ah n-ah-l","jj"],longrange:["l-ao1-ng r-ey-n-jh","jj"],longshot:["l-ao1-ng sh-aa-t","nn"],longstanding:["l-ao1-ng s-t-ae-n d-ih-ng","jj"],longterm:["l-ao1-ng t-er-m","jj nn"],longtime:["l-ao1-ng t-ay-m","jj nn"],look:["l-uh1-k","vb nn vbp"],lookalike:["l-uh1 k-ah l-ay-k","jj"],looking:["l-uh1 k-ih-ng","vbg jj nn"],lookout:["l-uh1-k aw-t","nn"],loom:["l-uw1-m","vbp nn vb"],loon:["l-uw1-n","nn"],loony:["l-uw1 n-iy","jj"],loop:["l-uw1-p","nn vb"],loophole:["l-uw1-p hh-ow-l","nn"],loopy:["l-uw1 p-iy","jj"],loose:["l-uw1-s","jj rb vb rp"],loosely:["l-uw1-s l-iy","rb"],loosen:["l-uw1 s-ah-n","vb"],looser:["l-uw1 s-er","jjr"],loot:["l-uw1-t","nn vb"],lop:["l-aa1-p","jj"],lope:["l-ow1-p","nn vb"],lopped:["l-aa1-p-t","vbd vbn"],lopping:["l-aa1 p-ih-ng","nn"],lopsided:["l-aa1-p s-ay1 d-ih-d","jj"],loquacious:["l-ow k-w-ey1 sh-ah-s","jj"],lord:["l-ao1-r-d","nn"],lore:["l-ao1-r","nn"],lose:["l-uw1-z","vb vbp"],loser:["l-uw1 z-er","nn jj"],losing:["l-uw1 z-ih-ng","vbg jj nn"],loss:["l-ao1-s","nn"],lost:["l-ao1-s-t","vbd vbn jj"],lot:["l-aa1-t","nn rb jj"],lotion:["l-ow1 sh-ah-n","nn"],lotter:["l-aa1 t-er","nn"],lottery:["l-aa1 t-er iy","nn"],lotus:["l-ow1 t-ah-s","nn"],loud:["l-aw1-d","jj rb"],louder:["l-aw1 d-er","jjr rb rbr"],loudest:["l-aw1 d-ah-s-t","jjs rbs"],loudly:["l-aw1-d l-iy","rb"],loudspeaker:["l-aw1-d s-p-iy k-er","nn"],lounge:["l-aw1-n-jh","nn vb"],louse:["l-aw1-s","nn"],lousy:["l-aw1 z-iy","jj"],lovable:["l-ah1 v-ah b-ah-l","jj"],love:["l-ah1-v","nn vb vbp"],loved:["l-ah1-v-d","vbd vbn jj"],lovely:["l-ah1-v l-iy","jj"],lover:["l-ah1 v-er","nn"],lovin:["l-ow1 v-ih-n","jj"],loving:["l-ah1 v-ih-ng","jj vbg"],lovingly:["l-ah1 v-ih-ng l-iy","rb"],low:["l-ow1","jj nn rb rp"],lower:["l-ow1 er","jjr rbr vbp jj rb vb"],lowered:["l-ow1 er-d","vbd vbn jj"],lowest:["l-ow1 ah-s-t","jjs jj"],lowland:["l-ow1 l-ae-n-d","nn"],lowly:["l-ow1 l-iy","jj rb"],loyal:["l-oy1 ah-l","jj"],loyalist:["l-oy1 ah l-ih-s-t","nn jj"],loyalty:["l-oy1 ah-l t-iy","nn"],lube:["l-uw1-b","nn"],lubricant:["l-uw1 b-r-ah k-ah-n-t","nn jj"],lubricate:["l-uw1-b-r-ih-k-ey-t","vb"],lucid:["l-uw1 s-ah-d","jj"],luck:["l-ah1-k","nn"],luckier:["l-ah1 k-iy er","jjr"],luckiest:["l-ah1 k-iy ah-s-t","jjs"],luckily:["l-ah1 k-ah l-iy","rb"],lucky:["l-ah1 k-iy","jj"],lucrative:["l-uw1 k-r-ah t-ih-v","jj"],lucy:["l-uw1 s-iy","nn"],ludicrous:["l-uw1 d-ah k-r-ah-s","jj"],ludicrously:["l-uw1 d-ah k-r-ah-s l-iy","rb"],lug:["l-ah1-g","vb nn"],luggage:["l-ah1 g-ah-jh","nn"],lukewarm:["l-uw1-k w-ao1-r-m","jj"],lull:["l-ah1-l","nn vb"],lullaby:["l-ah1 l-ah b-ay","nn"],lumbar:["l-ah1-m b-aa-r","jj"],lumber:["l-ah1-m b-er","nn vb vbp"],lumbering:["l-ah1-m b-er ih-ng","jj nn"],lumberjack:["l-ah1-m b-er jh-ae-k","nn"],lumberyard:["l-ah1-m b-er y-aa-r-d","nn"],lumen:["l-uw1 m-ah-n","nn"],luminary:["l-uw1 m-ah n-eh r-iy","nn"],luminescence:["l-uw m-ah n-eh1 s-ah-n-s","nn"],luminescent:["l-uw m-ah n-eh1 s-ah-n-t","jj"],luminous:["l-uw1 m-ah n-ah-s","jj"],lump:["l-ah1-m-p","nn vb vbp"],lumpy:["l-ah1-m p-iy","jj"],lunar:["l-uw1 n-er","jj"],lunatic:["l-uw1 n-ah t-ih-k","jj"],lunch:["l-ah1-n-ch","nn vb"],luncheon:["l-ah1-n ch-ah-n","nn"],lunchroom:["l-ah1-n-ch r-uw-m","nn"],lunchtime:["l-ah1-n-ch t-ay-m","nn"],lung:["l-ah1-ng","nn"],lunge:["l-ah1-n-jh","vb"],lunger:["l-ah1 ng-er","nn"],lurch:["l-er1-ch","nn vb vbp"],lure:["l-uh1-r","vb nn"],lurid:["l-uh1 r-ah-d","jj"],lurk:["l-er1-k","vb vbp"],luscious:["l-ah1 sh-ih-s","jj"],lush:["l-ah1-sh","jj"],lust:["l-ah1-s-t","nn"],luster:["l-ah1 s-t-er","nn"],lustful:["l-ah1-s-t f-ah-l","jj"],lustre:["l-ah1 s-t-er","nn"],lustrous:["l-ah1-s t-r-ah-s","jj"],lusty:["l-ah1 s-t-iy","jj"],lute:["l-uw1-t","nn"],luxurious:["l-ah-g zh-er1 iy ah-s","jj"],luxury:["l-ah1-g zh-er iy","nn jj"],lye:["l-ay1","nn"],lymph:["l-ih1-m-f","nn"],lymphocyte:["l-ih1-m f-ah s-ay-t","nn"],lymphoma:["l-ih-m f-ow1 m-ah","nn"],lynch:["l-ih1-n-ch","vb"],lyric:["l-ih1 r-ih-k","jj nn"],lyrical:["l-ih1 r-ih k-ah-l","jj"],lyricism:["l-ih1 r-ih s-ih z-ah-m","nn"],lyricist:["l-ih1 r-ih s-ih-s-t","nn"],macabre:["m-ah k-aa1 b-r-ah","jj"],macaroni:["m-ae k-er ow1 n-iy","nn"],macaw:["m-ah k-ao1","nn"],machete:["m-ah sh-eh1 t-iy","nn"],machination:["m-ae k-ah n-ey1 sh-ah-n","nn"],machine:["m-ah sh-iy1-n","nn"],machinery:["m-ah sh-iy1 n-er iy","nn"],machining:["m-ah sh-iy1 n-ih-ng","nn"],machinist:["m-ah sh-iy1 n-ah-s-t","nn"],macho:["m-aa1 ch-ow","jj nn"],mackerel:["m-ae1 k-er ah-l","nn"],mackinaw:["m-ae1 k-ah n-ao","nn"],mackintosh:["m-ae1 k-ah-n t-aa-sh","nn"],macroeconomic:["m-ae k-r-ow eh k-ah n-aa1 m-ih-k","jj"],mad:["m-ae1-d","jj"],madam:["m-ae1 d-ah-m","nn"],madcap:["m-ae1-d k-ae-p","jj"],madden:["m-ae1-d-ah-n","vb"],maddening:["m-ae1 d-ah-n ih-ng","jj vbg"],maddeningly:["m-ae1 d-ah-n ih-ng l-iy","rb"],made:["m-ey1-d","vbn vbd jj"],madhouse:["m-ae1-d hh-aw-s","nn"],madly:["m-ae1-d l-iy","rb"],madman:["m-ae1-d m-ae-n","nn"],madness:["m-ae1-d n-ah-s","nn"],madrigal:["m-ae1 d-r-ah g-ah-l","nn"],madstone:["m-ae1-d s-t-ow-n","nn"],maelstrom:["m-ey1-l s-t-r-ah-m","nn"],maestro:["m-ay1 s-t-r-ow","nn"],mafia:["m-aa1 f-iy ah","nn"],magazine:["m-ae1 g-ah z-iy-n","nn"],magenta:["m-ah jh-eh1-n t-ah","jj nn"],maggot:["m-ae1 g-ah-t","nn"],magic:["m-ae1 jh-ih-k","nn jj"],magical:["m-ae1 jh-ih k-ah-l","jj"],magically:["m-ae1 jh-ih k-ah l-iy","rb"],magician:["m-ah jh-ih1 sh-ah-n","nn"],magistrate:["m-ae1 jh-ah s-t-r-ey-t","nn"],magnanimous:["m-ae-g n-ae1 n-ah m-ah-s","jj"],magnate:["m-ae1-g n-ah-t","nn"],magnesium:["m-ae-g n-iy1 z-iy ah-m","nn"],magnet:["m-ae1-g n-ah-t","nn"],magnetic:["m-ae-g n-eh1 t-ih-k","jj"],magnetically:["m-ae-g n-eh1 t-ih k-ah l-iy","rb"],magnetism:["m-ae1-g n-ah t-ih z-ah-m","nn"],magnetize:["m-ae1-g n-ih t-ay-z","vb"],magnification:["m-ae-g n-ah f-ah k-ey1 sh-ah-n","nn"],magnificent:["m-ae-g n-ih1 f-ah s-ah-n-t","jj"],magnificently:["m-ae-g n-ih1 f-ah s-ah-n-t l-iy","rb"],magnified:["m-ae1-g n-ah f-ay-d","vbn vbd"],magnifies:["m-ae1-g n-ah f-ay-z","vbz"],magnify:["m-ae1-g n-ah f-ay","vb"],magnitude:["m-ae1-g n-ah t-uw-d","nn"],magnolia:["m-ae-g n-ow1 l-y-ah","nn"],magnum:["m-ae1-g n-ah-m","nn"],magpie:["m-ae1-g p-ay","nn"],mahogany:["m-ah hh-aa1 g-ah n-iy","nn"],maid:["m-ey1-d","nn"],maiden:["m-ey1 d-ah-n","nn jj"],mail:["m-ey1-l","nn vb vbp"],mailbox:["m-ey1-l b-aa-k-s","nn"],mailed:["m-ey1-l-d","vbn vbd jj"],mailer:["m-ey1 l-er-z","nn"],mailing:["m-ey1 l-ih-ng","nn vbg"],mailman:["m-ey1-l m-ae-n","nn"],mailroom:["m-ey1-l r-uw-m","nn jj"],maimed:["m-ey1-m-d","jj"],main:["m-ey1-n","jj nn"],mainframe:["m-ey1-n f-r-ey-m","nn jj"],mainland:["m-ey1-n l-ae-n-d","nn jj"],mainline:["m-ey1-n l-ay-n","jj nn"],mainly:["m-ey1-n l-iy","rb"],mainstay:["m-ey1-n s-t-ey","nn jj"],mainstream:["m-ey1-n s-t-r-iy-m","nn jj rb"],maintain:["m-ey-n t-ey1-n","vb vbp"],maintenance:["m-ey1-n t-ah n-ah-n-s","nn"],majestic:["m-ah jh-eh1 s-t-ih-k","jj"],majestically:["m-ah jh-eh1 s-t-ih k-ah l-iy","rb"],majesty:["m-ae1 jh-ah s-t-iy","nn"],major:["m-ey1 jh-er","jj nn vb vbp"],majoritarian:["m-ae jh-er ih t-eh1 r-iy ah-n","jj"],majority:["m-ah jh-ao1 r-ah t-iy","nn jj"],make:["m-ey1-k","vb nn vbp"],makeover:["m-ae1-k ow v-er","nn"],maker:["m-ey1 k-er","nn"],makeshift:["m-ey1-k sh-ih-f-t","jj nn"],makeup:["m-ey1-k ah-p","nn"],maladjusted:["m-ae-l ah jh-ah1 s-t-ih-d","jj"],maladroit:["m-ae l-ah d-r-oy1-t","jj"],malady:["m-ae1 l-ah d-iy","nn"],malaise:["m-ae l-ey1-z","nn"],malaria:["m-ah l-eh1 r-iy ah","nn"],male:["m-ey1-l","jj nn"],malevolent:["m-ah l-eh1 v-ah l-ah-n-t","jj"],malformation:["m-ae-l f-ao-r m-ey1 sh-ah-n","nn"],malformed:["m-ae-l f-ao1-r-m-d","jj"],malfunction:["m-ae-l f-ah1-ng-k sh-ah-n","nn"],malfunctioning:["m-ae-l f-ah1-ng-k sh-ah-n ih-ng","nn"],malice:["m-ae1 l-ah-s","nn"],malicious:["m-ah l-ih1 sh-ah-s","jj"],maliciously:["m-ah l-ih1 sh-ih-s l-iy","rb"],malign:["m-ah-l-ay1-n","vb"],malignancy:["m-ah l-ih1-g n-ah-n s-iy","nn"],malignant:["m-ah l-ih1-g n-ah-n-t","jj"],mall:["m-ao1-l","nn"],malleable:["m-ae1 l-iy ah b-ah-l","jj"],malnourished:["m-ae-l n-er1 ih-sh-t","jj"],malnutrition:["m-ae-l n-uw t-r-ih1 sh-ah-n","nn"],malpractice:["m-ae-l p-r-ae1-k t-ah-s","nn vb"],malt:["m-ao1-l-t","nn vb"],malted:["m-ao1-l t-ah-d","vbn jj"],maltreat:["m-ae-l t-r-iy1-t","vb"],maltreatment:["m-ae-l t-r-iy1-t m-ah-n-t","nn"],mama:["m-aa1 m-ah","nn"],mammal:["m-ae1 m-ah-l","nn"],mammalian:["m-ah m-ey1 l-iy ah-n","jj"],mammary:["m-ae1 m-er iy","jj"],mammography:["m-ah m-aa1 g-r-ah f-iy","nn"],mammoth:["m-ae1 m-ah-th","jj"],man:["m-ae1-n","nn jj vb uh"],mana:["m-aa1 n-ah","nn"],manage:["m-ae1 n-ah-jh","vb vbp"],manageable:["m-ae1 n-ih jh-ah b-ah-l","jj"],managed:["m-ae1 n-ah-jh-d","vbd vbn jj"],management:["m-ae1 n-ah-jh m-ah-n-t","nn"],manager:["m-ae1 n-ah jh-er","nn"],managerial:["m-ae n-ih jh-ih1 r-iy ah-l","jj"],managing:["m-ae1 n-ah jh-ih-ng","vbg jj nn"],mandamus:["m-ae-n d-ey1 m-ah-s","nn"],mandate:["m-ae1-n d-ey-t","nn vb"],mandatory:["m-ae1-n d-ah t-ao r-iy","jj nn"],mane:["m-ey1-n","nn"],maneuver:["m-ah n-uw1 v-er","nn vb"],maneuvering:["m-ah n-uw1 v-er ih-ng","vbg jj"],manganese:["m-ae1-ng g-ah n-iy-z","nn"],manger:["m-ey1-n jh-er","nn"],mangle:["m-ae1-ng-g-ah-l","vb"],mangled:["m-ae1-ng g-ah-l-d","jj vbn"],manhandle:["m-ae1-n-hh-ae-n-d-ah-l","vb"],manhole:["m-ae1-n hh-ow-l","nn"],manhood:["m-ae1-n hh-uh-d","nn"],mania:["m-ey1 n-iy ah","nn"],maniac:["m-ey1 n-iy ae-k","nn"],maniacal:["m-ah n-ay1 ah k-ah-l","jj"],manic:["m-ae1 n-ih-k","jj"],manicure:["m-ae1-n-ih-k-y-er","vb"],manifest:["m-ae1 n-ah f-eh-s-t","jj vb vbp"],manifestation:["m-ae n-ah f-eh s-t-ey1 sh-ah-n","nn"],manifestly:["m-ae1 n-ah f-eh-s-t l-iy","rb"],manifesto:["m-ae n-ah f-eh1 s-t-ow","nn"],manifold:["m-ae1 n-ah f-ow-l-d","nn jj"],manila:["m-ah n-ih1 l-ah","jj"],manipulate:["m-ah n-ih1 p-y-ah l-ey-t","vb vbp"],manipulation:["m-ah n-ih p-y-ah l-ey1 sh-ah-n","nn"],manipulative:["m-ah n-ih1 p-y-ah l-ey t-ih-v","jj"],manipulator:["m-ah n-ih1 p-y-ah l-ey t-er","nn"],mankind:["m-ae1-n k-ay1-n-d","nn"],manly:["m-ae1-n l-iy","jj"],manmade:["m-ae1-n m-ey1-d","nn"],manna:["m-ae1 n-ah","nn"],manned:["m-ae1-n-d","jj vbd vbn"],mannequin:["m-ae1 n-ah k-ih-n","nn"],manner:["m-ae1 n-er","nn"],mannered:["m-ae1 n-er-d","jj"],mannerism:["m-ae1 n-er ih z-ah-m","nn"],manor:["m-ae1 n-er","nn"],manpower:["m-ae1-n p-aw er","nn"],mansion:["m-ae1-n sh-ah-n","nn"],manslaughter:["m-ae1-n s-l-ao t-er","nn"],mantel:["m-ae1-n t-ah-l","nn"],mantle:["m-ae1-n t-ah-l","nn"],manual:["m-ae1 n-y-uw ah-l","jj nn"],manually:["m-ae1 n-y-uw ah l-iy","rb"],manufacture:["m-ae n-y-ah f-ae1-k ch-er","vb nn vbp"],manufactured:["m-ae n-y-ah f-ae1-k ch-er-d","vbn vbd jj"],manufacturer:["m-ae n-y-ah f-ae1-k ch-er er","nn"],manure:["m-ah n-uh1-r","nn"],manuscript:["m-ae1 n-y-ah s-k-r-ih-p-t","nn"],many:["m-eh1 n-iy","jj dt rb vb pdt"],map:["m-ae1-p","nn vbp vb"],maple:["m-ey1 p-ah-l","nn jj"],maquila:["m-ah-k w-iy1 l-ah","nn"],mar:["m-aa1-r","vb"],marathon:["m-eh1 r-ah th-aa-n","nn jj"],marauder:["m-er ao1 d-er","nn"],marble:["m-aa1-r b-ah-l","nn"],march:["m-aa1-r-ch","nn vbp vb"],marcher:["m-aa1-r ch-er","nn"],mare:["m-eh1-r","nn"],margarine:["m-aa1-r jh-er ah-n","nn"],margin:["m-aa1-r jh-ah-n","nn vb"],marginal:["m-aa1-r jh-ah n-ah-l","jj"],marginalize:["m-aa1-r-jh-ah-n-ah-l-ay-z","vb"],marginally:["m-aa1-r jh-ah n-ah l-iy","rb"],marijuana:["m-eh r-ah-w aa1 n-ah","nn"],marimba:["m-er ih1-m b-ah","nn"],marina:["m-er iy1 n-ah","nn"],marinate:["m-eh1-r-ah-n-ey-t","vb"],marine:["m-er iy1-n","nn jj"],mariner:["m-eh1 r-ah n-er","nn"],marital:["m-eh1 r-ah t-ah-l","jj"],maritime:["m-eh1 r-ah t-ay-m","jj"],mark:["m-aa1-r-k","nn vbp vb"],markdown:["m-aa1-r-k d-aw-n","nn jj"],marked:["m-aa1-r-k-t","vbn jj vbd"],markedly:["m-aa1-r k-ah-d l-iy","rb"],marker:["m-aa1-r k-er","nn"],market:["m-aa1-r k-ah-t","nn vbp vb"],marketability:["m-aa-r k-ih t-ah b-ih1 l-ih t-iy","nn"],marketable:["m-aa1-r k-ah t-ah b-ah-l","jj"],marketeer:["m-aa-r k-ah t-ih1-r","nn"],marketer:["m-aa1-r k-ah t-er","nn"],marketing:["m-aa1-r k-ah t-ih-ng","vbg jj"],marketplace:["m-aa1-r k-ah-t p-l-ey-s","nn"],marketwide:["m-aa1-r k-ah-t w-ay-d","jj"],marksmanship:["m-aa1-r-k-s m-ah-n sh-ih-p","nn"],markup:["m-aa1-r-k ah-p","nn"],marmalade:["m-aa1-r m-ah l-ey-d","nn"],maroon:["m-er uw1-n","nn jj vb"],marque:["m-aa1-r-k","nn"],marquee:["m-aa-r k-iy1","nn"],marred:["m-aa1-r-d","vbn jj vbd"],marriage:["m-eh1 r-ih-jh","nn"],married:["m-eh1 r-iy-d","vbn vbd jj"],marries:["m-eh1 r-iy-z","vbz"],marrow:["m-eh1 r-ow","nn"],marry:["m-eh1 r-iy","vb vbp"],marsh:["m-aa1-r-sh","nn"],marshal:["m-aa1-r sh-ah-l","nn vb vbp"],marshmallow:["m-aa1-r-sh m-eh l-ow","nn"],martial:["m-aa1-r sh-ah-l","jj"],martingale:["m-aa1-r t-ih ng-ey-l","nn"],martini:["m-aa-r t-iy1 n-iy","nn"],martyr:["m-aa1-r t-er","nn"],martyrdom:["m-aa1-r t-er d-ah-m","nn"],marvel:["m-aa1-r v-ah-l","vb nn"],marvelous:["m-aa1-r v-ah l-ah-s","jj"],marvelously:["m-aa1-r v-ah l-ah-s l-iy","rb"],mascara:["m-ae s-k-eh1 r-ah","nn"],mascot:["m-ae1 s-k-ah-t","nn"],masculine:["m-ae1-s k-y-ah l-ah-n","jj nn"],masculinity:["m-ae-s k-y-ah l-ih1 n-ah t-iy","nn"],mash:["m-ae1-sh","nn vb"],mask:["m-ae1-s-k","nn vbp vb"],masked:["m-ae1-s-k-t","vbn vbd jj"],mason:["m-ey1 s-ah-n","nn"],masonry:["m-ey1 s-ah-n r-iy","nn"],masquerade:["m-ae-s k-er ey1-d","nn vb vbp"],mass:["m-ae1-s","nn jj rb vb"],massacre:["m-ae1 s-ah k-er","nn vb"],massage:["m-ah s-aa1-zh","nn vb"],massive:["m-ae1 s-ih-v","jj"],massively:["m-ae1 s-ih-v l-iy","rb"],mast:["m-ae1-s-t","nn"],master:["m-ae1 s-t-er","nn vb"],masterful:["m-ae1 s-t-er f-ah-l","jj"],masterfully:["m-ae1 s-t-er f-ah l-iy","rb"],masterly:["m-ae1 s-t-er l-iy","jj"],mastermind:["m-ae1 s-t-er m-ay-n-d","nn vb"],masterpiece:["m-ae1 s-t-er p-iy-s","nn"],masterwork:["m-ae1 s-t-er w-er-k","nn"],mastery:["m-ae1 s-t-er iy","nn"],mastiff:["m-ae1 s-t-ah-f","nn"],mat:["m-ae1-t","nn"],matador:["m-ae1 t-ah d-ao-r","nn"],match:["m-ae1-ch","vb vbp nn"],matched:["m-ae1-ch-t","vbn jj vbd"],matching:["m-ae1 ch-ih-ng","vbg jj nn"],matchmaker:["m-ae1-ch m-ey k-er","nn"],matchmaking:["m-ae1-ch m-ey k-ih-ng","nn"],mate:["m-ey1-t","nn vbp vb uh"],mater:["m-aa1 t-er","nn"],material:["m-ah t-ih1 r-iy ah-l","nn jj"],materialism:["m-ah t-ih1 r-iy ah l-ih z-ah-m","nn"],materialistic:["m-ah t-ih r-iy ah l-ih1 s-t-ih-k","jj"],materialize:["m-ah t-ih1 r-iy ah l-ay-z","vb vbp"],materially:["m-ah t-ih1 r-iy ah l-iy","rb"],materiel:["m-ah t-ih r-iy eh1-l","nn"],maternal:["m-ah t-er1 n-ah-l","jj"],maternity:["m-ah t-er1 n-ih t-iy","nn"],math:["m-ae1-th","nn"],mathematical:["m-ae th-ah m-ae1 t-ih k-ah-l","jj"],mathematically:["m-ae th-ah m-ae1 t-ih k-ah l-iy","rb"],mathematician:["m-ae th-ah m-ah t-ih1 sh-ah-n","nn"],mathematics:["m-ae th-ah m-ae1 t-ih-k-s","nn"],matinee:["m-ae1 t-ih n-ey","jj"],mating:["m-ey1 t-ih-ng","nn jj vbg"],matriarch:["m-ey1 t-r-iy aa-r-k","nn"],matriarchal:["m-ey t-r-iy aa1-r k-ah-l","jj"],matrimonial:["m-ae t-r-ah m-ow1 n-iy ah-l","jj"],matrimony:["m-ae1 t-r-ah m-ow n-iy","nn"],matrix:["m-ey1 t-r-ih-k-s","nn"],matron:["m-ey1 t-r-ah-n","nn"],matronly:["m-ey1 t-r-ah-n l-iy","jj"],matt:["m-ae1-t","nn"],matte:["m-ae1-t","nn"],matter:["m-ae1 t-er","nn vbp vb"],matting:["m-ae1 t-ih-ng","nn"],mattress:["m-ae1 t-r-ah-s","nn"],maturation:["m-ae ch-er ey1 sh-ah-n","nn"],mature:["m-ah ch-uh1-r","jj vb vbp"],maturity:["m-ah ch-uh1 r-ah t-iy","nn"],maudlin:["m-ao1-d l-ih-n","jj"],maul:["m-ao1-l","vb"],mauler:["m-ao1 l-er","nn"],mausoleum:["m-ao s-ah l-iy1 ah-m","nn"],mauve:["m-ao1-v","jj"],maven:["m-ey1 v-ah-n","nn"],maverick:["m-ae1 v-er ih-k","nn jj"],maw:["m-ao1","nn"],mawkish:["m-ao1 k-ih-sh","jj"],max:["m-ae1-k-s","nn"],maxim:["m-ae1-k s-ah-m","nn"],maximal:["m-ae1-k s-ah m-ah-l","jj"],maximization:["m-ae-k s-ih m-ih z-ey1 sh-ah-n","nn"],maximize:["m-ae1-k s-ah m-ay-z","vb vbp"],maximum:["m-ae1-k s-ah m-ah-m","jj nn"],may:["m-ey1","md"],maybe:["m-ey1 b-iy","rb"],mayhem:["m-ey1 hh-eh-m","nn"],mayonnaise:["m-ey1 ah n-ey-z","nn"],mayor:["m-ey1 er","nn"],mayoral:["m-ey1 er ah-l","jj"],mayoralty:["m-ey1 er ah-l t-iy","nn"],maze:["m-ey1-z","nn"],me:["m-iy1","prp"],meadow:["m-eh1 d-ow","nn"],meager:["m-iy1 g-er","jj"],meal:["m-iy1-l","nn"],mealtime:["m-iy1-l t-ay-m","nn"],mealy:["m-iy1 l-iy","jj"],mealynosed:["m-iy1 l-iy n-ow-z-d","jj"],mean:["m-iy1-n","vb vbp jj"],meander:["m-iy-ae1-n-d-er","vb"],meaner:["m-iy1 n-er","jjr"],meanest:["m-iy1 n-ah-s-t","jjs"],meaning:["m-iy1 n-ih-ng","nn vbg"],meaningful:["m-iy1 n-ih-ng f-ah-l","jj"],meaningfully:["m-iy1 n-ih-ng f-ah l-iy","rb"],meaningless:["m-iy1 n-ih-ng l-ah-s","jj"],meanness:["m-iy1-n n-ah-s","nn"],means:["m-iy1-n-z","nn"],meant:["m-eh1-n-t","vbd vbn"],meantime:["m-iy1-n t-ay-m","nn rb"],meanwhile:["m-iy1-n w-ay-l","rb nn"],measles:["m-iy1 z-ah-l-z","nn"],measly:["m-iy1-z l-iy","jj"],measurable:["m-eh1 zh-er ah b-ah-l","jj"],measurably:["m-eh1 zh-er ah b-l-iy","rb"],measure:["m-eh1 zh-er","nn vbp vb"],measured:["m-eh1 zh-er-d","vbn vbd jj"],measurement:["m-eh1 zh-er m-ah-n-t","nn"],measuring:["m-eh1 zh-er ih-ng","vbg jj"],meat:["m-iy1-t","nn"],meatpacker:["m-iy1-t p-ae k-er","nn"],meatpacking:["m-iy1-t p-ae k-ih-ng","nn"],meaty:["m-iy1 t-iy","jj"],mecca:["m-eh1 k-ah","nn"],mechanic:["m-ah k-ae1 n-ih-k","nn"],mechanical:["m-ah k-ae1 n-ih k-ah-l","jj"],mechanically:["m-ah k-ae1 n-ih-k l-iy","rb"],mechanism:["m-eh1 k-ah n-ih z-ah-m","nn"],mechanistic:["m-eh k-ah n-ih1 s-t-ih-k","jj"],mechanization:["m-eh k-ah n-ah z-ey1 sh-ah-n","nn"],mechanize:["m-eh1-k-ah-n-ay-z","vb"],mechanized:["m-eh1 k-ah n-ay-z-d","jj vbn"],medal:["m-eh1 d-ah-l","nn"],medalist:["m-eh1 d-ah l-ih-s-t","nn"],medallion:["m-ah d-ae1 l-y-ah-n","nn"],meddle:["m-eh1 d-ah-l","vb"],median:["m-iy1 d-iy ah-n","jj nn"],mediate:["m-iy1 d-iy ey-t","vb"],mediation:["m-iy d-iy ey1 sh-ah-n","nn"],mediator:["m-iy1 d-iy ey t-er","nn"],medic:["m-eh1 d-ih-k","nn"],medical:["m-eh1 d-ah k-ah-l","jj"],medically:["m-eh1 d-ah-k l-iy","rb"],medicare:["m-eh1 d-ah k-eh-r","nn"],medication:["m-eh d-ah k-ey1 sh-ah-n","nn"],medicinal:["m-ah d-ih1 s-ah n-ah-l","jj nn"],medicine:["m-eh1 d-ah s-ah-n","nn"],medico:["m-eh1 d-ih k-ow","nn"],medieval:["m-ih d-iy1 v-ah-l","jj nn"],mediocre:["m-iy d-iy ow1 k-er","jj"],mediocrity:["m-iy d-iy aa1 k-r-ah t-iy","nn"],meditate:["m-eh1 d-ah t-ey-t","vb"],meditation:["m-eh d-ah t-ey1 sh-ah-n","nn"],meditative:["m-eh1 d-ah t-ey t-ih-v","jj"],medium:["m-iy1 d-iy ah-m","nn jj"],medley:["m-eh1-d l-iy","nn"],meek:["m-iy1-k","jj"],meekly:["m-iy1-k l-iy","rb"],meet:["m-iy1-t","vb vbp nn"],meeting:["m-iy1 t-ih-ng","nn vbg"],mega:["m-eh1 g-ah","jj"],megabit:["m-eh1 g-ah b-ih-t","nn"],megabyte:["m-eh1 g-ah b-ay-t","nn"],megahertz:["m-eh1 g-ah hh-er-t-s","nn"],megalomania:["m-eh g-ah l-ow m-ey1 n-iy ah","nn"],megalomaniac:["m-eh g-ah l-ow m-ey1 n-iy ae-k","nn"],megawatt:["m-eh1 g-ah w-aa-t","nn"],melamine:["m-eh1 l-ah m-iy-n","nn"],melancholy:["m-eh1 l-ah-n k-aa l-iy","nn jj"],melange:["m-eh1 l-ae-ng","nn"],melanin:["m-eh1 l-ah n-ah-n","nn"],meld:["m-eh1-l-d","vb"],melee:["m-ey1 l-ey","nn"],mellow:["m-eh1 l-ow","jj vb"],melodic:["m-ah l-aa1 d-ih-k","jj"],melodious:["m-ah l-ow1 d-iy ah-s","jj"],melodrama:["m-eh1 l-ah d-r-aa m-ah","nn"],melodramatic:["m-eh l-ah d-r-ah m-ae1 t-ih-k","jj"],melody:["m-eh1 l-ah d-iy","nn"],melon:["m-eh1 l-ah-n","nn"],melt:["m-eh1-l-t","vb vbp nn"],meltdown:["m-eh1-l-t d-aw-n","nn jj"],melted:["m-eh1-l t-ah-d","vbn jj vbd"],melting:["m-eh1-l t-ih-ng","vbg jj nn"],member:["m-eh1-m b-er","nn"],membership:["m-eh1-m b-er sh-ih-p","nn"],membrane:["m-eh1-m b-r-ey-n","nn"],memento:["m-ih m-eh1-n t-ow","nn"],memo:["m-eh1 m-ow","nn"],memoir:["m-eh1-m w-aa-r","nn"],memorabilia:["m-eh m-er ah b-iy1 l-y-ah","nn"],memorable:["m-eh1 m-er ah b-ah-l","jj"],memorandum:["m-eh m-er ae1-n d-ah-m","nn"],memorial:["m-ah m-ao1 r-iy ah-l","nn jj"],memorialize:["m-ah-m-ao1-r-iy-ah-l-ay-z","vb"],memorize:["m-eh1 m-er ay-z","vb vbp"],memory:["m-eh1 m-er iy","nn"],menace:["m-eh1 n-ah-s","nn vb"],menacing:["m-eh1 n-ah s-ih-ng","jj vbg"],mend:["m-eh1-n-d","vb"],mendacity:["m-eh-n d-ae1 s-ih t-iy","nn"],menial:["m-iy1 n-iy ah-l","jj"],menopause:["m-eh1 n-ah p-aw-z","nn"],menstrual:["m-eh1-n-s t-r-uw ah-l","jj"],menstruation:["m-eh-n-s t-r-uw ey1 sh-ah-n","jj"],menswear:["m-eh1-n-z w-ey-r","nn"],mental:["m-eh1-n t-ah-l","jj"],mentality:["m-eh-n t-ae1 l-ah t-iy","nn"],mentally:["m-eh1-n t-ah l-iy","rb nn jj"],mention:["m-eh1-n sh-ah-n","vb nn vbp"],mentor:["m-eh1-n t-ao-r","nn"],menu:["m-eh1 n-y-uw","nn"],mercenary:["m-er1 s-ah n-eh r-iy","jj"],mercer:["m-er1 s-er","nn"],merchandise:["m-er1 ch-ah-n d-ay-z","nn vb"],merchandiser:["m-er1 ch-ah-n d-ay z-er","nn"],merchant:["m-er1 ch-ah-n-t","nn jj"],merciful:["m-er1 s-ih f-ah-l","jj"],mercifully:["m-er1 s-ih f-ah l-iy","rb"],merciless:["m-er1 s-ah l-ah-s","jj"],mercilessly:["m-er1 s-ah l-ah-s l-iy","rb"],mercurial:["m-er k-y-uh1 r-iy ah-l","jj"],mercury:["m-er1 k-y-er iy","nn"],mercy:["m-er1 s-iy","nn"],mere:["m-ih1-r","jj"],merely:["m-ih1-r l-iy","rb"],merest:["m-eh1 r-ah-s-t","jjs"],merge:["m-er1-jh","vb nn vbp"],merged:["m-er1-jh-d","vbn jj vbd"],merger:["m-er1 jh-er","nn"],meridian:["m-er ih1 d-iy ah-n","nn"],merit:["m-eh1 r-ah-t","nn vb vbp"],meritless:["m-eh1 r-ih-t l-ah-s","jj"],meritorious:["m-eh r-ah t-ao1 r-iy ah-s","jj"],mermaid:["m-er1 m-ey-d","nn"],merrily:["m-eh1 r-ah l-iy","rb"],merry:["m-eh1 r-iy","jj"],mesenteric:["m-eh s-ah-n t-eh1 r-ih-k","jj"],mesh:["m-eh1-sh","nn vbp vb"],mesmerize:["m-eh1-z-m-er-ay-z","vb"],mesothelioma:["m-eh s-ah th-iy l-iy ow1 m-ah","nn"],mess:["m-eh1-s","nn vbp vb"],message:["m-eh1 s-ah-jh","nn vb"],messenger:["m-eh1 s-ah-n jh-er","nn"],messiah:["m-ah s-ay1 ah","nn"],messianic:["m-eh s-iy ae1 n-ih-k","jj"],messy:["m-eh1 s-iy","jj"],met:["m-eh1-t","vbd vbn"],metabolic:["m-eh t-ah b-aa1 l-ih-k","jj"],metabolism:["m-ah t-ae1 b-ah l-ih z-ah-m","nn"],metabolize:["m-ah t-ae1 b-ah l-ay-z","vb"],metal:["m-eh1 t-ah-l","nn"],metallic:["m-ah t-ae1 l-ih-k","jj"],metallurgical:["m-eh t-ah l-er1 jh-ih k-ah-l","jj"],metallurgy:["m-eh1 t-ah l-er jh-iy","nn"],metalworker:["m-eh1 t-ah-l w-er k-er","nn"],metalworking:["m-eh1 t-ah-l w-er k-ih-ng","nn"],metamorphic:["m-eh t-ah m-ao1-r f-ih-k","jj"],metamorphosis:["m-eh t-ah m-ao1-r f-ah s-ah-s","nn"],metaphor:["m-eh1 t-ah f-ao-r","nn"],metaphorical:["m-eh t-ah f-ao1 r-ih k-ah-l","jj"],metaphysical:["m-eh t-ah f-ih1 z-ih k-ah-l","jj"],metaphysics:["m-eh t-ah f-ih1 z-ih-k-s","nn"],mete:["m-iy1-t","vb"],meteor:["m-iy1 t-iy er","nn"],meteoric:["m-iy t-iy ao1 r-ih-k","jj"],meteorological:["m-iy t-iy ao r-ah l-aa1 jh-ih k-ah-l","jj"],meteorologist:["m-iy t-iy er aa1 l-ah jh-ih-s-t","nn"],meteorology:["m-iy t-iy er aa1 l-ah jh-iy","nn"],meter:["m-iy1 t-er","nn vb"],methadone:["m-eh1 th-ah d-ow-n","nn"],methane:["m-eh1 th-ey-n","nn"],methanol:["m-eh1 th-ah n-aa-l","nn"],method:["m-eh1 th-ah-d","nn"],methodical:["m-ah th-aa1 d-ah k-ah-l","jj"],methodically:["m-ah th-aa1 d-ih k-ah l-iy","rb"],methodological:["m-eh th-ah d-ah l-aa1 jh-ih k-ah-l","jj"],methodology:["m-eh th-ah d-aa1 l-ah jh-iy","nn"],methyl:["m-eh1 th-ah-l","nn"],methylene:["m-eh1 th-ih l-iy-n","nn"],meticulous:["m-ah t-ih1 k-y-ah l-ah-s","jj"],meticulously:["m-ah t-ih1 k-y-ah l-ah-s l-iy","rb"],metric:["m-eh1 t-r-ih-k","jj nn"],metrical:["m-eh1 t-r-ih k-ah-l","jj"],metro:["m-eh1 t-r-ow","nn"],metropolis:["m-ah t-r-aa1 p-ah l-ah-s","nn"],metropolitan:["m-eh t-r-ah p-aa1 l-ah t-ah-n","jj nn"],mettle:["m-eh1 t-ah-l","nn"],mew:["m-y-uw1","vb"],miasma:["m-iy ae1-z m-ah","nn"],mica:["m-ay1 k-ah","nn"],micro:["m-ay1 k-r-ow","jj"],microbe:["m-ay1 k-r-ow-b","nn"],microbial:["m-ay k-r-ow1 b-iy ah-l","jj"],microbiologist:["m-ay k-r-ow b-iy aa1 l-ah jh-ih-s-t","nn"],microbiology:["m-ay k-r-ow b-ay aa1 l-ah jh-iy","nn"],microchip:["m-ay1 k-r-ow ch-ih1-p","nn jj"],microcircuit:["m-ay1 k-r-ow s-er k-ah-t","nn"],microcosm:["m-ay1 k-r-ah k-aa z-ah-m","nn"],microeconomic:["m-ay k-r-ow eh k-ah n-aa1 m-ih-k","jj"],microeconomics:["m-ay k-r-ow eh k-ah n-aa1 m-ih-k-s","nn"],microfilm:["m-ay1 k-r-ah f-ih-l-m","nn"],microgram:["m-ay1 k-r-ow g-r-ae-m","nn"],micromanage:["m-ay k-r-ow m-ae1 n-ih-jh","nn"],micromanagement:["m-ay k-r-ow m-ae1 n-ih-jh m-ah-n-t","nn"],micrometer:["m-ay k-r-aa1 m-ah t-er","nn"],micron:["m-ay1 k-r-aa-n","nn"],microorganism:["m-ay k-r-ow ao1-r g-ah n-ih z-ah-m","nn"],microphone:["m-ay1 k-r-ah f-ow-n","nn"],microscope:["m-ay1 k-r-ah-s k-ow-p","nn"],microscopic:["m-ay k-r-ah s-k-aa1 p-ih-k","jj"],microwavable:["m-ay k-r-ow w-ey1 v-ah b-ah-l","jj"],microwave:["m-ay1 k-r-ah w-ey-v","nn vb"],midafternoon:["m-ih1-d ae-f t-er n-uw-n","nn"],midair:["m-ih1-d eh1-r","nn"],midcontinent:["m-ih-d k-aa1-n t-ih n-ah-n-t","jj"],midday:["m-ih1-d d-ey","nn rb"],middle:["m-ih1 d-ah-l","nn jj"],middleman:["m-ih1 d-ah-l m-ae-n","nn"],middling:["m-ih1 d-ah-l ih-ng","jj"],midland:["m-ih1-d l-ae-n-d","nn"],midlevel:["m-ih1-d l-ah v-ah-l","jj"],midmorning:["m-ih1-d m-ao-r n-ih-ng","nn"],midnight:["m-ih1-d n-ay-t","nn rb"],midpoint:["m-ih1-d p-oy-n-t","nn"],midpriced:["m-ih1-d p-r-ay1-s-t","jj"],midrange:["m-ih1 d-r-ey-n-jh","jj nn"],midseason:["m-ih1-d s-iy1 z-ah-n","nn"],midsession:["m-ih1-d s-eh sh-ah-n","nn"],midsize:["m-ih1-d s-ay-z","jj"],midsized:["m-ih1-d s-ay-z-d","jj"],midst:["m-ih1-d-s-t","nn"],midstream:["m-ih1-d s-t-r-iy-m","nn"],midsummer:["m-ih1-d s-ah1 m-er","nn"],midterm:["m-ih1-d t-er-m","jj"],midtown:["m-ih1-d t-aw-n","jj nn"],midway:["m-ih1-d w-ey","rb jj nn"],midweek:["m-ih1-d w-iy-k","jj nn"],midwest:["m-ih-d w-eh1-s-t","jjs"],midwestern:["m-ih-d w-eh1 s-t-er-n","jj"],midwife:["m-ih1-d w-ay-f","nn"],midwinter:["m-ih1-d w-ih1-n t-er","nn"],midyear:["m-ih1 d-y-ih-r","nn"],mien:["m-iy1-n","nn"],miffed:["m-ih1-f-t","jj"],might:["m-ay1-t","md nn"],"mightn't":["m-ay1-t-ah-n-t","md"],mightiest:["m-ay1 t-iy ah-s-t","jjs"],mightily:["m-ay1 t-ah l-iy","rb"],mighty:["m-ay1 t-iy","jj rb"],migraine:["m-ay1 g-r-ey-n","nn"],migrant:["m-ay1 g-r-ah-n-t","jj nn"],migrate:["m-ay1 g-r-ey-t","vb vbp"],migration:["m-ay g-r-ey1 sh-ah-n","nn"],migratory:["m-ay1 g-r-ah t-ao r-iy","jj"],mild:["m-ay1-l-d","jj"],milder:["m-ay1-l d-er","jjr"],mildew:["m-ih1-l d-uw","nn"],mildly:["m-ay1-l-d l-iy","rb"],mile:["m-ay1-l","nn"],mileage:["m-ay1 l-ah-jh","nn"],milestone:["m-ay1-l s-t-ow-n","nn"],milieu:["m-ih l-y-uh1","nn"],militancy:["m-ih1 l-ah t-ah-n s-iy","nn"],militant:["m-ih1 l-ah t-ah-n-t","nn jj"],militarism:["m-ih1 l-ah t-er ih z-ah-m","nn"],military:["m-ih1 l-ah t-eh r-iy","jj nn"],militia:["m-ah l-ih1 sh-ah","nn"],milk:["m-ih1-l-k","nn vb"],milky:["m-ih1-l k-iy","jj"],mill:["m-ih1-l","nn vb"],milled:["m-ih1-l-d","jj"],millennium:["m-ah l-eh1 n-iy ah-m","nn"],milligram:["m-ih1 l-ah g-r-ae-m","nn"],millimeter:["m-ih1 l-ah m-iy t-er","nn"],million:["m-ih1 l-y-ah-n","nn"],millionaire:["m-ih l-y-ah n-eh1-r","nn"],millionth:["m-ih1 l-y-ah-n-th","jj"],mimic:["m-ih1 m-ih-k","vb vbp"],mimicked:["m-ih1 m-ih-k-t","vbn"],min:["m-ih1-n","nn"],minaret:["m-ih n-er eh1-t","nn"],mince:["m-ih1-n-s","vb"],mincemeat:["m-ih1-n-s m-iy-t","nn"],mind:["m-ay1-n-d","nn rb vb"],mindful:["m-ay1-n-d f-ah-l","jj"],mindless:["m-ay1-n-d l-ah-s","jj"],mindset:["m-ay1-n-d s-eh-t","nn"],mine:["m-ay1-n","nn vb prp vbp"],minefield:["m-ay1-n f-iy-l-d","nn"],miner:["m-ay1 n-er","nn"],mineral:["m-ih1 n-er ah-l","nn jj"],mineralogy:["m-ih n-er aa1 l-ah jh-iy","nn"],mineworker:["m-ay1-n w-er k-er","nn"],mingle:["m-ih1-ng g-ah-l","vb vbp"],mingled:["m-ih1-ng g-ah-l-d","vbd vbn jj"],miniature:["m-ih1 n-iy ah ch-uh-r","jj nn"],miniaturize:["m-ih1-n-ih-ch-er-ay-z","vb"],minicar:["m-ih1 n-iy k-aa-r","nn"],minimal:["m-ih1 n-ah m-ah-l","jj"],minimalism:["m-ih1 n-ah m-ah l-ih z-ah-m","nn"],minimalist:["m-ih1 n-ah m-ah l-ih-s-t","jj nn"],minimally:["m-ih1 n-ah m-ah-l iy","rb"],minimill:["m-ih1 n-iy m-aa-l","nn"],minimize:["m-ih1 n-ah m-ay-z","vb"],minimum:["m-ih1 n-ah m-ah-m","jj nn"],minion:["m-ih1 n-y-ah-n","nn"],miniscule:["m-ih1 n-ih s-k-y-uw-l","jj nn"],miniseries:["m-ih1 n-ih s-eh r-iy-z","nn"],miniskirt:["m-ih1 n-iy s-k-er-t","nn"],minister:["m-ih1 n-ah s-t-er","nn"],ministerial:["m-ih n-ih s-t-iy1 r-iy ah-l","jj"],ministration:["m-ih n-ah-s t-r-ey1 sh-ah-n","nn"],ministry:["m-ih1 n-ah-s t-r-iy","nn"],minivan:["m-ih1 n-iy v-ae1-n","nn"],mink:["m-ih1-ng-k","nn"],minor:["m-ay1 n-er","jj nn"],minority:["m-ay n-ao1 r-ah t-iy","nn jj"],minstrel:["m-ih1-n s-t-r-ah-l","nn"],mint:["m-ih1-n-t","nn vb"],minter:["m-ih1-n t-er","nn"],minuet:["m-ih n-y-ah-w eh1-t","nn"],minus:["m-ay1 n-ah-s","cc in jj nn"],minuscule:["m-ih1 n-ah s-k-y-uw-l","jj"],minute:["m-ih1 n-ah-t","nn jj"],minutely:["m-ih1 n-ah-t l-iy","rb"],miracle:["m-ih1 r-ah k-ah-l","nn"],miraculous:["m-er ae1 k-y-ah l-ah-s","jj"],miraculously:["m-er ae1 k-y-ah l-ah-s l-iy","rb"],mire:["m-ay1-r","nn vb"],mired:["m-ay1-r-d","vbn jj"],mirror:["m-ih1 r-er","nn vbp vb"],mirth:["m-er1-th","nn"],misadventure:["m-ih-s ah-d v-eh1-n ch-er","nn"],misallocate:["m-ih-s-ae1-l-ah-k-ey-t","vb"],misanthrope:["m-ih1 s-ah-n th-r-ow-p","nn"],misapplication:["m-ih-s ae p-l-ah k-ey1 sh-ah-n","nn"],misapplied:["m-ih-s ah p-l-ay1-d","vbn"],misapply:["m-ih-s-ah-p-l-ay1","vb"],misapprehension:["m-ih-s ae p-r-iy hh-eh1-n sh-ah-n","nn"],misappropriate:["m-ih-s-ah-p-r-ow1-p-r-iy-ey-t","vb"],misappropriation:["m-ih-s ah p-r-ow p-r-iy ey1 sh-ah-n","nn"],misbegotten:["m-ih-s b-ah g-aa1 t-ah-n","jj"],misbehave:["m-ih-s-b-ah-hh-ey1-v","vb"],misbehavior:["m-ih-s b-ah hh-ey1 v-y-er","nn"],miscalculate:["m-ih-s-k-ae1-l-k-y-ah-l-ey-t","vb"],miscalculation:["m-ih-s k-ae1-l k-y-ah l-ey1 sh-ah-n","nn"],miscarriage:["m-ih-s k-eh1 r-ih jh-ih","nn"],miscellaneous:["m-ih s-ah l-ey1 n-iy ah-s","jj"],miscellany:["m-ih1 s-ah l-ey n-iy","nn"],mischarge:["m-ih-s-ch-aa1-r-jh","vb"],mischarging:["m-ih-s ch-aa1-r jh-ih-ng","nn"],mischief:["m-ih1-s ch-ah-f","nn"],mischievous:["m-ih1-s ch-ah v-ah-s","jj"],misconception:["m-ih-s k-ah-n s-eh1-p sh-ah-n","nn"],misconduct:["m-ih-s k-aa1-n d-ah-k-t","nn"],misconstrue:["m-ih-s-k-ah-n-s-t-r-uw1","vb"],miscount:["m-ih1-s k-aw1-n-t","nn"],miscreant:["m-ih1-s k-r-iy ah-n-t","jj nn"],miscue:["m-ih1-s k-y-uw","nn"],misdeed:["m-ih-s d-iy1-d","nn"],misdemeanor:["m-ih-s d-ah m-iy1 n-er","nn"],miserable:["m-ih1 z-er ah b-ah-l","jj"],miserably:["m-ih1 z-er ah b-l-iy","rb"],miserly:["m-ay1 z-er l-iy","jj"],misery:["m-ih1 z-er iy","nn"],misfit:["m-ih1-s f-ih-t","nn"],misfortune:["m-ih-s f-ao1-r ch-ah-n","nn"],misgiving:["m-ih-s g-ih1 v-ih-ng","nn"],misguide:["m-ih-s-g-ay1-d","vb"],misguided:["m-ih-s g-ay1 d-ih-d","jj vbn"],mishandle:["m-ih-s-hh-ae1-n-d-ah-l","vb"],mishandled:["m-ih-s hh-ae1-n d-ah-l-d","vbd jj vbn"],mishap:["m-ih1-s hh-ae-p","nn"],misinform:["m-ih-s-ih-n-f-ao1-r-m","vb"],misinformation:["m-ih-s ih-n f-er m-ey1 sh-ah-n","nn"],misinterpret:["m-ih-s ih-n t-er1 p-r-ah-t","vb vbp"],misinterpretation:["m-ih-s ih-n t-er p-r-ah t-ey1 sh-ah-n","nn"],misjudge:["m-ih-s-jh-ah1-jh","vb"],misjudgment:["m-ih-s jh-ah1-jh m-ah-n-t","nn"],mislaid:["m-ih-s l-ey1-d","vbn"],mislead:["m-ih-s-l-iy1-d","vb"],misleading:["m-ih-s l-iy1 d-ih-ng","jj vbg"],misleadingly:["m-ih-s l-iy1 d-ih-ng l-iy","rb"],misled:["m-ih-s l-eh1-d","vbd vbn"],mismanage:["m-ih-s-m-ae1-n-ih-jh","vb"],mismanagement:["m-ih-s m-ae1 n-ih-jh m-ah-n-t","nn"],mismatch:["m-ih-s m-ae1-ch","nn vb"],misnomer:["m-ih-s n-ow1 m-er","nn"],misperceive:["m-ih-s-p-er-s-iy1-v","vb"],misperception:["m-ih-s p-er s-eh1-p sh-ah-n","nn"],misplace:["m-ih-s p-l-ey1-s","vb"],misprice:["m-ih-s-p-r-ay1-s","vb"],misquote:["m-ih-s-k-w-ow1-t","vb"],misread:["m-ih-s r-iy1-d","vbd"],misreading:["m-ih-s r-iy1 d-ih-ng","nn"],misrepresent:["m-ih-s r-eh p-r-ah z-eh1-n-t","vb"],misrepresentation:["m-ih-s r-eh p-r-ih z-eh-n t-ey1 sh-ah-n","nn"],miss:["m-ih1-s","vb vbp nn"],missed:["m-ih1-s-t","vbd vbn jj"],misshapen:["m-ih-s sh-ey1 p-ah-n","jj"],missile:["m-ih1 s-ah-l","nn"],missing:["m-ih1 s-ih-ng","vbg jj"],mission:["m-ih1 sh-ah-n","nn"],missionary:["m-ih1 sh-ah-n eh r-iy","jj nn"],missive:["m-ih1 s-ih-v","nn"],misspell:["m-ih-s-s-p-eh1-l","vb"],misspent:["m-ih-s s-p-eh1-n-t","vbn"],misstate:["m-ih-s-s-t-ey1-t","vb"],misstatement:["m-ih-s t-ey1-t m-ah-n-t","nn"],misstep:["m-ih-s s-t-eh1-p","nn"],missy:["m-ih1 s-iy","nn"],mist:["m-ih1-s-t","nn"],mistake:["m-ih s-t-ey1-k","nn vb"],mistaken:["m-ih s-t-ey1 k-ah-n","vbn jj"],mistakenly:["m-ih s-t-ey1 k-ah-n l-iy","rb"],mister:["m-ih1 s-t-er","nn"],mistletoe:["m-ih1 s-ah-l t-ow","nn"],mistook:["m-ih s-t-uh1-k","vbd"],mistreat:["m-ih-s t-r-iy1-t","vb"],mistreatment:["m-ih-s t-r-iy1-t m-ah-n-t","nn"],mistress:["m-ih1-s t-r-ah-s","nn"],mistrial:["m-ih-s t-r-ay1 ah-l","nn"],mistrust:["m-ih-s t-r-ah1-s-t","nn vb"],mistrusted:["m-ih-s t-r-ah1 s-t-ih-d","vbd vbn jj"],misty:["m-ih1 s-t-iy","jj"],misunderstand:["m-ih-s ah-n d-er s-t-ae1-n-d","vb"],misunderstanding:["m-ih-s ah-n d-er s-t-ae1-n d-ih-ng","nn"],misunderstood:["m-ih-s ah-n d-er s-t-uh1-d","vbn vbd"],misuse:["m-ih-s y-uw1-z","nn vb vbp"],mite:["m-ay1-t","nn"],miter:["m-ay1 t-er","vb"],mitigate:["m-ih1 t-ah g-ey-t","vb"],mitigating:["m-ih1 t-ah g-ey t-ih-ng","vbg jj"],mitigation:["m-ih t-ih g-ey1 sh-ah-n","nn"],mitral:["m-ay1 t-r-ah-l","jj"],mitre:["m-ih1 t-r-iy","nn"],mitt:["m-ih1-t","nn"],mitten:["m-ih1 t-ah-n","nn"],mix:["m-ih1-k-s","nn vbp vb"],mixed:["m-ih1-k-s-t","vbn vbd jj"],mixer:["m-ih1-k s-er","nn"],mixture:["m-ih1-k-s ch-er","nn"],moan:["m-ow1-n","vb"],moat:["m-ow1-t","nn"],mob:["m-aa1-b","nn"],mobile:["m-ow1 b-ah-l","jj"],mobility:["m-ow b-ih1 l-ah t-iy","nn"],mobilization:["m-ow b-ah l-ah z-ey1 sh-ah-n","nn"],mobilize:["m-ow1 b-ah l-ay-z","vb"],mobster:["m-aa1-b s-t-er","nn"],mock:["m-aa1-k","jj vbp vb"],mockery:["m-aa1 k-er iy","nn"],mocking:["m-aa1 k-ih-ng","vbg jj"],mode:["m-ow1-d","nn"],model:["m-aa1 d-ah-l","nn vb"],modeled:["m-aa1 d-ah-l-d","vbn vbd jj"],modeling:["m-aa1 d-ah-l ih-ng","nn jj vbg"],modem:["m-ow1 d-ah-m","nn"],moderate:["m-aa1 d-er ah-t","jj vbp vb"],moderately:["m-aa1 d-er ah-t l-iy","rb"],moderating:["m-aa1 d-er ey t-ih-ng","vbg jj"],moderation:["m-aa d-er ey1 sh-ah-n","nn"],moderator:["m-aa1 d-er ey t-er","nn"],modern:["m-aa1 d-er-n","jj nn"],modernism:["m-aa1 d-er n-ih z-ah-m","nn"],modernist:["m-aa1 d-er n-ah-s-t","jj nn"],modernity:["m-aa d-er1 n-ah t-iy","nn"],modernization:["m-aa d-er n-ah z-ey1 sh-ah-n","nn"],modernize:["m-aa1 d-er n-ay-z","vb"],modernized:["m-aa1 d-er n-ay-z-d","vbn jj vbd"],modest:["m-aa1 d-ah-s-t","jj"],modestly:["m-aa1 d-ah-s-t l-iy","rb"],modesty:["m-aa1 d-ah s-t-iy","nn"],modicum:["m-aa1 d-ih k-ah-m","nn"],modification:["m-aa d-ah f-ah k-ey1 sh-ah-n","nn"],modified:["m-aa1 d-ah f-ay-d","vbn jj vbd"],modifies:["m-aa1 d-ah f-ay-z","vbz"],modify:["m-aa1 d-ah f-ay","vb vbp"],modular:["m-aa1 jh-ah l-er","jj"],modulate:["m-ao1 jh-y-uw l-ey-t","vbp vb"],modulation:["m-aa jh-ah l-ey1 sh-ah-n","nn"],module:["m-aa1 jh-uw-l","nn"],mogul:["m-ow1 g-ah-l","nn"],moist:["m-oy1-s-t","jj"],moisten:["m-oy1-s-ah-n","vb"],moistened:["m-oy1 s-ah-n-d","jj vbd"],moisture:["m-oy1-s ch-er","nn"],moisturizer:["m-oy1-s ch-er ay z-er","nn"],molasses:["m-ah l-ae1 s-ah-z","nn"],mold:["m-ow1-l-d","nn vb vbp"],moldable:["m-ow1-l d-ah b-ah-l","jj"],molded:["m-ow1-l d-ah-d","vbn jj vbd"],molding:["m-ow1-l d-ih-ng","nn vbg"],moldy:["m-ow1-l d-iy","jj"],mole:["m-ow1-l","nn"],molecular:["m-ah l-eh1 k-y-ah l-er","jj"],molecule:["m-aa1 l-ah k-y-uw-l","nn"],molehill:["m-ow1-l hh-ih-l","nn"],molest:["m-ah l-eh1-s-t","vb"],mollified:["m-aa1 l-ah f-ay-d","vbn vbd"],mollify:["m-aa1 l-ah f-ay","vb"],mollycoddle:["m-aa1 l-iy k-aa d-ah-l","nn"],molt:["m-ow1-l-t","vb"],molten:["m-ow1-l t-ah-n","jj"],molton:["m-ow1-l t-ah-n","nn"],mom:["m-aa1-m","nn"],moment:["m-ow1 m-ah-n-t","nn"],momentarily:["m-ow m-ah-n t-eh1 r-ah l-iy","rb"],momentary:["m-ow1 m-ah-n t-eh r-iy","jj"],momentous:["m-ow m-eh1-n t-ah-s","jj"],momentum:["m-ow m-eh1-n t-ah-m","nn"],monarch:["m-aa1 n-aa-r-k","nn"],monarchy:["m-aa1 n-aa-r k-iy","nn"],monastery:["m-aa1 n-ah s-t-eh r-iy","nn"],monastic:["m-ah n-ae1 s-t-ih-k","jj"],monetary:["m-aa1 n-ah t-eh r-iy","jj"],money:["m-ah1 n-iy","nn"],moneyed:["m-ah1 n-iy-d","jj"],moneymaker:["m-ah1 n-iy m-ey k-er","nn"],moneymaking:["m-ah1 n-iy m-ey k-ih-ng","jj nn"],monied:["m-ah1 n-iy-d","jj"],moniker:["m-aa1 n-ih k-er","nn"],monitor:["m-aa1 n-ah t-er","vb nn vbp"],monitored:["m-aa1 n-ah t-er-d","vbn vbd jj"],monk:["m-ah1-ng-k","nn"],monkey:["m-ah1-ng k-iy","nn"],mono:["m-ow1 n-ow","jj nn"],monochromatic:["m-aa n-ah k-r-ow m-ae1 t-ih-k","jj"],monochrome:["m-aa1 n-ah k-r-ow-m","jj"],monoclonal:["m-aa n-ah k-l-ow1 n-ah-l","jj"],monogamous:["m-ah n-aa1 g-ah m-ah-s","jj"],monogrammed:["m-aa1 n-ah g-r-ae-m-d","jj"],monograph:["m-aa1 n-ah g-r-ae-f","nn"],monohull:["m-aa1 n-ah hh-ah-l","nn"],monolith:["m-aa1 n-ah l-ih-th","nn"],monolithic:["m-aa n-ah l-ih1 th-ih-k","jj"],monologue:["m-aa1 n-ah l-ao-g","nn"],monomer:["m-aa1 n-ah m-er","nn"],monophonic:["m-aa n-ah f-aa1 n-ih-k","jj"],monopolistic:["m-ah n-aa p-ah l-ih1 s-t-ih-k","jj"],monopolization:["m-ah n-aa p-ah l-ih z-ey1 sh-ah-n","nn"],monopolize:["m-ah n-aa1 p-ah l-ay-z","vb"],monopoly:["m-ah n-aa1 p-ah l-iy","nn"],monotone:["m-aa1 n-ah t-ow-n","jj nn"],monotonous:["m-ah n-aa1 t-ah-n ah-s","jj"],monotony:["m-ah n-aa1 t-ah-n iy","nn"],monsoon:["m-aa-n s-uw1-n","nn"],monster:["m-aa1-n s-t-er","nn"],monstrosity:["m-aa-n-s t-r-aa1 s-ah t-iy","nn"],monstrous:["m-aa1-n-s t-r-ah-s","jj"],montage:["m-aa-n t-aa1-zh","nn"],month:["m-ah1-n-th","nn"],monthlong:["m-ah1-n th-l-ao-ng","jj"],monthly:["m-ah1-n-th l-iy","jj nn rb"],monument:["m-aa1 n-y-uw m-ah-n-t","nn"],monumental:["m-aa n-y-ah m-eh1-n t-ah-l","jj"],mood:["m-uw1-d","nn"],moody:["m-uw1 d-iy","jj"],moon:["m-uw1-n","nn vb"],moonlight:["m-uw1-n l-ay-t","nn vb"],moonlike:["m-uw1-n l-ay-k","jj"],moonlit:["m-uw1-n l-ih-t","jj"],moor:["m-uh1-r","vb"],mooring:["m-uh1 r-ih-ng","nn"],moot:["m-uw1-t","jj"],mop:["m-aa1-p","vb nn"],moraine:["m-er ey1-n","nn"],moral:["m-ao1 r-ah-l","jj nn"],morale:["m-er ae1-l","nn"],moralism:["m-ao1 r-ah l-ih z-ah-m","nn"],moralist:["m-ao1 r-ah l-ih-s-t","nn"],moralistic:["m-ao r-ah l-ih1 s-t-ih-k","jj"],morality:["m-er ae1 l-ah t-iy","nn"],moralize:["m-ao1-r-ah-l-ay-z","vb"],moralizing:["m-ao1 r-ah l-ay z-ih-ng","vbg jj"],morally:["m-ao1 r-ah l-iy","rb"],morass:["m-er ae1-s","nn"],moratorium:["m-ao r-ah t-ao1 r-iy ah-m","nn"],morbid:["m-ao1-r b-ah-d","jj"],morbidity:["m-ao-r b-ih1 d-ah t-iy","nn"],more:["m-ao1-r","jjr rbr nn jj rb rp"],moreover:["m-ao r-ow1 v-er","rb"],morgue:["m-ao1-r-g","nn"],moribund:["m-ao1 r-ah b-ah-n-d","jj"],morning:["m-ao1-r n-ih-ng","nn"],morose:["m-er ow1-s","jj"],morphine:["m-ao1-r f-iy-n","nn"],morphological:["m-ao-r f-ah l-aa1 jh-ih k-ah-l","jj"],morphology:["m-ao-r f-aa1 l-ah jh-iy","nn"],morrow:["m-aa1 r-ow","nn"],morsel:["m-ao1-r s-ah-l","nn"],mortal:["m-ao1-r t-ah-l","jj nn"],mortality:["m-ao-r t-ae1 l-ah t-iy","nn"],mortally:["m-ao1-r t-ah l-iy","rb"],mortar:["m-ao1-r t-er","nn"],mortgage:["m-ao1-r g-ah-jh","nn vb"],mortis:["m-ao1-r t-ih-s","nn"],mosaic:["m-ow z-ey1 ih-k","nn"],mosey:["m-ow1 z-iy","vb"],mosque:["m-aa1-s-k","nn"],mosquito:["m-ah s-k-iy1 t-ow","nn"],moss:["m-ao1-s","nn"],most:["m-ow1-s-t","rbs jj nn rb jjs"],mostly:["m-ow1-s-t l-iy","rb jj"],motel:["m-ow t-eh1-l","nn"],moth:["m-ao1-th","nn"],mothball:["m-ao1-th b-ao-l","nn vb jj"],mothballing:["m-ao1-th b-ao1 l-ih-ng","nn"],mother:["m-ah1 dh-er","nn vb"],motherhood:["m-ah1 dh-er hh-uh-d","nn"],motherland:["m-ah1 dh-er l-ae-n-d","nn"],motherly:["m-ah1 dh-er l-iy","jj"],motif:["m-ow t-iy1-f","nn"],motion:["m-ow1 sh-ah-n","nn vb"],motionless:["m-ow1 sh-ah-n l-ah-s","jj"],motivate:["m-ow1 t-ah v-ey-t","vb vbp"],motivated:["m-ow1 t-ah v-ey t-ah-d","vbn vbd jj"],motivating:["m-ow1 t-ah v-ey t-ih-ng","vbg jj"],motivation:["m-ow t-ah v-ey1 sh-ah-n","nn"],motive:["m-ow1 t-ih-v","nn jj"],motley:["m-aa1-t l-iy","jj"],motor:["m-ow1 t-er","nn jj vb"],motorbike:["m-ow1 t-er b-ay-k","nn"],motorcade:["m-ow1 t-er k-ey-d","nn"],motorcycle:["m-ow1 t-er s-ay k-ah-l","nn"],motorist:["m-ow1 t-er ih-s-t","nn"],motorize:["m-ow1-t-er-ay-z","vb"],motorized:["m-ow1 t-er ay-z-d","vbn jj"],mottle:["m-aa1 t-ah-l","vb nn"],mottled:["m-aa1 t-ah-l-d","vbn jj"],motto:["m-aa1 t-ow","nn"],mould:["m-ow1-l-d","vb"],mound:["m-aw1-n-d","nn"],mount:["m-aw1-n-t","vb nn vbp"],mountain:["m-aw1-n t-ah-n","nn"],mountainous:["m-aw1-n t-ah n-ah-s","jj"],mountainside:["m-aw1-n t-ah-n s-ay-d","nn"],mountaintop:["m-aw1-n t-ah-n t-aa-p","nn"],mounted:["m-aw1-n t-ah-d","vbn jj vbd"],mounting:["m-aw1-n t-ih-ng","vbg jj nn"],mourn:["m-ao1-r-n","vb"],mourner:["m-ao1-r n-er","nn"],mournful:["m-ao1-r-n f-ah-l","jj"],mouse:["m-aw1-s","nn"],mousetrap:["m-aw1-s t-r-ae-p","nn"],mousse:["m-uw1-s","nn"],moustache:["m-ah1 s-t-ae-sh","nn"],mouth:["m-aw1-th","nn vb"],mouthful:["m-aw1-th f-uh-l","nn"],mouthpiece:["m-aw1-th p-iy-s","nn"],movable:["m-uw1 v-ah b-ah-l","jj nn"],move:["m-uw1-v","nn vbp vb"],movement:["m-uw1-v m-ah-n-t","nn"],mover:["m-uw1 v-er","nn"],movie:["m-uw1 v-iy","nn"],moviegoer:["m-uw1 v-iy g-ow er","nn"],moving:["m-uw1 v-ih-ng","vbg jj nn"],movingly:["m-uw1 v-ih-ng l-iy","rb"],mow:["m-ow1","vb"],mower:["m-ow1 er","nn"],moxie:["m-aa1-k s-iy","nn"],much:["m-ah1-ch","jj dt nn rb"],muck:["m-ah1-k","nn vb"],mucky:["m-ah1 k-iy","jj"],mucosa:["m-y-uw k-ow1 s-ah","nn"],mucus:["m-y-uw1 k-ah-s","nn"],mud:["m-ah1-d","nn"],muddied:["m-ah1 d-iy-d","vbn jj"],muddle:["m-ah1 d-ah-l","nn vb"],muddleheaded:["m-ah1 d-ah-l hh-eh d-ah-d","jj"],muddy:["m-ah1 d-iy","jj"],mudslinging:["m-ah1-d s-l-ih ng-ih-ng","nn"],mudwagon:["m-ah1-d w-ae g-ah-n","nn"],muff:["m-ah1-f","nn"],muffin:["m-ah1 f-ah-n","nn"],muffle:["m-ah1-f-ah-l","vb"],muffled:["m-ah1 f-ah-l-d","jj vbd vbn"],muffler:["m-ah1-f l-er","nn"],mug:["m-ah1-g","nn"],mugged:["m-ah1-g-d","vbn"],mugger:["m-ah1 g-er","nn"],mugging:["m-ah1 g-ih-ng","nn"],muggy:["m-ah1 g-iy","jj"],mulatto:["m-ah l-aa1 t-ow","nn"],mulch:["m-ah1-l-ch","nn vb"],mule:["m-y-uw1-l","nn"],mull:["m-ah1-l","vb"],mullah:["m-ah1 l-ah","nn"],multicolored:["m-ah-l t-iy k-ah1 l-er-d","jj"],multifaceted:["m-ah-l t-iy f-ae1 s-ah t-ih-d","jj"],multilateral:["m-ah-l t-ih l-ae1 t-er ah-l","jj"],multilayered:["m-ah-l t-iy l-ey1 er-d","jj"],multilevel:["m-ah-l t-ay l-eh1 v-ah-l","jj"],multilingual:["m-ah-l t-iy l-ih1-ng w-ah-l","jj"],multinational:["m-ah-l t-ay n-ae1 sh-ah n-ah-l","jj"],multipart:["m-ah1-l t-iy p-aa-r-t","jj"],multiparty:["m-ah1-l t-iy p-aa-r t-iy","nn jj"],multiple:["m-ah1-l t-ah p-ah-l","jj nn"],multiplexer:["m-ah1-l t-iy p-l-eh-k s-er","nn"],multiplication:["m-ah-l t-ah p-l-ah k-ey1 sh-ah-n","nn"],multiplicity:["m-ah-l t-ah p-l-ih1 s-ih t-iy","nn"],multiplied:["m-ah1-l t-ah p-l-ay-d","vbn vbd"],multiplies:["m-ah1-l t-ah p-l-ay-z","vbz"],multiply:["m-ah1-l t-ah p-l-ay","vb vbp"],multipurpose:["m-ah-l t-iy p-er1 p-ah-s","jj"],multistate:["m-ah1-l t-iy s-t-ey1-t","nn"],multitask:["m-ah1-l-t-iy-t-ae-s-k","vb"],multitude:["m-ah1-l t-ah t-uw-d","nn"],multivalve:["m-ah1-l t-iy v-ae-l-v","jj"],multiyear:["m-ah1-l t-iy y-iy1-r","jj"],mum:["m-ah1-m","jj nn"],mumble:["m-ah1-m b-ah-l","nn vb"],mumbo:["m-ah1-m b-ow","nn"],mummified:["m-ah1 m-ih f-ay-d","vbn"],mummify:["m-ah1-m-ah-f-ay","vb"],mummy:["m-ah1 m-iy","nn"],munch:["m-ah1-n-ch","vb"],mundane:["m-ah-n d-ey1-n","jj"],municipal:["m-y-uw n-ih1 s-ah p-ah-l","jj nn"],municipality:["m-y-uw n-ih s-ah p-ae1 l-ah t-iy","nn"],municipally:["m-y-uw n-ih1 s-ih p-ah l-iy","rb"],munition:["m-y-uw n-ih1 sh-ah-n","nn"],mural:["m-y-uh1 r-ah-l","nn"],murder:["m-er1 d-er","nn vb"],murdered:["m-er1 d-er-d","vbn vbd jj"],murderer:["m-er1 d-er er","nn"],murdering:["m-er1 d-er ih-ng","vbg jj"],murderous:["m-er1 d-er ah-s","jj"],murkier:["m-er1 k-iy er","jjr"],murky:["m-er1 k-iy","jj"],murmur:["m-er1 m-er","nn vb"],muscat:["m-ah1-s k-ae-t","jj"],muscle:["m-ah1 s-ah-l","nn vb"],muscular:["m-ah1-s k-y-ah l-er","jj"],musculature:["m-ah1-s k-y-ah l-ah ch-er","nn"],muse:["m-y-uw1-z","nn vb"],museum:["m-y-uw z-iy1 ah-m","nn"],mush:["m-ah1-sh","nn"],mushroom:["m-ah1-sh r-uw-m","nn vbp vb"],mushrooming:["m-ah1-sh r-uh m-ih-ng","nn"],mushy:["m-ah1 sh-iy","jj"],music:["m-y-uw1 z-ih-k","nn"],musical:["m-y-uw1 z-ih k-ah-l","jj nn"],musicality:["m-y-uw z-ih k-ae1 l-ah t-iy","nn"],musically:["m-y-uw1 z-ih-k l-iy","rb"],musician:["m-y-uw z-ih1 sh-ah-n","nn"],musk:["m-ah1-s-k","nn"],musket:["m-ah1-s k-ah-t","nn"],mussel:["m-ah1 s-ah-l","nn"],must:["m-ah1-s-t","md"],"mustn't":["m-ah1-s-t-ah-n-t","md"],mustache:["m-ah1 s-t-ae-sh","nn"],mustached:["m-ah1 s-t-ae-sh-t","jj"],mustachioed:["m-ah s-t-ae1 sh-iy ow-d","jj"],mustard:["m-ah1 s-t-er-d","nn jj vb"],muster:["m-ah1 s-t-er","vb nn"],mutant:["m-y-uw1 t-ah-n-t","jj"],mutate:["m-y-uw1 t-ey-t","vb"],mutation:["m-y-uw t-ey1 sh-ah-n","nn"],mute:["m-y-uw1-t","jj vb"],muted:["m-y-uw1 t-ih-d","vbn vbd jj"],mutilate:["m-y-uw1-t-ah-l-ey-t","vb"],mutilated:["m-y-uw1 t-ah l-ey t-ah-d","vbn jj"],mutilation:["m-y-uw t-ah l-ey1 sh-ah-n","nn"],mutineer:["m-y-uw t-ah n-ih1-r","nn"],mutinous:["m-y-uw1 t-ah n-ah-s","jj"],mutiny:["m-y-uw1 t-ah n-iy","nn"],mutt:["m-ah1-t","nn"],mutter:["m-ah1 t-er","vb"],mutton:["m-ah1 t-ah-n","nn"],mutual:["m-y-uw1 ch-ah w-ah-l","jj"],mutually:["m-y-uw1 ch-uw ah l-iy","rb"],muzzle:["m-ah1 z-ah-l","nn vb"],my:["m-ay1","prp$"],mycology:["m-ay k-aa1 l-ah jh-iy","nn"],myopia:["m-ay ow1 p-iy ah","nn"],myopic:["m-ay aa1 p-ih-k","jj"],myriad:["m-ih1 r-iy ah-d","jj nn"],myrrh:["m-er1","nn"],myrtle:["m-er1 t-ah-l","nn"],myself:["m-ay s-eh1-l-f","prp"],mysterious:["m-ih s-t-ih1 r-iy ah-s","jj"],mysteriously:["m-ih s-t-ih1 r-iy ah-s l-iy","rb"],mystery:["m-ih1 s-t-er iy","nn"],mystic:["m-ih1 s-t-ih-k","jj nn"],mystical:["m-ih1 s-t-ih k-ah-l","jj"],mysticism:["m-ih1 s-t-ih s-ih z-ah-m","nn"],mystified:["m-ih1 s-t-ah f-ay-d","vbn"],mystify:["m-ih1-s-t-ah-f-ay","vb"],mystique:["m-ih s-t-iy1-k","nn"],myth:["m-ih1-th","nn"],mythic:["m-ih1 th-ih-k","jj"],mythical:["m-ih1 th-ah k-ah-l","jj"],mythological:["m-ih th-ah l-aa1 jh-ih k-ah-l","jj"],mythology:["m-ah th-aa1 l-ah jh-iy","nn"],nab:["n-ae1-b","vb"],nadir:["n-ey1 d-er","nn"],nag:["n-ae1-g","vb"],nagging:["n-ae1 g-ih-ng","jj vbg"],nail:["n-ey1-l","nn rb vb"],naive:["n-ay iy1-v","jj nn"],naively:["n-aa iy1-v l-iy","rb"],naivete:["n-aa iy v-ah t-ey1","nn"],naked:["n-ey1 k-ah-d","jj"],name:["n-ey1-m","nn vb uh vbp"],named:["n-ey1-m-d","vbn vbd jj"],nameless:["n-ey1-m l-ah-s","jj"],namely:["n-ey1-m l-iy","rb"],nameplate:["n-ey1-m p-l-ey-t","nn"],namesake:["n-ey1-m s-ey-k","nn"],nanny:["n-ae1 n-iy","nn"],nap:["n-ae1-p","nn vb vbp"],napkin:["n-ae1-p k-ih-n","nn"],narco:["n-aa1-r k-ow","nn"],narcolepsy:["n-aa1-r k-ah l-eh-p s-iy","nn"],narcotic:["n-aa-r k-aa1 t-ih-k","jj"],narrate:["n-eh1-r-ey-t","vb"],narration:["n-eh r-ey1 sh-ah-n","nn"],narrative:["n-ae1 r-ah t-ih-v","nn jj"],narrator:["n-eh1 r-ey t-er","nn"],narrow:["n-eh1 r-ow","jj vb"],narrower:["n-eh1 r-ow er","jjr"],narrowest:["n-eh1 r-ow ah-s-t","jjs"],narrowly:["n-eh1 r-ow l-iy","rb"],narrowness:["n-eh1 r-ow n-ah-s","nn"],nary:["n-eh1 r-iy","dt pdt"],nasal:["n-ey1 z-ah-l","jj"],nascent:["n-ey1 s-ah-n-t","jj"],nastier:["n-ae1 s-t-iy er","jjr"],nastiest:["n-ae1 s-t-iy ah-s-t","jjs"],nasty:["n-ae1 s-t-iy","jj"],natal:["n-ey1 t-ah-l","jj"],nation:["n-ey1 sh-ah-n","nn"],national:["n-ae1 sh-ah n-ah-l","jj nn rb"],nationalism:["n-ae1 sh-ah-n ah l-ih z-ah-m","nn"],nationalist:["n-ae1 sh-ah-n ah l-ah-s-t","jj nn"],nationalistic:["n-ae sh-ah-n ah l-ih1 s-t-ih-k","jj"],nationality:["n-ae sh-ah n-ae1 l-ah t-iy","nn"],nationalization:["n-ae sh-ah-n ah l-ah z-ey1 sh-ah-n","nn"],nationalize:["n-ae1 sh-ah-n ah l-ay-z","vb"],nationalized:["n-ae1 sh-ah-n ah l-ay-z-d","vbd vbn jj"],nationally:["n-ae1 sh-ah-n ah l-iy","rb"],nationhood:["n-ey1 sh-ah-n hh-uh-d","nn"],nationwide:["n-ey1 sh-ah-n w-ay1-d","jj rb"],native:["n-ey1 t-ih-v","jj nn"],nattily:["n-ae1 t-ah l-iy","rb"],natty:["n-ae1 t-iy","jj"],natural:["n-ae1 ch-er ah-l","jj nn"],naturalism:["n-ae1 ch-er ah l-ih z-ah-m","nn"],naturalist:["n-ae1 ch-er ah l-ah-s-t","nn"],naturalistic:["n-ae ch-er ah l-ih1 s-t-ih-k","jj"],naturalize:["n-ae1-ch-er-ah-l-ay-z","vb"],naturalized:["n-ae1 ch-er ah l-ay-z-d","vbn jj"],naturally:["n-ae1 ch-er ah l-iy","rb"],nature:["n-ey1 ch-er","nn jj"],natured:["n-ey1 ch-er-d","jj"],naught:["n-ao1-t","nn"],naughty:["n-ao1 t-iy","jj"],nausea:["n-ao1 z-iy ah","nn"],nauseate:["n-ao1-z-iy-ey-t","vb"],nauseated:["n-ao1 z-iy ey t-ah-d","vbn jj"],nautical:["n-ao1 t-ah k-ah-l","jj"],naval:["n-ey1 v-ah-l","jj"],navel:["n-ey1 v-ah-l","nn"],navigable:["n-ae1 v-ah g-ah b-ah-l","jj"],navigate:["n-ae1 v-ah g-ey-t","vb"],navigation:["n-ae1 v-ah g-ey1 sh-ah-n","nn"],navigational:["n-ae v-ah g-ey1 sh-ah n-ah-l","jj"],navigator:["n-ae1 v-ah g-ey t-er","nn"],navy:["n-ey1 v-iy","nn jj"],nay:["n-ey1","rb"],naysayer:["n-ey s-ey1 er","nn"],near:["n-ih1-r","in rb vb jj"],nearby:["n-ih1-r b-ay1","jj rb"],nearer:["n-ih1 r-er","jjr in rbr"],nearest:["n-ih1 r-ah-s-t","jjs rbs in"],nearly:["n-ih1-r l-iy","rb"],nearsighted:["n-iy1-r s-ay t-ih-d","jj"],neat:["n-iy1-t","jj"],neater:["n-iy1 t-er","rbr"],neatest:["n-iy1 t-ah-s-t","jjs"],neatly:["n-iy1-t l-iy","rb"],neatness:["n-iy1-t n-ah-s","nn"],nebula:["n-eh1 b-y-ah l-ah","nn"],nebulous:["n-eh1 b-y-ah l-ah-s","jj"],necessarily:["n-eh s-ah s-eh1 r-ah l-iy","rb"],necessary:["n-eh1 s-ah s-eh r-iy","jj"],necessitate:["n-ah s-eh1 s-ah t-ey-t","vbp vb"],necessity:["n-ah s-eh1 s-ah t-iy","nn"],neck:["n-eh1-k","nn rb vb"],necklace:["n-eh1-k l-ah-s","nn"],necktie:["n-eh1-k t-ay","nn"],necrosis:["n-ah k-r-ow1 s-ah-s","nn"],nectar:["n-eh1-k t-er","nn"],need:["n-iy1-d","nn vbp md vb"],needed:["n-iy1 d-ah-d","vbn jj vbd"],needle:["n-iy1 d-ah-l","nn vb"],needlelike:["n-iy1 d-ah-l l-ay-k","jj"],needless:["n-iy1-d l-ah-s","jj"],needlessly:["n-iy1-d l-ah-s l-iy","rb"],needy:["n-iy1 d-iy","jj"],negate:["n-ih g-ey1-t","vb"],negative:["n-eh1 g-ah t-ih-v","jj nn"],negatively:["n-eh1 g-ah t-ih-v l-iy","rb"],negativism:["n-eh1 g-ah t-ih v-ih z-ah-m","nn"],neglect:["n-ah g-l-eh1-k-t","nn vb vbp"],neglected:["n-ah g-l-eh1-k t-ah-d","vbn jj vbd"],negligence:["n-eh1-g l-ah jh-ah-n-s","nn"],negligent:["n-eh1-g l-ah jh-ah-n-t","jj"],negligently:["n-eh1-g l-ih jh-ah-n-t l-iy","rb"],negligible:["n-eh1-g l-ah jh-ah b-ah-l","jj"],negotiable:["n-ah g-ow1 sh-ah b-ah-l","jj"],negotiate:["n-ah g-ow1 sh-iy ey-t","vb vbp"],negotiated:["n-ah g-ow1 sh-iy ey t-ah-d","vbn jj vbd"],negotiating:["n-ih g-ow1 sh-iy ey t-ih-ng","vbg jj nn"],negotiation:["n-ih g-ow sh-iy ey1 sh-ah-n","nn"],negotiator:["n-ah g-ow1 sh-iy ey t-er","nn"],negro:["n-iy1 g-r-ow","nn"],neighbor:["n-ey1 b-er","nn vb"],neighborhood:["n-ey1 b-er hh-uh-d","nn"],neighboring:["n-ey1 b-er ih-ng","vbg jj"],neighborly:["n-ey1 b-er l-iy","jj"],neither:["n-iy1 dh-er","dt nn rb cc"],nemesis:["n-eh1 m-ah s-ih-s","nn"],neo:["n-iy1 ow","jj"],neoclassical:["n-iy ow k-l-ae1 s-ih k-ah-l","jj"],neoconservative:["n-iy ow k-ah-n s-er1 v-ah t-ih-v","jj"],neoliberal:["n-iy ow l-ih1 b-er ah-l","jj"],neon:["n-iy1 aa-n","nn"],neonatal:["n-iy ow n-ey1 t-ah-l","jj"],neophyte:["n-iy1 ah f-ay-t","jj nn"],nephew:["n-eh1 f-y-uw","nn"],nepotism:["n-eh1 p-ah t-ih z-ah-m","nn"],nerd:["n-er1-d","nn"],nerdy:["n-er1 d-iy","jj"],nerve:["n-er1-v","nn"],nervous:["n-er1 v-ah-s","jj"],nervously:["n-er1 v-ah-s l-iy","rb"],nervousness:["n-er1 v-ah-s n-ah-s","nn"],nervy:["n-er1 v-iy","jj"],nest:["n-eh1-s-t","nn vb vbp"],nester:["n-eh1 s-t-er","nn"],nesting:["n-eh1 s-t-ih-ng","vbg jj nn"],nestle:["n-eh1-s-ah-l","vb"],nestling:["n-eh1-s-t l-ih-ng","nn"],net:["n-eh1-t","jj nn vb"],nether:["n-eh1 dh-er","jj cc"],nettle:["n-eh1-t-ah-l","vb"],nettlesome:["n-eh1 t-ah-l s-ah-m","jj"],network:["n-eh1-t w-er-k","nn vb"],neural:["n-uh1 r-ah-l","jj"],neurological:["n-uh r-ah l-aa1 jh-ih k-ah-l","jj"],neurologist:["n-uh r-aa1 l-ah jh-ah-s-t","nn"],neuropathy:["n-uh1 r-ow p-ae th-iy","nn"],neurosurgeon:["n-uh1 r-ow s-er jh-ah-n","nn"],neurotic:["n-uh r-aa1 t-ih-k","jj"],neuter:["n-uw1 t-er","nn vb"],neutral:["n-uw1 t-r-ah-l","jj"],neutrality:["n-uw t-r-ae1 l-ah t-iy","nn"],neutralization:["n-uw t-r-ah l-ah z-ey1 sh-ah-n","nn"],neutralize:["n-uw1 t-r-ah l-ay-z","vb"],neutrino:["n-uw t-r-iy1 n-ow","nn"],neutron:["n-uw1 t-r-aa-n","nn"],never:["n-eh1 v-er","rb rbr"],nevertheless:["n-eh v-er dh-ah l-eh1-s","rb"],new:["n-uw1","jj"],newborn:["n-uw1 b-ao-r-n","jj"],newcomer:["n-uw1 k-ah m-er","nn"],newer:["n-uw1 er","jjr"],newest:["n-uw1 ah-s-t","jjs jj"],newfangled:["n-uw f-ae1-ng g-ah-l-d","jj"],newfound:["n-uw1 f-aw1-n-d","jj"],newly:["n-uw1 l-iy","rb jj"],newlywed:["n-uw1 l-iy w-eh-d","nn"],news:["n-uw1-z","nn"],newscast:["n-uw1-z k-ae-s-t","nn"],newscaster:["n-uw1-z k-ae s-t-er","nn"],newsletter:["n-uw1-z l-eh t-er","nn"],newsmaker:["n-uw1-z m-ey k-er","nn"],newsman:["n-uw1-z m-ae-n","nn"],newspaper:["n-uw1-z p-ey p-er","nn"],newspaperman:["n-uw1-z p-ey p-er m-ae-n","nn"],newsprint:["n-uw1-z p-r-ih-n-t","nn"],newsreel:["n-uw1-z r-iy-l","nn"],newsroom:["n-uw1-z r-uw-m","nn"],newsstand:["n-uw1-z s-t-ae-n-d","nn"],newsweekly:["n-uw1-z w-iy-k l-iy","rb"],newswire:["n-uw1-z w-ay-r","nn"],newsworthy:["n-uw1-z w-er dh-iy","jj"],newt:["n-uw1-t","nn"],next:["n-eh1-k-s-t","jj in rb"],nexus:["n-eh1-k s-ah-s","nn"],nib:["n-ih1-b","nn"],nibble:["n-ih1 b-ah-l","vb nn"],nice:["n-ay1-s","jj"],nicely:["n-ay1-s l-iy","rb"],nicer:["n-ay1 s-er","jjr"],nicest:["n-ay1 s-ih-s-t","jjs"],nicety:["n-ay1 s-ih t-iy","nn"],niche:["n-ih1-ch","nn"],nick:["n-ih1-k","vb"],nickel:["n-ih1 k-ah-l","nn jj"],nickname:["n-ih1-k n-ey-m","nn vb vbp"],nicotine:["n-ih1 k-ah t-iy-n","nn"],niece:["n-iy1-s","nn"],nifty:["n-ih1-f t-iy","jj"],niggardly:["n-ih1 g-er-d l-iy","jj"],night:["n-ay1-t","nn rb"],nightclub:["n-ay1-t k-l-ah-b","nn"],nighter:["n-ay1 t-er","nn"],nightfall:["n-ay1-t f-ao-l","nn"],nightingale:["n-ay1 t-ih-ng g-ey-l","nn"],nightly:["n-ay1-t l-iy","jj rb"],nightmare:["n-ay1-t m-eh-r","nn"],nightmarish:["n-ay1-t m-eh r-ih-sh","jj"],nightshirt:["n-ay1 ch-er-t","nn"],nighttime:["n-ay1-t t-ay-m","jj nn"],nihilism:["n-ay1 ah l-ih z-ah-m","nn"],nilly:["n-ih1 l-iy","rb"],nimble:["n-ih1-m b-ah-l","jj"],nimbly:["n-ih1-m b-l-iy","rb"],nine:["n-ih1-n","cd"],ninefold:["n-ih1-n f-ow-l-d","jj rb"],ninety:["n-ay1-n t-iy","nn"],ninth:["n-ay1-n-th","jj"],nip:["n-ih1-p","vb"],nirvana:["n-ih-r v-aa1 n-ah","nn"],nitpicking:["n-ih1-t p-ih k-ih-ng","jj"],nitrate:["n-ay1 t-r-ey-t","nn"],nitrogen:["n-ay1 t-r-ah jh-ah-n","nn"],nitrous:["n-ih1 t-r-ah-s","nn"],nix:["n-ih1-k-s","vb"],no:["n-ow1","dt jj nn rb uh"],nobility:["n-ow b-ih1 l-ah t-iy","nn"],noble:["n-ow1 b-ah-l","jj"],nobleman:["n-ow1 b-ah-l m-ah-n","nn"],nobly:["n-aa1 b-l-iy","rb"],nobody:["n-ow1 b-aa d-iy","nn"],nocturnal:["n-aa-k t-er1 n-ah-l","jj"],nod:["n-aa1-d","nn vb vbp"],nodding:["n-aa1 d-ih-ng","vbg jj"],node:["n-ow1-d","nn"],nodular:["n-aa1 jh-ah l-er","jj"],nodule:["n-aa1 jh-uw-l","nn"],noise:["n-oy1-z","nn"],noisier:["n-oy1 z-iy er","jjr"],noisily:["n-oy1 z-ah l-iy","rb"],noisy:["n-oy1 z-iy","jj"],nomad:["n-ow1 m-ae-d","nn"],nomadic:["n-ow m-ae1 d-ih-k","jj"],nomenclature:["n-ow1 m-ah-n k-l-ey ch-er","nn"],nominal:["n-aa1 m-ah n-ah-l","jj nn"],nominally:["n-aa1 m-ah n-ah l-iy","rb"],nominate:["n-aa1 m-ah n-ah-t","vb vbp"],nomination:["n-aa m-ah n-ey1 sh-ah-n","nn"],nominee:["n-aa m-ah n-iy1","nn"],nonbinding:["n-aa1-n b-ay1-n d-ih-ng","jj"],nonchalant:["n-aa-n sh-ah l-aa1-n-t","jj"],noncombatant:["n-aa-n k-ah-m b-ae1 t-ah-n-t","jj"],noncommittal:["n-aa1-n k-ah m-ih1 t-ah-l","jj"],noncompliance:["n-aa-n k-ah-m p-l-ay1 ah-n-s","nn"],nonconformist:["n-aa-n k-ah-n f-ao1-r m-ih-s-t","nn"],nondescript:["n-aa1-n d-ih s-k-r-ih1-p-t","jj"],nondurable:["n-aa-n d-uh1 r-ah b-ah-l","jj"],none:["n-ah1-n","nn"],nonentity:["n-aa-n eh1-n t-ah t-iy","nn"],nonessential:["n-aa-n ih s-eh1-n ch-ah-l","jj"],nonetheless:["n-ah-n dh-ah l-eh1-s","rb"],nonevent:["n-aa1-n ih v-eh1-n-t","nn"],nonexistent:["n-aa-n ah-g z-ih1 s-t-ah-n-t","jj"],nonfat:["n-aa1-n f-ae1-t","jj"],nonferrous:["n-aa-n f-eh1 r-ah-s","jj"],nonfiction:["n-aa-n f-ih1-k sh-ah-n","nn"],nonlethal:["n-aa-n l-iy1 th-ah-l","jj"],nonmember:["n-aa-n m-eh1-m b-er","nn"],nonpartisan:["n-aa-n p-aa1-r t-ah z-ah-n","jj"],nonpaying:["n-aa-n p-ey1 ih-ng","jj"],nonpayment:["n-aa-n p-ey1 m-ah-n-t","nn"],nonpoisonous:["n-aa-n p-oy1 z-ah n-ah-s","jj"],nonproductive:["n-aa-n p-r-ah d-ah1-k t-ih-v","jj"],nonprofit:["n-aa-n p-r-aa1 f-ah-t","nn jj"],nonrecurring:["n-aa-n r-ih k-er1 ih-ng","jj"],nonsense:["n-aa1-n s-eh-n-s","nn jj"],nonsensical:["n-aa-n s-eh1-n s-ih k-ah-l","jj"],nonsmoker:["n-aa-n s-m-ow1 k-er","nn"],nonspecific:["n-aa-n s-p-ah s-ih1 f-ih-k","jj"],nonstandard:["n-aa-n s-t-ae1-n d-er-d","jj"],nonstop:["n-aa-n s-t-aa1-p","jj nn rb"],nontoxic:["n-aa-n t-aa1-k s-ih-k","jj"],nonviolence:["n-aa-n v-ay1 ah l-ah-n-s","nn"],nonviolent:["n-aa-n v-ay1 ah l-ah-n-t","jj"],nonvoting:["n-aa-n v-ow1 t-ih-ng","jj"],noodle:["n-uw1 d-ah-l","nn"],nook:["n-uh1-k","nn"],noon:["n-uw1-n","nn"],noose:["n-uw1-s","nn"],nor:["n-ao1-r","cc"],norm:["n-ao1-r-m","nn"],normal:["n-ao1-r m-ah-l","jj rb"],normalcy:["n-ao1-r m-ah-l s-iy","nn"],normalization:["n-ao-r m-ah l-ih z-ey1 sh-ah-n","nn"],normalize:["n-ao1-r m-ah l-ay-z","vb"],normally:["n-ao1-r m-ah l-iy","rb"],normative:["n-ao1-r m-ah t-ih-v","jj"],north:["n-ao1-r-th","rb jj nn"],northeast:["n-ao-r-th iy1-s-t","nn jj rb"],northeastern:["n-ao-r-th iy1 s-t-er-n","jj"],northerly:["n-ao1-r dh-er l-iy","jj"],northern:["n-ao1-r dh-er-n","jj"],northerner:["n-ao1-r dh-er n-er","nn"],northernmost:["n-ao1-r dh-er-n m-ow-s-t","jj"],northward:["n-ao1-r-th w-er-d","rb"],northwest:["n-ao-r-th w-eh1-s-t","rb nn jjs jj"],northwestern:["n-ao-r-th w-eh1 s-t-er-n","jj"],nose:["n-ow1-z","nn vb"],nosebleed:["n-ow1-z b-l-iy-d","nn"],nosedive:["n-ow1-z d-ay-v","nn jj vb"],nostalgia:["n-ao s-t-ae1-l jh-ah","nn"],nostalgic:["n-ao s-t-ae1-l jh-ih-k","jj"],nostril:["n-aa1-s t-r-ah-l","nn"],nostrum:["n-aa1-s t-r-ah-m","nn"],nosy:["n-ow1 z-iy","jj"],not:["n-aa1-t","rb"],notable:["n-ow1 t-ah b-ah-l","jj"],notably:["n-ow1 t-ah b-l-iy","rb"],notation:["n-ow t-ey1 sh-ah-n","nn"],notch:["n-aa1-ch","nn vb"],note:["n-ow1-t","nn vbp vb"],notebook:["n-ow1-t b-uh-k","nn"],noted:["n-ow1 t-ah-d","vbd jj vbn"],noteholder:["n-ow1-t hh-ow-l d-er","nn"],noteworthy:["n-ow1-t w-er dh-iy","jj"],nothing:["n-ah1 th-ih-ng","nn"],nothingness:["n-ah1 th-ih-ng n-ah-s","nn"],notice:["n-ow1 t-ah-s","nn vb vbp"],noticeable:["n-ow1 t-ah s-ah b-ah-l","jj"],noticeably:["n-ow1 t-ih s-ah b-l-iy","rb"],noticed:["n-ow1 t-ah-s-t","vbd vbn jj"],notification:["n-ow t-ah f-ah k-ey1 sh-ah-n","nn"],notified:["n-ow1 t-ah f-ay-d","vbn vbd"],notifies:["n-ow1 t-ah f-ay-z","vbz"],notify:["n-ow1 t-ah f-ay","vb vbp"],notion:["n-ow1 sh-ah-n","nn"],notoriety:["n-ow t-er ay1 ah t-iy","nn"],notorious:["n-ow t-ao1 r-iy ah-s","jj"],notoriously:["n-ow t-ao1 r-iy ah-s l-iy","rb"],noun:["n-aw1-n","nn"],nourish:["n-er1 ih-sh","vb"],nourished:["n-er1 ih-sh-t","vbn jj"],nourishment:["n-er1 ih-sh m-ah-n-t","nn"],novel:["n-aa1 v-ah-l","nn jj"],novelist:["n-aa1 v-ah l-ah-s-t","nn"],novelistic:["n-aa v-ah l-ih1 s-t-ih-k","jj"],novelty:["n-aa1 v-ah-l t-iy","nn"],novice:["n-aa1 v-ah-s","nn jj"],now:["n-aw1","rb jj nn uh"],nowadays:["n-aw1 ah d-ey-z","rb"],nowhere:["n-ow1 w-eh-r","rb nn"],noxious:["n-aa1-k sh-ah-s","jj"],nozzle:["n-aa1 z-ah-l","nn"],nuance:["n-uw1 aa-n-s","nn"],nuclear:["n-uw1-k l-iy er","jj"],nucleus:["n-uw1 k-l-iy ah-s","nn"],nude:["n-uw1-d","jj nn"],nudge:["n-ah1-jh","vb nn"],nudist:["n-uw1 d-ih-s-t","jj"],nudity:["n-uw1 d-ih t-iy","nn"],nugget:["n-ah1 g-ih-t","nn"],nuisance:["n-uw1 s-ah-n-s","nn jj"],nuke:["n-uw1-k","nn vb"],null:["n-ah1-l","jj"],nullified:["n-ah1 l-ah f-ay-d","vbn vbd"],nullify:["n-ah1 l-ah f-ay","vb vbp"],numb:["n-ah1-m","jj vb"],number:["n-ah1-m b-er","nn vb vbp"],numbing:["n-ah1 m-ih-ng","jj"],numbingly:["n-ah1 m-ih-ng l-iy","rb"],numbness:["n-ah1-m n-ah-s","nn"],numeral:["n-uw1 m-er ah-l","nn"],numerical:["n-uw m-eh1 r-ah k-ah-l","jj"],numerically:["n-uw m-eh1 r-ih-k l-iy","rb"],numerous:["n-uw1 m-er ah-s","jj"],nun:["n-ah1-n","nn"],nurse:["n-er1-s","nn vb"],nursery:["n-er1 s-er iy","nn"],nurture:["n-er1 ch-er","vb nn"],nurturer:["n-er1 t-er er","nn"],nut:["n-ah1-t","nn"],nutmeg:["n-ah1-t m-eh-g","nn"],nutrient:["n-uw1 t-r-iy ah-n-t","jj"],nutrition:["n-uw t-r-ih1 sh-ah-n","nn"],nutritional:["n-uw t-r-ih1 sh-ah n-ah-l","jj"],nutritionist:["n-uw t-r-ih1 sh-ah n-ih-s-t","nn"],nutritious:["n-uw t-r-ih1 sh-ah-s","jj"],nutritive:["n-uw1 t-r-ah t-ih-v","jj"],nutshell:["n-ah1 ch-eh-l","nn"],nutty:["n-ah1 t-iy","jj"],nyet:["n-y-eh1-t","uh"],nylon:["n-ay1 l-aa-n","nn"],nymph:["n-ih1-m-f","nn"],nymphomaniac:["n-ih-m f-ah m-ey1 n-iy ae-k","nn jj"],oak:["ow1-k","nn"],oasis:["ow ey1 s-ih-s","nn"],oat:["ow1-t","nn"],oath:["ow1-th","nn"],oatmeal:["ow1-t m-iy-l","nn"],obedience:["ow b-iy1 d-iy ah-n-s","nn"],obedient:["ow b-iy1 d-iy ah-n-t","jj"],obediently:["ow b-iy1 d-iy ah-n-t l-iy","rb"],obese:["ow b-iy1-s","jj"],obesity:["ow b-iy1 s-ah t-iy","nn"],obey:["ow b-ey1","vb vbp"],obfuscate:["aa1-b f-ah-s k-ey-t","vb"],obfuscation:["aa-b f-ah s-k-ey1 sh-ah-n","nn"],obituary:["ow b-ih1 ch-uw eh r-iy","nn"],object:["aa1-b jh-eh-k-t","nn vbp vb"],objection:["ah-b jh-eh1-k sh-ah-n","nn"],objectionable:["ah-b jh-eh1-k sh-ah-n ah b-ah-l","jj"],objective:["ah-b jh-eh1-k t-ih-v","nn jj"],objectively:["aa-b jh-eh1-k t-ih-v l-iy","rb"],objectivity:["aa-b jh-eh-k t-ih1 v-ih t-iy","nn"],objector:["ah-b jh-eh1-k t-er","nn"],obligate:["aa1-b-l-ah-g-ey-t","vb"],obligated:["aa1 b-l-ah g-ey t-ih-d","vbn vbd jj"],obligation:["aa b-l-ah g-ey1 sh-ah-n","nn"],obligatory:["ah b-l-ih1 g-ah t-ao r-iy","jj"],oblige:["ah b-l-ay1-jh","vb nn"],obliged:["ah b-l-ay1-jh-d","vbn jj vbd"],obliging:["ah b-l-ay1 jh-ih-ng","jj"],obligingly:["ah b-l-ay1 jh-ih-ng l-iy","rb"],oblique:["ah b-l-iy1-k","jj"],obliquely:["ow b-l-iy1 k-l-iy","rb"],obliterate:["ah b-l-ih1 t-er ey-t","vb"],oblivion:["ah b-l-ih1 v-iy ah-n","nn"],oblivious:["ah b-l-ih1 v-iy ah-s","jj"],oblong:["aa1 b-l-ao-ng","jj"],obnoxious:["aa-b n-aa1-k sh-ah-s","jj"],oboist:["ow1 b-ow ah-s-t","nn"],obscene:["aa-b s-iy1-n","jj"],obscenity:["ah-b s-eh1 n-ih t-iy","nn"],obscure:["ah-b s-k-y-uh1-r","jj vb"],obscured:["ah-b s-k-y-uh1-r-d","vbn jj vbd"],obscurity:["ah-b s-k-y-uh1 r-ah t-iy","nn"],obsequious:["ah-b s-iy1 k-w-iy ah-s","jj"],observable:["ah-b z-er1 v-ah b-ah-l","jj"],observance:["ah-b z-er1 v-ah-n-s","nn"],observant:["ah-b z-er1 v-ah-n-t","jj"],observation:["aa-b z-er v-ey1 sh-ah-n","nn"],observatory:["ah-b z-er1 v-ah t-ao r-iy","nn"],observe:["ah-b z-er1-v","vb vbp"],observed:["ah-b z-er1-v-d","vbn jj vbd"],observer:["ah-b z-er1 v-er","nn"],obsess:["ah-b-s-eh1-s","vb"],obsessed:["ah-b s-eh1-s-t","vbn jj"],obsession:["ah-b s-eh1 sh-ah-n","nn"],obsessive:["ah-b s-eh1 s-ih-v","jj nn"],obsessively:["aa-b s-eh1 s-ih-v l-iy","rb"],obsidian:["ah-b s-ih1 d-iy ah-n","nn"],obsolescent:["aa-b s-ah l-eh1 s-ah-n-t","jj"],obsolete:["aa1-b s-ah l-iy-t","jj"],obstacle:["aa1-b s-t-ah k-ah-l","nn"],obstetrician:["aa-b s-t-ah t-r-ih1 sh-ah-n","nn"],obstinacy:["aa1-b s-t-ah n-ah s-iy","nn"],obstinate:["aa1-b s-t-ah n-ah-t","jj"],obstruct:["ah-b s-t-r-ah1-k-t","vb vbp"],obstruction:["ah-b s-t-r-ah1-k sh-ah-n","nn"],obstructive:["ah-b s-t-r-ah1-k t-ih-v","jj"],obtain:["ah-b t-ey1-n","vb vbp"],obtainable:["ah-b t-ey1 n-ah b-ah-l","jj"],obtrude:["ah-b-t-r-uw1-d","vb"],obtuse:["aa-b t-uw1-s","jj"],obverse:["ah-b v-er1-s","nn"],obviate:["aa1-b v-iy ey-t","vb"],obvious:["aa1-b v-iy ah-s","jj"],obviously:["aa1-b v-iy ah-s l-iy","rb"],occasion:["ah k-ey1 zh-ah-n","nn vb"],occasional:["ah k-ey1 zh-ah n-ah-l","jj"],occasionally:["ah k-ey1 zh-ah-n ah l-iy","rb"],occidental:["aa-k s-ah d-eh1-n t-ah-l","jj"],occipital:["aa-k s-ih1 p-ah t-ah-l","jj"],occlusion:["ah k-l-uw1 zh-ah-n","nn"],occupancy:["aa1 k-y-ah p-ah-n s-iy","nn"],occupant:["aa1 k-y-ah p-ah-n-t","nn"],occupation:["aa k-y-ah p-ey1 sh-ah-n","nn"],occupational:["aa k-y-ah p-ey1 sh-ah n-ah-l","jj"],occupied:["aa1 k-y-ah p-ay-d","vbn jj vbd"],occupies:["aa1 k-y-ah p-ay-z","vbz"],occupy:["aa1 k-y-ah p-ay","vb vbp"],occupying:["aa1 k-y-ah p-ay ih-ng","vbg jj"],occur:["ah k-er1","vb vbp"],occurrence:["ah k-er1 ah-n-s","nn"],ocean:["ow1 sh-ah-n","nn"],oceanfront:["ow sh-ah-n f-r-ah-n-t","jj nn"],oceanographic:["ow sh-ah-n ah g-r-ae1 f-ih-k","jj"],oceanography:["ow sh-ah n-aa1 g-r-ah f-iy","nn"],ocelot:["aa1 s-ah l-aa-t","nn"],ochre:["ow1 k-er","jj nn"],octagonal:["aa-k t-ae1 g-ah n-ah-l","jj"],octane:["aa1-k t-ey-n","nn"],octave:["aa1-k t-ih-v","jj"],octogenarian:["aa-k t-ah jh-ih n-eh1 r-iy ah-n","jj"],octopus:["aa1-k t-ah p-uh-s","nn"],odd:["aa1-d","jj"],oddball:["aa1-d b-ao-l","jj"],oddest:["aa1 d-ah-s-t","jjs"],oddity:["aa1 d-ah t-iy","nn"],oddly:["aa1-d l-iy","rb"],ode:["ow1-d","nn"],odious:["ow1 d-iy ah-s","jj"],odor:["ow1 d-er","nn"],odyssey:["aa1 d-ah s-iy","nn"],oedipal:["eh1 d-ah p-ah-l","jj"],of:["ah1-v","in rb rp"],off:["ao1-f","in rb jj nn rp"],offbeat:["ao1-f b-iy1-t","jj"],offend:["ah f-eh1-n-d","vb"],offended:["ah f-eh1-n d-ah-d","vbn jj vbd"],offender:["ah f-eh1-n d-er","nn"],offense:["ah f-eh1-n-s","nn"],offensive:["ah f-eh1-n s-ih-v","jj nn"],offensively:["ah f-eh1-n s-ih-v l-iy","rb"],offer:["ao1 f-er","nn vb vbp"],offered:["ao1 f-er-d","vbn jj vbd"],offering:["ao1 f-er ih-ng","nn vbg"],offhand:["ao1-f hh-ae1-n-d","jj"],offical:["ao1 f-ih k-ah-l","nn"],office:["ao1 f-ah-s","nn"],officeholder:["ao1 f-ah-s hh-ow-l d-er","nn"],officer:["ao1 f-ah s-er","nn"],official:["ah f-ih1 sh-ah-l","nn jj"],officialdom:["ah f-ih1 sh-ah-l d-ah-m","nn"],officially:["ah f-ih1 sh-ah l-iy","rb"],officiate:["ah f-ih1 sh-iy ey-t","vb"],offing:["ao1 f-ih-ng","nn"],offset:["ao-f s-eh1-t","vb jj vbd vbn vbp"],offsetting:["ao-f s-eh1 t-ih-ng","vbg jj"],offshoot:["ao1-f sh-uw-t","nn"],offshore:["ao1-f sh-ao1-r","jj rb"],offspring:["ao1-f s-p-r-ih-ng","nn"],offstage:["ao1-f s-t-ey1-jh","rb jj"],oft:["ao1-f-t","rb"],often:["ao1 f-ah-n","rb"],oftener:["ao1 f-ah-n er","rbr"],oftentimes:["ao1 f-ah-n t-ay-m-z","rb"],ogle:["ow1-g-ah-l","vb"],ogre:["ow1 g-r-ah","nn"],ogress:["ow1 g-r-ah-s","nn"],oh:["ow1","uh"],oil:["oy1-l","nn"],oiled:["oy1-l-d","jj"],oiler:["oy1 l-er","nn"],oilfield:["oy1-l f-iy-l-d","nn"],oilman:["oy1-l m-ae-n","nn"],oilseed:["oy1-l s-iy-d","nn"],oily:["oy1 l-iy","jj"],ointment:["oy1-n-t m-ah-n-t","nn"],okay:["ow1 k-ey1","jj rb vb uh"],old:["ow1-l-d","jj"],olden:["ow1-l d-ah-n","jj"],older:["ow1-l d-er","jjr rbr jj"],oldest:["ow1-l d-ah-s-t","jjs"],ole:["ow1-l","jj nn"],olfactory:["ow-l f-ae1-k t-er iy","jj"],oligarch:["ow1 l-ih g-aa-r-k","nn"],oligopoly:["aa l-ih g-aa1 p-ah l-iy","nn"],olive:["aa1 l-ah-v","jj nn"],ombudsman:["aa1-m b-ah-d-z m-ah-n","nn"],omelet:["aa1-m l-ah-t","nn"],omen:["ow1 m-ah-n","nn"],ominous:["aa1 m-ah n-ah-s","jj"],ominously:["aa1 m-ah n-ah-s l-iy","rb"],omission:["ow m-ih1 sh-ah-n","nn"],omit:["ow m-ih1-t","vb vbp"],omnibus:["aa1-m n-ah b-ah-s","jj nn"],omnipotence:["aa-m n-ih1 p-ah t-ah-n-s","nn"],omnipresence:["aa-m n-ah p-r-eh1 z-ah-n-s","nn"],omnipresent:["aa-m n-ih p-r-eh1 z-ah-n-t","jj"],omniscient:["aa-m n-ih1 sh-ah-n-t","jj"],on:["aa1-n","in rbr jj rb rp"],onboard:["aa1-n b-ao-r-d","nn"],once:["w-ah1-n-s","rb in"],oncologist:["aa-ng k-aa1 l-ah jh-ih-s-t","nn"],oncology:["aa-ng k-aa1 l-ah jh-iy","nn"],oncoming:["ao1-n k-ah m-ih-ng","jj"],one:["w-ah1-n","cd"],oneness:["w-ah1-n n-ah-s","nn"],onerous:["ow1 n-er ah-s","jj"],oneself:["w-ah-n s-eh1-l-f","prp"],onetime:["w-ah1-n t-ay1-m","jj"],oneyear:["w-ah1-n y-ih1-r","jj"],ongoing:["aa1-n g-ow ih-ng","jj"],onion:["ah1 n-y-ah-n","nn"],online:["ao1-n l-ay-n","jj"],onlooker:["ao1-n l-uh k-er","nn"],only:["ow1-n l-iy","rb in jj"],onrushing:["aa1-n r-ah sh-ih-ng","jj"],onscreen:["aa-n s-k-r-iy1-n","rb"],onset:["aa1-n s-eh-t","nn"],onslaught:["ao1-n s-l-ao-t","nn"],onstage:["aa-n s-t-ey1-jh","nn rb"],onto:["aa1-n t-uw","in"],ontological:["aa-n t-ah l-aa1 jh-ih k-ah-l","jj"],onus:["ow1 n-ah-s","nn"],onward:["ao1-n w-er-d","rb"],onwards:["aa1-n w-er-d-z","rb"],onyx:["aa1 n-ih-k-s","nn"],oodles:["uw1 d-ah-l-z","nn"],ooze:["uw1-z","nn vb"],opaque:["ow p-ey1-k","jj"],open:["ow1 p-ah-n","jj vbp nn rb rp vb"],opener:["ow1 p-ah-n er","nn"],opening:["ow1 p-ah-n ih-ng","nn vbg jj"],openly:["ow1 p-ah-n l-iy","rb"],openness:["ow1 p-ah-n n-ah-s","nn"],opera:["aa1 p-r-ah","nn"],operable:["aa1 p-er ah b-ah-l","jj"],operate:["aa1 p-er ey-t","vb vbp"],operated:["aa1 p-er ey t-ah-d","vbn vbd jj"],operatic:["aa p-er ae1 t-ih-k","jj"],operating:["aa1 p-er ey t-ih-ng","vbg jj nn"],operation:["aa p-er ey1 sh-ah-n","nn"],operational:["aa p-er ey1 sh-ah n-ah-l","jj"],operationally:["aa1 p-er ey1 sh-ah-n ah l-iy","rb"],operative:["aa1 p-er ah t-ih-v","jj nn"],operator:["aa1 p-er ey t-er","nn"],operetta:["aa p-er eh1 t-ah","nn"],ophthalmologist:["aa-p th-ah m-aa1 l-ah jh-ih-s-t","nn"],opine:["ow-p-ay1-n","vb"],opinion:["ah p-ih1 n-y-ah-n","nn"],opinionated:["ah p-ih1 n-y-ah n-ey t-ih-d","jj"],opium:["ow1 p-iy ah-m","nn"],opponent:["ah p-ow1 n-ah-n-t","nn"],opportune:["aa p-er t-uw1-n","jj"],opportunism:["aa p-er t-uw1 n-ih z-ah-m","nn"],opportunist:["aa p-er t-uw1 n-ih-s-t","nn"],opportunistic:["aa p-er t-uw n-ih1 s-t-ih-k","jj"],opportunity:["aa p-er t-uw1 n-ah t-iy","nn"],oppose:["ah p-ow1-z","vb vbp"],opposed:["ah p-ow1-z-d","vbn jj vbd"],opposing:["ah p-ow1 z-ih-ng","vbg jj"],opposite:["aa1 p-ah z-ah-t","jj in nn"],opposition:["aa p-ah z-ih1 sh-ah-n","nn"],oppress:["ah-p-r-eh1-s","vb"],oppressed:["ah p-r-eh1-s-t","jj vbd vbn"],oppression:["ah p-r-eh1 sh-ah-n","nn"],oppressive:["ah p-r-eh1 s-ih-v","jj"],oppressor:["ah p-r-eh1 s-er","nn"],opprobrium:["ah p-r-ow1 b-r-iy ah-m","nn"],opt:["aa1-p-t","vb vbp"],optic:["aa1-p t-ih-k","jj"],optical:["aa1-p t-ih k-ah-l","jj"],optically:["aa1-p t-ih-k l-iy","rb"],optician:["aa-p t-ih1 sh-ah-n","nn"],optimal:["aa1-p t-ah m-ah-l","jj"],optimism:["aa1-p t-ah m-ih z-ah-m","nn"],optimist:["aa1-p t-ah m-ih-s-t","nn"],optimistic:["aa-p t-ah m-ih1 s-t-ih-k","jj"],optimistically:["aa-p t-ih m-ih1 s-t-ih k-ah l-iy","rb"],optimization:["aa-p t-ah m-ah z-ey1 sh-ah-n","nn"],optimize:["aa1-p t-ah m-ay-z","vb"],optimum:["aa1-p t-ah m-ah-m","jj nn"],option:["aa1-p sh-ah-n","nn vb"],optional:["aa1-p sh-ah n-ah-l","jj"],opulence:["aa1 p-y-ah l-ah-n-s","nn"],opulent:["aa1 p-y-ah l-ah-n-t","jj"],opus:["ow1 p-ah-s","nn"],or:["ao1-r","cc"],oracle:["ao1 r-ah k-ah-l","nn"],oral:["ao1 r-ah-l","jj"],orally:["ao1 r-ah l-iy","rb"],orange:["ao1 r-ah-n-jh","jj nn"],oration:["ao r-ey1 sh-ah-n","nn"],orator:["ao1 r-ah t-er","nn"],oratorical:["ao r-ah t-ao1 r-ah k-ah-l","jj"],oratorio:["aa r-ah t-ao1 r-iy ow","nn"],oratory:["ao1 r-ah t-ao r-iy","nn"],orb:["ao1-r-b","nn"],orbit:["ao1-r b-ah-t","nn vb"],orbital:["ao1-r b-ah t-ah-l","jj nn"],orchard:["ao1-r ch-er-d","nn"],orchestra:["ao1-r k-ah-s t-r-ah","nn"],orchestral:["ao-r k-eh1-s t-r-ah-l","jj"],orchestrate:["ao1-r k-ih s-t-r-ey-t","vb"],orchestration:["ao-r k-ah-s t-r-ey1 sh-ah-n","nn"],orchid:["ao1-r k-ah-d","nn"],ordain:["ao-r d-ey1-n","vb"],ordeal:["ao-r d-iy1-l","nn"],order:["ao1-r d-er","nn vbp in vb"],ordered:["ao1-r d-er-d","vbd vbn jj"],orderliness:["ao1-r d-er l-iy n-ah-s","nn"],orderly:["ao1-r d-er l-iy","jj nn rb"],ordinance:["ao1-r d-ah n-ah-n-s","nn"],ordinarily:["ao-r d-ah n-eh1 r-ah l-iy","rb"],ordinary:["ao1-r d-ah n-eh r-iy","jj nn"],ordination:["ao-r d-ah n-ey1 sh-ah-n","nn"],ordnance:["ao1-r-d n-ah-n-s","nn"],ore:["ao1-r","nn"],organ:["ao1-r g-ah-n","nn"],organic:["ao-r g-ae1 n-ih-k","jj"],organically:["ao-r g-ae1 n-ih-k l-iy","rb"],organism:["ao1-r g-ah n-ih z-ah-m","nn"],organismic:["ao-r g-ah n-ih1-z m-ih-k","jj"],organist:["ao1-r g-ah n-ah-s-t","nn"],organization:["ao-r g-ah n-ah z-ey1 sh-ah-n","nn"],organizational:["ao-r g-ah n-ah z-ey1 sh-ah n-ah-l","jj"],organize:["ao1-r g-ah n-ay-z","vb vbp"],organized:["ao1-r g-ah n-ay-z-d","vbn vbd jj"],organizer:["ao1-r g-ah n-ay z-er","nn"],orgasm:["ao1-r g-ae z-ah-m","nn"],orgy:["ao1-r jh-iy","nn"],orient:["ao1-r-iy-eh-n-t","vb"],oriental:["ao r-iy eh1-n t-ah-l","jj"],orientation:["ao r-iy eh-n t-ey1 sh-ah-n","nn"],oriented:["ao1 r-iy eh-n t-ah-d","vbn vbd jj"],orifice:["ao1 r-ah f-ah s-ah","nn"],origin:["ao1 r-ah jh-ah-n","nn"],original:["er ih1 jh-ah n-ah-l","jj nn"],originality:["er ih jh-ah n-ae1 l-ih t-iy","nn"],originally:["er ih1 jh-ah n-ah l-iy","rb"],originate:["er ih1 jh-ah n-ey-t","vb vbp"],originated:["er ih1 jh-ah n-ey t-ah-d","vbd jj vbn"],origination:["er ih jh-ah n-ey1 sh-ah-n","nn"],originator:["er ih1 jh-ah n-ey t-er","nn"],ornament:["ao1-r n-ah m-ah-n-t","nn vb"],ornamental:["ao-r n-ah m-eh1-n t-ah-l","jj"],ornamentation:["ao-r n-ah m-eh-n t-ey1 sh-ah-n","nn"],ornate:["ao-r n-ey1-t","jj"],ornery:["ao1-r n-er iy","jj"],orphan:["ao1-r f-ah-n","jj nn vb"],orphanage:["ao1-r f-ah n-ah-jh","nn"],orphaned:["ao1-r f-ah-n-d","vbn jj"],orthodontic:["ao-r th-ah d-aa1-n t-ih-k","jj"],orthodontist:["ao-r th-ah d-aa1-n t-ah-s-t","nn"],orthodox:["ao1-r th-ah d-aa-k-s","jj nn"],orthodoxy:["ao1-r th-ah d-aa-k s-iy","nn"],orthography:["ao-r th-aa1 g-r-ah f-iy","nn"],orthopedic:["ao-r th-ah p-iy1 d-ih-k","jj"],oscillate:["aa1-s-ah-l-ey-t","vb"],oscillation:["aa s-ah l-ey1 sh-ah-n","nn"],oscillator:["aa1 s-ah l-ey t-er","nn"],osmium:["aa1-z m-iy ah-m","nn"],osmotic:["aa-z m-aa1 t-ah-k","jj"],ossification:["aa s-ah f-ah k-ey1 sh-ah-n","nn"],ossify:["aa1 s-ah f-ay","vb"],ostensibly:["aa s-t-eh1-n s-ah b-l-iy","rb"],ostentation:["ao s-t-eh-n t-ey1 sh-ah-n","nn"],ostentatious:["aa s-t-ah-n t-ey1 sh-ah-s","jj"],ostentatiously:["aa s-t-ah-n t-ey1 sh-ah-s l-iy","rb"],ostinato:["aa s-t-ah n-aa1 t-ow","nn"],ostracism:["ao1 s-t-r-ah s-ih z-ah-m","nn"],ostracize:["ao1-s-t-r-ah-s-ay-z","vb"],ostrich:["ao1 s-t-r-ih-ch","jj nn"],other:["ah1 dh-er","jj nn"],otherwise:["ah1 dh-er w-ay-z","rb jj"],otherworldly:["ah1 dh-er w-er1-l-d l-iy","jj"],otter:["aa1 t-er","nn"],ought:["ao1-t","md"],ounce:["aw1-n-s","nn"],our:["aw1 er","prp$"],ours:["aw1 er-z","prp"],ourselves:["aw er s-eh1-l-v-z","prp"],oust:["aw1-s-t","vb"],ousted:["aw1 s-t-ih-d","vbn vbd jj"],ouster:["aw1 s-t-er","nn"],out:["aw1-t","in jj nn rb rp"],outage:["aw1 t-ah-jh","nn"],outback:["aw1-t b-ae-k","nn"],outbid:["aw1-t b-ih-d","vb vbd vbn vbp"],outboard:["aw1-t b-ao-r-d","jj"],outbound:["aw1-t b-aw-n-d","jj"],outbreak:["aw1-t b-r-ey-k","nn"],outburst:["aw1-t b-er-s-t","nn"],outcast:["aw1-t k-ae-s-t","nn"],outclass:["aw1-t k-l-ae-s","vbp vb"],outcome:["aw1-t k-ah-m","nn"],outcry:["aw1-t k-r-ay","nn"],outdate:["aw1-t-d-ey-t","vb"],outdated:["aw1-t d-ey t-ih-d","jj vbn"],outdid:["aw1-t d-ih-d","vbd"],outdistance:["aw1-t-d-ih1-s-t-ah-n-s","vb"],outdo:["aw-t d-uw1","vb vbp"],outdone:["aw1-t d-ah1-n","vbn"],outdoor:["aw1-t d-ao-r","jj"],outdoors:["aw1-t d-ao1-r-z","rb nn"],outdoorsman:["aw1-t d-ao-r-z m-ah-n","nn"],outer:["aw1 t-er","jj"],outfield:["aw1-t f-iy-l-d","nn"],outfielder:["aw1-t f-iy-l d-er","nn"],outfit:["aw1-t f-ih-t","nn vb vbp"],outflank:["aw1-t f-l-ae-ng-k","vb"],outflow:["aw1-t f-l-ow","nn"],outgain:["aw1-t-g-ey-n","vb"],outgoing:["aw1-t g-ow ih-ng","jj"],outgrew:["aw-t g-r-uw1","vbd"],outgrow:["aw-t g-r-ow1","vb"],outgrown:["aw-t g-r-ow1-n","vbn"],outgrowth:["aw1-t g-r-ow-th","nn"],outguess:["aw1-t g-eh-s","vb"],outhouse:["aw1-t hh-aw-s","nn"],outing:["aw1 t-ih-ng","nn"],outlandish:["aw-t l-ae1-n d-ih-sh","jj"],outlast:["aw1-t l-ae-s-t","vb"],outlaw:["aw1-t l-ao","vb nn"],outlawed:["aw1-t l-ao-d","vbn jj vbd"],outlawry:["aw1-t l-ao r-iy","nn"],outlay:["aw1-t l-ey","nn"],outlet:["aw1-t l-eh-t","nn"],outline:["aw1-t l-ay-n","nn vb vbp"],outlined:["aw1-t l-ay-n-d","vbn vbd jj"],outlive:["aw-t l-ih1-v","vb"],outlook:["aw1-t l-uh-k","nn"],outlying:["aw1-t l-ay ih-ng","jj"],outmaneuver:["aw-t m-ah n-uw1 v-er","vb"],outmode:["aw-t-m-ow1-d","vb"],outmoded:["aw-t m-ow1 d-ah-d","jj vbn"],outnumber:["aw-t n-ah1-m b-er","vb"],outpace:["aw1-t p-ey-s","vb vbp"],outpaced:["aw1-t p-ey-s-t","vbd nn vb vbn vbp"],outpatient:["aw1-t p-ey sh-ah-n-t","nn jj"],outperform:["aw1-t p-er f-ao-r-m","vb jj vbp"],outplacement:["aw1-t p-l-ey-s m-ah-n-t","nn"],outpost:["aw1-t p-ow-s-t","nn"],outpouring:["aw-t p-ao1 r-ih-ng","nn"],output:["aw1-t p-uh-t","nn vb"],outrage:["aw1-t r-ey-jh","nn vb"],outraged:["aw1-t r-ey-jh-d","vbn jj vbd"],outrageous:["aw-t r-ey1 jh-ah-s","jj"],outrageously:["aw-t r-ey1 jh-ah-s l-iy","rb"],outreach:["aw1-t r-iy-ch","nn"],outrigger:["aw1-t r-ih g-er","nn"],outright:["aw1-t r-ay1-t","jj rb"],outrun:["aw-t r-ah1-n","vb vbn"],outscore:["aw-t-s-k-ao1-r","vb"],outsell:["aw-t s-eh1-l","vb"],outset:["aw1-t s-eh-t","nn"],outshine:["aw1 ch-ay-n","vb"],outshone:["aw-t sh-ow1-n","nn"],outside:["aw1-t s-ay1-d","in jj nn rb"],outsider:["aw-t s-ay1 d-er","nn"],outsized:["aw1-t s-ay-z-d","jj"],outskirt:["aw1-t s-k-er-t","nn"],outsold:["aw-t s-ow1-l-d","vbd"],outspend:["aw1-t s-p-eh-n-d","vb vbp"],outspoken:["aw1-t s-p-ow1 k-ah-n","jj"],outstanding:["aw-t s-t-ae1-n d-ih-ng","jj"],outstretch:["aw-t-s-t-r-eh1-ch","vb"],outstrip:["aw-t s-t-r-ih1-p","vb"],outstripped:["aw-t s-t-r-ih1-p-t","nn vbd vbn"],outta:["uw1 t-ah","in"],outward:["aw1-t w-er-d","rb jj"],outwardly:["aw1-t w-er-d l-iy","rb ."],outweigh:["aw1-t w-ey","vbp vb"],outwit:["aw1-t w-ih-t","vb"],oval:["ow1 v-ah-l","jj nn"],ovarian:["ow v-eh1 r-iy ah-n","jj"],ovation:["ow v-ey1 sh-ah-n","nn"],oven:["ah1 v-ah-n","nn"],over:["ow1 v-er","in rp jj rb"],overactive:["ow1 v-er ae1-k t-ih-v","jj"],overall:["ow1 v-er ao-l","jj nn rb"],overarch:["ow1 v-er aa-r-ch","vb"],overarching:["ow1 v-er aa-r ch-ih-ng","vbg jj"],overbearing:["ow1 v-er b-eh1 r-ih-ng","jj"],overbill:["ow-v-er-b-ih1-l","vb"],overblown:["ow v-er b-l-ow1-n","jj"],overboard:["ow1 v-er b-ao-r-d","rb"],overbought:["ow1 v-er b-ao1-t","vbn jj nn"],overbuilding:["ow1 v-er b-ih-l d-ih-ng","nn"],overbuilt:["ow1 v-er b-ih1-l-t","jj nn"],overburden:["ow1 v-er b-er1 d-ah-n","vb"],overburdened:["ow1 v-er b-er1 d-ah-n-d","vbn jj vbd"],overcame:["ow1 v-er k-ey1-m","vbd"],overcapacity:["ow1 v-er k-ah p-ae1 s-ah t-iy","nn"],overcast:["ow1 v-er k-ae-s-t","nn jj"],overcharge:["ow1 v-er ch-aa-r-jh","vb"],overcoat:["ow1 v-er k-ow-t","nn"],overcome:["ow1 v-er k-ah-m","vb vbn vbp"],overconfident:["ow v-er k-aa1-n f-ih d-ah-n-t","jj"],overcook:["ow-v-er-k-uh1-k","vb"],overcrowd:["ow-v-er-k-r-aw1-d","vb"],overcrowded:["ow1 v-er k-r-aw d-ih-d","jj vbn"],overdo:["ow1-v-er-d-uw1","vb"],overdone:["ow1 v-er d-ah1-n","vbn"],overdose:["ow1 v-er d-ow-s","nn vb"],overdraft:["ow1 v-er d-r-ae-f-t","nn"],overdraw:["ow1 v-er d-r-ao","vb"],overdrawn:["ow1 v-er d-r-ao1-n","jj"],overdrive:["ow1 v-er d-r-ay-v","nn"],overdue:["ow1 v-er d-uw1","jj"],overeager:["ow1 v-er iy g-er","jj"],overeat:["ow1 v-er iy-t","vb vbp"],overemphasize:["ow1 v-er eh1-m f-ah s-ay-z","vb"],overestimate:["ow v-er eh1-s t-ah m-ey-t","vb"],overextend:["ow-v-er-ih-k-s-t-eh1-n-d","vb"],overextended:["ow v-er ih-k s-t-eh1-n d-ah-d","vbn vbd jj"],overfeed:["ow v-er f-iy1-d","vb"],overfill:["ow1 v-er f-ih-l","vb"],overflight:["ow1 v-er f-l-ay-t","nn"],overflow:["ow1 v-er f-l-ow","nn vb"],overfund:["ow1-v-er-f-ah-n-d","vb"],overgenerous:["ow1 v-er jh-eh n-er ah-s","jj"],overgrazing:["ow1 v-er g-r-ey z-ih-ng","nn"],overgrown:["ow1 v-er g-r-ow1-n","vbn jj"],overhang:["ow1 v-er hh-ae-ng","nn vb"],overhaul:["ow1 v-er hh-ao-l","nn vb"],overhead:["ow1 v-er hh-eh1-d","jj nn rb"],overhear:["ow1 v-er hh-ih1-r","vb"],overheat:["ow1 v-er hh-iy-t","vb"],overheating:["ow1 v-er hh-iy t-ih-ng","vbg jj"],overjoyed:["ow v-er jh-oy1-d","jj"],overkill:["ow1 v-er k-ih-l","nn"],overlaid:["ow1 v-er l-ey-d","vbn"],overland:["ow1 v-er l-ae-n-d","rb"],overlap:["ow1 v-er l-ae-p","nn vb vbp"],overlapping:["ow1 v-er l-ae p-ih-ng","vbg jj nn"],overlay:["ow1 v-er l-ey","nn vb vbp"],overleveraged:["ow1 v-er l-eh1 v-r-ih-jh-d","jj"],overload:["ow1 v-er l-ow-d","nn vbp vb"],overloaded:["ow1 v-er l-ow d-ih-d","vbn jj"],overlook:["ow1 v-er l-uh-k","vb vbp"],overly:["ow1 v-er l-iy","rb"],overlying:["ow v-er l-ay1 ih-ng","jj"],overnight:["ow1 v-er n-ay1-t","jj nn rb"],overnighter:["ow v-er n-ay1 t-er","nn"],overpaid:["ow1 v-er p-ey1-d","vbn vbd jj"],overpass:["ow1 v-er p-ae-s","nn"],overpay:["ow1 v-er p-ey","vb"],overpayment:["ow1 v-er p-ey m-ah-n-t","nn"],overplay:["ow1-v-er-p-l-ey1","vb"],overpopulation:["ow v-er p-aa p-y-ah l-ey1 sh-ah-n","nn"],overpower:["ow-v-er-p-aw1-er","vb"],overpowering:["ow1 v-er p-aw1 r-ih-ng","jj"],overprice:["ow-v-er-p-r-ay1-s","vb"],overpriced:["ow1 v-er p-r-ay-s-t","vbn jj"],overproduce:["ow1 v-er p-r-ah d-uw1-s","vb"],overproducer:["ow1 v-er p-r-ah d-uw1 s-er","nn"],overran:["ow1 v-er r-ae1-n","vbd"],overrate:["ow-v-er-r-ey1-t","vb"],overreach:["ow1 v-er r-iy-ch","vb"],overreact:["ow1 v-er r-iy ae1-k-t","vb vbp"],overreaction:["ow1 v-er r-iy ae-k sh-ah-n","nn"],overregulate:["ow1-v-er-r-eh1-g-y-ah-l-ey-t","vb"],overregulated:["ow v-er r-eh1 g-y-ah l-ey t-ih-d","jj vbn"],overregulation:["ow v-er r-eh g-y-ah l-ey1 sh-ah-n","nn"],overridden:["ow1 v-er r-ih1 d-ah-n","vbn"],override:["ow1 v-er r-ay-d","vb nn"],overriding:["ow1 v-er r-ay d-ih-ng","vbg jj"],overrode:["ow1 v-er r-ow1-d","vbd"],overrule:["ow1 v-er r-uw-l","vb"],overrun:["ow1 v-er r-ah-n","vbn jj nn"],oversaw:["ow1 v-er s-ao","vbd vb"],overseas:["ow1 v-er s-iy1-z","jj nn rb"],oversee:["ow1 v-er s-iy","vb"],overseen:["ow1 v-er s-iy-n","vbn nn"],overseer:["ow1 v-er s-iy1 er","nn"],overshadow:["ow1 v-er sh-ae1 d-ow","vbp vb"],overshot:["ow1 v-er sh-aa-t","vbd"],oversight:["ow1 v-er s-ay-t","nn"],oversimplified:["ow v-er s-ih1-m p-l-ih f-ay-d","vbn jj"],oversimplify:["ow-v-er-s-ih1-m-p-l-ih-f-ay","vb"],oversize:["ow v-er s-ay1-z","jj nn"],oversized:["ow1 v-er s-ay1-z-d","jj"],oversold:["ow1 v-er s-ow1-l-d","vbn jj vb"],overspend:["ow1-v-er-s-p-eh-n-d","vb"],overstaffed:["ow1 v-er s-t-ae-f-t","jj"],overstate:["ow1 v-er s-t-ey-t","vb vbp"],overstatement:["ow1 v-er s-t-ey-t m-ah-n-t","nn"],overstep:["ow1-v-er-s-t-eh-p","vb"],oversupplied:["ow v-er s-ah p-l-ay1-d","jj vbn"],oversupply:["ow v-er s-ah p-l-ay1","nn"],overt:["ow v-er1-t","jj"],overtake:["ow1 v-er t-ey-k","vb vbp"],overtaken:["ow1 v-er t-ey k-ah-n","vbn"],overtax:["ow1-v-er-t-ae-k-s","vb"],overtaxed:["ow v-er t-ae1-k-s-t","jj vbn"],overthrow:["ow1 v-er th-r-ow","vb nn"],overthrown:["ow v-er th-r-ow1-n","vbn"],overtime:["ow1 v-er t-ay-m","nn jj rb"],overtly:["ow v-er1-t l-iy","rb"],overtone:["ow1 v-er t-ow-n","nn"],overtook:["ow v-er t-uh1-k","vbd"],overture:["ow1 v-er ch-er","nn"],overturn:["ow1 v-er t-er-n","vb"],overuse:["ow v-er y-uw1-z","nn vb"],overused:["ow v-er y-uw1-z-d","vbn jj"],overvalue:["ow1-v-er-v-ae-l-y-uw","vb"],overvalued:["ow1 v-er v-ae-l y-uw-d","vbn jj vbd"],overview:["ow1 v-er v-y-uw","nn"],overweight:["ow v-er w-ey1-t","jj nn vb"],overwhelm:["ow v-er w-eh1-l-m","vb vbp"],overwhelmed:["ow v-er w-eh1-l-m-d","vbn vbd jj"],overwhelming:["ow v-er w-eh1-l m-ih-ng","jj vbg"],overwhelmingly:["ow v-er w-eh1-l m-ih-ng l-iy","rb"],overwork:["ow-v-er-w-er1-k","vb"],overworked:["ow v-er w-er1-k-t","vbn jj"],overwritten:["ow v-er r-ih1 t-ah-n","jj"],overwrought:["ow v-er r-ao1-t","jj"],overzealous:["ow v-er z-eh1 l-ah-s","jj"],ovulation:["ow v-y-ah l-ey1 sh-ah-n","nn"],owe:["ow1","vbp vb"],owing:["ow1 ih-ng","jj vbg"],owl:["aw1-l","nn"],own:["ow1-n","jj vbn vbp vb"],owned:["ow1-n-d","vbn vbd jj"],owner:["ow1 n-er","nn"],ownership:["ow1 n-er sh-ih-p","nn"],ox:["aa1-k-s","nn"],oxcart:["aa1-k-s k-aa-r-t","nn"],oxidation:["aa-k s-ah d-ey1 sh-ah-n","nn"],oxide:["aa1-k s-ay-d","nn"],oxidized:["aa1-k s-ah d-ay-z-d","jj"],oxygen:["aa1-k s-ah jh-ah-n","nn"],oyster:["oy1 s-t-er","nn"],ozone:["ow1 z-ow-n","nn"],pace:["p-ey1-s","nn vb vbp"],pacemaker:["p-ey1-s m-ey k-er","nn"],pacer:["p-ey1 s-er","nn"],pachinko:["p-ah ch-ih1-ng k-ow","nn"],pacific:["p-ah s-ih1 f-ih-k","jj"],pacified:["p-ae1 s-ah f-ay-d","vbd"],pacifier:["p-ae1 s-ah f-ay er","nn"],pacifism:["p-ae1 s-ih f-ih z-ah-m","nn"],pacifist:["p-ae1 s-ih f-ih-s-t","nn"],pacify:["p-ae1 s-ah f-ay","vb"],pacing:["p-ey1 s-ih-ng","vbg jj nn"],pack:["p-ae1-k","nn vb vbp"],package:["p-ae1 k-ah-jh","nn vb"],packaged:["p-ae1 k-ih-jh-d","vbn jj"],packaging:["p-ae1 k-ih jh-ih-ng","nn vbg"],packed:["p-ae1-k-t","vbn jj vbd"],packer:["p-ae1 k-er","nn"],packet:["p-ae1 k-ah-t","nn"],pact:["p-ae1-k-t","nn"],pad:["p-ae1-d","nn vb"],padded:["p-ae1 d-ah-d","jj vbn"],padding:["p-ae1 d-ih-ng","nn vbg"],paddle:["p-ae1 d-ah-l","nn"],paddock:["p-ae1 d-ah-k","nn"],paddy:["p-ae1 d-iy","nn"],padlock:["p-ae1-d l-aa-k","nn vb"],paean:["p-iy1 ah-n","nn"],pagan:["p-ey1 g-ah-n","jj"],paganism:["p-ey1 g-ah n-ih z-ah-m","nn"],page:["p-ey1-jh","nn vb"],pageant:["p-ae1 jh-ah-n-t","nn"],pageantry:["p-ae1 jh-ah-n t-r-iy","nn"],pager:["p-ey1 jh-er","nn"],paging:["p-ey1 jh-ih-ng","nn"],pagoda:["p-ah g-ow1 d-ah","nn"],paid:["p-ey1-d","vbn vbd jj"],pail:["p-ey1-l","nn"],pain:["p-ey1-n","nn vb"],pained:["p-ey1-n-d","jj vbd vbn"],painful:["p-ey1-n f-ah-l","jj"],painfully:["p-ey1-n f-ah l-iy","rb"],painkiller:["p-ey1-n k-ih l-er","nn"],painless:["p-ey1-n l-ah-s","jj"],painlessly:["p-ey1-n l-ah-s l-iy","rb"],painstaking:["p-ey1-n-s t-ey k-ih-ng","jj"],painstakingly:["p-ey1-n-s t-ey k-ih-ng l-iy","rb"],paint:["p-ey1-n-t","nn vb vbp"],paintbrush:["p-ey1-n-t b-r-ah-sh","nn"],painted:["p-ey1-n t-ah-d","vbn vbd jj"],painter:["p-ey1-n t-er","nn"],painting:["p-ey1-n t-ih-ng","nn vbg"],pair:["p-eh1-r","nn vb"],paired:["p-eh1-r-d","vbn jj vbd"],pairing:["p-eh1 r-ih-ng","nn vbg"],pajama:["p-ah jh-aa1 m-ah","nn"],pal:["p-ae1-l","nn jj"],palace:["p-ae1 l-ah-s","nn"],palatability:["p-ae l-ah t-ah b-ih1 l-ah t-iy","nn"],palatable:["p-ae1 l-ah t-ah b-ah-l","jj"],palate:["p-ae1 l-ah-t","nn"],palatial:["p-ah l-ey1 sh-ah-l","jj"],palazzo:["p-ah l-aa1 z-ow","nn"],pale:["p-ey1-l","jj vb vbp nn"],paled:["p-ey1-l-d","vbd vb vbn"],palest:["p-ey1 l-ah-s-t","jjs"],palette:["p-ae1 l-ah-t","nn"],palisade:["p-ae l-ih s-ey1-d","nn"],pall:["p-aa1-l","nn vb"],palladium:["p-ah l-ey1 d-iy ah-m","nn"],pallet:["p-ae1 l-ah-t","nn"],palliative:["p-ae1 l-iy ah t-ih-v","jj"],pallid:["p-ae1 l-ah-d","jj"],palm:["p-aa1-m","nn vb"],palpable:["p-ae1-l p-ah b-ah-l","jj"],palpably:["p-ae1-l p-ah b-l-iy","rb"],palpitation:["p-ae-l p-ih t-ey1 sh-ah-n","nn"],palsy:["p-ao1-l z-iy","nn"],paltry:["p-ao1-l t-r-iy","jj"],pamper:["p-ae1-m p-er","vb"],pampered:["p-ae1-m p-er-d","jj"],pamphlet:["p-ae1-m f-l-ah-t","nn"],pamphleteer:["p-ae-m f-l-ah t-ih1-r","nn"],pan:["p-ae1-n","nn vb"],panacea:["p-ae n-ah s-iy1 ah","nn"],panache:["p-ah n-aa1-sh","nn"],pancake:["p-ae1-n k-ey-k","nn"],pancreas:["p-ae1-n k-r-iy ah-s","nn"],pandanus:["p-ae-n d-ey1 n-ah-s","nn"],pandemic:["p-ae-n d-eh1 m-ih-k","nn"],pandemonium:["p-ae-n d-ih m-ow1 n-iy ah-m","nn"],pander:["p-ae1-n-d-er","vb"],pane:["p-ey1-n","nn"],panel:["p-ae1 n-ah-l","nn"],paneled:["p-ae1 n-ah-l-d","jj"],paneling:["p-ae1 n-ah l-ih-ng","nn"],panelist:["p-ae1 n-ah l-ih-s-t","nn"],panelization:["p-ae1 n-ah l-ah z-ey1 sh-ah-n","nn"],panelize:["p-ae1-n-ah-l-ay-z","vb"],pang:["p-ae1-ng","nn"],panhandle:["p-ae1-n hh-ae-n d-ah-l","nn"],panic:["p-ae1 n-ih-k","nn vb vbp"],panicked:["p-ae1 n-ih-k-t","vbd vbn jj"],panicky:["p-ae1 n-ih k-iy","jj"],panky:["p-ae1-ng k-iy","nn"],panoply:["p-ae1 n-aa p-l-iy","nn"],panorama:["p-ae n-er ae1 m-ah","nn"],panoramic:["p-ae n-er ae1 m-ih-k","jj"],pansy:["p-ae1-n z-iy","nn"],pant:["p-ae1-n-t","nn vb"],pantaloon:["p-ae1-n t-ah l-uw-n","nn"],pantheon:["p-ae1-n th-iy aa-n","nn"],panther:["p-ae1-n th-er","nn"],pantie:["p-ae1-n t-iy","nn"],panting:["p-ae1-n t-ih-ng","vbg jj nn"],pantomime:["p-ae1-n t-ah m-ay-m","nn vb vbp"],pantry:["p-ae1-n t-r-iy","nn"],pap:["p-ae1-p","nn"],papal:["p-ey1 p-ah-l","jj"],paper:["p-ey1 p-er","nn vb"],paperback:["p-ey1 p-er b-ae-k","nn jj"],paperboard:["p-ey1 p-er b-ao-r-d","nn"],paperboy:["p-ey1 p-er b-ao-y","nn"],paperless:["p-ey1 p-er l-ah-s","jj"],paperwork:["p-ey1 p-er w-er-k","nn"],papery:["p-ey1 p-er iy","jj"],paprika:["p-ae p-r-iy1 k-ah","nn"],parable:["p-eh1 r-ah b-ah-l","nn"],parachute:["p-eh1 r-ah sh-uw-t","nn vb"],parade:["p-er ey1-d","nn vb vbp"],paradigm:["p-eh1 r-ah d-ay-m","nn"],paradise:["p-eh1 r-ah d-ay-s","nn"],paradox:["p-eh1 r-ah d-aa-k-s","nn"],paradoxical:["p-eh r-ah d-aa1-k s-ih k-ah-l","jj"],paradoxically:["p-eh r-ah d-aa1-k s-ah-k l-iy","rb"],paragon:["p-eh1 r-ah g-aa-n","nn"],paragraph:["p-ae1 r-ah g-r-ae-f","nn"],parakeet:["p-eh1 r-ah k-iy-t","nn"],paralegal:["p-eh r-ah l-iy1 g-ah-l","nn"],parallel:["p-eh1 r-ah l-eh-l","jj rb vb vbp nn"],parallelism:["p-eh1 r-ah l-eh l-ih z-ah-m","nn"],paralysis:["p-er ae1 l-ah s-ah-s","nn"],paralyze:["p-eh1 r-ah l-ay-z","vb"],paralyzed:["p-eh1 r-ah l-ay-z-d","vbn jj"],paralyzing:["p-eh1 r-ah l-ay z-ih-ng","vbg jj"],parameter:["p-er ae1 m-ah t-er","nn"],parametric:["p-eh r-ah m-eh1 t-r-ih-k","jj"],paramilitary:["p-eh r-ah m-ih1 l-ah t-eh r-iy","jj"],paramount:["p-eh1 r-ah m-aw-n-t","jj"],paranoia:["p-eh r-ah n-oy1 ah","nn"],paranoiac:["p-eh r-ah n-oy1 ae-k","nn"],paranoid:["p-eh1 r-ah n-oy-d","jj"],paranormal:["p-eh r-ah n-ao1-r m-ah-l","jj"],paraphernalia:["p-eh r-ah f-ah n-ey1 l-y-ah","nn"],paraphrase:["p-eh1 r-ah f-r-ey-z","nn vb vbp"],parasite:["p-eh1 r-ah s-ay-t","nn"],parasitic:["p-eh r-ah s-ih1 t-ih-k","jj"],paratrooper:["p-eh1 r-ah t-r-uw p-er","nn"],parcel:["p-aa1-r s-ah-l","nn vbp jj vb"],parceling:["p-aa1-r s-ah-l ih-ng","nn"],parch:["p-aa1-r-ch","vb"],parched:["p-aa1-r-ch-t","vbn vbd jj"],parchment:["p-aa1-r-ch m-ah-n-t","nn"],pardon:["p-aa1-r d-ah-n","vb nn"],pare:["p-eh1-r","vb"],parent:["p-eh1 r-ah-n-t","nn jj"],parentage:["p-eh1 r-ah-n t-ah-jh","nn"],parental:["p-er eh1-n t-ah-l","jj"],parenthesis:["p-er eh1-n th-ah s-ih-s","nn"],parenthood:["p-eh1 r-ah-n-t hh-uh-d","nn"],parenting:["p-eh1 r-ah-n t-ih-ng","nn"],pariah:["p-er ay1 ah","nn"],parish:["p-ae1 r-ih-sh","nn"],parishioner:["p-er ih1 sh-ah n-er","nn"],parity:["p-eh1 r-ah t-iy","nn"],park:["p-aa1-r-k","nn vb"],parked:["p-aa1-r-k-t","vbn jj vbd"],parking:["p-aa1-r k-ih-ng","nn jj vbg"],parkway:["p-aa1-r-k w-ey","nn"],parlance:["p-aa1-r l-ah-n-s","nn"],parlay:["p-aa1-r-l-ey","vb"],parley:["p-aa1-r l-iy","nn vb"],parliament:["p-aa1-r l-ah m-ah-n-t","nn"],parliamentarian:["p-aa-r l-ah m-ah-n t-eh1 r-iy ah-n","nn"],parliamentary:["p-aa-r l-ah m-eh1-n t-er iy","jj"],parlor:["p-aa1-r l-er","nn"],parochial:["p-er ow1 k-iy ah-l","jj"],parodied:["p-eh1 r-ah d-iy-d","vbd"],parody:["p-eh1 r-ah d-iy","nn vb"],parole:["p-er ow1-l","nn jj"],parolee:["p-er ow l-iy1","nn"],parried:["p-eh1 r-iy-d","vbd"],parrot:["p-eh1 r-ah-t","nn"],parry:["p-eh1 r-iy","vb"],parse:["p-aa1-r-s","vb"],parsimony:["p-aa1-r s-ah m-ow n-iy","nn"],parsley:["p-aa1-r-s l-iy","nn"],parson:["p-aa1-r s-ah-n","nn"],parsonage:["p-aa1-r s-ah-n ih-jh","nn"],part:["p-aa1-r-t","nn jj rb vb"],partake:["p-aa-r t-ey1-k","vb vbp"],parted:["p-aa1-r t-ah-d","vbd vbn jj"],partial:["p-aa1-r sh-ah-l","jj nn"],partially:["p-aa1-r sh-ah l-iy","rb"],participant:["p-aa-r t-ih1 s-ah p-ah-n-t","nn"],participate:["p-aa-r t-ih1 s-ah p-ey-t","vb vbp"],participating:["p-aa-r t-ih1 s-ah p-ey t-ih-ng","vbg jj"],participation:["p-aa-r t-ih s-ah p-ey1 sh-ah-n","nn"],participative:["p-aa-r t-ih1 s-ah p-ah t-ih-v","jj"],participatory:["p-aa-r t-ih1 s-ah p-ah t-ao r-iy","jj"],particle:["p-aa1-r t-ah k-ah-l","nn"],particular:["p-er t-ih1 k-y-ah l-er","jj nn rb"],particularity:["p-er t-ih k-y-ah l-ae1 r-ah t-iy","nn"],particularly:["p-aa-r t-ih1 k-y-ah l-er l-iy","rb"],particulate:["p-er t-ih1 k-y-ah l-ah-t","jj"],partisan:["p-aa1-r t-ah z-ah-n","jj nn"],partisanship:["p-aa1-r t-ah z-ah-n sh-ih-p","nn"],partition:["p-aa-r t-ih1 sh-ah-n","nn vb"],partly:["p-aa1-r-t l-iy","rb"],partner:["p-aa1-r-t n-er","nn"],partnership:["p-aa1-r-t n-er sh-ih-p","nn"],party:["p-aa1-r t-iy","nn vb"],pass:["p-ae1-s","vb vbp nn"],passable:["p-ae1 s-ah b-ah-l","jj"],passably:["p-ae1 s-ah b-l-iy","rb"],passage:["p-ae1 s-ah-jh","nn"],passageway:["p-ae1 s-ah-jh w-ey","nn"],passbook:["p-ae1-s b-uh-k","nn"],passe:["p-ae s-ey1","jj"],passel:["p-ae1 s-ih-l","nn"],passenger:["p-ae1 s-ah-n jh-er","nn jj"],passerby:["p-ae1 s-er b-iy","nn"],passing:["p-ae1 s-ih-ng","vbg jj nn"],passion:["p-ae1 sh-ah-n","nn"],passionate:["p-ae1 sh-ah n-ah-t","jj"],passionately:["p-ae1 sh-ah n-ah-t l-iy","rb"],passive:["p-ae1 s-ih-v","jj nn"],passively:["p-ae1 s-ih-v l-iy","rb"],passivity:["p-ah s-ih1 v-ih t-iy","nn"],passport:["p-ae1-s p-ao-r-t","nn"],password:["p-ae1-s w-er-d","nn"],past:["p-ae1-s-t","jj in nn rb"],pasta:["p-aa1 s-t-ah","nn"],paste:["p-ey1-s-t","nn vb"],pastel:["p-ae s-t-eh1-l","jj nn"],pasteurization:["p-ae-s ch-er ah z-ey1 sh-ah-n","nn"],pasteurize:["p-ae1-s-ch-er-ay-z","vb"],pastime:["p-ae1 s-t-ay-m","nn"],pastor:["p-ae1 s-t-er","nn"],pastoral:["p-ae1 s-t-er ah-l","jj"],pastrami:["p-ah s-t-r-aa1 m-iy","nn"],pastry:["p-ey1-s t-r-iy","nn"],pasture:["p-ae1-s ch-er","nn jj vb"],pat:["p-ae1-t","jj nn vb"],patch:["p-ae1-ch","nn vb"],patched:["p-ae1-ch-t","vbn jj"],patchwork:["p-ae1-ch w-er-k","nn jj"],pate:["p-ey1-t","nn"],patent:["p-ae1 t-ah-n-t","nn jj vb"],patented:["p-ae1 t-ah-n t-ah-d","vbn vbd jj"],patently:["p-ae1 t-ah-n-t l-iy","rb"],pater:["p-ey1 t-er","nn"],paternal:["p-ah t-er1 n-ah-l","jj"],paternalism:["p-ah t-er1 n-ah l-ih z-ah-m","nn jj"],paternalistic:["p-ah t-er n-ah l-ih1 s-t-ih-k","jj"],paternity:["p-ah t-er1 n-ih t-iy","nn"],path:["p-ae1-th","nn"],pathetic:["p-ah th-eh1 t-ih-k","jj"],pathfinder:["p-ae1-th f-ay-n d-er","nn"],pathogenic:["p-ae th-ah jh-eh1 n-ih-k","jj"],pathological:["p-ae th-ah l-aa1 jh-ih k-ah-l","jj"],pathologist:["p-ah th-aa1 l-ah jh-ah-s-t","nn"],pathology:["p-ah th-aa1 l-ah jh-iy","nn"],pathos:["p-ey1 th-aa-s","nn"],pathway:["p-ae1-th w-ey","nn"],patience:["p-ey1 sh-ah-n-s","nn"],patient:["p-ey1 sh-ah-n-t","nn jj"],patiently:["p-ey1 sh-ah-n-t l-iy","rb"],patina:["p-ah t-iy1 n-ah","nn"],patio:["p-ae1 t-iy ow","nn"],patriarch:["p-ey1 t-r-iy aa-r-k","nn"],patriarchal:["p-ey t-r-iy aa1-r k-ah-l","jj"],patriarchy:["p-ey1 t-r-iy aa-r k-iy","nn"],patrimony:["p-ae1 t-r-ah m-ow n-iy","nn"],patriot:["p-ey1 t-r-iy ah-t","nn"],patriotic:["p-ey t-r-iy aa1 t-ih-k","jj nn"],patriotism:["p-ey1 t-r-iy ah t-ih z-ah-m","nn"],patrol:["p-ah t-r-ow1-l","nn vbp vb"],patrolman:["p-ah t-r-ow1-l m-ae-n","nn"],patron:["p-ey1 t-r-ah-n","nn"],patronage:["p-ae1 t-r-ah n-ih-jh","nn"],patronize:["p-ey1 t-r-ah n-ay-z","vb"],patronizing:["p-ey1 t-r-ah n-ay z-ih-ng","vbg jj"],patsy:["p-ae1-t s-iy","nn"],patter:["p-ae1 t-er","nn vb"],pattern:["p-ae1 t-er-n","nn vb"],patterned:["p-ae1 t-er-n-d","vbn jj"],patty:["p-ae1 t-iy","nn"],paucity:["p-ao1 s-ah t-iy","nn"],paunchy:["p-ao1-n ch-iy","jj"],pauper:["p-ao1 p-er","nn"],pause:["p-ao1-z","nn vbp vb"],pave:["p-ey1-v","vb"],paved:["p-ey1-v-d","jj vbd vbn"],pavement:["p-ey1-v m-ah-n-t","nn"],pavilion:["p-ah v-ih1-l y-ah-n","nn"],paw:["p-ao1","nn vb"],pawn:["p-ao1-n","nn vb"],pawnshop:["p-ao1-n sh-aa-p","nn"],pay:["p-ey1","vb vbd vbp nn"],payable:["p-ey1 ah b-ah-l","jj"],payback:["p-ey1 b-ae-k","nn"],paycheck:["p-ey1 ch-eh-k","nn"],payday:["p-ey1 d-ey","nn"],payer:["p-ey1 er","nn"],paying:["p-ey1 ih-ng","vbg jj"],payload:["p-ey1 l-ow-d","nn"],payment:["p-ey1 m-ah-n-t","nn"],payoff:["p-ey1 ao-f","nn"],payola:["p-ey ow1 l-ah","nn"],payout:["p-ey1 aw-t","nn"],payroll:["p-ey1 r-ow-l","nn"],pea:["p-iy1","nn"],peace:["p-iy1-s","nn"],peaceable:["p-iy1 s-ah b-ah-l","jj"],peaceful:["p-iy1-s f-ah-l","jj"],peacefully:["p-iy1-s f-ah l-iy","rb"],peacekeeping:["p-iy1-s k-iy p-ih-ng","jj"],peacemaker:["p-iy1-s m-ey k-er","nn"],peacemaking:["p-iy1-s m-ey k-ih-ng","nn jj"],peacetime:["p-iy1-s t-ay-m","nn"],peach:["p-iy1-ch","nn"],peacock:["p-iy1 k-aa-k","nn"],peak:["p-iy1-k","nn vbp jj vb"],peaked:["p-iy1-k-t","vbd jj vbn"],peal:["p-iy1-l","nn"],peanut:["p-iy1 n-ah-t","nn jj"],pear:["p-eh1-r","nn"],pearl:["p-er1-l","nn"],pearly:["p-er1 l-iy","jj"],peasant:["p-eh1 z-ah-n-t","nn jj"],pebble:["p-eh1 b-ah-l","nn"],pecan:["p-ah k-aa1-n","nn"],peck:["p-eh1-k","vbp nn vb"],peculiar:["p-ah k-y-uw1 l-y-er","jj nn"],peculiarity:["p-ih k-y-uw l-iy eh1 r-ah t-iy","nn"],peculiarly:["p-ih k-y-uw1 l-y-er l-iy","rb"],pecuniary:["p-eh k-y-uw1 n-iy eh r-iy","jj"],pedagogical:["p-eh d-ah g-aa1 jh-ih k-ah-l","jj"],pedal:["p-eh1 d-ah-l","vb nn"],pedantic:["p-ah d-ae1-n t-ih-k","jj"],peddle:["p-eh1 d-ah-l","vb vbp"],peddler:["p-eh1-d l-er","nn"],peddling:["p-eh1 d-ah-l ih-ng","vbg jj nn"],pedestal:["p-eh1 d-ah s-t-ah-l","nn"],pedestrian:["p-ah d-eh1-s t-r-iy ah-n","jj nn"],pediatric:["p-iy d-iy ae1 t-r-ih-k","jj"],pediatrician:["p-iy d-iy ah t-r-ih1 sh-ah-n","nn"],pediatrics:["p-iy d-iy ae1 t-r-ih-k-s","nn"],pedigree:["p-eh1 d-ah g-r-iy","nn"],peed:["p-iy1-d","vbn"],peek:["p-iy1-k","nn vb"],peel:["p-iy1-l","vb"],peep:["p-iy1-p","nn vb"],peer:["p-ih1-r","nn vbp vb"],peerless:["p-ih1-r l-ih-s","jj"],peg:["p-eh1-g","vbp nn vb"],pegboard:["p-eh1-g b-ao-r-d","nn"],pegged:["p-eh1-g-d","vbn vbd jj"],pejorative:["p-ah jh-ao1 r-ah t-ih-v","jj"],pellet:["p-eh1 l-ah-t","nn"],pelt:["p-eh1-l-t","nn"],pelvic:["p-eh1-l v-ih-k","jj nn"],pelvis:["p-eh1-l v-ah-s","nn"],pen:["p-eh1-n","nn vb"],penal:["p-iy1 n-ah-l","jj"],penalize:["p-eh1 n-ah l-ay-z","vb vbp"],penalty:["p-eh1 n-ah-l t-iy","nn"],penance:["p-eh1 n-ah-n-s","nn"],pence:["p-eh1-n-s","nn"],penchant:["p-eh1-n ch-ah-n-t","nn"],pencil:["p-eh1-n s-ah-l","nn vb"],pendant:["p-eh1-n d-ah-n-t","nn"],pending:["p-eh1-n d-ih-ng","vbg jj"],pendulum:["p-eh1-n jh-ah l-ah-m","nn"],penetrate:["p-eh1 n-ah t-r-ey-t","vb vbp"],penetrating:["p-eh1 n-ah t-r-ey t-ih-ng","jj vbg"],penetration:["p-eh n-ah t-r-ey1 sh-ah-n","nn"],penicillin:["p-eh n-ah s-ih1 l-ah-n","nn"],peninsula:["p-ah n-ih1-n s-ah l-ah","nn"],penitentiary:["p-eh n-ih t-eh1-n ch-er iy","nn"],penman:["p-eh1-n m-ah-n","nn"],pennant:["p-eh1 n-ah-n-t","nn"],penniless:["p-eh1 n-iy l-ah-s","jj"],penny:["p-eh1 n-iy","nn"],pension:["p-eh1-n sh-ah-n","nn"],pensioner:["p-eh1-n sh-ah n-er","nn"],pentagon:["p-eh1-n t-ih g-aa-n","nn"],penthouse:["p-eh1-n-t hh-aw-s","nn"],peony:["p-iy1 ah n-iy","nn"],people:["p-iy p-ah-l","nn"],pepper:["p-eh1 p-er","nn vb"],peppered:["p-eh1 p-er-d","vbd vbn jj"],peppermint:["p-eh1 p-er m-ih-n-t","nn"],pepperoni:["p-eh p-er ow1 n-iy","nn"],peppy:["p-eh1 p-iy","jj"],perceive:["p-er s-iy1-v","vb vbp"],perceived:["p-er s-iy1-v-d","vbn vbd jj"],percent:["p-er s-eh1-n-t","nn"],percentage:["p-er s-eh1-n t-ah-jh","nn"],perceptible:["p-er s-eh1-p t-ah b-ah-l","jj"],perception:["p-er s-eh1-p sh-ah-n","nn"],perceptive:["p-er s-eh1-p t-ih-v","jj"],perceptual:["p-er s-eh1-p ch-ah w-ah-l","jj"],perch:["p-er1-ch","nn vb"],perchlorate:["p-er k-l-ao1 r-ey-t","nn"],percussion:["p-er k-ah1 sh-ah-n","nn"],percussionist:["p-er k-ah1 sh-ah n-ih-s-t","nn"],peremptory:["p-er eh1-m-p t-er iy","jj"],perennial:["p-er eh1 n-iy ah-l","jj"],perennially:["p-er eh1 n-iy ah l-iy","rb"],perestroika:["p-eh r-ah s-t-r-oy1 k-ah","nn"],perfect:["p-er f-eh1-k-t","jj nn vb"],perfection:["p-er f-eh1-k sh-ah-n","nn"],perfectionism:["p-er f-eh1-k sh-ah n-ih z-ah-m","nn"],perfectly:["p-er1 f-ah-k-t l-iy","rb"],perfidy:["p-er1 f-ih d-iy","nn"],perforated:["p-er1 f-er ey t-ah-d","jj"],perforation:["p-er f-er ey1 sh-ah-n","nn"],perforce:["p-er f-ao1-r-s","rb"],perform:["p-er f-ao1-r-m","vb vbp"],performance:["p-er f-ao1-r m-ah-n-s","nn"],performer:["p-er f-ao1-r m-er","nn jj"],performing:["p-er f-ao1-r m-ih-ng","vbg jj"],perfume:["p-er f-y-uw1-m","nn vb"],perfumed:["p-er f-y-uw1-m-d","jj vbn"],perfunctory:["p-er f-ah1-ng-k t-er iy","jj"],perhaps:["p-er hh-ae1-p-s","rb"],peril:["p-eh1 r-ah-l","nn"],perilous:["p-eh1 r-ah l-ah-s","jj"],perilously:["p-eh1 r-ah l-ah-s l-iy","rb"],perimeter:["p-er ih1 m-ah t-er","nn"],period:["p-ih1 r-iy ah-d","nn"],periodic:["p-ih r-iy aa1 d-ih-k","jj"],periodical:["p-ih r-iy aa1 d-ih k-ah-l","nn"],periodically:["p-iy r-iy aa1 d-ih k-ah l-iy","rb"],periodontal:["p-eh r-iy ah d-aa1-n t-ah-l","jj"],peripheral:["p-er ih1 f-er ah-l","jj"],periphery:["p-er ih1 f-er iy","nn"],perish:["p-eh1 r-ih-sh","vb"],perishable:["p-eh1 r-ih sh-ah b-ah-l","jj"],perjury:["p-er1 jh-er iy","nn"],perk:["p-er1-k","jj vb"],perky:["p-er1 k-iy","jj"],permanence:["p-er1 m-ah n-ah-n-s","nn"],permanent:["p-er1 m-ah n-ah-n-t","jj"],permanently:["p-er1 m-ah n-ah-n-t l-iy","rb"],permeate:["p-er1 m-iy ey-t","vb"],permissible:["p-er m-ih1 s-ah b-ah-l","jj nn"],permission:["p-er m-ih1 sh-ah-n","nn"],permissive:["p-er m-ih1 s-ih-v","jj"],permit:["p-er m-ih1-t","vb vbp nn"],permitted:["p-er m-ih1 t-ah-d","vbn jj vbd"],pernicious:["p-er n-ih1 sh-ah-s","jj"],peroxide:["p-er aa1-k s-ay-d","nn"],perpendicular:["p-er p-ah-n d-ih1 k-y-ah l-er","jj"],perpetrate:["p-er1 p-ah t-r-ey-t","vb"],perpetrator:["p-er1 p-ah t-r-ey t-er","nn"],perpetual:["p-er p-eh1 ch-uw ah-l","jj"],perpetually:["p-er p-eh1 ch-uw ah l-iy","rb"],perpetuate:["p-er p-eh1 ch-ah-w ey-t","vb vbp"],perpetuation:["p-er p-eh ch-ah-w ey1 sh-ah-n","nn"],perpetuity:["p-er p-ih t-y-uw1 ih t-iy","nn"],perplex:["p-er-p-l-eh1-k-s","vb"],perplexed:["p-er p-l-eh1-k-s-t","jj vbn"],perplexing:["p-er p-l-eh1-k s-ih-ng","jj"],perplexity:["p-er p-l-eh1-k s-ah t-iy","nn"],perquisite:["p-er1 k-w-ah z-ih-t","nn"],persecute:["p-er1 s-ah k-y-uw-t","vb vbp"],persecution:["p-er s-ah k-y-uw1 sh-ah-n","nn"],perseverance:["p-er s-ah v-ih1 r-ah-n-s","nn"],persevere:["p-er s-ah v-ih1-r","vb vbp"],pershare:["p-er sh-eh1-r","jj"],persist:["p-er s-ih1-s-t","vb vbp"],persistence:["p-er s-ih1 s-t-ah-n-s","nn jj"],persistent:["p-er s-ih1 s-t-ah-n-t","jj nn"],persistently:["p-er s-ih1 s-t-ah-n-t l-iy","rb"],persisting:["p-er s-ih1 s-t-ih-ng","vbg jj"],person:["p-er1 s-ah-n","nn"],persona:["p-er s-ow1 n-ah","nn"],personal:["p-er1 s-ih n-ih-l","jj nn"],personality:["p-er s-ah n-ae1 l-ih t-iy","nn"],personalize:["p-er1 s-ah-n ah l-ay-z","vb"],personalized:["p-er1 s-ah-n ah l-ay-z-d","vbn jj"],personally:["p-er1 s-ah-n ah l-iy","rb"],personification:["p-er s-aa n-ah f-ah k-ey1 sh-ah-n","nn"],personified:["p-er s-aa1 n-ah f-ay-d","vbn vbd"],personifies:["p-er s-aa1 n-ah f-ay-z","vbz"],personify:["p-er-s-aa1-n-ah-f-ay","vb"],personnel:["p-er s-ah n-eh1-l","jj nn"],perspective:["p-er s-p-eh1-k t-ih-v","nn jj"],perspiration:["p-er s-p-er ey1 sh-ah-n","nn"],persuade:["p-er s-w-ey1-d","vb vbp"],persuasion:["p-er s-w-ey1 zh-ah-n","nn"],persuasive:["p-er s-w-ey1 s-ih-v","jj"],persuasively:["p-er s-w-ey1 s-ih-v l-iy","rb"],persuasiveness:["p-er s-w-ey1 s-ih-v n-ah-s","nn"],pert:["p-er1-t","jj"],pertain:["p-er t-ey1-n","vbp vb"],pertinent:["p-er1 t-ah n-ah-n-t","jj"],perturb:["p-er-t-er1-b","vb"],perturbation:["p-er t-er b-ey1 sh-ah-n","nn"],perturbed:["p-er t-er1-b-d","jj vbd vbn"],perusal:["p-er uw1 z-ah-l","nn"],peruse:["p-er uw1-z","vb vbp"],pervade:["p-er v-ey1-d","vb vbp"],pervasive:["p-er v-ey1 s-ih-v","jj"],pervasiveness:["p-er v-ey1 s-ih-v n-ih-s","nn"],perverse:["p-er v-er1-s","jj"],perversely:["p-er v-er1-s l-iy","rb"],perversion:["p-er v-er1 zh-ah-n","nn"],pervert:["p-er1 v-er-t","nn vb"],perverted:["p-er v-er1 t-ih-d","vbn jj vbd"],peso:["p-ey1 s-ow","nn"],pessimism:["p-eh1 s-ah m-ih z-ah-m","nn"],pessimist:["p-eh1 s-ah m-ah-s-t","nn"],pessimistic:["p-eh s-ah m-ih1 s-t-ih-k","jj"],pest:["p-eh1-s-t","nn jjs"],pester:["p-eh1 s-t-er","vb"],pesticide:["p-eh1 s-t-ah s-ay-d","nn"],pestilence:["p-eh1 s-t-ah l-ah-n-s","nn"],pet:["p-eh1-t","nn vb jj"],petal:["p-eh1 t-ah-l","nn"],peter:["p-iy1 t-er","vb"],petite:["p-ah t-iy1-t","jj"],petition:["p-ah t-ih1 sh-ah-n","nn vb"],petitioner:["p-ah t-ih1 sh-ah-n er","nn"],petrified:["p-eh1 t-r-ah f-ay-d","jj vbn"],petrify:["p-eh1-t-r-ah-f-ay","vb"],petrochemical:["p-eh t-r-ow k-eh1 m-ih k-ah-l","nn jj"],petroleum:["p-ah t-r-ow1 l-iy ah-m","nn"],pettiness:["p-eh1 t-iy n-ah-s","nn"],petting:["p-eh1 t-ih-ng","nn"],petty:["p-eh1 t-iy","jj"],petulance:["p-eh1 ch-ah l-ah-n-s","nn"],petulant:["p-eh1 ch-ah l-ah-n-t","jj"],pew:["p-y-uw1","nn"],pewter:["p-y-uw1 t-er","nn"],phalanx:["f-ey1 l-ae-ng-k-s","nn"],phantom:["f-ae1-n t-ah-m","jj nn"],pharmaceutical:["f-aa-r m-ah s-uw1 t-ih k-ah-l","jj nn"],pharmacist:["f-aa1-r m-ah s-ih-s-t","nn"],pharmacological:["f-aa-r m-ah k-ah l-aa1 jh-ih k-ah-l","jj"],pharmacology:["f-aa-r m-ah k-aa1 l-ah jh-iy","nn"],pharmacy:["f-aa1-r m-ah s-iy","nn"],phase:["f-ey1-z","nn vb"],pheasant:["f-eh1 z-ah-n-t","nn"],phenolic:["f-ah n-aa1 l-ih-k","nn jj"],phenomenal:["f-ah n-aa1 m-ah n-ah-l","jj"],phenomenally:["f-ah n-aa1 m-ah n-ah l-iy","rb"],phenomenon:["f-ah n-aa1 m-ah n-aa-n","nn"],philander:["f-ah-l-ae1-n-d-er","vb"],philanthropic:["f-ih l-ah-n th-r-aa1 p-ih-k","jj"],philanthropist:["f-ah l-ae1-n th-r-ah p-ah-s-t","nn"],philanthropy:["f-ih l-ae1-n th-r-ah p-iy","nn"],philharmonic:["f-ih l-hh-aa-r m-aa1 n-ih-k","nn"],philodendron:["f-ih l-ah d-eh1-n d-r-ah-n","nn"],philosopher:["f-ah l-aa1 s-ah f-er","nn"],philosophic:["f-ih l-ah s-aa1 f-ih-k","jj"],philosophical:["f-ih l-ah s-aa1 f-ih k-ah-l","jj"],philosophically:["f-ih l-ah s-aa1 f-ih k-ah l-iy","rb"],philosophy:["f-ah l-aa1 s-ah f-iy","nn"],phobia:["f-ow1 b-iy ah","nn"],phoenix:["f-iy1 n-ih-k-s","nn"],phone:["f-ow1-n","nn vb vbp"],phonetic:["f-ah n-eh1 t-ih-k","jj"],phoney:["f-ow1 n-iy","jj"],phonic:["f-aa1 n-ih-k","jj"],phonograph:["f-ow1 n-ah g-r-ae-f","nn"],phony:["f-ow1 n-iy","jj nn"],phosphate:["f-aa1-s f-ey-t","nn"],phosphor:["f-aa1-s f-ao-r","nn"],photo:["f-ow1 t-ow","nn jj"],photocopier:["f-ow1 t-ow k-aa p-iy er","nn"],photocopy:["f-ow1 t-ow k-aa p-iy","vb"],photogenic:["f-ow t-ah jh-eh1 n-ih-k","jj"],photograph:["f-ow1 t-ah g-r-ae-f","nn vb"],photographer:["f-ah t-aa1 g-r-ah f-er","nn"],photographic:["f-ow t-ah g-r-ae1 f-ih-k","jj"],photography:["f-ah t-aa1 g-r-ah f-iy","nn"],photosynthesis:["f-ow t-ow s-ih1-n th-ah s-ih-s","nn"],phrase:["f-r-ey1-z","nn vb"],phrasing:["f-r-ey1 z-ih-ng","nn"],phyla:["f-ay1 l-ah","nn"],physical:["f-ih1 z-ih k-ah-l","jj nn"],physically:["f-ih1 z-ih k-ah l-iy","rb"],physician:["f-ah z-ih1 sh-ah-n","nn"],physicist:["f-ih1 z-ih s-ih-s-t","nn"],physics:["f-ih1 z-ih-k-s","nn"],physiological:["f-ih z-iy ah l-aa1 jh-ih k-ah-l","jj"],physiology:["f-ih z-iy aa1 l-ah jh-iy","nn"],physique:["f-ah z-iy1-k","nn"],pi:["p-ay1","nn"],pianist:["p-iy ae1 n-ah-s-t","nn"],piano:["p-iy ae1 n-ow","nn"],piazza:["p-iy ae1 z-ah","nn"],picayune:["p-ih k-iy y-uw1-n","jj"],pick:["p-ih1-k","vb vbp nn"],picked:["p-ih1-k-t","vbd vb vbn"],picker:["p-ih1 k-er","nn"],picket:["p-ih1 k-ah-t","nn vb"],picketer:["p-ih1 k-ah t-er","nn"],pickier:["p-ih1 k-iy er","jjr"],pickle:["p-ih1 k-ah-l","nn"],pickled:["p-ih1 k-ah-l-d","jj"],pickpocket:["p-ih1-k p-aa k-ah-t","nn"],pickup:["p-ih1 k-ah-p","nn jj"],picky:["p-ih1 k-iy","jj"],picnic:["p-ih1-k n-ih-k","nn"],pico:["p-iy1 k-ow","nn"],pictorial:["p-ih-k t-ao1 r-iy ah-l","jj"],picture:["p-ih1-k ch-er","nn vb vbp"],picturesque:["p-ih1-k ch-er ah-s-k","jj nn"],piddling:["p-ih1 d-ah-l ih-ng","jj"],pie:["p-ay1","nn rp"],piece:["p-iy1-s","nn vb"],piecemeal:["p-iy1-s m-iy-l","rb nn"],pier:["p-ih1-r","nn"],pierce:["p-ih1-r-s","vb"],piercing:["p-ih1-r s-ih-ng","vbg jj"],piety:["p-ay1 ah t-iy","nn"],pig:["p-ih1-g","nn"],pigeon:["p-ih1 jh-ah-n","nn"],piggyback:["p-ih1 g-iy b-ae-k","nn vb"],pigment:["p-ih1-g m-ah-n-t","nn"],pigskin:["p-ih1-g s-k-ih-n","nn"],pike:["p-ay1-k","nn"],piker:["p-ay1 k-er","nn"],pile:["p-ay1-l","nn vbp vb"],piled:["p-ay1-l-d","vbd vbn jj"],piles:["p-ay1-l-z","nn"],pileup:["p-ay1 l-ah-p","nn"],pilfer:["p-ih1-l-f-er","vb"],pilgrim:["p-ih1-l g-r-ah-m","nn"],pilgrimage:["p-ih1-l g-r-ah m-ah-jh","nn"],piling:["p-ay1 l-ih-ng","vbg nn"],pill:["p-ih1-l","nn"],pillage:["p-ih1 l-ih-jh","vb"],pillar:["p-ih1 l-er","nn"],pillory:["p-ih1-l-er-iy","vb"],pillow:["p-ih1 l-ow","nn"],pilot:["p-ay1 l-ah-t","nn jj vb"],pimp:["p-ih1-m-p","nn"],pimple:["p-ih1-m p-ah-l","nn"],pin:["p-ih1-n","nn vbp vb"],pinball:["p-ih1-n b-ao-l","nn"],pinch:["p-ih1-n-ch","nn vb"],pinched:["p-ih1-n-ch-t","vbn vbd jj"],pine:["p-ay1-n","nn vb vbp"],pineapple:["p-ay1-n ae p-ah-l","nn"],ping:["p-ih1-ng","nn vb"],pinhole:["p-ih1-n hh-ow-l","nn"],pink:["p-ih1-ng-k","jj nn"],pinnacle:["p-ih1 n-ah k-ah-l","nn"],pinpoint:["p-ih1-n p-oy-n-t","vb nn vbp"],pinpointed:["p-ih1-n p-oy-n t-ih-d","vbn jj vbd"],pint:["p-ay1-n-t","nn"],pinto:["p-ih1-n t-ow","nn"],pioneer:["p-ay ah n-ih1-r","nn vb"],pioneering:["p-ay ah n-ih1 r-ih-ng","vbg jj"],pious:["p-ay1 ah-s","jj"],piously:["p-ay1 ah-s l-iy","rb"],pipe:["p-ay1-p","nn vb"],pipeline:["p-ay1-p l-ay-n","nn"],piper:["p-ay1 p-er","nn"],piping:["p-ay1 p-ih-ng","nn"],piquant:["p-iy1 k-ah-n-t","jj"],pique:["p-iy1-k","jj nn vb"],piracy:["p-ay1 r-ah s-iy","nn"],piranha:["p-ih r-ae1-n-hh ah","nn"],pirate:["p-ay1 r-ah-t","nn vb"],piss:["p-ih1-s","vb"],pistachio:["p-ah s-t-ae1 sh-iy ow","jj"],pistol:["p-ih1 s-t-ah-l","nn"],piston:["p-ih1 s-t-ah-n","nn"],pit:["p-ih1-t","nn vbp vb"],pitch:["p-ih1-ch","nn jj vb vbp"],pitched:["p-ih1-ch-t","vbd jj vbn"],pitcher:["p-ih1 ch-er","nn"],pitchfork:["p-ih1-ch f-ao-r-k","nn"],pitfall:["p-ih1-t f-ao-l","nn"],pith:["p-ih1-th","nn"],pithy:["p-ih1 th-iy","jj"],pitiable:["p-ih1 t-iy ah b-ah-l","jj"],pitiful:["p-ih1 t-ah f-ah-l","jj"],pitifully:["p-ih1 t-ih f-ah l-iy","rb"],pitiless:["p-ih1 t-iy l-ah-s","jj"],pittance:["p-ih1 t-ah-n-s","nn"],pity:["p-ih1 t-iy","nn vb vbp"],pivot:["p-ih1 v-ah-t","jj nn vb"],pivotal:["p-ih1 v-ah t-ah-l","jj"],pizza:["p-iy1-t s-ah","nn"],pizzazz:["p-ih z-ae1-z","nn"],pizzeria:["p-iy-t s-er iy1 ah","nn"],placard:["p-l-ae1 k-er-d","nn"],placate:["p-l-ey1 k-ey-t","vb"],place:["p-l-ey1-s","nn vbp rb vb"],placebo:["p-l-ah s-iy1 b-ow","nn"],placement:["p-l-ey1-s m-ah-n-t","nn"],placid:["p-l-ae1 s-ah-d","jj"],plagiarism:["p-l-ey1 jh-er ih z-ah-m","nn"],plagiarize:["p-l-ey1-jh-er-ay-z","vb"],plague:["p-l-ey1-g","nn vb vbp"],plaid:["p-l-ae1-d","jj nn"],plain:["p-l-ey1-n","jj nn rb"],plainer:["p-l-ey1 n-er","jjr"],plainly:["p-l-ey1-n l-iy","rb"],plaintiff:["p-l-ey1-n t-ah-f","nn"],plaintive:["p-l-ey1-n t-ih-v","jj"],plaintively:["p-l-ey1-n t-ay-v l-iy","rb"],plan:["p-l-ae1-n","nn vb vbn vbp"],planar:["p-l-ey1 n-er","jj"],plane:["p-l-ey1-n","nn vb"],planeload:["p-l-ey1-n l-ow-d","nn"],planer:["p-l-ey1 n-er","nn"],planet:["p-l-ae1 n-ah-t","nn"],planetarium:["p-l-ae n-ah t-eh1 r-iy ah-m","nn"],planetary:["p-l-ae1 n-ah t-eh r-iy","jj"],plank:["p-l-ae1-ng-k","nn"],planking:["p-l-ae1-ng k-ih-ng","nn"],planned:["p-l-ae1-n-d","vbn jj vbd"],planner:["p-l-ae1 n-er","nn"],plant:["p-l-ae1-n-t","nn vb"],plantain:["p-l-ae1-n t-ah-n","nn"],plantation:["p-l-ae-n t-ey1 sh-ah-n","nn"],planted:["p-l-ae1-n t-ah-d","vbn jj vbd"],planter:["p-l-ae1-n t-er","nn"],plaque:["p-l-ae1-k","nn"],plasma:["p-l-ae1-z m-ah","nn"],plaster:["p-l-ae1 s-t-er","nn vb"],plastered:["p-l-ae1 s-t-er-d","vbn jj"],plasterer:["p-l-ae1 s-t-er er","nn"],plastering:["p-l-ae1 s-t-er ih-ng","nn"],plastic:["p-l-ae1 s-t-ih-k","nn jj"],plate:["p-l-ey1-t","nn vb"],plateau:["p-l-ae t-ow1","nn"],platform:["p-l-ae1-t f-ao-r-m","nn"],platinum:["p-l-ae1-t n-ah-m","nn"],platitude:["p-l-ae1 t-ih t-uw-d","nn"],platoon:["p-l-ah t-uw1-n","nn"],platter:["p-l-ae1 t-er","jj nn"],plaudit:["p-l-ao1 d-ih-t","nn"],plausibility:["p-l-ao z-ih b-ih1 l-ih t-iy","nn"],plausible:["p-l-ao1 z-ah b-ah-l","jj nn"],plausibly:["p-l-ao1 z-ah b-l-iy","rb"],play:["p-l-ey1","vb nn vbp"],playback:["p-l-ey1 b-ae-k","nn"],playboy:["p-l-ey1 b-oy","nn"],player:["p-l-ey1 er","nn"],playful:["p-l-ey1 f-ah-l","jj"],playfully:["p-l-ey1 f-ah l-iy","rb"],playfulness:["p-l-ey1 f-ah-l n-ah-s","nn"],playground:["p-l-ey1 g-r-aw-n-d","nn"],playhouse:["p-l-ey1 hh-aw-s","nn"],playing:["p-l-ey1 ih-ng","vbg jj nn"],playmate:["p-l-ey1 m-ey-t","nn"],playoff:["p-l-ey1 ao-f","nn"],playpen:["p-l-ey1 p-eh-n","nn"],playroom:["p-l-ey1 r-uw-m","nn"],plaything:["p-l-ey1 th-ih-ng","nn"],playwright:["p-l-ey1 r-ay-t","nn"],plaza:["p-l-aa1 z-ah","nn"],plea:["p-l-iy1","nn vb"],plead:["p-l-iy1-d","vb vbp"],pleading:["p-l-iy1 d-ih-ng","vbg jj"],pleasant:["p-l-eh1 z-ah-n-t","jj"],pleasantly:["p-l-eh1 z-ah-n-t l-iy","rb"],pleasantry:["p-l-eh1 z-ah-n t-r-iy","nn"],please:["p-l-iy1-z","vb uh vbp"],pleased:["p-l-iy1-z-d","vbn jj vbd"],pleasing:["p-l-iy1 z-ih-ng","jj vbg"],pleasingly:["p-l-iy1 z-ih-ng l-iy","rb"],pleasurable:["p-l-eh1 zh-er ah b-ah-l","jj"],pleasure:["p-l-eh1 zh-er","nn jj vb"],pleat:["p-l-iy1-t","nn"],pledge:["p-l-eh1-jh","nn vb"],plenary:["p-l-eh1 n-er iy","jj"],plentiful:["p-l-eh1-n t-ah f-ah-l","jj"],plenty:["p-l-eh1-n t-iy","nn jj rb"],plenum:["p-l-eh1 n-ah-m","nn"],plethora:["p-l-eh1 th-er ah","nn"],pliable:["p-l-ay1 ah b-ah-l","jj"],pliant:["p-l-ay1 ah-n-t","jj"],plied:["p-l-ay1-d","vbd vbn"],plies:["p-l-ay1-z","vbz"],plight:["p-l-ay1-t","nn"],plinking:["p-l-ih1-ng k-ih-ng","jj"],plod:["p-l-aa1-d","vb"],plop:["p-l-aa1-p","vb"],plot:["p-l-aa1-t","nn vb vbp"],plotter:["p-l-aa1 t-er","nn"],plough:["p-l-aw1","vb"],plow:["p-l-aw1","nn vbp vb"],plowed:["p-l-aw1-d","vbn vbd jj"],ploy:["p-l-oy1","nn"],pluck:["p-l-ah1-k","vb nn"],plucky:["p-l-ah1 k-iy","jj"],plug:["p-l-ah1-g","nn vbp vb"],plum:["p-l-ah1-m","nn"],plumage:["p-l-uw1 m-ah-jh","nn"],plumb:["p-l-ah1-m","rb jj nn vb"],plumber:["p-l-ah1 m-er","nn"],plumbing:["p-l-ah1 m-ih-ng","nn"],plume:["p-l-uw1-m","nn"],plummet:["p-l-ah1 m-ah-t","vb nn vbp"],plump:["p-l-ah1-m-p","jj vb"],plunder:["p-l-ah1-n d-er","nn vb"],plundering:["p-l-ah1-n d-er ih-ng","nn"],plunge:["p-l-ah1-n-jh","nn vbp vb"],plunk:["p-l-ah1-ng-k","vb"],plural:["p-l-uh1 r-ah-l","nn jj"],pluralism:["p-l-uh1 r-ah l-ih z-ah-m","nn"],pluralistic:["p-l-uh r-ah l-ih1 s-t-ih-k","jj"],plurality:["p-l-er ae1 l-ih t-iy","nn"],plus:["p-l-ah1-s","cc in jj nn rb"],plush:["p-l-ah1-sh","jj nn"],plutonium:["p-l-uw t-ow1 n-iy ah-m","nn"],ply:["p-l-ay1","vbp vb"],plywood:["p-l-ay1 w-uh-d","nn"],pneumatic:["n-uw m-ae1 t-ih-k","jj"],pneumocystis:["n-uw m-ow1 s-ih s-t-ih-s","nn"],pneumonia:["n-uw m-ow1 n-y-ah","nn"],poach:["p-ow1-ch","vb"],poacher:["p-ow1 ch-er","nn"],pocket:["p-aa1 k-ah-t","nn vb"],pocketbook:["p-aa1 k-ah-t b-uh-k","nn"],pocketful:["p-aa1 k-ah-t f-uh-l","nn"],pockmark:["p-aa1-k-m-aa-r-k","vb"],pockmarked:["p-aa1-k m-aa-r-k-t","jj vbn"],pod:["p-aa1-d","nn"],podium:["p-ow1 d-iy ah-m","nn"],poem:["p-ow1 ah-m","nn"],poet:["p-ow1 ah-t","nn"],poetic:["p-ow eh1 t-ih-k","jj"],poetry:["p-ow1 ah t-r-iy","nn"],pogrom:["p-ah g-r-aa1-m","nn"],poignancy:["p-oy1 n-y-ah-n s-iy","nn"],poignant:["p-oy1 n-y-ah-n-t","jj"],poignantly:["p-oy1 n-y-ah-n-t l-iy","rb"],point:["p-oy1-n-t","nn vbp rb vb"],pointed:["p-oy1-n t-ah-d","vbd vbn jj"],pointedly:["p-oy1-n t-ih-d l-iy","rb"],pointer:["p-oy1-n t-er","nn"],pointless:["p-oy1-n-t l-ah-s","jj"],pointy:["p-oy1-n t-iy","jj"],poise:["p-oy1-z","nn vb"],poised:["p-oy1-z-d","vbn vbd jj"],poison:["p-oy1 z-ah-n","nn jj vb"],poisonous:["p-oy1 z-ah n-ah-s","jj"],poke:["p-ow1-k","nn vb"],poker:["p-ow1 k-er","nn"],pokey:["p-ow1 k-iy","jj"],polar:["p-ow1 l-er","jj"],polarity:["p-ow l-eh1 r-ah t-iy","nn"],polarization:["p-ow l-er ah z-ey1 sh-ah-n","nn"],polarize:["p-ow1 l-er ay-z","vb"],pole:["p-ow1-l","nn vb"],polecat:["p-ow1-l k-ae-t","nn"],polemic:["p-ah l-eh1 m-ih-k","jj"],polemical:["p-ah l-eh1 m-ah k-ah-l","jj"],police:["p-ah l-iy1-s","nn vb"],policeman:["p-ah l-iy1-s m-ah-n","nn"],policewoman:["p-ah l-iy1-s w-uh m-ah-n","nn"],policy:["p-aa1 l-ah s-iy","nn"],policyholder:["p-aa1 l-ah s-iy hh-ow-l d-er","nn"],policymaker:["p-aa1 l-ah s-iy m-ey k-er","nn"],policymaking:["p-aa1 l-ah s-iy m-ey k-ih-ng","jj"],polio:["p-ow1 l-iy ow","nn"],polis:["p-ow1 l-ah-s","nn"],polish:["p-aa1 l-ih-sh","vb nn"],polished:["p-aa1 l-ih-sh-t","vbn jj vbd"],polite:["p-ah l-ay1-t","jj"],politely:["p-ah l-ay1-t l-iy","rb"],politeness:["p-ah l-ay1-t n-ah-s","nn"],politic:["p-aa1 l-ah t-ih-k","jj nn"],political:["p-ah l-ih1 t-ah k-ah-l","jj"],politically:["p-ah l-ih1 t-ih k-ah l-iy","rb"],politician:["p-aa l-ah t-ih1 sh-ah-n","nn"],politicize:["p-ah l-ih1 t-ih s-ay-z","vb"],politicized:["p-ah l-ih1 t-ih s-ay-z-d","vbn jj"],politicking:["p-aa1 l-ah t-ih k-ih-ng","nn"],politico:["p-ah l-ih1 t-ih k-ow","nn"],politics:["p-aa1 l-ah t-ih-k-s","nn"],polity:["p-aa1 l-ah t-iy","nn"],polka:["p-ow1-l k-ah","nn"],poll:["p-ow1-l","nn jj vb"],pollen:["p-aa1 l-ah-n","nn"],pollinate:["p-aa1 l-ah n-ey-t","vb vbp"],pollination:["p-aa l-ah n-ey1 sh-ah-n","nn"],polling:["p-ow1 l-ih-ng","nn jj vbg"],pollster:["p-ow1-l s-t-er","nn"],pollutant:["p-ah l-uw1 t-ah-n-t","nn"],pollute:["p-ah l-uw1-t","vb"],polluted:["p-ah l-uw1 t-ah-d","jj vbd vbn"],polluter:["p-ah l-uw1 t-er","nn"],polluting:["p-ah l-uw1 t-ih-ng","vbg jj"],pollution:["p-ah l-uw1 sh-ah-n","nn"],polo:["p-ow1 l-ow","nn"],poltergeist:["p-ow1-l t-er g-ay-s-t","nn"],polyester:["p-aa l-iy eh1 s-t-er","nn"],polymer:["p-aa1 l-ah m-er","nn"],polynomial:["p-aa l-ih n-ow1 m-iy ah-l","nn jj"],polyp:["p-aa1 l-ih-p","nn"],polyurethane:["p-aa l-iy uh1 r-ah th-ey-n","nn"],pomp:["p-aa1-m-p","nn"],pompon:["p-aa1-m p-aa-n","nn"],pompous:["p-aa1-m p-ah-s","jj"],pompousness:["p-aa1-m p-ah-s n-ah-s","nn"],pond:["p-aa1-n-d","nn"],ponder:["p-aa1-n d-er","vb vbp"],ponderous:["p-aa1-n d-er ah-s","jj"],pong:["p-ao1-ng","nn"],ponied:["p-ow1 n-iy-d","vbd"],pontiff:["p-aa1-n t-ah-f","nn"],pony:["p-ow1 n-iy","nn"],pooch:["p-uw1-ch","nn"],poodle:["p-uw1 d-ah-l","nn"],poof:["p-uw1-f","nn"],pool:["p-uw1-l","nn vbp vb"],pooled:["p-uw1-l-d","vbn jj"],poolside:["p-uw1-l s-ay-d","nn"],poor:["p-uh1-r","jj nn"],poorer:["p-uh1 r-er","jjr rbr"],poorest:["p-uh1 r-ih-s-t","jjs"],poorly:["p-uh1-r l-iy","rb"],pop:["p-aa1-p","nn jj vb vbp"],popcorn:["p-aa1-p k-ao-r-n","nn"],pope:["p-ow1-p","nn"],poplar:["p-aa1-p l-er","nn"],poplin:["p-aa1-p l-ih-n","nn"],poppy:["p-aa1 p-iy","nn"],populace:["p-aa1 p-y-ah l-ah-s","nn"],popular:["p-aa1 p-y-ah l-er","jj"],popularity:["p-aa p-y-ah l-eh1 r-ah t-iy","nn"],popularize:["p-aa1 p-y-ah l-er ay-z","vb"],popularly:["p-aa1 p-y-ah l-er l-iy","rb"],populate:["p-aa1 p-y-ah l-ey-t","vb vbp"],populated:["p-aa1 p-y-ah l-ey t-ah-d","vbn jj vbd"],population:["p-aa p-y-ah l-ey1 sh-ah-n","nn"],populism:["p-aa1 p-y-ah l-ih z-ah-m","nn"],populist:["p-aa1 p-y-ah l-ah-s-t","jj nn"],populous:["p-aa1 p-y-ah l-ah-s","jj"],porcelain:["p-ao1-r s-ah l-ah-n","nn"],porch:["p-ao1-r-ch","nn"],porcupine:["p-ao1-r k-y-ah p-ay-n","nn"],pore:["p-ao1-r","nn vb"],pork:["p-ao1-r-k","nn"],pornographic:["p-ao-r n-ah g-r-ae1 f-ih-k","jj"],pornography:["p-ao-r n-aa1 g-r-ah f-iy","nn"],porous:["p-ao1 r-ah-s","jj"],porpoise:["p-ao1-r p-ah-s","nn"],porridge:["p-ao1 r-ah-jh","nn"],port:["p-ao1-r-t","nn jj"],portability:["p-ao-r t-ah b-ih1 l-ih t-iy","nn"],portable:["p-ao1-r t-ah b-ah-l","jj nn"],portal:["p-ao1-r t-ah-l","nn"],portend:["p-ao-r t-eh1-n-d","vbp vb"],portent:["p-ao1-r t-eh-n-t","nn"],portentous:["p-ao-r t-eh1-n t-ah-s","jj"],porter:["p-ao1-r t-er","nn"],portfolio:["p-ao-r-t f-ow1 l-iy ow","nn"],portico:["p-ao1-r t-ah k-ow","nn"],portion:["p-ao1-r sh-ah-n","nn"],portly:["p-ao1-r-t l-iy","jj"],portrait:["p-ao1-r t-r-ah-t","nn"],portray:["p-ao-r t-r-ey1","vb vbp"],portrayal:["p-ao-r t-r-ey1 ah-l","nn"],pose:["p-ow1-z","vb vbp nn"],posh:["p-aa1-sh","jj"],position:["p-ah z-ih1 sh-ah-n","nn vbp vb"],positioned:["p-ah z-ih1 sh-ah-n-d","vbn vbd jj"],positive:["p-aa1 z-ah t-ih-v","jj nn"],positively:["p-aa1 z-ah t-ih-v l-iy","rb"],positivism:["p-aa1 z-ah t-ih v-ih z-ah-m","nn jj"],posse:["p-aa1 s-iy","nn"],possess:["p-ah z-eh1-s","vbp vb"],possession:["p-ah z-eh1 sh-ah-n","nn"],possessive:["p-ah z-eh1 s-ih-v","jj"],possessor:["p-ah z-eh1 s-er","nn"],possibility:["p-aa s-ah b-ih1 l-ah t-iy","nn"],possible:["p-aa1 s-ah b-ah-l","jj rb"],possibly:["p-aa1 s-ah b-l-iy","rb"],possum:["p-aa1 s-ah-m","nn"],post:["p-ow1-s-t","nn in jj vb vbd vbp"],postage:["p-ow1 s-t-ah-jh","nn"],postal:["p-ow1 s-t-ah-l","jj"],postcard:["p-ow1-s-t k-aa-r-d","nn"],postdoctoral:["p-ow-s-t d-aa1-k t-er ah-l","jj"],posted:["p-ow1 s-t-ih-d","vbd vbn jj"],poster:["p-ow1 s-t-er","nn"],posterity:["p-aa s-t-eh1 r-ah t-iy","nn"],posthumous:["p-aa1 s-ch-uh m-ah-s","jj"],postman:["p-ow1-s-t m-ah-n","nn"],postmark:["p-ow1-s-t-m-aa-r-k","vb"],postmaster:["p-ow1-s-t m-ae s-t-er","nn"],postpone:["p-ow-s-t p-ow1-n","vb vbp"],postponed:["p-ow-s-t p-ow1-n-d","vbn jj vbd"],postponement:["p-ow-s-t p-ow1-n m-ah-n-t","nn"],postscript:["p-ow1-s k-r-ih-p-t","nn"],postulate:["p-aa1 s-ch-ah l-ey-t","vb"],posture:["p-aa1-s ch-er","nn vb vbp"],postwar:["p-ow1-s-t w-ao1-r","jj"],pot:["p-aa1-t","nn vb"],potable:["p-ow1 t-ah b-ah-l","jj"],potash:["p-aa1-t ae-sh","nn"],potassium:["p-ah t-ae1 s-iy ah-m","nn"],potato:["p-ah t-ey1 t-ow","nn"],potency:["p-ow1 t-ah-n s-iy","nn"],potent:["p-ow1 t-ah-n-t","jj"],potentate:["p-ow1 t-ah-n t-ey-t","nn"],potential:["p-ah t-eh1-n sh-ah-l","jj nn"],potentially:["p-ah t-eh1-n sh-ah l-iy","rb"],pothole:["p-aa1-t hh-ow-l","nn"],potion:["p-ow1 sh-ah-n","nn"],potpourri:["p-ow p-uh r-iy1","nn"],potted:["p-aa1 t-ih-d","jj vbn"],potter:["p-aa1 t-er","nn"],pottery:["p-aa1 t-er iy","nn"],potty:["p-aa1 t-iy","nn"],pouch:["p-aw1-ch","nn"],poultice:["p-ow1-l t-ah s-ih","nn"],poultry:["p-ow1-l t-r-iy","nn"],pounce:["p-aw1-n-s","vb"],pound:["p-aw1-n-d","nn vb vbp"],pour:["p-ao1-r","vb in vbp"],pout:["p-aw1-t","nn vb"],poverty:["p-aa1 v-er t-iy","nn"],powder:["p-aw1 d-er","nn vb"],powdered:["p-aw1 d-er-d","jj vbn"],powdery:["p-aw1 d-er iy","jj"],power:["p-aw1 er","nn vbp vb"],powerboat:["p-aw1 er b-ow-t","nn"],powered:["p-aw1 er-d","vbn jj"],powerful:["p-aw1 er f-ah-l","jj"],powerfully:["p-aw1 er-f l-iy","rb"],powerhouse:["p-aw1 er hh-aw-s","nn"],powerless:["p-aw1 er l-ah-s","jj"],powerlessness:["p-aw1 er l-ah-s n-ah-s","nn"],powertrain:["p-aw1-r t-r-ey-n","nn"],powwow:["p-aw1 w-aw","nn"],pox:["p-aa1-k-s","nn"],practical:["p-r-ae1-k t-ah k-ah-l","jj nn"],practicality:["p-r-ae-k t-ih k-ae1 l-ah t-iy","nn"],practically:["p-r-ae1-k t-ah-k l-iy","rb"],practice:["p-r-ae1-k t-ah-s","nn vb vbp"],practiced:["p-r-ae1-k t-ah-s-t","vbn vbd jj"],practitioner:["p-r-ae-k t-ih1 sh-ah-n er","nn"],pragmatic:["p-r-ae-g m-ae1 t-ih-k","jj"],pragmatism:["p-r-ae1-g m-ah t-ih z-ah-m","nn"],pragmatist:["p-r-ae1-g m-ah t-ih-s-t","nn"],prairie:["p-r-eh1 r-iy","nn"],praise:["p-r-ey1-z","nn vbp vb"],praised:["p-r-ey1-z-d","vbd jj vbn"],praiseworthy:["p-r-ey1-z w-er dh-iy","jj"],prance:["p-r-ae1-n-s","vb"],prank:["p-r-ae1-ng-k","nn"],pratfall:["p-r-ae1-t f-ao-l","nn"],prattle:["p-r-ae1 t-ah-l","nn"],prawn:["p-r-ao1-n","nn"],pray:["p-r-ey1","vb vbp"],prayer:["p-r-eh1-r","nn"],preach:["p-r-iy1-ch","vb vbp"],preacher:["p-r-iy1 ch-er","nn"],preaching:["p-r-iy1 ch-ih-ng","vbg jj"],preamble:["p-r-iy ae1-m b-ah-l","nn"],prearrange:["p-r-iy-er-ey1-n-jh","vb"],prearranged:["p-r-iy er ey1-n-jh-d","vbn jj"],precarious:["p-r-iy k-eh1 r-iy ah-s","jj"],precariously:["p-r-ih k-eh1 r-iy ah-s l-iy","rb"],precaution:["p-r-iy k-ao1 sh-ah-n","nn"],precautionary:["p-r-ih k-ao1 sh-ah-n eh r-iy","jj"],precede:["p-r-ih s-iy1-d","vb vbp"],precedence:["p-r-eh1 s-ah d-ah-n-s","nn"],precedent:["p-r-eh1 s-ih d-ah-n-t","nn jj"],preceding:["p-r-iy s-iy1 d-ih-ng","vbg jj"],precept:["p-r-iy1 s-eh-p-t","nn"],precinct:["p-r-iy1 s-ih-ng-k-t","nn"],precious:["p-r-eh1 sh-ah-s","jj rb"],precipice:["p-r-eh1 s-ah p-ah-s","nn"],precipitate:["p-r-ih s-ih1 p-ih t-ey-t","vb nn"],precipitous:["p-r-ih s-ih1 p-ih t-ah-s","jj"],precipitously:["p-r-iy s-ih1 p-ih t-ah-s l-iy","rb"],precise:["p-r-ih s-ay1-s","jj"],precisely:["p-r-ih s-ay1-s l-iy","rb"],precision:["p-r-iy s-ih1 zh-ah-n","nn jj"],preclinical:["p-r-iy-k l-ih1 n-ih k-ah-l","jj"],preclude:["p-r-ih k-l-uw1-d","vb vbp"],precluded:["p-r-ih k-l-uw1 d-ih-d","vbd vbn jj"],precocious:["p-r-ih k-ow1 sh-ah-s","jj"],preconceived:["p-r-iy k-ah-n s-iy1-v-d","jj"],preconception:["p-r-iy k-ah-n s-eh1-p sh-ah-n","nn"],precondition:["p-r-iy k-ah-n d-ih1 sh-ah-n","nn"],precook:["p-r-iy1-k-uh1-k","vb"],precrash:["p-r-iy k-r-ae1-sh","jj"],precursor:["p-r-iy k-er1 s-er","nn"],predate:["p-r-iy-d-ey1-t","vb"],predator:["p-r-eh1 d-ah t-er","nn"],predatory:["p-r-eh1 d-ah t-ao r-iy","jj"],predawn:["p-r-iy d-ao1-n","jj"],predecessor:["p-r-eh1 d-ah s-eh s-er","nn"],predetermined:["p-r-iy d-iy t-er1 m-ih-n-d","jj"],predicament:["p-r-ih d-ih1 k-ah m-ah-n-t","nn"],predicate:["p-r-eh1-d-ah-k-ey-t","vb"],predict:["p-r-ih d-ih1-k-t","vbp vb"],predictability:["p-r-ih d-ih-k t-ah b-ih1 l-ih t-iy","nn"],predictable:["p-r-ih d-ih1-k t-ah b-ah-l","jj"],predictably:["p-r-ih d-ih1-k t-ah b-l-iy","rb"],predicted:["p-r-ih d-ih1-k t-ih-d","vbd jj vbn"],prediction:["p-r-iy d-ih1-k sh-ah-n","nn"],predictive:["p-r-ih d-ih1-k t-ih-v","jj"],predictor:["p-r-ih d-ih1-k t-er","nn"],predilection:["p-r-eh d-ah l-eh1-k sh-ah-n","nn"],predispose:["p-r-iy d-ih s-p-ow1-z","vb vbp"],predisposition:["p-r-iy d-ih-s p-ah z-ih1 sh-ah-n","nn"],predominance:["p-r-ih d-aa1 m-ah n-ah-n-s","nn"],predominant:["p-r-ih d-aa1 m-ah n-ah-n-t","jj"],predominantly:["p-r-ih d-aa1 m-ah n-ah-n-t l-iy","rb"],predominate:["p-r-ih d-aa1 m-ah n-ey-t","vb vbp"],preempt:["p-r-iy1 eh-m-p-t","vb"],preemptive:["p-r-iy eh1-m-p t-ih-v","jj"],preen:["p-r-iy1-n","vb"],prefabricate:["p-r-iy-f-ae1-b-r-ih-k-ey-t","vb"],preface:["p-r-eh1 f-ah-s","nn vb"],prefecture:["p-r-iy1 f-eh-k ch-er","nn"],prefer:["p-r-ah f-er1","vbp vb"],preferable:["p-r-eh1 f-er ah b-ah-l","jj"],preferably:["p-r-eh1 f-er ah b-l-iy","rb"],preference:["p-r-eh1 f-er ah-n-s","nn"],preferential:["p-r-eh f-er eh1-n ch-ah-l","jj"],preferentially:["p-r-eh f-er eh1-n ch-ah l-iy","rb"],preferred:["p-r-ah f-er1-d","jj vbd vbg vbn"],pregnancy:["p-r-eh1-g n-ah-n s-iy","nn"],pregnant:["p-r-eh1-g n-ah-n-t","jj"],prehistoric:["p-r-iy hh-ih s-t-ao1 r-ih-k","jj"],prejudge:["p-r-iy-jh-ah1-jh","vb"],prejudice:["p-r-eh1 jh-ah d-ih-s","nn vb"],prejudiced:["p-r-eh1 jh-ah d-ah-s-t","vbn jj"],prejudicial:["p-r-eh jh-ah d-ih1 sh-ah-l","jj"],preliminarily:["p-r-ih l-ih m-ah n-eh1 r-ih l-iy","rb"],preliminary:["p-r-ih l-ih1 m-ah n-eh r-iy","jj nn"],prelude:["p-r-ey1 l-uw-d","nn"],premarital:["p-r-iy m-eh1 r-ah t-ah-l","jj"],premature:["p-r-iy m-ah ch-uh1-r","jj"],prematurely:["p-r-iy m-ah ch-uh1-r l-iy","rb"],premeditated:["p-r-iy m-eh1 d-ah t-ey t-ih-d","jj"],premier:["p-r-eh m-ih1-r","nn jj"],premiere:["p-r-eh m-ih1-r","nn vbp vb"],premise:["p-r-eh1 m-ih-s","nn"],premium:["p-r-iy1 m-iy ah-m","nn jj"],prenatal:["p-r-iy n-ey1 t-ah-l","jj rb"],preoccupation:["p-r-iy aa k-y-ah p-ey1 sh-ah-n","nn"],preoccupied:["p-r-iy aa1 k-y-ah p-ay-d","vbn jj"],preoccupies:["p-r-iy aa1 k-y-ah p-ay-z","vbz"],preoccupy:["p-r-iy aa1 k-y-ah p-ay","vb vbp"],preordain:["p-r-iy-ao-r-d-ey1-n","vb"],prepackage:["p-r-iy-p-ae1-k-ah-jh","vb"],prepaid:["p-r-iy p-ey1-d","jj vbn vb"],preparation:["p-r-eh p-er ey1 sh-ah-n","nn"],preparatory:["p-r-ih p-eh1 r-ah t-ao r-iy","jj"],prepare:["p-r-iy p-eh1-r","vb vbp"],prepared:["p-r-iy p-eh1-r-d","vbn vbd jj"],preparedness:["p-r-iy p-eh1 r-ah-d n-ah-s","nn"],preparer:["p-r-iy p-eh1 r-er","nn"],prepay:["p-r-iy p-ey1","vb"],prepayment:["p-r-iy p-ey1 m-ah-n-t","nn"],preponderance:["p-r-iy p-aa1-n d-r-ah-n-s","nn"],preposterous:["p-r-ih p-aa1 s-t-er ah-s","jj"],preppie:["p-r-eh1 p-iy","nn"],preppy:["p-r-eh1 p-iy","nn jj"],prerecord:["p-r-iy-r-iy-k-ao1-r-d","vb"],prerequisite:["p-r-iy r-eh1 k-w-ah z-ah-t","nn"],prerogative:["p-r-ih r-aa1 g-ah t-ih-v","nn"],presage:["p-r-eh1 s-ih-jh","vb vbp"],presale:["p-r-iy1 s-ey-l","jj nn"],preschool:["p-r-iy s-k-uw1-l","jj"],preschooler:["p-r-iy1 s-k-uw l-er","nn"],prescient:["p-r-eh1 s-iy ah-n-t","jj"],prescribe:["p-r-ah s-k-r-ay1-b","vb vbp"],prescribed:["p-r-iy s-k-r-ay1-b-d","vbn jj vbd"],prescriber:["p-r-iy s-k-r-ay1 b-er","nn"],prescription:["p-r-ah s-k-r-ih1-p sh-ah-n","nn"],presence:["p-r-eh1 z-ah-n-s","nn"],present:["p-r-eh1 z-ah-n-t","jj vbp rb nn vb"],presentable:["p-r-ah z-eh1-n t-ah b-ah-l","jj"],presentation:["p-r-eh z-ah-n t-ey1 sh-ah-n","nn"],presenter:["p-r-eh1 z-ah-n t-er","nn"],presently:["p-r-eh1 z-ah-n-t l-iy","rb"],preservation:["p-r-eh z-er v-ey1 sh-ah-n","nn"],preservative:["p-r-iy z-er1 v-ah t-ih-v","jj"],preserve:["p-r-ah z-er1-v","vb vbp nn"],preserved:["p-r-ah z-er1-v-d","vbn jj vbd"],preset:["p-r-iy s-eh1-t","jj"],preside:["p-r-ih z-ay1-d","vb"],presidency:["p-r-eh1 z-ah d-ah-n s-iy","nn"],president:["p-r-eh1 z-ah d-eh-n-t","nn"],presidential:["p-r-eh z-ah d-eh1-n ch-ah-l","jj"],press:["p-r-eh1-s","nn vbp vb"],presser:["p-r-eh1 s-er","nn"],pressing:["p-r-eh1 s-ih-ng","vbg jj"],pressman:["p-r-eh1-s m-ah-n","nn"],pressure:["p-r-eh1 sh-er","nn vb vbp"],pressured:["p-r-eh1 sh-er-d","vbn jj nn vb vbd"],pressurize:["p-r-eh1-sh-er-ay-z","vb"],prestige:["p-r-eh s-t-iy1-zh","nn jj"],prestigious:["p-r-eh s-t-ih1 jh-ah-s","jj"],presto:["p-r-eh1 s-t-ow","rb"],presumably:["p-r-ah z-uw1 m-ah b-l-iy","rb"],presume:["p-r-ih z-uw1-m","vb vbp"],presumed:["p-r-ah z-uw1-m-d","vbn jj vbd"],presumption:["p-r-ih z-ah1-m-p sh-ah-n","nn"],presumptuous:["p-r-ih z-ah1-m-p ch-ah-w ah-s","jj"],presuppose:["p-r-iy-s-ah-p-ow1-z","vb"],presupposition:["p-r-iy s-ah p-ah z-ih1 sh-ah-n","nn"],pretax:["p-r-iy1 t-ae1-k-s","jj nn"],pretend:["p-r-iy t-eh1-n-d","vb jj"],pretense:["p-r-iy t-eh1-n-s","nn"],pretension:["p-r-ah t-eh1-n sh-ah-n","nn"],pretentious:["p-r-iy t-eh1-n sh-ah-s","jj"],pretext:["p-r-iy1 t-eh-k-s-t","nn"],pretrial:["p-r-iy t-r-ay1 ah-l","jj"],prettier:["p-r-ih1 t-iy er","jjr"],prettiest:["p-r-ih1 t-iy ah-s-t","jjs"],pretty:["p-r-ih1 t-iy","rb jj"],prevail:["p-r-ih v-ey1-l","vb vbp"],prevailing:["p-r-ih v-ey1 l-ih-ng","vbg jj"],prevalence:["p-r-eh1 v-ah l-ah-n-s","nn"],prevalent:["p-r-eh1 v-ah l-ah-n-t","jj nn"],prevent:["p-r-ih v-eh1-n-t","vb vbp"],preventable:["p-r-ih v-eh1-n t-ah b-ah-l","jj"],preventative:["p-r-iy v-eh1-n t-ah t-ih-v","jj"],prevention:["p-r-iy v-eh1-n sh-ah-n","nn"],preventive:["p-r-ih v-eh1-n t-ih-v","jj nn"],preview:["p-r-iy1 v-y-uw","nn vb"],previous:["p-r-iy1 v-iy ah-s","jj"],previously:["p-r-iy1 v-iy ah-s l-iy","rb"],prewar:["p-r-iy w-ao1-r","jj"],prey:["p-r-ey1","nn vbp vb"],price:["p-r-ay1-s","nn vbp vb"],priced:["p-r-ay1-s-t","vbn jj vbd"],priceless:["p-r-ay1-s l-ah-s","jj"],pricey:["p-r-ay1 s-iy","jj"],pricier:["p-r-ay1 s-iy er","jjr"],priciest:["p-r-ay s-iy ih-s-t","jjs"],prick:["p-r-ih1-k","nn vb"],prickly:["p-r-ih1-k l-iy","jj rb"],pride:["p-r-ay1-d","nn vb vbp"],pries:["p-r-ay1-z","vbz"],priest:["p-r-iy1-s-t","nn"],priestly:["p-r-iy1-s-t l-iy","jj"],prim:["p-r-ih1-m","jj"],prima:["p-r-iy1 m-ah","nn"],primacy:["p-r-ay1 m-ah s-iy","nn"],primal:["p-r-ay1 m-ah-l","jj"],primarily:["p-r-ay m-eh1 r-ah l-iy","rb"],primary:["p-r-ay1 m-eh r-iy","jj nn"],primate:["p-r-ay1 m-ey-t","nn"],prime:["p-r-ay1-m","jj nn vb"],primed:["p-r-ay1-m-d","vbn jj vbd"],primetime:["p-r-ay1-m t-ay-m","nn"],primeval:["p-r-ay m-iy1 v-ah-l","jj"],primitive:["p-r-ih1 m-ah t-ih-v","jj"],primly:["p-r-ih1-m l-iy","rb"],primordial:["p-r-ih m-ao1-r d-iy ah-l","jj"],prince:["p-r-ih1-n-s","nn"],princely:["p-r-ih1-n-s l-iy","jj"],princess:["p-r-ih1-n s-eh-s","nn"],principal:["p-r-ih1-n s-ah p-ah-l","jj nn"],principally:["p-r-ih1-n s-ih p-l-iy","rb"],principle:["p-r-ih1-n s-ah p-ah-l","nn"],principled:["p-r-ih1-n s-ah p-ah-l-d","jj"],print:["p-r-ih1-n-t","nn vb vbp"],printable:["p-r-ih1-n t-ah b-ah-l","jj"],printed:["p-r-ih1-n t-ah-d","vbn vbd jj"],printer:["p-r-ih1-n t-er","nn"],printing:["p-r-ih1-n t-ih-ng","nn vbg"],printout:["p-r-ih1-n-t aw-t","nn"],prior:["p-r-ay1 er","rb nn jj"],priority:["p-r-ay ao1 r-ah t-iy","nn jj"],prison:["p-r-ih1 z-ah-n","nn vb"],prisoner:["p-r-ih1 z-ah-n er","nn"],pristine:["p-r-ih1 s-t-iy-n","jj"],privacy:["p-r-ay1 v-ah s-iy","nn"],private:["p-r-ay1 v-ah-t","jj nn rb"],privately:["p-r-ay1 v-ah-t l-iy","rb"],privation:["p-r-ay v-ey1 sh-ah-n","nn"],privatization:["p-r-ay1 v-ah t-ah z-ey1 sh-ah-n","nn"],privatize:["p-r-ih1 v-ah t-ay-z","vb"],privatized:["p-r-ay1 v-ah t-ay-z-d","vbn vbd jj"],privilege:["p-r-ih1-v l-ah-jh","nn"],privileged:["p-r-ih1-v l-ah-jh-d","jj"],privy:["p-r-ih1 v-iy","jj nn"],prize:["p-r-ay1-z","nn jj vb vbp"],prized:["p-r-ay1-z-d","vbn jj"],pro:["p-r-ow1","nn"],probability:["p-r-aa b-ah b-ih1 l-ah t-iy","nn"],probable:["p-r-aa1 b-ah b-ah-l","jj"],probably:["p-r-aa1 b-ah b-l-iy","rb"],probate:["p-r-ow1 b-ey-t","nn"],probation:["p-r-ow b-ey1 sh-ah-n","nn"],probe:["p-r-ow1-b","nn vbp vb"],probing:["p-r-ow1 b-ih-ng","vbg jj nn"],probity:["p-r-ow1 b-ah t-iy","nn"],problem:["p-r-aa1 b-l-ah-m","nn"],problematic:["p-r-aa b-l-ah m-ae1 t-ih-k","jj"],problematical:["p-r-aa b-l-ah m-ae1 t-ih k-ah-l","jj"],proboscis:["p-r-ow b-aa1 s-ah-s","nn"],procedural:["p-r-ah s-iy1 jh-er ah-l","jj"],procedure:["p-r-ah s-iy1 jh-er","nn"],proceed:["p-r-ah s-iy1-d","vb vbp"],proceeding:["p-r-ah s-iy1 d-ih-ng","nn vbg"],process:["p-r-aa1 s-eh-s","nn vbp vb"],processed:["p-r-aa1 s-eh-s-t","vbn vbd jj"],procession:["p-r-ah s-eh1 sh-ah-n","nn"],processional:["p-r-ah s-eh1 sh-ah n-ah-l","nn"],processor:["p-r-aa1 s-eh s-er","nn"],proclaim:["p-r-ow k-l-ey1-m","vb vbp"],proclaimed:["p-r-ow k-l-ey1-m-d","vbd jj vbn"],proclamation:["p-r-aa k-l-ah m-ey1 sh-ah-n","nn"],proclivity:["p-r-ow k-l-ih1 v-ah t-iy","nn"],procrastinate:["p-r-ah k-r-ae1 s-t-ah n-ey-t","vb"],procrastination:["p-r-ah k-r-ae s-t-ah n-ey1 sh-ah-n","nn"],procreate:["p-r-ow1 k-r-iy ey1-t","vb"],procreation:["p-r-ow1 k-r-iy ey1 sh-ah-n","nn"],proctor:["p-r-aa1-k t-er","nn"],procure:["p-r-ow k-y-uh1-r","vb"],procurement:["p-r-ow k-y-uh1-r m-ah-n-t","nn jj"],procurer:["p-r-ow k-y-uh1 r-er","nn"],prod:["p-r-aa1-d","vb nn"],prodigal:["p-r-aa1 d-ih g-ah-l","jj"],prodigious:["p-r-ah d-ih1 jh-ah-s","jj"],prodigiously:["p-r-ow d-ih1 jh-ih-s l-iy","rb"],prodigy:["p-r-aa1 d-ah jh-iy","nn"],produce:["p-r-ah d-uw1-s","vb vbp nn"],producer:["p-r-ah d-uw1 s-er","nn"],producing:["p-r-ah d-uw1 s-ih-ng","vbg jj nn"],product:["p-r-aa1 d-ah-k-t","nn"],production:["p-r-ah d-ah1-k sh-ah-n","nn"],productive:["p-r-ah d-ah1-k t-ih-v","jj"],productivity:["p-r-ow d-ah-k t-ih1 v-ah t-iy","nn"],prof:["p-r-aa1-f","nn"],profane:["p-r-ow f-ey1-n","jj"],profanity:["p-r-ow f-ae1 n-ah t-iy","nn"],profess:["p-r-ah f-eh1-s","vbp vb"],professed:["p-r-ah f-eh1-s-t","vbd vbn jj"],profession:["p-r-ah f-eh1 sh-ah-n","nn"],professional:["p-r-ah f-eh1 sh-ah n-ah-l","jj nn"],professionalism:["p-r-ah f-eh1 sh-ah-n ah l-ih z-ah-m","nn"],professionally:["p-r-ah f-eh1 sh-ah-n ah l-iy","rb"],professor:["p-r-ah f-eh1 s-er","nn"],professorial:["p-r-ow f-ah s-ao1 r-iy ah-l","jj"],professorship:["p-r-ah f-eh1 s-er sh-ih-p","nn"],proffer:["p-r-aa1 f-er","vb"],proficiency:["p-r-ah f-ih1 sh-ah-n s-iy","nn"],proficient:["p-r-aa f-ih1 sh-ah-n-t","jj"],profile:["p-r-ow1 f-ay-l","nn jj vb"],profit:["p-r-aa1 f-ah-t","nn vbp vb"],profitability:["p-r-aa f-ih t-ah b-ih1 l-ih t-iy","nn"],profitable:["p-r-aa1 f-ah t-ah b-ah-l","jj"],profitably:["p-r-aa1 f-ah t-ah b-l-iy","rb"],profiteer:["p-r-aa-f-ah-t-ih1-r","vb"],profittaking:["p-r-aa1 f-ih-t t-ey k-ih-ng","nn"],profligacy:["p-r-ao1 f-l-ih g-ae s-iy","nn"],profligate:["p-r-ao1 f-l-ih g-ey-t","jj"],profound:["p-r-ow f-aw1-n-d","jj"],profoundly:["p-r-ow f-aw1-n-d l-iy","rb"],profuse:["p-r-ah f-y-uw1-s","jj"],profusely:["p-r-ah f-y-uw1-s l-iy","rb"],profusion:["p-r-ah f-y-uw1 zh-ah-n","nn"],progeny:["p-r-aa1 jh-ah n-iy","nn"],prognosis:["p-r-aa-g n-ow1 s-ah-s","nn"],program:["p-r-ow1 g-r-ae-m","nn vbp vb"],programmable:["p-r-ow1 g-r-ae m-ah b-ah-l","jj"],programmatic:["p-r-aa g-r-ah m-ae1 t-ih-k","jj"],programmed:["p-r-ow1 g-r-ae-m-d","vbn jj"],programmer:["p-r-ow1 g-r-ae m-er","nn"],progress:["p-r-aa1 g-r-eh-s","nn vb"],progression:["p-r-ah g-r-eh1 sh-ah-n","nn"],progressive:["p-r-ah g-r-eh1 s-ih-v","jj nn"],progressively:["p-r-aa g-r-eh1 s-ih-v l-iy","rb"],progressivity:["p-r-aa g-r-eh s-ih1 v-ah t-iy","nn"],prohibit:["p-r-ow hh-ih1 b-ah-t","vb vbp"],prohibition:["p-r-ow ah b-ih1 sh-ah-n","nn"],prohibitive:["p-r-ow hh-ih1 b-ah t-ih-v","jj"],prohibitively:["p-r-ow hh-ih1 b-ah t-ih-v l-iy","rb"],project:["p-r-aa1 jh-eh-k-t","nn vb vbp"],projected:["p-r-ah jh-eh1-k t-ah-d","vbn jj vbd"],projectile:["p-r-ah jh-eh1-k t-ah-l","nn"],projection:["p-r-ah jh-eh1-k sh-ah-n","nn"],projective:["p-r-ah jh-eh1-k t-ih-v","jj"],projector:["p-r-ah jh-eh1-k t-er","nn"],proletarian:["p-r-ow l-ah t-eh1 r-iy ah-n","jj"],proletariat:["p-r-ow l-ah t-eh1 r-iy ah-t","nn"],proliferate:["p-r-ow l-ih1 f-er ey-t","vb vbp"],proliferated:["p-r-ah l-ih1 f-er ey t-ih-d","vbn vb vbd"],proliferation:["p-r-ow l-ih f-er ey1 sh-ah-n","nn"],prolific:["p-r-ow l-ih1 f-ih-k","jj"],prolong:["p-r-ah l-ao1-ng","vb"],prolonged:["p-r-ah l-ao1-ng-d","vbn vbd jj"],prom:["p-r-aa1-m","nn"],promenade:["p-r-aa m-ah n-ey1-d","nn"],prominence:["p-r-aa1 m-ah n-ah-n-s","nn"],prominent:["p-r-aa1 m-ah n-ah-n-t","jj"],prominently:["p-r-aa1 m-ah n-ah-n-t l-iy","rb"],promiscuous:["p-r-ow1 m-ih s-k-w-ah-s","jj"],promise:["p-r-aa1 m-ah-s","nn vb vbp"],promised:["p-r-aa1 m-ah-s-t","vbd jj vbn"],promising:["p-r-aa1 m-ah s-ih-ng","jj vbg"],promissory:["p-r-aa1 m-ah s-ao r-iy","jj"],promote:["p-r-ah m-ow1-t","vb vbp"],promoter:["p-r-ah m-ow1 t-er","nn"],promotion:["p-r-ah m-ow1 sh-ah-n","nn"],promotional:["p-r-ah m-ow1 sh-ah n-ah-l","jj"],prompt:["p-r-aa1-m-p-t","vb jj vbp"],promptly:["p-r-aa1-m-p-t l-iy","rb"],promulgate:["p-r-ow-m-ah1-l-g-ey-t","vb"],prone:["p-r-ow1-n","jj rb"],pronoun:["p-r-ow1 n-aw-n","nn"],pronounce:["p-r-ah n-aw1-n-s","vb"],pronounced:["p-r-ah n-aw1-n-s-t","vbn vbd jj"],pronouncement:["p-r-ah n-aw1-n s-m-ah-n-t","nn"],pronouncing:["p-r-ah n-aw1-n s-ih-ng","jj vbg"],pronunciation:["p-r-ow n-ah-n s-iy ey1 sh-ah-n","nn"],proof:["p-r-uw1-f","nn jj"],proofread:["p-r-uw1-f-r-iy-d","vb"],prop:["p-r-aa1-p","vb vbp nn"],propaganda:["p-r-aa p-ah g-ae1-n d-ah","nn"],propagandist:["p-r-aa p-ah g-ae1-n d-ah-s-t","nn"],propagandize:["p-r-aa p-ah g-ae1-n d-ay-z","vb"],propagate:["p-r-aa1 p-ah g-ey-t","vb"],propagation:["p-r-aa p-ah g-ey1 sh-ah-n","nn"],propane:["p-r-ow1 p-ey-n","nn"],propel:["p-r-ah p-eh1-l","vb vbp"],propellant:["p-r-ah p-eh1 l-ah-n-t","nn"],propeller:["p-r-ah p-eh1 l-er","nn"],propensity:["p-r-ah p-eh1-n s-ih t-iy","nn"],proper:["p-r-aa1 p-er","jj"],properly:["p-r-aa1 p-er l-iy","rb"],property:["p-r-aa1 p-er t-iy","nn"],propfan:["p-r-aa1-p f-ae-n","nn jj vb"],prophecy:["p-r-aa1 f-ah s-iy","nn"],prophesied:["p-r-aa1 f-ah s-ay-d","vbd vbn"],prophesies:["p-r-aa1 f-ah s-ay-z","vbz"],prophesy:["p-r-aa1 f-ah s-ay","vb"],prophet:["p-r-aa1 f-ah-t","nn"],prophetic:["p-r-ah f-eh1 t-ih-k","jj"],propitious:["p-r-ah p-ih1 sh-ah-s","jj"],proponent:["p-r-ah p-ow1 n-ah-n-t","nn"],proportion:["p-r-ah p-ao1-r sh-ah-n","nn"],proportional:["p-r-ah p-ao1-r sh-ah n-ah-l","jj nn"],proportionally:["p-r-ah p-ao1-r sh-ah-n ah l-iy","rb"],proportionate:["p-r-ah p-ao1-r sh-ah-n ah-t","jj"],proportionately:["p-r-ah p-ao1-r sh-ah-n ah-t l-iy","rb"],proportioned:["p-r-ah p-ao1-r sh-ah-n-d","jj"],proposal:["p-r-ah p-ow1 z-ah-l","nn"],propose:["p-r-ah p-ow1-z","vb vbp"],proposed:["p-r-ah p-ow1-z-d","vbn vbd jj"],proposition:["p-r-aa p-ah z-ih1 sh-ah-n","nn"],propound:["p-r-ah-p-aw1-n-d","vb"],proprietary:["p-r-ah p-r-ay1 ah t-eh r-iy","jj nn"],proprietor:["p-r-ah p-r-ay1 ah t-er","nn"],proprietorship:["p-r-ah p-r-ay1 ah t-er sh-ih-p","nn"],propriety:["p-r-ah p-r-ay1 ah t-iy","nn"],propulsion:["p-r-ah p-ah1-l sh-ah-n","nn"],propylene:["p-r-ow p-ah l-iy1-n","nn"],prorate:["p-r-ow1-r-ey1-t","vb"],proration:["p-r-ow r-ey1 sh-ah-n","nn jj"],prosaic:["p-r-ow z-ey1 ih-k","jj"],proscribe:["p-r-ow s-k-r-ay1-b","vb vbp"],proscription:["p-r-ow s-k-r-ih1-p sh-ah-n","nn"],prose:["p-r-ow1-z","nn"],prosecute:["p-r-aa1 s-ah k-y-uw-t","vb"],prosecution:["p-r-aa s-ah k-y-uw1 sh-ah-n","nn"],prosecutor:["p-r-aa1 s-ih k-y-uw t-er","nn"],prosecutorial:["p-r-aa s-ih k-y-uw t-ao1 r-iy ah-l","jj"],proselytize:["p-r-aa1-s-ah-l-ah-t-ay-z","vb"],prospect:["p-r-aa1 s-p-eh-k-t","nn"],prospective:["p-r-ah s-p-eh1-k t-ih-v","jj"],prospectively:["p-r-ah s-p-eh1-k t-ih-v l-iy","rb"],prospector:["p-r-ao1 s-p-eh-k t-er","nn"],prospectus:["p-r-ah s-p-eh1-k t-ah-s","nn"],prosper:["p-r-aa1 s-p-er","vb"],prosperity:["p-r-aa s-p-eh1 r-ah t-iy","nn"],prosperous:["p-r-aa1 s-p-er ah-s","jj"],prostate:["p-r-aa1 s-t-ey-t","nn jj"],prostitute:["p-r-aa1 s-t-ah t-uw-t","nn vb"],prostitution:["p-r-aa s-t-ah t-uw1 sh-ah-n","nn"],prostrate:["p-r-aa1 s-t-r-ey-t","jj"],protagonist:["p-r-ow t-ae1 g-ah n-ah-s-t","nn"],protect:["p-r-ah t-eh1-k-t","vb vbp"],protected:["p-r-ah t-eh1-k t-ah-d","vbn jj vbd"],protection:["p-r-ah t-eh1-k sh-ah-n","nn"],protectionism:["p-r-ah t-eh1-k sh-ah n-ih z-ah-m","nn"],protectionist:["p-r-ah t-eh1-k sh-ah n-ih-s-t","jj nn"],protective:["p-r-ah t-eh1-k t-ih-v","jj nn"],protectively:["p-r-ah t-eh1-k t-ih-v l-iy","rb"],protector:["p-r-ah t-eh1-k t-er","nn"],protege:["p-r-ow1 t-ah zh-ey","nn"],protein:["p-r-ow1 t-iy-n","nn"],protest:["p-r-ow1 t-eh-s-t","nn vb vbp"],protestation:["p-r-ow t-eh s-t-ey1 sh-ah-n","nn"],protester:["p-r-ow1 t-eh s-t-er","nn"],protestor:["p-r-ow1 t-eh s-t-er","nn"],protocol:["p-r-ow1 t-ah k-aa-l","nn"],proton:["p-r-ow1 t-aa-n","nn"],prototype:["p-r-ow1 t-ah t-ay-p","nn jj"],prototypical:["p-r-ow t-ah t-ih1 p-ih k-ah-l","jj"],protract:["p-r-ow-t-r-ae1-k-t","vb"],protrude:["p-r-ow t-r-uw1-d","vb"],proud:["p-r-aw1-d","jj"],prouder:["p-r-aw1 d-er","rbr"],proudest:["p-r-aw1 d-ah-s-t","jjs"],proudly:["p-r-aw1-d l-iy","rb"],prove:["p-r-uw1-v","vb vbp"],proved:["p-r-uw1-v-d","vbd jj vbn"],proven:["p-r-uw1 v-ah-n","vbn jj"],provenance:["p-r-aa1 v-ah n-ah-n-s","nn"],proverb:["p-r-aa1 v-er-b","nn"],proverbial:["p-r-ah v-er1 b-iy ah-l","jj"],provide:["p-r-ah v-ay1-d","vb vbp"],providence:["p-r-aa1 v-ah d-ah-n-s","nn"],providential:["p-r-aa v-ah d-eh1-n ch-ah-l","jj"],provider:["p-r-ah v-ay1 d-er","nn"],providing:["p-r-ah v-ay1 d-ih-ng","vbg in"],province:["p-r-aa1 v-ah-n-s","nn"],provincial:["p-r-ah v-ih1-n sh-ah-l","jj"],provincially:["p-r-ah v-ih1-n sh-ah l-iy","rb"],provision:["p-r-ah v-ih1 zh-ah-n","nn vb"],provisional:["p-r-ah v-ih1 zh-ah n-ah-l","jj"],provisionally:["p-r-ah v-ih1 zh-ah-n ah l-iy","rb"],proviso:["p-r-ah v-ay1 z-ow","nn"],provocation:["p-r-aa v-ah k-ey1 sh-ah-n","nn"],provocative:["p-r-ow v-aa1 k-ah t-ih-v","jj"],provocatively:["p-r-ow v-aa1 k-ah t-ih-v l-iy","rb"],provoke:["p-r-ah v-ow1-k","vb vbp"],provoked:["p-r-ah v-ow1-k-t","vbd jj vbn"],provoking:["p-r-ah v-ow1 k-ih-ng","vbg jj"],provost:["p-r-ow1 v-ow-s-t","nn"],prow:["p-r-aw1","nn"],prowess:["p-r-aw1 ah-s","nn"],prowl:["p-r-aw1-l","nn vb vbp jj"],proximal:["p-r-aa1-k s-ah m-ah-l","jj"],proximate:["p-r-aa1-k s-ah m-ah-t","jj"],proximity:["p-r-aa-k s-ih1 m-ah t-iy","nn"],proxy:["p-r-aa1-k s-iy","nn jj"],prude:["p-r-uw1-d","nn"],prudence:["p-r-uw1 d-ah-n-s","nn"],prudent:["p-r-uw1 d-ah-n-t","jj"],prudential:["p-r-uw d-eh1-n ch-ah-l","jj"],prudently:["p-r-uw1 d-ah-n-t l-iy","rb"],prune:["p-r-uw1-n","nn vb"],prurient:["p-r-uh1 r-iy ah-n-t","jj"],pry:["p-r-ay1","vb"],prying:["p-r-ay1 ih-ng","jj vbg"],psalm:["s-aa1-l-m","nn"],pseudo:["s-uw1 d-ow","jj"],pseudonym:["s-uw1 d-ah n-ih-m","nn"],psoriasis:["s-er ay1 ah s-ah-s","nn"],psyche:["s-ay1 k-iy","nn"],psychiatric:["s-ay k-iy ae1 t-r-ih-k","jj"],psychiatrist:["s-ah k-ay1 ah t-r-ah-s-t","nn"],psychiatry:["s-ay k-ay1 ah t-r-iy","nn"],psychic:["s-ay1 k-ih-k","jj nn"],psychical:["s-ay1 k-ih k-ah-l","jj"],psychoanalysis:["s-ay k-ow ah n-ae1 l-ah s-ah-s","nn"],psychoanalyst:["s-ay k-ow ae1 n-ah l-ah-s-t","nn"],psychological:["s-ay k-ah l-aa1 jh-ih k-ah-l","jj"],psychologically:["s-ay k-ah l-aa1 jh-ih-k l-iy","rb"],psychologist:["s-ay k-aa1 l-ah jh-ah-s-t","nn"],psychology:["s-ay k-aa1 l-ah jh-iy","nn"],psychopath:["s-ay1 k-ow p-ae-th","nn"],psychopathic:["s-ay k-ah p-ae1 th-ih-k","jj"],psychotherapist:["s-ay k-ah th-eh1 r-ah p-ih-s-t","nn"],psychotherapy:["s-ay k-ow th-eh1 r-ah p-iy","nn"],psychotic:["s-ay k-aa1 t-ih-k","jj"],psyllium:["s-ih1 l-iy ah-m","nn"],pub:["p-ah1-b","nn"],puberty:["p-y-uw1 b-er t-iy","nn"],public:["p-ah1 b-l-ih-k","jj nn rb"],publication:["p-ah b-l-ih k-ey1 sh-ah-n","nn"],publicist:["p-ah1 b-l-ih s-ih-s-t","nn"],publicity:["p-ah b-l-ih1 s-ah t-iy","nn"],publicize:["p-ah1 b-l-ih s-ay-z","vb"],publicized:["p-ah1 b-l-ih s-ay-z-d","vbn jj"],publicly:["p-ah1 b-l-ih-k l-iy","rb"],publish:["p-ah1 b-l-ih-sh","vb vbp"],published:["p-ah1 b-l-ih-sh-t","vbn jj vbd"],publisher:["p-ah1 b-l-ih sh-er","nn"],publishing:["p-ah1 b-l-ih sh-ih-ng","jj vbg"],puckish:["p-ah1 k-ih-sh","jj"],pudding:["p-uh1 d-ih-ng","nn"],puddle:["p-ah1 d-ah-l","nn"],puerile:["p-y-uw r-iy1-l","jj"],puff:["p-ah1-f","nn vb"],puffery:["p-ah1 f-er iy","nn"],puffy:["p-ah1 f-iy","jj"],pugnacious:["p-ah-g n-ae1 sh-ih-s","jj"],pull:["p-uh1-l","vb vbp nn"],pullback:["p-uh1-l b-ae-k","nn"],pulley:["p-uh1 l-iy","nn"],pullout:["p-uh1-l aw-t","nn"],pulmonary:["p-uh1-l m-ah n-eh r-iy","jj"],pulp:["p-ah1-l-p","nn vb"],pulpit:["p-uh1-l p-ih-t","nn"],pulpwood:["p-ah1-l-p w-uh-d","nn"],pulsate:["p-ah1-l s-ey-t","vb"],pulse:["p-ah1-l-s","nn vb"],pulverize:["p-ah1-l v-er ay-z","vb"],pummel:["p-ah1 m-ah-l","vb"],pummeling:["p-ah1 m-ah-l ih-ng","nn"],pump:["p-ah1-m-p","vb vbp nn"],pumpkin:["p-ah1-m-p k-ih-n","nn"],pun:["p-ah1-n","nn"],punch:["p-ah1-n-ch","nn vbp vb"],punchy:["p-ah1-n ch-iy","jj"],punctuality:["p-ah-ng-k ch-uw ae1 l-ih t-iy","nn"],punctuate:["p-ah1-ng-k-ch-uw-ey-t","vb"],punctuation:["p-ah-ng-k ch-uw ey1 sh-ah-n","nn"],puncture:["p-ah1-ng-k-ch-er","vb"],punctured:["p-ah1-ng-k ch-er-d","jj vbn"],pundit:["p-ah1-n d-ih-t","nn"],pungent:["p-ah1-n jh-ah-n-t","jj"],pungently:["p-ah1-n jh-ah-n-t l-iy","rb"],punish:["p-ah1 n-ih-sh","vb vbp"],punishable:["p-ah1 n-ih sh-ah b-ah-l","jj"],punishing:["p-ah1 n-ih sh-ih-ng","vbg jj"],punishment:["p-ah1 n-ih-sh m-ah-n-t","nn"],punitive:["p-y-uw1 n-ah t-ih-v","jj"],punk:["p-ah1-ng-k","nn jj"],punky:["p-ah1-ng k-iy","jj"],punt:["p-ah1-n-t","nn"],puny:["p-y-uw1 n-iy","jj"],pup:["p-ah1-p","nn"],pupil:["p-y-uw1 p-ah-l","nn"],puppet:["p-ah1 p-ah-t","nn"],puppeteer:["p-ah p-ah t-iy1-r","nn"],puppy:["p-ah1 p-iy","nn"],purchase:["p-er1 ch-ah-s","nn vb vbp"],purchased:["p-er1 ch-ah-s-t","vbn jj vbd"],purchaser:["p-er1 ch-ah s-er","nn"],purchasing:["p-er1 ch-ah s-ih-ng","vbg jj"],pure:["p-y-uh1-r","jj"],purely:["p-y-uh1-r l-iy","rb"],purest:["p-y-uh1 r-ah-s-t","jjs"],purgatory:["p-er1 g-ah t-ao r-iy","nn"],purge:["p-er1-jh","nn vb"],purification:["p-y-uh r-ah f-ah k-ey1 sh-ah-n","nn"],purified:["p-y-uh1 r-ah f-ay-d","vbn"],purifier:["p-y-uh1 r-ah f-ay er","nn"],purify:["p-y-uh1 r-ah f-ay","vb vbp"],purist:["p-y-uh1 r-ah-s-t","nn"],puritan:["p-y-uh1 r-ah t-ah-n","jj"],puritanical:["p-y-uh r-ah t-ae1 n-ih k-ah-l","jj"],purity:["p-y-uh1 r-ah t-iy","nn"],purloin:["p-er-l-oy1-n","vb"],purple:["p-er1 p-ah-l","jj nn"],purport:["p-er1 p-ao-r-t","vb vbp"],purported:["p-er p-ao1-r t-ih-d","jj vbd"],purportedly:["p-er p-ao-r t-ih-d l-iy","rb"],purpose:["p-er1 p-ah-s","nn"],purposeful:["p-er1 p-ah-s f-ah-l","jj"],purposefully:["p-er1 p-ah-s f-ah l-iy","rb"],purposeless:["p-er1 p-ah-s l-ah-s","jj"],purposely:["p-er1 p-ah-s l-iy","rb"],purr:["p-er1","vb"],purse:["p-er1-s","nn vb"],pursue:["p-er s-uw1","vb vbp"],pursued:["p-er s-uw1-d","vbn jj vbd"],pursuer:["p-er s-uw1 er","nn"],pursuit:["p-er s-uw1-t","nn"],purveyor:["p-er v-ey1 er","nn"],purview:["p-er1 v-y-uw","nn"],push:["p-uh1-sh","vb vbp nn"],pusher:["p-uh1 sh-er","nn"],pushing:["p-uh1 sh-ih-ng","vbg jj nn"],pushover:["p-uh1-sh ow v-er","nn"],pushup:["p-uh1 sh-ah-p","nn"],pushy:["p-uh1 sh-iy","jj"],pussy:["p-uh1 s-iy","nn"],pussycat:["p-uh1 s-iy k-ae-t","nn"],put:["p-uh1-t","vb jj nn vbp vbd vbn"],putative:["p-y-uw1 t-ah t-ih-v","jj"],putt:["p-ah1-t","nn vb"],puttable:["p-ah1 t-ah b-ah-l","jj"],putter:["p-ah1 t-er","nn"],putty:["p-ah1 t-iy","nn"],puzzle:["p-ah1 z-ah-l","nn vb"],puzzled:["p-ah1 z-ah-l-d","vbn jj vbd"],puzzlement:["p-ah1 z-ah-l m-ah-n-t","nn"],puzzler:["p-ah1-z l-er","nn"],puzzling:["p-ah1 z-ah-l ih-ng","jj vbg"],pylon:["p-ay1 l-aa-n","nn"],pyramid:["p-ih1 r-ah m-ih-d","nn vb"],python:["p-ay1 th-aa-n","nn"],quack:["k-w-ae1-k","nn uh"],quadrennial:["k-w-aa d-r-eh1 n-iy ah-l","jj"],quadriceps:["k-w-aa1 d-r-ah s-eh-p-s","nn"],quadruple:["k-w-aa d-r-uw1 p-ah-l","vb"],quagmire:["k-w-ae1-g m-ay er","nn"],quaint:["k-w-ey1-n-t","jj"],quaintly:["k-w-ey1-n-t l-iy","rb"],quake:["k-w-ey1-k","nn vb"],qualification:["k-w-aa l-ah f-ah k-ey1 sh-ah-n","nn"],qualified:["k-w-aa1 l-ah f-ay-d","vbn jj vbd"],qualifies:["k-w-aa1 l-ah f-ay-z","vbz"],qualify:["k-w-aa1 l-ah f-ay","vb vbp"],qualitative:["k-w-aa1 l-ah t-ey t-ih-v","jj"],quality:["k-w-aa1 l-ah t-iy","nn jj"],qualm:["k-w-aa1-m","nn"],quam:["k-w-aa1-m","nn"],quandary:["k-w-aa1-n d-er iy","nn"],quantified:["k-w-aa1-n t-ih f-ay-d","vbn"],quantify:["k-w-aa1-n t-ih f-ay","vb"],quantitative:["k-w-aa1-n t-ih t-ey t-ih-v","jj"],quantity:["k-w-aa1-n t-ah t-iy","nn"],quantum:["k-w-aa1-n t-ah-m","nn"],quarantine:["k-w-ao1 r-ah-n t-iy-n","vb"],quarrel:["k-w-ao1 r-ah-l","nn vb"],quarrelsome:["k-w-ao1 r-ah-l s-ah-m","jj"],quarry:["k-w-ao1 r-iy","nn"],quart:["k-w-ao1-r-t","nn"],quarter:["k-w-ao1-r t-er","nn"],quarterback:["k-w-ao1-r t-er b-ae-k","nn"],quarterly:["k-w-ao1-r t-er l-iy","jj nn rb"],quartet:["k-w-ao-r t-eh1-t","nn"],quartz:["k-w-ao1-r-t-s","nn"],quash:["k-w-ao1-sh","vb"],queasiness:["k-w-iy1 z-iy n-ah-s","nn"],queen:["k-w-iy1-n","nn"],queer:["k-w-ih1-r","jj"],quell:["k-w-eh1-l","vb"],quench:["k-w-eh1-n-ch","vb"],quenching:["k-w-eh1-n ch-ih-ng","nn"],querulous:["k-w-eh1 r-ah l-ah-s","jj"],query:["k-w-iy1 r-iy","nn"],quest:["k-w-eh1-s-t","nn"],question:["k-w-eh1-s ch-ah-n","nn vb vbp"],questionable:["k-w-eh1-s ch-ah n-ah b-ah-l","jj"],questioner:["k-w-eh1-s ch-ah n-er","nn"],questioning:["k-w-eh1-s ch-ah n-ih-ng","vbg jj"],questionnaire:["k-w-eh-s ch-ah n-eh1-r","nn"],queue:["k-y-uw1","nn vb"],quibble:["k-w-ih1 b-ah-l","vb"],quiche:["k-iy1-sh","nn"],quick:["k-w-ih1-k","jj nn rb"],quicken:["k-w-ih1 k-ah-n","vb"],quicker:["k-w-ih1 k-er","jjr rbr jj"],quickest:["k-w-ih1 k-ih-s-t","jjs"],quickie:["k-w-ih1 k-iy","nn jj"],quickly:["k-w-ih1-k l-iy","rb"],quickness:["k-w-ih1-k n-ah-s","nn"],quicksand:["k-w-ih1-k s-ae-n-d","nn"],quicksilver:["k-w-ih1-k s-ih1-l v-er","jj nn"],quid:["k-w-ih1-d","nn"],quiescent:["k-w-ay eh1 s-ah-n-t","jj"],quiet:["k-w-ay1 ah-t","jj nn vb"],quieter:["k-w-ay1 ah t-er","jjr"],quietly:["k-w-ay1 ah-t l-iy","rb"],quietness:["k-w-ay1 ah-t n-ah-s","nn"],quill:["k-w-ih1-l","nn"],quilt:["k-w-ih1-l-t","nn"],quilted:["k-w-ih1-l t-ih-d","jj"],quince:["k-w-ih1-n-s","nn"],quinine:["k-w-ay1 n-ay-n","nn"],quintessential:["k-w-ih-n t-ih s-eh1-n sh-ah-l","jj"],quintet:["k-w-ih-n t-eh1-t","nn"],quintuple:["k-w-ih1-n t-uw p-ah-l","rb vb"],quip:["k-w-ih1-p","nn"],quipped:["k-w-ih1-p-t","vbd nn"],quirk:["k-w-er1-k","nn"],quirky:["k-w-er1 k-iy","jj"],quisling:["k-w-ih1-z l-ih-ng","nn"],quit:["k-w-ih1-t","vb vbd vbn vbp nn"],quite:["k-w-ay1-t","rb pdt"],quiver:["k-w-ih1-v-er","vb"],quixotic:["k-w-ih-k s-aa1 t-ih-k","jj"],quiz:["k-w-ih1-z","nn vb"],quorum:["k-w-ao1 r-ah-m","nn"],quota:["k-w-ow1 t-ah","nn"],quotation:["k-w-ow t-ey1 sh-ah-n","nn"],quote:["k-w-ow1-t","vb vbp nn"],quoted:["k-w-ow1 t-ah-d","vbn jj vbd"],quotient:["k-w-ow1 t-ih ah-n-t","nn"],rabbi:["r-ae1 b-ay","nn"],rabbit:["r-ae1 b-ah-t","nn"],rabble:["r-ae1 b-ah-l","nn"],rabid:["r-ae1 b-ih-d","jj"],raccoon:["r-ae k-uw1-n","nn"],race:["r-ey1-s","nn vb"],racehorse:["r-ey1-s hh-ao-r-s","nn"],racer:["r-ey1 s-er","nn"],racetrack:["r-ey1-s t-r-ae-k","nn"],raceway:["r-ey1-s w-ey","nn"],racial:["r-ey1 sh-ah-l","jj"],racially:["r-ey1 sh-ah l-iy","rb"],racing:["r-ey1 s-ih-ng","vbg jj nn"],racism:["r-ey1 s-ih z-ah-m","nn"],racist:["r-ey1 s-ih-s-t","jj nn"],rack:["r-ae1-k","nn vb vbp"],racket:["r-ae1 k-ih-t","nn"],racketeer:["r-ae k-ih t-ih1-r","nn vb"],racy:["r-ey1 s-iy","jj"],radar:["r-ey1 d-aa-r","nn"],radial:["r-ey1 d-iy ah-l","jj"],radiance:["r-ey1 d-iy ah-n-s","nn"],radiant:["r-ey1 d-iy ah-n-t","jj"],radiate:["r-ey1 d-iy ah-t","vb vbp"],radiated:["r-ey1 d-iy ey t-ah-d","vbd vbn jj"],radiation:["r-ey d-iy ey1 sh-ah-n","nn"],radiator:["r-ey1 d-iy ey t-er","nn"],radical:["r-ae1 d-ah k-ah-l","jj nn"],radicalism:["r-ae1 d-ih k-ah l-ih z-ah-m","nn"],radicalize:["r-ae1-d-ih-k-ah-l-ay-z","vb"],radically:["r-ae1 d-ih-k l-iy","rb"],radio:["r-ey1 d-iy ow","nn vb"],radioactive:["r-ey d-iy ow ae1-k t-ih-v","jj"],radioactivity:["r-ey1 d-iy ow ae-k t-ih1 v-ah t-iy","nn"],radioed:["r-ey1 d-iy ow-d","jj vbd"],radiography:["r-ey d-iy aa1 g-r-ah f-iy","nn"],radish:["r-ae1 d-ih-sh","nn"],radius:["r-ey1 d-iy ah-s","nn"],radon:["r-ey1 d-aa-n","nn"],raffish:["r-ae1 f-ih-sh","jj"],raft:["r-ae1-f-t","nn"],rafter:["r-ae1-f t-er","nn"],rag:["r-ae1-g","nn"],rage:["r-ey1-jh","nn vb"],ragged:["r-ae1 g-ah-d","jj"],raging:["r-ey1 jh-ih-ng","vbg jj"],ragtime:["r-ae1-g t-ay-m","nn"],raid:["r-ey1-d","nn vb"],raider:["r-ey1 d-er","nn"],rail:["r-ey1-l","nn vb"],railbike:["r-ey1-l b-ay-k","nn"],railbiker:["r-ey1-l b-ih k-er","nn"],railcar:["r-ey1-l k-aa-r","nn"],railing:["r-ey1 l-ih-ng","nn"],railroad:["r-ey1-l r-ow-d","nn vb"],railway:["r-ey1-l w-ey","nn"],rain:["r-ey1-n","nn vb"],rainbow:["r-ey1-n b-ow","nn"],raincoat:["r-ey1-n k-ow-t","nn"],raindrop:["r-ey1-n d-r-aa-p","nn"],rainfall:["r-ey1-n f-ao-l","nn"],rainier:["r-ey n-ih1-r","jjr"],rainstorm:["r-ey1-n s-t-ao-r-m","nn"],rainwater:["r-ey1-n w-ao t-er","nn"],rainy:["r-ey1 n-iy","jj"],raise:["r-ey1-z","vb vbp nn"],raised:["r-ey1-z-d","vbn vbd jj"],raiser:["r-ey1 z-er","nn"],raisin:["r-ey1 z-ih-n","nn"],raising:["r-ey1 z-ih-ng","vbg rp"],rake:["r-ey1-k","nn vb vbp"],rakish:["r-ey1 k-ih-sh","jj"],rallied:["r-ae1 l-iy-d","vbd vbn"],rally:["r-ae1 l-iy","nn vbp vb"],rallying:["r-ae1 l-iy ih-ng","vbg jj nn"],ram:["r-ae1-m","vb nn"],ramble:["r-ae1-m b-ah-l","vb vbp"],rambling:["r-ae1-m b-l-ih-ng","nn jj"],rambunctious:["r-ae-m b-ah1-ng-k sh-ah-s","jj"],ramification:["r-ae m-ah f-ah k-ey1 sh-ah-n","nn"],ramp:["r-ae1-m-p","nn vb"],rampage:["r-ae1-m p-ey-jh","nn"],rampant:["r-ae1-m p-ah-n-t","jj rb"],rampart:["r-ae1-m p-aa-r-t","nn"],ramshackle:["r-ae1-m sh-ae k-ah-l","jj"],ran:["r-ae1-n","vbd"],ranch:["r-ae1-n-ch","nn"],rancher:["r-ae1-n ch-er","nn"],rancid:["r-ae1-n s-ih-d","jj"],rancor:["r-ae1-ng k-er","nn"],rancorous:["r-ae1-ng k-er ah-s","jj"],random:["r-ae1-n d-ah-m","jj nn"],randomly:["r-ae1-n d-ah-m l-iy","rb"],randomness:["r-ae1-n d-ah-m n-ah-s","nn"],rang:["r-ae1-ng","vbd"],range:["r-ey1-n-jh","nn jj vb vbp vbz"],ranger:["r-ey1-n jh-er","nn"],rangy:["r-ey1-n jh-iy","jj"],rank:["r-ae1-ng-k","nn vbp jj vb"],ranked:["r-ae1-ng-k-t","vbd vbn jj"],ranking:["r-ae1-ng k-ih-ng","jj vbg"],rankle:["r-ae1-ng-k-ah-l","vb"],ransack:["r-ae1-n s-ae-k","vb"],ransom:["r-ae1-n s-ah-m","nn"],rant:["r-ae1-n-t","vb"],rap:["r-ae1-p","nn vb vbp"],rapacious:["r-ah p-ae1 sh-ih-s","jj"],rape:["r-ey1-p","nn vb vbp"],raped:["r-ey1-p-t","vbn vbd jj"],rapid:["r-ae1 p-ah-d","jj"],rapidity:["r-ah p-ih1 d-ah t-iy","nn"],rapidly:["r-ae1 p-ah-d l-iy","rb"],rapier:["r-ey1 p-iy er","nn"],rapist:["r-ey1 p-ih-s-t","nn"],rapped:["r-ae1-p-t","vbd vbn"],rapport:["r-ae p-ao1-r","nn"],rapt:["r-ae1-p-t","jj"],raptor:["r-ae1-p t-er","nn"],rapture:["r-ae1-p ch-er","nn"],rare:["r-eh1-r","jj"],rarefied:["r-eh1 r-ah f-ay-d","vbn"],rarefy:["r-eh1-r-ah-f-ay","vb"],rarely:["r-eh1-r l-iy","rb"],rarer:["r-eh1 r-er","jjr"],rarest:["r-eh1 r-ah-s-t","jjs"],rarity:["r-eh1 r-ah t-iy","nn"],rascal:["r-ae1-s k-ah-l","nn"],rash:["r-ae1-sh","nn jj"],raspberry:["r-ae1-z b-eh r-iy","jj nn"],rasped:["r-ae1-s-p-t","vbd"],raspy:["r-ae1-s p-iy","nn"],rat:["r-ae1-t","nn vb"],ratchet:["r-ae1 ch-ah-t","vb"],rate:["r-ey1-t","nn vbp vb"],rated:["r-ey1 t-ah-d","vbn jj vbd"],ratepayer:["r-ey1-t p-ey er","nn"],rather:["r-ae1 dh-er","rb in"],ratification:["r-ae t-ah f-ah k-ey1 sh-ah-n","nn"],ratified:["r-ae1 t-ah f-ay-d","vbd vbn"],ratifies:["r-ae1 t-ah f-ay-z","vbz"],ratify:["r-ae1 t-ah f-ay","vb vbp"],rating:["r-ey1 t-ih-ng","nn vbg"],ratio:["r-ey1 sh-iy ow","nn"],ration:["r-ae1 sh-ah-n","nn vb"],rational:["r-ae1 sh-ah n-ah-l","jj"],rationale:["r-ae sh-ah n-ae1-l","nn"],rationality:["r-ae sh-ah n-ae1 l-ih t-iy","nn"],rationalization:["r-ae sh-ah-n ah l-ih z-ey1 sh-ah-n","nn"],rationalize:["r-ae1 sh-ah-n ah l-ay-z","vb vbp"],rationalized:["r-ae1 sh-ah-n ah l-ay-z-d","jj vbn"],rationally:["r-ae1 sh-ah-n ah l-iy","rb"],rationing:["r-ae1 sh-ah-n ih-ng","nn"],rattle:["r-ae1 t-ah-l","nn vb"],rattled:["r-ae1 t-ah-l-d","vbn jj vbd"],rattler:["r-ae1 t-ah-l er","nn"],rattlesnake:["r-ae1 t-ah-l s-n-ey-k","nn"],ratty:["r-ae1 t-iy","jj"],raucous:["r-ao1 k-ah-s","jj"],ravage:["r-ae1 v-ih-jh","vb"],rave:["r-ey1-v","vbp jj vb"],ravenous:["r-ae1 v-ah n-ah-s","jj"],raw:["r-aa1","jj"],rawhide:["r-ao1 hh-ay-d","nn"],ray:["r-ey1","nn"],rayon:["r-ey1 ah-n","nn"],raze:["r-ey1-z","vb"],razor:["r-ey1 z-er","nn"],razorback:["r-ey1 z-er b-ae-k","nn"],reach:["r-iy1-ch","vb vbp nn"],reacquire:["r-iy ah k-w-ay1-r","vb"],react:["r-iy ae1-k-t","vb vbp"],reaction:["r-iy ae1-k sh-ah-n","nn"],reactionary:["r-iy ae1-k sh-ah-n eh r-iy","jj nn"],reactivate:["r-iy1-ae1-k-t-ah-v-ey-t","vb"],reactivity:["r-iy ae-k t-ih1 v-ah t-iy","nn"],reactor:["r-iy ae1-k t-er","nn"],read:["r-eh1-d","vb nn vbp vbd vbn"],readable:["r-iy1 d-ah b-ah-l","jj"],reader:["r-iy1 d-er","nn"],readership:["r-iy1 d-er sh-ih-p","nn"],readied:["r-eh1 d-iy-d","vbn vbd"],readily:["r-eh1 d-ah l-iy","rb"],readiness:["r-eh1 d-iy n-ah-s","nn"],reading:["r-eh1 d-ih-ng","nn vbg"],readjust:["r-iy ah jh-ah1-s-t","vb"],readmit:["r-iy-ah-d-m-ih1-t","vb"],ready:["r-eh1 d-iy","jj rb vb"],reaffirm:["r-iy ah f-er1-m","vb vbp"],reaffirmation:["r-iy ae f-er m-ey1 sh-ah-n","nn"],reagent:["r-iy ey1 jh-ah-n-t","nn"],real:["r-iy1-l","jj nn rb"],realestate:["r-iy1 l-ih s-t-ey-t","nn vb"],realign:["r-iy ah l-ay1-n","vb"],realigned:["r-iy ah l-ay1-n-d","vbd jj"],realignment:["r-iy ah l-ay1-n m-ah-n-t","nn"],realism:["r-iy1 l-ih z-ah-m","nn"],realist:["r-iy1 l-ih-s-t","nn"],realistic:["r-iy ah l-ih1 s-t-ih-k","jj"],realistically:["r-iy ah l-ih1 s-t-ih-k l-iy","rb"],reality:["r-iy ae1 l-ah t-iy","nn"],realization:["r-iy1 l-ah z-ey1 sh-ah-n","nn"],realize:["r-iy1 l-ay-z","vb vbp"],reallocate:["r-iy ae1 l-ah k-ey-t","vb"],really:["r-ih1 l-iy","rb"],realm:["r-eh1-l-m","nn"],realtor:["r-iy1 ah-l t-er","nn"],ream:["r-iy1-m","nn vb"],reap:["r-iy1-p","vb vbp"],reaper:["r-iy1 p-er","nn"],reappear:["r-iy ah p-ih1-r","vbp vb"],reappearance:["r-iy ah p-ih1 r-ah-n-s","nn"],reappoint:["r-iy-ah-p-oy1-n-t","vb"],reappraisal:["r-iy ah p-r-ey1 z-ah-l","nn"],reappraise:["r-iy ah p-r-ey1-z","vb vbp"],rear:["r-ih1-r","jj nn vb"],rearm:["r-iy1 aa1-r-m","vb"],rearrange:["r-iy er ey1-n-jh","vb"],rearrangement:["r-iy er ey1-n-jh m-ah-n-t","nn"],reason:["r-iy1 z-ah-n","nn vb vbp"],reasonable:["r-iy1 z-ah-n ah b-ah-l","jj"],reasonably:["r-iy1 z-ah-n ah b-l-iy","rb"],reasoned:["r-iy1 z-ah-n-d","vbd jj vbn"],reassemble:["r-iy ah s-eh1-m b-ah-l","vb"],reassert:["r-iy ah s-er1-t","vb"],reassess:["r-iy ah s-eh1-s","vb nn"],reassessment:["r-iy ah s-eh1-s m-ah-n-t","nn"],reassign:["r-iy ah s-ay1-n","vb"],reassignment:["r-iy ah s-ay1-n m-ah-n-t","nn"],reassume:["r-iy ah s-uw1-m","vb"],reassurance:["r-iy ah sh-uh1 r-ah-n-s","nn"],reassure:["r-iy ah sh-uh1-r","vb"],reassuring:["r-iy ah sh-uh1 r-ih-ng","vbg jj"],reassuringly:["r-iy ah sh-er1 ih-ng l-iy","rb"],reauthorize:["r-iy ao1 th-er ay-z","vb"],reawaken:["r-iy-ah-w-ey1-k-ah-n","vb"],rebalance:["r-iy b-ae1 l-ah-n-s","vb"],rebate:["r-iy1 b-ey-t","nn vb"],rebel:["r-eh1 b-ah-l","nn vbp jj vb"],rebellion:["r-ih b-eh1-l y-ah-n","nn"],rebellious:["r-ih b-eh1-l y-ah-s","jj"],rebirth:["r-iy b-er1-th","nn"],reborn:["r-iy1 b-ao1-r-n","vbn jj"],rebound:["r-iy b-aw1-n-d","nn vbp vb"],rebuff:["r-ih b-ah1-f","nn vb"],rebuild:["r-iy b-ih1-l-d","vb"],rebuilder:["r-iy b-ih1-l d-er","nn"],rebuilt:["r-iy b-ih1-l-t","vbn"],rebuke:["r-iy b-y-uw1-k","vb nn"],rebut:["r-ih b-ah1-t","vb"],rebuttal:["r-ih b-ah1 t-ah-l","nn"],recalcitrant:["r-ih k-ae1-l s-ih t-r-ah-n-t","jj"],recalculate:["r-iy-k-ae1-l-k-y-ah-l-ey-t","vb"],recalculation:["r-iy k-ae-l k-y-ah l-ey1 sh-ah-n","nn"],recall:["r-iy1 k-ao-l","vb nn vbp"],recant:["r-iy-k-ae1-n-t","vb"],recantation:["r-eh k-ah-n t-ey1 sh-ah-n","nn"],recast:["r-iy k-ae1-s-t","vb"],recede:["r-ih s-iy1-d","vbp vb"],receipt:["r-ih s-iy1-t","nn"],receivable:["r-ih s-iy1 v-ah b-ah-l","jj nn"],receive:["r-ah s-iy1-v","vb vbp"],received:["r-ah s-iy1-v-d","vbd vbn jj"],receiver:["r-ah s-iy1 v-er","nn"],receivership:["r-ih s-iy1 v-er sh-ih-p","nn"],recent:["r-iy1 s-ah-n-t","jj"],recently:["r-iy1 s-ah-n-t l-iy","rb"],receptacle:["r-ah s-eh1-p t-ah k-ah-l","nn"],reception:["r-ih s-eh1-p sh-ah-n","nn"],receptionist:["r-ih s-eh1-p sh-ah n-ih-s-t","nn"],receptive:["r-ih s-eh1-p t-ih-v","jj"],receptivity:["r-iy1 s-eh-p t-ih1 v-ih t-iy","nn"],receptor:["r-iy s-eh1-p t-er","nn"],recess:["r-ih s-eh1-s","nn vb"],recession:["r-ih s-eh1 sh-ah-n","nn"],recessionary:["r-iy s-eh1 sh-ah-n eh r-iy","jj"],recharge:["r-iy ch-aa1-r-jh","nn vb"],rechargeable:["r-iy ch-aa1-r jh-ah b-ah-l","jj"],recheck:["r-iy1 ch-eh1-k","vb vbp"],recipe:["r-eh1 s-ah p-iy","nn"],recipient:["r-ah s-ih1 p-iy ah-n-t","jj nn"],reciprocal:["r-ih s-ih1 p-r-ah k-ah-l","jj"],reciprocate:["r-ih s-ih1 p-r-ah k-ey-t","vb"],reciprocity:["r-eh s-ih p-r-aa1 s-ih t-iy","nn"],recital:["r-ah s-ay1 t-ah-l","nn"],recitation:["r-eh s-ah t-ey1 sh-ah-n","nn"],recite:["r-ah s-ay1-t","vb vbp"],reckless:["r-eh1-k l-ah-s","jj"],recklessly:["r-eh1-k l-ah-s l-iy","rb"],recklessness:["r-eh1-k l-ah-s n-ah-s","nn"],reckon:["r-eh1 k-ah-n","vbp vb"],reckoning:["r-eh1 k-ah n-ih-ng","nn vbg"],reclaim:["r-iy k-l-ey1-m","vb vbp"],reclaimed:["r-iy k-l-ey1-m-d","vbn vbd jj"],reclamation:["r-eh k-l-ah m-ey1 sh-ah-n","nn"],reclassification:["r-iy k-l-ae s-ah f-ah k-ey1 sh-ah-n","nn"],reclassified:["r-iy k-l-ae1 s-ah f-ay-d","vbd vbn"],reclassify:["r-iy-k-l-ae1-s-ih-f-ay","vb"],recline:["r-ih-k-l-ay1-n","vb"],recliner:["r-ih k-l-ay1 n-er","nn"],reclining:["r-ih k-l-ay1 n-ih-ng","vbg jj"],recluse:["r-ih k-l-uw1-s","nn"],reclusive:["r-ih k-l-uw1 s-ih-v","jj"],recognition:["r-eh k-ah-g n-ih1 sh-ah-n","nn"],recognizable:["r-eh k-ah-g n-ay1 z-ah b-ah-l","jj"],recognizably:["r-eh1 k-ah-g n-ay z-ah b-l-iy","rb"],recognizance:["r-ih k-aa1 n-ah z-ah-n-s","nn"],recognize:["r-eh1 k-ah-g n-ay-z","vb vbp"],recognized:["r-eh1 k-ah-g n-ay-z-d","vbn jj vbd"],recoil:["r-iy k-oy1-l","nn vb vbp"],recollect:["r-eh k-ah l-eh1-k-t","vb vbp"],recollection:["r-eh k-ah l-eh1-k sh-ah-n","nn"],recombinant:["r-ih k-aa1-m b-ih n-ah-n-t","jj"],recommend:["r-eh k-ah m-eh1-n-d","vb vbp"],recommendation:["r-eh k-ah m-ah-n d-ey1 sh-ah-n","nn"],recommended:["r-eh k-ah m-eh1-n d-ah-d","vbd vbn jj"],recompense:["r-eh1 k-ah-m p-eh-n-s","nn"],reconcile:["r-eh1 k-ah-n s-ay-l","vb"],reconciliation:["r-eh k-ah-n s-ih l-iy ey1 sh-ah-n","nn"],recondite:["r-eh1 k-ah-n d-ay-t","jj"],recondition:["r-iy-k-ah-n-d-ih1-sh-ah-n","vb"],reconfiguration:["r-iy k-ah-n f-ih g-y-er ey1 sh-ah-n","nn"],reconfigure:["r-iy k-ah-n f-ih1 g-y-er","nn"],reconfirm:["r-iy k-ah-n f-er1-m","vb"],reconfirmation:["r-iy k-aa-n f-er m-ey1 sh-ah-n","nn"],reconnaissance:["r-iy k-aa1 n-ah s-ah-n-s","nn"],reconnect:["r-iy k-ah n-eh1-k-t","vb"],reconsider:["r-iy k-ah-n s-ih1 d-er","vb vbp"],reconsideration:["r-iy k-ah-n s-ih d-er ey1 sh-ah-n","nn"],reconstitute:["r-iy k-aa1-n s-t-ah t-uw-t","vb"],reconstruct:["r-iy k-ah-n s-t-r-ah1-k-t","vb vbp"],reconstructed:["r-iy k-ah-n s-t-r-ah1-k t-ih-d","jj vbd vbn"],reconstruction:["r-iy k-ah-n s-t-r-ah1-k sh-ah-n","nn"],reconvene:["r-iy-k-ah-n-v-iy1-n","vb"],record:["r-ah k-ao1-r-d","nn jj vb vbp"],recorded:["r-ah k-ao1-r d-ah-d","vbn vbd jj"],recorder:["r-ih k-ao1-r d-er","nn"],recording:["r-ah k-ao1-r d-ih-ng","nn vbg"],recordkeeping:["r-eh1 k-er-d k-iy p-ih-ng","nn"],recount:["r-ih k-aw1-n-t","vb nn"],recoup:["r-ih k-uw1-p","vb"],recourse:["r-iy1 k-ao-r-s","nn"],recover:["r-ih k-ah1 v-er","vb vbp"],recoverable:["r-ih k-ah1 v-er ah b-ah-l","jj"],recovery:["r-ih k-ah1 v-r-iy","nn"],recreate:["r-eh1 k-r-iy ey-t","vb vbp"],recreation:["r-eh k-r-iy ey1 sh-ah-n","nn"],recreational:["r-eh k-r-iy ey1 sh-ah-n ah-l","jj"],recrimination:["r-ih k-r-ih m-ih n-ey1 sh-ah-n","nn"],recruit:["r-ah k-r-uw1-t","vb vbp nn"],recruiter:["r-ih k-r-uw1 t-er","nn"],recruitment:["r-ah k-r-uw1-t m-ah-n-t","nn"],rectangle:["r-eh1-k t-ae-ng g-ah-l","nn"],rectangular:["r-eh-k t-ae1-ng g-y-ah l-er","jj"],rectification:["r-eh-k t-ah f-ah k-ey1 sh-ah-n","nn"],rectified:["r-eh1-k t-ah f-ay-d","vbn"],rectifier:["r-eh1-k t-ah f-ay er","nn"],rectify:["r-eh1-k t-ah f-ay","vb"],rectitude:["r-eh1-k t-ih t-uw-d","nn"],rector:["r-eh1-k t-er","nn"],rectum:["r-eh1-k t-ah-m","nn"],recuperate:["r-ih k-uw1 p-er ey-t","vb"],recuperation:["r-ih k-uw p-er ey1 sh-ah-n","nn"],recur:["r-ih k-er1","vb vbp"],recurrence:["r-ih k-er1 ah-n-s","nn"],recurrent:["r-ih k-er1 ah-n-t","jj"],recuse:["r-ih-k-y-uw1-z","vb"],recyclable:["r-iy s-ay1 k-l-ah b-ah-l","jj"],recycle:["r-iy s-ay1 k-ah-l","vb"],recycled:["r-iy s-ay1 k-ah-l-d","vbn jj vbd"],recycler:["r-iy s-ay1 k-l-er","nn"],red:["r-eh1-d","jj nn"],redcoat:["r-eh1-d k-ow-t","nn"],redder:["r-eh1 d-er","jjr rbr"],reddish:["r-eh1 d-ih-sh","jj"],redecorate:["r-iy-d-eh1-k-er-ey-t","vb"],redecoration:["r-iy d-eh k-er ey1 sh-ah-n","nn"],redeem:["r-ih d-iy1-m","vb vbp"],redeemable:["r-ih d-iy1 m-ah b-ah-l","jj"],redeeming:["r-ih d-iy1 m-ih-ng","vbg jj"],redefine:["r-iy d-ih f-ay1-n","vb"],redefinition:["r-iy d-eh f-ah n-ih1 sh-ah-n","nn"],redemption:["r-ih d-eh1-m-p sh-ah-n","nn"],redemptive:["r-ih d-eh1-m-p t-ih-v","jj"],redeploy:["r-iy d-ih p-l-oy1","vb"],redeployment:["r-iy d-ih p-l-oy1 m-ah-n-t","nn"],redeposition:["r-iy d-eh p-ah z-ih1 sh-ah-n","nn"],redesign:["r-iy d-ih-z ay1-n","nn vb"],redesigned:["r-iy d-ih-z ay1-n-d","vbn vbd jj"],redevelop:["r-iy d-ih-v eh1 l-ah-p","vb"],redhead:["r-eh1-d hh-eh-d","nn"],redheaded:["r-eh1-d hh-eh d-ih-d","jj"],redirect:["r-iy d-er eh1-k-t","vb"],redirection:["r-iy d-er eh1-k sh-ah-n","nn"],rediscover:["r-iy d-ih-s k-ah1 v-er","vb"],rediscovery:["r-iy d-ih-s k-ah1 v-r-iy","nn"],redistribute:["r-iy d-ih-s t-r-ih1 b-y-uw-t","vb vbp"],redistribution:["r-iy d-ih-s t-r-ah b-y-uw1 sh-ah-n","nn"],redistrict:["r-iy d-ih1-s t-r-ih-k-t","vb"],redneck:["r-eh1-d n-eh-k","nn"],redo:["r-iy d-uw1","vb"],redone:["r-iy d-ah1-n","jj nn"],redouble:["r-iy d-ah1 b-ah-l","vb"],redoubt:["r-ah d-aw1-t","nn"],redound:["r-ih d-aw1-n-d","vb"],redraw:["r-iy d-r-ao1","vb"],redrawn:["r-iy d-r-ao1-n","jj"],redress:["r-ih d-r-eh1-s","vb nn"],reduce:["r-ah d-uw1-s","vb vbp"],reduced:["r-ah d-uw1-s-t","vbn vbd jj"],reduction:["r-ah d-ah1-k sh-ah-n","nn"],redundancy:["r-ih d-ah1-n d-ah-n s-iy","nn"],redundant:["r-ih d-ah1-n d-ah-n-t","jj"],redwood:["r-eh1-d w-uh-d","nn"],reed:["r-iy1-d","nn"],reedy:["r-iy1 d-iy","jj"],reef:["r-iy1-f","nn"],reek:["r-iy1-k","vb vbp nn"],reel:["r-iy1-l","nn vbp vb"],reemerge:["r-iy-ih-m-er1-jh","vb"],reestablish:["r-iy ih s-t-ae1 b-l-ih-sh","vb"],reexamination:["r-iy ih-g z-ae m-ah n-ey1 sh-ah-n","nn"],reexamine:["r-iy eh-g z-ae1 m-ah-n","vb"],refer:["r-ah f-er1","vb vbp"],referee:["r-eh f-er iy1","nn"],reference:["r-eh1 f-er ah-n-s","nn"],referenda:["r-eh f-er eh1-n d-ah","nn"],referendum:["r-eh f-er eh1-n d-ah-m","nn"],referral:["r-ih f-er1 ah-l","nn"],refile:["r-iy f-ay1-l","vb"],refill:["r-iy1 f-ih-l","nn vb"],refinance:["r-iy f-ah n-ae1-n-s","vb"],refine:["r-ah f-ay1-n","vb"],refined:["r-ah f-ay1-n-d","jj vbn"],refinement:["r-ah f-ay1-n m-ah-n-t","nn"],refiner:["r-ih f-ay1 n-er","nn"],refinery:["r-ih f-ay1 n-er iy","nn"],refit:["r-iy-f-ih1-t","vb"],reflect:["r-ah f-l-eh1-k-t","vb vbp"],reflected:["r-ah f-l-eh1-k t-ah-d","vbd jj vbn"],reflecting:["r-ah f-l-eh1-k t-ih-ng","vbg jj"],reflection:["r-ah f-l-eh1-k sh-ah-n","nn"],reflective:["r-ih f-l-eh1-k t-ih-v","jj"],reflex:["r-iy1 f-l-eh-k-s","nn jj"],reflexively:["r-iy f-l-eh1-k s-ih-v l-iy","rb"],refocus:["r-iy f-ow1 k-ah-s","vb"],reforestation:["r-iy f-ao r-ah s-t-ey1 sh-ah-n","nn"],reform:["r-ah f-ao1-r-m","nn vb"],reformation:["r-eh f-er m-ey1 sh-ah-n","nn"],reformatory:["r-ih f-ao1-r m-ah t-ao r-iy","nn"],reformed:["r-ih f-ao1-r-m-d","vbn jj vbd"],reformer:["r-ih f-ao1-r m-er","jj nn"],reformist:["r-ih f-ao1-r m-ih-s-t","nn jj"],reformulate:["r-iy-f-ao1-r-m-y-ah-l-ey-t","vb"],reformulated:["r-iy f-ao1-r m-y-ah l-ey t-ih-d","vbn jj"],refractive:["r-ah f-r-ae1-k t-ih-v","jj"],refractory:["r-ah f-r-ae1-k t-er iy","jj nn"],refrain:["r-ih f-r-ey1-n","vb nn"],refresh:["r-ih f-r-eh1-sh","vb vbp"],refreshed:["r-iy f-r-eh1-sh-t","jj vbd vbn"],refresher:["r-ih f-r-eh1 sh-er","nn"],refreshing:["r-ih f-r-eh1 sh-ih-ng","jj vbg"],refreshingly:["r-iy f-r-eh1 sh-ih-ng l-iy","rb"],refreshment:["r-ah f-r-eh1-sh m-ah-n-t","nn"],refrigerant:["r-ih f-r-ih1 jh-er ah-n-t","nn"],refrigerate:["r-ih-f-r-ih1-jh-er-ey-t","vb"],refrigerated:["r-ih f-r-ih1 jh-er ey t-ih-d","vbn jj"],refrigeration:["r-ih f-r-ih jh-er ey1 sh-ah-n","nn"],refrigerator:["r-ah f-r-ih1 jh-er ey t-er","nn"],refuel:["r-iy f-y-uw1 ah-l","vb"],refuge:["r-eh1 f-y-uw-jh","nn"],refugee:["r-eh1 f-y-uw jh-iy","nn"],refund:["r-ih f-ah1-n-d","nn vb"],refundable:["r-ih f-ah1-n d-ah b-ah-l","jj"],refunding:["r-ih f-ah1-n d-ih-ng","vbg jj"],refurbish:["r-iy f-er1 b-ih-sh","vb"],refusal:["r-ah f-y-uw1 z-ah-l","nn"],refuse:["r-ah f-y-uw1-z","vb vbp nn"],refute:["r-ih f-y-uw1-t","vb"],regain:["r-ih g-ey1-n","vb vbp"],regal:["r-iy1 g-ah-l","jj"],regale:["r-iy1 g-eh1-l","vb"],regalia:["r-ih g-ey1 l-y-ah","nn"],regard:["r-ah g-aa1-r-d","nn vb vbp"],regarded:["r-ah g-aa1-r d-ah-d","vbn jj vbd"],regardless:["r-ah g-aa1-r-d l-ah-s","rb"],regatta:["r-ah g-aa1 t-ah","nn"],regenerate:["r-iy jh-eh1 n-er ey-t","vb"],regeneration:["r-iy jh-eh1 n-er ey1 sh-ah-n","nn"],regent:["r-iy1 jh-ah-n-t","nn"],reggae:["r-eh1 g-ey","nn"],regime:["r-ah zh-iy1-m","nn"],regimen:["r-eh1 jh-ah m-ah-n","nn"],regiment:["r-eh1 jh-ah m-ah-n-t","nn vb"],regimentation:["r-eh jh-ah m-eh-n t-ey1 sh-ah-n","nn"],regimented:["r-eh1 jh-ah m-eh-n t-ih-d","vbn jj"],region:["r-iy1 jh-ah-n","nn"],regional:["r-iy1 jh-ah n-ah-l","jj"],regionally:["r-iy1 jh-ah-n ah l-iy","rb"],register:["r-eh1 jh-ih s-t-er","vb nn vbp"],registered:["r-eh1 jh-ih s-t-er-d","vbn vbd jj"],registrant:["r-eh1 jh-ah-s t-r-ah-n-t","nn"],registrar:["r-eh1 jh-ih s-t-r-aa-r","nn"],registration:["r-eh jh-ih-s t-r-ey1 sh-ah-n","nn"],registry:["r-eh1 jh-ih-s t-r-iy","nn"],regress:["r-iy1 g-r-eh-s","vb"],regression:["r-ah g-r-eh1 sh-ah-n","nn"],regressive:["r-ah g-r-eh1 s-ih-v","jj"],regret:["r-ah g-r-eh1-t","vbp nn vb"],regrettable:["r-ih g-r-eh1 t-ah b-ah-l","jj"],regrettably:["r-ih g-r-eh1 t-ah b-l-iy","rb"],regroup:["r-iy g-r-uw1-p","vb vbp"],regular:["r-eh1 g-y-ah l-er","jj"],regularity:["r-eh g-y-ah l-eh1 r-ah t-iy","nn"],regularly:["r-eh1 g-y-ah l-er l-iy","rb"],regulate:["r-eh1 g-y-ah l-ey-t","vb vbp"],regulated:["r-eh1 g-y-ah l-ey t-ah-d","vbn jj vbd"],regulation:["r-eh g-y-ah l-ey1 sh-ah-n","nn jj"],regulative:["r-eh1 g-y-ah l-ey t-ih-v","jj"],regulator:["r-eh1 g-y-ah l-ey t-er","nn"],regulatory:["r-eh1 g-y-ah l-ah t-ao r-iy","jj"],rehabilitate:["r-iy-hh ah b-ih1 l-ah t-ey-t","vb"],rehabilitation:["r-iy-hh ah b-ih l-ah t-ey1 sh-ah-n","nn"],rehash:["r-iy hh-ae1-sh","nn vb vbp"],rehear:["r-iy hh-ih1-r","vb"],rehearing:["r-iy hh-ih1 r-ih-ng","nn"],rehearsal:["r-ih hh-er1 s-ah-l","nn"],rehearse:["r-iy hh-er1-s","vb"],reign:["r-ey1-n","nn vbp vb"],reignite:["r-iy ih-g n-ay1-t","vb nn"],reimburse:["r-iy ih-m b-er1-s","vb vbp"],reimbursement:["r-iy ih-m b-er1-s m-ah-n-t","nn"],reimpose:["r-iy ih-m p-ow1-z","vb jj"],rein:["r-ey1-n","vb nn"],reincarnate:["r-iy-ih-n-k-aa1-r-n-ey-t","vb"],reinforce:["r-iy ih-n f-ao1-r-s","vb vbp"],reinforced:["r-iy ih-n f-ao1-r-s-t","vbn vbd jj"],reinforcement:["r-iy ih-n f-ao1-r-s m-ah-n-t","nn"],reinstate:["r-iy ih-n s-t-ey1-t","vb"],reinstatement:["r-iy ih-n s-t-ey1-t m-ah-n-t","nn"],reinstitute:["r-iy-ih1-n-s-t-ih-t-uw-t","vb"],reinsurance:["r-iy ih-n sh-uh1 r-ah-n-s","nn"],reinsure:["r-iy ih-n sh-uh1-r","vb"],reintegrate:["r-iy-ih1-n-t-ah-g-r-ey-t","vb"],reinterpret:["r-iy ih-n t-er1 p-r-ah-t","vb"],reinterpretation:["r-iy ih-n t-er p-r-ah t-ey1 sh-ah-n","nn"],reintroduce:["r-iy ih-n t-r-ah d-uw1-s","vbp vb"],reinvent:["r-iy ih-n v-eh1-n-t","vb"],reinvest:["r-iy ih-n v-eh1-s-t","vb vbp"],reinvestment:["r-iy ih-n v-eh1-s-t m-ah-n-t","nn"],reinvigorate:["r-iy ih-n v-ih1 g-er ey-t","vb"],reinvigoration:["r-iy ih-n v-ih g-er ey1 sh-ah-n","nn"],reissue:["r-iy ih1 sh-uw","nn"],reiterate:["r-iy ih1 t-er ey-t","vb vbp"],reiteration:["r-iy ih t-er ey1 sh-ah-n","nn"],reject:["r-ih jh-eh1-k-t","vb vbp"],rejection:["r-ih jh-eh1-k sh-ah-n","nn"],rejigger:["r-iy jh-ih1 g-er","vb"],rejoice:["r-ih jh-oy1-s","vbp vb"],rejoin:["r-iy jh-oy1-n","vb vbp"],rejoinder:["r-ih jh-oy1-n d-er","nn"],rejuvenate:["r-ih jh-uw1 v-ah n-ey-t","vb"],rejuvenated:["r-ih jh-uw1 v-ah n-ey t-ih-d","vbn jj"],rejuvenation:["r-ih jh-uw v-ah n-ey1 sh-ah-n","nn"],rekindle:["r-iy k-ih1-n d-ah-l","vb"],relapse:["r-iy l-ae1-p-s","nn"],relate:["r-ih l-ey1-t","vbp vb"],related:["r-ih l-ey1 t-ih-d","vbn jj vbd"],relation:["r-iy l-ey1 sh-ah-n","nn"],relational:["r-iy l-ey1 sh-ah n-ah-l","jj"],relationship:["r-iy l-ey1 sh-ah-n sh-ih-p","nn"],relative:["r-eh1 l-ah t-ih-v","jj nn"],relatively:["r-eh1 l-ah t-ih-v l-iy","rb"],relativism:["r-eh1 l-ah t-ih v-ih z-ah-m","nn"],relativistic:["r-eh l-ah t-ih v-ih1 s-t-ih-k","jj"],relativity:["r-eh l-ah t-ih1 v-ah t-iy","nn"],relaunch:["r-iy l-ao1-n-ch","vb"],relax:["r-ih l-ae1-k-s","vb vbp"],relaxation:["r-iy l-ae-k s-ey1 sh-ah-n","nn"],relaxed:["r-ih l-ae1-k-s-t","vbn jj vbd"],relaxing:["r-ih l-ae1-k s-ih-ng","vbg jj"],relay:["r-iy1 l-ey","vb nn vbp"],release:["r-iy l-iy1-s","nn vbp vb"],relegate:["r-eh1-l-ah-g-ey-t","vb"],relent:["r-ih l-eh1-n-t","vbp vb"],relentless:["r-ih l-eh1-n-t l-ih-s","jj"],relentlessly:["r-ih l-eh1-n-t l-ah-s l-iy","rb"],relevance:["r-eh1 l-ah v-ah-n-s","nn"],relevancy:["r-eh1 l-ah v-ah-n s-iy","nn"],relevant:["r-eh1 l-ah v-ah-n-t","jj"],reliability:["r-iy l-ay ah b-ih1 l-ah t-iy","nn"],reliable:["r-ih l-ay1 ah b-ah-l","jj"],reliably:["r-ih l-ay1 ah b-l-iy","rb"],reliance:["r-ih l-ay1 ah-n-s","nn"],reliant:["r-ih l-ay1 ah-n-t","jj"],relic:["r-eh1 l-ih-k","nn"],relied:["r-ih l-ay1-d","vbn vb vbd"],relief:["r-ih l-iy1-f","nn"],relies:["r-ih l-ay1-z","vbz"],relieve:["r-ih l-iy1-v","vb"],relieved:["r-ih l-iy1-v-d","vbn vbd jj"],reliever:["r-iy l-iy1 v-er","nn"],religion:["r-ih l-ih1 jh-ah-n","nn"],religious:["r-ih l-ih1 jh-ah-s","jj in nn"],religiously:["r-ih l-ih1 jh-ah-s l-iy","rb"],relinquish:["r-ih l-ih1-ng k-w-ih-sh","vb vbp"],relish:["r-eh1 l-ih-sh","nn vb"],relive:["r-iy l-ih1-v","vbp vb"],relocate:["r-iy l-ow1 k-ey-t","vb nn vbp"],relocation:["r-iy l-ow1 k-ey1 sh-ah-n","nn"],reluctance:["r-ih l-ah1-k t-ah-n-s","nn"],reluctant:["r-ih l-ah1-k t-ah-n-t","jj"],reluctantly:["r-ih l-ah1-k t-ah-n-t l-iy","rb"],rely:["r-ih l-ay1","vb vbp"],remade:["r-iy m-ey1-d","vbn nn vb"],remain:["r-ih m-ey1-n","vb vbp"],remainder:["r-ih m-ey1-n d-er","nn"],remaining:["r-ih m-ey1 n-ih-ng","vbg jj"],remake:["r-iy1 m-ey1-k","vb"],remand:["r-ih-m-ae1-n-d","vb"],remark:["r-ih m-aa1-r-k","nn vb"],remarkable:["r-ih m-aa1-r k-ah b-ah-l","jj"],remarkably:["r-ih m-aa1-r k-ah b-l-iy","rb"],remarried:["r-iy m-eh1 r-iy-d","vbd vbn"],remarry:["r-iy m-eh1 r-iy","vb"],remarrying:["r-iy m-eh1 r-iy ih-ng","nn"],rematch:["r-iy1 m-ae1-ch","nn"],remedial:["r-ih m-iy1 d-iy ah-l","jj"],remediation:["r-ih m-iy d-iy ey1 sh-ah-n","nn"],remedied:["r-eh1 m-ah d-iy-d","vbn"],remedy:["r-eh1 m-ah d-iy","nn vb"],remember:["r-ih m-eh1-m b-er","vb vbp"],remembered:["r-ih m-eh1-m b-er-d","vbd jj vbn"],remembrance:["r-iy m-eh1-m b-r-ah-n-s","nn"],remind:["r-iy m-ay1-n-d","vb vbp"],reminder:["r-iy m-ay1-n d-er","nn"],reminisce:["r-eh-m-ah-n-ih1-s","vb"],reminiscence:["r-eh m-ah n-ih1 s-ah-n-s","nn"],reminiscent:["r-eh m-ah n-ih1 s-ah-n-t","jj nn"],remiss:["r-iy m-ih1-s","jj"],remission:["r-iy m-ih1 sh-ah-n","nn"],remit:["r-iy-m-ih1-t","vb"],remittance:["r-iy m-ih1 t-ah-n s-ih","nn"],remnant:["r-eh1-m n-ah-n-t","nn"],remodel:["r-iy-m-aa1-d-ah-l","vb"],remorse:["r-ih m-ao1-r-s","nn"],remorseless:["r-ih m-ao1-r-s l-ah-s","jj"],remote:["r-ih m-ow1-t","jj"],remotely:["r-iy m-ow1-t l-iy","rb"],remoteness:["r-iy m-ow1-t n-ah-s","nn"],remotest:["r-ih m-ow1 t-ah-s-t","jjs"],removable:["r-ih m-uw1 v-ah b-ah-l","jj"],removal:["r-ih m-uw1 v-ah-l","nn"],remove:["r-iy m-uw1-v","vb vbp"],removed:["r-iy m-uw1-v-d","vbn jj vbd"],remuneration:["r-ih m-y-uw n-er ey1 sh-ah-n","nn"],remunerative:["r-iy m-y-uw1 n-er ah t-ih-v","jj"],renaissance:["r-eh n-ah s-aa1-n-s","nn"],renal:["r-iy1 n-ah-l","jj"],rename:["r-iy n-ey1-m","vb"],renationalize:["r-iy n-ae1 sh-ah-n ah l-ay-z","vb"],render:["r-eh1-n d-er","vb vbp"],rendezvous:["r-aa1-n d-ih v-uw","nn"],rendition:["r-eh-n d-ih1 sh-ah-n","nn"],renegade:["r-eh1 n-ah g-ey-d","nn"],renege:["r-ih n-ih1-g","vb"],renegotiate:["r-iy n-ih g-ow1 sh-iy ey-t","vb"],renegotiation:["r-iy n-ih g-ow sh-iy ey1 sh-ah-n","nn"],renew:["r-ih n-uw1","vb vbp"],renewable:["r-iy n-uw1 ah b-ah-l","jj"],renewal:["r-ih n-uw1 ah-l","nn"],renewed:["r-ih n-uw1-d","vbn vbd jj"],renounce:["r-ih n-aw1-n-s","vb"],renovate:["r-eh1 n-ah v-ey-t","vb"],renovated:["r-eh1 n-ah v-ey t-ih-d","vbn jj"],renovation:["r-eh n-ah v-ey1 sh-ah-n","nn"],renown:["r-ih n-aw1-n","nn vb"],renowned:["r-ih n-aw1-n-d","jj vbn"],rent:["r-eh1-n-t","nn vb vbn vbp"],rental:["r-eh1-n t-ah-l","jj nn"],rented:["r-eh1-n t-ah-d","vbn jj vbd"],renter:["r-eh1-n t-er","nn"],renunciation:["r-ih n-ah-n s-iy ey1 sh-ah-n","nn"],reoffer:["r-iy-ao1-f-er","vb"],reoffered:["r-iy ao1 f-er-d","vbn jj vbd"],reopen:["r-iy ow1 p-ah-n","vb vbp"],reopened:["r-iy ow1 p-ah-n-d","vbd vbn vb"],reorder:["r-iy ao1-r d-er","vb"],reordering:["r-iy ao1-r d-er ih-ng","nn vbg"],reorganization:["r-iy ao-r g-ah n-ah z-ey1 sh-ah-n","nn"],reorganize:["r-iy ao1-r g-ah n-ay-z","vb"],reorganized:["r-iy ao1-r g-ah n-ay-z-d","vbn jj vbd"],reorient:["r-iy ao1 r-iy eh-n-t","vb"],rep:["r-eh1-p","nn"],repackage:["r-iy p-ae1 k-ih-jh","vb"],repaid:["r-iy p-ey1-d","vbn vbd"],repaint:["r-iy-p-ey1-n-t","vb"],repainted:["r-iy p-ey1-n t-ah-d","vbn jj"],repair:["r-ih p-eh1-r","nn vb vbp"],repairman:["r-ih p-eh1-r m-ae-n","nn"],reparation:["r-eh p-er ey1 sh-ah-n","nn"],repartee:["r-eh p-er t-iy1","nn"],repatriate:["r-iy p-ey1 t-r-iy ey-t","vb vbp"],repatriation:["r-iy p-ey t-r-iy ey1 sh-ah-n","nn"],repay:["r-iy p-ey1","vb vbp"],repayable:["r-iy p-ey1 ah b-ah-l","jj"],repayment:["r-iy p-ey1 m-ah-n-t","nn"],repeal:["r-ih p-iy1-l","nn vb"],repeat:["r-ih p-iy1-t","vb jj nn vbp"],repeated:["r-ih p-iy1 t-ih-d","vbn jj vbd"],repeatedly:["r-ih p-iy1 t-ih-d l-iy","rb"],repeater:["r-ih p-iy1 t-er","nn"],repeating:["r-ih p-iy1 t-ih-ng","vbg jj"],repel:["r-ih p-eh1-l","vb vbp"],repellent:["r-ih p-eh1 l-ah-n-t","jj nn"],repent:["r-ih p-eh1-n-t","vb vbp"],repentance:["r-ih p-eh1-n t-ah-n-s","nn"],repercussion:["r-iy p-er k-ah1 sh-ah-n","nn"],repertoire:["r-eh1 p-er t-w-aa-r","nn"],repertory:["r-eh1 p-er t-ao r-iy","nn"],repetition:["r-eh p-ah t-ih1 sh-ah-n","nn"],repetitious:["r-eh p-ah t-ih1 sh-ah-s","jj"],repetitive:["r-ih p-eh1 t-ih t-ih-v","jj"],rephrase:["r-iy f-r-ey1-z","vb"],replace:["r-iy p-l-ey1-s","vb vbp"],replacement:["r-ih p-l-ey1-s m-ah-n-t","nn jj"],replant:["r-iy-p-l-ae1-n-t","vb"],replay:["r-iy p-l-ey1","nn vb"],replenish:["r-iy p-l-eh1 n-ih-sh","vb"],replenishment:["r-ih p-l-eh1 n-ih-sh m-ah-n-t","nn"],replete:["r-iy p-l-iy1-t","jj"],replica:["r-eh1 p-l-ih k-ah","nn"],replicate:["r-eh1 p-l-ah k-ey-t","vb"],replication:["r-eh p-l-ah k-ey1 sh-ah-n","nn"],replied:["r-ih p-l-ay1-d","vbd vbn"],reply:["r-ih p-l-ay1","nn vb vbp"],report:["r-iy p-ao1-r-t","nn vbp vb"],reportage:["r-ih p-ao1-r t-ih-jh","nn"],reported:["r-iy p-ao1-r t-ah-d","vbd jj vb vbn vbp"],reportedly:["r-ih p-ao1-r t-ah-d l-iy","rb"],reporter:["r-ih p-ao1-r t-er","nn"],reportorial:["r-eh p-er t-ao1 r-iy ah-l","jj"],repose:["r-iy p-ow1-z","nn"],reposition:["r-iy p-ah z-ih1 sh-ah-n","vb"],repositioning:["r-iy p-ah z-ih1 sh-ah-n ih-ng","nn vbg"],repository:["r-iy p-aa1 z-ah t-ao r-iy","nn"],repossess:["r-iy p-ah z-eh1-s","vb"],repossessed:["r-iy p-ah z-eh1-s-t","jj vbn"],reprehensible:["r-eh p-r-ih hh-eh1-n s-ah b-ah-l","jj"],represent:["r-eh p-r-ah z-eh1-n-t","vb vbp"],representation:["r-eh p-r-ah z-eh-n t-ey1 sh-ah-n","nn"],representational:["r-eh p-r-ah z-ah-n t-ey1 sh-ah n-ah-l","jj nn"],representative:["r-eh p-r-ah z-eh1-n t-ah t-ih-v","nn jj"],repress:["r-iy p-r-eh1-s","vb"],repressed:["r-iy p-r-eh1-s-t","vbn jj"],repression:["r-iy p-r-eh1 sh-ah-n","nn"],repressive:["r-iy p-r-eh1 s-ih-v","jj"],reprice:["r-iy p-r-ay1-s","vb"],repricing:["r-iy p-r-ay1 s-ih-ng","nn"],reprieve:["r-iy p-r-iy1-v","nn"],reprimand:["r-eh1-p-r-ah-m-ae-n-d","vb"],reprint:["r-iy p-r-ih1-n-t","vb"],reprisal:["r-iy p-r-ay1 z-ah-l","nn"],reproach:["r-iy p-r-ow1-ch","nn"],reprocess:["r-iy p-r-ao1 s-eh-s","vb"],reproduce:["r-iy p-r-ah d-uw1-s","vb"],reproduction:["r-iy p-r-ah d-ah1-k sh-ah-n","nn"],reproductive:["r-iy p-r-ah d-ah1-k t-ih-v","jj"],reptile:["r-eh1-p t-ay-l","nn"],republic:["r-iy p-ah1 b-l-ah-k","nn"],republican:["r-ih p-ah1 b-l-ih k-ah-n","jj"],repudiate:["r-iy p-y-uw1 d-iy ey-t","vb"],repudiation:["r-ih p-y-uw d-iy ey1 sh-ah-n","nn"],repugnant:["r-ih p-ah1-g n-ah-n-t","jj"],repulse:["r-iy-p-ah1-l-s","vb"],repulsive:["r-iy p-ah1-l s-ih-v","jj"],repurchase:["r-iy p-er1 ch-ah-s","nn vbd vbn jj vb"],reputable:["r-eh1 p-y-ah t-ah b-ah-l","jj"],reputation:["r-eh p-y-ah t-ey1 sh-ah-n","nn"],repute:["r-iy p-y-uw1-t","nn vb"],reputed:["r-ih p-y-uw1 t-ih-d","vbn jj"],reputedly:["r-ih p-y-uw1 t-ih-d l-iy","rb"],requalify:["r-iy k-w-aa1 l-ah f-ay","vb"],request:["r-ih k-w-eh1-s-t","nn vb vbp"],require:["r-iy k-w-ay1 er","vb vbp"],required:["r-iy k-w-ay1 er-d","vbn vbd jj"],requirement:["r-ih k-w-ay1-r m-ah-n-t","nn"],requisite:["r-eh1 k-w-ah z-ah-t","jj"],requisition:["r-eh-k-w-ah-z-ih1-sh-ah-n","vb"],reread:["r-iy1 r-iy1-d","vb vbd vbn"],reroute:["r-iy-r-uw1-t","vb"],rerun:["r-iy1 r-ah1-n","nn"],resale:["r-iy1 s-ey-l","nn"],reschedule:["r-iy s-k-eh1 jh-uw-l","vb"],rescind:["r-ih s-ih1-n-d","vb"],rescission:["r-ih s-ih1 zh-ah-n","nn"],rescue:["r-eh1 s-k-y-uw","nn vb"],rescuer:["r-eh1 s-k-y-uw er","nn"],reseacher:["r-iy s-er1 ch-er","nn"],research:["r-iy s-er1-ch","nn vb vbp"],researcher:["r-iy1 s-er ch-er","nn"],resell:["r-iy s-eh1-l","vb vbp jj"],reseller:["r-iy s-eh1 l-er","jj nn"],resemblance:["r-ih z-eh1-m b-l-ah-n-s","nn"],resemble:["r-ih z-eh1-m b-ah-l","vb vbp"],resent:["r-ih z-eh1-n-t","vbp vb"],resentful:["r-ih z-eh1-n-t f-ah-l","jj"],resentment:["r-ih z-eh1-n-t m-ah-n-t","nn"],reservation:["r-eh z-er v-ey1 sh-ah-n","nn"],reserve:["r-ih z-er1-v","nn jj vb vbp"],reserved:["r-ih z-er1-v-d","vbn vbd jj"],reservist:["r-ih z-er1 v-ih-s-t","nn"],reservoir:["r-eh1 z-ah v-w-aa-r","nn"],reset:["r-iy s-eh1-t","nn vbn jj vb"],resettable:["r-iy s-eh1 t-ah b-ah-l","jj"],resettle:["r-iy s-eh1 t-ah-l","vb"],resettlement:["r-iy s-eh1 t-ah-l m-ah-n-t","nn"],reshape:["r-iy sh-ey1-p","vb"],reshuffle:["r-iy sh-ah1 f-ah-l","nn vb"],reside:["r-ih z-ay1-d","vbp vb"],residence:["r-eh1 z-ih d-ah-n-s","nn"],residency:["r-eh1 z-ih d-ah-n s-iy","nn"],resident:["r-eh1 z-ih d-ah-n-t","nn jj"],residential:["r-eh z-ih d-eh1-n ch-ah-l","jj"],residual:["r-ih z-ih1 jh-uw ah-l","jj nn"],residue:["r-eh1 z-ah d-uw","nn"],resign:["r-ih z-ay1-n","vb vbp"],resignation:["r-eh z-ah-g n-ey1 sh-ah-n","nn"],resigned:["r-ih z-ay1-n-d","vbd vbn jj"],resilience:["r-ih z-ih1 l-iy ah-n-s","nn"],resiliency:["r-ih z-ih1 l-y-ah-n s-iy","nn"],resilient:["r-ih z-ih1 l-y-ah-n-t","jj"],resin:["r-eh1 z-ah-n","nn"],resist:["r-ih z-ih1-s-t","vb vbp"],resistance:["r-ih z-ih1 s-t-ah-n-s","nn"],resistant:["r-ih z-ih1 s-t-ah-n-t","jj nn"],resistor:["r-ih z-ih1 s-t-er","nn"],resold:["r-iy s-ow1-l-d","vbn vbd vbp vb"],resolute:["r-eh1 z-ah l-uw-t","jj"],resolutely:["r-eh1 s-ah l-uw-t l-iy","rb"],resolution:["r-eh z-ah l-uw1 sh-ah-n","nn"],resolve:["r-iy z-aa1-l-v","vb nn"],resonance:["r-eh1 z-ah n-ah-n-s","nn"],resonant:["r-eh1 z-ah n-ah-n-t","jj"],resonate:["r-eh1 z-ah n-ey-t","vb"],resort:["r-ih z-ao1-r-t","nn vbp vb"],resounding:["r-iy s-aw1-n d-ih-ng","jj"],resource:["r-iy1 s-ao-r-s","nn"],resourceful:["r-iy s-ao1-r-s f-ah-l","jj"],resourcefulness:["r-iy s-ao1-r-s f-ah-l n-ah-s","nn"],respect:["r-ih s-p-eh1-k-t","nn vbp vb"],respectability:["r-iy s-p-eh-k t-ah b-ih1 l-ih t-iy","nn"],respectable:["r-ih s-p-eh1-k t-ah b-ah-l","jj"],respected:["r-ih s-p-eh1-k t-ih-d","vbn jj vbd"],respectful:["r-ih s-p-eh1-k-t f-ah-l","jj"],respectfully:["r-ih s-p-eh1-k-t f-ah l-iy","rb"],respective:["r-ih s-p-eh1-k t-ih-v","jj"],respectively:["r-ih s-p-eh1-k t-ih-v l-iy","rb"],respiration:["r-eh s-p-er ey1 sh-ah-n","nn"],respirator:["r-eh1 s-p-er ey t-er","nn"],respiratory:["r-eh1 s-p-er ah t-ao r-iy","jj"],respite:["r-eh1 s-p-ih-t","nn"],resplendent:["r-iy s-p-l-eh1-n d-ah-n-t","jj"],respond:["r-ih s-p-aa1-n-d","vb nn vbp"],respondent:["r-ih s-p-aa1-n d-ah-n-t","nn"],response:["r-ih s-p-aa1-n-s","nn"],responsibility:["r-iy s-p-aa-n s-ah b-ih1 l-ah t-iy","nn"],responsible:["r-iy s-p-aa1-n s-ah b-ah-l","jj"],responsibly:["r-ih s-p-aa1-n s-ah b-l-iy","rb"],responsive:["r-ih s-p-aa1-n s-ih-v","jj"],responsiveness:["r-ih s-p-aa1-n s-ih-v n-ah-s","nn"],rest:["r-eh1-s-t","nn vbp vb rb"],restage:["r-iy-s-t-ey1-jh","vb"],restart:["r-iy s-t-aa1-r-t","vb"],restate:["r-iy s-t-ey1-t","vb"],restated:["r-iy s-t-ey1 t-ih-d","vbn vbd jj"],restatement:["r-iy s-t-ey1-t m-ah-n-t","nn"],restaurant:["r-eh1 s-t-er aa-n-t","nn"],restaurateur:["r-eh s-t-er ah t-er1","nn"],restful:["r-eh1-s-t f-ah-l","jj"],restitution:["r-eh s-t-ih t-uw1 sh-ah-n","nn"],restive:["r-eh1 s-t-ih-v","jj"],restless:["r-eh1-s-t l-ah-s","jj"],restlessly:["r-eh1-s-t l-ah-s l-iy","rb"],restlessness:["r-eh1-s-t l-ah-s n-ah-s","nn"],restock:["r-iy s-t-aa1-k","vb"],restoration:["r-eh s-t-er ey1 sh-ah-n","nn"],restore:["r-ih s-t-ao1-r","vb vbp"],restorer:["r-ih s-t-ao1 r-er","nn"],restrain:["r-iy s-t-r-ey1-n","vb"],restrained:["r-iy s-t-r-ey1-n-d","vbn vbd jj"],restraining:["r-iy s-t-r-ey1 n-ih-ng","vbg jj"],restraint:["r-ih s-t-r-ey1-n-t","nn"],restrict:["r-iy s-t-r-ih1-k-t","vb vbp"],restricted:["r-iy s-t-r-ih1-k t-ah-d","vbn jj vbd"],restricting:["r-iy s-t-r-ih1-k t-ih-ng","vbg jj"],restriction:["r-iy-s t-r-ih1-k sh-ah-n","nn"],restrictive:["r-iy s-t-r-ih1-k t-ih-v","jj"],restroom:["r-eh1-s-t r-uw-m","nn"],restructure:["r-iy s-t-r-ah1-k ch-er","vb vbp nn"],restructured:["r-iy s-t-r-ah1-k ch-er-d","vbn vbd jj"],restructuring:["r-iy s-t-r-ah1-k ch-er ih-ng","vbg nn"],restyle:["r-iy-s-t-ay1-l","vb"],restyled:["r-iy s-t-ay1-l-d","vbn jj"],resubmit:["r-iy s-ah-b m-ih1-t","vb"],result:["r-ih z-ah1-l-t","nn vbp vb"],resultant:["r-iy z-ah1-l t-ah-n-t","jj nn"],resulting:["r-ih z-ah1-l t-ih-ng","vbg jj"],resume:["r-ih z-uw1-m","vb nn vbp"],resumption:["r-ih z-ah1-m-p sh-ah-n","nn"],resurface:["r-iy-s-er1-f-ah-s","vb"],resurge:["r-iy s-er1-jh","vb"],resurgence:["r-iy s-er1 jh-ah-n-s","nn"],resurgent:["r-ih s-er1 jh-ah-n-t","jj"],resurrect:["r-eh z-er eh1-k-t","vb vbp"],resurrection:["r-eh z-er eh1-k sh-ah-n","nn"],resuscitate:["r-ih s-ah1 s-ih t-ey-t","vb"],resuscitation:["r-ih s-ah s-ih t-ey1 sh-ah-n","nn"],retail:["r-iy1 t-ey-l","jj nn vb vbp"],retailer:["r-iy1 t-ey l-er","nn"],retain:["r-ih t-ey1-n","vb vbp"],retained:["r-ih t-ey1-n-d","vbn jj vbd"],retainer:["r-ih t-ey1 n-er","nn"],retake:["r-iy1 t-ey1-k","vb"],retaliate:["r-ih t-ae1 l-iy ey-t","vb"],retaliation:["r-iy t-ae l-iy ey1 sh-ah-n","nn"],retaliatory:["r-iy t-ae1 l-y-ah t-ao r-iy","jj"],retard:["r-ih t-aa1-r-d","vb vbp"],retardant:["r-iy t-aa1-r d-ah-n-t","nn"],retardation:["r-iy t-aa-r d-ey1 sh-ah-n","nn"],retarded:["r-ih t-aa1-r d-ih-d","jj"],retelling:["r-iy t-eh1 l-ih-ng","nn"],retention:["r-iy t-eh1-n sh-ah-n","nn"],rethink:["r-iy th-ih1-ng-k","vb nn"],reticence:["r-eh1 t-ih s-ah-n-s","nn"],reticent:["r-eh1 t-ih s-ah-n-t","jj"],retina:["r-eh1 t-ah n-ah","nn"],retinal:["r-eh1 t-ah n-ah-l","jj"],retinue:["r-eh1 t-ah n-uw","nn"],retire:["r-ih t-ay1-r","vb vbp"],retired:["r-ih t-ay1-r-d","vbn jj vbd"],retiree:["r-iy t-ay1 r-iy1","nn"],retirement:["r-iy t-ay1 er m-ah-n-t","nn"],retiring:["r-ih t-ay1 r-ih-ng","vbg jj"],retool:["r-iy-t-uw1-l","vb"],retort:["r-iy1 t-ao-r-t","nn vb vbp"],retouching:["r-iy t-ah1 ch-ih-ng","nn"],retrace:["r-iy t-r-ey1-s","vb"],retract:["r-iy t-r-ae1-k-t","vb"],retractable:["r-iy t-r-ae1-k t-ah b-ah-l","jj"],retracted:["r-iy t-r-ae1-k t-ah-d","vbn vbd jj"],retraction:["r-iy t-r-ae1-k sh-ah-n","nn"],retrain:["r-iy t-r-ey1-n","vb"],retread:["r-iy t-r-eh1-d","nn"],retreat:["r-iy t-r-iy1-t","nn vb"],retrench:["r-iy-t-r-eh1-n-ch","vb"],retrenchment:["r-iy t-r-eh1-n-ch m-ah-n-t","nn"],retrial:["r-iy t-r-ay1 ah-l","nn"],retribution:["r-eh t-r-ah b-y-uw1 sh-ah-n","nn"],retried:["r-iy t-r-ay1-d","vbn"],retrieval:["r-ih t-r-iy1 v-ah-l","nn"],retrieve:["r-ih t-r-iy1-v","vb vbp"],retriever:["r-iy t-r-iy1 v-er","nn"],retro:["r-eh1 t-r-ow","jj"],retroactive:["r-eh t-r-ow ae1-k t-ih-v","jj"],retroactively:["r-eh t-r-ow ae1-k t-ih-v l-iy","rb"],retroactivity:["r-eh t-r-ow ae-k t-ih1 v-ih t-iy","nn"],retrofit:["r-eh1 t-r-ow f-ih-t","vb"],retrofitting:["r-eh1 t-r-ow f-ih t-ih-ng","nn"],retrograde:["r-eh1 t-r-ah g-r-ey-d","jj"],retrospect:["r-eh1 t-r-ah s-p-eh-k-t","nn"],retrospective:["r-eh t-r-ah s-p-eh1-k t-ih-v","nn jj"],retrovirus:["r-eh t-r-ow v-ay1 r-ah-s","nn"],retry:["r-iy t-r-ay1","vb"],return:["r-ih t-er1-n","nn vbp jj vb"],reunification:["r-iy uw n-ah f-ah k-ey1 sh-ah-n","nn"],reunion:["r-iy uw1 n-y-ah-n","nn"],reunite:["r-iy uw n-ay1-t","vb"],reusable:["r-iy uw1 z-ah b-ah-l","jj"],reuse:["r-iy y-uw1-s","vb"],rev:["r-eh1-v","vb"],revaluation:["r-iy v-ae1-l y-uw ey1 sh-ah-n","nn"],revalue:["r-iy-v-ae1-l-y-uw","vb"],revaluing:["r-iy v-ae1-l y-uw ih-ng","nn"],revamp:["r-iy v-ae1-m-p","vb nn"],revamped:["r-iy v-ae1-m-p-t","vbn vbd jj"],reveal:["r-ih v-iy1-l","vb vbp"],revealed:["r-ih v-iy1-l-d","vbd jj vbn"],revealing:["r-ih v-iy1 l-ih-ng","vbg jj"],revel:["r-eh1 v-ah-l","vb nn vbp"],revelation:["r-eh v-ah l-ey1 sh-ah-n","nn"],revelatory:["r-ih v-eh1 l-ah t-ao r-iy","jj"],reveler:["r-eh1 v-ah l-er","nn"],revelry:["r-eh1 v-ah-l r-iy","nn"],revenge:["r-iy v-eh1-n-jh","nn"],revenue:["r-eh1 v-ah n-uw","nn"],reverberate:["r-ih v-er1 b-er ah-t","vb"],reverberation:["r-iy v-er b-er ey1 sh-ah-n","nn"],revere:["r-ih-v-ih1-r","vb"],revered:["r-ih v-ih1-r-d","vbn jj"],reverence:["r-eh1 v-er ah-n-s","nn"],reverent:["r-eh1 v-er ah-n-t","jj"],reverential:["r-eh v-er eh1-n ch-ah-l","jj"],reverie:["r-eh1 v-er iy","nn"],reversal:["r-ih v-er1 s-ah-l","nn"],reverse:["r-ih v-er1-s","vb jj nn rb vbp"],reversed:["r-ih v-er1-s-t","vbd jj vbn"],reversible:["r-ih v-er1 s-ah b-ah-l","jj"],revert:["r-ih v-er1-t","vb vbp"],review:["r-iy v-y-uw1","nn vb vbp"],reviewer:["r-iy v-y-uw1 er","nn"],revile:["r-iy-v-ay1-l","vb"],reviled:["r-iy v-ay1-l-d","vbn jj"],revise:["r-ih v-ay1-z","vb"],revised:["r-ih v-ay1-z-d","vbn vbd jj"],revision:["r-iy v-ih1 zh-ah-n","nn"],revisionist:["r-iy v-ih1 zh-ah-n ih-s-t","jj"],revisit:["r-iy v-ih1 z-ih-t","vb nn"],revitalization:["r-iy v-ay t-ah l-ah z-ey1 sh-ah-n","nn jj"],revitalize:["r-iy v-ay1 t-ah l-ay-z","vb"],revival:["r-ih v-ay1 v-ah-l","nn"],revive:["r-ih v-ay1-v","vb vbp"],reviving:["r-ih v-ay1 v-ih-ng","vbg jj"],revocable:["r-eh1 v-ah k-ah b-ah-l","jj"],revocation:["r-eh v-ah k-ey1 sh-ah-n","nn"],revoke:["r-ih v-ow1-k","vb"],revolt:["r-ih v-ow1-l-t","nn vb"],revolting:["r-iy v-ow1-l t-ih-ng","jj"],revolution:["r-eh v-ah l-uw1 sh-ah-n","nn"],revolutionary:["r-eh v-ah l-uw1 sh-ah-n eh r-iy","jj nn"],revolutionist:["r-eh v-ah l-uw1 sh-ah-n ih-s-t","nn"],revolutionize:["r-eh v-ah l-uw1 sh-ah-n ay-z","vb"],revolve:["r-iy v-aa1-l-v","vb vbp"],revolver:["r-ih v-aa1-l v-er","nn"],revolving:["r-iy v-aa1-l v-ih-ng","vbg jj"],revulsion:["r-ih v-ah1-l sh-ah-n","nn"],reward:["r-ih w-ao1-r-d","nn vb vbp"],rewarding:["r-ih w-ao1-r d-ih-ng","jj vbg"],rework:["r-iy-w-er1-k","vb"],reworking:["r-iy w-er1 k-ih-ng","nn"],rewrite:["r-iy r-ay1-t","vb nn"],rewritten:["r-iy r-ih1 t-ah-n","vbn"],rewrote:["r-iy r-ow1-t","vbd"],rhapsodic:["r-ae-p s-aa1 d-ih-k","jj"],rhapsody:["r-ae1-p s-ah d-iy","nn"],rhetoric:["r-eh1 t-er ih-k","nn"],rhetorical:["r-ih t-ao1 r-ih k-ah-l","jj"],rhetorician:["r-eh t-er ih1 sh-ah-n","nn"],rheumatic:["r-uw m-ae1 t-ih-k","jj"],rheumatism:["r-uw1 m-ah t-ih z-ah-m","nn"],rheumatoid:["r-uw1 m-ah t-oy-d","jj"],rhinestone:["r-ay1-n s-t-ow-n","nn"],rhino:["r-ay1 n-ow","nn"],rhinoceros:["r-ay n-aa1 s-er ah-s","nn"],rhododendron:["r-ow d-ah d-eh1-n d-r-ah-n","nn"],rhyme:["r-ay1-m","nn vb"],rhythm:["r-ih1 dh-ah-m","nn"],rhythmic:["r-ih1-dh m-ih-k","jj"],rhythmically:["r-ih1-dh m-ih-k l-iy","rb"],rib:["r-ih1-b","nn"],ribbed:["r-ih1-b-d","jj"],ribbing:["r-ih1 b-ih-ng","nn"],ribbon:["r-ih1 b-ah-n","nn"],rice:["r-ay1-s","nn"],rich:["r-ih1-ch","jj"],richer:["r-ih1 ch-er","jjr"],riches:["r-ih1 ch-ah-z","nn"],richest:["r-ih1 ch-ah-s-t","jjs"],richly:["r-ih1-ch l-iy","rb"],richness:["r-ih1-ch n-ah-s","nn"],rickety:["r-ih1 k-ah t-iy","jj"],ricochet:["r-ih1-k-ah-sh-ey","vb"],rid:["r-ih1-d","jj vbn vbd rb vb"],riddance:["r-ih1 d-ah-n-s","nn"],ridden:["r-ih1 d-ah-n","vbn"],riddle:["r-ih1 d-ah-l","nn vb"],riddled:["r-ih1 d-ah-l-d","vbn jj"],ride:["r-ay1-d","vb nn vbp"],rider:["r-ay1 d-er","nn"],ridership:["r-ay1 d-er sh-ih-p","nn"],ridge:["r-ih1-jh","nn"],ridicule:["r-ih1 d-ah k-y-uw-l","nn vb"],ridiculous:["r-ih d-ih1 k-y-ah l-ah-s","jj"],ridiculously:["r-ah d-ih1 k-y-ah l-ah-s l-iy","rb"],riding:["r-ay1 d-ih-ng","vbg jj nn"],rife:["r-ay1-f","jj"],riff:["r-ih1-f","nn"],riffle:["r-ih1 f-ah-l","vb"],rifle:["r-ay1 f-ah-l","nn"],rifled:["r-ay1 f-ah-l-d","jj"],rifleman:["r-ay1 f-ah-l m-ah-n","nn"],rifling:["r-ay1 f-l-ih-ng","nn"],rift:["r-ih1-f-t","nn"],rig:["r-ih1-g","nn vbp vb"],rigged:["r-ih1-g-d","vbn vbd jj"],rigging:["r-ih1 g-ih-ng","nn"],right:["r-ay1-t","nn rb vb in jj"],righteous:["r-ay1 ch-ah-s","jj"],righteousness:["r-ay1 ch-ah-s n-ah-s","nn"],rightful:["r-ay1-t f-ah-l","jj"],rightfully:["r-ay1-t f-ah l-iy","rb"],rightist:["r-ay1 t-ih-s-t","jj"],rightly:["r-ay1-t l-iy","rb"],rightness:["r-ay1-t n-ah-s","nn"],rightward:["r-ay1-t w-er-d","jj"],rigid:["r-ih1 jh-ah-d","jj"],rigidity:["r-ih jh-ih1 d-ah t-iy","nn"],rigidly:["r-ih1 jh-ih-d l-iy","rb"],rigor:["r-ih1 g-er","nn"],rigorous:["r-ih1 g-er ah-s","jj"],rigorously:["r-ih1 g-er ah-s l-iy","rb"],rile:["r-ay1-l","vbp vb"],rill:["r-ih1-l","nn"],rim:["r-ih1-m","nn"],rimmed:["r-ih1-m-d","jj vbd"],rind:["r-ay1-n-d","nn"],ring:["r-ih1-ng","nn vb vbp"],ringed:["r-ih1-ng-d","jj vbn"],ringer:["r-ih1 ng-er","nn"],ringleader:["r-ih1-ng l-iy d-er","nn"],ringside:["r-ih1-ng s-ay-d","nn"],rink:["r-ih1-ng-k","nn"],rinse:["r-ih1-n-s","nn vb"],rinsing:["r-ih1-n s-ih-ng","nn vbg"],riot:["r-ay1 ah-t","nn vb"],rioter:["r-ay1 ah t-er","nn"],rioting:["r-ay1 ah t-ih-ng","nn"],riotous:["r-ay1 ah t-ah-s","jj"],rip:["r-ih1-p","vb nn"],ripe:["r-ay1-p","jj"],ripen:["r-ay1 p-ah-n","vb vbp"],ripening:["r-ay1 p-ah n-ih-ng","vbg jj"],ripple:["r-ih1 p-ah-l","nn vb vbp jj"],rise:["r-ay1-z","vbp vb"],risen:["r-ih1 z-ah-n","n vbn"],rising:["r-ay1 z-ih-ng","vbg jj"],risk:["r-ih1-s-k","nn vbp vb"],riskier:["r-ih1-s-k iy er","jjr rbr nn"],riskiest:["r-ih1-s k-iy ah-s-t","jjs"],riskiness:["r-ih1-s-k iy n-ah-s","nn"],risky:["r-ih1-s k-iy","jj"],rite:["r-ay1-t","nn"],ritual:["r-ih1 ch-uw ah-l","nn"],ritzy:["r-ih1-t s-iy","jj"],rival:["r-ay1 v-ah-l","jj nn vb vbp"],rivalry:["r-ay1 v-ah-l r-iy","nn"],riven:["r-ih1 v-ah-n","vbn"],river:["r-ih1 v-er","nn"],riverbank:["r-ih1 v-er b-ae-ng-k","nn"],riverboat:["r-ih1 v-er b-ow-t","nn"],riverfront:["r-ih1 v-er f-r-ah-n-t","nn"],riverside:["r-ih1 v-er s-ay-d","nn"],rivet:["r-ih1-v-ah-t","vb"],riveting:["r-ih1 v-ah t-ih-ng","vbg jj"],roach:["r-ow1-ch","nn"],road:["r-ow1-d","nn"],roadblock:["r-ow1-d b-l-aa-k","nn"],roadrunner:["r-ow1 d-r-ah n-er","nn"],roadside:["r-ow1-d s-ay-d","nn jj"],roadster:["r-ow1-d s-t-er","nn"],roadway:["r-ow1-d w-ey","nn"],roam:["r-ow1-m","vb vbp"],roar:["r-ao1-r","nn vb"],roaring:["r-ao1 r-ih-ng","vbg jj nn"],roast:["r-ow1-s-t","nn vb vbn"],roasted:["r-ow1 s-t-ah-d","vbn jj vbd"],roaster:["r-ow1 s-t-er","nn"],rob:["r-aa1-b","vb vbp"],robber:["r-aa1 b-er","nn"],robbery:["r-aa1 b-er iy","nn"],robe:["r-ow1-b","nn"],robin:["r-aa1 b-ah-n","nn"],robot:["r-ow1 b-aa-t","nn"],robotic:["r-ow b-aa1 t-ih-k","jj"],robust:["r-ow b-ah1-s-t","jj"],robustly:["r-ow b-ah1-s-t l-iy","rb"],robustness:["r-ow b-ah1-s-t n-ah-s","nn"],rock:["r-aa1-k","nn jj vb vbp"],rocker:["r-aa1 k-er","nn"],rocket:["r-aa1 k-ah-t","nn vb"],rocking:["r-aa1 k-ih-ng","nn jj vbg"],rocky:["r-aa1 k-iy","jj"],rococo:["r-ah k-ow1 k-ow","jj nn"],rod:["r-aa1-d","nn"],rodding:["r-aa1 d-ih-ng","nn"],rode:["r-ow1-d","vbd"],rodent:["r-ow1 d-ah-n-t","nn"],rodeo:["r-ow1 d-iy ow","nn"],roemer:["r-ow1 m-er","nn"],rogue:["r-ow1-g","jj"],roil:["r-oy1-l","vb"],roiling:["r-oy1 l-ih-ng","vbg jj"],role:["r-ow1-l","nn"],roleplaying:["r-ow1-l p-l-ey ih-ng","nn"],roll:["r-ow1-l","nn vb vbp"],rollback:["r-ow1-l b-ae-k","nn"],rolled:["r-ow1-l-d","vbd vbn jj"],roller:["r-ow1 l-er","nn"],rollercoaster:["r-ow1 l-er k-ow s-t-er","nn jj"],rollicking:["r-aa1 l-ih k-ih-ng","jj"],rolling:["r-ow1 l-ih-ng","vbg jj nn"],rollout:["r-ow1-l aw-t","nn"],rollover:["r-ow1 l-ow v-er","nn"],romance:["r-ow m-ae1-n-s","nn vb"],romantic:["r-ow m-ae1-n t-ih-k","jj nn"],romantically:["r-ow m-ae1-n t-ih k-ah l-iy","rb"],romanticism:["r-ow m-ae1-n t-ah s-ih z-ah-m","nn"],romanticize:["r-ow m-ae1-n t-ah s-ay-z","vb"],romanticizing:["r-ow m-ae1-n t-ah s-ay z-ih-ng","nn"],romp:["r-aa1-m-p","nn vb vbp"],roof:["r-uw1-f","nn vb"],roofer:["r-uw1 f-er","nn"],roofing:["r-uw1 f-ih-ng","nn"],rooftop:["r-uw1-f t-aa-p","nn"],rooftree:["r-uw1-f t-r-iy","nn"],rook:["r-uh1-k","nn"],rookie:["r-uh1 k-iy","nn"],room:["r-uw1-m","nn vb"],roomful:["r-uw1-m f-uh-l","nn"],roomier:["r-uw1 m-iy er","jjr"],roominess:["r-uw1 m-iy n-ah-s","nn"],roommate:["r-uw1-m ey-t","nn"],roomy:["r-uw1 m-iy","jj"],roost:["r-uw1-s-t","vb nn"],rooster:["r-uw1 s-t-er","nn"],root:["r-uw1-t","nn vbp vb"],rooted:["r-uw1 t-ah-d","vbn jj"],rootless:["r-uw1-t l-ah-s","jj"],rope:["r-ow1-p","nn vb"],roper:["r-ow1 p-er","nn"],rosary:["r-ow1 z-er iy","nn"],rose:["r-ow1-z","vbd jj nn"],rosebush:["r-ow1-z b-uh-sh","nn"],rosette:["r-ow1 z-eh1-t","nn"],rosier:["r-ow1 z-iy er","jjr rbr"],roster:["r-aa1 s-t-er","nn"],rostrum:["r-aa1-s t-r-ah-m","nn"],rosy:["r-ow1 z-iy","jj"],rot:["r-aa1-t","nn vb"],rotary:["r-ow1 t-er iy","jj"],rotate:["r-ow1 t-ey-t","vb"],rotation:["r-ow t-ey1 sh-ah-n","nn"],rotational:["r-ow t-ey1 sh-ah n-ah-l","jj"],rote:["r-ow1-t","nn jj"],rotor:["r-ow1 t-er","nn"],rotten:["r-aa1 t-ah-n","jj"],rotund:["r-ow t-ah1-n-d","jj"],rotunda:["r-ow t-ah1-n d-ah","nn"],rouge:["r-uw1-zh","nn"],rough:["r-ah1-f","jj rb nn vb"],rougher:["r-ah1 f-er","jjr"],roughest:["r-ah1 f-ah-s-t","jjs"],roughly:["r-ah1-f l-iy","rb"],roughneck:["r-ah1-f n-eh-k","nn"],roughshod:["r-ah1-f sh-aa1-d","jj"],roulette:["r-uw l-eh1-t","nn"],round:["r-aw1-n-d","nn in jj vbp rb vb"],roundabout:["r-aw1-n-d ah b-aw-t","jj"],rounded:["r-aw1-n d-ah-d","vbn jj vbd"],rounder:["r-aw1-n d-er","jjr"],roundhead:["r-aw1-n-d hh-eh-d","nn jj"],roundhouse:["r-aw1-n-d hh-aw-s","nn"],roundly:["r-aw1-n-d l-iy","rb"],roundtable:["r-aw1-n-d t-ey b-ah-l","jj"],roundtrip:["r-aw-n-d t-r-ih1-p","nn"],roundup:["r-aw1-n-d ah-p","nn"],rouse:["r-aw1-s","vb"],rousing:["r-aw1 z-ih-ng","jj nn"],rout:["r-aw1-t","nn vb"],route:["r-uw1-t","nn vbp in rb vb"],routine:["r-uw t-iy1-n","jj nn"],routinely:["r-uw t-iy1-n l-iy","rb"],rove:["r-ow1-v","vb"],row:["r-ow1","nn vbp vb"],rowdiness:["r-aw1 d-iy n-ah-s","nn"],rowdy:["r-aw1 d-iy","jj nn"],rowing:["r-ow1 ih-ng","nn"],royal:["r-oy1 ah-l","jj nn"],royalty:["r-oy1 ah-l t-iy","nn"],rub:["r-ah1-b","nn vb vbp"],rubber:["r-ah1 b-er","nn"],rubberize:["r-ah1-b-er-ay-z","vb"],rubbery:["r-ah1 b-er iy","jj"],rubbish:["r-ah1 b-ih-sh","nn jj"],rubble:["r-ah1 b-ah-l","nn"],ruble:["r-uw1 b-ah-l","nn"],rubout:["r-ah1 b-aw-t","nn"],rubric:["r-uw1 b-r-ih-k","nn"],ruby:["r-uw1 b-iy","nn"],ruckus:["r-ah1 k-ah-s","nn"],rudder:["r-ah1 d-er","nn"],rudderless:["r-ah1 d-er l-ah-s","jj"],ruddy:["r-ah1 d-iy","jj rb"],rude:["r-uw1-d","jj"],rudely:["r-uw1-d l-iy","rb"],rudeness:["r-uw1-d n-ah-s","nn"],rudiment:["r-uw1 d-ih m-ah-n-t","nn"],rudimentary:["r-uw d-ah m-eh1-n t-er iy","jj"],rue:["r-uw1","nn"],rueful:["r-uw1 f-ah-l","jj"],ruefully:["r-uw1 f-ah l-iy","rb"],ruffle:["r-ah1 f-ah-l","vb"],ruffled:["r-ah1 f-ah-l-d","vbn jj vbd"],rug:["r-ah1-g","nn"],rugged:["r-ah1 g-ah-d","jj"],ruggedly:["r-ah1 g-ah-d l-iy","rb"],ruin:["r-uw1 ah-n","nn vbp vb"],ruined:["r-uw1 ah-n-d","vbn jj vbd"],ruinous:["r-uw1 ah n-ah-s","jj"],rule:["r-uw1-l","nn vbp vb"],ruler:["r-uw1 l-er","nn"],ruling:["r-uw1 l-ih-ng","nn vbg jj"],rum:["r-ah1-m","nn"],rumble:["r-ah1-m b-ah-l","nn vb vbp"],rumen:["r-uw1 m-ah-n","nn"],ruminate:["r-uw1-m-ih-n-ey-t","vb"],rumination:["r-uw m-ih n-ey1 sh-ah-n","nn"],rummage:["r-ah1 m-ih-jh","vb"],rummaging:["r-ah1 m-ih jh-ih-ng","jj"],rummy:["r-ah1 m-iy","nn"],rumor:["r-uw1 m-er","nn vb"],rumored:["r-uw1 m-er-d","vbn vbd jj"],rump:["r-ah1-m-p","nn jj"],rumpled:["r-ah1-m p-ah-l-d","jj"],run:["r-ah1-n","vb vbd vbn vbp nn"],runabout:["r-ah1-n ah b-aw-t","nn"],runaway:["r-ah1-n ah w-ey","jj vbn nn"],rundown:["r-ah1-n d-aw-n","nn jj"],rung:["r-ah1-ng","vbn nn"],runner:["r-ah1 n-er","nn"],running:["r-ah1 n-ih-ng","vbg jj rb"],runoff:["r-ah1 n-ao-f","nn"],runup:["r-ah1 n-ah-p","nn"],runway:["r-ah1-n w-ey","nn"],rupee:["r-uw p-iy1","nn"],rupiah:["r-uw p-ay1 ah","nn"],rupture:["r-ah1-p ch-er","nn vb"],rural:["r-uh1 r-ah-l","jj"],ruse:["r-uw1-z","nn"],rush:["r-ah1-sh","nn vb vbp"],rushed:["r-ah1-sh-t","vbd vbn jj"],russe:["r-ah1-s","nn"],rust:["r-ah1-s-t","nn vb"],rusted:["r-ah1 s-t-ah-d","jj"],rustic:["r-ah1 s-t-ih-k","jj"],rusting:["r-ah1 s-t-ih-ng","jj"],rustle:["r-ah1-s-ah-l","vb"],rustler:["r-ah1-s l-er","nn"],rusty:["r-ah1 s-t-iy","jj"],rut:["r-ah1-t","nn"],ruthless:["r-uw1-th l-ah-s","jj"],ruthlessly:["r-uw1-th l-ah-s l-iy","rb"],ruthlessness:["r-uw1-th l-ah-s n-ah-s","nn"],rutted:["r-ah1 t-ih-d","jj"],rye:["r-ay1","nn"],sabbatical:["s-ah b-ae1 t-ih k-ah-l","nn jj"],saber:["s-ey1 b-er","nn"],sable:["s-ey1 b-ah-l","nn"],sabotage:["s-ae1 b-ah t-aa-zh","nn vb"],sabre:["s-ey1 b-er","nn"],sac:["s-ae1-k","nn"],saccharin:["s-ae1 k-er ah-n","nn"],sack:["s-ae1-k","nn vb"],sacrament:["s-ae1 k-r-ah m-ah-n-t","nn"],sacred:["s-ey1 k-r-ah-d","jj"],sacrifice:["s-ae1 k-r-ah f-ay-s","nn vb"],sacrificial:["s-ae k-r-ah f-ih1 sh-ah-l","jj"],sacrilege:["s-ae1 k-r-ah l-ah-jh","nn"],sacrilegious:["s-ae k-r-ah l-eh1 jh-ih-s","jj"],sacrosanct:["s-ae1 k-r-ow s-ae-ng-k-t","jj"],sad:["s-ae1-d","jj"],sadden:["s-ae1-d-ah-n","vb"],saddened:["s-ae1 d-ah-n-d","jj vbn"],sadder:["s-ae1 d-er","jjr"],saddle:["s-ae1 d-ah-l","nn vb"],saddlebag:["s-ae1 d-ah-l b-ae-g","nn"],saddled:["s-ae1 d-ah-l-d","vbn vbd jj"],sadism:["s-ey1 d-ih z-ah-m","nn"],sadist:["s-ey1 d-ah-s-t","nn"],sadistic:["s-ah d-ih1 s-t-ih-k","jj"],sadly:["s-ae1-d l-iy","rb"],sadness:["s-ae1-d n-ah-s","nn"],safari:["s-ah f-aa1 r-iy","nn"],safe:["s-ey1-f","jj nn"],safeguard:["s-ey1-f g-aa-r-d","vb nn"],safekeeping:["s-ey1-f k-iy1 p-ih-ng","nn"],safely:["s-ey1-f l-iy","rb"],safer:["s-ey1 f-er","jjr"],safest:["s-ey1 f-ah-s-t","jjs"],safety:["s-ey1-f t-iy","nn vb"],sag:["s-ae1-g","vb nn vbp"],saga:["s-aa1 g-ah","nn"],sage:["s-ey1-jh","nn jj"],sagebrush:["s-ey1-jh b-r-ah-sh","nn"],sagging:["s-ae1 g-ih-ng","vbg jj nn"],sago:["s-ey1 g-ow","nn"],said:["s-eh1-d","vbd vbn"],sail:["s-ey1-l","vb vbp nn"],sailboat:["s-ey1-l b-ow-t","nn"],sailor:["s-ey1 l-er","nn"],saint:["s-ey1-n-t","nn"],sainthood:["s-ey1-n-t hh-uh-d","nn"],saintly:["s-ey1-n-t l-iy","jj"],sake:["s-ey1-k","nn"],salable:["s-ey1 l-ah b-ah-l","jj"],salacious:["s-ah l-ey1 sh-ah-s","jj"],salad:["s-ae1 l-ah-d","nn"],salamander:["s-ae l-ah m-ae1-n d-er","nn"],salami:["s-ah l-aa1 m-iy","nn"],salaried:["s-ae1 l-er iy-d","jj"],salary:["s-ae1 l-er iy","nn"],sale:["s-ey1-l","nn"],salesman:["s-ey1-l-z m-ah-n","nn"],salesmanship:["s-ey1-l-z m-ah-n sh-ih-p","nn"],salesperson:["s-ey1-l-z p-er s-ah-n","nn"],salient:["s-ey1 l-iy ah-n-t","jj"],saline:["s-ah l-iy1-n","nn jj"],salinity:["s-ah l-ih1 n-ah t-iy","nn"],saliva:["s-ah l-ay1 v-ah","nn"],sally:["s-ae1 l-iy","vb"],salmon:["s-ae1 m-ah-n","nn"],salmonella:["s-ae-l m-ah n-eh1 l-ah","nn"],salon:["s-ah l-aa1-n","nn"],saloon:["s-ah l-uw1-n","nn"],salsa:["s-ao1-l s-ah","nn"],salt:["s-ao1-l-t","nn jj vb"],salted:["s-ao1-l t-ah-d","vbn vbd jj"],saltier:["s-ao1-l t-iy er","jjr"],saltwater:["s-ao-l-t w-aa1 t-er","nn"],salty:["s-ao1-l t-iy","jj"],salutary:["s-ae1 l-y-ah t-eh r-iy","jj"],salute:["s-ah l-uw1-t","nn vb"],salvage:["s-ae1-l v-ah-jh","vb nn"],salvation:["s-ae-l v-ey1 sh-ah-n","nn"],salve:["s-aa1-v","nn vb"],salvo:["s-ae1-l v-ow","nn"],sambuca:["s-ae-m b-y-uw1 k-ah","nn"],same:["s-ey1-m","jj"],sameness:["s-ey1-m n-ah-s","nn"],sample:["s-ae1-m p-ah-l","nn jj vb vbp"],sampler:["s-ae1-m p-l-er","nn"],sampling:["s-ae1-m p-l-ih-ng","nn vbg"],samurai:["s-ae1 m-uh r-ay","nn"],sanctimonious:["s-ae-ng-k t-ah m-ow1 n-iy ah-s","jj"],sanction:["s-ae1-ng-k sh-ah-n","nn vbp vb"],sanctity:["s-ae1-ng-k t-ih t-iy","nn"],sanctuary:["s-ae1-ng-k ch-uw eh r-iy","nn"],sanctum:["s-ae1-ng-k t-ah-m","nn"],sand:["s-ae1-n-d","nn vb"],sandal:["s-ae1-n d-ah-l","nn"],sandbox:["s-ae1-n-d b-aa-k-s","nn"],sander:["s-ae1-n d-er","nn"],sandpaper:["s-ae1-n-d p-ey p-er","nn"],sandwich:["s-ae1-n-d w-ih-ch","nn vb"],sandy:["s-ae1-n d-iy","jj"],sane:["s-ey1-n","jj"],saner:["s-ey1 n-er","jjr"],sang:["s-ae1-ng","vbd"],sanguine:["s-ae1-ng g-w-ih-n","jj nn"],sanitary:["s-ae1 n-ih t-eh r-iy","jj"],sanitation:["s-ae n-ah t-ey1 sh-ah-n","nn"],sanitize:["s-ae1-n-ih-t-ay-z","vb"],sanitizing:["s-ae1 n-ah t-ay z-ih-ng","nn"],sanity:["s-ae1 n-ah t-iy","nn"],sank:["s-ae1-ng-k","vbd"],sap:["s-ae1-p","vb nn"],sapiens:["s-ey1 p-iy ah-n-z","jj"],sarcasm:["s-aa1-r k-ae z-ah-m","nn"],sarcastic:["s-aa-r k-ae1 s-t-ih-k","jj"],sarcastically:["s-aa-r k-ae1 s-t-ih-k l-iy","rb"],sarcoma:["s-aa-r k-ow1 m-er","nn"],sardine:["s-aa-r d-iy1-n","nn"],sardonic:["s-aa-r d-aa1 n-ih-k","jj"],sardonically:["s-aa-r d-aa1 n-ih k-ah l-iy","rb"],sari:["s-aa1 r-iy","nn"],sash:["s-ae1-sh","nn"],sassafras:["s-ae1 s-ah f-r-ae-s","nn"],sassy:["s-ae1 s-iy","jj"],sat:["s-ae1-t","vbd vbn"],satellite:["s-ae1 t-ah l-ay-t","nn jj"],satin:["s-ae1 t-ah-n","nn"],satire:["s-ae1 t-ay er","nn"],satiric:["s-ah t-ih1 r-ih-k","jj"],satirical:["s-ah t-ih1 r-ah k-ah-l","jj"],satirist:["s-ae1 t-er ah-s-t","nn"],satirize:["s-ae1-t-er-ay-z","vb"],satisfaction:["s-ae t-ah-s f-ae1-k sh-ah-n","nn"],satisfactorily:["s-ae t-ih-s f-ae1-k t-r-ah l-iy","rb"],satisfactory:["s-ae t-ah-s f-ae1-k t-r-iy","jj"],satisfied:["s-ae1 t-ah-s f-ay-d","vbn vbd jj"],satisfy:["s-ae1 t-ah-s f-ay","vb vbp"],satisfying:["s-ae1 t-ih-s f-ay ih-ng","jj vbg"],saturate:["s-ae1 ch-er ey-t","vb"],saturated:["s-ae1 ch-er ey t-ah-d","vbn jj vbd"],saturation:["s-ae ch-er ey1 sh-ah-n","nn"],sauce:["s-ao1-s","nn"],saucepan:["s-ao1-s p-ae-n","nn"],saucer:["s-ao1 s-er","nn"],saucy:["s-ao1 s-iy","jj"],sauerkraut:["s-aw1 er k-r-aw-t","nn"],sauna:["s-ao1 n-ah","nn"],saunter:["s-ao1-n t-er","nn"],sausage:["s-ao1 s-ah-jh","nn"],saute:["s-ao t-ey1","vb"],savage:["s-ae1 v-ih-jh","jj nn vb"],savagely:["s-ae1 v-ih-jh l-iy","rb"],savagery:["s-ae1 v-ih-jh eh r-iy","nn"],save:["s-ey1-v","vb in vbp"],saver:["s-ey1 v-er","nn"],saving:["s-ey1 v-ih-ng","vbg jj nn"],savior:["s-ey1 v-y-er","nn"],savor:["s-ey1 v-er","vb"],savory:["s-ey1 v-er iy","jj"],savviest:["s-ae1 v-iy ih-s-t","jjs"],savvy:["s-ae1 v-iy","jj vb nn"],saw:["s-ao1","vbd nn"],sawdust:["s-ao1 d-ah-s-t","nn jj"],sawing:["s-ao1 ih-ng","nn"],sawmill:["s-ao1 m-ih-l","nn"],sax:["s-ae1-k-s","nn"],saxophone:["s-ae1-k s-ah f-ow-n","nn"],saxophonist:["s-ae1-k s-ah f-ow n-ih-s-t","nn"],say:["s-ey1","vbp nn vb uh"],scab:["s-k-ae1-b","nn"],scabbard:["s-k-ae1 b-er-d","nn"],scad:["s-k-ae1-d","nn"],scaffold:["s-k-ae1 f-ah-l-d","nn"],scaffolding:["s-k-ae1 f-ah-l d-ih-ng","nn"],scalar:["s-k-ey1 l-er","jj"],scald:["s-k-ao1-l-d","vb"],scale:["s-k-ey1-l","nn vb"],scallop:["s-k-ae1 l-ah-p","nn"],scalloped:["s-k-aa1 l-ah-p-t","jj"],scalp:["s-k-ae1-l-p","nn"],scalpel:["s-k-ae1-l p-ah-l","nn"],scam:["s-k-ae1-m","nn"],scammer:["s-k-ae1 m-er","nn"],scamper:["s-k-ae1-m p-er","vb vbp"],scan:["s-k-ae1-n","nn vbp vb"],scandal:["s-k-ae1-n d-ah-l","nn"],scandalize:["s-k-ae1-n-d-ah-l-ay-z","vb"],scandalous:["s-k-ae1-n d-ah l-ah-s","jj"],scanner:["s-k-ae1 n-er","nn"],scant:["s-k-ae1-n-t","jj"],scanty:["s-k-ae1-n t-iy","jj"],scapegoat:["s-k-ey1-p g-ow-t","nn"],scapegoating:["s-k-ey1-p g-ow t-ih-ng","nn"],scar:["s-k-aa1-r","nn"],scarce:["s-k-eh1-r-s","jj"],scarcely:["s-k-eh1-r-s l-iy","rb"],scarcer:["s-k-eh1-r s-er","jjr nn"],scarcity:["s-k-eh1-r s-ih t-iy","nn"],scare:["s-k-eh1-r","vb nn vbp"],scared:["s-k-eh1-r-d","vbn jj rb vbd"],scarf:["s-k-aa1-r-f","nn"],scarlet:["s-k-aa1-r l-ah-t","jj"],scarred:["s-k-aa1-r-d","jj vbn"],scarves:["s-k-aa1-r-v-z","nn"],scary:["s-k-eh1 r-iy","jj"],scathing:["s-k-ey1 dh-ih-ng","jj"],scatter:["s-k-ae1 t-er","nn vb"],scattered:["s-k-ae1 t-er-d","vbn vbd jj"],scattershot:["s-k-ae1 t-er sh-aa-t","jj"],scavenge:["s-k-ae1-v-ah-n-jh","vb"],scavenger:["s-k-ae1 v-ah-n jh-er","nn"],scenario:["s-ih n-eh1 r-iy ow","nn"],scene:["s-iy1-n","nn"],scenery:["s-iy1 n-er iy","nn"],scenic:["s-iy1 n-ih-k","jj"],scent:["s-eh1-n-t","nn vb"],scented:["s-eh1-n t-ih-d","jj vbn"],schedule:["s-k-eh1 jh-uh-l","nn vb vbp"],scheduled:["s-k-eh1 jh-uh-l-d","vbn vbd jj"],schemata:["s-k-ih m-ae1 t-ah","nn"],schematic:["s-k-ih m-ae1 t-ih-k","jj"],scheme:["s-k-iy1-m","nn vb"],scheming:["s-k-iy1 m-ih-ng","jj vbg"],schilling:["sh-ih1 l-ih-ng","nn"],schism:["s-k-ih1 z-ah-m","nn"],schizophrenia:["s-k-ih-t s-ah f-r-iy1 n-iy ah","nn"],schizophrenic:["sh-ih z-ah f-r-eh1 n-ih-k","jj nn"],schmooze:["sh-m-uw1-z","vb"],schnapps:["sh-n-ae1-p-s","nn"],schnook:["sh-n-uh1-k","nn"],scholar:["s-k-aa1 l-er","nn"],scholarly:["s-k-aa1 l-er l-iy","jj"],scholarship:["s-k-aa1 l-er sh-ih-p","nn"],scholastic:["s-k-ah l-ae1 s-t-ih-k","jj nn"],school:["s-k-uw1-l","nn vb"],schoolbook:["s-k-uw1-l b-uh-k","nn"],schoolboy:["s-k-uw1-l b-oy","nn"],schoolchild:["s-k-uw1-l ch-ih-l-d","nn"],schooler:["s-k-uw1 l-er","nn"],schoolgirl:["s-k-uw1-l g-er-l","nn"],schoolhouse:["s-k-uw1-l hh-aw-s","nn"],schoolmaster:["s-k-uw1-l m-ae s-t-er","nn"],schoolmate:["s-k-uw1-l m-ey-t","nn"],schoolroom:["s-k-uw1-l r-uw-m","nn"],schoolteacher:["s-k-uw1-l t-iy ch-er","nn"],schoolwork:["s-k-uw1-l w-er-k","nn"],schooner:["s-k-uw1 n-er","nn"],science:["s-ay1 ah-n-s","nn jj"],scientific:["s-ay ah-n t-ih1 f-ih-k","jj"],scientifically:["s-ay ah-n t-ih1 f-ih k-ah l-iy","rb"],scientist:["s-ay1 ah-n t-ih-s-t","nn"],scion:["s-ay1 ah-n","nn"],sclerosis:["s-k-l-er ow1 s-ah-s","nn"],scoff:["s-k-ao1-f","vb nn vbp"],scofflaw:["s-k-aa1 f-l-ao","nn"],scold:["s-k-ow1-l-d","vb"],scoop:["s-k-uw1-p","nn vb"],scooter:["s-k-uw1 t-er","nn"],scope:["s-k-ow1-p","nn"],scorch:["s-k-ao1-r-ch","vb"],scorched:["s-k-ao1-r-ch-t","jj vbd"],score:["s-k-ao1-r","nn vb vbp"],scoreboard:["s-k-ao1-r b-ao-r-d","nn"],scorecard:["s-k-ao1-r k-aa-r-d","nn"],scored:["s-k-ao1-r-d","vbd jj vbn"],scorekeeper:["s-k-ao1-r k-iy p-er","nn"],scoreless:["s-k-ao1-r l-ah-s","jj"],scorer:["s-k-ao1 r-er","nn"],scorn:["s-k-ao1-r-n","nn vb vbp"],scornful:["s-k-ao1-r-n f-ah-l","jj"],scotch:["s-k-aa1-ch","nn vb"],scoundrel:["s-k-aw1-n d-r-ah-l","nn"],scour:["s-k-aw1 er","vbp vb"],scoured:["s-k-aw1 er-d","vbn jj vbd"],scourge:["s-k-er1-jh","nn"],scout:["s-k-aw1-t","nn vb"],scowl:["s-k-aw1-l","vb"],scraggly:["s-k-r-ae1-g l-iy","jj"],scramble:["s-k-r-ae1-m b-ah-l","nn vbp vb"],scrambled:["s-k-r-ae1-m b-ah-l-d","vbd jj vbn"],scrap:["s-k-r-ae1-p","nn jj vb"],scrapbook:["s-k-r-ae1-p b-uh-k","nn"],scrape:["s-k-r-ey1-p","nn vb vbp"],scrappy:["s-k-r-ae1 p-iy","jj"],scratch:["s-k-r-ae1-ch","nn vb vbp"],scratchy:["s-k-r-ae1 ch-iy","jj"],scrawl:["s-k-r-ao1-l","nn vb"],scrawled:["s-k-r-ao1-l-d","vbd jj vbn"],scrawny:["s-k-r-ao1 n-iy","jj"],scream:["s-k-r-iy1-m","vb vbp nn"],screaming:["s-k-r-iy1 m-ih-ng","vbg jj nn"],screech:["s-k-r-iy1-ch","nn vb"],screeching:["s-k-r-iy1 ch-ih-ng","vbg jj"],screed:["s-k-r-iy1-d","nn"],screen:["s-k-r-iy1-n","nn vb vbp"],screening:["s-k-r-iy1 n-ih-ng","nn vbg"],screenplay:["s-k-r-iy1-n p-l-ey","nn"],screenwriter:["s-k-r-iy1-n r-ay t-er","nn"],screw:["s-k-r-uw1","nn vb"],screwball:["s-k-r-uw1 b-ao-l","jj nn"],screwdriver:["s-k-r-uw1 d-r-ay v-er","nn"],scribble:["s-k-r-ih1 b-ah-l","vb"],scribbler:["s-k-r-ih1 b-l-er","nn"],scribe:["s-k-r-ay1-b","nn"],scrimmage:["s-k-r-ih1 m-ih-jh","nn"],scrimp:["s-k-r-ih1-m-p","vb"],script:["s-k-r-ih1-p-t","nn"],scriptural:["s-k-r-ih1-p ch-er ah-l","jj"],scripture:["s-k-r-ih1-p ch-er","nn"],scriptwriter:["s-k-r-ih1-p-t r-ay t-er","nn"],scrivener:["s-k-r-ih1-v n-er","nn"],scroll:["s-k-r-ow1-l","nn"],scrounge:["s-k-r-aw1-n-jh","vbp vb"],scrub:["s-k-r-ah1-b","vb jj nn"],scrubber:["s-k-r-ah1 b-er","nn"],scrubbing:["s-k-r-ah1 b-ih-ng","nn vbg"],scrupulous:["s-k-r-uw1 p-y-ah l-ah-s","jj"],scrupulously:["s-k-r-uw1 p-y-ah l-ah-s l-iy","rb"],scrutinize:["s-k-r-uw1 t-ah n-ay-z","vb vbp"],scrutiny:["s-k-r-uw1 t-ah n-iy","nn"],scuba:["s-k-uw1 b-ah","nn"],scuff:["s-k-ah1-f","vb"],scuffle:["s-k-ah1 f-ah-l","nn"],sculpt:["s-k-ah1-l-p-t","vb"],sculptor:["s-k-ah1-l-p t-er","nn"],sculptural:["s-k-ah1-l-p ch-er ah-l","jj"],sculpture:["s-k-ah1-l-p ch-er","nn vb"],sculptured:["s-k-ah1-l-p ch-er-d","vbn jj"],scurried:["s-k-er1 iy-d","vbd"],scurrilous:["s-k-er1 ah l-ah-s","jj"],scurry:["s-k-er1 iy","nn vbp vb"],scuttle:["s-k-ah1 t-ah-l","vb"],scuttled:["s-k-ah1 t-ah-l-d","vbd vbn jj"],sea:["s-iy1","nn vb vbp"],seaboard:["s-iy1 b-ao-r-d","nn"],seaborne:["s-iy1 b-ao-r-n","jj"],seacoast:["s-iy1 k-ow-s-t","nn"],seafarer:["s-iy1 f-eh r-er","nn"],seafood:["s-iy1 f-uw-d","nn"],seal:["s-iy1-l","nn vb vbp"],sealant:["s-iy1 l-ah-n-t","nn"],sealed:["s-iy1-l-d","vbn vbd jj"],sealift:["s-iy1 l-ih-f-t","nn"],seam:["s-iy1-m","nn"],seaman:["s-iy1 m-ah-n","nn"],seamless:["s-iy1-m l-ah-s","jj"],seamlessly:["s-iy1-m l-ah-s l-iy","rb"],seamstress:["s-iy1-m s-t-r-ih-s","nn"],seamy:["s-iy1 m-iy","jj"],seaport:["s-iy1 p-ao-r-t","nn"],sear:["s-ih1-r","vb"],search:["s-er1-ch","nn vb vbp"],searcher:["s-er1 ch-er","nn"],searing:["s-ih1 r-ih-ng","vbg jj"],seashore:["s-iy1 sh-ao-r","nn"],seaside:["s-iy1 s-ay-d","jj nn"],season:["s-iy1 z-ah-n","nn vb"],seasonal:["s-iy1 z-ah n-ah-l","jj"],seasonality:["s-iy1 z-ah n-ae l-ih t-iy","nn"],seasonally:["s-iy1 z-ah-n ah l-iy","rb"],seasoned:["s-iy1 z-ah-n-d","jj vbn"],seasoning:["s-iy1 z-ah-n ih-ng","nn"],seat:["s-iy1-t","nn vb vbp"],seated:["s-iy1 t-ah-d","vbn vbd jj"],seating:["s-iy1 t-ih-ng","nn vbg"],seawater:["s-iy1 w-aa t-er","nn"],seaweed:["s-iy1 w-iy-d","nn"],secede:["s-ih s-iy1-d","vb"],secession:["s-ih s-eh1 sh-ah-n","nn"],secessionist:["s-ih s-eh1 sh-ah-n ih-s-t","nn"],seclude:["s-ah-k-l-uw1-d","vb"],secluded:["s-ih k-l-uw1 d-ih-d","vbn jj"],seclusion:["s-ih k-l-uw1 zh-ah-n","nn"],second:["s-eh1 k-ah-n-d","nn jj rb vb"],secondarily:["s-eh k-ah-n d-eh1 r-ah l-iy","rb"],secondary:["s-eh1 k-ah-n d-eh r-iy","jj"],secondhand:["s-eh1 k-ah-n-d hh-ae-n-d","jj"],secondly:["s-eh1 k-ah-n-d l-iy","rb"],secrecy:["s-iy1 k-r-ah s-iy","nn"],secret:["s-iy1 k-r-ah-t","jj nn"],secretarial:["s-eh k-r-ah t-eh1 r-iy ah-l","jj"],secretary:["s-eh1 k-r-ah t-eh r-iy","nn"],secrete:["s-ah k-r-iy1-t","vb"],secretion:["s-ah k-r-iy1 sh-ah-n","nn"],secretive:["s-iy1 k-r-ah t-ih-v","jj"],secretly:["s-iy1 k-r-ih-t l-iy","rb"],sect:["s-eh1-k-t","nn"],sectarian:["s-eh-k t-eh1 r-iy ah-n","jj nn"],section:["s-eh1-k sh-ah-n","nn"],sectional:["s-eh1-k sh-ah n-ah-l","jj"],sector:["s-eh1-k t-er","nn"],secular:["s-eh1 k-y-ah l-er","jj"],secularism:["s-eh1 k-y-ah l-er ih z-ah-m","nn"],secularist:["s-eh1 k-y-ah l-er ih-s-t","nn"],secure:["s-ih k-y-uh1-r","vb jj vbp"],secured:["s-ih k-y-uh1-r-d","vbn vbd jj"],securely:["s-ih k-y-uh1-r l-iy","rb"],securitization:["s-ih k-y-uh r-ah t-ah z-ey1 sh-ah-n","nn"],security:["s-ih k-y-uh1 r-ah t-iy","nn"],sedan:["s-ah d-ae1-n","nn"],sedate:["s-ih d-ey1-t","jj"],sedative:["s-eh1 d-ah t-ih-v","nn"],sedentary:["s-eh1 d-ah-n t-eh r-iy","jj"],sediment:["s-eh1 d-ah m-ah-n-t","nn"],sedimentary:["s-eh d-ah m-eh1-n t-er iy","jj"],sedimentation:["s-eh d-ah m-ah-n t-ey1 sh-ah-n","nn"],sedition:["s-ih d-ih1 sh-ah-n","nn"],seditious:["s-ih d-ih1 sh-ah-s","jj"],seduce:["s-ih d-uw1-s","vb"],seducer:["s-ih d-uw1 s-er","nn"],seduction:["s-ih d-ah1-k sh-ah-n","nn"],seductive:["s-ih d-ah1-k t-ih-v","jj"],see:["s-iy1","vb uh vbp"],seed:["s-iy1-d","nn vb"],seedling:["s-iy1-d l-ih-ng","nn"],seedy:["s-iy1 d-iy","jj"],seek:["s-iy1-k","vb vbp"],seeker:["s-iy1 k-er","nn"],seem:["s-iy1-m","vb vbp"],seeming:["s-iy1 m-ih-ng","jj vbg"],seemingly:["s-iy1 m-ih-ng l-iy","rb"],seen:["s-iy1-n","vbn vbd jj"],seep:["s-iy1-p","vb vbp"],seepage:["s-iy1 p-ih-jh","nn"],seer:["s-iy1-r","nn"],seesaw:["s-iy1 s-ao","nn vb"],seethe:["s-iy1-dh","vb vbp"],seething:["s-iy1 th-ih-ng","vbg jj"],segment:["s-eh1-g m-ah-n-t","nn vb vbp"],segmentation:["s-eh-g m-ah-n t-ey1 sh-ah-n","nn"],segmented:["s-eh1-g m-eh-n t-ih-d","jj"],segregate:["s-eh1 g-r-ah g-ey-t","vb"],segregated:["s-eh1 g-r-ah g-ey t-ih-d","vbn vbd jj"],segregation:["s-eh g-r-ah g-ey1 sh-ah-n","nn"],segregationist:["s-eh g-r-ah g-ey1 sh-ah-n ih-s-t","nn jj"],seismic:["s-ay1-z m-ih-k","jj"],seize:["s-iy1-z","vb vbp"],seized:["s-iy1-z-d","vbn jj vbd"],seizure:["s-iy1 zh-er","nn"],seldom:["s-eh1-l d-ah-m","rb"],select:["s-ah l-eh1-k-t","vb vbp jj"],selected:["s-ah l-eh1-k t-ah-d","vbn jj vbd"],selection:["s-ah l-eh1-k sh-ah-n","nn"],selective:["s-ah l-eh1-k t-ih-v","jj"],selectively:["s-ah l-eh1-k t-ih-v l-iy","rb"],selectivity:["s-ih l-eh-k t-ih1 v-ah t-iy","nn"],self:["s-eh1-l-f","nn prp"],selfish:["s-eh1-l f-ih-sh","jj"],selfishness:["s-eh1-l f-ih-sh n-ah-s","nn"],selfless:["s-eh1-l-f l-ah-s","jj"],sell:["s-eh1-l","vb vbp nn"],seller:["s-eh1 l-er","nn"],sellin:["s-eh1 l-ih-n","nn"],selling:["s-eh1 l-ih-ng","vbg jj"],selloff:["s-eh1-l ao-f","nn"],sellout:["s-eh1-l aw-t","nn"],semantic:["s-ih m-ae1-n t-ih-k","jj"],semblance:["s-eh1-m b-l-ah-n-s","nn"],semen:["s-iy1 m-ah-n","nn"],semester:["s-ah m-eh1 s-t-er","nn"],semiannual:["s-eh m-iy ae1 n-y-ah w-ah-l","jj"],semiannually:["s-eh m-iy ae1 n-uw ah l-iy","rb"],semiautomatic:["s-eh m-iy ao t-ah m-ae1 t-ih-k","jj"],semicircular:["s-eh m-iy s-er1 k-y-ah l-er","jj"],semiconductor:["s-eh m-iy k-ah-n d-ah1-k t-er","nn"],semifinal:["s-eh m-iy f-ay1 n-ah-l","nn"],semifinalist:["s-eh m-iy f-ay1 n-ah-l ih-s-t","nn"],seminal:["s-eh1 m-ah n-ah-l","jj"],seminar:["s-eh1 m-ah n-aa-r","nn"],seminarian:["s-eh m-ah n-eh1 r-iy ah-n","nn"],seminary:["s-eh1 m-ah n-eh r-iy","nn"],senate:["s-eh1 n-ah-t","nn"],senator:["s-eh1 n-ah t-er","nn"],senatorial:["s-eh n-ah t-ao1 r-iy ah-l","jj"],send:["s-eh1-n-d","vb vbp"],sender:["s-eh1-n d-er","nn"],senile:["s-iy1 n-ay-l","jj"],senior:["s-iy1 n-y-er","jj nn"],seniority:["s-iy n-y-ao1 r-ih t-iy","nn"],sensation:["s-eh-n s-ey1 sh-ah-n","nn"],sensational:["s-eh-n s-ey1 sh-ah n-ah-l","jj"],sense:["s-eh1-n-s","nn vbp vb"],senseless:["s-eh1-n-s l-ah-s","jj"],sensibility:["s-eh-n s-ih b-ih1 l-ih t-iy","nn"],sensible:["s-eh1-n s-ah b-ah-l","jj nn"],sensibly:["s-eh1-n s-ah b-l-iy","rb"],sensitive:["s-eh1-n s-ah t-ih-v","jj nn"],sensitively:["s-eh1-n s-ih t-ih-v l-iy","rb"],sensitivity:["s-eh-n s-ih t-ih1 v-ih t-iy","nn"],sensitize:["s-eh1-n-s-ah-t-ay-z","vb"],sensor:["s-eh1-n s-er","nn"],sensory:["s-eh1-n s-er iy","jj"],sensual:["s-eh1-n ch-ah w-ah-l","jj"],sensuality:["s-eh-n ch-ah-w ae1 l-ah t-iy","nn"],sensuous:["s-eh1-n ch-ah-w ah-s","jj"],sent:["s-eh1-n-t","vbd vbn"],sentence:["s-eh1-n t-ah-n-s","nn vb"],sentiment:["s-eh1-n t-ah m-ah-n-t","nn"],sentimental:["s-eh-n t-ah m-eh1-n t-ah-l","jj"],sentimentality:["s-eh-n t-ah m-eh-n t-ae1 l-ih t-iy","nn"],sentinel:["s-eh1-n t-ah n-ah-l","nn"],sentry:["s-eh1-n t-r-iy","nn"],separate:["s-eh1 p-er ey-t","jj vbp vb"],separated:["s-eh1 p-er ey t-ah-d","vbn jj vbd"],separately:["s-eh1 p-er ah-t l-iy","rb"],separateness:["s-eh1 p-er ah-t n-ah-s","nn"],separation:["s-eh p-er ey1 sh-ah-n","nn"],separatist:["s-eh1 p-er ah t-ih-s-t","jj"],sepsis:["s-eh1-p s-ih-s","nn"],septic:["s-eh1-p t-ih-k","jj nn"],septuagenarian:["s-eh-p ch-uw ah jh-ah n-eh1 r-iy ah-n","nn"],septum:["s-eh1-p t-ah-m","nn"],sequel:["s-iy1 k-w-ah-l","nn"],sequence:["s-iy1 k-w-ah-n-s","nn"],sequester:["s-ih k-w-eh1 s-t-er","nn vb vbp"],sequin:["s-iy1 k-w-ah-n","nn"],sequined:["s-iy1 k-w-ah-n-d","jj"],serenade:["s-eh r-ah n-ey1-d","nn vb"],serendipity:["s-eh r-ah-n d-ih1 p-ih t-iy","nn"],serene:["s-er iy1-n","jj nn"],serenely:["s-er iy1 n-ah l-iy","rb"],serenity:["s-er eh1 n-ah t-iy","nn"],serf:["s-er1-f","nn"],sergeant:["s-aa1-r jh-ah-n-t","nn"],serial:["s-ih1 r-iy ah-l","jj nn"],serialize:["s-ih1-r-iy-ah-l-ay-z","vb"],series:["s-ih1 r-iy-z","nn"],serious:["s-ih1 r-iy ah-s","jj"],seriously:["s-ih1 r-iy ah-s l-iy","rb"],seriousness:["s-ih1 r-iy ah-s n-ah-s","nn"],sermon:["s-er1 m-ah-n","nn"],serotonin:["s-er ah t-ow1 n-ih-n","nn"],serpent:["s-er1 p-ah-n-t","nn"],serpentine:["s-er1 p-ah-n t-ay-n","jj"],serum:["s-ih1 r-ah-m","nn"],servant:["s-er1 v-ah-n-t","nn"],serve:["s-er1-v","nn vb vbp"],server:["s-er1 v-er","nn"],service:["s-er1 v-ah-s","nn vb vbp"],serviceable:["s-er1 v-ah s-ah b-ah-l","jj"],servile:["s-er1 v-ah-l","jj"],servitude:["s-er1 v-ah t-uw-d","nn"],servo:["s-er1 v-ow","nn jj"],sesame:["s-eh1 s-ah m-iy","nn"],session:["s-eh1 sh-ah-n","nn"],set:["s-eh1-t","vbn vbd vbp jj nn vb"],setback:["s-eh1-t b-ae-k","nn"],setter:["s-eh1 t-er","nn"],settle:["s-eh1 t-ah-l","vb vbp"],settled:["s-eh1 t-ah-l-d","vbd vbn jj vb"],settlement:["s-eh1 t-ah-l m-ah-n-t","nn"],settler:["s-eh1 t-ah-l er","nn"],setup:["s-eh1-t ah-p","nn"],seven:["s-eh1 v-ah-n","cd"],seventh:["s-eh1 v-ah-n-th","jj"],seventy:["s-eh1 v-ah-n t-iy","nn"],sever:["s-eh1 v-er","vb vbp"],several:["s-eh1 v-r-ah-l","jj rb"],severance:["s-eh1 v-er ah-n-s","nn jj"],severe:["s-ah v-ih1-r","jj"],severely:["s-ah v-ih1-r l-iy","rb"],severest:["s-ah v-ih1 r-ah-s-t","jjs"],severity:["s-ih v-eh1 r-ih t-iy","nn"],sew:["s-ow1","vb vbp"],sewage:["s-uw1 ah-jh","nn"],sewer:["s-uw1 er","nn"],sewing:["s-ow1 ih-ng","nn vbg"],sewn:["s-ow1-n","vbn"],sex:["s-eh1-k-s","nn vb"],sexism:["s-eh1-k s-ih z-ah-m","nn"],sexist:["s-eh1-k s-ih-s-t","jj"],sextet:["s-eh-k s-t-eh1-t","nn"],sexton:["s-eh1-k s-t-ah-n","nn"],sexual:["s-eh1-k sh-uw ah-l","jj"],sexuality:["s-eh-k sh-uw ae1 l-ah t-iy","nn"],sexually:["s-eh1-k sh-uw ah l-iy","rb"],sexy:["s-eh1-k s-iy","jj"],shabby:["sh-ae1 b-iy","jj"],shack:["sh-ae1-k","nn"],shackle:["sh-ae1 k-ah-l","vb"],shad:["sh-ae1-d","nn"],shade:["sh-ey1-d","nn vb"],shaded:["sh-ey1 d-ih-d","vbn vbd jj"],shading:["sh-ey1 d-ih-ng","nn vbg"],shadow:["sh-ae1 d-ow","nn vb"],shadowed:["sh-ae1 d-ow-d","vbn jj"],shadowy:["sh-ae1 d-ow iy","jj"],shady:["sh-ey1 d-iy","jj"],shaft:["sh-ae1-f-t","nn"],shaggy:["sh-ae1 g-iy","jj"],shake:["sh-ey1-k","vb nn vbp"],shaken:["sh-ey1 k-ah-n","vbn jj"],shakeout:["sh-ey1-k aw-t","nn"],shaker:["sh-ey1 k-er","nn"],shakeup:["sh-ey1-k ah-p","nn"],shaky:["sh-ey1 k-iy","jj"],shall:["sh-ae1-l","md"],shallow:["sh-ae1 l-ow","jj nn"],shallower:["sh-ae1 l-ow er","jjr"],shallowness:["sh-ae1 l-ow n-ah-s","nn"],sham:["sh-ae1-m","nn jj"],shambles:["sh-ae1-m b-ah-l-z","nn"],shame:["sh-ey1-m","nn vb"],shameful:["sh-ey1-m f-ah-l","jj"],shameless:["sh-ey1-m l-ah-s","jj"],shamelessly:["sh-ey1-m l-ah-s l-iy","rb"],shampoo:["sh-ae-m p-uw1","nn vb"],shamrock:["sh-ae1-m r-aa-k","nn"],shanty:["sh-ae1-n t-iy","nn"],shantytown:["sh-ae1-n t-iy t-aw-n","nn"],shape:["sh-ey1-p","nn vbp vb"],shaped:["sh-ey1-p-t","vbn vbd jj"],shapeless:["sh-ey1-p l-ah-s","jj"],shapely:["sh-ey1-p l-iy","jj"],shard:["sh-aa1-r-d","nn"],share:["sh-eh1-r","nn vbp jj vb"],sharecropper:["sh-eh1-r k-r-aa p-er","nn"],shared:["sh-eh1-r-d","vbn jj vbd"],shareholder:["sh-eh1-r hh-ow-l d-er","nn"],shareholding:["sh-eh1-r hh-ow-l d-ih-ng","nn"],shareowner:["sh-eh1 r-ow n-er","nn"],shark:["sh-aa1-r-k","nn"],sharp:["sh-aa1-r-p","jj"],sharpen:["sh-aa1-r p-ah-n","vb"],sharper:["sh-aa1-r p-er","jjr rbr"],sharpest:["sh-aa1-r p-ah-s-t","jjs"],sharply:["sh-aa1-r-p l-iy","rb"],sharpness:["sh-aa1-r-p n-ah-s","nn"],sharpshooter:["sh-aa1-r-p sh-uw t-er","nn"],shatter:["sh-ae1 t-er","vb"],shattered:["sh-ae1 t-er-d","vbn jj vbd"],shattering:["sh-ae1 t-er ih-ng","vbg jj"],shatterproof:["sh-ae1 t-er p-r-uw-f","jj"],shave:["sh-ey1-v","vb vbp nn"],shaven:["sh-ey1 v-ah-n","jj"],shaver:["sh-ey1 v-er","nn"],shawl:["sh-ao1-l","nn"],she:["sh-iy1","prp"],sheaf:["sh-iy1-f","nn"],shear:["sh-ih1-r","vb"],sheath:["sh-iy1-th","nn"],shed:["sh-eh1-d","vb vbd vbn vbp nn"],sheen:["sh-iy1-n","nn"],sheep:["sh-iy1-p","nn"],sheepish:["sh-iy1 p-ih-sh","jj"],sheepskin:["sh-iy1-p s-k-ih-n","nn"],sheer:["sh-ih1-r","jj nn"],sheet:["sh-iy1-t","nn"],sheik:["sh-iy1-k","nn"],shelf:["sh-eh1-l-f","nn"],shell:["sh-eh1-l","nn jj vb"],shelled:["sh-eh1-l-d","vbd vbn jj"],shellfish:["sh-eh1-l f-ih-sh","nn"],shellshocked:["sh-eh1-l sh-aa-k-t","jj"],shelter:["sh-eh1-l t-er","nn vb"],sheltered:["sh-eh1-l t-er-d","vbn jj"],shelve:["sh-eh1-l-v","vb"],shelved:["sh-eh1-l-v-d","vbd jj vbn"],shelving:["sh-eh1-l v-ih-ng","nn"],shenanigan:["sh-ah n-ae1 n-ih g-ah-n","nn"],shepherd:["sh-eh1 p-er-d","nn vb"],sherbet:["sh-er1 b-ah-t","nn"],sheriff:["sh-eh1 r-ah-f","nn"],sherry:["sh-eh1 r-iy","nn"],shied:["sh-ay1-d","vbd vbn"],shield:["sh-iy1-l-d","nn vb"],shies:["sh-ay1-z","vbz"],shift:["sh-ih1-f-t","nn vb vbp"],shifting:["sh-ih1-f t-ih-ng","vbg jj nn"],shifty:["sh-ih1-f t-iy","jj"],shill:["sh-ih1-l","nn"],shilling:["sh-ih1 l-ih-ng","nn"],shim:["sh-ih1-m","vb"],shimmer:["sh-ih1 m-er","nn vb"],shimmering:["sh-ih1 m-er ih-ng","vbg jj"],shimmy:["sh-ih1 m-iy","vb vbp"],shin:["sh-ih1-n","nn"],shinbone:["sh-ih1-n b-ow-n","nn"],shine:["sh-ay1-n","nn vbp vb"],shingle:["sh-ih1-ng g-ah-l","nn"],shining:["sh-ay1 n-ih-ng","vbg jj"],shiny:["sh-ay1 n-iy","jj"],ship:["sh-ih1-p","nn vbp vb"],shipboard:["sh-ih1-p b-ao-r-d","nn jj"],shipbuilder:["sh-ih1-p b-ih-l d-er","nn"],shipbuilding:["sh-ih1-p b-ih-l d-ih-ng","nn"],shipload:["sh-ih1-p l-ow-d","nn"],shipmate:["sh-ih1-p m-ey-t","nn"],shipment:["sh-ih1-p m-ah-n-t","nn"],shipowner:["sh-ih1-p ow n-er","nn"],shipped:["sh-ih1-p-t","vbn jj vbd"],shipper:["sh-ih1 p-er","nn"],shipshape:["sh-ih1-p sh-ey-p","jj"],shipyard:["sh-ih1-p y-aa-r-d","nn"],shirk:["sh-er1-k","vb"],shirt:["sh-er1-t","nn"],shirtsleeve:["sh-er1-t s-l-iy-v","nn"],shit:["sh-ih1-t","nn"],shiver:["sh-ih1 v-er","nn vb"],shoal:["sh-ow1-l","nn"],shock:["sh-aa1-k","nn vb"],shocked:["sh-aa1-k-t","vbn vbd jj"],shocker:["sh-aa1 k-er","nn"],shocking:["sh-aa1 k-ih-ng","jj vbg"],shockingly:["sh-aa1 k-ih-ng l-iy","rb"],shod:["sh-aa1-d","jj"],shoddy:["sh-aa1 d-iy","jj"],shoe:["sh-uw1","nn"],shoehorn:["sh-uw1-hh-ao-r-n","vb"],shoelace:["sh-uw1 l-ey-s","nn"],shoemaker:["sh-uw1 m-ey k-er","nn"],shoestring:["sh-uw1 s-t-r-ih-ng","nn"],shone:["sh-ow1-n","vbd vbn"],shoo:["sh-uw1","vb"],shook:["sh-uh1-k","vbd nn vbn"],shoot:["sh-uw1-t","vb nn vbp"],shooter:["sh-uw1 t-er","nn"],shooting:["sh-uw1 t-ih-ng","nn vbg"],shootout:["sh-uw1-t aw-t","nn"],shop:["sh-aa1-p","nn vb vbp"],shopkeeper:["sh-aa1-p k-iy p-er","nn"],shoplifting:["sh-aa1-p l-ih-f t-ih-ng","nn"],shopper:["sh-aa1 p-er","nn"],shopping:["sh-aa1 p-ih-ng","nn jj vbg"],shopworn:["sh-aa1-p w-ao-r-n","jj"],shore:["sh-ao1-r","nn jj rb vb"],shoreline:["sh-ao1-r l-ay-n","nn"],shorn:["sh-ao1-r-n","vb"],short:["sh-ao1-r-t","jj nn rb vb"],shortage:["sh-ao1-r t-ah-jh","nn"],shortcake:["sh-ao1-r-t k-ey-k","nn"],shortchange:["sh-ao-r-t-ch-ey1-n-jh","vb"],shortcoming:["sh-ao1-r-t k-ah m-ih-ng","nn"],shortcut:["sh-ao1-r-t k-ah-t","nn"],shorten:["sh-ao1-r t-ah-n","vb vbp"],shortened:["sh-ao1-r t-ah-n-d","vbn jj"],shorter:["sh-ao1-r t-er","jjr"],shortest:["sh-ao1-r t-ih-s-t","jjs"],shortfall:["sh-ao1-r-t f-ao-l","nn"],shorthand:["sh-ao1-r-t hh-ae-n-d","nn"],shortlived:["sh-ao1-r-t l-ih1-v-d","jj"],shortly:["sh-ao1-r-t l-iy","rb"],shortness:["sh-ao1-r-t n-ah-s","nn"],shortsighted:["sh-ao1-r-t s-ay1 t-ih-d","jj"],shortsightedness:["sh-ao1-r-t s-ay1 t-ih-d n-ih-s","nn"],shortstop:["sh-ao1-r-t s-t-aa-p","nn"],shortterm:["sh-ao1-r-t t-er-m","jj"],shot:["sh-aa1-t","nn vbd vbn"],shotgun:["sh-aa1-t g-ah-n","nn jj"],should:["sh-uh1-d","md"],"shouldn't":["sh-uh1-d-ah-n-t","md"],shoulder:["sh-ow1-l d-er","nn vbp rb vb"],shout:["sh-aw1-t","vb vbp nn"],shove:["sh-ah1-v","vb nn"],shovel:["sh-ah1 v-ah-l","nn vb"],show:["sh-ow1","nn vb vbp"],showcase:["sh-ow1 k-ey-s","nn vb"],showdown:["sh-ow1 d-aw-n","nn"],shower:["sh-aw1 er","nn vb vbp"],showman:["sh-ow1 m-ah-n","nn"],showmanship:["sh-ow1 m-ah-n sh-ih-p","nn"],shown:["sh-ow1-n","vbn vbd"],showpiece:["sh-ow1 p-iy-s","nn"],showroom:["sh-ow1 r-uh-m","nn"],showy:["sh-ow1 iy","jj"],shrank:["sh-r-ae1-ng-k","vbd"],shrapnel:["sh-r-ae1-p n-ah-l","nn"],shred:["sh-r-eh1-d","nn vb"],shredded:["sh-r-eh1 d-ah-d","jj vbd"],shredder:["sh-r-eh1 d-er","nn"],shrewd:["sh-r-uw1-d","jj"],shrewdest:["sh-r-uw1 d-ah-s-t","jjs"],shrewdly:["sh-r-uw1-d l-iy","rb"],shriek:["sh-r-iy1-k","nn vb"],shrieking:["sh-r-iy1 k-ih-ng","nn"],shrift:["sh-r-ih1-f-t","nn"],shrill:["sh-r-ih1-l","jj"],shrimp:["sh-r-ih1-m-p","nn"],shrine:["sh-r-ay1-n","nn"],shrink:["sh-r-ih1-ng-k","vb nn"],shrinkage:["sh-r-ih1-ng k-ih-jh","nn"],shrivel:["sh-r-ih1 v-ah-l","vb"],shriveled:["sh-r-ih1 v-ah-l-d","vbn vbd jj"],shroud:["sh-r-aw1-d","nn vb"],shrub:["sh-r-ah1-b","nn"],shrubbery:["sh-r-ah1 b-er iy","nn"],shrug:["sh-r-ah1-g","vb nn vbp"],shrunk:["sh-r-ah1-ng-k","vbn"],shrunken:["sh-r-ah1-ng k-ah-n","jj vbn"],shuck:["sh-ah1-k","vb"],shudder:["sh-ah1 d-er","vb vbp"],shuddering:["sh-ah1 d-er ih-ng","vbg jj"],shuffle:["sh-ah1 f-ah-l","nn vb vbp"],shun:["sh-ah1-n","vb vbp"],shut:["sh-ah1-t","vbn vbd jj nn vb"],shutdown:["sh-ah1-t d-aw-n","nn"],shute:["sh-uw1-t","vb"],shutout:["sh-ah1-t aw-t","nn"],shutter:["sh-ah1 t-er","nn vb"],shuttered:["sh-ah1 t-er-d","jj vbd vbn"],shuttle:["sh-ah1 t-ah-l","nn vb"],shy:["sh-ay1","jj nn rb vb vbp"],shyly:["sh-ay1 l-iy","rb"],sibling:["s-ih1 b-l-ih-ng","nn"],sic:["s-ih1-k","vb"],sick:["s-ih1-k","jj"],sicken:["s-ih1-k-ah-n","vb"],sickened:["s-ih1 k-ah-n-d","vbn vbd jj"],sickening:["s-ih1 k-ah n-ih-ng","jj"],sicker:["s-ih1 k-er","jjr"],sickle:["s-ih1 k-ah-l","jj"],sickly:["s-ih1-k l-iy","jj"],sickness:["s-ih1-k n-ah-s","nn"],side:["s-ay1-d","nn vbp jj rb vb"],sidekick:["s-ay1-d k-ih-k","nn"],sideline:["s-ay1-d l-ay-n","nn vb"],sidelined:["s-ay1-d l-ay-n-d","vbn jj"],sideman:["s-ay1-d m-ae-n","nn"],sideshow:["s-ay1-d sh-ow","nn"],sidestep:["s-ay1-d s-t-eh-p","vb vbp"],sidetrack:["s-ay1-d t-r-ae-k","vb"],sidewalk:["s-ay1-d w-ao-k","nn"],sideways:["s-ay1-d w-ey-z","rb jj"],sidewinder:["s-ay1-d w-ay-n d-er","nn"],sidewise:["s-ay1-d w-ay-z","rb jj"],sidle:["s-ay1 d-ah-l","vb"],siege:["s-iy1-jh","nn"],sieve:["s-ih1-v","nn"],sift:["s-ih1-f-t","vb vbp"],sifting:["s-ih1-f t-ih-ng","nn"],sigh:["s-ay1","nn vb vbp"],sight:["s-ay1-t","nn vb"],sighting:["s-ay1 t-ih-ng","nn"],sightseeing:["s-ay1-t s-iy1 ih-ng","nn"],sign:["s-ay1-n","nn vbp vb"],signal:["s-ih1-g n-ah-l","nn vb vbp"],signatory:["s-ih1-g n-ah t-ao r-iy","jj nn"],signature:["s-ih1-g n-ah ch-er","nn"],signed:["s-ay1-n-d","vbd jj vbn"],signer:["s-ay1 n-er","nn"],significance:["s-ah-g n-ih1 f-ih k-ah-n-s","nn"],significant:["s-ah-g n-ih1 f-ih k-ah-n-t","jj"],significantly:["s-ih-g n-ih1 f-ih k-ah-n-t l-iy","rb"],signified:["s-ih1-g n-ah f-ay-d","vbd vbn"],signifies:["s-ih1-g n-ah f-ay-z","vbz"],signify:["s-ih1-g n-ah f-ay","vb"],signpost:["s-ay1-n p-ow-s-t","nn"],silence:["s-ay1 l-ah-n-s","nn vb"],silent:["s-ay1 l-ah-n-t","jj"],silently:["s-ay1 l-ah-n-t l-iy","rb"],silhouette:["s-ih l-ah-w eh1-t","nn"],silica:["s-ih1 l-ah k-ah","nn"],silicate:["s-ih1 l-ah k-ah-t","nn"],silicon:["s-ih1 l-ah k-ah-n","nn"],silicone:["s-ih1 l-ah k-ow-n","nn"],silk:["s-ih1-l-k","nn"],silky:["s-ih1-l k-iy","jj"],sill:["s-ih1-l","nn"],sillier:["s-ih1 l-iy er","jjr"],silliest:["s-ih1 l-iy ah-s-t","jjs"],silliness:["s-ih1 l-iy n-ah-s","nn"],silly:["s-ih1 l-iy","jj nn rb"],silo:["s-ay1 l-ow","nn"],silver:["s-ih1-l v-er","nn jj"],silverware:["s-ih1-l v-er w-eh-r","nn"],silvery:["s-ih1-l v-er iy","jj"],simian:["s-ih1 m-iy ah-n","jj"],similar:["s-ih1 m-ah l-er","jj"],similarity:["s-ih m-ah l-eh1 r-ah t-iy","nn"],similarly:["s-ih1 m-ah l-er l-iy","rb"],simile:["s-ih1 m-ah l-iy","nn"],similiar:["s-ih m-ih1 l-aa-r","jj"],simmer:["s-ih1 m-er","vb vbp"],simple:["s-ih1-m p-ah-l","jj nn"],simpler:["s-ih1-m p-ah l-er","jjr rbr"],simplest:["s-ih1-m p-l-ah-s-t","jjs"],simplicity:["s-ih-m p-l-ih1 s-ah t-iy","nn"],simplification:["s-ih-m p-l-ah f-ih k-ey1 sh-ah-n","nn"],simplified:["s-ih1-m p-l-ah f-ay-d","jj vbn"],simplifies:["s-ih1-m p-l-ah f-ay-z","vbz"],simplify:["s-ih1-m p-l-ah f-ay","vb vbp"],simplistic:["s-ih-m p-l-ih1 s-t-ih-k","jj"],simply:["s-ih1-m p-l-iy","rb jj"],simulate:["s-ih1 m-y-ah l-ah-t","vb vbp"],simulated:["s-ih1 m-y-ah l-ey t-ih-d","vbn jj"],simulation:["s-ih m-y-ah l-ey1 sh-ah-n","nn"],simulator:["s-ih1 m-y-ah l-ey t-er","nn"],simultaneous:["s-ay m-ah-l t-ey1 n-iy ah-s","jj"],simultaneously:["s-ay m-ah-l t-ey1 n-iy ah-s l-iy","rb"],sin:["s-ih1-n","nn vbp vb"],since:["s-ih1-n-s","in rb"],sincere:["s-ih-n s-ih1-r","jj"],sincerely:["s-ih-n s-ih1-r l-iy","rb"],sincerity:["s-ih-n s-eh1 r-ah t-iy","nn"],sine:["s-ay1-n","nn"],sinewy:["s-ih1 n-y-uw iy","jj"],sinful:["s-ih1-n f-ah-l","jj"],sing:["s-ih1-ng","vb vbp"],singer:["s-ih1 ng-er","nn"],singing:["s-ih1 ng-ih-ng","vbg jj nn"],single:["s-ih1-ng g-ah-l","jj vbp nn rb vb"],singlehandedly:["s-ih-ng g-ah-l hh-ae1-n d-ih-d l-iy","rb"],singly:["s-ih1-ng g-l-iy","rb"],singular:["s-ih1-ng g-y-ah l-er","jj nn"],singularly:["s-ih1-ng g-y-ah l-er l-iy","rb"],sinister:["s-ih1 n-ih s-t-er","jj"],sink:["s-ih1-ng-k","vb vbp nn"],sinkhole:["s-ih1-ng-k hh-ow-l","nn"],sinking:["s-ih1-ng k-ih-ng","vbg jj"],sinner:["s-ih1 n-er","nn"],sinning:["s-ih1 n-ih-ng","nn"],sinuous:["s-ih1 n-w-ah-s","jj"],sinus:["s-ay1 n-ah-s","nn"],sip:["s-ih1-p","nn"],siphon:["s-ay1 f-ah-n","vb"],sipped:["s-ih1-p-t","vbd"],sir:["s-er1","nn uh"],siren:["s-ay1 r-ah-n","jj nn"],sister:["s-ih1 s-t-er","nn jj"],sit:["s-ih1-t","vb vbp"],sitcom:["s-ih1-t k-aa-m","nn"],site:["s-ay1-t","nn"],sitter:["s-ih1 t-er","nn"],sitting:["s-ih1 t-ih-ng","vbg jj"],situate:["s-ih1-ch-uw-ey-t","vb"],situation:["s-ih ch-uw ey1 sh-ah-n","nn"],six:["s-ih1-k-s","cd"],sixth:["s-ih1-k-s-th","jj rb"],sizable:["s-ay1 z-ah b-ah-l","jj"],size:["s-ay1-z","nn vbp vb"],sizeable:["s-ay1 z-ah b-ah-l","jj"],sized:["s-ay1-z-d","vbd jj vbn"],sizing:["s-ay1 z-ih-ng","nn"],sizzle:["s-ih1 z-ah-l","nn vb"],sizzling:["s-ih1 z-ah-l ih-ng","jj vbg"],skate:["s-k-ey1-t","vb"],skeet:["s-k-iy1-t","nn"],skeletal:["s-k-eh1 l-ah t-ah-l","jj"],skeleton:["s-k-eh1 l-ah t-ah-n","nn jj"],skeptic:["s-k-eh1-p t-ih-k","nn"],skeptical:["s-k-eh1-p t-ah k-ah-l","jj"],skeptically:["s-k-eh1-p t-ih k-ah l-iy","rb"],skepticism:["s-k-eh1-p t-ih s-ih z-ah-m","nn"],sketch:["s-k-eh1-ch","nn vb"],sketchbook:["s-k-eh1-ch b-uh-k","nn"],sketchy:["s-k-eh1 ch-iy","jj"],skew:["s-k-y-uw1","vb"],skewed:["s-k-y-uw1-d","vbn vbd jj"],skewer:["s-k-y-uw1 er","nn"],ski:["s-k-iy1","nn jj vb vbp"],skid:["s-k-ih1-d","vb"],skier:["s-k-ay1-r","nn"],skiff:["s-k-ih1-f","nn"],skill:["s-k-ih1-l","nn vb"],skilled:["s-k-ih1-l-d","jj vbn"],skillet:["s-k-ih1 l-ah-t","nn"],skillful:["s-k-ih1-l f-ah-l","jj"],skillfully:["s-k-ih1-l f-ah l-iy","rb"],skim:["s-k-ih1-m","vb vbp jj"],skimmer:["s-k-ih1 m-er","nn"],skimp:["s-k-ih1-m-p","vb"],skimpy:["s-k-ih1-m p-iy","jj"],skin:["s-k-ih1-n","nn"],skinhead:["s-k-ih1-n hh-eh-d","nn"],skinless:["s-k-ih1-n l-ah-s","jj"],skinny:["s-k-ih1 n-iy","jj"],skip:["s-k-ih1-p","vb vbp"],skipper:["s-k-ih1 p-er","nn vb"],skirmish:["s-k-er1 m-ih-sh","nn vb"],skirt:["s-k-er1-t","nn vb vbp"],skit:["s-k-ih1-t","nn"],skittish:["s-k-ih1 t-ih-sh","jj"],skittishness:["s-k-ih1 t-ih-sh n-ah-s","nn"],skull:["s-k-ah1-l","nn"],skunk:["s-k-ah1-ng-k","nn"],sky:["s-k-ay1","nn"],skylight:["s-k-ay1 l-ay-t","nn"],skyline:["s-k-ay1 l-ay-n","nn"],skyrocket:["s-k-ay1 r-aa k-ah-t","vb"],skyscraper:["s-k-ay1 s-k-r-ey p-er","nn"],skyward:["s-k-ay1 w-er-d","rb"],skywave:["s-k-ay1 w-ey-v","nn"],slab:["s-l-ae1-b","nn jj"],slack:["s-l-ae1-k","jj vb nn"],slacken:["s-l-ae1 k-ah-n","vb"],slackened:["s-l-ae1 k-ah-n-d","vbd jj vbn"],slag:["s-l-ae1-g","nn"],slain:["s-l-ey1-n","vbn"],slam:["s-l-ae1-m","nn vbp vb"],slammer:["s-l-ae1 m-er","nn"],slander:["s-l-ae1-n d-er","nn vb"],slanderous:["s-l-ae1-n d-er ah-s","jj"],slang:["s-l-ae1-ng","nn"],slant:["s-l-ae1-n-t","nn vb"],slanted:["s-l-ae1-n t-ah-d","vbn vbd jj"],slanting:["s-l-ae1-n t-ih-ng","vbg jj"],slap:["s-l-ae1-p","vb nn"],slapping:["s-l-ae1 p-ih-ng","vbg jj nn"],slapstick:["s-l-ae1-p s-t-ih-k","nn jj"],slash:["s-l-ae1-sh","vb nn vbp"],slasher:["s-l-ae1 sh-er","nn"],slat:["s-l-ae1-t","nn"],slate:["s-l-ey1-t","nn jj vb"],slaughter:["s-l-ao1 t-er","nn vb vbp"],slaughterhouse:["s-l-ao1 t-er hh-aw-s","nn"],slave:["s-l-ey1-v","nn"],slavery:["s-l-ey1 v-er iy","nn"],slavish:["s-l-ey1 v-ih-sh","jj"],slavishly:["s-l-ae1 v-ih-sh l-iy","rb"],slay:["s-l-ey1","vb"],slaying:["s-l-ey1 ih-ng","nn vbg"],sleaze:["s-l-iy1-z","nn"],sleazy:["s-l-iy1 z-iy","jj"],sled:["s-l-eh1-d","vb"],sleek:["s-l-iy1-k","jj"],sleep:["s-l-iy1-p","vb nn vbp"],sleeper:["s-l-iy1 p-er","nn"],sleepily:["s-l-iy1 p-ah l-iy","rb"],sleepless:["s-l-iy1-p l-ah-s","jj"],sleepwalk:["s-l-iy1-p-w-ao-k","vb"],sleepwalker:["s-l-iy1-p w-ao k-er","nn"],sleepy:["s-l-iy1 p-iy","jj"],sleet:["s-l-iy1-t","nn"],sleeve:["s-l-iy1-v","nn"],sleight:["s-l-ay1-t","nn"],sleigh:["s-l-ay1","vb"],slender:["s-l-eh1-n d-er","jj"],slept:["s-l-eh1-p-t","vbd vbn"],sleuth:["s-l-uw1-th","nn"],sleuthing:["s-l-uw1 th-ih-ng","nn"],slew:["s-l-uw1","nn"],slice:["s-l-ay1-s","nn vb vbp"],slick:["s-l-ih1-k","jj nn"],slicker:["s-l-ih1 k-er","nn"],slickly:["s-l-ih1-k l-iy","rb"],slid:["s-l-ih1-d","vbd vbn"],slide:["s-l-ay1-d","nn vbp vb"],sliding:["s-l-ay1 d-ih-ng","vbg jj"],slight:["s-l-ay1-t","jj vb vbp nn"],slighted:["s-l-ay1 t-ih-d","jj vbn"],slightest:["s-l-ay1 t-ah-s-t","jjs"],slightly:["s-l-ay1-t l-iy","rb"],slim:["s-l-ih1-m","jj vb"],slime:["s-l-ay1-m","nn"],slimmer:["s-l-ih1 m-er","rb"],slimy:["s-l-ay1 m-iy","jj"],sling:["s-l-ih1-ng","nn vb"],slingshot:["s-l-ih1-ng sh-aa-t","nn"],slinky:["s-l-ih1-ng k-iy","jj"],slip:["s-l-ih1-p","vb nn vbp"],slippage:["s-l-ih1 p-ih-jh","nn"],slipper:["s-l-ih1 p-er","nn"],slippery:["s-l-ih1 p-er iy","jj"],slipshod:["s-l-ih1-p sh-aa-d","jj"],slit:["s-l-ih1-t","nn vb"],slither:["s-l-ih1-dh-er","vb"],sliver:["s-l-ih1 v-er","nn"],slob:["s-l-aa1-b","nn"],slog:["s-l-aa1-g","vb"],sloop:["s-l-uw1-p","nn"],slop:["s-l-aa1-p","nn vb"],slope:["s-l-ow1-p","nn"],sloping:["s-l-ow1 p-ih-ng","vbg jj"],sloppily:["s-l-aa1 p-ah l-iy","rb"],sloppiness:["s-l-aa1 p-iy n-ah-s","nn"],sloppy:["s-l-aa1 p-iy","jj"],slosh:["s-l-aa1-sh","vb"],slot:["s-l-aa1-t","nn"],slotted:["s-l-aa1 t-ih-d","vbn"],slouch:["s-l-aw1-ch","nn"],slouches:["s-l-aw1 ch-ih-z","vbz"],slough:["s-l-ah1-f","vb"],slovenliness:["s-l-ah1 v-ah-n l-iy n-ah-s","nn"],slovenly:["s-l-ah1 v-ah-n l-iy","jj"],slow:["s-l-ow1","jj vbp rb vb"],slowdown:["s-l-ow1 d-aw-n","nn"],slower:["s-l-ow1 er","jjr rbr"],slowest:["s-l-ow1 ah-s-t","jjs"],slowly:["s-l-ow1 l-iy","rb"],slowness:["s-l-ow1 n-ah-s","nn"],sludge:["s-l-ah1-jh","nn"],slug:["s-l-ah1-g","nn vb"],slugfest:["s-l-ah1-g f-eh-s-t","nn jjs"],slugger:["s-l-ah1 g-er","nn"],sluggish:["s-l-ah1 g-ih-sh","jj"],sluggishly:["s-l-ah1 g-ih-sh l-iy","rb"],sluggishness:["s-l-ah1 g-ih-sh n-ah-s","nn"],sluice:["s-l-uw1-s","nn vb"],slum:["s-l-ah1-m","nn"],slumber:["s-l-ah1-m b-er","nn vb"],slump:["s-l-ah1-m-p","nn vbp vb"],slumping:["s-l-ah1-m p-ih-ng","vbg jj"],slung:["s-l-ah1-ng","vbd vbn"],slur:["s-l-er1","nn vb"],slurry:["s-l-er1 iy","nn"],slush:["s-l-ah1-sh","nn"],sly:["s-l-ay1","jj"],slyly:["s-l-ay1 l-iy","rb"],slyness:["s-l-ay1 n-ah-s","nn"],smack:["s-m-ae1-k","rb vb uh vbp"],small:["s-m-ao1-l","jj"],smaller:["s-m-ao1 l-er","jjr rbr"],smallest:["s-m-ao1 l-ah-s-t","jjs"],smallish:["s-m-ao1 l-ih-sh","jj"],smallness:["s-m-ao1-l n-ah-s","nn"],smallpox:["s-m-ao1-l p-aa-k-s","nn"],smarmy:["s-m-aa1-r m-iy","jj"],smart:["s-m-aa1-r-t","jj nn rb vb"],smarter:["s-m-aa1-r t-er","rbr jjr rb"],smartest:["s-m-aa1-r t-ah-s-t","jjs"],smartly:["s-m-aa1-r-t l-iy","rb"],smash:["s-m-ae1-sh","nn vb vbp"],smashed:["s-m-ae1-sh-t","vbd jj vbn"],smasher:["s-m-ae1 sh-er","nn"],smashing:["s-m-ae1 sh-ih-ng","jj vbg"],smattering:["s-m-ae1 t-er ih-ng","nn"],smear:["s-m-ih1-r","nn vb"],smeared:["s-m-ih1-r-d","vbn jj"],smell:["s-m-eh1-l","nn vb vbp"],smelly:["s-m-eh1 l-iy","jj"],smelter:["s-m-eh1-l t-er","nn"],smile:["s-m-ay1-l","nn vb vbp"],smiling:["s-m-ay1 l-ih-ng","vbg jj nn"],smilingly:["s-m-ay1 l-ih-ng l-iy","rb"],smirk:["s-m-er1-k","nn vb"],smithereens:["s-m-ih dh-er iy1-n-z","nn"],smitten:["s-m-ih1 t-ah-n","vbn"],smock:["s-m-aa1-k","nn"],smog:["s-m-aa1-g","nn"],smoggiest:["s-m-aa1 g-iy ah-s-t","jjs"],smoke:["s-m-ow1-k","nn vb vbp"],smoked:["s-m-ow1-k-t","vbd jj vbn"],smokeless:["s-m-ow1-k l-ah-s","jj"],smoker:["s-m-ow1 k-er","nn"],smokescreen:["s-m-ow1-k s-k-r-iy-n","nn"],smokestack:["s-m-ow1-k s-t-ae-k","nn"],smoky:["s-m-ow1 k-iy","jj"],smolder:["s-m-ow1-l d-er","vb vbp"],smooth:["s-m-uw1-dh","jj vb"],smoother:["s-m-uw1 dh-er","jj rb jjr"],smoothest:["s-m-uw1 dh-ah-s-t","jjs"],smoothly:["s-m-uw1-dh l-iy","rb"],smoothness:["s-m-uw1-dh n-ah-s","nn"],smorgasbord:["s-m-ao1-r g-ah-s b-ao-r-d","nn"],smother:["s-m-ah1 dh-er","vb"],smothered:["s-m-ah1 dh-er-d","vbd vbn jj"],smudge:["s-m-ah1-jh","nn"],smug:["s-m-ah1-g","jj"],smuggle:["s-m-ah1 g-ah-l","vb"],smuggler:["s-m-ah1-g l-er","nn"],snack:["s-n-ae1-k","nn"],snafu:["s-n-ae1 f-uw","nn"],snag:["s-n-ae1-g","nn vb"],snail:["s-n-ey1-l","nn"],snake:["s-n-ey1-k","nn vb"],snap:["s-n-ae1-p","vb vbp jj nn"],snapdragon:["s-n-ae1-p d-r-ae g-ah-n","nn"],snapped:["s-n-ae1-p-t","vbd vbn jj"],snapper:["s-n-ae1 p-er","nn"],snappy:["s-n-ae1 p-iy","jj"],snapshot:["s-n-ae1-p sh-aa-t","nn"],snare:["s-n-eh1-r","vb nn"],snarl:["s-n-aa1-r-l","nn vb"],snatch:["s-n-ae1-ch","vb vbp"],snazzier:["s-n-ae1 z-iy er","jjr"],snazzy:["s-n-ae1 z-iy","jj"],sneak:["s-n-iy1-k","vb nn vbp"],sneaker:["s-n-iy1 k-er","nn"],sneaky:["s-n-iy1 k-iy","jj"],sneer:["s-n-ih1-r","nn vb"],sneeze:["s-n-iy1-z","vb"],snicker:["s-n-ih1-k-er","vb"],sniff:["s-n-ih1-f","vb"],snip:["s-n-ih1-p","nn vb"],snipe:["s-n-ay1-p","vb"],sniped:["s-n-ay1-p-t","vbd nn"],sniper:["s-n-ay1 p-er","nn"],snippet:["s-n-ih1 p-ah-t","nn"],snob:["s-n-aa1-b","nn"],snobbery:["s-n-aa1 b-er iy","nn"],snobbish:["s-n-aa1 b-ih-sh","jj"],snooker:["s-n-uh1 k-er","nn"],snoop:["s-n-uw1-p","vb"],snooty:["s-n-uw1 t-iy","jj"],snooze:["s-n-uw1-z","vb"],snore:["s-n-ao1-r","vb"],snort:["s-n-ao1-r-t","vb nn"],snorting:["s-n-ao1-r t-ih-ng","nn"],snout:["s-n-aw1-t","nn"],snow:["s-n-ow1","nn vb"],snowball:["s-n-ow1 b-ao-l","nn vb"],snowbird:["s-n-ow1 b-er-d","nn"],snowfall:["s-n-ow1 f-aa-l","nn"],snowflake:["s-n-ow1 f-l-ey-k","nn"],snowman:["s-n-ow1 m-ae-n","nn"],snowstorm:["s-n-ow1 s-t-ao-r-m","nn"],snowy:["s-n-ow1 iy","jj"],snub:["s-n-ah1-b","vb"],snuck:["s-n-ah1-k","vbd"],snuff:["s-n-ah1-f","vb nn"],snuffer:["s-n-ah1 f-er","nn"],snug:["s-n-ah1-g","jj"],snugly:["s-n-ah1-g l-iy","rb"],so:["s-ow1","rb cc in"],soak:["s-ow1-k","vb"],soaked:["s-ow1-k-t","vbn jj vbd"],soaking:["s-ow1 k-ih-ng","vbg jj"],soap:["s-ow1-p","nn"],soapbox:["s-ow1-p b-aa-k-s","nn"],soapy:["s-ow1 p-iy","jj"],soar:["s-ao1-r","vb vbp"],soaring:["s-ao1 r-ih-ng","vbg jj"],sob:["s-aa1-b","vb"],sobbingly:["s-aa1 b-ih-ng l-iy","rb"],sober:["s-ow1 b-er","jj vb"],sobering:["s-ow1 b-er ih-ng","vbg jj"],soberly:["s-ow1 b-er l-iy","rb"],sobriety:["s-ah b-r-ay1 ah t-iy","nn"],sobriquet:["s-ow1 b-r-ah k-ey","nn"],socalled:["s-ow1 k-aa1-l-d","jj"],soccer:["s-aa1 k-er","nn"],sociable:["s-ow1 sh-ah b-ah-l","jj"],social:["s-ow1 sh-ah-l","jj nn"],socialism:["s-ow1 sh-ah l-ih z-ah-m","nn"],socialist:["s-ow1 sh-ah l-ah-s-t","jj nn"],socialistic:["s-ow sh-ah l-ih1 s-t-ih-k","jj"],socialite:["s-ow1 sh-ah l-ay-t","nn"],socialization:["s-ow sh-ah l-ih z-ey1 sh-ah-n","nn"],socialize:["s-ow1 sh-ah l-ay-z","vb"],socially:["s-ow1 sh-ah l-iy","rb"],societal:["s-ah s-ay1 ih t-ah-l","jj"],society:["s-ah s-ay1 ah t-iy","nn"],socioeconomic:["s-ow s-iy ow eh k-ah n-aa1 m-ih-k","jj"],sociological:["s-ow s-iy ah l-aa1 jh-ih k-ah-l","jj"],sociologist:["s-ow s-iy aa1 l-ah jh-ih-s-t","nn"],sociology:["s-ow s-iy aa1 l-ah jh-iy","nn"],sociopath:["s-ow1 s-iy ow p-ae-th","nn"],sock:["s-aa1-k","nn vb"],socket:["s-aa1 k-ah-t","nn"],sod:["s-aa1-d","nn"],soda:["s-ow1 d-ah","nn"],sodden:["s-aa1 d-ah-n","jj"],sodium:["s-ow1 d-iy ah-m","nn"],sodomy:["s-aa1 d-ah m-iy","nn"],sofa:["s-ow1 f-ah","nn"],soft:["s-aa1-f-t","jj rb"],softball:["s-ao1-f-t b-ao-l","nn"],softdrink:["s-ao1-f-t d-r-ih-ng-k","nn"],soften:["s-aa1 f-ah-n","vb"],softened:["s-ao1 f-ah-n-d","vbd vbn jj"],softener:["s-ao1 f-ah-n er","nn"],softening:["s-ao1 f-ah-n ih-ng","vbg jj"],softer:["s-aa1-f t-er","jjr rb"],softest:["s-ao1-f t-ah-s-t","jjs"],softly:["s-ao1-f-t l-iy","rb"],softness:["s-ao1-f-t n-ah-s","nn"],software:["s-ao1-f-t w-eh-r","nn"],softwood:["s-ao1-f-t w-uh-d","jj"],soggy:["s-aa1 g-iy","jj"],soil:["s-oy1-l","nn vb"],soiled:["s-oy1-l-d","vbn jj vbd"],sojourn:["s-ow1 jh-er-n","nn"],solace:["s-aa1 l-ah-s","nn"],solar:["s-ow1 l-er","jj"],sold:["s-ow1-l-d","vbn vbd"],solder:["s-aa1 d-er","jj vb"],soldering:["s-aa1 d-er ih-ng","jj vbg"],soldier:["s-ow1-l jh-er","nn"],soldiering:["s-ow1-l jh-er ih-ng","nn"],sole:["s-ow1-l","jj nn"],solely:["s-ow1-l l-iy","rb"],solemn:["s-aa1 l-ah-m","jj"],solemnity:["s-ah l-eh1-m n-ah t-iy","nn"],solemnly:["s-ao1 l-ah-m l-iy","rb"],solicit:["s-ah l-ih1 s-ih-t","vb vbp"],solicitation:["s-ah l-ih s-ih t-ey1 sh-ah-n","nn"],solicited:["s-ah l-ih1 s-ih t-ih-d","vbd jj vbn"],solicitor:["s-ah l-ih1 s-ah t-er","nn"],solicitous:["s-ah l-ih1 s-ah t-ah-s","jj"],solicitude:["s-ah l-ih1 s-ih t-uw-d","nn"],solid:["s-aa1 l-ah-d","jj nn rb"],solidarity:["s-aa l-ah d-eh1 r-ah t-iy","nn"],solidified:["s-ah l-ih1 d-ah f-ay-d","vbd vbn"],solidifies:["s-ah l-ih1 d-ah f-ay-z","vbz"],solidify:["s-ah l-ih1 d-ah f-ay","vb vbp"],solidity:["s-ah l-ih1 d-ah t-iy","nn"],solidly:["s-aa1 l-ah-d l-iy","rb"],solitary:["s-aa1 l-ah t-eh r-iy","jj nn"],solitude:["s-aa1 l-ah t-uw-d","nn"],solo:["s-ow1 l-ow","nn jj rb vb"],soloist:["s-ow1 l-ow ah-s-t","nn"],soluble:["s-aa1 l-y-ah b-ah-l","jj"],solution:["s-ah l-uw1 sh-ah-n","nn"],solvable:["s-aa1-l v-ah b-ah-l","jj"],solve:["s-aa1-l-v","vb vbp"],solvency:["s-ao1-l v-ah-n s-iy","nn"],solvent:["s-aa1-l v-ah-n-t","jj nn"],soma:["s-ow1 m-ah","nn"],somber:["s-aa1-m b-er","jj"],somberly:["s-aa1-m b-er l-iy","rb"],some:["s-ah1-m","dt nn rb"],somebody:["s-ah1-m b-aa d-iy","nn"],someday:["s-ah1-m d-ey","rb"],somehow:["s-ah1-m hh-aw","rb wrb"],someone:["s-ah1-m w-ah-n","nn"],someplace:["s-ah1-m p-l-ey-s","rb nn"],somersault:["s-ah1 m-er s-ao-l-t","nn"],somersaulting:["s-ah1 m-er s-ao-l t-ih-ng","jj nn"],something:["s-ah1-m th-ih-ng","nn"],sometime:["s-ah1-m t-ay-m","rb jj"],sometimes:["s-ah-m t-ay1-m-z","rb"],somewhat:["s-ah1-m w-ah1-t","rb"],somewhere:["s-ah1-m w-eh-r","rb nn"],somnolent:["s-aa1-m n-ah l-ah-n-t","jj"],son:["s-ah1-n","nn"],sonar:["s-ow1 n-aa-r","nn"],sonata:["s-ah n-aa1 t-ah","nn"],song:["s-ao1-ng","nn"],songbird:["s-ao1-ng b-er-d","nn"],songwriter:["s-ao1-ng r-ay t-er","nn"],sonic:["s-aa1 n-ih-k","jj"],sonnet:["s-aa1 n-ih-t","nn"],sonny:["s-ah1 n-iy","nn"],sonorous:["s-aa1 n-er ah-s","jj"],soon:["s-uw1-n","rb"],sooner:["s-uw1 n-er","rbr rb"],soonest:["s-uw1 n-ah-s-t","jjs"],soot:["s-uh1-t","nn"],soothe:["s-uw1-dh","vb"],soothing:["s-uw1 dh-ih-ng","vbg jj"],soothingly:["s-uw1 dh-ih-ng l-iy","rb"],soothsayer:["s-uw-th s-ey1 er","nn"],sooty:["s-uw1 t-iy","jj"],sop:["s-aa1-p","nn"],sophisticate:["s-ah f-ih1 s-t-ah k-ih-t","nn"],sophisticated:["s-ah f-ih1 s-t-ah k-ey t-ih-d","jj"],sophistication:["s-ah f-ih s-t-ah k-ey1 sh-ah-n","nn"],sophomore:["s-aa1-f m-ao-r","nn"],sophomoric:["s-aa f-ow m-aa1 r-ih-k","jj"],sopping:["s-aa1 p-ih-ng","jj vbg"],soprano:["s-ah p-r-aa1 n-ow","nn jj"],sorcery:["s-ao1-r s-er iy","nn"],sordid:["s-ao1-r d-ah-d","jj"],sore:["s-ao1-r","jj nn"],sorely:["s-ao1-r l-iy","rb"],sorghum:["s-ao1-r g-ah-m","nn"],sorority:["s-er ao1 r-ah t-iy","nn"],sorrel:["s-ao1 r-ah-l","jj nn"],sorrow:["s-aa1 r-ow","nn"],sorrowful:["s-aa1 r-ow f-ah-l","jj"],sorry:["s-aa1 r-iy","jj rb uh"],sort:["s-ao1-r-t","nn rb vb vbp"],souffle:["s-uw-f l-ey1","nn"],sought:["s-ao1-t","vbd vbn"],souk:["s-uw1-k","nn"],soul:["s-ow1-l","nn"],soulful:["s-ow1-l f-ah-l","jj"],soulless:["s-ow1-l l-ah-s","jj"],sound:["s-aw1-n-d","nn jj rb vb vbp"],sounder:["s-aw1-n d-er","jjr"],sounding:["s-aw1-n d-ih-ng","vbg jj nn"],soundly:["s-aw1-n-d l-iy","rb"],soundness:["s-aw1-n-d n-ah-s","nn"],soundtrack:["s-aw1-n-d t-r-ae-k","nn"],soup:["s-uw1-p","nn vb"],soupy:["s-uw1 p-iy","jj"],sour:["s-aw1 er","jj vbp nn rb vb"],source:["s-ao1-r-s","nn vb"],soured:["s-aw1 er-d","vbd vbn jj"],south:["s-aw1-th","rb jj nn"],southbound:["s-aw1-th b-aw-n-d","jj"],southeast:["s-aw-th iy1-s-t","rb jj nn"],southeastern:["s-aw-th iy1 s-t-er-n","jj"],southern:["s-ah1 dh-er-n","jj"],southernmost:["s-ah1 dh-er-n m-ow-s-t","jj"],southward:["s-aw1-th w-er-d","rb jj"],southwest:["s-aw-th w-eh1-s-t","rb jj nn jjs"],southwestern:["s-aw-th w-eh1 s-t-er-n","jj"],souvenir:["s-uw v-ah n-ih1-r","nn"],sovereign:["s-aa1 v-r-ah-n","jj nn"],sovereignty:["s-aa1 v-r-ah-n t-iy","nn"],soviet:["s-ow1 v-iy ah-t","jj"],sow:["s-aw1","vbp nn vb"],sown:["s-ow1-n","vbn"],soy:["s-oy1","nn"],soybean:["s-oy1 b-iy-n","nn"],spa:["s-p-aa1","nn"],space:["s-p-ey1-s","nn vb"],spacecraft:["s-p-ey1-s k-r-ae-f-t","nn"],spaced:["s-p-ey1-s-t","vbn jj"],spacer:["s-p-ey1 s-er","nn"],spaceship:["s-p-ey1-s sh-ih-p","nn"],spacesuit:["s-p-ey1-s uw-t","nn"],spacing:["s-p-ey1 s-ih-ng","nn jj"],spacious:["s-p-ey1 sh-ah-s","jj"],spade:["s-p-ey1-d","nn"],spaghetti:["s-p-ah g-eh1 t-iy","nn"],span:["s-p-ae1-n","nn vb vbp"],spandex:["s-p-ae1-n d-ah-k-s","nn"],spangle:["s-p-ae1-ng g-ah-l","nn"],spaniel:["s-p-ae1 n-y-ah-l","nn"],spanking:["s-p-ae1-ng k-ih-ng","jj nn"],spanner:["s-p-ae1 n-er","nn"],spare:["s-p-eh1-r","jj vb vbp"],sparing:["s-p-eh1 r-ih-ng","vbg jj"],sparingly:["s-p-eh1 r-ih-ng l-iy","rb"],spark:["s-p-aa1-r-k","vb nn vbp"],sparkle:["s-p-aa1-r k-ah-l","vb"],sparkling:["s-p-aa1-r k-l-ih-ng","jj rb vbg"],sparred:["s-p-aa1-r-d","vbd"],sparrow:["s-p-eh1 r-ow","nn"],sparse:["s-p-aa1-r-s","jj"],sparsely:["s-p-aa1-r-s l-iy","rb"],spasm:["s-p-ae1 z-ah-m","nn"],spat:["s-p-ae1-t","vbd nn"],spate:["s-p-ey1-t","nn"],spatial:["s-p-ey1 sh-ah-l","jj"],spatter:["s-p-ae1-t-er","vb"],spatula:["s-p-ae1 ch-uh l-ah","nn"],spawn:["s-p-aa1-n","vb vbp"],speak:["s-p-iy1-k","vb vbp"],speaker:["s-p-iy1 k-er","nn"],spear:["s-p-ih1-r","nn vb"],spearhead:["s-p-ih1-r hh-eh-d","vb nn"],spec:["s-p-eh1-k","nn"],special:["s-p-eh1 sh-ah-l","jj nn"],specialist:["s-p-eh1 sh-ah l-ah-s-t","nn jj"],speciality:["s-p-eh sh-iy ae1 l-ih t-iy","nn"],specialization:["s-p-eh sh-ah l-ah z-ey1 sh-ah-n","nn"],specialize:["s-p-eh1 sh-ah l-ay-z","vb vbp"],specialized:["s-p-eh1 sh-ah l-ay-z-d","jj vbd vbn"],specially:["s-p-eh1 sh-ah l-iy","rb"],specialty:["s-p-eh1 sh-ah-l t-iy","nn jj"],species:["s-p-iy1 sh-iy-z","nn"],specific:["s-p-ah s-ih1 f-ih-k","jj nn"],specifically:["s-p-ah s-ih1 f-ih-k l-iy","rb"],specification:["s-p-eh s-ih f-ih k-ey1 sh-ah-n","nn"],specificity:["s-p-eh s-ah f-ih1 s-ah t-iy","nn"],specified:["s-p-eh1 s-ah f-ay-d","vbn jj vbd"],specifies:["s-p-eh1 s-ah f-ay-z","vbz"],specify:["s-p-eh1 s-ah f-ay","vb vbp"],specimen:["s-p-eh1 s-ah m-ah-n","nn"],specious:["s-p-iy1 sh-ah-s","jj"],speck:["s-p-eh1-k","nn"],speckled:["s-p-eh1 k-ah-l-d","jj"],spectacle:["s-p-eh1-k t-ah k-ah-l","nn"],spectacular:["s-p-eh-k t-ae1 k-y-ah l-er","jj"],spectacularly:["s-p-eh-k t-ae1 k-y-ah l-er l-iy","rb"],spectator:["s-p-eh1-k t-ey t-er","nn"],specter:["s-p-eh1-k t-er","nn"],spectre:["s-p-eh1-k t-er","nn"],spectrometer:["s-p-eh-k t-r-aa1 m-ah t-er","nn"],spectroscopy:["s-p-eh-k t-r-aa1 s-k-ah p-iy","nn"],spectrum:["s-p-eh1-k t-r-ah-m","nn"],speculate:["s-p-eh1 k-y-ah l-ey-t","vb vbp"],speculation:["s-p-eh k-y-ah l-ey1 sh-ah-n","nn"],speculative:["s-p-eh1 k-y-ah l-ah t-ih-v","jj"],speculator:["s-p-eh1 k-y-ah l-ey t-er","nn"],sped:["s-p-eh1-d","vbd vbn"],speech:["s-p-iy1-ch","nn"],speechless:["s-p-iy1-ch l-ah-s","jj"],speechwriter:["s-p-iy1-ch r-ay t-er","nn"],speed:["s-p-iy1-d","nn vb"],speedboat:["s-p-iy1-d b-ow-t","nn"],speedier:["s-p-iy1 d-iy er","jjr jj"],speedily:["s-p-iy1 d-ah l-iy","rb"],speeding:["s-p-iy1 d-ih-ng","vbg jj nn"],speedometer:["s-p-iy d-aa1 m-ah t-er","nn"],speedup:["s-p-iy1 d-ah-p","nn"],speedway:["s-p-iy1-d w-ey","nn"],speedy:["s-p-iy1 d-iy","jj"],spell:["s-p-eh1-l","vb nn vbp"],spellbound:["s-p-eh1-l b-aw-n-d","vbn"],spend:["s-p-eh1-n-d","vb vbp"],spender:["s-p-eh1-n d-er","nn"],spending:["s-p-eh1-n d-ih-ng","vbg jj"],spent:["s-p-eh1-n-t","vbd jj vbn"],sperm:["s-p-er1-m","nn"],spew:["s-p-y-uw1","vb vbp"],sphere:["s-f-ih1-r","nn"],spherical:["s-f-eh1 r-ih k-ah-l","jj"],spice:["s-p-ay1-s","nn vbp vb"],spiced:["s-p-ay1-s-t","jj"],spicy:["s-p-ay1 s-iy","jj"],spider:["s-p-ay1 d-er","nn"],spied:["s-p-ay1-d","vbd vbn"],spiel:["s-p-iy1-l","nn"],spiffing:["s-p-ih1 f-ih-ng","jj"],spiffy:["s-p-ih1 f-iy","jj"],spigot:["s-p-ih1 g-ah-t","nn"],spike:["s-p-ay1-k","nn vb"],spiked:["s-p-ay1-k-t","jj vbn"],spill:["s-p-ih1-l","nn vb vbp"],spillover:["s-p-ih1-l ow v-er","nn"],spin:["s-p-ih1-n","vb nn"],spinach:["s-p-ih1 n-ah-ch","nn"],spinal:["s-p-ay1 n-ah-l","jj nn"],spindle:["s-p-ih1-n d-ah-l","nn"],spine:["s-p-ay1-n","nn"],spineless:["s-p-ay1-n l-ah-s","jj"],spinning:["s-p-ih1 n-ih-ng","vbg jj"],spinoff:["s-p-ih1-n ao-f","nn jj"],spinster:["s-p-ih1-n s-t-er","nn"],spiral:["s-p-ay1 r-ah-l","nn vb"],spiraling:["s-p-ay1 r-ah-l ih-ng","vbg jj"],spire:["s-p-ay1-r","nn"],spirit:["s-p-ih1 r-ah-t","nn vb"],spirited:["s-p-ih1 r-ah t-ah-d","jj vbn"],spiritual:["s-p-ih1 r-ih ch-ah w-ah-l","jj nn"],spirituality:["s-p-ih r-ih ch-ah-w ae1 l-ah t-iy","nn"],spiritually:["s-p-ih1 r-ih ch-ah-w ah l-iy","rb"],spit:["s-p-ih1-t","vb nn vbd"],spite:["s-p-ay1-t","nn vb"],spittle:["s-p-ih1 t-ah-l","nn"],splash:["s-p-l-ae1-sh","nn vb"],splashy:["s-p-l-ae1 sh-iy","jj"],splatter:["s-p-l-ae1-t-er","vb"],spleen:["s-p-l-iy1-n","nn"],splendid:["s-p-l-eh1-n d-ah-d","jj"],splendidly:["s-p-l-eh1-n d-ah-d l-iy","rb"],splendor:["s-p-l-eh1-n d-er","nn"],splice:["s-p-l-ay1-s","nn vb"],splint:["s-p-l-ih1-n-t","nn"],splinter:["s-p-l-ih1-n t-er","nn vb vbp jj"],splintered:["s-p-l-ih1-n t-er-d","jj vbd vbn"],splintery:["s-p-l-ih1-n t-er iy","nn"],split:["s-p-l-ih1-t","nn vbn jj vb vbd vbp"],splitting:["s-p-l-ih1 t-ih-ng","vbg jj"],splurge:["s-p-l-er1-jh","nn"],spoil:["s-p-oy1-l","vb vbp"],spoilage:["s-p-oy1 l-ah-jh","nn"],spoiled:["s-p-oy1-l-d","vbn jj vbd"],spoiler:["s-p-oy1 l-er","nn"],spoke:["s-p-ow1-k","vbd nn"],spoken:["s-p-ow1 k-ah-n","vbn jj"],spokesman:["s-p-ow1-k-s m-ah-n","nn"],spokesperson:["s-p-ow1-k s-p-er s-ah-n","nn"],spokeswoman:["s-p-ow1-k-s w-uh m-ah-n","nn"],sponge:["s-p-ah1-n-jh","nn vbp vb"],spongy:["s-p-ah1-n jh-iy","jj"],sponsor:["s-p-aa1-n s-er","nn vbp vb"],sponsorship:["s-p-aa1-n s-er sh-ih-p","nn"],spontaneity:["s-p-aa-n t-ah n-iy1 ah t-iy","nn"],spontaneous:["s-p-aa-n t-ey1 n-iy ah-s","jj"],spontaneously:["s-p-aa-n t-ey1 n-iy ah-s l-iy","rb"],spoof:["s-p-uw1-f","nn vb"],spook:["s-p-uw1-k","vb vbp"],spooky:["s-p-uw1 k-iy","jj"],spoon:["s-p-uw1-n","nn"],spoonful:["s-p-uw1-n f-uh-l","nn"],sporadic:["s-p-er ae1 d-ih-k","jj"],sporadically:["s-p-er ae1 d-ih-k l-iy","rb"],spore:["s-p-ao1-r","nn"],sport:["s-p-ao1-r-t","nn vb"],sporting:["s-p-ao1-r t-ih-ng","vbg jj nn"],sportsman:["s-p-ao1-r-t-s m-ah-n","nn"],sportsmanship:["s-p-ao1-r-t-s m-ah-n sh-ih-p","nn"],sportswear:["s-p-ao1-r-t s-w-eh-r","nn"],sportswriter:["s-p-ao1-r-t-s r-ay t-er","nn"],sporty:["s-p-ao1-r t-iy","jj"],spot:["s-p-aa1-t","nn jj vb vbp"],spotless:["s-p-aa1-t l-ah-s","jj"],spotlight:["s-p-aa1-t l-ay-t","nn vb"],spotted:["s-p-aa1 t-ah-d","vbd vbn jj"],spotty:["s-p-aa1 t-iy","jj"],spousal:["s-p-aw1 z-ah-l","jj"],spouse:["s-p-aw1-s","nn"],spout:["s-p-aw1-t","nn vb vbp"],spouted:["s-p-aw1 t-ah-d","vbd jj"],sprain:["s-p-r-ey1-n","vb"],sprang:["s-p-r-ae1-ng","vbd"],sprawl:["s-p-r-ao1-l","nn vbp vb"],sprawled:["s-p-r-ao1-l-d","vbn vbd jj"],sprawling:["s-p-r-ao1 l-ih-ng","vbg jj"],spray:["s-p-r-ey1","nn vb"],spread:["s-p-r-eh1-d","nn vbd vbn vbp jj vb"],spreader:["s-p-r-eh1 d-er","nn"],spreadsheet:["s-p-r-eh1-d sh-iy-t","nn"],spree:["s-p-r-iy1","nn"],sprightly:["s-p-r-ay1-t l-iy","jj"],spring:["s-p-r-ih1-ng","nn vb vbp"],springboard:["s-p-r-ih1-ng b-ao-r-d","nn"],springtime:["s-p-r-ih1-ng t-ay-m","nn"],sprinkle:["s-p-r-ih1-ng k-ah-l","vb nn vbp"],sprinkler:["s-p-r-ih1-ng k-l-er","nn"],sprint:["s-p-r-ih1-n-t","nn vb"],sprout:["s-p-r-aw1-t","vbp vb"],spruce:["s-p-r-uw1-s","nn vb"],sprung:["s-p-r-ah1-ng","vbn"],spud:["s-p-ah1-d","nn"],spun:["s-p-ah1-n","vbn vbd"],spunky:["s-p-ah1-ng k-iy","nn"],spur:["s-p-er1","vb nn vbp"],spurious:["s-p-y-uh1 r-iy ah-s","jj"],spurn:["s-p-er1-n","vbp vb"],spurned:["s-p-er1-n-d","vbn vbd jj"],spurt:["s-p-er1-t","nn vb vbp"],sputnik:["s-p-ah1-t n-ih-k","nn"],sputter:["s-p-ah1 t-er","vb vbp"],sputtering:["s-p-ah1 t-er ih-ng","jj"],spy:["s-p-ay1","nn vb"],spyglass:["s-p-ay1 g-l-ae-s","nn"],squabble:["s-k-w-aa1 b-ah-l","nn vb"],squad:["s-k-w-aa1-d","nn"],squadron:["s-k-w-aa1 d-r-ah-n","nn"],squalid:["s-k-w-aa1 l-ah-d","jj"],squall:["s-k-w-ao1-l","nn"],squalor:["s-k-w-aa1 l-er","nn"],squander:["s-k-w-aa1-n d-er","vb"],square:["s-k-w-eh1-r","nn jj rb vb vbp"],squared:["s-k-w-eh1-r-d","jj vbd vbn"],squarely:["s-k-w-eh1-r l-iy","rb"],squash:["s-k-w-aa1-sh","nn vb"],squashed:["s-k-w-aa1-sh-t","jj vbn"],squashy:["s-k-w-aa1 sh-iy","jj"],squat:["s-k-w-aa1-t","jj nn vb"],squatter:["s-k-w-aa1 t-er","nn"],squawk:["s-k-w-ao1-k","vb"],squeak:["s-k-w-iy1-k","nn vb"],squeaky:["s-k-w-iy1 k-iy","jj rb"],squeal:["s-k-w-iy1-l","vb nn"],squeamish:["s-k-w-iy1 m-ih-sh","jj"],squeamishness:["s-k-w-iy1 m-ih-sh n-ah-s","nn"],squeegee:["s-k-w-iy1 jh-iy","nn"],squeeze:["s-k-w-iy1-z","nn vbp vb"],squelch:["s-k-w-eh1-l-ch","vb vbp"],squid:["s-k-w-ih1-d","nn"],squint:["s-k-w-ih1-n-t","vb vbp"],squire:["s-k-w-ay1-r","nn"],squirm:["s-k-w-er1-m","vb"],squirrel:["s-k-w-er1 ah-l","nn vb"],squirt:["s-k-w-er1-t","nn vb"],stab:["s-t-ae1-b","nn"],stabbed:["s-t-ae1-b-d","vbd vbn"],stability:["s-t-ah b-ih1 l-ih t-iy","nn"],stabilization:["s-t-ey b-ah l-ah z-ey1 sh-ah-n","nn"],stabilize:["s-t-ey1 b-ah l-ay-z","vb vbp"],stabilizer:["s-t-ey1 b-ah l-ay z-er","nn"],stable:["s-t-ey1 b-ah-l","jj nn"],staccato:["s-t-ah k-aa1 t-ow","jj"],stack:["s-t-ae1-k","nn vb"],stacker:["s-t-ae1 k-er","nn"],stadium:["s-t-ey1 d-iy ah-m","nn"],staff:["s-t-ae1-f","nn vbp vb"],staffer:["s-t-ae1 f-er","nn"],staffing:["s-t-ae1 f-ih-ng","vbg jj nn"],stag:["s-t-ae1-g","nn jj"],stage:["s-t-ey1-jh","nn vbp vb"],stagecoach:["s-t-ey1-jh k-ow-ch","nn"],stager:["s-t-ey1 jh-er","nn"],stagflation:["s-t-ae-g f-l-ey1 sh-ah-n","nn"],stagger:["s-t-ae1 g-er","vb"],staggered:["s-t-ae1 g-er-d","vbd jj vbn"],staggering:["s-t-ae1 g-er ih-ng","jj vbg"],stagnant:["s-t-ae1-g n-ah-n-t","jj"],stagnate:["s-t-ae1-g-n-ey-t","vb"],stagnation:["s-t-ae-g n-ey1 sh-ah-n","nn"],staid:["s-t-ey1-d","jj vbn"],stain:["s-t-ey1-n","nn vb"],stained:["s-t-ey1-n-d","vbn jj vbd"],stainless:["s-t-ey1-n l-ah-s","jj"],stair:["s-t-eh1-r","nn"],staircase:["s-t-eh1-r k-ey-s","nn"],stairway:["s-t-eh1-r w-ey","nn"],stake:["s-t-ey1-k","nn vb vbp"],stale:["s-t-ey1-l","jj"],stalemate:["s-t-ey1-l m-ey-t","nn"],stalk:["s-t-ao1-k","vb vbp"],stalked:["s-t-ao1-k-t","vbd vbn jj"],stall:["s-t-ao1-l","nn vb"],stalled:["s-t-ao1-l-d","vbn jj vbd"],stallion:["s-t-ae1 l-y-ah-n","nn"],stalwart:["s-t-ao1-l w-er-t","jj nn"],stamina:["s-t-ae1 m-ah n-ah","nn"],stamp:["s-t-ae1-m-p","nn vb"],stampede:["s-t-ae-m p-iy1-d","nn vb vbp"],stance:["s-t-ae1-n-s","nn"],stanch:["s-t-ae1-n-ch","vb jj"],stand:["s-t-ae1-n-d","vb nn vbp"],standard:["s-t-ae1-n d-er-d","jj nn"],standardize:["s-t-ae1-n d-er d-ay-z","vb"],standardized:["s-t-ae1-n d-er d-ay-z-d","jj vbn"],standby:["s-t-ae1-n-d b-ay1","jj nn"],standing:["s-t-ae1-n d-ih-ng","vbg jj nn"],standoff:["s-t-ae1-n d-ao-f","nn"],standout:["s-t-ae1-n-d aw-t","nn"],standpoint:["s-t-ae1-n-d p-oy-n-t","nn"],standstill:["s-t-ae1-n-d s-t-ih-l","jj nn"],standup:["s-t-ae1-n-d ah-p","jj nn"],staple:["s-t-ey1 p-ah-l","nn jj"],stapling:["s-t-ey1 p-ah-l ih-ng","nn"],star:["s-t-aa1-r","nn jj vb"],starboard:["s-t-aa1-r b-er-d","vb"],starch:["s-t-aa1-r-ch","nn vb"],starched:["s-t-aa1-r-ch-t","vbn jj"],starchy:["s-t-aa1-r ch-iy","jj"],stardom:["s-t-aa1-r d-ah-m","nn"],stare:["s-t-eh1-r","vb vbp nn"],stark:["s-t-aa1-r-k","jj rb"],starker:["s-t-aa1-r k-er","jjr"],starkly:["s-t-aa1-r-k l-iy","rb"],starlet:["s-t-aa1-r l-ah-t","nn"],starlight:["s-t-aa1-r l-ay-t","nn"],starring:["s-t-aa1 r-ih-ng","vbg jj"],start:["s-t-aa1-r-t","vb vbp nn rp"],started:["s-t-aa1-r t-ah-d","vbd jj vbn vb"],starter:["s-t-aa1-r t-er","nn jj"],starting:["s-t-aa1-r t-ih-ng","vbg jj nn"],startle:["s-t-aa1-r t-ah-l","vb"],startled:["s-t-aa1-r t-ah-l-d","vbn vbd jj"],startling:["s-t-aa1-r-t l-ih-ng","jj vbg"],startlingly:["s-t-aa1-r-t l-ih-ng l-iy","rb"],startup:["s-t-aa1-r-t ah-p","nn jj"],starvation:["s-t-aa-r v-ey1 sh-ah-n","nn"],starve:["s-t-aa1-r-v","vb"],starving:["s-t-aa1-r v-ih-ng","vbg jj"],stash:["s-t-ae1-sh","vb nn"],stat:["s-t-ae1-t","nn"],state:["s-t-ey1-t","nn jj vb vbp"],stated:["s-t-ey1 t-ah-d","vbn jj vbd"],statehood:["s-t-ey1-t hh-uh-d","nn"],stateless:["s-t-ey1-t l-ih-s","jj"],stately:["s-t-ey1-t l-iy","jj"],statement:["s-t-ey1-t m-ah-n-t","nn"],statesman:["s-t-ey1-t-s m-ah-n","nn"],statesmanlike:["s-t-ah t-eh1-s m-ah-n l-ay-k","jj"],statesmanship:["s-t-ey1-t-s m-ah-n sh-ih-p","nn"],statewide:["s-t-ey1-t w-ay-d","jj rb"],static:["s-t-ae1 t-ih-k","jj nn"],station:["s-t-ey1 sh-ah-n","nn vb"],stationary:["s-t-ey1 sh-ah-n eh r-iy","jj"],stationery:["s-t-ey1 sh-ah-n eh r-iy","nn"],statistic:["s-t-ah t-ih1 s-t-ih-k","nn"],statistical:["s-t-ah t-ih1 s-t-ih k-ah-l","jj"],statistically:["s-t-ah t-ih1 s-t-ih k-ah l-iy","rb"],statistician:["s-t-ae t-ah s-t-ih1 sh-ah-n","nn"],statuary:["s-t-ae1 ch-uw eh r-iy","nn"],statue:["s-t-ae1 ch-uw","nn"],stature:["s-t-ae1 ch-er","nn"],status:["s-t-ae1 t-ah-s","nn"],statute:["s-t-ae1 ch-uw-t","nn"],statutory:["s-t-ae1 ch-ah t-ao r-iy","jj"],staunch:["s-t-ao1-n-ch","jj vb"],staunchest:["s-t-ao1-n ch-ah-s-t","jjs"],staunchly:["s-t-ao1-n-ch l-iy","rb"],stave:["s-t-ey1-v","vb"],stay:["s-t-ey1","vb vbp nn"],stayed:["s-t-ey1-d","vbd jj vbn"],staying:["s-t-ey1 ih-ng","vbg jj nn"],stead:["s-t-eh1-d","nn"],steadfast:["s-t-eh1-d f-ae-s-t","jj rb"],steadfastly:["s-t-eh1-d f-ae-s-t l-iy","rb"],steadfastness:["s-t-eh1-d f-ae-s-t n-ah-s","nn"],steadied:["s-t-eh1 d-iy-d","vbd vbn"],steadier:["s-t-eh1 d-iy er","jjr"],steadily:["s-t-eh1 d-ah l-iy","rb"],steadiness:["s-t-eh1 d-iy n-ih-s","nn"],steady:["s-t-eh1 d-iy","jj rb"],steak:["s-t-ey1-k","nn"],steakhouse:["s-t-ey1-k hh-aw-s","nn"],steal:["s-t-iy1-l","vb vbp"],stealing:["s-t-iy1 l-ih-ng","vbg jj"],stealth:["s-t-eh1-l-th","nn"],steam:["s-t-iy1-m","nn vb"],steamboat:["s-t-iy1-m b-ow-t","nn"],steamer:["s-t-iy1 m-er","nn"],steamily:["s-t-iy1 m-ah l-iy","rb"],steamroller:["s-t-iy1-m r-ow l-er","nn"],steamship:["s-t-iy1-m sh-ih-p","nn"],steed:["s-t-iy1-d","nn"],steel:["s-t-iy1-l","nn jj"],steelmaker:["s-t-iy1-l m-ey k-er","nn"],steelmaking:["s-t-iy1-l m-ey k-ih-ng","nn"],steelworker:["s-t-iy1-l w-er k-er","nn"],steely:["s-t-iy1 l-iy","jj"],steep:["s-t-iy1-p","jj nn vb"],steeper:["s-t-iy1 p-er","jjr nn"],steepest:["s-t-iy1 p-ah-s-t","jjs"],steeply:["s-t-iy1-p l-iy","rb"],steepness:["s-t-iy1-p n-ah-s","nn"],steer:["s-t-ih1-r","vb nn vbp"],steering:["s-t-ih1 r-ih-ng","nn jj vbg"],stein:["s-t-ay1-n","nn"],stellar:["s-t-eh1 l-er","jj"],stem:["s-t-eh1-m","vb nn vbp"],stench:["s-t-eh1-n-ch","nn"],step:["s-t-eh1-p","nn vbp vb"],stepchild:["s-t-eh1-p ch-ay-l-d","nn"],stepchildren:["s-t-eh1-p ch-ih1-l d-r-ah-n","nn"],stepladder:["s-t-eh1-p l-ae d-er","nn"],stepmother:["s-t-eh1-p m-ah dh-er","nn"],steppe:["s-t-eh1-p","nn"],stepping:["s-t-eh1 p-ih-ng","vbg jj"],stepson:["s-t-eh1-p s-ah-n","nn"],stereo:["s-t-eh1 r-iy ow","nn jj"],stereotype:["s-t-eh1 r-iy ah t-ay-p","nn vb"],stereotyped:["s-t-eh1 r-iy ah t-ay-p-t","jj vbn"],stereotypical:["s-t-eh r-iy ow t-ih1 p-ih k-ah-l","jj"],sterile:["s-t-eh1 r-ah-l","jj"],sterility:["s-t-er ih1 l-ih t-iy","nn"],sterilization:["s-t-eh r-ah l-ah z-ey1 sh-ah-n","nn"],sterilize:["s-t-eh1 r-ah l-ay-z","vb"],sterilizer:["s-t-eh1 r-ah l-ay z-er","nn"],sterling:["s-t-er1 l-ih-ng","nn jj"],stern:["s-t-er1-n","jj nn"],sternly:["s-t-er1-n l-iy","rb"],steroid:["s-t-er oy1-d","jj"],stethoscope:["s-t-eh1 th-ah-s k-ow-p","nn"],stew:["s-t-uw1","nn vb"],steward:["s-t-uw1 er-d","nn"],stewardess:["s-t-uw1 er d-ah-s","nn"],stewardship:["s-t-uw1 er-d sh-ih-p","nn"],stewed:["s-t-uw1-d","jj vbd"],stick:["s-t-ih1-k","vb vbp nn"],sticker:["s-t-ih1 k-er","nn"],stickier:["s-t-ih1 k-iy er","jjr"],sticking:["s-t-ih1 k-ih-ng","vbg jj"],stickler:["s-t-ih1 k-ah l-er","nn"],sticky:["s-t-ih1 k-iy","jj"],stiff:["s-t-ih1-f","jj vb"],stiffen:["s-t-ih1 f-ah-n","vb"],stiffening:["s-t-ih1 f-ah-n ih-ng","vbg jj"],stiffer:["s-t-ih1 f-er","jjr"],stiffest:["s-t-ih1 f-ah-s-t","jjs"],stiffly:["s-t-ih1-f l-iy","rb nn"],stiffness:["s-t-ih1-f n-ah-s","nn"],stifle:["s-t-ay1 f-ah-l","vb"],stifling:["s-t-ay1 f-l-ih-ng","vbg jj"],stigma:["s-t-ih1-g m-ah","nn"],stiletto:["s-t-ah l-eh1 t-ow","nn"],still:["s-t-ih1-l","rb jj nn vb"],stillness:["s-t-ih1-l n-ah-s","nn"],stilt:["s-t-ih1-l-t","nn"],stilted:["s-t-ih1-l t-ih-d","jj"],stimulant:["s-t-ih1 m-y-ah l-ah-n-t","nn"],stimulate:["s-t-ih1 m-y-ah l-ey-t","vb vbp"],stimulating:["s-t-ih1 m-y-ah l-ey t-ih-ng","vbg jj"],stimulation:["s-t-ih m-y-ah l-ey1 sh-ah-n","nn"],stimulative:["s-t-ih1 m-y-ah l-ey t-ih-v","jj"],stimulator:["s-t-ih1 m-y-ah l-ey t-er","nn"],stimulus:["s-t-ih1 m-y-ah l-ah-s","nn"],sting:["s-t-ih1-ng","nn vb"],stingier:["s-t-ih1-n jh-iy er","jjr"],stinging:["s-t-ih1 ng-ih-ng","jj vbg"],stingy:["s-t-ih1-n jh-iy","jj"],stink:["s-t-ih1-ng-k","nn vb vbp"],stinking:["s-t-ih1-ng k-ih-ng","vbg jj"],stint:["s-t-ih1-n-t","nn"],stipend:["s-t-ay1 p-ah-n-d","nn"],stipulate:["s-t-ih1 p-y-ah l-ey-t","vbp jj vb"],stipulation:["s-t-ih p-y-ah l-ey1 sh-ah-n","nn"],stir:["s-t-er1","vb vbp nn"],stirling:["s-t-er1 l-ih-ng","jj"],stirring:["s-t-er1 ih-ng","vbg jj nn"],stirrup:["s-t-er1 ah-p","nn"],stitch:["s-t-ih1-ch","nn vb"],stitching:["s-t-ih1 ch-ih-ng","nn vbg"],stock:["s-t-aa1-k","nn vbp jj vb"],stockbroker:["s-t-aa1-k b-r-ow k-er","nn"],stockholder:["s-t-aa1-k hh-ow-l d-er","nn"],stockmarket:["s-t-aa1-k m-aa-r k-ih-t","nn"],stockpile:["s-t-aa1-k p-ay-l","nn vb"],stockpiling:["s-t-aa1-k p-ay l-ih-ng","nn"],stockroom:["s-t-aa1-k r-uw-m","nn"],stocky:["s-t-aa1 k-iy","jj"],stockyard:["s-t-aa1-k y-aa-r-d","nn"],stodgy:["s-t-aa1 jh-iy","jj"],stoicism:["s-t-ow1 ah s-ih z-ah-m","nn"],stoke:["s-t-ow1-k","vb"],stoker:["s-t-ow1 k-er","nn"],stole:["s-t-ow1-l","vbd"],stolen:["s-t-ow1 l-ah-n","vbn jj"],stolid:["s-t-aa1 l-ah-d","jj"],stomach:["s-t-ah1 m-ah-k","nn vb"],stomp:["s-t-aa1-m-p","vb"],stone:["s-t-ow1-n","nn rb vb"],stonewall:["s-t-ow1-n-w-ao-l","vb"],stoneware:["s-t-ow1-n w-eh-r","nn"],stony:["s-t-ow1 n-iy","jj"],stood:["s-t-uh1-d","vbd vbn"],stooge:["s-t-uw1 jh-ih","nn"],stool:["s-t-uw1-l","nn"],stoop:["s-t-uw1-p","vb nn vbp"],stop:["s-t-aa1-p","vb nn vbp"],stopgap:["s-t-aa1-p g-ae-p","nn jj"],stopover:["s-t-aa1-p ow v-er","nn"],stoppage:["s-t-aa1 p-ih-jh","nn"],stopper:["s-t-aa1 p-er","nn"],stopwatch:["s-t-aa1-p w-aa-ch","nn"],storage:["s-t-ao1 r-ah-jh","nn jj"],store:["s-t-ao1-r","nn vb vbp"],storefront:["s-t-ao1-r f-r-aa-n-t","nn"],storehouse:["s-t-ao1-r hh-aw-s","nn"],storekeeper:["s-t-ao1-r k-iy p-er","nn"],storeroom:["s-t-ao1 r-r-uw-m","nn"],storied:["s-t-ao1 r-iy-d","jj"],storm:["s-t-ao1-r-m","nn vb vbp"],stormy:["s-t-ao1-r m-iy","jj"],story:["s-t-ao1 r-iy","nn"],storyline:["s-t-ao1 r-iy l-ay-n","nn"],storyteller:["s-t-ao1 r-iy t-eh l-er","nn"],storytelling:["s-t-ao1 r-iy t-eh l-ih-ng","nn"],stout:["s-t-aw1-t","jj"],stoutly:["s-t-aw1-t l-iy","rb"],stove:["s-t-ow1-v","nn"],stow:["s-t-ow1","vb"],straddle:["s-t-r-ae1 d-ah-l","vb"],straggle:["s-t-r-ae1-g-ah-l","vb"],straggler:["s-t-r-ae1 g-l-er","nn"],straight:["s-t-r-ey1-t","jj rb"],straighten:["s-t-r-ey1 t-ah-n","vb"],straighter:["s-t-r-ey1 t-er","jjr rbr"],straightforward:["s-t-r-ey1-t f-ao1-r w-er-d","jj"],strain:["s-t-r-ey1-n","nn vb vbp"],strained:["s-t-r-ey1-n-d","vbd jj vbn"],strait:["s-t-r-ey1-t","nn"],straitjacket:["s-t-r-ey1-t jh-ae k-ah-t","nn"],strand:["s-t-r-ae1-n-d","nn vb"],strange:["s-t-r-ey1-n-jh","jj"],strangely:["s-t-r-ey1-n-jh l-iy","rb"],strangeness:["s-t-r-ey1-n-jh n-ah-s","nn"],stranger:["s-t-r-ey1-n jh-er","nn jjr"],strangest:["s-t-r-ey1-n jh-ih-s-t","jjs"],strangle:["s-t-r-ae1-ng-g-ah-l","vb"],strangled:["s-t-r-ae1-ng g-ah-l-d","vbn jj"],stranglehold:["s-t-r-ae1-ng g-ah-l hh-ow-l-d","nn"],strangulation:["s-t-r-ae-ng g-y-ah l-ey1 sh-ah-n","nn"],strap:["s-t-r-ae1-p","vb jj"],strapped:["s-t-r-ae1-p-t","vbn vbd jj"],strapping:["s-t-r-ae1 p-ih-ng","jj vbg"],stratagem:["s-t-r-ae1 t-ah jh-ah-m","nn"],strategic:["s-t-r-ah t-iy1 jh-ih-k","jj"],strategically:["s-t-r-ah t-iy1 jh-ih-k l-iy","rb"],strategist:["s-t-r-ae1 t-ih jh-ih-s-t","nn"],strategy:["s-t-r-ae1 t-ah jh-iy","nn"],stratified:["s-t-r-ae1 t-ah f-ay-d","jj vbn"],stratify:["s-t-r-ae1-t-ah-f-ay","vb"],stratosphere:["s-t-r-ae1 t-ah s-f-ih-r","nn"],stratospheric:["s-t-r-ae t-ah s-f-ih1 r-ih-k","jj"],stratum:["s-t-r-ae1 t-ah-m","nn"],straw:["s-t-r-ao1","nn jj"],strawberry:["s-t-r-ao1 b-eh r-iy","nn"],stray:["s-t-r-ey1","jj nn vb vbp"],streak:["s-t-r-iy1-k","nn vb vbp"],stream:["s-t-r-iy1-m","nn vb"],streamer:["s-t-r-iy1 m-er","nn"],streamline:["s-t-r-iy1-m l-ay-n","vb"],streamlined:["s-t-r-iy1-m l-ay-n-d","jj vbd vbn"],street:["s-t-r-iy1-t","nn"],streetcar:["s-t-r-iy1-t k-aa-r","nn"],strength:["s-t-r-eh1-ng-k-th","nn"],strengthen:["s-t-r-eh1-ng th-ah-n","vb vbp"],strengthened:["s-t-r-eh1-ng th-ah-n-d","vbn jj vbd"],strenuous:["s-t-r-eh1 n-y-uw ah-s","jj"],strenuously:["s-t-r-eh1 n-y-uw ah-s l-iy","rb"],stress:["s-t-r-eh1-s","nn vbp vb"],stressed:["s-t-r-eh1-s-t","vbd jj vbn"],stressful:["s-t-r-eh1-s f-ah-l","jj"],stretch:["s-t-r-eh1-ch","nn vbp jj vb"],stretched:["s-t-r-eh1-ch-t","vbd jj vbn"],stretcher:["s-t-r-eh1 ch-er","nn"],strewn:["s-t-r-uw1-n","vbn"],stricken:["s-t-r-ih1 k-ah-n","vbn jj"],strict:["s-t-r-ih1-k-t","jj"],stricter:["s-t-r-ih1-k t-er","jjr"],strictest:["s-t-r-ih1-k t-ah-s-t","jjs"],strictly:["s-t-r-ih1-k-t l-iy","rb"],stricture:["s-t-r-ih1-k ch-er","nn"],stride:["s-t-r-ay1-d","nn vbp vb"],strident:["s-t-r-ay1 d-ah-n-t","jj"],stridently:["s-t-r-ay1 d-ah-n-t l-iy","rb"],strife:["s-t-r-ay1-f","nn"],strike:["s-t-r-ay1-k","nn vb vbp"],strikebreaker:["s-t-r-ay1-k b-r-ey k-er","nn"],strikeout:["s-t-r-ay1-k aw-t","nn"],striker:["s-t-r-ay1 k-er","nn"],striking:["s-t-r-ay1 k-ih-ng","jj vbg"],strikingly:["s-t-r-ay1 k-ih-ng l-iy","rb"],string:["s-t-r-ih1-ng","nn vb"],stringed:["s-t-r-ih1-ng-d","jj"],stringent:["s-t-r-ih1-n jh-ah-n-t","jj"],stringently:["s-t-r-ih1-n jh-ah-n-t l-iy","rb"],stringy:["s-t-r-ih1 ng-iy","jj"],strip:["s-t-r-ih1-p","nn vb vbp"],stripe:["s-t-r-ay1-p","nn"],striped:["s-t-r-ay1-p-t","jj"],stripped:["s-t-r-ih1-p-t","vbn jj vbd"],stripper:["s-t-r-ih1 p-er","nn"],striptease:["s-t-r-ih1-p t-iy-z","nn"],strive:["s-t-r-ay1-v","vb vbp"],strobe:["s-t-r-ow1-b","nn"],strode:["s-t-r-ow1-d","vbd"],stroke:["s-t-r-ow1-k","nn vb"],stroll:["s-t-r-ow1-l","nn vb vbp"],stroller:["s-t-r-ow1 l-er","nn"],strong:["s-t-r-ao1-ng","jj rb"],stronger:["s-t-r-ao1-ng er","jjr rbr"],strongest:["s-t-r-ao1-ng g-ah-s-t","jjs"],stronghold:["s-t-r-ao1-ng hh-ow-l-d","nn"],strongly:["s-t-r-ao1-ng l-iy","rb"],strongman:["s-t-r-ao1-ng m-ae-n","nn"],strove:["s-t-r-ow1-v","vbd"],struck:["s-t-r-ah1-k","vbd vbn"],structural:["s-t-r-ah1-k ch-er ah-l","jj"],structurally:["s-t-r-ah1-k ch-er ah l-iy","rb"],structure:["s-t-r-ah1-k ch-er","nn vb"],structured:["s-t-r-ah1-k ch-er-d","vbn jj vbd"],struggle:["s-t-r-ah1 g-ah-l","nn vbp vb"],struggling:["s-t-r-ah1 g-ah l-ih-ng","vbg jj"],strung:["s-t-r-ah1-ng","vbn vbd"],strut:["s-t-r-ah1-t","nn"],strutting:["s-t-r-ah1 t-ih-ng","vbg jj"],strychnine:["s-t-r-ih1-k n-ay-n","nn"],stub:["s-t-ah1-b","nn vb"],stubble:["s-t-ah1 b-ah-l","jj nn"],stubborn:["s-t-ah1 b-er-n","jj"],stubbornly:["s-t-ah1 b-er-n l-iy","rb"],stubbornness:["s-t-ah1 b-er-n n-ah-s","nn"],stubby:["s-t-ah1 b-iy","jj"],stucco:["s-t-ah1 k-ow","nn"],stuck:["s-t-ah1-k","vbn vbd jj"],stud:["s-t-ah1-d","nn"],studded:["s-t-ah1 d-ih-d","vbn"],student:["s-t-uw1 d-ah-n-t","nn"],studied:["s-t-ah1 d-iy-d","vbn vbd jj"],studio:["s-t-uw1 d-iy ow","nn"],studious:["s-t-uw1 d-iy ah-s","jj"],studiously:["s-t-uw1 d-iy ah-s l-iy","rb"],study:["s-t-ah1 d-iy","nn vbp vb"],stuff:["s-t-ah1-f","nn vb vbp"],stuffed:["s-t-ah1-f-t","vbn jj vbd"],stuffy:["s-t-ah1 f-iy","jj"],stultifying:["s-t-ah1-l t-ah f-ay ih-ng","jj"],stumble:["s-t-ah1-m b-ah-l","vb vbp nn"],stumbling:["s-t-ah1-m b-ah-l ih-ng","vbg jj nn"],stump:["s-t-ah1-m-p","nn vb"],stumpage:["s-t-ah1-m p-ih-jh","nn"],stumping:["s-t-ah1-m p-ih-ng","nn"],stun:["s-t-ah1-n","vb"],stung:["s-t-ah1-ng","vbn vbd"],stunk:["s-t-ah1-ng-k","vbd"],stunned:["s-t-ah1-n-d","vbd vbn jj"],stunning:["s-t-ah1 n-ih-ng","jj"],stunningly:["s-t-ah1 n-ih-ng l-iy","rb"],stunt:["s-t-ah1-n-t","nn vb"],stupendous:["s-t-uw p-eh1-n d-ah-s","jj"],stupid:["s-t-uw1 p-ah-d","jj"],stupidest:["s-t-uw1 p-ih d-ah-s-t","jjs"],stupidity:["s-t-uw p-ih1 d-ih t-iy","nn"],stupor:["s-t-uw1 p-er","nn"],sturdy:["s-t-er1 d-iy","jj"],sturgeon:["s-t-er1 jh-ah-n","nn"],stutter:["s-t-ah1 t-er","nn"],style:["s-t-ay1-l","nn vb"],styling:["s-t-ay1 l-ih-ng","nn"],stylish:["s-t-ay1 l-ih-sh","jj"],stylishly:["s-t-ay1 l-ih-sh l-iy","rb"],stylist:["s-t-ay1 l-ih-s-t","nn"],stylistic:["s-t-ay l-ih1 s-t-ih-k","jj"],stylistically:["s-t-ay l-ih1 s-t-ih-k l-iy","rb"],stylize:["s-t-ay1-l-ay-z","vb"],stylized:["s-t-ay1 l-ay-z-d","jj vbn"],stymie:["s-t-ay1 m-iy","vb"],stymied:["s-t-ay1 m-iy-d","vbn jj"],styrene:["s-t-ay1 r-iy-n","nn"],suave:["s-w-aa1-v","jj"],sub:["s-ah1-b","nn"],subatomic:["s-ah-b ah t-aa1 m-ih-k","jj"],subcommittee:["s-ah1-b k-ah m-ih1 t-iy","nn"],subcompact:["s-ah-b k-aa1-m p-ae-k-t","nn jj"],subconscious:["s-ah-b k-aa1-n sh-ah-s","jj nn"],subconsciously:["s-ah-b k-aa1-n sh-ah-s l-iy","rb"],subcontinent:["s-ah-b k-aa1-n t-ih n-ah-n-t","nn"],subcontract:["s-ah-b k-aa1-n t-r-ae-k-t","vb nn"],subcontractor:["s-ah-b k-aa1-n t-r-ae-k t-er","nn"],subdivision:["s-ah1-b d-ih v-ih zh-ah-n","nn"],subdue:["s-ah-b d-uw1","vb"],subdued:["s-ah-b d-uw1-d","vbn jj vbd"],subgroup:["s-ah1-b g-r-uw-p","nn"],subject:["s-ah-b jh-eh1-k-t","nn jj vb"],subjective:["s-ah-b jh-eh1-k t-ih-v","jj"],subjugate:["s-ah1-b jh-ah g-ey-t","vb"],subjugated:["s-ah1-b jh-ah g-ey t-ih-d","jj"],sublease:["s-ah1-b l-iy-s","nn"],sublet:["s-ah1 b-l-eh-t","vb vbn"],sublime:["s-ah b-l-ay1-m","jj nn"],subliminal:["s-ah-b l-ih1 m-ih n-ah-l","jj"],submachine:["s-ah-b m-ah sh-iy1-n","jj"],submarine:["s-ah1-b m-er iy-n","nn jj"],submerge:["s-ah-b m-er1-jh","vb"],submerged:["s-ah-b m-er1-jh-d","vbn jj"],submission:["s-ah-b m-ih1 sh-ah-n","nn"],submissive:["s-ah-b m-ih1 s-ih-v","jj"],submit:["s-ah-b m-ih1-t","vb vbp"],subordinate:["s-ah b-ao1-r d-ah n-ey-t","jj nn vb"],subordinated:["s-ah b-ao1-r d-ah n-ey t-ih-d","vbn jj vbd"],subpar:["s-ah-b p-aa1-r","jj"],subplot:["s-ah1-b p-l-aa-t","nn"],subpoena:["s-ah p-iy1 n-ah","nn vb"],subscribe:["s-ah-b s-k-r-ay1-b","vb vbp"],subscribed:["s-ah-b s-k-r-ay1-b-d","vbn vbd jj"],subscriber:["s-ah-b s-k-r-ay1 b-er","nn"],subscription:["s-ah-b s-k-r-ih1-p sh-ah-n","nn jj"],subsequent:["s-ah1-b s-ah k-w-ah-n-t","jj"],subsequently:["s-ah1-b s-ah k-w-ah-n-t l-iy","rb"],subservience:["s-ah-b s-er1 v-iy ah-n-s","nn"],subservient:["s-ah-b s-er1 v-iy ah-n-t","jj"],subset:["s-ah1-b s-eh-t","nn"],subside:["s-ah-b s-ay1-d","vb vbp"],subsidence:["s-ah-b s-ay1 d-ah-n-s","nn"],subsidiary:["s-ah-b s-ih1 d-iy eh r-iy","nn jj"],subsidization:["s-ah-b s-ih d-ih z-ey1 sh-ah-n","nn"],subsidize:["s-ah1-b s-ih d-ay-z","vb vbp"],subsidized:["s-ah1-b s-ih d-ay-z-d","jj vbn"],subsidy:["s-ah1-b s-ih d-iy","nn"],subsist:["s-ah-b s-ih1-s-t","vb"],subsistence:["s-ah-b s-ih1 s-t-ah-n-s","nn"],subsoil:["s-ah1-b s-oy-l","nn"],substance:["s-ah1-b s-t-ah-n-s","nn"],substandard:["s-ah-b s-t-ae1-n d-er-d","jj"],substantial:["s-ah-b s-t-ae1-n ch-ah-l","jj"],substantially:["s-ah-b s-t-ae1-n sh-ah l-iy","rb"],substantiate:["s-ah-b s-t-ae1-n ch-iy ey-t","vb"],substantiated:["s-ah-b s-t-ae1-n sh-iy ey t-ih-d","jj"],substantiation:["s-ah-b s-t-ae-n ch-iy ey1 sh-ah-n","nn"],substantive:["s-ah1-b s-t-ah-n t-ih-v","jj nn"],substantively:["s-ah1-b s-t-ah-n t-ih-v l-iy","rb"],substitute:["s-ah1-b s-t-ah t-uw-t","nn jj vb vbp"],substituted:["s-ah1-b s-t-ah t-uw t-ah-d","vbn jj vbd"],substitution:["s-ah-b s-t-ih t-uw1 sh-ah-n","nn"],substrate:["s-ah1-b s-t-r-ey-t","nn"],subsurface:["s-ah1-b s-er f-ah-s","jj"],subsystem:["s-ah1-b s-ih s-t-ah-m","nn"],subterfuge:["s-ah1-b t-er f-y-uw-jh","nn"],subterranean:["s-ah-b t-er ey1 n-iy ah-n","jj"],subtitle:["s-ah1-b t-ay t-ah-l","nn vb"],subtle:["s-ah1 t-ah-l","jj"],subtler:["s-ah1 t-ah-l er","jjr nn"],subtlety:["s-ah1 t-ah-l t-iy","nn"],subtly:["s-ah1 t-ah l-iy","rb"],subtract:["s-ah-b t-r-ae1-k-t","vb vbp"],subtraction:["s-ah-b t-r-ae1-k sh-ah-n","nn"],suburb:["s-ah1 b-er-b","nn"],suburban:["s-ah b-er1 b-ah-n","jj"],suburbanite:["s-ah b-er1 b-ah n-ay-t","jj nn"],suburbia:["s-ah b-er1 b-iy ah","nn"],subversion:["s-ah-b v-er1 zh-ah-n","nn"],subversive:["s-ah-b v-er1 s-ih-v","jj"],subvert:["s-ah-b v-er1-t","vb vbp"],subway:["s-ah1-b w-ey","nn"],subzero:["s-ah-b z-ih1 r-ow","jj"],succeed:["s-ah-k s-iy1-d","vb vbp"],success:["s-ah-k s-eh1-s","nn"],successful:["s-ah-k s-eh1-s f-ah-l","jj"],successfully:["s-ah-k s-eh1-s f-ah l-iy","rb"],succession:["s-ah-k s-eh1 sh-ah-n","nn"],successive:["s-ah-k s-eh1 s-ih-v","jj"],successively:["s-ah-k s-eh1 s-ih-v l-iy","rb"],successor:["s-ah-k s-eh1 s-er","nn"],succinct:["s-ah-k s-ih1-ng-k-t","jj"],succinctly:["s-ah-k s-ih1-ng-k-t l-iy","rb"],succor:["s-ah1 k-er","nn"],succulent:["s-ah1 k-y-ah l-ih-n-t","jj"],succumb:["s-ah k-ah1-m","vb"],such:["s-ah1-ch","jj pdt dt"],suck:["s-ah1-k","vb nn vbp"],sucker:["s-ah1 k-er","nn vb"],suction:["s-ah1-k sh-ah-n","nn"],sudden:["s-ah1 d-ah-n","jj"],suddenly:["s-ah1 d-ah-n l-iy","rb"],suddenness:["s-ah1 d-ah-n n-ah-s","nn"],suds:["s-ah1-d-z","nn"],sue:["s-uw1","vb vbp"],suede:["s-w-ey1-d","nn"],suey:["s-uw1 iy","nn"],suffer:["s-ah1 f-er","vb vbp"],sufferer:["s-ah1 f-er er","nn"],suffering:["s-ah1 f-er ih-ng","vbg jj nn"],suffice:["s-ah f-ay1-s","vb vbp"],sufficiency:["s-ah f-ih1 sh-ah-n s-iy","nn"],sufficient:["s-ah f-ih1 sh-ah-n-t","jj"],sufficiently:["s-ah f-ih1 sh-ah-n-t l-iy","rb"],suffix:["s-ah1 f-ih-k-s","nn"],suffocate:["s-ah1 f-ah k-ey-t","vb"],suffocating:["s-ah1 f-ah k-ey t-ih-ng","vbg jj"],suffocation:["s-ah f-ah k-ey1 sh-ah-n","nn"],suffrage:["s-ah1 f-r-ih-jh","nn"],suffragette:["s-ah f-r-ah jh-eh1-t","nn"],suffuse:["s-ah-f-y-uw1-z","vb"],sugar:["sh-uh1 g-er","nn vb"],sugarcane:["sh-uh1-g er-k ey-n","nn"],sugared:["sh-uh1 g-er-d","jj vbn"],sugary:["sh-uh1 g-er iy","jj"],suggest:["s-ah-g jh-eh1-s-t","vbp vb"],suggested:["s-ah-g jh-eh1 s-t-ah-d","vbd vbn jj"],suggestion:["s-ah-g jh-eh1-s ch-ah-n","nn"],suggestive:["s-ah-g jh-eh1 s-t-ih-v","jj"],suicidal:["s-uw ah s-ay1 d-ah-l","jj"],suicide:["s-uw1 ah s-ay-d","nn"],suit:["s-uw1-t","nn vbp rb vb"],suitability:["s-uw t-ah b-ih1 l-ih t-iy","nn"],suitable:["s-uw1 t-ah b-ah-l","jj"],suitably:["s-uw1 t-ah b-l-iy","rb"],suitcase:["s-uw1-t k-ey-s","nn"],suite:["s-w-iy1-t","nn"],suitor:["s-uw1 t-er","nn"],sulfide:["s-ah1-l f-ay-d","nn"],sulfur:["s-ah1-l f-er","nn"],sulfuric:["s-ah-l f-y-uh1 r-ih-k","jj"],sulk:["s-ah1-l-k","vb"],sullen:["s-ah1 l-ah-n","jj"],sulphur:["s-ah1-l f-er","nn"],sultan:["s-ah1-l t-ah-n","nn"],sultry:["s-ah1-l t-r-iy","jj"],sum:["s-ah1-m","nn vb"],sumac:["s-uw1 m-ae-k","nn"],summarily:["s-ah m-eh1 r-ih l-iy","rb"],summarize:["s-ah1 m-er ay-z","vb"],summary:["s-ah1 m-er iy","nn"],summation:["s-ah m-ey1 sh-ah-n","nn"],summer:["s-ah1 m-er","nn"],summertime:["s-ah1 m-er t-ay-m","nn"],summit:["s-ah1 m-ah-t","nn jj"],summiteer:["s-ah m-ih t-ih1-r","nn"],summitry:["s-ah1 m-ih t-r-iy","nn"],summon:["s-ah1 m-ah-n","vb"],summons:["s-ah1 m-ah-n-z","nn"],sumptuous:["s-ah1-m-p ch-w-ah-s","jj"],sun:["s-ah1-n","nn vb"],sunburn:["s-ah1-n b-er-n","nn vb"],sunder:["s-ah1-n d-er","vb"],sundown:["s-ah1-n d-aw-n","nn"],sundry:["s-ah1-n d-r-iy","jj"],sunflower:["s-ah1-n f-l-aw er","nn"],sung:["s-ah1-ng","vbn"],sunglasses:["s-ah1-n g-l-ae s-ih-z","nn"],sunk:["s-ah1-ng-k","vbn vbd"],sunken:["s-ah1-ng k-ah-n","jj"],sunlight:["s-ah1-n l-ay-t","nn"],sunny:["s-ah1 n-iy","jj"],sunrise:["s-ah1-n r-ay-z","nn"],sunroof:["s-ah1-n r-uw-f","nn"],sunset:["s-ah1-n s-eh-t","nn vb"],sunshine:["s-ah1-n sh-ay-n","nn"],sunshiny:["s-ah1-n sh-ay n-iy","jj"],suntan:["s-ah1-n t-ae-n","nn"],super:["s-uw1 p-er","jj nn"],superb:["s-uh p-er1-b","jj"],superbly:["s-uw1 p-er b-l-iy","rb"],supercharged:["s-uw p-er ch-aa1-r-jh-d","jj"],supercilious:["s-uw p-er s-ih1 l-iy ah-s","jj"],supercollider:["s-uw p-er k-ah l-ay1 d-er","nn"],supercomputer:["s-uw p-er k-ah-m p-y-uw1 t-er","nn"],superconductor:["s-uw1 p-er k-ah-n d-ah-k t-er","nn"],superfast:["s-uw1 p-er f-ae-s-t","jj"],superficial:["s-uw p-er f-ih1 sh-ah-l","jj"],superficially:["s-uw1 p-er f-ih sh-ah-l l-iy","rb"],superfluous:["s-uw1 p-er f-l-w-ah-s","jj"],supergiant:["s-uw p-er jh-ay1 ah-n-t","nn"],superhighway:["s-uw p-er hh-ay1 w-ey","nn"],superhuman:["s-uw p-er hh-y-uw1 m-ah-n","jj"],superimpose:["s-uw-p-er-ah-m-p-ow1-z","vb"],superimposed:["s-uw p-er ah-m p-ow1-z-d","vbn jj"],superintendent:["s-uw p-er ah-n t-eh1-n d-ah-n-t","nn"],superior:["s-uw p-ih1 r-iy er","jj nn"],superiority:["s-uw p-ih r-iy ao1 r-ih t-iy","nn"],superlative:["s-uh p-er1 l-ah t-ih-v","jj"],supermarket:["s-uw1 p-er m-aa-r k-ih-t","nn"],supernatural:["s-uw p-er n-ae1 ch-er ah-l","jj nn"],superpower:["s-uw p-er p-aw1 er","nn"],superregional:["s-uw p-er r-iy1 jh-ah n-ah-l","jj"],supersede:["s-uw p-er s-iy1-d","vb"],supersonic:["s-uw p-er s-aa1 n-ih-k","jj"],superstar:["s-uw p-er s-t-aa1-r","nn"],superstition:["s-uw p-er s-t-ih1 sh-ah-n","nn"],superstitious:["s-uw p-er s-t-ih1 sh-ah-s","jj"],superstore:["s-uw1 p-er s-t-ao-r","nn"],superstructure:["s-uw1 p-er s-t-r-ah-k ch-er","nn"],supertanker:["s-uw1 p-er t-ae-ng k-er","nn"],supervise:["s-uw1 p-er v-ay-z","vb vbp"],supervised:["s-uw1 p-er v-ay-z-d","vbd jj vbn"],supervision:["s-uw p-er v-ih1 zh-ah-n","nn"],supervisor:["s-uw1 p-er v-ay z-er","nn"],supervisory:["s-uw p-er v-ay1 z-er iy","jj"],supervoting:["s-uw p-er v-ow1 t-ih-ng","jj"],supine:["s-ah p-ay1-n","nn"],supper:["s-ah1 p-er","nn"],supplant:["s-ah p-l-ae1-n-t","vb"],supple:["s-ah1 p-ah-l","jj"],supplement:["s-ah1 p-l-ah m-ah-n-t","nn vbp vb"],supplemental:["s-ah p-l-ah m-eh1-n t-ah-l","jj"],supplementary:["s-ah p-l-ah m-eh1-n t-er iy","jj nn"],supplied:["s-ah p-l-ay1-d","vbn vbd"],supplier:["s-ah p-l-ay1 er","nn"],supply:["s-ah p-l-ay1","nn vbp vb"],support:["s-ah p-ao1-r-t","nn vb vbp"],supportable:["s-ah p-ao1-r t-ah b-ah-l","jj"],supported:["s-ah p-ao1-r t-ah-d","vbn jj vbd"],supporter:["s-ah p-ao1-r t-er","nn"],supporting:["s-ah p-ao1-r t-ih-ng","vbg jj"],supportive:["s-ah p-ao1-r t-ih-v","jj"],suppose:["s-ah p-ow1-z","vbp vb"],supposed:["s-ah p-ow1-z-d","vbn jj vbd"],supposedly:["s-ah p-ow1 z-ah-d l-iy","rb"],suppress:["s-ah p-r-eh1-s","vb vbp"],suppressant:["s-ah p-r-eh1 s-ah-n-t","nn"],suppressed:["s-ah p-r-eh1-s-t","vbn jj vbd"],suppression:["s-ah p-r-eh1 sh-ah-n","nn"],suppressor:["s-ah p-r-eh1 s-er","nn"],supra:["s-uw1 p-r-ah","rb"],supremacy:["s-ah p-r-eh1 m-ah s-iy","nn"],supreme:["s-ah p-r-iy1-m","nn jj"],supremely:["s-uw p-r-iy1 m-ah l-iy","rb"],surcharge:["s-er ch-aa1-r-jh","nn"],sure:["sh-uh1-r","jj pdt rb uh"],surely:["sh-uh1-r l-iy","rb"],surest:["sh-uh1 r-ih-s-t","jjs"],surf:["s-er1-f","nn vb vbp"],surface:["s-er1 f-ah-s","nn vb vbp"],surfaceness:["s-er1 f-ah-s n-ah-s","nn"],surfactant:["s-er f-ae1-k t-ah-n-t","nn"],surfboard:["s-er1-f b-ao-r-d","nn"],surfeit:["s-er1 f-ah-t","nn"],surfer:["s-er1 f-er","nn"],surfing:["s-er1 f-ih-ng","nn"],surge:["s-er1-jh","nn vb"],surgeon:["s-er1 jh-ah-n","nn"],surgery:["s-er1 jh-er iy","nn"],surgical:["s-er1 jh-ih k-ah-l","jj"],surgically:["s-er1 jh-ih k-ah l-iy","rb"],surging:["s-er1 jh-ih-ng","vbg jj"],surly:["s-er1 l-iy","jj"],surmise:["s-er m-ay1-z","vb"],surmount:["s-er m-aw1-n-t","vb"],surname:["s-er1 n-ey-m","nn"],surpass:["s-er p-ae1-s","vb vbp"],surplus:["s-er1-p l-ah-s","nn jj"],surprise:["s-er p-r-ay1-z","nn jj rb vb"],surprised:["s-er p-r-ay1-z-d","vbn vbd jj"],surprising:["s-er p-r-ay1 z-ih-ng","jj vbg"],surprisingly:["s-er p-r-ay1 z-ih-ng l-iy","rb"],surreal:["s-er iy1-l","jj"],surrealism:["s-er iy1 l-ih z-ah-m","nn"],surrealistic:["s-er iy l-ih1 s-t-ih-k","jj"],surrender:["s-er eh1-n d-er","nn vbp vb"],surreptitious:["s-er ah-p t-ih1 sh-ah-s","jj"],surreptitiously:["s-er ah-p t-ih1 sh-ah-s l-iy","rb"],surrogacy:["s-er1 ah g-ah s-iy","nn"],surrogate:["s-er1 ah g-ah-t","nn"],surround:["s-er aw1-n-d","vbp vb"],surrounding:["s-er aw1-n d-ih-ng","vbg jj"],surtax:["s-er1 t-ae-k-s","nn"],surveillance:["s-er v-ey1 l-ah-n-s","nn"],survey:["s-er v-ey1","nn vb vbp"],surveyor:["s-er v-ey1 er","nn"],survivable:["s-er v-ay1 v-ah b-ah-l","jj"],survival:["s-er v-ay1 v-ah-l","nn"],survivalist:["s-er v-ay1 v-ah l-ih-s-t","nn"],survive:["s-er v-ay1-v","vb vbp"],survivor:["s-er v-ay1 v-er","nn"],susceptibility:["s-ah s-eh-p t-ah b-ih1 l-ah t-iy","nn"],susceptible:["s-ah s-eh1-p t-ah b-ah-l","jj nn"],sushi:["s-uw1 sh-iy","nn"],suspect:["s-ah s-p-eh1-k-t","vbp jj nn vb"],suspected:["s-ah s-p-eh1-k t-ah-d","vbn vbd jj"],suspend:["s-ah s-p-eh1-n-d","vb vbp"],suspended:["s-ah s-p-eh1-n d-ah-d","vbn jj vbd"],suspender:["s-ah s-p-eh1-n d-er","nn"],suspense:["s-ah s-p-eh1-n-s","nn"],suspenseful:["s-ah s-p-eh1-n-s f-ah-l","jj"],suspension:["s-ah s-p-eh1-n sh-ah-n","nn"],suspicion:["s-ah s-p-ih1 sh-ah-n","nn"],suspicious:["s-ah s-p-ih1 sh-ah-s","jj"],suspiciously:["s-ah s-p-ih1 sh-ah-s l-iy","rb"],sustain:["s-ah s-t-ey1-n","vb vbp"],sustainability:["s-ah s-t-ey n-ah b-ih1 l-ih t-iy","nn"],sustainable:["s-ah s-t-ey1 n-ah b-ah-l","jj"],sustained:["s-ah s-t-ey1-n-d","vbn vbd jj"],sustenance:["s-ah1 s-t-ah n-ah-n-s","nn"],suture:["s-uw1 ch-er","nn"],svelte:["s-v-eh1-l-t","jj"],swab:["s-w-aa1-b","vb"],swagger:["s-w-ae1 g-er","nn vb"],swallow:["s-w-aa1 l-ow","vb nn vbp"],swam:["s-w-ae1-m","vbd"],swami:["s-w-aa1 m-iy","nn"],swamp:["s-w-aa1-m-p","nn vb"],swampy:["s-w-aa1-m p-iy","jj"],swan:["s-w-aa1-n","nn"],swank:["s-w-ae1-ng-k","jj"],swanky:["s-w-aa1-ng k-iy","jj"],swap:["s-w-aa1-p","nn vbp vb"],swarm:["s-w-ao1-r-m","nn vb"],swart:["s-w-ao1-r-t","jj"],swarthy:["s-w-ao1-r dh-iy","jj"],swashbuckling:["s-w-aa1-sh b-ah k-l-ih-ng","jj"],swat:["s-w-aa1-t","nn"],swatch:["s-w-aa1-ch","nn"],swath:["s-w-aa1-th","nn"],swathe:["s-w-aa1-dh","vb"],sway:["s-w-ey1","vb vbp nn"],swear:["s-w-eh1-r","vb vbp"],sweat:["s-w-eh1-t","nn vbd vbp vb"],sweater:["s-w-eh1 t-er","nn"],sweatshirt:["s-w-eh1-t sh-er-t","nn"],sweatshop:["s-w-eh1-t sh-aa-p","nn"],sweaty:["s-w-eh1 t-iy","jj"],sweep:["s-w-iy1-p","nn vb"],sweeper:["s-w-iy1 p-er","nn"],sweeping:["s-w-iy1 p-ih-ng","vbg jj nn"],sweepstakes:["s-w-iy1-p s-t-ey-k-s","nn"],sweet:["s-w-iy1-t","jj"],sweeten:["s-w-iy1 t-ah-n","vb"],sweetened:["s-w-iy1 t-ah-n-d","vbn vbd jj"],sweetener:["s-w-iy1 t-ah-n er","nn"],sweetening:["s-w-iy1 t-ah-n ih-ng","nn"],sweeter:["s-w-iy1 t-er","jjr"],sweetest:["s-w-iy1 t-ah-s-t","jjs"],sweetheart:["s-w-iy1-t hh-aa-r-t","nn jj"],sweetly:["s-w-iy1-t l-iy","rb"],sweetness:["s-w-iy1-t n-ah-s","nn"],swell:["s-w-eh1-l","vb vbp jj nn"],swelled:["s-w-eh1-l-d","vbd vbn jj"],swelling:["s-w-eh1 l-ih-ng","vbg jj nn"],sweltering:["s-w-eh1-l t-er ih-ng","jj"],swept:["s-w-eh1-p-t","vbd jj vbn"],swerve:["s-w-er1-v","vbp nn vb"],swift:["s-w-ih1-f-t","jj nn rb"],swiftest:["s-w-ih1-f t-ah-s-t","jjs"],swiftly:["s-w-ih1-f-t l-iy","rb"],swiftness:["s-w-ih1-f-t n-ah-s","nn"],swig:["s-w-ih1-g","nn"],swim:["s-w-ih1-m","vb vbp nn"],swimmer:["s-w-ih1 m-er","nn"],swimming:["s-w-ih1 m-ih-ng","vbg jj nn"],swimsuit:["s-w-ih1-m s-uw-t","nn"],swindle:["s-w-ih1-n-d-ah-l","vb"],swindler:["s-w-ih1-n-d l-er","nn"],swine:["s-w-ay1-n","nn"],swing:["s-w-ih1-ng","nn vbp jj vb"],swinger:["s-w-ih1 ng-er","nn"],swinging:["s-w-ih1 ng-ih-ng","vbg jj"],swipe:["s-w-ay1-p","nn vb"],swirl:["s-w-er1-l","nn vb"],swish:["s-w-ih1-sh","vb"],switch:["s-w-ih1-ch","nn vb vbp"],switchboard:["s-w-ih1-ch b-ao-r-d","nn"],switched:["s-w-ih1-ch-t","vbd vbn jj"],switcher:["s-w-ih1 ch-er","nn"],swivel:["s-w-ih1 v-ah-l","jj nn vb"],swollen:["s-w-ow1 l-ah-n","jj vbn"],swoon:["s-w-uw1-n","nn"],swooning:["s-w-uw1 n-ih-ng","nn"],swoop:["s-w-uw1-p","nn vb"],swoops:["s-w-uw1-p-s","nn vbz"],sword:["s-ao1-r-d","nn"],swordfish:["s-ao1-r-d f-ih-sh","nn"],swore:["s-w-ao1-r","vbd"],sworn:["s-w-ao1-r-n","vbn jj"],swum:["s-w-ah1-m","vbn"],swung:["s-w-ah1-ng","vbd vbn"],sycamore:["s-ih1 k-ah m-ao-r","nn"],sycophantic:["s-ih k-ah f-ae1-n t-ih-k","jj"],syllable:["s-ih1 l-ah b-ah-l","nn"],sylvan:["s-ih1-l v-ah-n","jj"],symbiotic:["s-ih-m b-iy aa1 t-ih-k","jj"],symbol:["s-ih1-m b-ah-l","nn"],symbolic:["s-ih-m b-aa1 l-ih-k","jj"],symbolically:["s-ih-m b-aa1 l-ih k-ah l-iy","rb"],symbolism:["s-ih1-m b-ah l-ih z-ah-m","nn"],symbolist:["s-ih1-m b-ah l-ah-s-t","nn"],symbolize:["s-ih1-m b-ah l-ay-z","vb vbp"],symmetrical:["s-ah m-eh1 t-r-ih k-ah-l","jj"],symmetry:["s-ih1 m-ah t-r-iy","nn"],sympathetic:["s-ih-m p-ah th-eh1 t-ih-k","jj"],sympathetically:["s-ih-m p-ah th-eh1 t-ih k-ah l-iy","rb"],sympathize:["s-ih1-m p-ah th-ay-z","vbp vb"],sympathizer:["s-ih1-m p-ah th-ay z-er","nn"],sympathy:["s-ih1-m p-ah th-iy","nn"],symphonic:["s-ih-m f-aa1 n-ih-k","jj"],symphony:["s-ih1-m f-ah n-iy","nn"],symposium:["s-ih-m p-ow1 z-iy ah-m","nn"],symptom:["s-ih1-m-p t-ah-m","nn"],symptomatic:["s-ih-m-p t-ah m-ae1 t-ih-k","jj"],synagogue:["s-ih1 n-ah g-ao-g","nn"],sync:["s-ih1-ng-k","nn"],synchronize:["s-ih1-ng-k-r-ah-n-ay-z","vb"],synchronized:["s-ih1-ng k-r-ah n-ay-z-d","vbn jj"],syndicate:["s-ih1-n d-ih k-ah-t","nn vb"],syndicated:["s-ih1-n d-ih k-ey t-ih-d","vbn vbd jj"],syndication:["s-ih-n d-ih k-ey1 sh-ah-n","nn"],syndicator:["s-ih1-n d-ih k-ey t-er","nn"],syndrome:["s-ih1-n d-r-ow-m","nn"],synergistic:["s-ih n-er jh-ih1 s-t-ih-k","jj"],synergy:["s-ih1 n-er jh-iy","nn"],synonym:["s-ih1 n-ah n-ih-m","nn"],synonymous:["s-ah n-aa1 n-ah m-ah-s","jj"],synopsis:["s-ih n-aa1-p s-ih-s","nn"],synthesis:["s-ih1-n th-ah s-ah-s","nn"],synthesize:["s-ih1-n th-ah s-ay-z","vb"],synthesizer:["s-ih1-n th-ah s-ay z-er","nn"],synthetic:["s-ih-n th-eh1 t-ih-k","jj nn"],syringe:["s-er ih1-n-jh","nn"],syrup:["s-er1 ah-p","nn"],system:["s-ih1 s-t-ah-m","nn"],systematic:["s-ih s-t-ah m-ae1 t-ih-k","jj"],systematically:["s-ih s-t-ah m-ae1 t-ih-k l-iy","rb"],systemic:["s-ih-s t-eh1 m-ih-k","jj"],systemwide:["s-ih1 s-t-ah-m w-ay-d","jj"],tab:["t-ae1-b","nn"],tabby:["t-ae1 b-iy","jj nn"],table:["t-ey1 b-ah-l","nn vb"],tableau:["t-ah b-l-ow1","nn"],tablecloth:["t-ey1 b-ah-l k-l-ao-th","nn"],tablespoon:["t-ey1 b-ah-l s-p-uw-n","nn"],tablet:["t-ae1 b-l-ah-t","nn"],tableware:["t-ey1 b-ah-l w-eh-r","nn"],tabling:["t-ey1 b-ah-l ih-ng","vbg jj nn"],tabloid:["t-ae1 b-l-oy-d","nn jj"],taboo:["t-ae b-uw1","jj nn vb"],tabulate:["t-ae1 b-y-ah l-ey-t","vb"],tabulated:["t-ae1 b-y-ah l-ey t-ih-d","vbn jj vbd"],tabulation:["t-ae b-y-ah l-ey1 sh-ah-n","nn"],tacit:["t-ae1 s-ih-t","jj"],tacitly:["t-ae1 s-ih-t l-iy","rb"],tack:["t-ae1-k","nn vb vbp"],tackle:["t-ae1 k-ah-l","vb vbp nn"],tacky:["t-ae1 k-iy","jj"],taco:["t-aa1 k-ow","nn"],tact:["t-ae1-k-t","nn"],tactful:["t-ae1-k-t f-ah-l","jj"],tactic:["t-ae1-k t-ih-k","nn"],tactical:["t-ae1-k t-ih k-ah-l","jj"],tactically:["t-ae1-k t-ih k-ah l-iy","rb"],tactician:["t-ae-k t-ih1 sh-ah-n","nn"],tad:["t-ae1-d","nn rb"],tadpole:["t-ae1-d p-ow-l","nn"],taffeta:["t-ae1 f-ah t-ah","nn"],taffy:["t-ae1 f-iy","jj"],tag:["t-ae1-g","nn vb"],tagged:["t-ae1-g-d","vbn vbd jj"],tagline:["t-ae1 g-l-ay-n","nn"],tail:["t-ey1-l","nn jj vb"],tailgate:["t-ey1-l g-ey-t","nn"],tailor:["t-ey1 l-er","vb nn"],tailored:["t-ey1 l-er-d","vbn jj"],tailpipe:["t-ey1-l p-ay-p","nn"],tailspin:["t-ey1-l s-p-ih-n","nn"],taint:["t-ey1-n-t","nn vb vbp"],tainted:["t-ey1-n t-ih-d","vbn vbd jj"],take:["t-ey1-k","vb nn vbp"],taken:["t-ey1 k-ah-n","vbn vbg"],takeoff:["t-ey1-k ao-f","nn"],takeout:["t-ey1-k aw-t","nn"],takeover:["t-ey1-k ow v-er","nn"],taker:["t-ey1 k-er","nn"],tale:["t-ey1-l","nn"],talent:["t-ae1 l-ah-n-t","nn"],talented:["t-ae1 l-ah-n t-ah-d","jj"],talk:["t-ao1-k","vb vbp nn"],talkative:["t-ao1 k-ah t-ih-v","jj"],talker:["t-ao1 k-er","nn"],talky:["t-ao1 k-iy","jj"],tall:["t-ao1-l","jj"],taller:["t-ao1 l-er","jjr"],tallest:["t-ao1 l-ih-s-t","jjs"],tallied:["t-ae1 l-iy-d","vbn vbd"],tallow:["t-ae1 l-ow","nn"],tally:["t-ae1 l-iy","nn vbp vb"],tallyho:["t-ae l-iy hh-ow1","nn"],tam:["t-ae1-m","nn"],tambourine:["t-ae-m b-er iy1-n","nn"],tame:["t-ey1-m","jj vb"],tamer:["t-ey1 m-er","jjr"],tamper:["t-ae1-m p-er","vb"],tampon:["t-ae1-m p-aa-n","nn"],tan:["t-ae1-n","jj nn"],tandem:["t-ae1-n d-ah-m","nn jj"],tang:["t-ae1-ng","nn"],tangent:["t-ae1-n jh-ah-n-t","jj nn"],tangential:["t-ae-n jh-eh1-n ch-ah-l","jj"],tangible:["t-ae1-n jh-ah b-ah-l","jj"],tangle:["t-ae1-ng g-ah-l","nn vbp vb"],tangled:["t-ae1-ng g-ah-l-d","jj vbd vbn"],tango:["t-ae1-ng g-ow","nn"],tank:["t-ae1-ng-k","nn vb"],tanker:["t-ae1-ng k-er","nn"],tanned:["t-ae1-n-d","jj vbn"],tanning:["t-ae1 n-ih-ng","nn"],tansy:["t-ae1-n z-iy","nn"],tantalize:["t-ae1-n-t-ah-l-ay-z","vb"],tantalizing:["t-ae1-n t-ah l-ay z-ih-ng","vbg jj"],tantamount:["t-ae1-n t-ah m-aw-n-t","jj"],tantrum:["t-ae1-n t-r-ah-m","nn"],tap:["t-ae1-p","vb nn vbp"],tape:["t-ey1-p","nn vb vbp"],taped:["t-ey1-p-t","vbn jj vbd"],taper:["t-ey1 p-er","vb nn"],tapered:["t-ey1 p-er-d","jj vbn"],tapestry:["t-ae1 p-ah-s t-r-iy","nn"],tapped:["t-ae1-p-t","vbd vbn"],tar:["t-aa1-r","nn"],tardiness:["t-aa1-r d-iy n-ah-s","nn"],tardy:["t-aa1-r d-iy","jj"],target:["t-aa1-r g-ah-t","nn vbp vb"],targeted:["t-aa1-r g-ah t-ih-d","vbn vbd jj"],tariff:["t-eh1 r-ah-f","nn"],tarmac:["t-aa1-r m-ae-k","nn"],tarnish:["t-aa1-r n-ih-sh","vb"],tarnished:["t-aa1-r n-ih-sh-t","vbn jj vbd"],tarpon:["t-aa1-r p-ah-n","nn"],tarred:["t-aa1-r-d","vbn vbd"],tarry:["t-eh1 r-iy","vb"],tart:["t-aa1-r-t","jj nn"],tartan:["t-aa1-r t-ah-n","nn"],task:["t-ae1-s-k","nn vb"],taskmaster:["t-ae1-s-k m-ae s-t-er","nn"],tassel:["t-ae1 s-ah-l","nn"],taste:["t-ey1-s-t","nn vb vbp"],tasteful:["t-ey1-s-t f-ah-l","jj"],tastefully:["t-ey1-s-t f-ah l-iy","rb"],tasteless:["t-ey1-s-t l-ah-s","jj"],tastier:["t-ey1 s-t-iy er","jjr"],tasty:["t-ey1 s-t-iy","jj"],tat:["t-ae1-t","vb"],tatter:["t-ae1-t-er","vb"],tattered:["t-ae1 t-er-d","jj vbn"],tattoo:["t-ae t-uw1","nn vb"],taught:["t-ao1-t","vbn vbd"],taunt:["t-ao1-n-t","nn vb"],taut:["t-ao1-t","jj rb"],tavern:["t-ae1 v-er-n","nn"],tawdry:["t-ao1 d-r-iy","jj"],tax:["t-ae1-k-s","nn vb vbp"],taxable:["t-ae1-k s-ah b-ah-l","jj"],taxation:["t-ae-k s-ey1 sh-ah-n","nn"],taxed:["t-ae1-k-s-t","vbn jj vbd"],taxi:["t-ae1-k s-iy","nn vb"],taxicab:["t-ae1-k s-iy k-ae-b","nn"],taxing:["t-ae1-k s-ih-ng","vbg jj nn"],taxpayer:["t-ae1-k s-p-ey er","nn"],taxpaying:["t-ae1-k s-p-ey ih-ng","jj"],tea:["t-iy1","nn"],teach:["t-iy1-ch","vb vbp"],teacher:["t-iy1 ch-er","nn"],team:["t-iy1-m","nn vb vbp"],teammate:["t-iy1 m-ey-t","nn"],teamster:["t-iy1-m s-t-er","nn"],teamwork:["t-iy1-m w-er-k","nn"],teapot:["t-iy1 p-aa-t","nn"],tear:["t-eh1-r","vb vbp nn"],tearfully:["t-ih1-r f-ah l-iy","rb"],tease:["t-iy1-z","vb nn vbp"],teaser:["t-iy1 z-er","nn"],teasing:["t-iy1 z-ih-ng","jj vbg"],teaspoon:["t-iy1 s-p-uw-n","nn"],teat:["t-iy1-t","nn"],technical:["t-eh1-k n-ih k-ah-l","jj"],technicality:["t-eh-k n-ih k-ae1 l-ih t-iy","nn"],technically:["t-eh1-k n-ih k-ah l-iy","rb"],technician:["t-eh-k n-ih1 sh-ah-n","nn"],technique:["t-eh-k n-iy1-k","nn"],technocrat:["t-eh1-k n-ah k-r-ae-t","nn"],technocratic:["t-eh-k n-ah k-r-ae1 t-ih-k","jj"],technological:["t-eh-k n-ah l-aa1 jh-ih k-ah-l","jj"],technologically:["t-eh-k n-ah l-aa1 jh-ih k-ah l-iy","rb"],technologist:["t-eh-k n-aa1 l-ah jh-ih-s-t","nn"],technology:["t-eh-k n-aa1 l-ah jh-iy","nn"],teddy:["t-eh1 d-iy","nn"],tedious:["t-iy1 d-iy ah-s","jj"],tediously:["t-iy1 d-iy ah-s l-iy","rb"],tedium:["t-iy1 d-iy ah-m","nn"],tee:["t-iy1","nn vb"],teem:["t-iy1-m","vb"],teen:["t-iy1-n","jj nn"],teenage:["t-iy1 n-ey-jh","jj"],teenager:["t-iy1-n ey jh-er","nn"],teensy:["t-iy1-n s-iy","jj"],teeter:["t-iy1-t-er","vb"],teetering:["t-iy1 t-er ih-ng","vbg jj"],telecast:["t-eh1 l-ah k-ae-s-t","nn"],telecom:["t-eh1 l-ah k-aa-m","nn"],telecommunications:["t-eh l-ah k-ah m-y-uw n-ah k-ey1 sh-ah-n-z","nn"],telegram:["t-eh1 l-ah g-r-ae-m","nn"],telegraph:["t-eh1 l-ah g-r-ae-f","nn vbp vb"],telemarketer:["t-eh l-ah m-aa1-r k-ih t-er","nn"],telemarketing:["t-eh l-ah m-aa1-r k-ah t-ih-ng","nn"],telepathy:["t-ah l-eh1 p-ah th-iy","nn"],telephone:["t-eh1 l-ah f-ow-n","nn vb"],telescope:["t-eh1 l-ah s-k-ow-p","nn vb"],teletype:["t-eh1 l-ah t-ay-p","nn"],televise:["t-eh1-l-ah-v-ay-z","vb"],televised:["t-eh1 l-ah v-ay-z-d","vbn jj"],televising:["t-eh1 l-ah v-ay z-ih-ng","nn"],television:["t-eh1 l-ah v-ih zh-ah-n","nn"],televison:["t-eh1 l-ih v-ih zh-ah-n","nn"],tell:["t-eh1-l","vb vbp"],teller:["t-eh1 l-er","nn"],tellingly:["t-eh1 l-ih-ng l-iy","rb"],telltale:["t-eh1-l t-ey-l","jj nn"],temblor:["t-eh1-m b-l-er","nn"],temerity:["t-ah m-eh1 r-ah t-iy","nn"],temp:["t-eh1-m-p","nn"],temper:["t-eh1-m p-er","nn vb"],tempera:["t-eh1-m p-er ah","nn"],temperament:["t-eh1-m p-r-ah m-ah-n-t","nn"],temperamental:["t-eh-m p-r-ah m-eh1-n t-ah-l","jj"],temperance:["t-eh1-m p-er ah-n-s","nn"],temperate:["t-eh1-m p-r-ah-t","jj"],temperature:["t-eh1-m p-r-ah ch-er","nn"],tempest:["t-eh1-m p-ah-s-t","nn"],tempestuous:["t-eh-m p-eh1-s ch-uw ah-s","jj"],template:["t-eh1-m p-l-ah-t","nn"],temple:["t-eh1-m p-ah-l","nn"],tempo:["t-eh1-m p-ow","nn"],temporal:["t-eh1-m p-er ah-l","jj nn"],temporally:["t-eh1-m p-er ah l-iy","rb"],temporarily:["t-eh-m p-er eh1 r-ah l-iy","rb"],temporary:["t-eh1-m p-er eh r-iy","jj"],tempore:["t-eh1-m p-ao-r","nn"],temporize:["t-eh1-m-p-er-ay-z","vb"],tempt:["t-eh1-m-p-t","vb vbp"],temptation:["t-eh-m t-ey1 sh-ah-n","nn"],tempting:["t-eh1-m-p t-ih-ng","jj"],ten:["t-eh1-n","nn"],tenable:["t-eh1 n-ah b-ah-l","jj"],tenacious:["t-ah n-ey1 sh-ah-s","jj"],tenaciously:["t-ah n-ey1 sh-ah-s l-iy","rb"],tenacity:["t-ah n-ae1 s-ih t-iy","nn"],tenancy:["t-eh1 n-ah-n s-iy","nn"],tenant:["t-eh1 n-ah-n-t","nn"],tend:["t-eh1-n-d","vbp vb"],tended:["t-eh1-n d-ah-d","vbd vbn jj"],tendency:["t-eh1-n d-ah-n s-iy","nn"],tendentious:["t-eh-n d-eh1-n sh-ah-s","jj"],tender:["t-eh1-n d-er","nn vbp jj vb"],tendered:["t-eh1-n d-er-d","vbn jj vbd"],tenderly:["t-eh1-n d-er l-iy","rb"],tenderness:["t-eh1-n d-er n-ah-s","nn"],tendon:["t-eh1-n d-ah-n","nn"],tenement:["t-eh1 n-ah m-ah-n-t","nn"],tenet:["t-eh1 n-ah-t","nn"],tenfold:["t-eh1-n f-ow-l-d","rb jj"],tennis:["t-eh1 n-ah-s","nn"],tenor:["t-eh1 n-er","nn"],tense:["t-eh1-n-s","jj nn"],tensely:["t-eh1-n-s l-iy","rb"],tensile:["t-eh1-n s-ah-l","jj"],tension:["t-eh1-n sh-ah-n","nn"],tent:["t-eh1-n-t","nn"],tentacle:["t-eh1-n t-ah k-ah-l","nn"],tentative:["t-eh1-n t-ah t-ih-v","jj nn"],tentatively:["t-eh1-n t-ah t-ih-v l-iy","rb"],tenth:["t-eh1-n-th","jj nn"],tenting:["t-eh1-n t-ih-ng","nn"],tenuous:["t-eh1 n-y-ah-w ah-s","jj"],tenure:["t-eh1 n-y-er","nn"],tepid:["t-eh1 p-ih-d","jj"],tequila:["t-ah k-iy1 l-ah","nn"],term:["t-er1-m","nn vb vbp"],terminal:["t-er1 m-ah n-ah-l","nn jj"],terminate:["t-er1 m-ah n-ey-t","vb vbp"],termination:["t-er m-ah n-ey1 sh-ah-n","nn"],terminology:["t-er m-ih n-aa1 l-ah jh-iy","nn"],terminus:["t-er1 m-ih n-ah-s","nn"],termite:["t-er1 m-ay-t","nn"],terrace:["t-eh1 r-ah-s","nn vb"],terrain:["t-er ey1-n","nn"],terrestrial:["t-er eh1-s t-r-iy ah-l","jj"],terrible:["t-eh1 r-ah b-ah-l","jj"],terribly:["t-eh1 r-ah b-l-iy","rb"],terrier:["t-eh1 r-iy er","nn"],terrific:["t-er ih1 f-ih-k","jj"],terrified:["t-eh1 r-ah f-ay-d","vbn jj vbd"],terrifies:["t-eh1 r-ah f-ay-z","vbz"],terrify:["t-eh1 r-ah f-ay","vb"],terrifying:["t-eh1 r-ah f-ay ih-ng","jj vbg"],territorial:["t-eh r-ih t-ao1 r-iy ah-l","jj nn"],territory:["t-eh1 r-ih t-ao r-iy","nn"],terror:["t-eh1 r-er","nn"],terrorism:["t-eh1 r-er ih z-ah-m","nn"],terrorist:["t-eh1 r-er ih-s-t","jj nn"],terroristic:["t-eh r-er ih1 s-t-ih-k","jj"],terrorize:["t-eh1 r-er ay-z","vb"],terry:["t-eh1 r-iy","nn"],terse:["t-er1-s","jj"],tersely:["t-er1-s l-iy","rb"],tertiary:["t-er1 sh-er iy","jj"],test:["t-eh1-s-t","nn vbp vb"],testament:["t-eh1 s-t-ah m-ah-n-t","nn"],tested:["t-eh1 s-t-ah-d","vbn vbd jj"],testicle:["t-eh1 s-t-ih k-ah-l","nn"],testified:["t-eh1 s-t-ah f-ay-d","vbd vbn"],testifies:["t-eh1 s-t-ah f-ay-z","vbz"],testify:["t-eh1 s-t-ah f-ay","vb vbp"],testily:["t-eh1 s-t-ah l-iy","rb"],testimonial:["t-eh s-t-ah m-ow1 n-iy ah-l","jj nn"],testimony:["t-eh1 s-t-ah m-ow n-iy","nn"],testosterone:["t-eh s-t-aa1 s-t-er ow-n","nn"],testy:["t-eh1 s-t-iy","jj"],tetanus:["t-eh1 t-ah n-ah-s","nn"],tether:["t-eh1-dh-er","vb"],tethered:["t-eh1 dh-er-d","vbn vbd jj"],text:["t-eh1-k-s-t","nn"],textbook:["t-eh1-k-s-t b-uh-k","nn"],textile:["t-eh1-k s-t-ay-l","nn jj"],textual:["t-eh1-k-s ch-ah w-ah-l","jj"],texture:["t-eh1-k-s ch-er","nn"],textured:["t-eh1-k-s ch-er-d","jj"],than:["dh-ae1-n","in rb rbr"],thank:["th-ae1-ng-k","vb vbp"],thankful:["th-ae1-ng-k f-ah-l","jj"],thankfully:["th-ae1-ng-k f-ah l-iy","rb"],thankless:["th-ae1-ng-k l-ah-s","jj"],thanks:["th-ae1-ng-k-s","uh"],thanksgiving:["th-ae-ng-k-s g-ih1 v-ih-ng","nn"],that:["dh-ae1-t","in dt nn rb rp uh wp wdt"],thatch:["th-ae1-ch","nn"],thaw:["th-ao1","nn vb"],the:["dh-ah","dt"],theater:["th-iy1 ah t-er","nn"],theatergoer:["th-iy1 t-er g-ow er","nn"],theatrical:["th-iy ae1 t-r-ih k-ah-l","jj nn"],theatricality:["th-iy ae t-r-ah k-ae1 l-ah t-iy","nn"],theatrically:["th-iy ae1 t-r-ih k-ah l-iy","rb"],theft:["th-eh1-f-t","nn"],their:["dh-eh1-r","prp$"],theirs:["dh-eh1-r-z","prp jj"],them:["dh-eh1-m","prp dt"],thematic:["th-iy m-ae1 t-ih-k","jj"],theme:["th-iy1-m","nn vb"],themed:["th-iy1-m-d","vbn jj"],themselves:["dh-eh-m s-eh1-l-v-z","prp"],then:["dh-eh1-n","rb in jj"],thence:["dh-eh1-n-s","rb"],thenceforth:["dh-eh-n-s f-ao1-r-th","cc"],theocracy:["th-iy aa1 k-r-ah s-iy","nn"],theologian:["th-iy ah l-ow1 jh-iy ah-n","nn"],theological:["th-iy ah l-aa1 jh-ih k-ah-l","jj"],theology:["th-iy aa1 l-ah jh-iy","nn"],theorem:["th-ih1 r-ah-m","nn"],theoretical:["th-iy er eh1 t-ih k-ah-l","jj"],theoretically:["th-iy er eh1 t-ih k-ah l-iy","rb"],theoretician:["th-iy er ah t-ih1 sh-ah-n","nn"],theorist:["th-iy1 er ih-s-t","nn"],theorize:["th-iy1 er ay-z","vbp vb"],theorizing:["th-iy1 er ay z-ih-ng","nn"],theory:["th-ih1 r-iy","nn"],therapeutic:["th-eh r-ah p-y-uw1 t-ih-k","jj nn"],therapist:["th-eh1 r-ah p-ah-s-t","nn"],therapy:["th-eh1 r-ah p-iy","nn"],there:["dh-eh1-r","ex rb uh"],thermal:["th-er1 m-ah-l","jj"],thermometer:["th-er m-aa1 m-ah t-er","nn"],thermonuclear:["th-er m-ow n-uw1 k-l-iy er","jj"],thermoplastic:["th-er m-ah p-l-ae1 s-t-ih-k","jj"],thermos:["th-er1 m-ah-s","nn"],thermostat:["th-er1 m-ah s-t-ae-t","nn"],thesaurus:["th-ah s-ao1 r-ah-s","nn"],these:["dh-iy1-z","dt"],thesis:["th-iy1 s-ah-s","nn"],thespian:["th-eh1 s-p-iy ah-n","jj"],they:["dh-ey1","prp"],thiamin:["th-ay1 ah m-ah-n","nn"],thick:["th-ih1-k","jj nn rb"],thicken:["th-ih1 k-ah-n","vb"],thicker:["th-ih1 k-er","jjr"],thicket:["th-ih1 k-ih-t","nn"],thickly:["th-ih1-k l-iy","rb"],thickness:["th-ih1-k n-ah-s","nn"],thief:["th-iy1-f","nn"],thieve:["th-iy1-v","vb"],thieving:["th-iy1 v-ih-ng","vbg jj nn"],thigh:["th-ay1","nn"],thimble:["th-ih1-m b-ah-l","nn"],thin:["th-ih1-n","jj rb vb"],thine:["dh-ay1-n","jj"],thing:["th-ih1-ng","nn"],think:["th-ih1-ng-k","vbp vb nn"],thinker:["th-ih1-ng k-er","nn"],thinking:["th-ih1-ng k-ih-ng","vbg jj"],thinly:["th-ih1-n l-iy","rb"],thinner:["th-ih1 n-er","jjr nn"],thinness:["th-ih1-n n-ih-s","nn"],thinnest:["th-ih1 n-ih-s-t","jjs"],third:["th-er1-d","nn jj rb"],thirst:["th-er1-s-t","nn"],thirsty:["th-er1 s-t-iy","jj"],thirty:["th-er1 t-iy","nn"],this:["dh-ih1-s","dt rb pdt"],thistle:["th-ih1 s-ah-l","nn"],thong:["th-ao1-ng","nn"],thorn:["th-ao1-r-n","nn"],thorny:["th-ao1-r n-iy","jj"],thorough:["th-er1 ow","jj"],thoroughbred:["th-er1 ow b-r-eh1-d","jj nn"],thoroughfare:["th-er1 ow f-eh-r","nn"],thoroughly:["th-er1 ow l-iy","rb"],thoroughness:["th-er1 ow n-ah-s","nn"],those:["dh-ow1-z","dt"],though:["dh-ow1","in rb"],thought:["th-ao1-t","vbd nn vbn"],thoughtful:["th-ao1-t f-ah-l","jj"],thoughtfully:["th-ao1-t f-ah l-iy","rb"],thoughtless:["th-ao1-t l-ah-s","jj"],thousand:["th-aw1 z-ah-n-d","nn"],thousandth:["th-aw1 z-ah-n-d-th","jj"],thrall:["th-r-ao1-l","nn"],thrash:["th-r-ae1-sh","vb"],thrashing:["th-r-ae1 sh-ih-ng","nn vbg"],thread:["th-r-eh1-d","nn vb"],threadbare:["th-r-eh1-d b-eh-r","jj"],threat:["th-r-eh1-t","nn"],threaten:["th-r-eh1 t-ah-n","vb vbp"],threatened:["th-r-eh1 t-ah-n-d","vbn vbd jj"],threatening:["th-r-eh1 t-ah-n ih-ng","vbg jj"],threateningly:["th-r-eh1 t-ah-n ih-ng l-iy","rb"],three:["th-r-iy1","cd"],threefold:["th-r-iy1 f-ow-l-d","jj rb"],threemonth:["th-r-iy1 m-ah-n-th","jj"],threesome:["th-r-iy1 s-ah-m","nn"],threshold:["th-r-eh1-sh ow-l-d","nn"],threw:["th-r-uw1","vbd"],thrice:["th-r-ay1-s","rb"],thrift:["th-r-ih1-f-t","nn"],thrifty:["th-r-ih1-f t-iy","jj"],thrill:["th-r-ih1-l","nn vb"],thrilled:["th-r-ih1-l-d","vbn jj vbd"],thriller:["th-r-ih1 l-er","nn"],thrilling:["th-r-ih1 l-ih-ng","jj"],thrips:["th-r-ih1-p-s","nn"],thrive:["th-r-ay1-v","vb vbp"],thriving:["th-r-ay1 v-ih-ng","vbg jj"],throat:["th-r-ow1-t","nn"],throb:["th-r-aa1-b","vb"],thrombosis:["th-r-aa-m b-ow1 s-ah-s","nn"],throne:["th-r-ow1-n","nn"],throng:["th-r-ao1-ng","nn vb vbp"],throttle:["th-r-aa1 t-ah-l","nn vb"],through:["th-r-uw1","in jj rb rp"],throughout:["th-r-uw aw1-t","in rb"],throughput:["th-r-uw1 p-uh-t","nn"],throw:["th-r-ow1","vb vbp nn"],throwaway:["th-r-ow1 ah w-ey","jj"],throwback:["th-r-ow1 b-ae-k","nn"],thrower:["th-r-ow1 er","nn"],thrown:["th-r-ow1-n","vbn"],thru:["th-r-uw1","nn in"],thrust:["th-r-ah1-s-t","nn vbd vbn vb"],thruway:["th-r-uw1 w-ey","nn"],thud:["th-ah1-d","nn vb"],thug:["th-ah1-g","nn"],thumb:["th-ah1-m","nn vb"],thumbnail:["th-ah1-m n-ey-l","nn"],thump:["th-ah1-m-p","nn vb"],thunder:["th-ah1-n d-er","nn vb vbp"],thundering:["th-ah1-n d-er ih-ng","vbg jj"],thunderous:["th-ah1-n d-er ah-s","jj"],thunderstorm:["th-ah1-n d-er s-t-ao-r-m","nn"],thunderstruck:["th-ah1-n d-er s-t-r-ah-k","jj"],thus:["dh-ah1-s","rb"],thwart:["th-w-ao1-r-t","vb nn rb"],thyroid:["th-ay1 r-oy-d","nn"],tick:["t-ih1-k","vb nn"],ticked:["t-ih1-k-t","vbd vbn jj"],ticker:["t-ih1 k-er","nn"],ticket:["t-ih1 k-ah-t","nn vb"],tickle:["t-ih1-k-ah-l","vb"],ticklish:["t-ih1 k-ah-l ih-sh","jj"],tidal:["t-ay1 d-ah-l","jj"],tidbit:["t-ih1-d b-ih-t","nn"],tide:["t-ay1-d","nn vb"],tidewater:["t-ay1-d w-ao t-er","nn"],tidings:["t-ay1 d-ih-ng-z","nn"],tidy:["t-ay1 d-iy","jj"],tie:["t-ay1","nn vbp vb"],tied:["t-ay1-d","vbn jj vbd"],tier:["t-iy1-r","nn"],tiered:["t-iy1-r-d","jj"],tiff:["t-ih1-f","nn"],tiger:["t-ay1 g-er","nn"],tight:["t-ay1-t","jj rb"],tighten:["t-ay1 t-ah-n","vb vbp"],tighter:["t-ay1 t-er","jjr rbr"],tightest:["t-ay1 t-ah-s-t","jjs rbs"],tightfisted:["t-ay1-t f-ih1 s-t-ih-d","jj"],tightly:["t-ay1-t l-iy","rb"],tightness:["t-ay1-t n-ah-s","nn"],tightrope:["t-ay1-t r-ow-p","nn"],tile:["t-ay1-l","nn vb"],tiled:["t-ay1-l-d","jj vbn"],till:["t-ih1-l","in vb"],tiller:["t-ih1 l-er","nn"],tilt:["t-ih1-l-t","nn jj vb"],tilted:["t-ih1-l t-ah-d","vbd vbn jj"],tilth:["t-ih1-l-th","nn"],timber:["t-ih1-m b-er","nn vb"],timberland:["t-ih1-m b-er l-ae-n-d","nn"],timbre:["t-ih1-m b-er","nn"],time:["t-ay1-m","nn vb"],timed:["t-ay1-m-d","vbn vbd jj"],timeless:["t-ay1-m l-ah-s","jj"],timeliness:["t-ay1-m l-iy n-ah-s","nn"],timely:["t-ay1-m l-iy","jj rb"],timepiece:["t-ay1-m p-iy-s","nn"],timer:["t-ay1 m-er","nn"],times:["t-ay1-m-z","vbz cc rb"],timetable:["t-ay1-m t-ey b-ah-l","nn"],timid:["t-ih1 m-ih-d","jj"],timidity:["t-ah m-ih1 d-ah t-iy","nn"],timidly:["t-ih1 m-ah-d l-iy","rb"],timing:["t-ay1 m-ih-ng","nn vbg"],timorous:["t-ih1 m-er ah-s","jj"],timpani:["t-ih1-m p-ah n-iy","nn"],tin:["t-ih1-n","nn"],tincture:["t-ih1-ng-k ch-er","nn"],tinder:["t-ih1-n d-er","nn"],tine:["t-ay1-n","nn"],tingle:["t-ih1-ng-g-ah-l","vb"],tinier:["t-ay1 n-iy er","nn"],tiniest:["t-ay1 n-iy ah-s-t","jjs"],tinker:["t-ih1-ng k-er","vb"],tinkle:["t-ih1-ng-k-ah-l","vb"],tinny:["t-ih1 n-iy","jj nn"],tinsel:["t-ih1-n s-ah-l","nn"],tint:["t-ih1-n-t","vb vbp nn"],tinted:["t-ih1-n t-ih-d","vbn jj"],tintype:["t-ih1-n t-ay-p","nn"],tiny:["t-ay1 n-iy","jj"],tip:["t-ih1-p","nn vb vbp"],tipoff:["t-ih1 p-ao-f","nn"],tipper:["t-ih1 p-er","nn"],tipple:["t-ih1 p-ah-l","vb vbp"],tipsy:["t-ih1-p s-iy","jj"],tiptoe:["t-ih1-p t-ow","vb"],tirade:["t-ay r-ey1-d","nn"],tire:["t-ay1 er","nn vbp vb"],tired:["t-ay1 er-d","vbn jj vbd"],tireless:["t-ay1 er l-ah-s","jj"],tirelessly:["t-ay1-r l-ah-s l-iy","rb"],tiremaker:["t-ay1-r m-ey k-er","nn"],tiresome:["t-ay1 er s-ah-m","jj"],tissue:["t-ih1 s-y-uw","nn"],titan:["t-ay1 t-ah-n","nn"],titanate:["t-ay1 t-ah n-ey-t","nn"],titanic:["t-ay t-ae1 n-ih-k","jj"],titanium:["t-ay t-ey1 n-iy ah-m","nn"],titillate:["t-ih1-t-ah-l-ey-t","vb"],title:["t-ay1 t-ah-l","nn vb"],titled:["t-ay1 t-ah-l-d","vbn jj vbd"],titter:["t-ih1 t-er","nn vb vbp"],titular:["t-ih1 ch-ah l-er","jj"],to:["t-uw1","to rb"],toad:["t-ow1-d","nn"],toast:["t-ow1-s-t","nn vb"],toaster:["t-ow1 s-t-er","nn"],tobacco:["t-ah b-ae1 k-ow","nn"],today:["t-ah d-ey1","nn jj rb"],toddler:["t-aa1-d l-er","nn"],toe:["t-ow1","nn vb"],toehold:["t-ow1 hh-ow-l-d","nn"],toenail:["t-ow1 n-ey-l","nn"],toffee:["t-aa1 f-iy","nn"],tofu:["t-ow1 f-uw","nn"],toga:["t-ow1 g-ah","nn"],together:["t-ah g-eh1 dh-er","rb in rp"],togetherness:["t-ah g-eh1 dh-er n-ah-s","nn"],toil:["t-oy1-l","vbp nn vb"],toilet:["t-oy1 l-ah-t","nn"],toiletry:["t-oy1 l-ah t-r-iy","nn"],token:["t-ow1 k-ah-n","jj nn"],told:["t-ow1-l-d","vbd vbn"],tolerable:["t-aa1 l-er ah b-ah-l","jj"],tolerance:["t-aa1 l-er ah-n-s","nn"],tolerant:["t-aa1 l-er ah-n-t","jj"],tolerate:["t-aa1 l-er ey-t","vb vbp"],tolerating:["t-aa1 l-er ey t-ih-ng","vbg jj"],toleration:["t-aa l-er ey1 sh-ah-n","nn"],toll:["t-ow1-l","nn vb"],tomato:["t-ah m-ey1 t-ow","nn"],tomb:["t-uw1-m","nn"],tomblike:["t-uw1-m l-ay-k","jj"],tombstone:["t-uw1-m s-t-ow-n","nn"],tome:["t-ow1-m","nn"],tomorrow:["t-ah m-aa1 r-ow","nn jj rb"],ton:["t-ah1-n","nn"],tonal:["t-ow1 n-ah-l","jj"],tonality:["t-ow n-ae1 l-ah t-iy","nn"],tone:["t-ow1-n","nn vb"],toner:["t-ow1 n-er","nn"],tongs:["t-aa1-ng-z","nn"],tongue:["t-ah1-ng","nn vb"],tongued:["t-ah1-ng-d","vbd jj"],tonic:["t-aa1 n-ih-k","nn"],tonight:["t-ah n-ay1-t","rb nn"],tonnage:["t-ah1 n-ah-jh","nn"],tonsil:["t-aa1-n s-ah-l","nn"],tony:["t-ow1 n-iy","jj"],too:["t-uw1","rb"],took:["t-uh1-k","vbd"],tool:["t-uw1-l","nn vb"],tooth:["t-uw1-th","nn rb"],toothbrush:["t-uw1-th b-r-ah-sh","nn"],toothless:["t-uw1-th l-ah-s","jj"],toothpaste:["t-uw1-th p-ey-s-t","nn"],top:["t-aa1-p","jj nn vbp rb vb"],topaz:["t-ow1 p-ae-z","nn"],topiary:["t-ow1 p-iy eh r-iy","jj"],topic:["t-aa1 p-ih-k","nn"],topical:["t-aa1 p-ah k-ah-l","jj"],topless:["t-aa1-p l-ah-s","jj"],topographic:["t-aa p-ah g-r-ae1 f-ih-k","jj"],topography:["t-ah p-aa1 g-r-ah f-iy","nn"],topper:["t-aa1 p-er","nn"],topple:["t-aa1 p-ah-l","vb"],topsoil:["t-aa1-p s-oy-l","nn"],torch:["t-ao1-r-ch","nn vb"],tore:["t-ao1-r","vbd vbn"],torment:["t-ao1-r m-eh-n-t","nn vb"],tormented:["t-ao1-r m-eh-n t-ih-d","vbn jj"],tormentor:["t-ao1-r m-eh-n t-er","nn"],torn:["t-ao1-r-n","vbn jj"],tornado:["t-ao-r n-ey1 d-ow","nn"],torpedo:["t-ao-r p-iy1 d-ow","vb nn"],torpid:["t-ao1-r p-ah-d","jj"],torpor:["t-ao1-r p-er","nn"],torque:["t-ao1-r-k","nn"],torrent:["t-ao1 r-ah-n-t","nn"],torrid:["t-ao1 r-ah-d","jj"],torso:["t-ao1-r s-ow","nn"],tort:["t-ao1-r-t","nn"],tortilla:["t-ao-r t-iy1 ah","nn"],tortoise:["t-ao1-r t-ah-s","nn"],tortuous:["t-ao1-r ch-ah-w ah-s","jj"],torture:["t-ao1-r ch-er","nn vbp vb"],tortured:["t-ao1-r ch-er-d","vbn jj vbd"],toss:["t-ao1-s","vb nn vbp"],tossed:["t-ao1-s-t","vbd vbn jj"],total:["t-ow1 t-ah-l","jj nn vb vbp"],totalitarian:["t-ow t-ae l-ih t-eh1 r-iy ah-n","jj"],totalitarianism:["t-ow t-ae l-ah t-eh1 r-iy ah n-ih z-ah-m","nn"],totality:["t-ow t-ae1 l-ah t-iy","nn"],totally:["t-ow1 t-ah-l iy","rb"],tote:["t-ow1-t","vb"],totem:["t-ow1 t-ah-m","nn"],totter:["t-aa1-t-er","vb"],tottering:["t-aa1 t-er ih-ng","jj vbg"],touch:["t-ah1-ch","nn rb vb vbp"],touchdown:["t-ah1-ch d-aw-n","nn"],touching:["t-ah1 ch-ih-ng","vbg jj nn"],touchstone:["t-ah1-ch s-t-ow-n","nn"],touchy:["t-ah1 ch-iy","jj"],tough:["t-ah1-f","jj rb vb"],toughen:["t-ah1 f-ah-n","vb"],tougher:["t-ah1 f-er","jjr rbr"],toughest:["t-ah1 f-ah-s-t","jjs"],toughness:["t-ah1-f n-ah-s","nn"],tour:["t-uh1-r","nn vb"],touring:["t-uh1 r-ih-ng","vbg jj nn"],tourism:["t-uh1 r-ih z-ah-m","nn"],tourist:["t-uh1 r-ah-s-t","nn"],tournament:["t-uh1-r n-ah m-ah-n-t","nn"],tourney:["t-er1 n-iy","nn"],tout:["t-aw1-t","vb nn"],tow:["t-ow1","nn vb"],toward:["t-ah w-ao1-r-d","in"],towards:["t-ah w-ao1-r-d-z","in"],towel:["t-aw1 ah-l","nn"],toweling:["t-aw1 ah-l ih-ng","nn"],tower:["t-aw1 er","nn vb"],towering:["t-aw1 er ih-ng","jj vbg"],town:["t-aw1-n","nn"],townhouse:["t-aw1-n hh-aw-s","nn"],toxic:["t-aa1-k s-ih-k","jj nn"],toxicity:["t-aa-k s-ih1 s-ah t-iy","nn"],toxicologist:["t-aa-k s-ih k-aa1 l-ah jh-ih-s-t","nn"],toxicology:["t-aa-k s-ih k-aa1 l-ah jh-iy","nn"],toxin:["t-aa1-k s-ah-n","nn"],toy:["t-oy1","nn vb"],trace:["t-r-ey1-s","nn jj vb"],traceable:["t-r-ey1 s-ah b-ah-l","jj"],tracer:["t-r-ey1 s-er","nn"],trachea:["t-r-ey1 k-iy ah","nn"],tracing:["t-r-ey1 s-ih-ng","vbg jj nn"],track:["t-r-ae1-k","nn vbp vb"],trackage:["t-r-ae1 k-ih-jh","nn"],tracked:["t-r-ae1-k-t","vbn vbd jj"],tract:["t-r-ae1-k-t","nn"],tractor:["t-r-ae1-k t-er","nn"],trade:["t-r-ey1-d","nn vbp vb"],tradeable:["t-r-ey1 d-ah b-ah-l","jj"],traded:["t-r-ey1 d-ih-d","vbn vbd jj"],trademark:["t-r-ey1-d m-aa-r-k","nn"],tradeoff:["t-r-ey1 d-ao-f","nn"],trader:["t-r-ey1 d-er","nn"],trading:["t-r-ey1 d-ih-ng","vbg jj"],tradition:["t-r-ah d-ih1 sh-ah-n","nn"],traditional:["t-r-ah d-ih1 sh-ah n-ah-l","jj"],traditionalist:["t-r-ah d-ih1 sh-ah-n ah l-ih-s-t","nn"],traditionally:["t-r-ah d-ih1 sh-ah-n ah l-iy","rb"],traffic:["t-r-ae1 f-ih-k","nn vb"],trafficker:["t-r-ae1 f-ih k-er","nn"],tragedy:["t-r-ae1 jh-ah d-iy","nn"],tragic:["t-r-ae1 jh-ih-k","jj nn"],tragically:["t-r-ae1 jh-ih-k l-iy","rb"],tragicomic:["t-r-ae jh-ih k-aa1 m-ih-k","jj nn"],trail:["t-r-ey1-l","nn vbp vb"],trailer:["t-r-ey1 l-er","nn"],train:["t-r-ey1-n","nn vb vbp"],trained:["t-r-ey1-n-d","vbn vbd jj"],trainer:["t-r-ey1 n-er","nn"],training:["t-r-ey1 n-ih-ng","vbg jj"],traipse:["t-r-ey1-p-s","vb"],trait:["t-r-ey1-t","nn"],traitor:["t-r-ey1 t-er","nn"],traitorous:["t-r-ey1 t-er ah-s","jj"],trajectory:["t-r-ah jh-eh1-k t-er iy","nn"],trammel:["t-r-ae1 m-ah-l","vb"],tramp:["t-r-ae1-m-p","jj nn vb"],trample:["t-r-ae1-m p-ah-l","vb"],trance:["t-r-ae1-n-s","nn"],tranquil:["t-r-ae1-ng k-w-ah-l","jj"],tranquility:["t-r-ae-ng k-w-ih1 l-ih t-iy","nn"],tranquilizer:["t-r-ae1-ng k-w-ah l-ay z-er","nn"],tranquilizing:["t-r-ae1-ng k-w-ah l-ay z-ih-ng","jj"],transact:["t-r-ae-n z-ae1-k-t","vb"],transaction:["t-r-ae-n z-ae1-k sh-ah-n","nn"],transatlantic:["t-r-ae-n-z ah-t l-ae1-n t-ih-k","jj nn"],transcend:["t-r-ae-n s-eh1-n-d","vb"],transcendence:["t-r-ae-n s-eh1-n d-ah-n-s","nn"],transcendent:["t-r-ae-n s-eh1-n d-ah-n-t","jj"],transcendental:["t-r-ae-n s-ah-n d-eh1-n t-ah-l","jj"],transcribe:["t-r-ae-n s-k-r-ay1-b","vb vbp"],transcribed:["t-r-ae-n s-k-r-ay1-b-d","vbn jj"],transcript:["t-r-ae1-n s-k-r-ih-p-t","nn"],transcription:["t-r-ae-n s-k-r-ih1-p sh-ah-n","nn"],transducer:["t-r-ae-n-s d-uw1 s-er","nn"],transfer:["t-r-ae-n-s f-er1","nn vb vbp"],transferable:["t-r-ae-n-s f-er1 ah b-ah-l","jj"],transferrable:["t-r-ae-n-s f-er1 ah b-ah-l","jj"],transferred:["t-r-ae-n-s f-er1-d","vbn vbd jj"],transform:["t-r-ae-n-s f-ao1-r-m","vb vbp"],transformation:["t-r-ae-n-s f-er m-ey1 sh-ah-n","nn"],transformed:["t-r-ae-n-s f-ao1-r-m-d","vbn jj vbd"],transformer:["t-r-ae-n-s f-ao1-r m-er","nn"],transfuse:["t-r-ae-n-s-f-y-uw1-z","vb"],transfusion:["t-r-ae-n-s f-y-uw1 zh-ah-n","nn"],transgenic:["t-r-ae-n-z jh-eh1 n-ih-k","jj"],transgression:["t-r-ae-n-z g-r-eh1 sh-ah-n","nn"],transience:["t-r-ae1-n z-iy ah-n-s","nn"],transient:["t-r-ae1-n zh-ah-n-t","jj"],transistor:["t-r-ae-n z-ih1 s-t-er","nn"],transit:["t-r-ae1-n z-ah-t","nn jj"],transition:["t-r-ae-n z-ih1 sh-ah-n","nn"],transitional:["t-r-ae-n s-ih1 sh-ah n-ah-l","jj"],transitory:["t-r-ae1-n z-ah t-ao r-iy","jj"],translate:["t-r-ae-n-z l-ey1-t","vb vbp"],translation:["t-r-ae-n-z l-ey1 sh-ah-n","nn"],translator:["t-r-ae-n-s l-ey1 t-er","nn"],translucent:["t-r-ae-n-s l-uw1 s-ah-n-t","jj"],transmission:["t-r-ae-n-s m-ih1 sh-ah-n","nn"],transmit:["t-r-ae-n-z m-ih1-t","vb vbp"],transmittable:["t-r-ae-n-z m-ih1 t-ah b-ah-l","jj"],transmitted:["t-r-ae-n-s m-ih1 t-ih-d","vbn jj vbd"],transmitter:["t-r-ae-n-s m-ih1 t-er","nn"],transnational:["t-r-ae-n-s n-ae1 sh-ah n-ah-l","jj"],transoceanic:["t-r-ae-n-z ow sh-iy ae1 n-ih-k","jj"],transparency:["t-r-ae-n s-p-eh1 r-ah-n s-iy","nn"],transparent:["t-r-ae-n s-p-eh1 r-ah-n-t","jj nn"],transparently:["t-r-ae-n s-p-eh1 r-ah-n-t l-iy","rb"],transpire:["t-r-ae-n-s-p-ay1-er","vb"],transplant:["t-r-ae-n-s p-l-ae1-n-t","nn vbp vb"],transplantation:["t-r-ae-n-z p-l-ae-n t-ey1 sh-ah-n","nn"],transplanted:["t-r-ae-n-s p-l-ae1-n t-ih-d","vbn jj"],transponder:["t-r-ae-n-s p-aa1-n d-er","nn"],transport:["t-r-ae-n-s p-ao1-r-t","nn vbp vb"],transportable:["t-r-ae-n-s p-ao1-r t-ah b-ah-l","jj"],transportation:["t-r-ae-n-s p-er t-ey1 sh-ah-n","nn"],transporter:["t-r-ae-n-s p-ao1-r t-er","nn"],transpose:["t-r-ae-n-s-p-ow1-z","vb"],transverse:["t-r-ae-n-z v-er1-s","jj nn"],trap:["t-r-ae1-p","nn vb"],trapeze:["t-r-ah p-iy1-z","nn"],trapped:["t-r-ae1-p-t","vbn vbd jj"],trash:["t-r-ae1-sh","nn vb"],trauma:["t-r-ao1 m-ah","nn"],traumatic:["t-r-ao m-ae1 t-ih-k","jj"],traumatize:["t-r-ao1-m-ah-t-ay-z","vb"],travail:["t-r-ah v-ey1-l","nn"],travel:["t-r-ae1 v-ah-l","nn vbp vb"],traveled:["t-r-ae1 v-ah-l-d","vbd jj vbn"],traveler:["t-r-ae1 v-ah l-er","nn"],travelled:["t-r-ae1 v-ah-l-d","jj vbd vbn"],traveller:["t-r-ae1 v-ah l-er","nn"],travelogue:["t-r-ae1 v-ah l-ao-g","nn"],traverse:["t-r-ae1 v-er-s","vb"],travesty:["t-r-ae1 v-ah s-t-iy","nn vb"],trawler:["t-r-ao1 l-er","nn"],tray:["t-r-ey1","nn"],treacherous:["t-r-eh1 ch-er ah-s","jj"],treachery:["t-r-eh1 ch-er iy","nn"],tread:["t-r-eh1-d","vb nn"],treadmill:["t-r-eh1-d m-ih-l","nn"],treason:["t-r-iy1 z-ah-n","nn"],treasure:["t-r-eh1 zh-er","nn vb vbp"],treasured:["t-r-eh1 zh-er-d","vbn jj"],treasurer:["t-r-eh1 zh-er er","nn"],treasury:["t-r-eh1 zh-er iy","nn"],treat:["t-r-iy1-t","vb vbp nn"],treatable:["t-r-iy1 t-ah b-ah-l","jj"],treatise:["t-r-iy1 t-ah-s","nn"],treatment:["t-r-iy1-t m-ah-n-t","nn"],treaty:["t-r-iy1 t-iy","nn"],treble:["t-r-eh1 b-ah-l","jj nn vb"],tree:["t-r-iy1","nn"],treeless:["t-r-iy1 l-ah-s","jj"],trek:["t-r-eh1-k","nn vb vbp"],tremble:["t-r-eh1-m b-ah-l","vb nn"],trembling:["t-r-eh1-m b-ah-l ih-ng","vbg jj"],tremendous:["t-r-ah m-eh1-n d-ah-s","jj"],tremendously:["t-r-ah m-eh1-n d-ah-s l-iy","rb"],tremor:["t-r-eh1 m-er","nn"],tremulous:["t-r-eh1 m-y-ah l-ah-s","jj"],tremulously:["t-r-eh1 m-y-ah l-ah-s l-iy","rb"],trench:["t-r-eh1-n-ch","nn"],trenchant:["t-r-eh1-n ch-ah-n-t","jj"],trend:["t-r-eh1-n-d","nn vb"],trendier:["t-r-eh1-n d-y-er","jjr"],trendiest:["t-r-eh-n d-iy1-s-t","jjs"],trendsetter:["t-r-eh1-n-d s-eh t-er","nn"],trendy:["t-r-eh1-n d-iy","jj"],trepidation:["t-r-eh p-ih d-ey1 sh-ah-n","nn"],trespass:["t-r-eh1-s p-ae-s","nn vb vbp"],tress:["t-r-eh1-s","nn"],trestle:["t-r-eh1 s-ah-l","nn"],triad:["t-r-ay1 ae-d","nn jj"],triage:["t-r-ay1 ih-jh","nn"],trial:["t-r-ay1 ah-l","nn vb"],triangle:["t-r-ay1 ae-ng g-ah-l","nn"],triangular:["t-r-ay ae1-ng g-y-ah l-er","jj"],tribal:["t-r-ay1 b-ah-l","jj"],tribe:["t-r-ay1-b","nn"],tribunal:["t-r-ah b-y-uw1 n-ah-l","nn"],tribute:["t-r-ih1 b-y-uw-t","nn"],trick:["t-r-ih1-k","nn vb"],trickery:["t-r-ih1 k-er iy","nn"],trickier:["t-r-ih1 k-iy er","jjr"],trickiest:["t-r-ih1 k-iy ah-s-t","jjs"],trickle:["t-r-ih1 k-ah-l","nn vb vbp"],tricky:["t-r-ih1 k-iy","jj"],tried:["t-r-ay1-d","vbd jj vbn"],triennial:["t-r-ay eh1 n-iy ah-l","nn"],trifle:["t-r-ay1 f-ah-l","nn jj rb vb"],trifling:["t-r-ay1 f-l-ih-ng","jj"],trigger:["t-r-ih1 g-er","vb nn vbp"],triggered:["t-r-ih1 g-er-d","vbn vbd jj"],triglyceride:["t-r-ay g-l-ih1 s-er ay-d","nn"],trilateral:["t-r-ay l-ae1 t-er ah-l","jj"],trillion:["t-r-ih1 l-y-ah-n","nn"],trilogy:["t-r-ih1 l-ah jh-iy","nn"],trim:["t-r-ih1-m","vb jj nn"],trimester:["t-r-ay m-eh1 s-t-er","nn"],trimmed:["t-r-ih1-m-d","vbn rbr vbd jj"],trimmer:["t-r-ih1 m-er","jjr"],trinket:["t-r-ih1-ng k-ah-t","nn"],trio:["t-r-iy1 ow","nn"],trip:["t-r-ih1-p","nn vb"],tripartite:["t-r-ay p-aa1-r t-ay-t","jj"],tripe:["t-r-ay1-p","nn"],triple:["t-r-ih1 p-ah-l","jj nn rb vb"],triplet:["t-r-ih1 p-l-ah-t","nn"],tripod:["t-r-ay1 p-aa-d","nn"],triptych:["t-r-ih1-p t-ih-k","nn"],trite:["t-r-ay1-t","jj"],triumph:["t-r-ay1 ah-m-f","nn vb"],triumphant:["t-r-ay ah1-m f-ah-n-t","jj"],triumphantly:["t-r-ay ah1-m f-ah-n-t l-iy","rb"],triumvirate:["t-r-ay ah1-m v-er ah-t","nn"],trivia:["t-r-ih1 v-iy ah","nn"],trivial:["t-r-ih1 v-iy ah-l","jj nn"],triviality:["t-r-ih v-iy ae1 l-ah t-iy","nn"],trivialize:["t-r-ih1 v-iy ah l-ay-z","vb"],troika:["t-r-oy1 k-ah","nn"],trolley:["t-r-aa1 l-iy","nn"],trombone:["t-r-aa-m b-ow1-n","nn"],trombonist:["t-r-aa-m b-ow1 n-ih-s-t","nn"],troop:["t-r-uw1-p","nn vb vbp"],trooper:["t-r-uw1 p-er","nn"],trophy:["t-r-ow1 f-iy","nn"],tropic:["t-r-aa1 p-ih-k","nn"],tropical:["t-r-aa1 p-ih k-ah-l","jj nn"],trot:["t-r-aa1-t","nn vb"],trotter:["t-r-aa1 t-er","nn"],trouble:["t-r-ah1 b-ah-l","nn vbd vbp jj vb"],troubled:["t-r-ah1 b-ah-l-d","jj vbd vbn"],troublemaker:["t-r-ah1 b-ah-l m-ey k-er","nn"],troubleshooter:["t-r-ah1 b-ah-l sh-uw t-er","nn"],troublesome:["t-r-ah1 b-ah-l s-ah-m","jj"],troubling:["t-r-ah1 b-ah-l ih-ng","jj vbg"],trough:["t-r-ao1-f","nn"],trounce:["t-r-aw1-n-s","vb"],trouncing:["t-r-aw1-n s-ih-ng","nn"],troup:["t-r-uw1-p","nn"],troupe:["t-r-uw1-p","nn"],trouser:["t-r-aw1 z-er","nn"],trout:["t-r-aw1-t","nn"],trove:["t-r-ow1-v","nn"],truce:["t-r-uw1-s","nn"],truck:["t-r-ah1-k","nn vb vbp"],trucker:["t-r-ah1 k-er","nn"],truckload:["t-r-ah1 k-l-ow-d","nn"],truculent:["t-r-ah1 k-y-ah l-ah-n-t","jj"],trudge:["t-r-ah1-jh","nn vb"],true:["t-r-uw1","jj"],truer:["t-r-uw1 er","jjr"],truest:["t-r-uw1 ih-s-t","jjs"],truism:["t-r-uw1 ih z-ah-m","nn"],truly:["t-r-uw1 l-iy","rb"],trump:["t-r-ah1-m-p","nn vb"],trumpet:["t-r-ah1-m p-ah-t","nn vb"],trumpeter:["t-r-ah1-m p-ah t-er","nn"],truncate:["t-r-ah1-ng-k-ey-t","vb"],truncated:["t-r-ah1-ng k-ey t-ih-d","vbn jj"],truncheon:["t-r-ah1-n ch-ih-n","nn"],trundle:["t-r-ah1-n d-ah-l","nn vb vbp"],trunk:["t-r-ah1-ng-k","nn"],truss:["t-r-ah1-s","nn vb"],trust:["t-r-ah1-s-t","nn vbp vb"],trusted:["t-r-ah1 s-t-ih-d","vbn vbd jj"],trustee:["t-r-ah s-t-iy1","nn"],trusteeship:["t-r-ah s-t-iy1 sh-ih-p","nn"],trusting:["t-r-ah1 s-t-ih-ng","jj vbg"],trustworthy:["t-r-ah1-s-t w-er dh-iy","jj"],truth:["t-r-uw1-th","nn"],truthful:["t-r-uw1-th f-ah-l","jj"],truthfully:["t-r-uw1-th f-ah l-iy","rb"],truthfulness:["t-r-uw1-th f-ah-l n-ah-s","nn"],try:["t-r-ay1","vb vbp nn"],trying:["t-r-ay1 ih-ng","vbg jj nn"],tryout:["t-r-ay1 aw-t","nn"],tryst:["t-r-ay1-s-t","nn"],tsunami:["t-s-uw n-aa1 m-iy","nn"],tub:["t-ah1-b","nn"],tuba:["t-uw1 b-ah","nn"],tube:["t-uw1-b","nn"],tuberculosis:["t-ah b-er k-y-ah l-ow1 s-ih-s","nn"],tubing:["t-uw1 b-ih-ng","nn"],tubular:["t-uw1 b-y-ah l-er","jj"],tuck:["t-ah1-k","vbp vb"],tuft:["t-ah1-f-t","nn"],tug:["t-ah1-g","nn vb"],tugboat:["t-ah1-g b-ow-t","nn"],tuition:["t-y-uw ih1 sh-ah-n","nn"],tulip:["t-uw1 l-ah-p","nn"],tumble:["t-ah1-m b-ah-l","nn vb"],tumbled:["t-ah1-m b-ah-l-d","vbd vbn jj"],tumbler:["t-ah1-m b-l-er","nn"],tummy:["t-ah1 m-iy","nn"],tumor:["t-uw1 m-er","nn"],tumult:["t-uw1 m-ah-l-t","nn"],tumultuous:["t-uw m-ah1-l ch-uw ah-s","jj"],tuna:["t-uw1 n-ah","nn"],tundra:["t-ah1-n d-r-ah","nn"],tune:["t-uw1-n","nn vb vbp"],tuned:["t-uw1-n-d","vbn jj vbd"],tuneful:["t-uw1-n f-ah-l","jj"],tung:["t-ah1-ng","nn"],tungsten:["t-ah1-ng s-t-ah-n","nn"],tunic:["t-uw1 n-ih-k","nn"],tunnel:["t-ah1 n-ah-l","nn vb vbp"],turban:["t-er1 b-ah-n","nn"],turbine:["t-er1 b-ay-n","nn jj"],turbo:["t-er1 b-ow","nn"],turbofan:["t-er1 b-ow f-ae-n","nn"],turboprop:["t-er1 b-ow p-r-aa-p","nn"],turbulence:["t-er1 b-y-ah l-ah-n-s","nn"],turbulent:["t-er1 b-y-ah l-ah-n-t","jj"],turf:["t-er1-f","nn jj"],turgid:["t-er1 jh-ih-d","jj"],turkey:["t-er1 k-iy","nn jj"],turmoil:["t-er1 m-oy-l","nn"],turn:["t-er1-n","vb nn rb vbp"],turnabout:["t-er1-n ah b-aw-t","nn"],turnaround:["t-er1 n-er aw-n-d","nn"],turning:["t-er1 n-ih-ng","vbg jj nn"],turnip:["t-er1 n-ah-p","nn"],turnkey:["t-er1-n k-iy","nn"],turnoff:["t-er1 n-ao-f","nn"],turnout:["t-er1-n aw-t","nn"],turnover:["t-er1-n ow v-er","nn"],turnpike:["t-er1-n p-ay-k","nn"],turntable:["t-er1-n t-ey b-ah-l","nn"],turpentine:["t-er1 p-ah-n t-ay-n","nn"],turquoise:["t-er1 k-w-oy-z","jj nn"],turret:["t-er1 ah-t","nn jj"],turtle:["t-er1 t-ah-l","nn"],turtleneck:["t-er1 t-ah-l n-eh-k","nn"],tusk:["t-ah1-s-k","nn"],tussle:["t-ah1 s-ah-l","nn vb"],tutelage:["t-y-uw1 t-ih l-ih-jh","nn"],tutor:["t-uw1 t-er","nn vb"],tutorial:["t-uw t-ao1 r-iy ah-l","nn"],tuxedo:["t-ah-k s-iy1 d-ow","nn"],twaddle:["t-w-aa1 d-ah-l","nn"],twang:["t-w-aa1-ng","nn"],twangy:["t-w-aa1-n jh-iy","jj"],tweak:["t-w-iy1-k","vb"],tweed:["t-w-iy1-d","nn"],tweedy:["t-w-iy1 d-iy","jj"],tweezer:["t-w-iy1 z-er","nn"],twenty:["t-w-eh1-n t-iy","nn"],twice:["t-w-ay1-s","rb jj"],twig:["t-w-ih1-g","nn"],twilight:["t-w-ay1 l-ay-t","nn"],twin:["t-w-ih1-n","jj nn"],twine:["t-w-ay1-n","nn vb"],twinge:["t-w-ih1-n-jh","nn"],twinjet:["t-w-ih1-n jh-eh-t","nn"],twinkle:["t-w-ih1-ng k-ah-l","nn vb"],twirl:["t-w-er1-l","vb"],twirler:["t-w-er1 l-er","nn"],twist:["t-w-ih1-s-t","nn vbp vb"],twisted:["t-w-ih1 s-t-ah-d","vbn jj vbd"],twister:["t-w-ih1 s-t-er","nn"],twisty:["t-w-ih1 s-t-iy","jj"],twitch:["t-w-ih1-ch","nn vb"],two:["t-uw1","cd"],twosome:["t-uw1 s-ah-m","nn"],tycoon:["t-ay k-uw1-n","nn"],tyke:["t-ay1-k","nn"],type:["t-ay1-p","nn vb"],typecast:["t-ay1-p k-ae-s-t","vb"],typed:["t-ay1-p-t","vbn jj vbd"],typeface:["t-ay1-p f-ey s-ah","nn"],typesetting:["t-ay1-p s-eh t-ih-ng","nn"],typewriter:["t-ay1-p r-ay t-er","nn"],typewriting:["t-ay1-p r-ay t-ih-ng","nn"],typewritten:["t-ay1-p r-ih t-ah-n","jj vbn"],typhoid:["t-ay1 f-oy-d","nn"],typhoon:["t-ay f-uw1-n","nn"],typhus:["t-ay1 f-ah-s","nn"],typical:["t-ih1 p-ah k-ah-l","jj"],typically:["t-ih1 p-ih-k l-iy","rb"],typified:["t-ih1 p-ah f-ay-d","vbn vbd"],typifies:["t-ih1 p-ah f-ay-z","vbz"],typify:["t-ih1 p-ah f-ay","vbp vb"],typist:["t-ay1 p-ih-s-t","nn"],typographical:["t-ay p-ah g-r-ae1 f-ih k-ah-l","jj"],typography:["t-ah p-aa1 g-r-ah f-iy","nn"],tyrannical:["t-er ae1 n-ih k-ah-l","jj"],tyranny:["t-ih1 r-ah n-iy","nn"],tyrant:["t-ay1 r-ah-n-t","nn"],ubiquitous:["y-uw b-ih1 k-w-ih t-ah-s","jj"],ubiquity:["y-uw b-ih1 k-w-ih t-iy","nn"],uglier:["ah1-g l-iy er","jjr"],ugliness:["ah1-g l-iy n-ah-s","nn"],ugly:["ah1-g l-iy","jj"],ulcer:["ah1-l s-er","nn"],ultimate:["ah1-l t-ah m-ah-t","jj"],ultimately:["ah1-l t-ah m-ah-t l-iy","rb"],ultimatum:["ah-l t-ah m-ey1 t-ah-m","nn"],ultra:["ah1-l t-r-ah","jj"],ultramodern:["ah-l t-r-ah m-aa1 d-er-n","jj"],ultrasonic:["ah-l t-r-ah s-aa1 n-ih-k","jj"],ultrasound:["ah-l t-r-ah s-aw1-n-d","nn"],ultraviolet:["ah-l t-r-ah v-ay1 ah l-ih-t","jj nn"],umbrage:["ah1-m b-r-ih-jh","nn"],umbrella:["ah-m b-r-eh1 l-ah","nn"],umpire:["ah1-m p-ay er","nn"],unabashed:["ah-n ah b-ae1-sh-t","jj"],unabated:["ah-n ah b-ey1 t-ih-d","jj"],unable:["ah-n ey1 b-ah-l","jj"],unabridged:["ah-n ah b-r-ih1-jh-d","jj"],unacceptable:["ah-n ae-k s-eh1-p t-ah b-ah-l","jj"],unacceptably:["ah-n ae-k s-eh1-p t-ah b-l-iy","rb"],unaccompanied:["ah-n ah k-ah1-m p-ah n-iy-d","jj"],unaccountable:["ah-n ah k-aw1-n t-ah b-ah-l","jj"],unaccountably:["ah-n ah k-aw1-n t-ah b-l-iy","rb"],unaccounted:["ah-n ah k-aw1-n t-ih-d","jj"],unaccustomed:["ah-n ah k-ah1 s-t-ah-m-d","jj"],unaddressed:["ah-n ah d-r-eh1-s-t","jj"],unadjusted:["ah-n ah jh-ah1 s-t-ih-d","jj"],unadorned:["ah-n ah d-ao1-r-n-d","jj"],unadulterated:["ah-n ah d-ah1-l t-er ey t-ih-d","jj"],unaffected:["ah-n ah f-eh1-k t-ih-d","jj"],unaffiliated:["ah-n ah f-ih1 l-iy ey t-ih-d","jj"],unaffordable:["ah-n ah f-ao1-r d-ah b-ah-l","jj"],unafraid:["ah-n ah f-r-ey1-d","jj"],unaided:["ah-n ey1 d-ih-d","jj"],unalloyed:["ah-n ae1 l-oy-d","jj"],unalterable:["ah-n ao1-l t-er ah b-ah-l","jj"],unaltered:["ah-n ao1-l t-er-d","jj"],unambiguous:["ah n-ae-m b-ih1 g-y-ah-w ah-s","jj"],unambiguously:["ah n-ae-m b-ih1 g-y-uw ah-s l-iy","rb"],unamended:["ah-n ah m-eh1-n d-ih-d","jj"],unamortized:["ah n-ae1 m-er t-ay-z-d","jj"],unanimity:["y-uw n-ah n-ih1 m-ah t-iy","nn"],unanimous:["y-uw n-ae1 n-ah m-ah-s","jj"],unanimously:["y-uw n-ae1 n-ah m-ah-s l-iy","rb"],unannounced:["ah-n ah n-aw1-n-s-t","jj"],unanswerable:["ah-n ae-n s-er ah b-ah-l","jj"],unanswered:["ah-n ae1-n s-er-d","jj"],unanticipated:["ah-n ae-n t-ih1 s-ah p-ey t-ih-d","jj"],unapologetic:["ah-n ah p-aa l-ah jh-eh1 t-ih-k","jj"],unappealing:["ah-n ah p-iy1 l-ih-ng","jj"],unappreciated:["ah-n ah p-r-iy1 sh-iy ey t-ih-d","jj"],unapproved:["ah-n ah p-r-uw1-v-d","jj"],unarmed:["ah-n aa1-r-m-d","jj"],unashamedly:["ah-n ah sh-ey1 m-ah-d l-iy","rb"],unassailable:["ah-n ah s-ey1 l-ah b-ah-l","jj"],unassisted:["ah-n ah s-ih1 s-t-ih-d","jj"],unassuming:["ah-n ah s-uw1 m-ih-ng","jj"],unattached:["ah-n ah t-ae1-ch-t","jj"],unattainable:["ah-n ah t-ey1 n-ah b-ah-l","jj nn"],unattended:["ah-n ah t-eh1-n d-ih-d","jj"],unattractive:["ah-n ah t-r-ae1-k t-ih-v","jj"],unaudited:["ah n-ao1 d-ah t-ih-d","jj"],unauthentic:["ah-n ao th-eh1-n t-ih-k","jj"],unauthorized:["ah-n ao1 th-er ay-z-d","jj"],unavailability:["ah-n ah v-ey l-ah b-ih1 l-ih t-iy","nn"],unavailable:["ah-n ah v-ey1 l-ah b-ah-l","jj"],unavailing:["ah-n ah v-ey1 l-ih-ng","jj"],unavoidable:["ah-n ah v-oy1 d-ah b-ah-l","jj"],unavoidably:["ah-n ah v-oy1 d-ah b-l-iy","rb"],unaware:["ah-n ah w-eh1-r","jj rb"],unbalance:["ah-n-b-ae1-l-ah-n-s","vb"],unbalanced:["ah-n b-ae1 l-ah-n-s-t","jj vbn"],unbearable:["ah-n b-eh1 r-ah b-ah-l","jj"],unbearably:["ah-n b-eh1 r-ah b-l-iy","rb"],unbeknownst:["ah-n b-iy n-ow1-n-s-t","jj"],unbelievable:["ah-n b-ah l-iy1 v-ah b-ah-l","jj"],unbelievably:["ah-n b-ah l-iy1 v-ah b-l-iy","rb"],unbelieving:["ah-n b-ah l-iy1 v-ih-ng","jj"],unbiased:["ah-n b-ay1 ah-s-t","jj"],unblemished:["ah-n b-l-eh1 m-ih-sh-t","jj"],unborn:["ah1-n b-ao1-r-n","jj nn"],unbound:["ah-n b-aw1-n-d","jj vbn"],unbounded:["ah-n b-aw1-n d-ih-d","jj"],unbridled:["ah-n b-r-ay1 d-ah-l-d","jj"],unbroken:["ah-n b-r-ow1 k-ah-n","jj"],unburdened:["ah-n b-er1 d-ah-n-d","jj"],unburned:["ah-n b-er1-n-d","jj"],uncalled:["ah-n k-ao1-l-d","jj"],uncannily:["ah-n k-ae1 n-ah l-iy","rb"],uncanny:["ah-n k-ae1 n-iy","jj"],uncaring:["ah-n k-eh1 r-ih-ng","jj"],unceasing:["ah-n s-iy1 s-ih-ng","jj"],uncensored:["ah-n s-eh1-n s-er-d","jj"],unceremoniously:["ah-n s-eh r-ah m-ow1 n-iy ah-s l-iy","rb"],uncertain:["ah-n s-er1 t-ah-n","jj rb"],uncertainty:["ah-n s-er1 t-ah-n t-iy","nn"],unchallenged:["ah-n ch-ae1 l-ih-n-jh-d","jj"],unchanged:["ah-n ch-ey1-n-jh-d","jj"],unchanging:["ah-n ch-ey1-n jh-ih-ng","jj"],uncharacteristic:["ah-n k-eh r-ih-k t-er ih1 s-t-ih-k","jj"],uncharacteristically:["ah-n k-eh r-ih-k t-er ih1 s-t-ih-k l-iy","rb"],uncharted:["ah-n ch-aa1-r t-ih-d","jj"],unchecked:["ah-n ch-eh1-k-t","jj"],unclaimed:["ah-n k-l-ey1-m-d","jj"],unclassified:["ah-n k-l-ae1 s-ih f-ay-d","jj"],uncle:["ah1-ng k-ah-l","nn"],unclean:["ah-n k-l-iy1-n","jj"],unclear:["ah-n k-l-ih1-r","jj"],uncluttered:["ah-n k-l-ah1 t-er-d","jj"],uncoated:["ah-n k-ow1 t-ih-d","jj"],uncollectable:["ah-n k-ah l-eh1-k t-ah b-ah-l","jj"],uncomfortable:["ah-n k-ah1-m f-er t-ah b-ah-l","jj"],uncomfortably:["ah-n k-ah1-m-f t-ah b-l-iy","rb"],uncommitted:["ah-n k-ah m-ih1 t-ih-d","jj"],uncommon:["ah-n k-aa1 m-ah-n","jj rb"],uncommonly:["ah-n k-aa1 m-ah-n l-iy","rb"],uncompensated:["ah-n k-aa1-m p-ah-n s-ey t-ih-d","jj"],uncompetitive:["ah-n k-ah-m p-eh1 t-ah t-ih-v","jj"],uncomplicated:["ah-n k-aa1-m p-l-ah k-ey t-ih-d","jj"],uncompromising:["ah-n k-aa1-m p-r-ah m-ay z-ih-ng","jj"],unconcealed:["ah-n k-ah-n s-iy1-l-d","jj"],unconcern:["ah-n k-ah-n s-er1-n","nn"],unconcerned:["ah-n k-ah-n s-er1-n-d","jj"],unconditional:["ah-n k-ah-n d-ih1 sh-ah n-ah-l","jj"],unconditionally:["ah-n k-ah-n d-ih1 sh-ah-n ah l-iy","rb"],unconfirmed:["ah-n k-ah-n f-er1-m-d","jj"],unconnected:["ah-n k-ah n-eh1-k t-ih-d","jj"],unconscionable:["ah-n k-aa1-n sh-ah-n ah b-ah-l","jj"],unconscious:["ah-n k-aa1-n sh-ah-s","jj nn"],unconsciously:["ah-n k-aa1-n sh-ah-s l-iy","rb"],unconsolidated:["ah-n k-ah-n s-aa1 l-ah d-ey t-ih-d","jj"],unconstitutional:["ah-n k-aa-n s-t-ah t-uw1 sh-ah n-ah-l","jj"],uncontested:["ah-n k-ah-n t-eh1 s-t-ih-d","jj"],uncontrollable:["ah-n k-ah-n t-r-ow1 l-ah b-ah-l","jj"],uncontrollably:["ah-n k-ah-n t-r-ow1 l-ah b-l-iy","rb"],uncontrolled:["ah-n k-ah-n t-r-ow1-l-d","jj"],unconventional:["ah-n k-ah-n v-eh1-n sh-ah n-ah-l","jj"],unconvinced:["ah-n k-ah-n v-ih1-n-s-t","jj"],unconvincing:["ah-n k-ah-n v-ih1-n s-ih-ng","jj"],uncooperative:["ah-n k-ow aa1 p-er ah t-ih-v","jj"],uncorrected:["ah-n k-er eh1-k t-ih-d","jj"],uncounted:["ah-n k-aw1-n t-ih-d","jj"],uncouth:["ah1-n k-uw1-th","jj"],uncover:["ah-n k-ah1 v-er","vb"],uncovered:["ah-n k-ah1 v-er-d","vbn vbd jj"],uncritical:["ah-n k-r-ih1 t-ih k-ah-l","jj"],uncritically:["ah-n k-r-ih1 t-ih k-ah l-iy","rb"],uncut:["ah-n k-ah1-t","jj"],undamaged:["ah-n d-ae1 m-ah-jh-d","jj"],undated:["ah-n d-ey1 t-ih-d","jj"],undaunted:["ah-n d-ao1-n t-ih-d","jj"],undecided:["ah-n d-ih s-ay1 d-ih-d","jj"],undeclared:["ah-n d-ih k-l-eh1-r-d","jj"],undefeated:["ah-n d-ih f-iy1 t-ih-d","jj"],undefined:["ah-n d-ih f-ay1-n-d","jj"],undelivered:["ah-n d-ih l-ih1 v-er-d","jj"],undemocratic:["ah-n d-eh m-ah k-r-ae1 t-ih-k","jj"],undeniable:["ah-n d-ih n-ay1 ah b-ah-l","jj"],undeniably:["ah-n d-ih n-ay1 ah b-l-iy","rb"],under:["ah1-n d-er","in jj rb rp"],underachiever:["ah1-n d-er ah ch-iy v-er","nn"],underage:["ah1-n d-er ih-jh","jj"],underarm:["ah-n d-er aa1-r-m","nn"],underbelly:["ah1-n d-er b-eh l-iy","nn"],underbrush:["ah1-n d-er b-r-ah-sh","nn"],undercover:["ah-n d-er k-ah1 v-er","jj"],undercurrent:["ah1-n d-er k-er ah-n-t","nn"],undercut:["ah1-n d-er k-ah-t","vb nn vbd vbn vbp jj"],underdeveloped:["ah-n d-er d-ih v-eh1 l-ah-p-t","jj"],underdog:["ah1-n d-er d-ao-g","nn"],underemployed:["ah1-n d-er ih-m p-l-oy1-d","jj"],underemployment:["ah-n d-er ih-m p-l-oy1 m-ah-n-t","nn"],underestimate:["ah1-n d-er eh1 s-t-ah m-ey-t","vb"],underfoot:["ah-n d-er f-uh1-t","rb"],underfund:["ah1-n-d-er-f-ah-n-d","vb"],underfunded:["ah1-n d-er f-ah-n d-ih-d","vbn jj"],undergarment:["ah1-n d-er g-aa-r m-ah-n-t","nn"],undergo:["ah-n d-er g-ow1","vb vbp"],undergone:["ah-n d-er g-ao1-n","vbn"],undergraduate:["ah-n d-er g-r-ae1 jh-ah-w ah-t","jj nn"],underground:["ah1-n d-er g-r-aw-n-d","jj nn rb"],undergrowth:["ah1-n d-er g-r-ow-th","nn"],underhanded:["ah1-n d-er hh-ae1-n d-ih-d","jj"],underlie:["ah-n d-er l-ay1","vbp vb"],underline:["ah1-n d-er l-ay-n","vb"],underling:["ah1-n d-er l-ih-ng","nn"],underlying:["ah-n d-er l-ay1 ih-ng","vbg jj"],undermine:["ah1-n d-er m-ay-n","vb vbp"],undermined:["ah-n d-er m-ay1-n-d","vbn vbd jj"],underneath:["ah-n d-er n-iy1-th","in nn"],underpaid:["ah1-n d-er p-ey1-d","jj vbd vbn"],underperform:["ah1-n d-er p-er f-ao-r-m","vb jj"],underperformance:["ah-n d-er p-er f-ao1-r m-ah-n-s","nn"],underperforming:["ah1-n d-er p-er f-ao-r m-ih-ng","vbg jj"],underpin:["ah1-n d-er p-ih-n","vb"],underpriced:["ah1-n d-er p-r-ay-s-t","jj"],underrate:["ah-n-d-er-r-ey1-t","vb"],underrepresented:["ah-n d-er r-eh p-r-ih z-eh1-n t-ih-d","jj"],underscore:["ah-n d-er s-k-ao1-r","vbp nn vb"],undersea:["ah-n d-er s-iy1","jj"],underserved:["ah-n d-er s-er1-v-d","jj"],underside:["ah1-n d-er s-ay-d","nn"],undersized:["ah1-n d-er s-ay-z-d","jj"],understand:["ah-n d-er s-t-ae1-n-d","vb vbp"],understandable:["ah-n d-er s-t-ae1-n d-ah b-ah-l","jj"],understandably:["ah-n d-er s-t-ae1-n d-ah b-l-iy","rb"],understanding:["ah-n d-er s-t-ae1-n d-ih-ng","nn vbg"],understate:["ah1-n d-er s-t-ey-t","vb vbp"],understated:["ah1-n d-er s-t-ey t-ih-d","vbn vbd jj"],understatement:["ah1-n d-er s-t-ey-t m-ah-n-t","nn"],understood:["ah-n d-er s-t-uh1-d","vbn vbd"],undertake:["ah1-n d-er t-ey-k","vb"],undertaken:["ah1-n d-er t-ey k-ah-n","vbn"],undertaker:["ah1-n d-er t-ey k-er","nn"],undertaking:["ah1-n d-er t-ey k-ih-ng","nn vbg"],undertone:["ah1-n d-er t-ow-n","nn"],undertook:["ah-n d-er t-uh1-k","vbd"],undertow:["ah1-n d-er t-ow","nn"],underuse:["ah-n-d-er-y-uw1-z","vb"],underutilize:["ah1-n-d-er-y-uw-t-ah-l-ay-z","vb"],undervalue:["ah1-n-d-er-v-ae-l-y-uw","vb"],undervalued:["ah1-n d-er v-ae-l y-uw-d","vbn vbd jj"],underwater:["ah1-n d-er w-ao t-er","jj nn rb"],underway:["ah-n d-er w-ey1","rb jj"],underwear:["ah1-n d-er w-eh-r","nn"],underweight:["ah-n d-er w-ey1 t-ih-d","jj"],underwent:["ah-n d-er w-eh1-n-t","vbd"],underworld:["ah1-n d-er w-er-l-d","nn"],underwrite:["ah1-n d-er r-ay-t","vb vbp"],underwriter:["ah1-n d-er r-ay t-er","nn"],underwritten:["ah1-n d-er r-ih t-ah-n","vbn jj nn"],underwrote:["ah-n d-er r-ow1-t","vbd nn"],undeserved:["ah-n d-ih z-er1-v-d","jj"],undesirable:["ah-n d-ih z-ay1 r-ah b-ah-l","jj nn"],undetectable:["ah-n d-ih t-eh1-k t-ah b-ah-l","jj"],undetected:["ah-n d-ih t-eh1-k t-ih-d","jj"],undetermined:["ah-n d-ih t-er1 m-ih-n-d","jj"],undeveloped:["ah-n d-ih v-eh1 l-ah-p-t","jj"],undid:["ah-n d-ih1-d","vbd"],undifferentiated:["ah-n d-ih f-er eh1-n sh-iy ey t-ih-d","jj"],undiluted:["ah-n d-ah l-uw1 t-ih-d","jj"],undiminished:["ah-n d-ah m-ih1 n-ih-sh-t","jj"],undisciplined:["ah-n d-ih1 s-ih p-l-ih-n-d","jj"],undisclosed:["ah-n d-ih-s k-l-ow1-z-d","jj"],undisguised:["ah-n d-ih-s g-ay1-z-d","jj"],undisputed:["ah-n d-ih s-p-y-uw1 t-ih-d","jj"],undistinguished:["ah-n d-ih s-t-ih1-ng g-w-ih-sh-t","jj"],undisturbed:["ah-n d-ih s-t-er1-b-d","jj"],undiversified:["ah-n d-ih v-er1 s-ih f-ay-d","jj"],undivided:["ah-n d-ah v-ay1 d-ih-d","jj"],undo:["ah-n d-uw1","vb"],undoing:["ah-n d-uw1 ih-ng","nn vbg"],undone:["ah-n d-ah1-n","vbn jj"],undoubtedly:["ah-n d-aw1 t-ih-d l-iy","rb"],undreamed:["ah-n d-r-iy1-m-d","jj"],undress:["ah-n d-r-eh1-s","nn"],undue:["ah-n d-uw1","jj"],undulating:["ah1-n jh-ah l-ey t-ih-ng","jj"],unduly:["ah-n d-uw1 l-iy","rb"],undying:["ah-n d-ay1 ih-ng","jj"],unearned:["ah-n er1-n-d","jj"],unearth:["ah-n er1-th","vb"],unearthly:["ah-n er1-th l-iy","jj"],unease:["ah-n iy1-z","nn"],uneasily:["ah-n iy1 z-ah l-iy","rb"],uneasiness:["ah-n iy1 z-iy n-ah-s","nn"],uneasy:["ah-n iy1 z-iy","jj"],uneconomic:["ah-n eh k-ah n-aa1 m-ih-k","jj"],uneconomical:["ah-n eh k-ah n-aa1 m-ih k-ah-l","jj"],uneducated:["ah-n eh1 jh-uh k-ey t-ih-d","jj"],unelected:["ah-n ih l-eh1-k t-ih-d","jj"],unemployed:["ah-n eh-m p-l-oy1-d","jj"],unemployment:["ah-n ih-m p-l-oy1 m-ah-n-t","nn"],unencumbered:["ah-n eh-n k-ah1-m b-er-d","jj"],unending:["ah-n eh1-n d-ih-ng","jj"],unenforceable:["ah-n eh-n f-ao1-r s-ah b-ah-l","jj"],unenlightened:["ah-n eh-n l-ay1 t-ah-n-d","jj"],unenthusiastic:["ah-n ih-n th-uw z-iy ae1 s-t-ih-k","jj"],unenviable:["ah-n eh1-n v-iy ah b-ah-l","jj"],unequal:["ah-n iy1 k-w-ah-l","jj"],unequaled:["ah-n iy1 k-w-ah-l-d","jj"],unequivocal:["ah-n ih k-w-ih1 v-ah k-ah-l","jj"],unequivocally:["ah-n iy k-w-ih1 v-ah k-ah l-iy","rb"],unethical:["ah-n eh1 th-ih k-ah-l","jj"],uneven:["ah-n iy1 v-ah-n","jj"],unevenly:["ah-n iy1 v-ah-n l-iy","rb"],uneventful:["ah-n iy v-eh1-n-t f-ah-l","jj"],unexciting:["ah-n ih-k s-ay1 t-ih-ng","jj"],unexercised:["ah-n eh1-k s-er s-ay-z-d","jj"],unexpected:["ah-n ih-k s-p-eh1-k t-ih-d","jj"],unexpectedly:["ah-n ih-k s-p-eh1-k t-ih-d l-iy","rb"],unexplainable:["ah-n ih-k s-p-l-ey1 n-ah b-ah-l","jj"],unexplained:["ah-n ih-k s-p-l-ey1-n-d","jj"],unexplored:["ah-n ih-k s-p-l-ao1-r-d","jj"],unfailing:["ah-n f-ey1 l-ih-ng","jj"],unfailingly:["ah-n f-ey1 l-ih-ng l-iy","rb"],unfair:["ah-n f-eh1-r","jj"],unfairly:["ah-n f-eh1-r l-iy","rb"],unfairness:["ah-n f-eh1-r n-ah-s","nn"],unfaithful:["ah-n f-ey1-th f-ah-l","jj"],unfamiliar:["ah-n f-ah m-ih1 l-y-er","jj"],unfamiliarity:["ah-n f-ah m-ih l-y-eh1 r-ah t-iy","nn"],unfashionable:["ah-n f-ae1 sh-ah-n ah b-ah-l","jj"],unfathomable:["ah-n f-ae1 dh-ah m-ah b-ah-l","jj"],unfavorable:["ah-n f-ey1 v-er ah b-ah-l","jj"],unfavorably:["ah-n f-ey1 v-er ah b-l-iy","rb"],unfazed:["ah-n f-ey1-z-d","jj"],unfeasible:["ah-n f-iy1 z-ah b-ah-l","jj"],unfenced:["ah-n f-eh1-n-s-t","jj"],unfettered:["ah-n f-eh1 t-er-d","jj"],unfilled:["ah-n f-ih1-l-d","jj"],unfinished:["ah-n f-ih1 n-ih-sh-t","jj"],unfit:["ah-n f-ih1-t","jj nn"],unflagging:["ah-n f-l-ae1 g-ih-ng","jj"],unflappable:["ah-n f-l-ae1 p-ah b-ah-l","jj"],unflattering:["ah-n f-l-ae1 t-er ih-ng","jj"],unflinching:["ah-n f-l-ih1-n ch-ih-ng","jj"],unfocused:["ah-n f-ow1 k-ah-s-t","jj"],unfold:["ah-n f-ow1-l-d","vb vbp"],unfolding:["ah-n f-ow1-l d-ih-ng","vbg jj"],unforeseen:["ah-n f-ao-r s-iy1-n","jj"],unforgettable:["ah-n f-er g-eh1 t-ah b-ah-l","jj"],unforgivable:["ah-n f-ao-r g-ih1 v-ah b-ah-l","jj"],unforgiving:["ah-n f-er g-ih1 v-ih-ng","jj"],unformed:["ah-n f-ao1-r-m-d","jj"],unfortunate:["ah-n f-ao1-r ch-ah n-ah-t","jj nn"],unfortunately:["ah-n f-ao1-r ch-ah n-ah-t l-iy","rb"],unfounded:["ah-n f-aw1-n d-ih-d","jj"],unfriendly:["ah-n f-r-eh1-n-d l-iy","jj"],unfulfilled:["ah-n f-uh-l f-ih1-l-d","jj"],unfunded:["ah-n f-ah1-n d-ih-d","jj"],unfunnily:["ah-n f-ah1 n-ah l-iy","rb"],unfurl:["ah-n-f-er1-l","vb"],ungainly:["ah-n g-ey1-n l-iy","jj"],unglamorous:["ah-n g-l-ae1 m-er ah-s","jj"],unglued:["ah-n g-l-uw1-d","jj"],ungovernable:["ah-n g-ah1 v-er n-ah b-ah-l","jj"],ungrateful:["ah-n g-r-ey1-t f-ah-l","jj"],unhappily:["ah-n hh-ae1 p-ah l-iy","rb"],unhappiness:["ah-n hh-ae1 p-iy n-ih-s","nn"],unhappy:["ah-n hh-ae1 p-iy","jj"],unharmed:["ah-n hh-aa1-r-m-d","jj"],unhealthy:["ah-n hh-eh1-l th-iy","jj"],unheard:["ah-n hh-er1-d","jj"],unhedged:["ah-n hh-eh1-jh-d","jj"],unheeded:["ah-n hh-iy1 d-ih-d","jj"],unheralded:["ah-n hh-eh1 r-ah-l d-ih-d","jj"],unhesitatingly:["ah-n hh-eh1 z-ih t-ey t-ih-ng l-iy","rb"],unhindered:["ah-n hh-ih1-n d-er-d","jj"],unhinge:["ah-n-hh-ih1-n-jh","vb"],unholy:["ah-n hh-ow1 l-iy","jj"],unhurried:["ah-n hh-er1 iy-d","jj"],unhurt:["ah-n hh-er1-t","jj"],unidentified:["ah-n ay d-eh1-n t-ah f-ay-d","jj"],unification:["y-uw n-ah f-ah k-ey1 sh-ah-n","nn"],unified:["y-uw1 n-ah f-ay-d","jj vbd vbn"],uniform:["y-uw1 n-ah f-ao-r-m","nn jj"],uniformed:["y-uw1 n-ah f-ao-r-m-d","jj"],uniformity:["y-uw n-ah f-ao1-r m-ah t-iy","nn"],uniformly:["y-uw1 n-ah f-ao-r-m l-iy","rb"],unify:["y-uw1 n-ah f-ay","vb"],unifying:["y-uw1 n-ah f-ay ih-ng","vbg jj"],unilateral:["y-uw n-ah l-ae1 t-er ah-l","jj"],unilaterally:["y-uw n-ah l-ae1 t-er ah l-iy","rb"],unimaginable:["ah-n ih m-ae1 jh-ih n-ah b-ah-l","jj"],unimaginative:["ah-n ih m-ae1 jh-ih n-ah t-ih-v","jj"],unimpaired:["ah-n ih-m p-eh1-r-d","jj"],unimpeachable:["ah-n ih-m p-iy1 ch-ah b-ah-l","jj"],unimpeded:["ah-n ih-m p-iy1 d-ih-d","jj"],unimportant:["ah-n ih-m p-ao1-r t-ah-n-t","jj"],unimpressed:["ah-n ih-m p-r-eh1-s-t","jj"],unimpressive:["ah-n ih-m p-r-eh1 s-ih-v","jj"],unimproved:["ah-n ih-m p-r-uw1-v-d","jj"],unincorporated:["ah-n ih-n k-ao1-r p-er ey t-ih-d","jj"],unindicted:["ah-n ih-n d-ay1 t-ih-d","jj"],uninfected:["ah-n ih-n f-eh1-k t-ih-d","jj"],uninformative:["ah-n ih-n f-ao1-r m-ah t-ih-v","jj"],uninformed:["ah-n ih-n f-ao1-r-m-d","jj"],uninhabitable:["ah-n ih-n hh-ae1 b-ah t-ah b-ah-l","jj"],uninhabited:["ah-n ih-n hh-ae1 b-ah t-ih-d","jj"],uninhibited:["ah-n ih-n hh-ih1 b-ih t-ih-d","jj"],uninitiated:["ah-n ih n-ih1 sh-iy ey t-ih-d","jj"],uninjured:["ah-n ih1-n jh-er-d","jj"],uninspired:["ah-n ih-n s-p-ay1 er-d","jj"],uninsurable:["ah-n ih-n sh-uh1 r-ah b-ah-l","jj"],uninsured:["ah-n ih-n sh-uh1-r-d","jj"],unintelligible:["ah-n ih-n t-eh1 l-ah jh-ah b-ah-l","jj"],unintended:["ah-n ih-n t-eh1-n d-ih-d","jj"],unintentional:["ah-n ih-n t-eh1-n sh-ah n-ah-l","jj"],unintentionally:["ah-n ih-n t-eh1-n sh-ah-n ah l-iy","rb"],uninterested:["ah-n ih1-n t-r-ah s-t-ah-d","jj"],uninteresting:["ah-n ih1-n t-r-ah s-t-ih-ng","jj"],uninterrupted:["ah-n ih-n t-er ah1-p t-ih-d","jj"],uninterruptible:["ah-n ih-n t-er ah1-p t-ah b-ah-l","jj"],uninvited:["ah-n ih-n v-ay1 t-ih-d","jj"],uninviting:["ah-n ih-n v-ay1 t-ih-ng","jj"],uninvolved:["ah-n ih-n v-ao1-l-v-d","jj"],union:["y-uw1 n-y-ah-n","nn jj"],unionist:["y-uw1 n-y-ah n-ah-s-t","nn"],unionize:["y-uw1-n-y-ah-n-ay-z","vb"],unionized:["y-uw1 n-y-ah n-ay-z-d","jj vbd vbn"],unique:["y-uw n-iy1-k","jj nn"],uniquely:["y-uw n-iy1-k l-iy","rb"],uniqueness:["y-uw n-iy1-k n-ah-s","nn"],unison:["y-uw1 n-ah s-ah-n","nn"],unissued:["ah-n ih1 sh-uw-d","jj"],unit:["y-uw1 n-ah-t","nn"],unitary:["y-uw1 n-ih t-eh r-iy","jj"],unite:["y-uw1 n-ay-t","vb vbp"],united:["y-uw n-ay1 t-ah-d","vbn vbd jj"],unitholder:["y-uw1 n-ih-t hh-ow-l d-er","nn"],unity:["y-uw1 n-ah t-iy","nn"],universal:["y-uw n-ah v-er1 s-ah-l","jj"],universality:["y-uw n-ah v-er s-ae1 l-ah t-iy","nn"],universally:["y-uw n-ah v-er1 s-ah l-iy","rb"],universe:["y-uw1 n-ah v-er-s","nn"],university:["y-uw n-ah v-er1 s-ah t-iy","nn"],unjust:["ah-n jh-ah1-s-t","jj"],unjustifiable:["ah-n jh-ah s-t-ih f-ay1 ah b-ah-l","jj"],unjustifiably:["ah-n jh-ah s-t-ih f-ay1 ah b-l-iy","rb"],unjustified:["ah-n jh-ah1 s-t-ah f-ay-d","jj"],unjustly:["ah-n jh-ah1-s-t l-iy","rb"],unkempt:["ah-n k-eh1-m-p-t","jj"],unkind:["ah-n k-ay1-n-d","jj"],unknowable:["ah-n n-ow1 ah b-ah-l","jj"],unknowingly:["ah-n n-ow1 ih-ng l-iy","rb"],unknown:["ah-n n-ow1-n","jj nn"],unlabeled:["ah-n l-ey1 b-ah-l-d","jj"],unlawful:["ah-n l-ao1 f-ah-l","jj"],unlawfully:["ah-n l-ao1 f-ah l-iy","rb"],unleaded:["ah-n l-eh1 d-ah-d","jj"],unleash:["ah-n l-iy1-sh","vb vbp"],unless:["ah-n l-eh1-s","in"],unlicensed:["ah-n l-ay1 s-ah-n-s-t","jj"],unlike:["ah-n l-ay1-k","in jj nn"],unlikely:["ah-n l-ay1-k l-iy","jj rb"],unlimited:["ah-n l-ih1 m-ah t-ah-d","jj"],unlined:["ah-n l-ay1-n-d","jj"],unlisted:["ah-n l-ih1 s-t-ih-d","jj"],unload:["ah-n l-ow1-d","vb vbp"],unloaded:["ah-n l-ow1 d-ah-d","vbn jj vbd"],unlock:["ah-n l-aa1-k","vb vbp"],unlocked:["ah-n l-aa1-k-t","vbd vbn jj"],unlucky:["ah-n l-ah1 k-iy","jj"],unmanageable:["ah-n m-ae1 n-ih jh-ah b-ah-l","jj"],unmanaged:["ah-n m-ae1 n-ih-jh-d","jj"],unmanned:["ah-n m-ae1-n-d","jj"],unmarked:["ah-n m-aa1-r-k-t","jj"],unmarried:["ah-n m-eh1 r-iy-d","jj"],unmask:["ah-n m-ae1-s-k","vb"],unmatched:["ah-n m-ae1-ch-t","jj"],unmentioned:["ah-n m-eh1-n ch-ah-n-d","jj"],unmet:["ah-n m-eh1-t","jj"],unmistakable:["ah-n m-ih s-t-ey1 k-ah b-ah-l","jj"],unmistakably:["ah-n m-ih s-t-ey1 k-ah b-l-iy","rb"],unmixed:["ah-n m-ih1-k-s-t","jj"],unmolested:["ah-n m-ah l-eh1 s-t-ih-d","jj"],unmoved:["ah-n m-uw1-v-d","jj"],unnamed:["ah-n n-ey1-m-d","jj"],unnatural:["ah-n n-ae1 ch-er ah-l","jj"],unnecessarily:["ah-n n-eh1 s-ah s-eh r-ah l-iy","rb"],unnecessary:["ah-n n-eh1 s-ah s-eh r-iy","jj"],unneeded:["ah-n n-iy1 d-ih-d","jj"],unnerve:["ah-n-er1-v","vb"],unnerved:["ah-n n-er1-v-d","vbd jj"],unnerving:["ah-n er1 v-ih-ng","vbg jj"],unnoticed:["ah-n n-ow1 t-ih-s-t","jj"],unobtainable:["ah-n ah-b t-ey1 n-ah b-ah-l","jj"],unobtrusive:["ah-n ah-b t-r-uw1 s-ih-v","jj"],unoccupied:["ah-n aa1 k-y-ah p-ay-d","jj"],unofficial:["ah-n ah f-ih1 sh-ah-l","jj"],unofficially:["ah-n ah f-ih1 sh-ah l-iy","rb"],unopened:["ah-n ow1 p-ah-n-d","jj"],unopposed:["ah-n ah p-ow1-z-d","jj"],unorganized:["ah-n ao1-r g-ah n-ay-z-d","jj"],unorthodox:["ah n-ao1-r th-ah d-aa-k-s","jj"],unpack:["ah-n p-ae1-k","vb"],unpaid:["ah-n p-ey1-d","jj"],unpalatable:["ah-n p-ae1 l-ah t-ah b-ah-l","jj"],unparalleled:["ah-n p-eh1 r-ah l-eh-l-d","jj"],unpatriotic:["ah-n p-ey t-r-iy aa1 t-ih-k","jj"],unperturbed:["ah-n p-er t-er1-b-d","jj"],unplanned:["ah-n p-l-ae1-n-d","jj"],unpleasant:["ah-n p-l-eh1 z-ah-n-t","jj"],unpleasantly:["ah-n p-l-eh1 z-ah-n-t l-iy","rb"],unpleasantness:["ah-n p-l-eh1 z-ah-n-t n-ah-s","nn"],unpopular:["ah-n p-aa1 p-y-ah l-er","jj"],unpopularity:["ah-n p-aa p-y-ah l-eh1 r-ih t-iy","nn"],unprecedented:["ah-n p-r-eh1 s-ih d-eh-n t-ih-d","jj"],unprecedentedly:["ah-n p-r-eh1 s-ah d-eh-n t-ih-d l-iy","rb"],unpredictability:["ah-n p-r-ah d-ih-k t-ah b-ih1 l-ih t-iy","nn"],unpredictable:["ah-n p-r-ih d-ih1-k t-ah b-ah-l","jj"],unpredictably:["ah-n p-r-ih d-ih1-k t-ah b-l-iy","rb"],unprepared:["ah-n p-r-iy p-eh1-r-d","jj"],unpretentious:["ah-n p-r-iy t-eh1-n sh-ah-s","jj"],unproductive:["ah-n p-r-ah d-ah1-k t-ih-v","jj"],unprofessional:["ah-n p-r-ah f-eh1 sh-ah n-ah-l","jj"],unprofitable:["ah-n p-r-aa1 f-ih t-ah b-ah-l","jj"],unpromising:["ah-n p-r-ao1 m-ih s-ih-ng","jj"],unprotected:["ah-n p-r-ah t-eh1-k t-ih-d","jj"],unproved:["ah-n p-r-uw1-v-d","jj"],unproven:["ah-n p-r-uw1 v-ah-n","jj"],unpublicized:["ah-n p-ah1 b-l-ih s-ay-z-d","jj"],unpublished:["ah-n p-ah1 b-l-ih-sh-t","jj"],unpunished:["ah-n p-ah1 n-ih-sh-t","jj"],unqualified:["ah-n k-w-aa1 l-ih f-ay-d","jj"],unquestionable:["ah-n k-w-eh1-s ch-ah n-ah b-ah-l","jj"],unquestionably:["ah-n k-w-eh1-s ch-ah n-ah b-l-iy","rb"],unquestioned:["ah-n k-w-eh1-s ch-ah-n-d","jj"],unravel:["ah-n r-ae1 v-ah-l","vb vbp"],unraveled:["ah-n r-ae1 v-ah-l-d","vbn jj vbd"],unraveling:["ah-n r-ae1 v-ah-l ih-ng","jj vbg"],unread:["ah-n r-eh1-d","jj"],unreadable:["ah-n r-iy1 d-ah b-ah-l","jj"],unreal:["ah-n r-iy1-l","jj"],unrealistic:["ah-n r-iy l-ih1 s-t-ih-k","jj"],unrealistically:["ah-n r-iy ah l-ih1 s-t-ih-k l-iy","rb"],unreality:["ah-n r-iy ae1 l-ah t-iy","nn"],unrealized:["ah-n r-iy1 ah l-ay-z-d","jj"],unreasonable:["ah-n r-iy1-z n-ah b-ah-l","jj"],unreasonably:["ah-n r-iy1 z-ah-n ah b-l-iy","rb"],unreasoning:["ah-n r-iy1-z n-ih-ng","jj"],unrecognizable:["ah-n r-eh k-ah-g n-ay1 z-ah b-ah-l","jj"],unrecognized:["ah-n r-eh1 k-ah-g n-ay-z-d","jj"],unreconstructed:["ah-n r-iy k-ah-n s-t-r-ah1-k t-ih-d","jj"],unredeemed:["ah-n r-iy d-iy1-m-d","jj"],unregistered:["ah-n r-eh1 jh-ih s-t-er-d","jj"],unregulated:["ah-n r-eh1 g-y-ah l-ey t-ih-d","jj"],unrelated:["ah-n r-ih l-ey1 t-ih-d","jj"],unreleased:["ah-n r-ih l-iy1-s-t","jj"],unrelenting:["ah-n r-iy l-eh1-n t-ih-ng","jj"],unreliability:["ah-n r-iy l-ay ah b-ih1 l-ih t-iy","nn"],unreliable:["ah-n r-ih l-ay1 ah b-ah-l","jj"],unrelieved:["ah-n r-iy l-iy1-v-d","jj"],unremarkable:["ah-n r-ih m-aa1-r k-ah b-ah-l","jj"],unremitting:["ah-n r-ih m-ih1 t-ih-ng","jj"],unrepentant:["ah-n r-ih p-eh1-n t-ah-n-t","jj"],unreported:["ah-n r-iy p-ao1-r t-ih-d","jj"],unrequited:["ah-n r-iy k-w-ay1 t-ih-d","jj"],unresolved:["ah-n r-ih z-aa1-l-v-d","jj"],unresponsive:["ah-n r-iy s-p-aa1-n s-ih-v","jj"],unrest:["ah-n r-eh1-s-t","nn"],unrestrained:["ah-n r-iy s-t-r-ey1-n-d","jj"],unrestricted:["ah-n r-iy s-t-r-ih1-k t-ih-d","jj"],unrivaled:["ah-n r-ay1 v-ah-l-d","jj"],unruffled:["ah-n r-ah1 f-ah-l-d","jj"],unruly:["ah-n r-uw1 l-iy","jj"],unsafe:["ah-n s-ey1-f","jj"],unsaleable:["ah-n s-ey1 l-ah b-ah-l","jj"],unsanctioned:["ah-n s-ae1-ng-k sh-ah-n-d","jj"],unsatisfactory:["ah-n s-ah t-ih-s f-ae1-k t-er iy","jj"],unsatisfied:["ah-n s-ae1 t-ih-s f-ay-d","jj"],unsatisfying:["ah-n s-ae1 t-ih-s f-ay ih-ng","jj"],unsaturated:["ah-n s-ae1 ch-er ey t-ih-d","jj"],unsavory:["ah-n s-ey1 v-er iy","jj"],unscathed:["ah-n s-k-ey1-dh-d","jj"],unscheduled:["ah-n s-k-eh1 jh-uw-l-d","jj"],unscientific:["ah-n s-ay ah-n t-ih1 f-ih-k","jj"],unscramble:["ah-n s-k-r-ae1-m b-ah-l","vb"],unscrupulous:["ah-n s-k-r-uw1 p-y-ah l-ah-s","jj"],unseal:["ah-n s-iy1-l","vb"],unsealed:["ah-n s-iy1-l-d","vbn jj"],unseat:["ah-n s-iy1-t","vb"],unseated:["ah-n s-iy1 t-ih-d","jj vbd"],unsecured:["ah-n s-ih k-y-uh1-r-d","jj"],unseemly:["ah-n s-iy1-m l-iy","jj"],unseen:["ah-n s-iy1-n","jj"],unsentimental:["ah-n s-eh-n t-ih m-eh1-n t-ah-l","jj"],unsettle:["ah-n-s-eh1-t-ah-l","vb"],unsettled:["ah-n s-eh1 t-ah-l-d","jj vbd vbn"],unsettling:["ah-n s-eh1 t-ah-l ih-ng","jj vbg"],unshackled:["ah-n sh-ae1 k-ah-l-d","jj"],unshakable:["ah-n sh-ey1 k-ah b-ah-l","jj"],unsharpened:["ah-n sh-aa1-r p-ah-n-d","jj"],unshaven:["ah-n sh-ey1 v-ah-n","jj"],unsightly:["ah-n s-ay1-t l-iy","jj"],unsigned:["ah-n s-ay1-n-d","jj"],unskilled:["ah-n s-k-ih1-l-d","jj"],unsmiling:["ah-n s-m-ay1 l-ih-ng","jj"],unsold:["ah-n s-ow1-l-d","jj"],unsolicited:["ah-n s-ah l-ih1 s-ih t-ih-d","jj"],unsolved:["ah-n s-aa1-l-v-d","jj"],unsophisticated:["ah-n s-ah f-ih1 s-t-ih k-ey t-ih-d","jj"],unsound:["ah-n s-aw1-n-d","jj"],unspeakable:["ah-n s-p-iy1 k-ah b-ah-l","jj"],unspecified:["ah-n s-p-eh1 s-ah f-ay-d","jj"],unspectacular:["ah-n s-p-eh-k t-ae1 k-y-ah l-er","jj"],unspent:["ah-n s-p-eh1-n-t","jj"],unspoiled:["ah-n s-p-oy1-l-d","jj"],unspoken:["ah-n s-p-ow1 k-ah-n","jj"],unstable:["ah-n s-t-ey1 b-ah-l","jj"],unstated:["ah-n s-t-ey1 t-ih-d","jj"],unsteady:["ah-n s-t-eh1 d-iy","jj vb"],unstinting:["ah-n s-t-ih1-n t-ih-ng","jj"],unstoppable:["ah-n s-t-aa1 p-ah b-ah-l","jj"],unstructured:["ah-n s-t-r-ah1-k sh-er-d","jj"],unstuck:["ah-n s-t-ah1-k","jj"],unsubsidized:["ah-n s-ah1-b s-ah d-ay-z-d","jj"],unsubstantiated:["ah-n s-ah-b s-t-ae1-n sh-iy ey t-ih-d","jj"],unsubtle:["ah-n s-ah1 t-ah-l","jj"],unsuccessful:["ah-n s-ah-k s-eh1-s f-ah-l","jj"],unsuccessfully:["ah-n s-ah-k s-eh1-s f-ah l-iy","rb"],unsuitable:["ah-n s-uw1 t-ah b-ah-l","jj"],unsuited:["ah-n s-uw1 t-ih-d","jj"],unsung:["ah-n s-ah1-ng","jj"],unsupportable:["ah-n s-ah p-ao1-r t-ah b-ah-l","jj"],unsupported:["ah-n s-ah p-ao1-r t-ih-d","jj"],unsure:["ah-n sh-uh1-r","jj"],unsurpassed:["ah-n s-er p-ae1-s-t","jj"],unsurprising:["ah-n s-er p-r-ay1 z-ih-ng","jj"],unsuspected:["ah-n s-ah s-p-eh1-k t-ih-d","jj"],unsuspecting:["ah-n s-ah s-p-eh1-k t-ih-ng","jj"],unsustainable:["ah-n s-ah s-t-ey1 n-ah b-ah-l","jj"],unswerving:["ah-n s-w-er1 v-ih-ng","jj"],unsympathetic:["ah-n s-ih-m p-ah th-eh1 t-ih-k","jj"],untapped:["ah-n t-ae1-p-t","jj"],untenable:["ah-n t-eh1 n-ah b-ah-l","jj"],untested:["ah-n t-eh1 s-t-ih-d","jj"],unthinkable:["ah-n th-ih1-ng k-ah b-ah-l","jj nn"],unthinking:["ah-n th-ih1-ng k-ih-ng","jj"],unthinkingly:["ah-n th-ih1-ng k-ih-ng l-iy","rb"],untidy:["ah-n t-ay1 d-iy","jj"],untie:["ah-n-t-ay1","vb"],until:["ah-n t-ih1-l","in"],untimely:["ah-n t-ay1-m l-iy","jj"],unto:["ah1-n t-uw","in rp"],untold:["ah-n t-ow1-l-d","jj"],untouchable:["ah-n t-ah1 ch-ah b-ah-l","jj"],untouched:["ah-n t-ah1-ch-t","jj"],untoward:["ah-n t-uw ao1-r-d","jj"],untraditional:["ah-n t-r-ah d-ih1 sh-ah n-ah-l","jj"],untrained:["ah-n t-r-ey1-n-d","jj"],untrammeled:["ah-n t-r-ae1 m-ah-l-d","jj"],untreated:["ah-n t-r-iy1 t-ih-d","jj"],untried:["ah-n t-r-ay1-d","jj"],untrue:["ah-n t-r-uw1","jj"],untrustworthy:["ah-n t-r-ah1-s-t w-er dh-iy","jj"],unturned:["ah-n t-er1-n-d","jj"],unusable:["ah-n y-uw1 z-ah b-ah-l","jj"],unused:["ah-n y-uw1-z-d","jj"],unusual:["ah n-y-uw1 zh-uw ah-l","jj"],unusually:["ah n-y-uw1 zh-uw ah-l-iy","rb"],unveil:["ah-n v-ey1-l","vb"],unveiled:["ah-n v-ey1-l-d","vbd jj vbn"],unverifiable:["ah-n v-eh r-ih f-ay1 ah b-ah-l","jj"],unwanted:["ah-n w-ao1-n t-ih-d","jj"],unwarranted:["ah-n w-ao1 r-ah-n t-ih-d","jj"],unwary:["ah-n w-eh1 r-iy","jj"],unwashed:["ah-n w-aa1-sh-t","jj"],unwavering:["ah-n w-ey1 v-er ih-ng","jj"],unwed:["ah-n w-eh1-d","jj"],unwelcome:["ah-n w-eh1-l k-ah-m","jj"],unwieldy:["ah-n w-iy1-l d-iy","jj"],unwilling:["ah-n w-ih1 l-ih-ng","jj"],unwillingness:["ah-n w-ih1 l-ih-ng n-ih-s","nn"],unwind:["ah-n w-ay1-n-d","vb"],unwise:["ah-n w-ay1-z","jj"],unwisely:["ah-n w-ay1-z l-iy","rb"],unwitting:["ah-n w-ih1 t-ih-ng","jj"],unwittingly:["ah-n w-ih1 t-ih-ng l-iy","rb"],unworkable:["ah-n w-er1 k-ah b-ah-l","jj"],unworthy:["ah-n w-er1 dh-iy","jj nn"],unwritten:["ah-n r-ih1 t-ah-n","jj"],unyielding:["ah-n y-iy1-l d-ih-ng","jj"],up:["ah1-p","in"],upbeat:["ah1-p b-iy-t","jj nn"],upbringing:["ah1-p b-r-ih ng-ih-ng","nn"],upcoming:["ah1-p k-ah m-ih-ng","jj"],update:["ah-p d-ey1-t","vb vbp nn"],updated:["ah-p d-ey1 t-ah-d","vbn jj"],upgrade:["ah-p g-r-ey1-d","vb jj nn"],upgraded:["ah-p g-r-ey1 d-ah-d","vbn vbd jj"],upheaval:["ah-p hh-iy1 v-ah-l","nn"],upheld:["ah-p hh-eh1-l-d","vbd vbn"],uphill:["ah1-p hh-ih1-l","jj rb"],uphold:["ah-p hh-ow1-l-d","vb vbp"],upholster:["ah-p-ow1-l-s-t-er","vb"],upholstery:["ah-p ow1-l s-t-er iy","nn"],upkeep:["ah1-p k-iy-p","nn"],upland:["ah1-p l-ah-n-d","jj rb"],uplift:["ah1-p l-ih-f-t","nn vb"],uplifting:["ah1-p l-ih-f t-ih-ng","jj vbg"],upmarket:["ah1-p m-aa-r k-ah-t","jj"],upon:["ah p-aa1-n","in rb rp"],upped:["ah1-p-t","vbd vbn"],upper:["ah1 p-er","jj"],uppermost:["ah1 p-er m-ow-s-t","jjs jj rb"],upright:["ah-p r-ay1-t","rb jj"],uprising:["ah p-r-ay1 z-ih-ng","nn"],upriver:["ah p-r-ih1 v-er","jj"],uproar:["ah1-p r-ao-r","nn"],uproot:["ah-p r-uw1-t","vb"],uprooted:["ah-p r-uw1 t-ih-d","vbn vbd jj"],upscale:["ah1-p s-k-ey-l","jj nn rb"],upset:["ah-p s-eh1-t","vbn nn vb vbd vbp jj"],upsetting:["ah-p s-eh1 t-ih-ng","vbg jj nn"],upshot:["ah1-p sh-aa-t","nn"],upside:["ah1-p s-ay1-d","rb jj nn"],upstage:["ah-p-s-t-ey1-jh","vb"],upstairs:["ah-p s-t-eh1-r-z","nn rb jj"],upstanding:["ah1-p s-t-ae-n d-ih-ng","jj"],upstart:["ah1-p s-t-aa-r-t","nn jj"],upstate:["ah1-p s-t-ey1-t","jj rb"],upstream:["ah1-p s-t-r-iy1-m","rb jj"],upsurge:["ah1-p s-er-jh","nn"],upswing:["ah-p s-w-ih1-ng","nn"],uptick:["ah1-p t-ih-k","nn jj vb"],uptight:["ah-p t-ay1-t","jj"],uptown:["ah1-p t-aw1-n","nn jj"],uptrend:["ah1-p t-r-eh-n-d","nn"],upturn:["ah-p t-er1-n","nn"],upward:["ah1-p w-er-d","rb jj"],upwardly:["ah1-p w-er-d l-iy","rb"],uranium:["y-er ey1 n-iy ah-m","nn"],urban:["er1 b-ah-n","jj"],urbane:["er b-ey1-n","jj"],urbanization:["er b-ah n-ah z-ey1 sh-ah-n","nn"],urbanize:["er1-b-ah-n-ay-z","vb"],urbanized:["er1 b-ah n-ay-z-d","vbn jj"],urea:["y-er iy1 ah","nn"],uremia:["y-er iy1 m-iy ah","nn"],urethane:["y-er1 ah th-ey-n","nn"],urge:["er1-jh","vb vbp nn"],urgency:["er1 jh-ah-n s-iy","nn"],urgent:["er1 jh-ah-n-t","jj"],urgently:["er1 jh-ah-n-t l-iy","rb"],urinary:["y-er1 ah n-eh r-iy","jj"],urine:["y-er1 ah-n","nn"],urn:["er1-n","nn"],us:["ah1-s","prp"],usable:["y-uw1 z-ah b-ah-l","jj"],usage:["y-uw1 s-ah-jh","nn"],use:["y-uw1-s","nn vb vbp"],used:["y-uw1-z-d","vbn vbd jj"],useful:["y-uw1-s f-ah-l","jj"],usefully:["y-uw1-s f-ah l-iy","rb"],usefulness:["y-uw1-s f-ah-l n-ah-s","nn"],useless:["y-uw1-s l-ah-s","jj"],user:["y-uw1 z-er","nn"],usher:["ah1 sh-er","nn vbp vb"],usual:["y-uw1 zh-ah w-ah-l","jj rb"],usually:["y-uw1 zh-ah-w ah l-iy","rb"],usurp:["y-uw s-er1-p","vb"],usurpation:["y-uw s-er p-ey1 sh-ah-n","nn"],utensil:["y-uw t-eh1-n s-ah-l","nn"],uterus:["y-uw1 t-er ah-s","nn"],utilitarian:["y-uw t-ih l-ah t-eh1 r-iy ah-n","jj"],utility:["y-uw t-ih1 l-ah t-iy","nn jj"],utilization:["y-uw t-ah l-ah z-ey1 sh-ah-n","nn"],utilize:["y-uw1 t-ah l-ay-z","vb vbp"],utmost:["ah1-t m-ow-s-t","jj nn"],utopia:["y-uw t-ow1 p-iy ah","nn"],utopian:["y-uw t-ow1 p-iy ah-n","jj nn"],utter:["ah1 t-er","jj vbp vb"],utterance:["ah1 t-er ah-n-s","nn"],utterly:["ah1 t-er l-iy","rb"],vacancy:["v-ey1 k-ah-n s-iy","nn"],vacant:["v-ey1 k-ah-n-t","jj"],vacate:["v-ey1 k-ey-t","vb"],vacation:["v-ey k-ey1 sh-ah-n","nn vb"],vacationer:["v-ey k-ey1 sh-ah-n er","nn"],vaccination:["v-ae-k s-ah n-ey1 sh-ah-n","nn"],vaccine:["v-ae-k s-iy1-n","nn"],vaccinia:["v-ah ch-iy1 n-iy ah","nn"],vacillate:["v-ae1 s-ah l-ey-t","vb"],vacillation:["v-ae s-ah l-ey1 sh-ah-n","nn"],vacuous:["v-ae1 k-y-uw ah-s","jj"],vacuum:["v-ae1 k-y-uw-m","nn jj vb vbp"],vagabond:["v-ae1 g-ah b-aa-n-d","nn"],vagary:["v-ey1 g-er iy","nn"],vagina:["v-ah jh-ay1 n-ah","nn"],vaginal:["v-ah jh-ay1 n-ah-l","jj"],vague:["v-ey1-g","jj"],vaguely:["v-ey1-g l-iy","rb"],vagueness:["v-ey1-g n-ih-s","nn"],vaguer:["v-ey1 g-er","jjr"],vaguest:["v-ey1 g-ih-s-t","jjs"],vain:["v-ey1-n","jj rb"],vainly:["v-ey1-n l-iy","rb"],valet:["v-ae l-ey1","nn"],valiant:["v-ae1-l y-ah-n-t","jj"],valiantly:["v-ae1-l y-ah-n-t l-iy","rb"],valid:["v-ae1 l-ah-d","jj"],validate:["v-ae1 l-ah d-ey-t","vb"],validation:["v-ae l-ah d-ey1 sh-ah-n","nn"],validity:["v-ah l-ih1 d-ah t-iy","nn"],validly:["v-ae1 l-ih-d l-iy","rb"],valley:["v-ae1 l-iy","nn"],valor:["v-ae1 l-er","nn"],valuable:["v-ae1-l y-ah b-ah-l","jj"],valuation:["v-ae-l y-uw ey1 sh-ah-n","nn"],value:["v-ae1-l y-uw","nn vbp vb"],valued:["v-ae1-l y-uw-d","vbn jj vbd"],valueless:["v-ae1-l y-uw l-ah-s","jj"],valve:["v-ae1-l-v","nn"],vampire:["v-ae1-m p-ay-r","nn"],van:["v-ae1-n","nn"],vandal:["v-ae1-n d-ah-l","nn"],vandalism:["v-ae1-n d-ah l-ih z-ah-m","nn"],vandalize:["v-ae1-n-d-ah-l-ay-z","vb"],vane:["v-ey1-n","nn"],vanguard:["v-ae1-n g-aa-r-d","nn"],vanilla:["v-ah n-ih1 l-ah","nn"],vanish:["v-ae1 n-ih-sh","vbp vb"],vanity:["v-ae1 n-ah t-iy","nn"],vantage:["v-ae1-n t-ah-jh","nn"],vapor:["v-ey1 p-er","nn"],vaporization:["v-ey p-er ah z-ey1 sh-ah-n","nn"],variability:["v-eh r-iy ah b-ih1 l-ih t-iy","nn"],variable:["v-eh1 r-iy ah b-ah-l","jj nn"],variance:["v-eh1 r-iy ah-n-s","nn"],variant:["v-eh1 r-iy ah-n-t","nn jj"],variation:["v-eh r-iy ey1 sh-ah-n","nn"],varied:["v-eh1 r-iy-d","vbn vbd jj"],varies:["v-eh1 r-iy-z","vbz"],variety:["v-er ay1 ah t-iy","nn"],various:["v-eh1 r-iy ah-s","jj"],variously:["v-eh1 r-iy ah-s l-iy","rb"],varmint:["v-aa1-r m-ih-n-t","nn"],varnish:["v-aa1-r n-ih-sh","nn"],vary:["v-eh1 r-iy","vbp vb"],varying:["v-eh1 r-iy ih-ng","vbg jj"],vascular:["v-ae1 s-k-y-ah l-er","jj"],vase:["v-ey1-s","nn"],vassal:["v-ae1 s-ah-l","nn"],vast:["v-ae1-s-t","jj"],vastly:["v-ae1-s-t l-iy","rb"],vat:["v-ae1-t","nn"],vaudeville:["v-aa1-d v-ih-l","nn"],vault:["v-ao1-l-t","nn vb"],vaulting:["v-ao1-l t-ih-ng","jj vbg"],vaunt:["v-ao1-n-t","vb"],vaunted:["v-ao1-n t-ih-d","jj vbn"],veal:["v-iy1-l","nn"],vector:["v-eh1-k t-er","nn"],veer:["v-ih1-r","vb"],vegetable:["v-eh1-jh t-ah b-ah-l","nn"],vegetarian:["v-eh jh-ah t-eh1 r-iy ah-n","jj"],vegetation:["v-eh jh-ah t-ey1 sh-ah-n","nn"],vehemence:["v-iy1 ah m-ah-n-s","nn"],vehement:["v-iy1 ah m-ah-n-t","jj"],vehemently:["v-iy1 ah m-ah-n-t l-iy","rb"],vehicle:["v-iy1 hh-ih k-ah-l","nn"],vehicular:["v-iy hh-ih1 k-y-ah l-er","jj"],veil:["v-ey1-l","nn vb"],veiled:["v-ey1-l-d","vbn jj"],veiling:["v-ey1 l-ih-ng","nn"],vein:["v-ey1-n","nn"],velocity:["v-ah l-aa1 s-ah t-iy","nn"],velvet:["v-eh1-l v-ah-t","nn"],velvety:["v-eh1-l v-ah t-iy","jj"],venal:["v-iy1 n-ah-l","jj"],vend:["v-eh1-n-d","vb"],vendetta:["v-eh-n d-eh1 t-ah","nn"],vending:["v-eh1-n d-ih-ng","vbg jj"],vendor:["v-eh1-n d-er","nn"],veneer:["v-ah n-ih1-r","nn"],venerable:["v-eh1 n-er ah b-ah-l","jj nn"],venerate:["v-eh1-n-er-ey-t","vb"],venereal:["v-ah n-ih1 r-iy ah-l","jj"],vengeance:["v-eh1-n jh-ah-n-s","nn"],venison:["v-eh1 n-ah s-ah-n","nn"],venom:["v-eh1 n-ah-m","nn"],venomous:["v-eh1 n-ah m-ah-s","jj"],vent:["v-eh1-n-t","nn vb"],ventilate:["v-eh1-n-t-ih-l-ey-t","vb"],ventilated:["v-eh1-n t-ah l-ey t-ih-d","vbd vbn jj"],ventilation:["v-eh-n t-ah l-ey1 sh-ah-n","nn"],ventilator:["v-eh1-n t-ah l-ey t-er","nn"],ventricular:["v-eh-n t-r-ih1 k-y-uw l-er","jj"],venture:["v-eh1-n ch-er","nn vbp jj vb"],venturesome:["v-eh1-n ch-er s-ah-m","jj"],venue:["v-eh1 n-y-uw","nn"],veracity:["v-er ae1 s-ih t-iy","nn"],veranda:["v-er ae1-n d-ah","nn"],verb:["v-er1-b","nn"],verbal:["v-er1 b-ah-l","jj"],verbally:["v-er b-ae1 l-iy","rb"],verbatim:["v-er b-ey1 t-ah-m","rb jj"],verbiage:["v-er1 b-iy ih-jh","nn"],verdant:["v-er1 d-ah-n-t","jj"],verdict:["v-er1 d-ih-k-t","nn"],verge:["v-er1-jh","nn"],verifiable:["v-eh1 r-ah f-ay ah b-ah-l","jj"],verification:["v-eh r-ah f-ah k-ey1 sh-ah-n","nn"],verified:["v-eh1 r-ah f-ay-d","vbn"],verify:["v-eh1 r-ah f-ay","vb vbp"],verisimilitude:["v-eh r-ah s-ah m-ih1 l-ah t-uw-d","nn"],veritable:["v-eh1 r-ih t-ah b-ah-l","jj"],verity:["v-eh1 r-ah t-iy","nn"],vermilion:["v-er m-ih1 l-y-ah-n","jj nn"],vernacular:["v-er n-ae1 k-y-ah l-er","nn jj"],vernal:["v-er1 n-ah-l","jj"],versatile:["v-er1 s-ah t-ah-l","jj"],versatility:["v-er s-ah t-ih1 l-ah t-iy","nn"],verse:["v-er1-s","nn"],versed:["v-er1-s-t","jj"],version:["v-er1 zh-ah-n","nn"],versus:["v-er1 s-ah-s","in cc"],vertebral:["v-er1 t-ah b-r-ah-l","jj"],vertebrate:["v-er1 t-ah b-r-ey-t","nn"],vertex:["v-er1 t-eh-k-s","nn"],vertical:["v-er1 t-ih k-ah-l","jj nn"],vertically:["v-er1 t-ih-k l-iy","rb"],vertigo:["v-er1 t-ih g-ow","nn"],verve:["v-er1-v","nn"],very:["v-eh1 r-iy","rb jj"],vessel:["v-eh1 s-ah-l","nn"],vest:["v-eh1-s-t","nn vb"],vested:["v-eh1 s-t-ah-d","vbn jj"],vestige:["v-eh1 s-t-ih-jh","nn"],vet:["v-eh1-t","nn"],veteran:["v-eh1 t-er ah-n","nn jj"],veterinarian:["v-eh t-r-ah n-eh1 r-iy ah-n","nn"],veterinary:["v-eh1 t-r-ah n-eh r-iy","jj"],veto:["v-iy1 t-ow","nn vb"],vetted:["v-eh1 t-ih-d","vbn"],via:["v-ay1 ah","in"],viability:["v-ay ah b-ih1 l-ah t-iy","nn"],viable:["v-ay1 ah b-ah-l","jj"],viaduct:["v-ay1 ah d-ah-k-t","nn"],vial:["v-ay1 ah-l","nn"],vibe:["v-ay1-b","nn"],vibrancy:["v-ay1 b-r-ah-n s-iy","nn"],vibrant:["v-ay1 b-r-ah-n-t","jj"],vibrate:["v-ay1 b-r-ey-t","vb"],vibration:["v-ay b-r-ey1 sh-ah-n","nn"],vibrato:["v-iy b-r-aa1 t-ow","nn"],vicar:["v-ih1 k-er","nn"],vicarious:["v-ay k-eh1 r-iy ah-s","jj"],vicariously:["v-ay k-eh1 r-iy ah-s l-iy","rb"],vice:["v-ay1-s","nn jj rb"],vicinity:["v-ah s-ih1 n-ah t-iy","nn"],vicious:["v-ih1 sh-ah-s","jj"],viciously:["v-ih1 sh-ah-s l-iy","rb"],vicissitude:["v-ih s-ih1 s-ih t-uw-d","nn"],victim:["v-ih1-k t-ah-m","nn"],victimize:["v-ih1-k-t-ah-m-ay-z","vb"],victimized:["v-ih1-k t-ah m-ay-z-d","vbn jj"],victimless:["v-ih1-k t-ah-m l-ah-s","jj"],victor:["v-ih1-k t-er","nn"],victorious:["v-ih-k t-ao1 r-iy ah-s","jj"],victory:["v-ih1-k t-er iy","nn"],video:["v-ih1 d-iy ow","nn jj"],videocassette:["v-ih1 d-iy ow k-ae s-eh-t","nn"],videotape:["v-ih1 d-iy ow t-ey1-p","nn vb"],videotext:["v-ih1 d-iy ow t-eh-k-s-t","nn"],view:["v-y-uw1","nn vbp vb"],viewer:["v-y-uw1 er","nn"],viewership:["v-y-uw1 er sh-ih-p","nn"],viewpoint:["v-y-uw1 p-oy-n-t","nn"],vigil:["v-ih1 jh-ah-l","nn"],vigilance:["v-ih1 jh-ah l-ah-n-s","nn"],vigilant:["v-ih1 jh-ah l-ah-n-t","jj"],vigilante:["v-ih jh-ah l-ae1-n t-ih","nn"],vigilantism:["v-ih jh-ah l-ae1-n t-ih z-ah-m","nn"],vignette:["v-ih-n y-eh1-t","nn"],vigor:["v-ih1 g-er","nn"],vigorous:["v-ih1 g-er ah-s","jj"],vigorously:["v-ih1 g-er ah-s l-iy","rb"],vile:["v-ay1-l","jj"],vilification:["v-ih l-ah f-ah k-ey1 sh-ah-n","nn"],vilified:["v-ih1 l-ah f-ay-d","vbn"],vilify:["v-ih1-l-ih-f-ay","vb"],villa:["v-ih1 l-ah","nn"],village:["v-ih1 l-ah-jh","nn"],villager:["v-ih1 l-ih jh-er","nn"],villain:["v-ih1 l-ah-n","nn"],villainous:["v-ih1 l-ah n-ah-s","jj"],vindicate:["v-ih1-n d-ah k-ey-t","vb"],vindication:["v-ih-n d-ah k-ey1 sh-ah-n","nn"],vindictive:["v-ih-n d-ih1-k t-ih-v","jj"],vine:["v-ay1-n","nn"],vinegar:["v-ih1 n-ah g-er","nn"],vineyard:["v-ih1-n y-er-d","nn"],vintage:["v-ih1-n t-ih-jh","jj nn"],vintner:["v-ih1-n-t n-er","nn"],vinyl:["v-ay1 n-ah-l","nn"],violate:["v-ay1 ah l-ey-t","vb vbp jj"],violation:["v-ay ah l-ey1 sh-ah-n","nn"],violator:["v-ay1 ah l-ey t-er","nn"],violence:["v-ay1 ah l-ah-n-s","nn"],violent:["v-ay1 ah l-ah-n-t","jj"],violently:["v-ay1 ah l-ah-n-t l-iy","rb"],violet:["v-ay1 ah l-ih-t","nn"],violin:["v-ay ah l-ih1-n","nn"],violinist:["v-ay ah l-ih1 n-ah-s-t","nn"],viper:["v-ay1 p-er","nn"],viral:["v-ay1 r-ah-l","jj"],virgin:["v-er1 jh-ih-n","jj nn"],virginity:["v-er jh-ih1 n-ih t-iy","nn"],virile:["v-ih1 r-ah-l","jj"],virility:["v-er ih1 l-ah t-iy","nn"],virtual:["v-er1 ch-uw ah-l","jj"],virtually:["v-er1 ch-uw ah l-iy","rb in jj"],virtue:["v-er1 ch-uw","nn"],virtuosity:["v-er ch-uw aa1 s-ih t-iy","nn"],virtuoso:["v-er ch-uw ow1 s-ow","jj nn"],virtuous:["v-er1 ch-uw ah-s","jj"],virulence:["v-ih1 r-ah l-ah-n-s","nn"],virulent:["v-ih1 r-ah l-ah-n-t","jj"],virus:["v-ay1 r-ah-s","nn"],visa:["v-iy1 z-ah","nn"],visage:["v-ih1 z-ah-jh","nn"],visceral:["v-ih1 s-er ah-l","jj"],viscosity:["v-ih-s k-aa1 s-ah t-iy","nn"],viscous:["v-ih1-s k-ah-s","jj"],vise:["v-ay1-s","nn"],visibility:["v-ih z-ah b-ih1 l-ih t-iy","nn"],visible:["v-ih1 z-ah b-ah-l","jj"],visibly:["v-ih1 z-ah b-l-iy","rb"],vision:["v-ih1 zh-ah-n","nn"],visionary:["v-ih1 zh-ah-n eh r-iy","jj"],visit:["v-ih1 z-ah-t","nn vb vbp"],visitation:["v-ih z-ah t-ey1 sh-ah-n","nn"],visiting:["v-ih1 z-ah t-ih-ng","vbg jj"],visitor:["v-ih1 z-ah t-er","nn"],vista:["v-ih1 s-t-ah","nn"],visual:["v-ih1 zh-ah w-ah-l","jj"],visualization:["v-ih zh-w-ah l-ah z-ey1 sh-ah-n","nn"],visualize:["v-ih1 zh-w-ah l-ay-z","vb"],visually:["v-ih1 zh-w-ah l-iy","rb"],vital:["v-ay1 t-ah-l","jj"],vitality:["v-ay t-ae1 l-ah t-iy","nn"],vitally:["v-ay1 t-ah l-iy","rb"],vitamin:["v-ay1 t-ah m-ah-n","nn"],vitriol:["v-ih1 t-r-iy ah-l","nn"],vitriolic:["v-ih t-r-iy aa1 l-ih-k","jj"],vivacious:["v-ah v-ey1 sh-ah-s","jj"],vivid:["v-ih1 v-ah-d","jj"],vividly:["v-ih1 v-ah-d l-iy","rb"],vividness:["v-ih1 v-ah-d n-ah-s","nn"],vocabulary:["v-ow k-ae1 b-y-ah l-eh r-iy","nn"],vocal:["v-ow1 k-ah-l","jj nn"],vocalist:["v-ow1 k-ah l-ih-s-t","nn"],vocally:["v-ow1 k-ah l-iy","rb"],vocation:["v-ow k-ey1 sh-ah-n","nn"],vocational:["v-ow k-ey1 sh-ah n-ah-l","jj"],vociferous:["v-ow s-ih1 f-er ah-s","jj"],vociferously:["v-ah s-ih1 f-er ah-s l-iy","rb"],vodka:["v-aa1-d k-ah","nn"],vogue:["v-ow1-g","nn"],voice:["v-oy1-s","nn vbp vb"],voiced:["v-oy1-s-t","vbd jj vbn"],voiceless:["v-oy1-s l-ah-s","jj"],void:["v-oy1-d","nn jj vb"],volatile:["v-aa1 l-ah t-ah-l","jj"],volatility:["v-aa l-ah t-ih1 l-ah t-iy","nn"],volcanic:["v-aa-l k-ae1 n-ih-k","jj"],volcano:["v-aa-l k-ey1 n-ow","nn"],volition:["v-ow l-ih1 sh-ah-n","nn"],volley:["v-aa1 l-iy","nn"],volleyball:["v-aa1 l-iy b-ao-l","nn"],volt:["v-ow1-l-t","nn"],voltage:["v-ow1-l t-ah-jh","nn"],voluble:["v-aa1 l-y-ah b-ah-l","jj"],volume:["v-aa1 l-y-uw-m","nn"],voluminous:["v-ah l-uw1 m-ah n-ah-s","jj"],voluntarily:["v-aa l-ah-n t-eh1 r-ah l-iy","rb"],voluntary:["v-aa1 l-ah-n t-eh r-iy","jj"],volunteer:["v-aa l-ah-n t-ih1-r","nn vb vbp"],voluptuous:["v-ah l-ah1-p ch-ah-w ah-s","jj"],vomit:["v-aa1 m-ah-t","vb vbp"],voodoo:["v-uw1 d-uw","nn"],voracious:["v-ao r-ey1 sh-ah-s","jj"],vortex:["v-ao1-r t-eh-k-s","nn"],vote:["v-ow1-t","nn vb vbp"],voter:["v-ow1 t-er","nn"],voting:["v-ow1 t-ih-ng","nn jj vbg"],voucher:["v-aw1 ch-er","nn"],vow:["v-aw1","nn vb vbp"],vowel:["v-aw1 ah-l","nn jj"],voyage:["v-oy1 ah-jh","nn"],voyager:["v-oy1 ah jh-er","nn"],voyeurism:["v-oy y-uw1 r-ih z-ah-m","nn"],vulgar:["v-ah1-l g-er","jj"],vulnerability:["v-ah-l n-er ah b-ih1 l-ih t-iy","nn"],vulnerable:["v-ah1-l n-er ah b-ah-l","jj"],vulture:["v-ah1-l ch-er","nn"],wacky:["w-ae1 k-iy","jj"],wad:["w-aa1-d","nn vb"],wade:["w-ey1-d","vb"],wafer:["w-ey1 f-er","nn"],waffle:["w-aa1 f-ah-l","nn vb"],waffling:["w-aa1 f-l-ih-ng","vbg jj nn"],waft:["w-aa1-f-t","vb"],wag:["w-ae1-g","vb vbp"],wage:["w-ey1-jh","nn vb"],wager:["w-ey1 jh-er","nn vb"],waggle:["w-ae1 g-ah-l","vb"],wagon:["w-ae1 g-ah-n","nn"],waif:["w-ey1-f","nn"],wail:["w-ey1-l","nn vb"],waist:["w-ey1-s-t","nn"],wait:["w-ey1-t","vb vbp nn"],waiter:["w-ey1 t-er","nn"],waiting:["w-ey1 t-ih-ng","vbg jj"],waitress:["w-ey1 t-r-ah-s","nn"],waive:["w-ey1-v","vb"],waiver:["w-ey1 v-er","nn"],wake:["w-ey1-k","vbp vb"],waking:["w-ey1 k-ih-ng","vbg jj"],wale:["w-ey1-l","nn"],walk:["w-ao1-k","vb vbp nn"],walker:["w-ao1 k-er","nn"],walking:["w-ao1 k-ih-ng","vbg jj"],walkout:["w-ao1-k aw-t","nn"],walkway:["w-ao1-k w-ey","nn"],wall:["w-ao1-l","nn vbp vb"],wallboard:["w-ao1-l b-ao-r-d","nn"],walled:["w-ao1-l-d","jj vbn"],wallet:["w-ao1 l-ah-t","nn"],wallflower:["w-ao1-l f-l-aw er","nn"],wallop:["w-aa1 l-ah-p","nn vb"],walloping:["w-ao1 l-ah p-ih-ng","jj nn"],wallow:["w-aa1 l-ow","vb"],wallpaper:["w-ao1-l p-ey p-er","nn"],walnut:["w-ao1-l n-ah-t","nn"],walrus:["w-ao1-l r-ah-s","nn"],waltz:["w-ao1-l-t-s","nn vb"],wan:["w-aa1-n","jj"],wand:["w-aa1-n-d","nn"],wander:["w-aa1-n d-er","vb vbp"],wanderer:["w-aa1-n d-er er","nn"],wane:["w-ey1-n","vb vbp nn"],wangle:["w-ae1-ng-g-ah-l","vb"],want:["w-aa1-n-t","vbp vb nn"],wanted:["w-aa1-n t-ah-d","vbd jj vbn"],wanton:["w-ao1-n t-ah-n","jj"],war:["w-ao1-r","nn"],warble:["w-ao1-r-b-ah-l","vb"],ward:["w-ao1-r-d","nn vb"],warden:["w-ao1-r d-ah-n","nn"],wardrobe:["w-ao1-r-d r-ow-b","nn"],ware:["w-eh1-r","nn"],warehouse:["w-eh1-r hh-aw-s","nn vb"],warehousing:["w-eh1-r hh-aw z-ih-ng","nn"],warfare:["w-ao1-r f-eh-r","nn"],warhead:["w-ao1-r hh-eh-d","nn"],warily:["w-eh1 r-ah l-iy","rb"],wariness:["w-eh1 r-iy n-ih-s","nn"],warlike:["w-ao1-r l-ay-k","jj"],warlord:["w-ao1-r l-ao-r-d","nn"],warm:["w-ao1-r-m","jj vb"],warmer:["w-ao1-r m-er","jjr"],warmish:["w-ao1-r m-ih-sh","jj"],warmly:["w-ao1-r-m l-iy","rb"],warmth:["w-ao1-r-m-th","nn"],warmup:["w-ao1-r m-ah-p","nn"],warn:["w-ao1-r-n","vb vbp"],warning:["w-ao1-r n-ih-ng","nn vbg"],warningly:["w-ao1-r n-ih-ng l-iy","rb"],warp:["w-ao1-r-p","nn vb"],warped:["w-ao1-r-p-t","vbn jj"],warrant:["w-ao1 r-ah-n-t","nn vbp vb"],warranted:["w-ao1 r-ah-n t-ih-d","vbn jj vbd"],warrantless:["w-ao1 r-ah-n-t l-ah-s","jj"],warranty:["w-ao1 r-ah-n t-iy","nn"],warren:["w-ao1 r-ah-n","nn"],warrior:["w-ao1 r-iy er","nn"],warship:["w-ao1-r sh-ih-p","nn"],wart:["w-ao1-r-t","nn"],wartime:["w-ao1-r t-ay-m","nn"],wary:["w-eh1 r-iy","jj"],was:["w-aa1-z","vbd"],"wasn't":["w-aa1-z-ah-n-t","vbd"],wash:["w-aa1-sh","nn vbp vb"],washable:["w-aa1 sh-ah b-ah-l","jj"],washbasin:["w-aa1-sh b-ey s-ah-n","nn"],washboard:["w-aa1-sh b-ao-r-d","nn"],washed:["w-aa1-sh-t","vbn vbd jj"],washer:["w-aa1 sh-er","nn"],washout:["w-aa1-sh aw-t","nn"],wasp:["w-aa1-s-p","nn"],waste:["w-ey1-s-t","nn vbp jj vb"],wastebasket:["w-ey1-s-t b-ae s-k-ah-t","nn"],wasted:["w-ey1 s-t-ah-d","vbn vbd jj"],wasteful:["w-ey1-s-t f-ah-l","jj"],wasteland:["w-ey1-s-t l-ae-n-d","nn"],wastepaper:["w-ey1-s-t p-ey p-er","nn"],wastewater:["w-ey1-s-t w-ao t-er","nn"],wasting:["w-ey1 s-t-ih-ng","vbg jj nn"],watch:["w-aa1-ch","vb jj nn vbp"],watchdog:["w-aa1-ch d-ao-g","nn jj"],watched:["w-aa1-ch-t","vbd vbn jj"],watcher:["w-aa1 ch-er","nn"],watchful:["w-aa1-ch f-ah-l","jj"],watchman:["w-aa1-ch m-ah-n","nn"],watchword:["w-aa1-ch w-er-d","nn"],water:["w-ao1 t-er","nn vb jj"],watercolor:["w-ao1 t-er k-ah l-er","nn"],waterfall:["w-ao1 t-er f-ao-l","nn"],waterfront:["w-ao1 t-er f-r-ah-n-t","nn"],waterlogged:["w-ao1 t-er l-aa-g-d","jj"],watermelon:["w-ao1 t-er m-eh l-ah-n","nn"],waterproof:["w-ao1 t-er p-r-uw-f","nn"],waterproofing:["w-ao1 t-er p-r-uw f-ih-ng","nn"],watershed:["w-ao1 t-er sh-eh-d","nn jj"],waterway:["w-ao1 t-er w-ey","nn"],waterworks:["w-ao1 t-er w-er-k-s","nn"],watery:["w-ao1 t-er iy","jj"],watt:["w-aa1-t","nn"],wattle:["w-aa1 t-ah-l","nn"],wave:["w-ey1-v","nn vb vbp"],wavelength:["w-ey1-v l-eh-ng-th","nn"],waver:["w-ey1 v-er","vbp nn vb"],wavy:["w-ey1 v-iy","jj"],wax:["w-ae1-k-s","nn vb"],waxed:["w-ae1-k-s-t","vbd jj vbn"],waxing:["w-ae1-k s-ih-ng","nn"],waxy:["w-ae1-k s-iy","jj"],way:["w-ey1","nn rb"],waylaid:["w-ey1 l-ey-d","vbn"],wayside:["w-ey1 s-ay-d","nn"],wayward:["w-ey1 w-er-d","jj"],we:["w-iy1","prp"],weak:["w-iy1-k","jj"],weaken:["w-iy1 k-ah-n","vb vbp"],weakened:["w-iy1 k-ah-n-d","vbn jj vbd"],weakening:["w-iy1 k-ah n-ih-ng","vbg jj"],weaker:["w-iy1 k-er","jjr rbr"],weakest:["w-iy1 k-ah-s-t","jjs"],weakly:["w-iy1-k l-iy","rb"],weakness:["w-iy1-k n-ah-s","nn"],wealth:["w-eh1-l-th","nn"],wealthier:["w-eh1-l th-iy er","jjr"],wealthiest:["w-eh1-l th-iy ah-s-t","jjs"],wealthy:["w-eh1-l th-iy","jj"],wean:["w-iy1-n","vb"],weapon:["w-eh1 p-ah-n","nn"],weaponry:["w-eh1 p-ah-n r-iy","nn"],wear:["w-eh1-r","vb jj nn vbp"],wearied:["w-ih1 r-iy-d","vbd"],wearily:["w-eh1 r-ah l-iy","rb"],weariness:["w-ih1 r-iy n-ah-s","nn"],wearisome:["w-ih1 r-iy s-ah-m","jj"],weary:["w-ih1 r-iy","jj vb"],weasel:["w-iy1 z-ah-l","nn"],weather:["w-eh1 dh-er","nn vb vbp"],weatherman:["w-eh1 dh-er m-ae-n","nn"],weatherproof:["w-eh1 dh-er p-r-uw-f","jj"],weave:["w-iy1-v","vb nn"],weaver:["w-iy1 v-er","nn"],web:["w-eh1-b","nn jj"],wed:["w-eh1-d","vbn vb"],wedded:["w-eh1 d-ah-d","vbn jj"],wedding:["w-eh1 d-ih-ng","nn"],wedge:["w-eh1-jh","nn vb"],wedlock:["w-eh1-d l-aa-k","nn"],wee:["w-iy1","jj prp"],weed:["w-iy1-d","nn vb"],week:["w-iy1-k","nn"],weekday:["w-iy1-k d-ey","nn jj"],weekend:["w-iy1-k eh-n-d","nn"],weeklong:["w-iy1-k l-ao-ng","jj nn"],weekly:["w-iy1-k l-iy","jj rb nn"],weep:["w-iy1-p","vb nn"],weevil:["w-iy1 v-ah-l","nn"],weigh:["w-ey1","vb vbp"],weight:["w-ey1-t","nn vb"],weighted:["w-ey1 t-ih-d","jj vbd vbn"],weighting:["w-ey1 t-ih-ng","nn"],weightlessness:["w-ey1-t l-ah-s n-ah-s","nn"],weighty:["w-ey1 t-iy","jj"],weir:["w-iy1-r","nn"],weird:["w-ih1-r-d","jj nn"],weirdest:["w-ih1-r d-ah-s-t","jjs"],weirdly:["w-ih1-r-d l-iy","rb"],weirdo:["w-ih1-r d-ow","nn"],welcome:["w-eh1-l k-ah-m","jj nn vb vbp"],welcoming:["w-eh1-l k-ah m-ih-ng","vbg jj"],weld:["w-eh1-l-d","vb nn"],welfare:["w-eh1-l f-eh-r","nn"],well:["w-eh1-l","rb vbp jj nn vb uh"],wellhead:["w-eh1-l hh-eh-d","nn"],wellness:["w-eh1-l n-ah-s","nn"],wellspring:["w-eh1-l s-p-r-ih-ng","nn"],welter:["w-eh1-l t-er","nn"],went:["w-eh1-n-t","vbd vbn"],wept:["w-eh1-p-t","vbd vbn"],were:["w-er","vbd vb"],"weren't":["w-er-ah-n-t","vbd vb"],west:["w-eh1-s-t","nn jj rb jjs"],westbound:["w-eh1-s-t b-aw-n-d","jj"],westerly:["w-eh1 s-t-er l-iy","jj rb"],western:["w-eh1 s-t-er-n","jj"],westward:["w-eh1-s-t w-er-d","rb jj nn"],wet:["w-eh1-t","jj nn vbd vb vbp"],wetland:["w-eh1-t l-ae-n-d","nn"],wetness:["w-eh1-t n-ah-s","nn"],whack:["w-ae1-k","vb nn"],whale:["w-ey1-l","nn"],whaling:["w-ey1 l-ih-ng","nn"],whammy:["w-ae1 m-iy","nn"],wharf:["w-ao1-r-f","nn"],what:["w-ah1-t","wp wdt in"],whatever:["w-ah-t eh1 v-er","wdt rb wp"],whatsoever:["w-ah-t s-ow eh1 v-er","rb wp"],wheat:["w-iy1-t","nn jj"],wheel:["w-iy1-l","nn vb vbp"],wheelchair:["w-iy1-l ch-eh-r","nn"],wheeled:["w-iy1-l-d","vbd jj vbn"],wheeze:["w-iy1-z","vb nn"],wheezing:["w-iy1 z-ih-ng","vbg jj"],when:["w-eh1-n","wrb in"],whence:["w-eh1-n-s","wrb"],whenever:["w-eh-n eh1 v-er","wrb"],where:["w-eh1-r","wrb"],whereabouts:["w-eh1 r-ah b-aw-t-s","nn"],whereas:["w-eh r-ae1-z","in"],whereby:["w-eh-r b-ay1","wrb"],wherein:["w-eh r-ih1-n","wrb rb"],whereupon:["w-eh1 r-ah p-aa1-n","in"],wherever:["w-eh r-eh1 v-er","wrb"],wherewithal:["w-eh1-r w-ih dh-ao-l","nn jj"],whet:["w-eh1-t","vb"],whether:["w-eh1 dh-er","in cc"],which:["w-ih1-ch","wdt wp"],whichever:["w-ih-ch eh1 v-er","wdt"],whiff:["w-ih1-f","nn"],while:["w-ay1-l","in jj nn rb vb"],whim:["w-ih1-m","nn"],whimper:["w-ih1-m p-er","nn vb"],whimsical:["w-ih1-m z-ih k-ah-l","jj"],whimsy:["w-ih1-m s-iy","nn"],whine:["w-ay1-n","nn vb"],whip:["w-ih1-p","nn vb"],whiplash:["w-ih1-p l-ae-sh","nn"],whipped:["w-ih1-p-t","vbd vbn jj"],whipping:["w-ih1 p-ih-ng","vbg jj nn"],whirl:["w-er1-l","nn vb vbp"],whirling:["w-er1 l-ih-ng","vbg jj nn"],whirlpool:["w-er1-l p-uw-l","nn"],whirlwind:["w-er1-l w-ih-n-d","nn jj"],whisk:["w-ih1-s-k","vb"],whisker:["w-ih1 s-k-er","nn"],whiskey:["w-ih1-s k-iy","nn"],whisky:["w-ih1-s k-iy","nn"],whisper:["w-ih1 s-p-er","nn vb"],whispered:["w-ih1 s-p-er-d","vbd vbn jj"],whistle:["w-ih1 s-ah-l","nn vb vbp"],whistleblower:["w-ih1 s-ah-l b-l-ow er","nn"],white:["w-ay1-t","jj nn"],whitely:["w-ay1-t l-iy","rb"],whiteness:["w-ay1-t n-ah-s","nn"],whitetail:["w-ay1-t t-ey-l","nn"],whitewash:["w-ay1-t w-aa-sh","nn vb"],whitish:["w-ay1 t-ih-sh","jj"],whittle:["w-ih1 t-ah-l","vb vbp"],whiz:["w-ih1-z","nn vb uh"],who:["hh-uw1","wp nn"],whoever:["hh-uw eh1 v-er","wp"],whole:["hh-ow1-l","jj nn rp"],wholehearted:["hh-ow1-l hh-aa-r t-ih-d","jj"],wholeheartedly:["hh-ow1-l hh-aa-r t-ih-d l-iy","rb"],wholesale:["hh-ow1-l s-ey-l","jj nn vb"],wholesaler:["hh-ow1-l s-ey l-er","nn"],wholesome:["hh-ow1-l s-ah-m","jj"],wholly:["hh-ow1 l-iy","rb"],whom:["hh-uw1-m","wp"],whoop:["w-uw1-p","nn vb"],whoosh:["w-uw1-sh","vb vbp nn"],whopper:["w-aa1 p-er","nn"],whopping:["w-aa1 p-ih-ng","jj"],whore:["hh-ao1-r","nn"],whorl:["w-er1-l","nn"],whose:["hh-uw1-z","wp$"],whosoever:["hh-uw s-ow eh1 v-er","wp"],why:["w-ay1","wrb"],wick:["w-ih1-k","nn"],wicked:["w-ih1 k-ah-d","jj"],wickedly:["w-ih1 k-ih-d l-iy","rb"],wickedness:["w-ih1 k-ah-d n-ah-s","nn"],wicker:["w-ih1 k-er","nn"],wicket:["w-ih1 k-ah-t","nn"],wide:["w-ay1-d","jj rb"],widely:["w-ay1-d l-iy","rb"],widen:["w-ay1 d-ah-n","vb vbp"],wider:["w-ay1 d-er","jjr rbr"],widespread:["w-ay1-d s-p-r-eh1-d","jj"],widest:["w-ay1 d-ah-s-t","jjs"],widget:["w-ih1 jh-ih-t","nn"],widow:["w-ih1 d-ow","nn vb"],widowed:["w-ih1 d-ow-d","vbn jj"],widower:["w-ih1 d-ow er","nn"],width:["w-ih1-d-th","nn"],wield:["w-iy1-l-d","vb vbp"],wiener:["w-iy1 n-er","nn"],wife:["w-ay1-f","nn"],wig:["w-ih1-g","nn"],wiggle:["w-ih1 g-ah-l","nn jj vb vbp"],wild:["w-ay1-l-d","jj rb"],wildcat:["w-ay1-l-d k-ae-t","nn jj"],wildcatter:["w-ay1-l-d k-ae t-er","nn"],wilderness:["w-ih1-l d-er n-ah-s","nn"],wildest:["w-ay1-l d-ih-s-t","jjs"],wildflower:["w-ay1-l-d f-l-aw-r","nn"],wildlife:["w-ay1-l-d l-ay-f","nn"],wildly:["w-ay1-l-d l-iy","rb"],wildness:["w-ay1-l-d n-ah-s","nn"],wile:["w-ay1-l","nn"],will:["w-ih1-l","md vbp nn vb"],willful:["w-ih1-l f-ah-l","jj"],willfully:["w-ih1-l f-ah l-iy","rb"],william:["w-ih1 l-y-ah-m","nn"],willing:["w-ih1 l-ih-ng","jj vbg"],willingly:["w-ih1 l-ih-ng l-iy","rb"],willingness:["w-ih1 l-ih-ng n-ah-s","nn"],willow:["w-ih1 l-ow","nn"],willowy:["w-ih1 l-ah-w iy","jj"],willpower:["w-ih1-l p-aw er","nn"],willy:["w-ih1 l-iy","rb"],wilt:["w-ih1-l-t","vb"],wilted:["w-ih1-l t-ih-d","jj vbn"],wily:["w-ay1 l-iy","jj"],wimp:["w-ih1-m-p","nn vb"],win:["w-ih1-n","vb nn vbp"],wince:["w-ih1-n-s","nn vb"],wind:["w-ay1-n-d","nn vbp vb"],winded:["w-ih1-n d-ih-d","jj vbn"],winder:["w-ih1-n d-er","nn"],windfall:["w-ih1-n-d f-ao-l","nn"],winding:["w-ay1-n d-ih-ng","vbg jj nn"],windmill:["w-ih1-n-d m-ih-l","nn"],window:["w-ih1-n d-ow","nn"],windowless:["w-ih1-n d-ow l-ah-s","jj"],windowpane:["w-ih1-n d-ow p-ey-n","nn"],windshield:["w-ih1-n-d sh-iy-l-d","nn"],windstorm:["w-ih1-n-d s-t-ao-r-m","nn"],windswept:["w-ih1-n s-w-eh-p-t","jj"],windup:["w-ay1-n d-ah-p","nn"],windy:["w-ih1-n d-iy","jj"],wine:["w-ay1-n","nn jj"],winery:["w-ay1 n-er iy","nn"],wing:["w-ih1-ng","nn vb"],winged:["w-ih1-ng-d","vbd vbn jj"],winger:["w-ih1 ng-er","nn"],wingman:["w-ih1-ng m-ah-n","nn"],wink:["w-ih1-ng-k","nn vb"],winner:["w-ih1 n-er","nn"],winning:["w-ih1 n-ih-ng","vbg jj nn"],wino:["w-iy1 n-ow","nn"],winsome:["w-ih1-n s-ah-m","jj"],winter:["w-ih1-n t-er","nn vb"],wintertime:["w-ih1-n t-er t-ay-m","nn"],wintry:["w-ih1-n t-r-iy","jj"],wipe:["w-ay1-p","vb vbp"],wipeout:["w-ay1-p aw-t","nn"],wire:["w-ay1 er","nn vb"],wireless:["w-ay1-r l-ih-s","jj"],wireline:["w-ay1-r l-ay-n","jj"],wiretap:["w-ay1 er t-ae-p","nn"],wiry:["w-ih1 r-iy","jj"],wisdom:["w-ih1-z d-ah-m","nn"],wise:["w-ay1-z","jj"],wisecrack:["w-ay1-z k-r-ae-k","nn"],wisely:["w-ay1-z l-iy","rb"],wiser:["w-ay1 z-er","jjr rbr"],wisest:["w-ay1 z-ah-s-t","jjs"],wish:["w-ih1-sh","vbp nn vb"],wisher:["w-ih1 sh-er","nn"],wishful:["w-ih1-sh f-ah-l","jj"],wisp:["w-ih1-s-p","nn"],wispy:["w-ih1 s-p-iy","jj"],wistful:["w-ih1-s-t f-ah-l","jj"],wistfully:["w-ih1-s-t f-ah l-iy","rb"],wit:["w-ih1-t","nn"],witch:["w-ih1-ch","nn"],witchcraft:["w-ih1-ch k-r-ae-f-t","nn"],witching:["w-ih1 ch-ih-ng","jj nn"],with:["w-ih1-dh","in jj rb rp"],withdraw:["w-ih-dh d-r-ao1","vb vbp"],withdrawal:["w-ih-dh d-r-ao1 ah-l","nn"],withdrawn:["w-ih-th d-r-ao1-n","vbn"],withdrew:["w-ih-th d-r-uw1","vbd"],wither:["w-ih1 dh-er","vb vbp"],withered:["w-ih1 dh-er-d","jj vbn"],withering:["w-ih1 dh-er ih-ng","vbg jj"],withheld:["w-ih-th hh-eh1-l-d","vbn vbd"],withhold:["w-ih-th hh-ow1-l-d","vb vbp"],within:["w-ih dh-ih1-n","in rb"],without:["w-ih th-aw1-t","in"],withstand:["w-ih-th s-t-ae1-n-d","vb vbp"],withstood:["w-ih-th s-t-uh1-d","vbd vbn"],witness:["w-ih1-t n-ah-s","nn vb"],wittily:["w-ih1 t-ah l-iy","rb"],wittingly:["w-ih1 t-ih-ng l-iy","rb"],witty:["w-ih1 t-iy","jj"],wizard:["w-ih1 z-er-d","nn"],wobble:["w-aa1 b-ah-l","vb nn"],wobbly:["w-aa1 b-ah-l iy","jj"],woe:["w-ow1","nn"],woeful:["w-ow1 f-ah-l","jj"],woefully:["w-ow1 f-ah l-iy","rb"],woke:["w-ow1-k","vbd"],woken:["w-ow1 k-ah-n","vbn"],wolf:["w-uh1-l-f","nn"],woman:["w-uh1 m-ah-n","nn"],women:["w-ih1 m-eh-n","nns"],womanhood:["w-uh1 m-ah-n hh-uh-d","nn"],womanize:["w-uh1-m-ah-n-ay-z","vb"],womb:["w-uw1-m","nn"],won:["w-ah1-n","vbd nn vbn"],wonder:["w-ah1-n d-er","nn vbp jj vb"],wonderful:["w-ah1-n d-er f-ah-l","jj"],wonderfully:["w-ah1-n d-er f-ah l-iy","rb"],wonderfulness:["w-ah1-n d-er f-ah-l n-ah-s","nn"],wonderland:["w-ah1-n d-er l-ae-n-d","nn"],wondrous:["w-ah1-n d-r-ah-s","jj"],"won't":["w-ow1-n-t","vbp"],woo:["w-uw1","vb vbp"],wood:["w-uh1-d","nn"],wooded:["w-uh1 d-ih-d","jj"],wooden:["w-uh1 d-ah-n","jj"],woodland:["w-uh1-d l-ae-n-d","jj"],woodpecker:["w-uh1-d p-eh k-er","nn"],woodwind:["w-uh1-d w-ih-n-d","nn"],woodwork:["w-uh1-d w-er-k","nn"],woodworking:["w-uh1-d w-er k-ih-ng","nn"],woof:["w-uw1-f","nn"],wool:["w-uh1-l","nn"],woolen:["w-uh1 l-ah-n","jj"],woolly:["w-uh1 l-iy","jj"],woozy:["w-uw1 z-iy","jj"],word:["w-er1-d","nn vb"],worded:["w-er1 d-ih-d","vbn jj vbd"],wording:["w-er1 d-ih-ng","nn"],wore:["w-ao1-r","vbd"],work:["w-er1-k","nn vb vbp"],workable:["w-er1 k-ah b-ah-l","jj"],workaholic:["w-er1 k-ah hh-aa1 l-ih-k","nn jj"],workbench:["w-er1-k b-eh-n-ch","nn"],workday:["w-er1-k d-ey","nn"],worker:["w-er1 k-er","nn"],workforce:["w-er1-k f-ao-r-s","nn"],workhorse:["w-er1-k hh-ao-r-s","nn"],working:["w-er1 k-ih-ng","vbg jj nn"],workload:["w-er1-k l-ow-d","nn"],workman:["w-er1-k m-ah-n","nn"],workmanlike:["w-er1-k m-ae-n l-ay-k","jj"],workmanship:["w-er1-k m-ah-n sh-ih-p","nn"],workout:["w-er1-k aw-t","nn"],workplace:["w-er1-k p-l-ey-s","nn jj"],workroom:["w-er1-k r-uw-m","nn"],worksheet:["w-er1-k sh-iy-t","nn"],workshop:["w-er1-k sh-aa-p","nn"],workstation:["w-er1-k s-t-ey sh-ah-n","nn"],workweek:["w-er1-k w-iy-k","nn"],world:["w-er1-l-d","nn rb"],worldly:["w-er1-l-d l-iy","jj"],worldwide:["w-er1-l-d w-ay1-d","jj rb"],worm:["w-er1-m","nn"],worn:["w-ao1-r-n","vbn jj"],worried:["w-er1 iy-d","vbn vbd jj"],worrier:["w-er1 iy er","nn"],worrisome:["w-er1 iy s-ah-m","jj"],worry:["w-er1 iy","vb nn vbp"],worrying:["w-er1 iy ih-ng","vbg jj"],worse:["w-er1-s","jj"],worsen:["w-er1 s-ah-n","vb"],worsening:["w-er1 s-ah-n ih-ng","vbg jj"],worship:["w-er1 sh-ah-p","nn vb vbp"],worshipful:["w-er1 sh-ah-p f-ah-l","jj"],worshipper:["w-er1 sh-ih p-er","nn"],worst:["w-er1-s-t","jjs rbs jj"],worsted:["w-er1 s-t-ih-d","jj nn"],worth:["w-er1-th","jj in nn rb vbn"],worthier:["w-er1 dh-iy er","jjr"],worthiest:["w-er1 dh-iy ah-s-t","jjs"],worthiness:["w-er1 dh-iy n-ih-s","nn"],worthless:["w-er1-th l-ah-s","jj"],worthwhile:["w-er1-th w-ay1-l","jj"],worthy:["w-er1 dh-iy","jj"],would:["w-uh1-d","md"],"wouldn't":["w-uh1-d-ah-n-t","md"],wound:["w-aw1-n-d","nn vbd vbn vb"],wounded:["w-uw1-n d-ah-d","vbn jj"],wove:["w-ow1-v","vbd"],woven:["w-ow1 v-ah-n","vbn jj"],wow:["w-aw1","vb"],wrack:["r-ae1-k","vb vbp"],wrangle:["r-ae1-ng-g-ah-l","vb"],wrangler:["r-ae1-ng g-ah l-er","nn"],wrap:["r-ae1-p","vb nn vbp"],wrapper:["r-ae1 p-er","nn"],wrath:["r-ae1-th","nn"],wreak:["r-iy1-k","vb"],wreath:["r-iy1-th","nn"],wreck:["r-eh1-k","nn vb"],wreckage:["r-eh1 k-ah-jh","nn"],wrecked:["r-eh1-k-t","vbd jj vbn"],wrecker:["r-eh1 k-er","nn"],wrench:["r-eh1-n-ch","vb nn"],wrenching:["r-eh1-n ch-ih-ng","jj vbg"],wrest:["r-eh1-s-t","vb"],wrestle:["r-eh1 s-ah-l","vb"],wrestler:["r-eh1 s-ah l-er","nn"],wretched:["r-eh1 ch-ih-d","jj"],wring:["r-ih1-ng","vb"],wrinkle:["r-ih1-ng k-ah-l","nn vb"],wrinkled:["r-ih1-ng k-ah-l-d","jj vbd vbn"],wrist:["r-ih1-s-t","nn"],wristwatch:["r-ih1-s-t w-aa-ch","nn"],writ:["r-ih1-t","nn vbn"],write:["r-ay1-t","vb vbp"],writedown:["r-ay1-t d-aw-n","nn"],writeoff:["r-ay1 t-ao-f","nn"],writer:["r-ay1 t-er","nn"],writhe:["r-ih1-th","vb"],writhing:["r-ay1 dh-ih-ng","vbg jj nn"],written:["r-ih1 t-ah-n","vbn jj"],wrong:["r-ao1-ng","jj nn rb vb"],wrongdoer:["r-ao1-ng d-uw1 er","nn"],wrongdoing:["r-ao1-ng d-uw ih-ng","nn"],wronged:["r-ao1-ng-d","vbn jj"],wrongful:["r-ao1-ng f-ah-l","jj"],wrongfully:["r-ao1-ng f-ah l-iy","rb"],wrongly:["r-ao1-ng l-iy","rb"],wrote:["r-ow1-t","vbd"],wrought:["r-ao1-t","vbn vbd jj"],wrung:["r-ah1-ng","vb"],wry:["r-ay1","jj"],wryly:["r-ay1 l-iy","rb"],xenon:["z-iy1 n-aa-n","nn"],xenophobia:["z-eh n-ah f-ow1 b-iy ah","nn"],xenophobic:["z-eh n-ah f-aa1 b-ih-k","jj"],yacht:["y-aa1-t","nn"],yachting:["y-aa1 t-ih-ng","nn"],yachtsman:["y-aa1-t-s m-ah-n","nn"],yank:["y-ae1-ng-k","vb"],yard:["y-aa1-r-d","nn"],yardage:["y-aa1-r d-ih-jh","nn"],yardstick:["y-aa1-r-d s-t-ih-k","nn"],yarn:["y-aa1-r-n","nn"],yawn:["y-ao1-n","nn vb"],yawning:["y-ao1 n-ih-ng","vbg jj"],yeah:["y-ae1","uh nn"],year:["y-ih1-r","nn jj"],yearbook:["y-ih1-r b-uh-k","nn"],yearling:["y-er1 l-ih-ng","jj"],yearly:["y-ih1-r l-iy","jj rb"],yearn:["y-er1-n","vb vbp nn"],yearning:["y-er1 n-ih-ng","nn vbg"],yeast:["y-iy1-s-t","nn"],yell:["y-eh1-l","nn vb"],yellow:["y-eh1 l-ow","jj nn vb"],yellowish:["y-eh1 l-ow ih-sh","jj"],yes:["y-eh1-s","uh rb"],yesterday:["y-eh1 s-t-er d-ey","nn rb"],yet:["y-eh1-t","rb cc"],yield:["y-iy1-l-d","vb vbp"],yielding:["y-iy1-l d-ih-ng","vbg jj nn"],yodel:["y-ow1 d-ah-l","nn vb"],yoga:["y-ow1 g-ah","nn"],yogurt:["y-ow1 g-er-t","nn"],yoke:["y-ow1-k","nn"],yolk:["y-ow1-k","nn"],yonder:["y-aa1-n d-er","nn"],you:["y-uw1","prp rp"],young:["y-ah1-ng","jj"],younger:["y-ah1-ng g-er","jjr"],youngest:["y-ah1-ng g-ah-s-t","jjs"],youngster:["y-ah1-ng s-t-er","nn"],your:["y-ao1-r","prp$"],yours:["y-uh1-r-z","prp jj"],yourself:["y-er s-eh1-l-f","prp"],yourselves:["y-uh-r s-eh1-l-v-z","prp"],youth:["y-uw1-th","nn"],youthful:["y-uw1-th f-ah-l","jj"],yoyo:["y-ow1 y-ow","nn"],yummy:["y-ah1 m-iy","jj nn"],yuppie:["y-ah1 p-iy","nn"],zany:["z-ey1 n-iy","jj"],zap:["z-ae1-p","vb vbp"],zeal:["z-iy1-l","nn"],zealot:["z-eh1 l-ah-t","nn"],zealous:["z-eh1 l-ah-s","jj"],zealously:["z-iy1 l-ah-s l-iy","rb"],zebra:["z-iy1 b-r-ah","nn"],zenith:["z-iy1 n-ah-th","nn"],zero:["z-iy1-r-ow","vb"],zest:["z-eh1-s-t","nn"],zigzag:["z-ih1-g-z-ae-g","vb"],zilch:["z-ih1-l-ch","nn jj"],zinc:["z-ih1-ng-k","nn"],zip:["z-ih1-p","vbp vb"],zipper:["z-ih1 p-er","nn"],zippo:["z-ih1 p-ow","nn"],zombie:["z-aa1-m b-iy","nn"],zone:["z-ow1-n","nn"],zoo:["z-uw1","nn"],zoologist:["z-ow aa1 l-ah jh-ah-s-t","nn"],zoology:["z-ow aa1 l-ah jh-iy","nn"],zoom:["z-uw1-m","vb"]});}).call(this,a(33)(n));},function(n,e,a){function h(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function");}function t(n,e){for(var a=0;a<e.length;a++){var h=e[a];h.enumerable=h.enumerable||!1,h.configurable=!0,"value"in h&&(h.writable=!0),Object.defineProperty(n,h.key,h);}}function r(n,e,a){return e&&t(n.prototype,e),a&&t(n,a),n;}a.r(e);var i=function(){function n(){h(this,n);}return r(n,null,[{key:"syllablesToPhones",value:function(n){var e,a,h=[];for(e=0;e<n.length;e++){var t=n[e],r=t[0][0],i=t[1],s=t[2],l=t[3];r&&s.length&&(s[0]+=r);var o=[];for(a=0;a<i.length;a++)o.push(i[a]);for(a=0;a<s.length;a++)o.push(s[a]);for(a=0;a<l.length;a++)o.push(l[a]);h.push(o.join("-"));}return h.join(" ");}},{key:"syllablesFromPhones",value:function(e){function a(n,e){for(var a=0;a<e.length;a++)n.push(e[a]);}if(!e||!e.length)return "";for(var h=[],t=[],r="string"==typeof e?e.split("-"):e,i=0;i<r.length;i++){var s=r[i].trim(),l=void 0;if(s.length){var o=s.charAt(s.length-1);if(this.isNum(o)&&(l=o,s=s.substring(0,s.length-1)),n.Phones.vowels.includes(s)){for(var b=void 0,d=void 0,y=0;y<h.length+1;y++){if(b=h.slice(0,y),d=h.slice(y,h.length),n.Phones.onsets.includes(d.join(" "))||0===t.length||0===d.length){break;}}t.length>0&&a(t[t.length-1][3],b);var u=[[l],d,[s],[]];t.push(u),h=[];}else {if(!n.Phones.consonants.includes(s)&&" "!=s)throw Error("Invalid phoneme: "+s);h.push(s);}}}return h.length>0&&(0===t.length?t.push([[void 0],h,[],[]]):a(t[t.length-1][3],h)),n.syllablesToPhones(t);}},{key:"isNum",value:function(n){return !isNaN(parseFloat(n))&&isFinite(n);}}]),n;}(),s=function(){function n(e,a,t){h(this,n),this.raw=e,this.regex=new RegExp(e),this.offset=a,this.suffix=t||"";}return r(n,[{key:"applies",value:function(n){return this.regex.test(n);}},{key:"fire",value:function(n){return this.truncate(n)+this.suffix;}},{key:"truncate",value:function(n){return 0===this.offset?n:n.substr(0,n.length-this.offset);}},{key:"toString",value:function(){return "/"+this.raw+"/";}}]),n;}();i.Phones={consonants:["b","ch","d","dh","f","g","hh","jh","k","l","m","n","ng","p","r","s","sh","t","th","v","w","y","z","zh"],vowels:["aa","ae","ah","ao","aw","ax","ay","eh","er","ey","ih","iy","ow","oy","uh","uw"],onsets:["p","t","k","b","d","g","f","v","th","dh","s","z","sh","ch","jh","m","n","r","l","hh","w","y","p r","t r","k r","b r","d r","g r","f r","th r","sh r","p l","k l","b l","g l","f l","s l","t w","k w","d w","s w","s p","s t","s k","s f","s m","s n","g w","sh w","s p r","s p l","s t r","s k r","s k w","s k l","th w","zh","p y","k y","b y","f y","hh y","v y","th y","m y","s p y","s k y","g y","hh w",""],digits:["z-ih-r-ow","w-ah-n","t-uw","th-r-iy","f-ao-r","f-ay-v","s-ih-k-s","s-eh1-v-ax-n","ey-t","n-ih-n"]},i.RE=function(n,e,a){return new s(n,e,a);},i.MASS_NOUNS=["abalone","asbestos","barracks","bathos","breeches","beef","britches","chaos","cognoscenti","clippers","corps","cosmos","crossroads","diabetes","ethos","gallows","graffiti","herpes","innings","lens","means","measles","mews","mumps","news","pathos","pincers","pliers","proceedings","rabies","rhinoceros","sassafras","scissors","series","shears","species","tuna","acoustics","aesthetics","aquatics","basics","ceramics","classics","cosmetics","dialectics","deer","dynamics","ethics","harmonics","heroics","mechanics","metrics","ooze","optics","physics","polemics","pyrotechnics","statistics","tactics","tropics","bengalese","bengali","bonsai","booze","cellulose","mess","moose","burmese","chinese","colossus","congolese","discus","electrolysis","emphasis","expertise","flu","fructose","gauze","glucose","grease","guyanese","haze","incense","japanese","lebanese","malaise","mayonnaise","maltese","music","money","menopause","merchandise","olympics","overuse","paradise","poise","potash","portuguese","prose","recompense","remorse","repose","senegalese","siamese","singhalese","innings","sleaze","sioux","sudanese","suspense","swiss","taiwanese","vietnamese","unease","aircraft","anise","antifreeze","applause","archdiocese","apparatus","asparagus","barracks","bellows","bison","bluefish","bourgeois","bream","brill","butterfingers","cargo","carp","catfish","chassis","clone","clones","clothes","chub","cod","codfish","coley","contretemps","corps","crawfish","crayfish","crossroads","cuttlefish","deer","dice","dogfish","doings","dory","downstairs","eldest","earnings","economics","electronics","firstborn","fish","flatfish","flounder","fowl","fry","fries","works","goldfish","golf","grand","grief","haddock","hake","halibut","headquarters","herring","hertz","horsepower","goods","hovercraft","ironworks","kilohertz","ling","shrimp","swine","lungfish","mackerel","macaroni","means","megahertz","moorfowl","moorgame","mullet","nepalese","offspring","pants","patois","pekinese","perch","pickerel","pike","potpourri","precis","quid","rand","rendezvous","roach","salmon","samurai","series","seychelles","shad","sheep","shellfish","smelt","spaghetti","spacecraft","species","starfish","stockfish","sunfish","superficies","sweepstakes","smallpox","swordfish","tennis","tobacco","triceps","trout","tuna","tunafish","turbot","trousers","turf","dibs","undersigned","waterfowl","waterworks","waxworks","wildfowl","woodworm","yen","aries","pisces","forceps","jeans","mathematics","news","odds","politics","remains","goods","aids","wildlife","shall","would","may","might","ought","should","wildlife","acne","admiration","advice","air","anger","anticipation","assistance","awareness","bacon","baggage","blood","bravery","chess","clay","clothing","coal","compliance","comprehension","confusion","consciousness","cream","darkness","diligence","dust","education","electrolysis","empathy","enthusiasm","envy","equality","equipment","evidence","feedback","fitness","flattery","foliage","fun","furniture","garbage","gold","gossip","grammar","gratitude","gravel","guilt","happiness","hardware","hate","hay","health","heat","help","hesitation","homework","honesty","honor","honour","hospitality","hostility","humanity","humility","ice","immortality","independence","information","integrity","intimidation","jargon","jealousy","jewelry","justice","knowledge","literacy","logic","luck","lumber","luggage","mail","management","merchandise","milk","morale","mud","music","nonsense","oppression","optimism","oxygen","participation","pay","peace","perseverance","pessimism","pneumonia","poetry","police","pride","privacy","propaganda","public","punctuation","recovery","rice","rust","satisfaction","shame","sheep","slang","software","spaghetti","stamina","starvation","steam","steel","stuff","support","sweat","thunder","timber","toil","traffic","training","trash","valor","vehemence","violence","warmth","waste","weather","wheat","wisdom","work"];var l=i;function o(n,e){for(var a=0;a<e.length;a++){var h=e[a];h.enumerable=h.enumerable||!1,h.configurable=!0,"value"in h&&(h.writable=!0),Object.defineProperty(n,h.key,h);}}var b=l.MASS_NOUNS,d=function(){function n(e){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function");}(this,n),this.RiTa=e;}var e,a;return e=n,(a=[{key:"isVerb",value:function(n){var e=this.allTags(n);return e&&e.filter(function(n){return p.includes(n);}).length>0;}},{key:"isNoun",value:function(n){var e=this.allTags(n);return e&&e.filter(function(n){return c.includes(n);}).length>0;}},{key:"isAdverb",value:function(n){var e=this.allTags(n);return e&&e.filter(function(n){return u.includes(n);}).length>0;}},{key:"isAdjective",value:function(n){var e=this.allTags(n);return e&&e.filter(function(n){return y.includes(n);}).length>0;}},{key:"hasTag",value:function(n,e){return !!Array.isArray(n)&&n.join().indexOf(e)>-1;}},{key:"inlineTags",value:function(n,e,a){if(!n||!n.length)return "";if(n.length!==e.length)throw Error("Tagger: invalid state: words("+n.length+")="+n+" tags("+e.length+")="+e);a=a||"/";for(var h="",t=0;t<n.length;t++)h+=n[t],this.RiTa.isPunct(n[t])||(h+=a+e[t]),h+=" ";return h.trim();}},{key:"allTags",value:function(n,e){if(n&&"string"==typeof n&&n.length)return this.RiTa.lexicon()._posArr(n)||(e?null:this._derivePosData(n));}},{key:"tag",value:function(n,e){var a=e&&e.simple,h=e&&e.inline,t=[],r=[];if(!n||!n.length)return h?"":[];if(!Array.isArray(n)){if(!n.trim().length)return h?"":[];n=this.RiTa.tokenizer.tokenize(n);}for(var i=0,s=n.length;i<s;i++){var l=n[i];if(l&&l.length)if(1===l.length)t.push(this._handleSingleLetter(l));else {var o=this.allTags(l);r[i]=o,t[i]=o[0];}}var b=this._applyContext(n,t,r,0);if(a)for(var d=0;d<b.length;d++)c.includes(b[d])?b[d]="n":p.includes(b[d])?b[d]="v":y.includes(b[d])?b[d]="a":u.includes(b[d])?b[d]="r":b[d]="-";return h?this.inlineTags(n,b):b;}},{key:"_checkPluralNounOrVerb",value:function(n,e){var a=this.RiTa.lexicon()._posArr(n);a&&(a.includes("nn")&&e.push("nns"),a.includes("vb")&&e.push("vbz"));}},{key:"_safeConcat",value:function(n,e){return n&&e?n.concat(e):n||e||void 0;}},{key:"_derivePosData",value:function(n){var e=this.RiTa.lexicon();if(n.endsWith("ies")){var a=n.substring(0,n.length-3)+"y",h=e._posArr(a);if(h&&h.includes("vb"))return ["vbz"];}else if(n.endsWith("s")){var t=[];if(this._checkPluralNounOrVerb(n.substring(0,n.length-1),t),n.endsWith("es")&&(this._checkPluralNounOrVerb(n.substring(0,n.length-2),t),this._checkPluralNounOrVerb(this.RiTa.singularize(n),t)),t.length)return t;}else if(n.endsWith("ed")){var r=e._posArr(n.substring(0,n.length-1))||e._posArr(n.substring(0,n.length-2));if(r&&r.includes("vb"))return ["vbd","vbn"];}else if(n.endsWith("ing")){var i=n.substring(0,n.length-3);if(i){var s=e._posArr(i);if(s&&s.includes("vb"))return ["vbg"];if((s=e._posArr(i+"e"))&&s.includes("vb"))return ["vbg"];}}return this.isLikelyPlural(n)?["nns"]:"the"===n||"a"===n?["dt"]:n.endsWith("ly")?["rb"]:n.endsWith("s")?["nns"]:["nn"];}},{key:"isLikelyPlural",value:function(n){return this._lexHas("n",this.RiTa.singularize(n))||this.RiTa.inflector.isPlural(n);}},{key:"_handleSingleLetter",value:function(n){return "a"===n||"A"===n?"dt":n>="0"&&n<="9"?"cd":"I"===n?"prp":n;}},{key:"_log",value:function(n,e,a){console.log("\n  Custom("+n+") tagged '"+e+"' -> '"+a+"'\n\n");}},{key:"_applyContext",value:function(n,e,a,h){for(var t=0,r=n.length;t<r;t++){var i=n[t],s=e[t];if(i&&i.length){if(void 0===s&&(s="",this.RiTa.SILENT||console.warn("\n[WARN] Unexpected state in _applyContext for idx="+t,n,"\n")),t>0&&"dt"===e[t-1]&&(s.startsWith("vb")?(s="nn",i.match(/^.*[^s]s$/)&&(b.includes(i)||(s="nns"))):s.startsWith("rb")&&(s=s.length>2?"jj"+s.charAt(2):"jj")),s.startsWith("n")&&l.isNum(i)&&(s="cd"),t>0&&s.startsWith("n")&&i.endsWith("ed")&&e[t-1].match(/^(nn|prp)$/)&&(i.endsWith("eed")||(s="vbn")),i.endsWith("ly")&&(s="rb"),i.length>4&&s.startsWith("nn")&&i.endsWith("al")&&"mammal"!=i&&(s="jj"),t>0&&s.startsWith("nn")&&e[t-1].startsWith("md")&&(s="vb"),"vbd"===s&&t>0&&e[t-1].match(/^(vbz)$/)&&(s="vbn"),s.startsWith("nn")&&i.endsWith("ing")&&this.hasTag(a[t],"vbg")&&(s="vbg"),t>0&&"nns"===s&&this.hasTag(a[t],"vbz")&&e[t-1].match(/^(nn|prp|nnp)$/)&&(s="vbz"),s.startsWith("nn")&&/^[A-Z]/.test(i)){var o=this.RiTa.singularize(i.toLowerCase());(1===n.length||t>0||0==t&&!this._lexHas("nn",o))&&(s=s.endsWith("s")?"nnps":"nnp");}if(t<e.length-1&&"nns"==s&&e[t+1].startsWith("rb")&&this.hasTag(a[t],"vbz")&&(s="vbz"),"nns"===s)if(t>0&&["nn","prp","cc","nnp"].indexOf(e[t-1])>-1)this._lexHas("vb",this.RiTa.singularize(i))&&(s="vbz");else if(1===n.length&&a[t].length<2){var d=this.RiTa.singularize(i.toLowerCase());!this._lexHas("nn",d)&&this._lexHas("vb",d)&&(s="vbz");}if(("vb"===s||"nn"===s&&this.hasTag(a[t],"vb"))&&t>0&&e[t-1].match(/^(nns|nnps|prp)$/)&&(s="vbp"),"nn"===s&&e.slice(t+1).includes("nn")){for(var y=e.slice(t+1).indexOf("nn"),u=!0,c=0;c<y;c++)if("jj"===!e[t+1+c]){u=!1;break;}u&&this.allTags(i).includes("jj")&&(s="jj");}e[t]=s;}}return e;}},{key:"_lexHas",value:function(n,e){if("string"==typeof e){var a=this.RiTa.lexicon()._posArr(e);if(!a)return !1;for(var h=0;h<a.length;h++){if(n===a[h])return !0;if("n"===n&&c.includes(a[h])||"v"===n&&p.includes(a[h])||"r"===n&&u.includes(a[h])||"a"===n&&y.includes.isAdjTag(a[h]))return !0;}}}}])&&o(e.prototype,a),n;}(),y=["jj","jjr","jjs"],u=["rb","rbr","rbs","rp"],c=["nn","nns","nnp","nnps"],p=["vb","vbd","vbg","vbn","vbp","vbz"],j=d;function v(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function");}function S(n,e){for(var a=0;a<e.length;a++){var h=e[a];h.enumerable=h.enumerable||!1,h.configurable=!0,"value"in h&&(h.writable=!0),Object.defineProperty(n,h.key,h);}}function m(n,e,a){return e&&S(n.prototype,e),a&&S(n,a),n;}var g,k,f,w=function(){function n(e,a,h){if(v(this,n),!e&&""!=e||!a&&0!=a||!h)throw "Bad Among initialisation: s:"+e+", substring_i: "+a+", result: "+h;this.s_size=e.length,this.s=this.toCharArray(e),this.substring_i=a,this.result=h;}return m(n,[{key:"toCharArray",value:function(n){for(var e=n.length,a=new Array(e),h=0;h<e;h++)a[h]=n.charCodeAt(h);return a;}}]),n;}(),z=function(){function n(){v(this,n),this.bra=0,this.ket=0,this.limit=0,this.cursor=0,this.limit_backward=0,this.current;}return m(n,[{key:"setCurrent",value:function(n){this.current=n,this.cursor=0,this.limit=n.length,this.limit_backward=0,this.bra=this.cursor,this.ket=this.limit;}},{key:"getCurrent",value:function(){var n=this.current;return this.current=null,n;}},{key:"in_grouping",value:function(n,e,a){if(this.cursor<this.limit){var h=this.current.charCodeAt(this.cursor);if(h<=a&&h>=e&&n[(h-=e)>>3]&1<<(7&h))return this.cursor++,!0;}return !1;}},{key:"in_grouping_b",value:function(n,e,a){if(this.cursor>this.limit_backward){var h=this.current.charCodeAt(this.cursor-1);if(h<=a&&h>=e&&n[(h-=e)>>3]&1<<(7&h))return this.cursor--,!0;}return !1;}},{key:"out_grouping",value:function(n,e,a){if(this.cursor<this.limit){var h=this.current.charCodeAt(this.cursor);if(h>a||h<e)return this.cursor++,!0;if(!(n[(h-=e)>>3]&1<<(7&h)))return this.cursor++,!0;}return !1;}},{key:"out_grouping_b",value:function(n,e,a){if(this.cursor>this.limit_backward){var h=this.current.charCodeAt(this.cursor-1);if(h>a||h<e)return this.cursor--,!0;if(!(n[(h-=e)>>3]&1<<(7&h)))return this.cursor--,!0;}return !1;}},{key:"eq_s",value:function(n,e){if(this.limit-this.cursor<n)return !1;for(var a=0;a<n;a++)if(this.current.charCodeAt(this.cursor+a)!=e.charCodeAt(a))return !1;return this.cursor+=n,!0;}},{key:"eq_s_b",value:function(n,e){if(this.cursor-this.limit_backward<n)return !1;for(var a=0;a<n;a++)if(this.current.charCodeAt(this.cursor-n+a)!=e.charCodeAt(a))return !1;return this.cursor-=n,!0;}},{key:"find_among",value:function(n,e){for(var a=0,h=e,t=this.cursor,r=this.limit,i=0,s=0,l=!1;;){for(var o=a+(h-a>>1),b=0,d=i<s?i:s,y=n[o],u=d;u<y.s_size;u++){if(t+d==r){b=-1;break;}if(b=this.current.charCodeAt(t+d)-y.s[u])break;d++;}if(b<0?(h=o,s=d):(a=o,i=d),h-a<=1){if(a>0||h==a||l)break;l=!0;}}for(;;){if(i>=(y=n[a]).s_size){if(this.cursor=t+y.s_size,!y.method)return y.result;var c=y.method();if(this.cursor=t+y.s_size,c)return y.result;}if((a=y.substring_i)<0)return 0;}}},{key:"find_among_b",value:function(n,e){for(var a=0,h=e,t=this.cursor,r=this.limit_backward,i=0,s=0,l=!1;;){for(var o=a+(h-a>>1),b=0,d=i<s?i:s,y=(u=n[o]).s_size-1-d;y>=0;y--){if(t-d==r){b=-1;break;}if(b=this.current.charCodeAt(t-1-d)-u.s[y])break;d++;}if(b<0?(h=o,s=d):(a=o,i=d),h-a<=1){if(a>0||h==a||l)break;l=!0;}}for(;;){var u;if(i>=(u=n[a]).s_size){if(this.cursor=t-u.s_size,!u.method)return u.result;var c=u.method();if(this.cursor=t-u.s_size,c)return u.result;}if((a=u.substring_i)<0)return 0;}}},{key:"replace_s",value:function(n,e,a){var h=a.length-(e-n),t=this.current.substring(0,n),r=this.current.substring(e);return this.current=t+a+r,this.limit+=h,this.cursor>=e?this.cursor+=h:this.cursor>n&&(this.cursor=n),h;}},{key:"slice_check",value:function(){if(this.bra<0||this.bra>this.ket||this.ket>this.limit||this.limit>this.current.length)throw "faulty slice operation";}},{key:"slice_from",value:function(n){this.slice_check(),this.replace_s(this.bra,this.ket,n);}},{key:"slice_del",value:function(){this.slice_from("");}},{key:"insert",value:function(n,e,a){var h=this.replace_s(n,e,a);n<=this.bra&&(this.bra+=h),n<=this.ket&&(this.ket+=h);}},{key:"slice_to",value:function(){return this.slice_check(),this.current.substring(this.bra,this.ket);}},{key:"eq_v_b",value:function(n){return this.eq_s_b(n.length,n);}}]),n;}(),x=[new w("arsen",-1,-1),new w("commun",-1,-1),new w("gener",-1,-1)],T=[new w("'",-1,1),new w("'s'",0,1),new w("'s",-1,1)],E=[new w("ied",-1,2),new w("s",-1,3),new w("ies",1,2),new w("sses",1,1),new w("ss",1,-1),new w("us",1,-1)],A=[new w("",-1,3),new w("bb",0,2),new w("dd",0,2),new w("ff",0,2),new w("gg",0,2),new w("bl",0,1),new w("mm",0,2),new w("nn",0,2),new w("pp",0,2),new w("rr",0,2),new w("at",0,1),new w("tt",0,2),new w("iz",0,1)],_=[new w("ed",-1,2),new w("eed",0,1),new w("ing",-1,2),new w("edly",-1,2),new w("eedly",3,1),new w("ingly",-1,2)],C=[new w("anci",-1,3),new w("enci",-1,2),new w("ogi",-1,13),new w("li",-1,16),new w("bli",3,12),new w("abli",4,4),new w("alli",3,8),new w("fulli",3,14),new w("lessli",3,15),new w("ousli",3,10),new w("entli",3,5),new w("aliti",-1,8),new w("biliti",-1,12),new w("iviti",-1,11),new w("tional",-1,1),new w("ational",14,7),new w("alism",-1,8),new w("ation",-1,7),new w("ization",17,6),new w("izer",-1,6),new w("ator",-1,7),new w("iveness",-1,11),new w("fulness",-1,9),new w("ousness",-1,10)],D=[new w("icate",-1,4),new w("ative",-1,6),new w("alize",-1,3),new w("iciti",-1,4),new w("ical",-1,4),new w("tional",-1,1),new w("ational",5,2),new w("ful",-1,5),new w("ness",-1,5)],L=[new w("ic",-1,1),new w("ance",-1,1),new w("ence",-1,1),new w("able",-1,1),new w("ible",-1,1),new w("ate",-1,1),new w("ive",-1,1),new w("ize",-1,1),new w("iti",-1,1),new w("al",-1,1),new w("ism",-1,1),new w("ion",-1,2),new w("er",-1,1),new w("ous",-1,1),new w("ant",-1,1),new w("ent",-1,1),new w("ment",15,1),new w("ement",16,1)],R=[new w("e",-1,1),new w("l",-1,2)],N=[new w("succeed",-1,-1),new w("proceed",-1,-1),new w("exceed",-1,-1),new w("canning",-1,-1),new w("inning",-1,-1),new w("earring",-1,-1),new w("herring",-1,-1),new w("outing",-1,-1)],q=[new w("andes",-1,-1),new w("atlas",-1,-1),new w("bias",-1,-1),new w("cosmos",-1,-1),new w("dying",-1,3),new w("early",-1,9),new w("gently",-1,7),new w("howe",-1,-1),new w("idly",-1,6),new w("lying",-1,4),new w("news",-1,-1),new w("only",-1,10),new w("singly",-1,11),new w("skies",-1,2),new w("skis",-1,1),new w("sky",-1,-1),new w("tying",-1,5),new w("ugly",-1,8)],P=[17,65,16,1],O=[1,17,65,208,1],I=[55,141,2],$=[function(){var n,e,a,h;if(F.ket=F.cursor,n=F.find_among_b(_,6))switch(F.bra=F.cursor,n){case 1:H()&&F.slice_from("ee");break;case 2:for(e=F.limit-F.cursor;!F.in_grouping_b(P,97,121);){if(F.cursor<=F.limit_backward)return;F.cursor--;}if(F.cursor=F.limit-e,F.slice_del(),a=F.limit-F.cursor,n=F.find_among_b(A,13))switch(F.cursor=F.limit-a,n){case 1:var t=F.cursor;F.insert(F.cursor,F.cursor,"e"),F.cursor=t;break;case 2:F.ket=F.cursor,F.cursor>F.limit_backward&&(F.cursor--,F.bra=F.cursor,F.slice_del());break;case 3:if(F.cursor==f&&(h=F.limit-F.cursor,U())){F.cursor=F.limit-h;t=F.cursor;F.insert(F.cursor,F.cursor,"e"),F.cursor=t;}}}},function(){var n=F.limit-F.cursor;if(!(F.ket=F.cursor,F.eq_s_b(1,"y")||(F.cursor=F.limit-n,F.eq_s_b(1,"Y"))))return;F.bra=F.cursor,F.out_grouping_b(P,97,121)&&F.cursor>F.limit_backward&&F.slice_from("i");},function(){var n;if(F.ket=F.cursor,(n=F.find_among_b(C,24))&&(F.bra=F.cursor,H()))switch(n){case 1:F.slice_from("tion");break;case 2:F.slice_from("ence");break;case 3:F.slice_from("ance");break;case 4:F.slice_from("able");break;case 5:F.slice_from("ent");break;case 6:F.slice_from("ize");break;case 7:F.slice_from("ate");break;case 8:F.slice_from("al");break;case 9:F.slice_from("ful");break;case 10:F.slice_from("ous");break;case 11:F.slice_from("ive");break;case 12:F.slice_from("ble");break;case 13:F.eq_s_b(1,"l")&&F.slice_from("og");break;case 14:F.slice_from("ful");break;case 15:F.slice_from("less");break;case 16:F.in_grouping_b(I,99,116)&&F.slice_del();}},function(){var n;if(F.ket=F.cursor,(n=F.find_among_b(D,9))&&(F.bra=F.cursor,H()))switch(n){case 1:F.slice_from("tion");break;case 2:F.slice_from("ate");break;case 3:F.slice_from("al");break;case 4:F.slice_from("ic");break;case 5:F.slice_del();break;case 6:V()&&F.slice_del();}},function(){var n,e;if(F.ket=F.cursor,(n=F.find_among_b(L,18))&&(F.bra=F.cursor,V()))switch(n){case 1:F.slice_del();break;case 2:if(e=F.limit-F.cursor,!F.eq_s_b(1,"s")&&(F.cursor=F.limit-e,!F.eq_s_b(1,"t")))return;F.slice_del();}},function(){var n,e;if(F.ket=F.cursor,n=F.find_among_b(R,2))switch(F.bra=F.cursor,n){case 1:if(e=F.limit-F.cursor,!V()){if(F.cursor=F.limit-e,!H()||U())return;F.cursor=F.limit-e;}F.slice_del();break;case 2:if(!V()||!F.eq_s_b(1,"l"))return;F.slice_del();}}],F=new z(),B=function(){function n(){v(this,n);}return m(n,[{key:"stemEnglish",value:function(n){F.setCurrent(n);var e=F.cursor;if(!function(){var n;if(F.bra=F.cursor,(n=F.find_among(q,18))&&(F.ket=F.cursor,F.cursor>=F.limit)){switch(n){case 1:F.slice_from("ski");break;case 2:F.slice_from("sky");break;case 3:F.slice_from("die");break;case 4:F.slice_from("lie");break;case 5:F.slice_from("tie");break;case 6:F.slice_from("idl");break;case 7:F.slice_from("gentl");break;case 8:F.slice_from("ugli");break;case 9:F.slice_from("earli");break;case 10:F.slice_from("onli");break;case 11:F.slice_from("singl");}return !0;}return !1;}()){F.cursor=e;var a=F.cursor+3;if(0<=a&&a<=F.limit){if(F.cursor=e,function(){var n,e=F.cursor;g=!1,F.bra=F.cursor,F.eq_s(1,"'")&&(F.ket=F.cursor,F.slice_del());F.cursor=e,F.bra=e,F.eq_s(1,"y")&&(F.ket=F.cursor,F.slice_from("Y"),g=!0);F.cursor=e;for(;;)if(n=F.cursor,F.in_grouping(P,97,121)&&(F.bra=F.cursor,F.eq_s(1,"y")))F.ket=F.cursor,F.cursor=n,F.slice_from("Y"),g=!0;else {if(n>=F.limit)return void(F.cursor=e);F.cursor=n+1;}}(),F.cursor=e,function(){var n=F.cursor;if(f=F.limit,k=f,!F.find_among(x,3)&&(F.cursor=n,M()))return void(F.cursor=n);f=F.cursor,M()||(k=F.cursor);}(),F.limit_backward=e,F.cursor=F.limit,function(){var n,e=F.limit-F.cursor;F.ket=F.cursor,(n=F.find_among_b(T,3))?(F.bra=F.cursor,1==n&&F.slice_del()):F.cursor=F.limit-e;if(F.ket=F.cursor,n=F.find_among_b(E,6))switch(F.bra=F.cursor,n){case 1:F.slice_from("ss");break;case 2:var a=F.cursor-2;if(F.limit_backward>a||a>F.limit){F.slice_from("ie");break;}F.cursor=a,F.slice_from("i");break;case 3:do{if(F.cursor<=F.limit_backward)return;F.cursor--;}while(!F.in_grouping_b(P,97,121));F.slice_del();}}(),F.cursor=F.limit,!function(){if(F.ket=F.cursor,F.find_among_b(N,8))return F.bra=F.cursor,F.cursor<=F.limit_backward;return !1;}())for(var h=0;h<$.length;h++)F.cursor=F.limit,$[h]();F.cursor=F.limit_backward,function(){var n;if(g)for(;;)if(n=F.cursor,F.bra=n,F.eq_s(1,"Y"))F.ket=F.cursor,F.cursor=n,F.slice_from("y");else {if(F.cursor=n,F.cursor>=F.limit)return;F.cursor++;}}();}}return F.getCurrent();}}]),n;}();function M(){for(;!F.in_grouping(P,97,121);){if(F.cursor>=F.limit)return !0;F.cursor++;}for(;!F.out_grouping(P,97,121);){if(F.cursor>=F.limit)return !0;F.cursor++;}return !1;}function U(){var n=F.limit-F.cursor;return !(!(F.out_grouping_b(O,89,121)&&F.in_grouping_b(P,97,121)&&F.out_grouping_b(P,97,121))&&(F.cursor=F.limit-n,!F.out_grouping_b(P,97,121)||!F.in_grouping_b(P,97,121)||F.cursor>F.limit_backward));}function H(){return f<=F.cursor;}function V(){return k<=F.cursor;}B.stemAll=function(n){var e=new B();return n.map(function(n){return e.stemEnglish(n);});},B.stem=function(n,e){if("string"!=typeof n)throw Error("Expects string");if(!n.includes(" "))return new B().stemEnglish(n);var a=B.parent.tokenize(n),h=B.stemAll(a);return B.parent.untokenize(h);};var G=B;function W(n){return (W="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n;}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n;})(n);}function Y(n,e){for(var a=0;a<e.length;a++){var h=e[a];h.enumerable=h.enumerable||!1,h.configurable=!0,"value"in h&&(h.writable=!0),Object.defineProperty(n,h.key,h);}}var K=function(){function n(e,a){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function");}(this,n),this.RiTa=e,this.data=a,this.lexWarned=!1,this.analyzer=e.analyzer;}var e,a;return e=n,(a=[{key:"hasWord",value:function(n,e){return !(!n||!n.length)&&this._dict(e).hasOwnProperty(n.toLowerCase());}},{key:"alliterations",value:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(this.parseArgs(e),this.RiTa.isVowel(n.charAt(0)))return e.silent||this.RiTa.SILENT||console.warn("Expects a word starting with a consonant, got: "+n),[];var a=this._dict(!0),h=Object.keys(a),t=this._firstStressedSyl(n);if(!t)return [];var r=this._firstPhone(t),i=[];if(!r)return e.silent||this.RiTa.SILENT||console.warn('Failed parsing first phone in "'+n+'"'),i;var s=e.silent;e.silent=!0;for(var l=0;l<h.length;l++){var o=h[l];if(o!==n&&this.checkCriteria(o,a[o],e)){var b=a[o];if(e.targetPos){if(!(o=this.matchPos(o,b,e)))continue;o!==h[l]&&(b=a[o]);}var d=this._firstPhone(this._firstStressedSyl(o));if(r===d&&i.push(o),i.length===e.limit)break;}}return e.silent=s,i;}},{key:"rhymes",value:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(this.parseArgs(e),!n||!n.length)return [];var a=this._dict(!0),h=Object.keys(a),t=this._lastStressedPhoneToEnd(n);if(!t)return [];var r=e.silent;e.silent=!0;for(var i=[],s=0;s<h.length;s++){var l=h[s],o=a[l];if(l!==n&&this.checkCriteria(l,o,e)){if(e.targetPos){if(!(l=this.matchPos(l,o,e)))continue;l!==h[s]&&(o=a[l]);}var b=o?o[0]:this.rawPhones(l);if(b.endsWith(t)&&i.push(l),i.length===e.limit)break;}}return e.silent=r,i;}},{key:"spellsLike",value:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return n&&n.length?(e.type="letter",this.similarByType(n,e)):[];}},{key:"soundsLike",value:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return n&&n.length?(e.type="sound",e.matchSpelling?this.similarBySoundAndLetter(n,e):this.similarByType(n,e)):[];}},{key:"randomWord",value:function(n,e){return n||e?(n instanceof RegExp||"object"!==W(n)||e||(e=n,n=void 0),(e=e||{}).limit=1,this.search(n,e)[0]):this.RiTa.random(Object.keys(this._dict(!0)));}},{key:"search",value:function(n,e){var a=this._dict(!0),h=Object.keys(a);if(!n&&!e)return h;var t=this._parseRegex(n,e),r=t.regex,i=t.opts;this.parseArgs(i);var s=[],l=i.silent;i.silent=!0;for(var o=0;o<h.length;o++){var b=h[o],d=a[b];if(this.checkCriteria(b,d,i)){if(i.targetPos){if(!(b=this.matchPos(b,d,i,1===i.limit)))continue;b!==h[o]&&(d=a[b]);}if(r&&!this._regexMatch(b,d,r,i.type)||s.push(b),s.length===i.limit)break;}}return i.silent=l,s;}},{key:"isAlliteration",value:function(n,e){if(this._dict(!0),!n||!e||!n.length)return !1;var a=this._firstPhone(this._firstStressedSyl(n)),h=this._firstPhone(this._firstStressedSyl(e));return a&&h&&!this.RiTa.isVowel(a.charAt(0))&&a===h;}},{key:"isRhyme",value:function(n,e){if(!n||!e||n.toUpperCase()===e.toUpperCase())return !1;if(this._dict(!0),this.rawPhones(n)===this.rawPhones(e))return !1;var a=this._lastStressedVowelPhonemeToEnd(n),h=this._lastStressedVowelPhonemeToEnd(e);return a&&h&&a===h;}},{key:"size",value:function(){var n=this._dict(!1);return n?Object.keys(n).length:0;}},{key:"similarByType",value:function(n,e){this.parseArgs(e);var a=this._dict(!0),h=Object.keys(a),t=n.toLowerCase(),r="sound"===e.type,i=[t,t+"s",t+"es"],s=r?this._toPhoneArray(this.rawPhones(t)):t;if(!s)return l;for(var l=[],o=Number.MAX_VALUE,b=0;b<h.length;b++){var d=h[b],y=a[d];if(this.checkCriteria(d,y,e)&&!i.includes(d)){if(e.targetPos){if(!(d=this.matchPos(d,y,e)))continue;d!==h[b]&&(y=a[d]);}var u=d;r&&(u=(y?y[0]:this.rawPhones(d)).replace(/1/g,"").replace(/ /g,"-").split("-"));var c=this.minEditDist(s,u);c>=e.minDistance&&c<o?(o=c,l=[d]):c===o&&l.length<e.limit&&l.push(d);}}return l.slice(0,e.limit);}},{key:"matchPos",value:function(n,e,a,h){var t=e[1].split(" ");if(t.includes(a.targetPos)&&(!h||a.targetPos===t[0])){var r=n;if(a.pluralize){if(n.endsWith("ness")||n.endsWith("ism"))return;if(r=this.RiTa.pluralize(n),!this.RiTa.isNoun(r))return;}else a.conjugate&&(r=this.reconjugate(n,a.pos));if(r!==n){if(a.numSyllables&&this.analyzer.analyzeWord(r,J).syllables.split(this.RiTa.SYLLABLE_BOUNDARY).length!==a.numSyllables)return;if(r.length<a.minLength||r.length>a.maxLength)return;}return r;}}},{key:"checkCriteria",value:function(n,e,a){if(n.length>a.maxLength)return !1;if(n.length<a.minLength)return !1;if(a.numSyllables){var h=e[0].split(" ").length;if(a.numSyllables!==h)return !1;}return !0;}},{key:"parseArgs",value:function(n){n.limit=n.limit||10,n.minDistance=n.minDistance||1,n.numSyllables=n.numSyllables||0,n.maxLength=n.maxLength||Number.MAX_SAFE_INTEGER,n.minLength=n.minLength||(n.limit>1?3:4);var e=n.pos||!1;e&&e.length&&(n.pluralize="nns"===e,n.conjugate="v"===e[0]&&e.length>2,"n"===e[0]?e="nn":"v"===e[0]?e="vb":"r"===e?e="rb":"a"===e&&(e="jj")),n.targetPos=e;}},{key:"reconjugate",value:function(n,e){var a=this.RiTa;switch(e){case"vbd":return a.conjugate(n,{number:a.SINGULAR,person:a.FIRST,tense:a.PAST});case"vbg":return a.presentPart(n);case"vbn":return a.pastPart(n);case"vbp":return n;case"vbz":return a.conjugate(n,{number:a.SINGULAR,person:a.THIRD,tense:a.PRESENT});default:throw Error("Unexpected pos: "+e);}}},{key:"similarBySoundAndLetter",value:function(n,e){e.type="letter";var a=this.similarByType(n,e);if(a.length<1)return [];e.type="sound";var h=this.similarByType(n,e);return h.length<1?[]:this._intersect(h,a).slice(0,e.limit);}},{key:"rawPhones",value:function(n,e){var a=e&&e.noLts,h=e&&e.fatal,t=this._lookupRaw(n,h);if(t&&t.length)return t[0];if(!a){var r=this.RiTa.analyzer.computePhones(n);return l.syllablesFromPhones(r);}}},{key:"minEditDist",value:function(n,e){var a,h,t,r,i=[];for(h=0;h<=n.length;h++)i[h]=[],i[h][0]=h;for(t=0;t<=e.length;t++)i[0][t]=t;for(h=1;h<=n.length;h++)for(r=n[h-1],t=1;t<=e.length;t++)a=r==e[t-1]?0:1,i[h][t]=Math.min(i[h-1][t]+1,i[h][t-1]+1,i[h-1][t-1]+a);return i[n.length][e.length];}},{key:"isMassNoun",value:function(n,e){return n.endsWith("ness")||n.endsWith("ism")||e.indexOf("vbg")>0||l.MASS_NOUNS.includes(n);}},{key:"_parseRegex",value:function(n,e){return "string"==typeof n?(e&&"stresses"===e.type&&/^[01]+$/.test(n)&&(n=n.replace(/([01])(?=([01]))/g,"$1/")),n=new RegExp(n)):n instanceof RegExp||"object"===W(n)&&(e||"string"==typeof(n=(e=n).regex)&&(n=new RegExp(n))),{regex:n,opts:e||{}};}},{key:"_regexMatch",value:function(n,e,a,h){if("stresses"===h){var t=e?e[0]:this.rawPhones(n),r=this.analyzer.phonesToStress(t);if(a.test(r))return !0;}else if("phones"===h){var i=e?e[0]:this.rawPhones(n);if(i=i.replace(/1/g,"").replace(/ /g,"-"),a.test(i))return !0;}else if(a.test(n))return !0;}},{key:"_toPhoneArray",value:function(n){return n.replace(/[01]/g,"").replace(/ /g,"-").split("-");}},{key:"_firstPhone",value:function(n){if(n&&n.length){var e=n.split(this.RiTa.PHONE_BOUNDARY);if(e)return e[0];}}},{key:"_intersect",value:function(n,e){return [n,e].reduce(function(n,e){return n.filter(function(n){return e.includes(n);});});}},{key:"_lastStressedPhoneToEnd",value:function(n){if(n&&n.length){var e=this.rawPhones(n);if(e){var a=e.lastIndexOf(this.RiTa.STRESS);if(a>=0)for(var h=e.charAt(--a);"-"!=h&&" "!=h;){if(--a<0)return e;h=e.charAt(a);}return e.substring(a+1);}}}},{key:"_lastStressedVowelPhonemeToEnd",value:function(n){if(n&&n.length){var e=this._lastStressedPhoneToEnd(n);if(e){var a=-1,h=e.split(" "),t=h[h.length-1];t=t.replace("[^a-z-1 ]","");for(var r=0;r<t.length;r++){var i=t.charAt(r);if(this.RiTa.VOWELS.includes(i)){a=r;break;}}return t.substring(a);}}}},{key:"_firstStressedSyl",value:function(n){var e=this.rawPhones(n);if(e){var a=e.indexOf(this.RiTa.STRESS);if(a>=0){for(var h=e.charAt(--a);" "!=h;){if(--a<0){a=0;break;}h=e.charAt(a);}var t=0===a?e:e.substring(a).trim();return (a=t.indexOf(" "))<0?t:t.substring(0,a);}}}},{key:"_posData",value:function(n,e){var a=this._lookupRaw(n,e);if(a&&2===a.length)return a[1];}},{key:"_posArr",value:function(n,e){var a=this._lookupRaw(n,e);if(a&&2===a.length)return a[1].split(" ");}},{key:"_lookupRaw",value:function(n,e){return n=n&&n.toLowerCase(),this._dict(e)[n];}},{key:"_dict",value:function(n){if(!this.data){if(n)throw Error("This function requires a lexicon, make sure you are using the full version of rita (see "+this.RiTa.CDN+")");this.lexWarned||(console.warn("[WARN] no lexicon was loaded, feature-analysis and POS-tagging may be incorrect."),this.lexWarned=!0);}return this.data||{};}}])&&Y(e.prototype,a),n;}(),J={silent:!0},Q=K,X=function(n,e){return {parse:function(e,h){var i=JSON.parse(e,r).map(t),s=i[0],l=h||a,o="object"==typeof s&&s?function e(a,h,t,r){return Object.keys(t).reduce(function(t,i){var s=t[i];if(s instanceof n){var l=a[s];"object"!=typeof l||h.has(l)?t[i]=r.call(t,i,l):(h.add(l),t[i]=r.call(t,i,e(a,h,l,r)));}else t[i]=r.call(t,i,s);return t;},t);}(i,new Set(),s,l):s;return l.call({"":o},"",o);},stringify:function(n,e,t){for(var r,i=new Map(),s=[],l=[],o=e&&typeof e==typeof s?function(n,a){if(""===n||-1<e.indexOf(n))return a;}:e||a,b=+h(i,s,o.call({"":n},"",n)),d=function(n,e){if(r)return r=!r,e;var a=o.call(this,n,e);switch(typeof a){case"object":if(null===a)return a;case"string":return i.get(a)||h(i,s,a);}return a;};b<s.length;b++)r=!0,l[b]=JSON.stringify(s[b],d,t);return "["+l.join(",")+"]";}};function a(n,e){return e;}function h(e,a,h){var t=n(a.push(h)-1);return e.set(h,t),t;}function t(e){return e instanceof n?n(e):e;}function r(e,a){return "string"==typeof a?new n(a):a;}}(String),Z=X.parse,nn=X.stringify;function en(n){return (en="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n;}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n;})(n);}function an(n){return function(n){if(Array.isArray(n))return hn(n);}(n)||function(n){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(n))return Array.from(n);}(n)||function(n,e){if(!n)return;if("string"==typeof n)return hn(n,e);var a=Object.prototype.toString.call(n).slice(8,-1);"Object"===a&&n.constructor&&(a=n.constructor.name);if("Map"===a||"Set"===a)return Array.from(n);if("Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a))return hn(n,e);}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}();}function hn(n,e){(null==e||e>n.length)&&(e=n.length);for(var a=0,h=new Array(e);a<e;a++)h[a]=n[a];return h;}function tn(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function");}function rn(n,e){for(var a=0;a<e.length;a++){var h=e[a];h.enumerable=h.enumerable||!1,h.configurable=!0,"value"in h&&(h.writable=!0),Object.defineProperty(n,h.key,h);}}function sn(n,e,a){return e&&rn(n.prototype,e),a&&rn(n,a),n;}var ln=function(){function n(e){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(tn(this,n),this.n=e,this.root=new on(null,"ROOT"),this.trace=a.trace,this.mlm=a.maxLengthMatch,this.maxAttempts=a.maxAttempts||999,this.tokenize=a.tokenize||dn().tokenize,this.untokenize=a.untokenize||dn().untokenize,this.disableInputChecks=a.disableInputChecks,this.mlm&&this.mlm<this.n)throw Error("maxLengthMatch(mlm) must be >= N");this.disableInputChecks&&!this.mlm||(this.input=[]);}return sn(n,[{key:"toJSON",value:function(){var n=this;return nn(Object.keys(this).reduce(function(e,a){return Object.assign(e,(h={},t=a,r=n[a],t in h?Object.defineProperty(h,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):h[t]=r,h));var h,t,r;},{}));}},{key:"addText",value:function(e){for(var a,h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,t=Array.isArray(e)?e:dn().sentences(e),r=[],i=0;i<h;i++){for(var s=0;s<t.length;s++){var l=this.tokenize(t[s]);r.push.apply(r,[n.SS].concat(an(l),[n.SE]));}this.treeify(r);}this.disableInputChecks&&!this.mlm||(a=this.input).push.apply(a,r);}},{key:"generate",value:function(e){var a=this,h=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};1===arguments.length&&"object"===en(e)&&(h=e,e=null);var t,r=e||1,i=h.temperature,s=h.minLength||5,l=h.maxLength||35,o=h.seed||h.startTokens,b=[],d=0,y=function(n){return a._logError(++d,t,n),d>=a.maxAttempts&&yn(d),t=void 0,1;};for("string"==typeof o&&(o=this.tokenize(o));b.length<r;){if(!(t=t||this._initSentence(o)))throw Error('No sentence starts with: "'+o+'"');for(;t&&t.length<l;){var u=this._pathTo(t);if((!u||u.isLeaf())&&y("no parent"))break;var c=this._selectNext(u,i,t);if(!c&&y("no next"))break;if(t.push(c),c.token===n.SE){if(t.pop(),t.length>=s){var p=t.map(function(n){return n.token;});if(!this.disableInputChecks&&un(p,this.input)){y("in input");break;}var j=this._flatten(t);if(!h.allowDuplicates&&b.includes(j)&&y("is dup"))break;this.trace&&console.log("-- OK",j.replace(cn," ")),b.push(j.replace(cn," "));break;}if(y("too short"))break;}}t&&t.length>=l&&y("too long");}return "number"==typeof e?b:b[0];}},{key:"completions",value:function(n,e){var a,h=[];if(e){if(n.length+e.length>this.n)throw Error("Sum of pre.length && post.length must be <= N, was "+(n.length+e.length));if(!(a=this._pathTo(n)))return void(dn().SILENT||console.warn("Unable to find nodes in pre: "+n));for(var t=a.childNodes(),r=0;r<t.length;r++){var i=n.slice(0);i.push.apply(i,[t[r].token].concat(an(e))),this._pathTo(i)&&h.push(t[r].token);}}else {var s=this.probabilities(n);h=Object.keys(s).sort(function(n,e){return s[e]-s[n];});}return h;}},{key:"probabilities",value:function(e,a){Array.isArray(e)||(e=this.tokenize(e));var h={},t=this._pathTo(e);if(t){var r=t.childNodes(),i=r.map(function(n){return n.count;}),s=n.parent.randomizer.ndist(i,a);r.forEach(function(n,e){return h[n.token]=s[e];});}return h;}},{key:"probability",value:function(n){var e=0;if(n&&n.length){var a="string"==typeof n?this.root.child(n):this._pathTo(n);a&&(e=a.nodeProb(!0));}return e;}},{key:"toString",value:function(n){return (n=n||this.root).asTree().replace(/{}/g,"");}},{key:"size",value:function(){return this.root.childCount();}},{key:"_selectNext",value:function(e,a,h){var t=this;if(!this.mlm||this.mlm>h.length)return e.pselect();for(var r,i,s=n.parent.randomizer,l=e.childNodes(),o=l.map(function(n){return n.count;}),b=s.ndist(o,a),d=2*l.length,y=s.random(),u=0,c=0;u<d;u++){var p=u%l.length;c+=b[p];var j=l[p];if(y<c&&(r=j,i=void 0,(i=h.slice().map(function(n){return n.token;})).push(r.token),!un(i.slice(-(t.mlm+1)),t.input)))return j;}}},{key:"_initSentence",value:function(e,a){a=a||this.root;var h=this.n<2?[a.pselect()]:[a.child(n.SS).pselect()];if(e){h=[];var t=this._pathTo(e,a);if(!t)return !1;for(;!t.isRoot();)h.unshift(t),t=t.parent;}return h;}},{key:"_pathTo",value:function(n,e){if(e=e||this.root,!n||!n.length||this.n<2)return e;for(var a=Math.max(0,n.length-(this.n-1)),h=e.child(n[a++]),t=a;t<n.length;t++)h&&(h=h.child(n[t]));return h;}},{key:"treeify",value:function(n){for(var e=this.root,a=0;a<n.length;a++)for(var h=e,t=n.slice(a,a+this.n),r=0;r<t.length;r++)t[r]&&(h=h.addChild(t[r]));}},{key:"_flatten",value:function(n){return !n||Array.isArray(n)&&!n.length?"":n.token?n.token:this.untokenize(n.map(function(n){return n.token;}));}},{key:"_logError",value:function(n,e,a){this.trace&&console.log(n+" FAIL"+(a?"("+a+")":"")+": "+this._flatten(e));}}],[{key:"fromJSON",value:function(e){var a=Z(e),h=Object.assign(new n(),a);a.input||(h.input=void 0);var t=h.root;return function n(e,a){if(!a)return;for(var h=Object.values(a.children),t=0;t<h.length;t++){var r=h[t],i=e.addChild(r.token,r.count);n(i,r);}}(h.root=new on(null,"ROOT"),t),h;}}]),n;}();ln.SS="<s>",ln.SE="</s>";var on=function(){function n(e,a,h){tn(this,n),this.children={},this.parent=e,this.token=a,this.count=h||0,this.numChildren=-1;}return sn(n,[{key:"child",value:function(n){var e=n;return n.token&&(e=n.token),this.children[e];}},{key:"pselect",value:function(){var n=ln.parent.randomizer,e=this.childNodes(),a=e.map(function(n){return n.count;}),h=n.ndist(a);return e[n.pselect(h)];}},{key:"isLeaf",value:function(){return this.childCount()<1;}},{key:"isRoot",value:function(){return !this.parent;}},{key:"childNodes",value:function(n){var e=Object.values(this.children);return n&&e.sort(function(n,e){return e.count!==n.count?e.count-n.count:e.token.localeCompare(n.token);}),e;}},{key:"childCount",value:function(n){if(-1===this.numChildren){var e=0;for(var a in this.children)(!n||a!==ln.SS&&a!==ln.SE)&&(e+=this.children[a].count);this.numChildren=e;}return this.numChildren;}},{key:"nodeProb",value:function(n){if(!this.parent)throw Error("no parent");return this.count/this.parent.childCount(n);}},{key:"addChild",value:function(e,a){this.numChildren=-1,a=a||1;var h=this.children[e];return h||(h=new n(this,e),this.children[e]=h),h.count+=a,h;}},{key:"toString",value:function(){return this.parent?this.token+"("+this.count+"/"+this.nodeProb().toFixed(3)+"%)":"Root";}},{key:"asTree",value:function(n){var e=this.token+" ";return this.parent&&(e+="("+this.count+")->"),e+="{",this.childCount()?function n(e,a,h,t){var r=e.childNodes(!0),i="\n";if(!r.length)return a;for(var s=0;s<h;s++)i+="  ";for(var l=0;l<r.length;l++){var o=r[l];o&&o.token&&(a+=i+"'"+bn(o.token)+"'",o.isRoot()||(a+=" ["+o.count+",p="+o.nodeProb().toFixed(3)+"]"),o.isLeaf()||(a+="  {"),a=e.childCount()?n(o,a,h+1):a+"}");}i="\n";for(var b=0;b<h-1;b++)i+="  ";return a+i+"}";}(this,e,1):e+"}";}}]),n;}();function bn(n){return "\n"===n&&(n="\\n"),"\r"===n&&(n="\\r"),"\t"===n&&(n="\\t"),"\r\n"===n&&(n="\\r\\n"),n;}function dn(){return ln.parent;}function yn(n,e){throw Error("\nFailed after "+n+" tries"+(e?" and "+e.length+" successes":"")+", you may need to adjust options or add more text:\n");}function un(n,e){if(!e||!e.length)return !1;n:for(var a=n.length-1;a<e.length;a++)for(var h=0;h<n.length;h++){if(n[n.length-h-1]!==e[a-h])continue n;if(h===n.length-1)return !0;}return !1;}var cn=/ +/g,pn=ln;function jn(n,e){for(var a=0;a<e.length;a++){var h=e[a];h.enumerable=h.enumerable||!1,h.configurable=!0,"value"in h&&(h.writable=!0),Object.defineProperty(n,h.key,h);}}var vn=function(){function n(e,a){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function");}(this,n),this.value=e,this.type=a;}var e,a,h;return e=n,h=[{key:"fromOperator",value:function(n){for(var e=Object.values(An),a=0;a<e.length;a++)if(n===e[a])return n.value;throw Error("Invalid Operator: "+n);}},{key:"fromString",value:function(n){switch(n){case">":return zn;case"<":return xn;case">=":return En;case"<=":return Tn;case"!=":return gn;case"^=":return kn;case"$=":return fn;case"*=":return wn;case"==":case"=":return mn;}throw Error("Invalid Operator: "+n);}}],(a=[{key:"toString",value:function(){return this.value;}},{key:"invoke",value:function(n,e){if(null==n)throw Error("No first operand: "+n+" "+e);if(this.type===Sn.EQUALITY){if(this===mn)return n===e;if(this===gn)return n!==e;}else if(this.type===Sn.MATCHING){if(null===e)return !1;if(this===kn)return n.startsWith(e);if(this===fn)return n.endsWith(e);if(this===wn)return new RegExp(e).test(n);}else if(this.type===Sn.COMPARISON)try{var a=parseFloat(n),h=parseFloat(e);if(isNaN(h)||isNaN(a))throw Error();if(this===zn)return a>h;if(this===xn)return a<h;if(this===En)return a>=h;if(this===Tn)return a<=h;}catch(a){throw Error("Expected numeric operands, found ["+n+","+e+"]\n"+a);}}}])&&jn(e.prototype,a),h&&jn(e,h),n;}(),Sn={EQUALITY:"EQUALITY",COMPARISON:"COMPARISON",MATCHING:"MATCHING",ASSIGNMENT:"ASSIGNMENT"},mn=new vn("=",Sn.EQUALITY),gn=new vn("!=",Sn.EQUALITY),kn=new vn("^=",Sn.MATCHING),fn=new vn("$=",Sn.MATCHING),wn=new vn("*=",Sn.MATCHING),zn=new vn(">",Sn.COMPARISON),xn=new vn("<",Sn.COMPARISON),Tn=new vn("<=",Sn.COMPARISON),En=new vn(">=",Sn.COMPARISON),An={GT:zn,LT:xn,NE:gn,LE:Tn,GE:En,SW:kn,EQ:mn,EW:fn,RE:wn};Object.keys(An).forEach(function(n){return vn[n]=An[n];});var _n=vn,Cn=a(34),Dn=a.n(Cn),Ln=a(0),Rn=a.n(Ln),Nn=a(20);function qn(n){return (qn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n;}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n;})(n);}function Pn(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function");}function On(n,e){for(var a=0;a<e.length;a++){var h=e[a];h.enumerable=h.enumerable||!1,h.configurable=!0,"value"in h&&(h.writable=!0),Object.defineProperty(n,h.key,h);}}function In(n,e){return (In=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n;})(n,e);}function $n(n){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return !1;if(Reflect.construct.sham)return !1;if("function"==typeof Proxy)return !0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0;}catch(n){return !1;}}();return function(){var a,h=Bn(n);if(e){var t=Bn(this).constructor;a=Reflect.construct(h,arguments,t);}else a=h.apply(this,arguments);return Fn(this,a);};}function Fn(n,e){return !e||"object"!==qn(e)&&"function"!=typeof e?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n;}(n):e;}function Bn(n){return (Bn=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n);})(n);}var Mn=function(n){!function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),e&&In(n,e);}(r,n);var e,a,t=$n(r);function r(){return Pn(this,r),t.apply(this,arguments);}return e=r,(a=[{key:"visitScript",value:function(n){return this.visitChildren(n);}},{key:"visitLine",value:function(n){return this.visitChildren(n);}},{key:"visitExpr",value:function(n){return this.visitChildren(n);}},{key:"visitCexpr",value:function(n){return this.visitChildren(n);}},{key:"visitCond",value:function(n){return this.visitChildren(n);}},{key:"visitWeight",value:function(n){return this.visitChildren(n);}},{key:"visitAssign",value:function(n){return this.visitChildren(n);}},{key:"visitTransform",value:function(n){return this.visitChildren(n);}},{key:"visitDynamic",value:function(n){return this.visitChildren(n);}},{key:"visitSymbol",value:function(n){return this.visitChildren(n);}},{key:"visitChoice",value:function(n){return this.visitChildren(n);}},{key:"visitWexpr",value:function(n){return this.visitChildren(n);}},{key:"visitLink",value:function(n){return this.visitChildren(n);}},{key:"visitUrl",value:function(n){return this.visitChildren(n);}},{key:"visitOp",value:function(n){return this.visitChildren(n);}},{key:"visitChars",value:function(n){return this.visitChildren(n);}}])&&On(e.prototype,a),r;}(Rn.a.tree.ParseTreeVisitor);function Un(n){return (Un="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n;}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n;})(n);}function Hn(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function");}function Vn(n,e){for(var a=0;a<e.length;a++){var h=e[a];h.enumerable=h.enumerable||!1,h.configurable=!0,"value"in h&&(h.writable=!0),Object.defineProperty(n,h.key,h);}}function Gn(n,e,a){return e&&Vn(n.prototype,e),a&&Vn(n,a),n;}function Wn(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),e&&Yn(n,e);}function Yn(n,e){return (Yn=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n;})(n,e);}function Kn(n){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return !1;if(Reflect.construct.sham)return !1;if("function"==typeof Proxy)return !0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0;}catch(n){return !1;}}();return function(){var a,h=Xn(n);if(e){var t=Xn(this).constructor;a=Reflect.construct(h,arguments,t);}else a=h.apply(this,arguments);return Jn(this,a);};}function Jn(n,e){return !e||"object"!==Un(e)&&"function"!=typeof e?Qn(n):e;}function Qn(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n;}function Xn(n){return (Xn=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n);})(n);}function Zn(n,e,a){return e in n?Object.defineProperty(n,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):n[e]=a,n;}var ne=["\x03\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786","\u5964\x03#\xd0\x04\x02\t\x02\x04\x03\t\x03\x04\x04","\t\x04\x04\x05\t\x05\x04\x06\t\x06\x04\x07\t\x07","\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f","\x04\r\t\r\x04\x0e\t\x0e\x04\x0f\t\x0f\x04\x10\t\x10","\x04\x11\t\x11\x03\x02\x03\x02\x03\x02\x07\x02","&\n\x02\f\x02\x0e\x02)\v\x02\x03\x02\x03\x02\x03","\x03\x03\x03\x07\x03/\n\x03\f\x03\x0e\x032\v\x03","\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x06\x04","9\n\x04\r\x04\x0e\x04:\x03\x05\x07\x05>\n\x05\f\x05","\x0e\x05A\v\x05\x03\x05\x03\x05\x06\x05E\n\x05","\r\x05\x0e\x05F\x03\x05\x03\x05\x03\x05\x07\x05","L\n\x05\f\x05\x0e\x05O\v\x05\x03\x05\x03\x05\x03","\x06\x03\x06\x07\x06U\n\x06\f\x06\x0e\x06X\v\x06","\x03\x06\x03\x06\x07\x06\\\n\x06\f\x06\x0e\x06_","\v\x06\x03\x06\x03\x06\x07\x06c\n\x06\f\x06\x0e","\x06f\v\x06\x03\x06\x05\x06i\n\x06\x03\x07\x07","\x07l\n\x07\f\x07\x0e\x07o\v\x07\x03\x07\x03\x07","\x03\x07\x03\x07\x07\x07u\n\x07\f\x07\x0e\x07x\v","\x07\x03\b\x03\b\x05\b|\n\b\x03\b\x03\b\x03\b\x03\t","\x03\t\x03\t\x05\t\x84\n\t\x03\t\x05\t\x87\n\t\x03\n","\x03\n\x07\n\x8b\n\n\f\n\x0e\n\x8e\v\n\x03\v\x03","\v\x07\v\x92\n\v\f\v\x0e\v\x95\v\v","\x03\v\x06\v\x98\n\v\r\v\x0e\v\x99\x05","\v\x9c\n\v\x03\f\x03\f\x03\f\x03\f\x07\f\xa2\n","\f\f\f\x0e\f\xa5\v\f\x03\f\x03\f\x03\f\x03\f\x07\f","\xab\n\f\f\f\x0e\f\xae\v\f\x03\r\x05\r\xb1\n\r\x03","\r\x05\r\xb4\n\r\x03\x0e\x03\x0e\x03\x0e\x03\x0e","\x03\x0e\x03\x0e\x03\x0e\x07\x0e\xbd\n\x0e\f\x0e","\x0e\x0e\xc0\v\x0e\x03\x0f\x06\x0f\xc3\n\x0f","\r\x0f\x0e\x0f\xc4\x03\x10\x03\x10\x05\x10\xc9","\n\x10\x03\x11\x06\x11\xcc\n\x11\r\x11\x0e\x11\xcd","\x03\x11\x02\x02\x12\x02\x04\x06\b\n\f\x0e\x10\x12","\x14\x16\x18\x1a\x1c\x1e \x02\x04\x04\x02\x11","\x12\x1b\x1b\x05\x02\r\x15\x1c\x1d\x1f\x1f\x02",'\xdf\x02"\x03\x02\x02\x02\x040\x03\x02\x02\x02',"\x068\x03\x02\x02\x02\b?\x03\x02\x02\x02\nR\x03","\x02\x02\x02\fm\x03\x02\x02\x02\x0e{\x03\x02\x02","\x02\x10\x80\x03\x02\x02\x02\x12\x88\x03\x02\x02","\x02\x14\x9b\x03\x02\x02\x02\x16\x9d\x03\x02\x02","\x02\x18\xb0\x03\x02\x02\x02\x1a\xb5\x03\x02\x02","\x02\x1c\xc2\x03\x02\x02\x02\x1e\xc8\x03\x02\x02","\x02 \xcb\x03\x02\x02\x02\"'\x05\x04\x03\x02#$","\x07\x16\x02\x02$&\x05\x04\x03\x02%#\x03\x02\x02","\x02&)\x03\x02\x02\x02'%\x03\x02\x02\x02'(\x03","\x02\x02\x02(*\x03\x02\x02\x02)'\x03\x02\x02\x02","*+\x07\x02\x02\x03+\x03\x03\x02\x02\x02,/\x05\x06","\x04\x02-/\x05\b\x05\x02.,\x03\x02\x02\x02.-\x03","\x02\x02\x02/2\x03\x02\x02\x020.\x03\x02\x02\x02","01\x03\x02\x02\x021\x05\x03\x02\x02\x0220\x03\x02","\x02\x0239\x05\x14\v\x0249\x05\x16\f\x0259\x05","\x0e\b\x0269\x05 \x11\x0279\x05\x1a\x0e\x0283\x03","\x02\x02\x0284\x03\x02\x02\x0285\x03\x02\x02\x02","86\x03\x02\x02\x0287\x03\x02\x02\x029:\x03\x02\x02","\x02:8\x03\x02\x02\x02:;\x03\x02\x02\x02;\x07\x03","\x02\x02\x02<>\x07\x14\x02\x02=<\x03\x02\x02\x02",">A\x03\x02\x02\x02?=\x03\x02\x02\x02?@\x03\x02\x02","\x02@B\x03\x02\x02\x02A?\x03\x02\x02\x02BD\x07\v","\x02\x02CE\x05\n\x06\x02DC\x03\x02\x02\x02EF\x03","\x02\x02\x02FD\x03\x02\x02\x02FG\x03\x02\x02\x02","GH\x03\x02\x02\x02HI\x07\f\x02\x02IM\x07\x05\x02","\x02JL\x07\x14\x02\x02KJ\x03\x02\x02\x02LO\x03\x02","\x02\x02MK\x03\x02\x02\x02MN\x03\x02\x02\x02NP\x03","\x02\x02\x02OM\x03\x02\x02\x02PQ\x05\x06\x04\x02","Q\t\x03\x02\x02\x02RV\x05\x14\v\x02SU\x07\x14","\x02\x02TS\x03\x02\x02\x02UX\x03\x02\x02\x02VT\x03","\x02\x02\x02VW\x03\x02\x02\x02WY\x03\x02\x02\x02","XV\x03\x02\x02\x02Y]\x05\x1e\x10\x02Z\\\x07\x14","\x02\x02[Z\x03\x02\x02\x02\\_\x03\x02\x02\x02][","\x03\x02\x02\x02]^\x03\x02\x02\x02^`\x03\x02\x02","\x02_]\x03\x02\x02\x02`d\x05 \x11\x02ac\x07\x14","\x02\x02ba\x03\x02\x02\x02cf\x03\x02\x02\x02db\x03","\x02\x02\x02de\x03\x02\x02\x02eh\x03\x02\x02\x02","fd\x03\x02\x02\x02gi\x07\x10\x02\x02hg\x03\x02\x02","\x02hi\x03\x02\x02\x02i\v\x03\x02\x02\x02jl\x07","\x14\x02\x02kj\x03\x02\x02\x02lo\x03\x02\x02\x02","mk\x03\x02\x02\x02mn\x03\x02\x02\x02np\x03\x02\x02","\x02om\x03\x02\x02\x02pq\x07\t\x02\x02qr\x07\x1d","\x02\x02rv\x07\n\x02\x02su\x07\x14\x02\x02ts\x03","\x02\x02\x02ux\x03\x02\x02\x02vt\x03\x02\x02\x02","vw\x03\x02\x02\x02w\r\x03\x02\x02\x02xv\x03\x02","\x02\x02y|\x05\x12\n\x02z|\x05\x14\v\x02{y\x03","\x02\x02\x02{z\x03\x02\x02\x02|}\x03\x02\x02\x02","}~\x07\x1b\x02\x02~\x7f\x05\x06\x04\x02\x7f\x0f","\x03\x02\x02\x02\x80\x86\x07\x17\x02\x02\x81\x83","\x07\x07\x02\x02\x82\x84\x05\x06\x04\x02\x83\x82","\x03\x02\x02\x02\x83\x84\x03\x02\x02\x02\x84\x85","\x03\x02\x02\x02\x85\x87\x07\b\x02\x02\x86\x81","\x03\x02\x02\x02\x86\x87\x03\x02\x02\x02\x87\x11","\x03\x02\x02\x02\x88\x8c\x07\x18\x02\x02\x89\x8b","\x05\x10\t\x02\x8a\x89\x03\x02\x02\x02\x8b\x8e","\x03\x02\x02\x02\x8c\x8a\x03\x02\x02\x02\x8c\x8d","\x03\x02\x02\x02\x8d\x13\x03\x02\x02\x02\x8e\x8c","\x03\x02\x02\x02\x8f\x93\x07\x19\x02\x02\x90\x92","\x05\x10\t\x02\x91\x90\x03\x02\x02\x02\x92\x95","\x03\x02\x02\x02\x93\x91\x03\x02\x02\x02\x93\x94","\x03\x02\x02\x02\x94\x9c\x03\x02\x02\x02\x95\x93","\x03\x02\x02\x02\x96\x98\x05\x10\t\x02\x97\x96","\x03\x02\x02\x02\x98\x99\x03\x02\x02\x02\x99\x97","\x03\x02\x02\x02\x99\x9a\x03\x02\x02\x02\x9a\x9c","\x03\x02\x02\x02\x9b\x8f\x03\x02\x02\x02\x9b\x97","\x03\x02\x02\x02\x9c\x15\x03\x02\x02\x02\x9d\xa3","\x07\x07\x02\x02\x9e\x9f\x05\x18\r\x02\x9f\xa0","\x07\x1a\x02\x02\xa0\xa2\x03\x02\x02\x02\xa1\x9e","\x03\x02\x02\x02\xa2\xa5\x03\x02\x02\x02\xa3\xa1","\x03\x02\x02\x02\xa3\xa4\x03\x02\x02\x02\xa4\xa6","\x03\x02\x02\x02\xa5\xa3\x03\x02\x02\x02\xa6\xa7","\x05\x18\r\x02\xa7\xa8\x07\b\x02\x02\xa8\xac\x03","\x02\x02\x02\xa9\xab\x05\x10\t\x02\xaa\xa9\x03","\x02\x02\x02\xab\xae\x03\x02\x02\x02\xac\xaa\x03","\x02\x02\x02\xac\xad\x03\x02\x02\x02\xad\x17\x03","\x02\x02\x02\xae\xac\x03\x02\x02\x02\xaf\xb1\x05","\x06\x04\x02\xb0\xaf\x03\x02\x02\x02\xb0\xb1\x03","\x02\x02\x02\xb1\xb3\x03\x02\x02\x02\xb2\xb4\x05","\f\x07\x02\xb3\xb2\x03\x02\x02\x02\xb3\xb4\x03","\x02\x02\x02\xb4\x19\x03\x02\x02\x02\xb5\xb6\x07","\t\x02\x02\xb6\xb7\x05\x06\x04\x02\xb7\xb8\x07","\n\x02\x02\xb8\xb9\x07\x06\x02\x02\xb9\xba\x05","\x1c\x0f\x02\xba\xbe\x07#\x02\x02\xbb\xbd\x07","\x14\x02\x02\xbc\xbb\x03\x02\x02\x02\xbd\xc0\x03","\x02\x02\x02\xbe\xbc\x03\x02\x02\x02\xbe\xbf\x03","\x02\x02\x02\xbf\x1b\x03\x02\x02\x02\xc0\xbe\x03",'\x02\x02\x02\xc1\xc3\x07"\x02\x02\xc2\xc1\x03',"\x02\x02\x02\xc3\xc4\x03\x02\x02\x02\xc4\xc2\x03","\x02\x02\x02\xc4\xc5\x03\x02\x02\x02\xc5\x1d\x03","\x02\x02\x02\xc6\xc9\x07\x1e\x02\x02\xc7\xc9\t","\x02\x02\x02\xc8\xc6\x03\x02\x02\x02\xc8\xc7\x03","\x02\x02\x02\xc9\x1f\x03\x02\x02\x02\xca\xcc\t","\x03\x02\x02\xcb\xca\x03\x02\x02\x02\xcc\xcd\x03","\x02\x02\x02\xcd\xcb\x03\x02\x02\x02\xcd\xce\x03","\x02\x02\x02\xce!\x03\x02\x02\x02\x1f'.08:?FMV]d","hmv{\x83\x86\x8c\x93\x99\x9b\xa3\xac\xb0\xb3\xbe","\xc4\xc8\xcd"].join(""),ee=new Rn.a.atn.ATNDeserializer().deserialize(ne),ae=ee.decisionToState.map(function(n,e){return new Rn.a.dfa.DFA(n,e);}),he=new Rn.a.PredictionContextCache(),te=function(n){Wn(a,n);var e=Kn(a);function a(n){var h;return Hn(this,a),(h=e.call(this,n))._interp=new Rn.a.atn.ParserATNSimulator(Qn(h),ee,ae,he),h.ruleNames=a.ruleNames,h.literalNames=a.literalNames,h.symbolicNames=a.symbolicNames,h;}return Gn(a,[{key:"atn",get:function(){return ee;}},{key:"script",value:function(){var n=new re(this,this._ctx,this.state);this.enterRule(n,0,a.RULE_script);var e=0;try{for(this.enterOuterAlt(n,1),this.state=32,this.line(),this.state=37,this._errHandler.sync(this),e=this._input.LA(1);e===a.NL;)this.state=33,this.match(a.NL),this.state=34,this.line(),this.state=39,this._errHandler.sync(this),e=this._input.LA(1);this.state=40,this.match(a.EOF);}catch(e){if(!(e instanceof Rn.a.error.RecognitionException))throw e;n.exception=e,this._errHandler.reportError(this,e),this._errHandler.recover(this,e);}finally{this.exitRule();}return n;}},{key:"line",value:function(){var n=new ie(this,this._ctx,this.state);this.enterRule(n,2,a.RULE_line);var e=0;try{for(this.enterOuterAlt(n,1),this.state=46,this._errHandler.sync(this),e=this._input.LA(1);0==(-32&e)&&0!=(1<<e&(1<<a.LP|1<<a.LB|1<<a.LCB|1<<a.FS|1<<a.AST|1<<a.DOL|1<<a.COM|1<<a.GT|1<<a.LT|1<<a.DOT|1<<a.WS|1<<a.ESC|1<<a.DIDENT|1<<a.DYN|1<<a.SYM|1<<a.ENT|1<<a.INT|1<<a.CHR));){switch(this.state=44,this._errHandler.sync(this),this._interp.adaptivePredict(this._input,1,this._ctx)){case 1:this.state=42,this.expr();break;case 2:this.state=43,this.cexpr();}this.state=48,this._errHandler.sync(this),e=this._input.LA(1);}}catch(e){if(!(e instanceof Rn.a.error.RecognitionException))throw e;n.exception=e,this._errHandler.reportError(this,e),this._errHandler.recover(this,e);}finally{this.exitRule();}return n;}},{key:"expr",value:function(){var n=new se(this,this._ctx,this.state);this.enterRule(n,4,a.RULE_expr);try{this.enterOuterAlt(n,1),this.state=54,this._errHandler.sync(this);var e=1;do{switch(e){case 1:switch(this.state=54,this._errHandler.sync(this),this._interp.adaptivePredict(this._input,3,this._ctx)){case 1:this.state=49,this.symbol();break;case 2:this.state=50,this.choice();break;case 3:this.state=51,this.assign();break;case 4:this.state=52,this.chars();break;case 5:this.state=53,this.link();}break;default:throw new Rn.a.error.NoViableAltException(this);}this.state=56,this._errHandler.sync(this),e=this._interp.adaptivePredict(this._input,4,this._ctx);}while(2!=e&&e!=Rn.a.atn.ATN.INVALID_ALT_NUMBER);}catch(e){if(!(e instanceof Rn.a.error.RecognitionException))throw e;n.exception=e,this._errHandler.reportError(this,e),this._errHandler.recover(this,e);}finally{this.exitRule();}return n;}},{key:"cexpr",value:function(){var n=new le(this,this._ctx,this.state);this.enterRule(n,6,a.RULE_cexpr);var e=0;try{for(this.enterOuterAlt(n,1),this.state=61,this._errHandler.sync(this),e=this._input.LA(1);e===a.WS;)this.state=58,this.match(a.WS),this.state=63,this._errHandler.sync(this),e=this._input.LA(1);this.state=64,this.match(a.LCB),this.state=66,this._errHandler.sync(this),e=this._input.LA(1);do{this.state=65,this.cond(),this.state=68,this._errHandler.sync(this),e=this._input.LA(1);}while(e===a.DIDENT||e===a.SYM);this.state=70,this.match(a.RCB),this.state=71,this.match(a.Q),this.state=75,this._errHandler.sync(this);for(var h=this._interp.adaptivePredict(this._input,7,this._ctx);2!=h&&h!=Rn.a.atn.ATN.INVALID_ALT_NUMBER;)1===h&&(this.state=72,this.match(a.WS)),this.state=77,this._errHandler.sync(this),h=this._interp.adaptivePredict(this._input,7,this._ctx);this.state=78,this.expr();}catch(e){if(!(e instanceof Rn.a.error.RecognitionException))throw e;n.exception=e,this._errHandler.reportError(this,e),this._errHandler.recover(this,e);}finally{this.exitRule();}return n;}},{key:"cond",value:function(){var n=new oe(this,this._ctx,this.state);this.enterRule(n,8,a.RULE_cond);var e=0;try{for(this.enterOuterAlt(n,1),this.state=80,this.symbol(),this.state=84,this._errHandler.sync(this),e=this._input.LA(1);e===a.WS;)this.state=81,this.match(a.WS),this.state=86,this._errHandler.sync(this),e=this._input.LA(1);this.state=87,this.op(),this.state=91,this._errHandler.sync(this);for(var h=this._interp.adaptivePredict(this._input,9,this._ctx);2!=h&&h!=Rn.a.atn.ATN.INVALID_ALT_NUMBER;)1===h&&(this.state=88,this.match(a.WS)),this.state=93,this._errHandler.sync(this),h=this._interp.adaptivePredict(this._input,9,this._ctx);for(this.state=94,this.chars(),this.state=98,this._errHandler.sync(this),e=this._input.LA(1);e===a.WS;)this.state=95,this.match(a.WS),this.state=100,this._errHandler.sync(this),e=this._input.LA(1);this.state=102,this._errHandler.sync(this),(e=this._input.LA(1))===a.COM&&(this.state=101,this.match(a.COM));}catch(e){if(!(e instanceof Rn.a.error.RecognitionException))throw e;n.exception=e,this._errHandler.reportError(this,e),this._errHandler.recover(this,e);}finally{this.exitRule();}return n;}},{key:"weight",value:function(){var n=new be(this,this._ctx,this.state);this.enterRule(n,10,a.RULE_weight);var e=0;try{for(this.enterOuterAlt(n,1),this.state=107,this._errHandler.sync(this),e=this._input.LA(1);e===a.WS;)this.state=104,this.match(a.WS),this.state=109,this._errHandler.sync(this),e=this._input.LA(1);for(this.state=110,this.match(a.LB),this.state=111,this.match(a.INT),this.state=112,this.match(a.RB),this.state=116,this._errHandler.sync(this),e=this._input.LA(1);e===a.WS;)this.state=113,this.match(a.WS),this.state=118,this._errHandler.sync(this),e=this._input.LA(1);}catch(e){if(!(e instanceof Rn.a.error.RecognitionException))throw e;n.exception=e,this._errHandler.reportError(this,e),this._errHandler.recover(this,e);}finally{this.exitRule();}return n;}},{key:"assign",value:function(){var n=new de(this,this._ctx,this.state);this.enterRule(n,12,a.RULE_assign);try{switch(this.enterOuterAlt(n,1),this.state=121,this._errHandler.sync(this),this._input.LA(1)){case a.DYN:this.state=119,this.dynamic();break;case a.DIDENT:case a.SYM:this.state=120,this.symbol();break;default:throw new Rn.a.error.NoViableAltException(this);}this.state=123,this.match(a.EQ),this.state=124,this.expr();}catch(e){if(!(e instanceof Rn.a.error.RecognitionException))throw e;n.exception=e,this._errHandler.reportError(this,e),this._errHandler.recover(this,e);}finally{this.exitRule();}return n;}},{key:"transform",value:function(){var n=new ye(this,this._ctx,this.state);this.enterRule(n,14,a.RULE_transform);var e=0;try{this.enterOuterAlt(n,1),this.state=126,this.match(a.DIDENT),this.state=132,this._errHandler.sync(this),1===this._interp.adaptivePredict(this._input,16,this._ctx)&&(this.state=127,this.match(a.LP),this.state=129,this._errHandler.sync(this),0==(-32&(e=this._input.LA(1)))&&0!=(1<<e&(1<<a.LP|1<<a.LB|1<<a.FS|1<<a.AST|1<<a.DOL|1<<a.COM|1<<a.GT|1<<a.LT|1<<a.DOT|1<<a.WS|1<<a.ESC|1<<a.DIDENT|1<<a.DYN|1<<a.SYM|1<<a.ENT|1<<a.INT|1<<a.CHR))&&(this.state=128,this.expr()),this.state=131,this.match(a.RP));}catch(e){if(!(e instanceof Rn.a.error.RecognitionException))throw e;n.exception=e,this._errHandler.reportError(this,e),this._errHandler.recover(this,e);}finally{this.exitRule();}return n;}},{key:"dynamic",value:function(){var n=new ue(this,this._ctx,this.state);this.enterRule(n,16,a.RULE_dynamic);var e=0;try{for(this.enterOuterAlt(n,1),this.state=134,this.match(a.DYN),this.state=138,this._errHandler.sync(this),e=this._input.LA(1);e===a.DIDENT;)this.state=135,this.transform(),this.state=140,this._errHandler.sync(this),e=this._input.LA(1);}catch(e){if(!(e instanceof Rn.a.error.RecognitionException))throw e;n.exception=e,this._errHandler.reportError(this,e),this._errHandler.recover(this,e);}finally{this.exitRule();}return n;}},{key:"symbol",value:function(){var n=new ce(this,this._ctx,this.state);this.enterRule(n,18,a.RULE_symbol);try{switch(this.state=153,this._errHandler.sync(this),this._input.LA(1)){case a.SYM:this.enterOuterAlt(n,1),this.state=141,this.match(a.SYM),this.state=145,this._errHandler.sync(this);for(var e=this._interp.adaptivePredict(this._input,18,this._ctx);2!=e&&e!=Rn.a.atn.ATN.INVALID_ALT_NUMBER;)1===e&&(this.state=142,this.transform()),this.state=147,this._errHandler.sync(this),e=this._interp.adaptivePredict(this._input,18,this._ctx);break;case a.DIDENT:this.enterOuterAlt(n,2),this.state=149,this._errHandler.sync(this);e=1;do{switch(e){case 1:this.state=148,this.transform();break;default:throw new Rn.a.error.NoViableAltException(this);}this.state=151,this._errHandler.sync(this),e=this._interp.adaptivePredict(this._input,19,this._ctx);}while(2!=e&&e!=Rn.a.atn.ATN.INVALID_ALT_NUMBER);break;default:throw new Rn.a.error.NoViableAltException(this);}}catch(e){if(!(e instanceof Rn.a.error.RecognitionException))throw e;n.exception=e,this._errHandler.reportError(this,e),this._errHandler.recover(this,e);}finally{this.exitRule();}return n;}},{key:"choice",value:function(){var n=new pe(this,this._ctx,this.state);this.enterRule(n,20,a.RULE_choice);try{this.enterOuterAlt(n,1),this.state=155,this.match(a.LP),this.state=161,this._errHandler.sync(this);for(var e=this._interp.adaptivePredict(this._input,21,this._ctx);2!=e&&e!=Rn.a.atn.ATN.INVALID_ALT_NUMBER;)1===e&&(this.state=156,this.wexpr(),this.state=157,this.match(a.OR)),this.state=163,this._errHandler.sync(this),e=this._interp.adaptivePredict(this._input,21,this._ctx);this.state=164,this.wexpr(),this.state=165,this.match(a.RP),this.state=170,this._errHandler.sync(this);for(e=this._interp.adaptivePredict(this._input,22,this._ctx);2!=e&&e!=Rn.a.atn.ATN.INVALID_ALT_NUMBER;)1===e&&(this.state=167,this.transform()),this.state=172,this._errHandler.sync(this),e=this._interp.adaptivePredict(this._input,22,this._ctx);}catch(e){if(!(e instanceof Rn.a.error.RecognitionException))throw e;n.exception=e,this._errHandler.reportError(this,e),this._errHandler.recover(this,e);}finally{this.exitRule();}return n;}},{key:"wexpr",value:function(){var n=new je(this,this._ctx,this.state);this.enterRule(n,22,a.RULE_wexpr);var e=0;try{this.enterOuterAlt(n,1),this.state=174,this._errHandler.sync(this),1===this._interp.adaptivePredict(this._input,23,this._ctx)&&(this.state=173,this.expr()),this.state=177,this._errHandler.sync(this),(e=this._input.LA(1))!==a.LB&&e!==a.WS||(this.state=176,this.weight());}catch(e){if(!(e instanceof Rn.a.error.RecognitionException))throw e;n.exception=e,this._errHandler.reportError(this,e),this._errHandler.recover(this,e);}finally{this.exitRule();}return n;}},{key:"link",value:function(){var n=new ve(this,this._ctx,this.state);this.enterRule(n,24,a.RULE_link);try{this.enterOuterAlt(n,1),this.state=179,this.match(a.LB),this.state=180,this.expr(),this.state=181,this.match(a.RB),this.state=182,this.match(a.MDS),this.state=183,this.url(),this.state=184,this.match(a.MDE),this.state=188,this._errHandler.sync(this);for(var e=this._interp.adaptivePredict(this._input,25,this._ctx);2!=e&&e!=Rn.a.atn.ATN.INVALID_ALT_NUMBER;)1===e&&(this.state=185,this.match(a.WS)),this.state=190,this._errHandler.sync(this),e=this._interp.adaptivePredict(this._input,25,this._ctx);}catch(e){if(!(e instanceof Rn.a.error.RecognitionException))throw e;n.exception=e,this._errHandler.reportError(this,e),this._errHandler.recover(this,e);}finally{this.exitRule();}return n;}},{key:"url",value:function(){var n=new Se(this,this._ctx,this.state);this.enterRule(n,26,a.RULE_url);var e=0;try{this.enterOuterAlt(n,1),this.state=192,this._errHandler.sync(this),e=this._input.LA(1);do{this.state=191,this.match(a.MDT),this.state=194,this._errHandler.sync(this),e=this._input.LA(1);}while(e===a.MDT);}catch(e){if(!(e instanceof Rn.a.error.RecognitionException))throw e;n.exception=e,this._errHandler.reportError(this,e),this._errHandler.recover(this,e);}finally{this.exitRule();}return n;}},{key:"op",value:function(){var n=new me(this,this._ctx,this.state);this.enterRule(n,28,a.RULE_op);var e=0;try{switch(this.state=198,this._errHandler.sync(this),this._input.LA(1)){case a.OP:this.enterOuterAlt(n,1),this.state=196,this.match(a.OP);break;case a.GT:case a.LT:case a.EQ:this.enterOuterAlt(n,2),this.state=197,0!=(-32&(e=this._input.LA(1)))||0==(1<<e&(1<<a.GT|1<<a.LT|1<<a.EQ))?this._errHandler.recoverInline(this):(this._errHandler.reportMatch(this),this.consume());break;default:throw new Rn.a.error.NoViableAltException(this);}}catch(e){if(!(e instanceof Rn.a.error.RecognitionException))throw e;n.exception=e,this._errHandler.reportError(this,e),this._errHandler.recover(this,e);}finally{this.exitRule();}return n;}},{key:"chars",value:function(){var n=new ge(this,this._ctx,this.state);this.enterRule(n,30,a.RULE_chars);var e=0;try{this.enterOuterAlt(n,1),this.state=201,this._errHandler.sync(this);var h=1;do{switch(h){case 1:this.state=200,0!=(-32&(e=this._input.LA(1)))||0==(1<<e&(1<<a.FS|1<<a.AST|1<<a.DOL|1<<a.COM|1<<a.GT|1<<a.LT|1<<a.DOT|1<<a.WS|1<<a.ESC|1<<a.ENT|1<<a.INT|1<<a.CHR))?this._errHandler.recoverInline(this):(this._errHandler.reportMatch(this),this.consume());break;default:throw new Rn.a.error.NoViableAltException(this);}this.state=203,this._errHandler.sync(this),h=this._interp.adaptivePredict(this._input,28,this._ctx);}while(2!=h&&h!=Rn.a.atn.ATN.INVALID_ALT_NUMBER);}catch(e){if(!(e instanceof Rn.a.error.RecognitionException))throw e;n.exception=e,this._errHandler.reportError(this,e),this._errHandler.recover(this,e);}finally{this.exitRule();}return n;}}]),a;}(Rn.a.Parser);Zn(te,"grammarFileName","RiScriptParser.g4"),Zn(te,"literalNames",[null,null,null,null,null,"'('",null,"'['","']'","'{'","'}'","'/'","'*'","'$'","','","'>'","'<'","'.'"]),Zn(te,"symbolicNames",[null,"LCOMM","BCOMM","Q","MDS","LP","RP","LB","RB","LCB","RCB","FS","AST","DOL","COM","GT","LT","DOT","WS","ESC","NL","DIDENT","DYN","SYM","OR","EQ","ENT","INT","OP","CHR","IDENT","CONT","MDT","MDE"]),Zn(te,"ruleNames",["script","line","expr","cexpr","cond","weight","assign","transform","dynamic","symbol","choice","wexpr","link","url","op","chars"]),te.EOF=Rn.a.Token.EOF,te.LCOMM=1,te.BCOMM=2,te.Q=3,te.MDS=4,te.LP=5,te.RP=6,te.LB=7,te.RB=8,te.LCB=9,te.RCB=10,te.FS=11,te.AST=12,te.DOL=13,te.COM=14,te.GT=15,te.LT=16,te.DOT=17,te.WS=18,te.ESC=19,te.NL=20,te.DIDENT=21,te.DYN=22,te.SYM=23,te.OR=24,te.EQ=25,te.ENT=26,te.INT=27,te.OP=28,te.CHR=29,te.IDENT=30,te.CONT=31,te.MDT=32,te.MDE=33,te.RULE_script=0,te.RULE_line=1,te.RULE_expr=2,te.RULE_cexpr=3,te.RULE_cond=4,te.RULE_weight=5,te.RULE_assign=6,te.RULE_transform=7,te.RULE_dynamic=8,te.RULE_symbol=9,te.RULE_choice=10,te.RULE_wexpr=11,te.RULE_link=12,te.RULE_url=13,te.RULE_op=14,te.RULE_chars=15;var re=function(n){Wn(a,n);var e=Kn(a);function a(n,h,t){var r;return Hn(this,a),void 0===h&&(h=null),null==t&&(t=-1),Zn(Qn(r=e.call(this,h,t)),"line",function(n){return void 0===n&&(n=null),null===n?this.getTypedRuleContexts(ie):this.getTypedRuleContext(ie,n);}),Zn(Qn(r),"NL",function(n){return void 0===n&&(n=null),null===n?this.getTokens(te.NL):this.getToken(te.NL,n);}),r.parser=n,r.ruleIndex=te.RULE_script,r;}return Gn(a,[{key:"EOF",value:function(){return this.getToken(te.EOF,0);}},{key:"accept",value:function(n){return n instanceof Mn?n.visitScript(this):n.visitChildren(this);}}]),a;}(Rn.a.ParserRuleContext),ie=function(n){Wn(a,n);var e=Kn(a);function a(n,h,t){var r;return Hn(this,a),void 0===h&&(h=null),null==t&&(t=-1),Zn(Qn(r=e.call(this,h,t)),"expr",function(n){return void 0===n&&(n=null),null===n?this.getTypedRuleContexts(se):this.getTypedRuleContext(se,n);}),Zn(Qn(r),"cexpr",function(n){return void 0===n&&(n=null),null===n?this.getTypedRuleContexts(le):this.getTypedRuleContext(le,n);}),r.parser=n,r.ruleIndex=te.RULE_line,r;}return Gn(a,[{key:"accept",value:function(n){return n instanceof Mn?n.visitLine(this):n.visitChildren(this);}}]),a;}(Rn.a.ParserRuleContext),se=function(n){Wn(a,n);var e=Kn(a);function a(n,h,t){var r;return Hn(this,a),void 0===h&&(h=null),null==t&&(t=-1),Zn(Qn(r=e.call(this,h,t)),"symbol",function(n){return void 0===n&&(n=null),null===n?this.getTypedRuleContexts(ce):this.getTypedRuleContext(ce,n);}),Zn(Qn(r),"choice",function(n){return void 0===n&&(n=null),null===n?this.getTypedRuleContexts(pe):this.getTypedRuleContext(pe,n);}),Zn(Qn(r),"assign",function(n){return void 0===n&&(n=null),null===n?this.getTypedRuleContexts(de):this.getTypedRuleContext(de,n);}),Zn(Qn(r),"chars",function(n){return void 0===n&&(n=null),null===n?this.getTypedRuleContexts(ge):this.getTypedRuleContext(ge,n);}),Zn(Qn(r),"link",function(n){return void 0===n&&(n=null),null===n?this.getTypedRuleContexts(ve):this.getTypedRuleContext(ve,n);}),r.parser=n,r.ruleIndex=te.RULE_expr,r;}return Gn(a,[{key:"accept",value:function(n){return n instanceof Mn?n.visitExpr(this):n.visitChildren(this);}}]),a;}(Rn.a.ParserRuleContext),le=function(n){Wn(a,n);var e=Kn(a);function a(n,h,t){var r;return Hn(this,a),void 0===h&&(h=null),null==t&&(t=-1),Zn(Qn(r=e.call(this,h,t)),"WS",function(n){return void 0===n&&(n=null),null===n?this.getTokens(te.WS):this.getToken(te.WS,n);}),Zn(Qn(r),"cond",function(n){return void 0===n&&(n=null),null===n?this.getTypedRuleContexts(oe):this.getTypedRuleContext(oe,n);}),r.parser=n,r.ruleIndex=te.RULE_cexpr,r;}return Gn(a,[{key:"LCB",value:function(){return this.getToken(te.LCB,0);}},{key:"RCB",value:function(){return this.getToken(te.RCB,0);}},{key:"Q",value:function(){return this.getToken(te.Q,0);}},{key:"expr",value:function(){return this.getTypedRuleContext(se,0);}},{key:"accept",value:function(n){return n instanceof Mn?n.visitCexpr(this):n.visitChildren(this);}}]),a;}(Rn.a.ParserRuleContext),oe=function(n){Wn(a,n);var e=Kn(a);function a(n,h,t){var r;return Hn(this,a),void 0===h&&(h=null),null==t&&(t=-1),Zn(Qn(r=e.call(this,h,t)),"WS",function(n){return void 0===n&&(n=null),null===n?this.getTokens(te.WS):this.getToken(te.WS,n);}),r.parser=n,r.ruleIndex=te.RULE_cond,r;}return Gn(a,[{key:"symbol",value:function(){return this.getTypedRuleContext(ce,0);}},{key:"op",value:function(){return this.getTypedRuleContext(me,0);}},{key:"chars",value:function(){return this.getTypedRuleContext(ge,0);}},{key:"COM",value:function(){return this.getToken(te.COM,0);}},{key:"accept",value:function(n){return n instanceof Mn?n.visitCond(this):n.visitChildren(this);}}]),a;}(Rn.a.ParserRuleContext),be=function(n){Wn(a,n);var e=Kn(a);function a(n,h,t){var r;return Hn(this,a),void 0===h&&(h=null),null==t&&(t=-1),Zn(Qn(r=e.call(this,h,t)),"WS",function(n){return void 0===n&&(n=null),null===n?this.getTokens(te.WS):this.getToken(te.WS,n);}),r.parser=n,r.ruleIndex=te.RULE_weight,r;}return Gn(a,[{key:"LB",value:function(){return this.getToken(te.LB,0);}},{key:"INT",value:function(){return this.getToken(te.INT,0);}},{key:"RB",value:function(){return this.getToken(te.RB,0);}},{key:"accept",value:function(n){return n instanceof Mn?n.visitWeight(this):n.visitChildren(this);}}]),a;}(Rn.a.ParserRuleContext),de=function(n){Wn(a,n);var e=Kn(a);function a(n,h,t){var r;return Hn(this,a),void 0===h&&(h=null),null==t&&(t=-1),(r=e.call(this,h,t)).parser=n,r.ruleIndex=te.RULE_assign,r;}return Gn(a,[{key:"EQ",value:function(){return this.getToken(te.EQ,0);}},{key:"expr",value:function(){return this.getTypedRuleContext(se,0);}},{key:"dynamic",value:function(){return this.getTypedRuleContext(ue,0);}},{key:"symbol",value:function(){return this.getTypedRuleContext(ce,0);}},{key:"accept",value:function(n){return n instanceof Mn?n.visitAssign(this):n.visitChildren(this);}}]),a;}(Rn.a.ParserRuleContext),ye=function(n){Wn(a,n);var e=Kn(a);function a(n,h,t){var r;return Hn(this,a),void 0===h&&(h=null),null==t&&(t=-1),(r=e.call(this,h,t)).parser=n,r.ruleIndex=te.RULE_transform,r;}return Gn(a,[{key:"DIDENT",value:function(){return this.getToken(te.DIDENT,0);}},{key:"LP",value:function(){return this.getToken(te.LP,0);}},{key:"RP",value:function(){return this.getToken(te.RP,0);}},{key:"expr",value:function(){return this.getTypedRuleContext(se,0);}},{key:"accept",value:function(n){return n instanceof Mn?n.visitTransform(this):n.visitChildren(this);}}]),a;}(Rn.a.ParserRuleContext),ue=function(n){Wn(a,n);var e=Kn(a);function a(n,h,t){var r;return Hn(this,a),void 0===h&&(h=null),null==t&&(t=-1),Zn(Qn(r=e.call(this,h,t)),"transform",function(n){return void 0===n&&(n=null),null===n?this.getTypedRuleContexts(ye):this.getTypedRuleContext(ye,n);}),r.parser=n,r.ruleIndex=te.RULE_dynamic,r;}return Gn(a,[{key:"DYN",value:function(){return this.getToken(te.DYN,0);}},{key:"accept",value:function(n){return n instanceof Mn?n.visitDynamic(this):n.visitChildren(this);}}]),a;}(Rn.a.ParserRuleContext),ce=function(n){Wn(a,n);var e=Kn(a);function a(n,h,t){var r;return Hn(this,a),void 0===h&&(h=null),null==t&&(t=-1),Zn(Qn(r=e.call(this,h,t)),"transform",function(n){return void 0===n&&(n=null),null===n?this.getTypedRuleContexts(ye):this.getTypedRuleContext(ye,n);}),r.parser=n,r.ruleIndex=te.RULE_symbol,r;}return Gn(a,[{key:"SYM",value:function(){return this.getToken(te.SYM,0);}},{key:"accept",value:function(n){return n instanceof Mn?n.visitSymbol(this):n.visitChildren(this);}}]),a;}(Rn.a.ParserRuleContext),pe=function(n){Wn(a,n);var e=Kn(a);function a(n,h,t){var r;return Hn(this,a),void 0===h&&(h=null),null==t&&(t=-1),Zn(Qn(r=e.call(this,h,t)),"wexpr",function(n){return void 0===n&&(n=null),null===n?this.getTypedRuleContexts(je):this.getTypedRuleContext(je,n);}),Zn(Qn(r),"transform",function(n){return void 0===n&&(n=null),null===n?this.getTypedRuleContexts(ye):this.getTypedRuleContext(ye,n);}),Zn(Qn(r),"OR",function(n){return void 0===n&&(n=null),null===n?this.getTokens(te.OR):this.getToken(te.OR,n);}),r.parser=n,r.ruleIndex=te.RULE_choice,r;}return Gn(a,[{key:"LP",value:function(){return this.getToken(te.LP,0);}},{key:"RP",value:function(){return this.getToken(te.RP,0);}},{key:"accept",value:function(n){return n instanceof Mn?n.visitChoice(this):n.visitChildren(this);}}]),a;}(Rn.a.ParserRuleContext),je=function(n){Wn(a,n);var e=Kn(a);function a(n,h,t){var r;return Hn(this,a),void 0===h&&(h=null),null==t&&(t=-1),(r=e.call(this,h,t)).parser=n,r.ruleIndex=te.RULE_wexpr,r;}return Gn(a,[{key:"expr",value:function(){return this.getTypedRuleContext(se,0);}},{key:"weight",value:function(){return this.getTypedRuleContext(be,0);}},{key:"accept",value:function(n){return n instanceof Mn?n.visitWexpr(this):n.visitChildren(this);}}]),a;}(Rn.a.ParserRuleContext),ve=function(n){Wn(a,n);var e=Kn(a);function a(n,h,t){var r;return Hn(this,a),void 0===h&&(h=null),null==t&&(t=-1),Zn(Qn(r=e.call(this,h,t)),"WS",function(n){return void 0===n&&(n=null),null===n?this.getTokens(te.WS):this.getToken(te.WS,n);}),r.parser=n,r.ruleIndex=te.RULE_link,r;}return Gn(a,[{key:"LB",value:function(){return this.getToken(te.LB,0);}},{key:"expr",value:function(){return this.getTypedRuleContext(se,0);}},{key:"RB",value:function(){return this.getToken(te.RB,0);}},{key:"MDS",value:function(){return this.getToken(te.MDS,0);}},{key:"url",value:function(){return this.getTypedRuleContext(Se,0);}},{key:"MDE",value:function(){return this.getToken(te.MDE,0);}},{key:"accept",value:function(n){return n instanceof Mn?n.visitLink(this):n.visitChildren(this);}}]),a;}(Rn.a.ParserRuleContext),Se=function(n){Wn(a,n);var e=Kn(a);function a(n,h,t){var r;return Hn(this,a),void 0===h&&(h=null),null==t&&(t=-1),Zn(Qn(r=e.call(this,h,t)),"MDT",function(n){return void 0===n&&(n=null),null===n?this.getTokens(te.MDT):this.getToken(te.MDT,n);}),r.parser=n,r.ruleIndex=te.RULE_url,r;}return Gn(a,[{key:"accept",value:function(n){return n instanceof Mn?n.visitUrl(this):n.visitChildren(this);}}]),a;}(Rn.a.ParserRuleContext),me=function(n){Wn(a,n);var e=Kn(a);function a(n,h,t){var r;return Hn(this,a),void 0===h&&(h=null),null==t&&(t=-1),(r=e.call(this,h,t)).parser=n,r.ruleIndex=te.RULE_op,r;}return Gn(a,[{key:"OP",value:function(){return this.getToken(te.OP,0);}},{key:"LT",value:function(){return this.getToken(te.LT,0);}},{key:"GT",value:function(){return this.getToken(te.GT,0);}},{key:"EQ",value:function(){return this.getToken(te.EQ,0);}},{key:"accept",value:function(n){return n instanceof Mn?n.visitOp(this):n.visitChildren(this);}}]),a;}(Rn.a.ParserRuleContext),ge=function(n){Wn(a,n);var e=Kn(a);function a(n,h,t){var r;return Hn(this,a),void 0===h&&(h=null),null==t&&(t=-1),Zn(Qn(r=e.call(this,h,t)),"CHR",function(n){return void 0===n&&(n=null),null===n?this.getTokens(te.CHR):this.getToken(te.CHR,n);}),Zn(Qn(r),"DOT",function(n){return void 0===n&&(n=null),null===n?this.getTokens(te.DOT):this.getToken(te.DOT,n);}),Zn(Qn(r),"AST",function(n){return void 0===n&&(n=null),null===n?this.getTokens(te.AST):this.getToken(te.AST,n);}),Zn(Qn(r),"FS",function(n){return void 0===n&&(n=null),null===n?this.getTokens(te.FS):this.getToken(te.FS,n);}),Zn(Qn(r),"DOL",function(n){return void 0===n&&(n=null),null===n?this.getTokens(te.DOL):this.getToken(te.DOL,n);}),Zn(Qn(r),"WS",function(n){return void 0===n&&(n=null),null===n?this.getTokens(te.WS):this.getToken(te.WS,n);}),Zn(Qn(r),"GT",function(n){return void 0===n&&(n=null),null===n?this.getTokens(te.GT):this.getToken(te.GT,n);}),Zn(Qn(r),"LT",function(n){return void 0===n&&(n=null),null===n?this.getTokens(te.LT):this.getToken(te.LT,n);}),Zn(Qn(r),"COM",function(n){return void 0===n&&(n=null),null===n?this.getTokens(te.COM):this.getToken(te.COM,n);}),Zn(Qn(r),"ESC",function(n){return void 0===n&&(n=null),null===n?this.getTokens(te.ESC):this.getToken(te.ESC,n);}),Zn(Qn(r),"ENT",function(n){return void 0===n&&(n=null),null===n?this.getTokens(te.ENT):this.getToken(te.ENT,n);}),Zn(Qn(r),"INT",function(n){return void 0===n&&(n=null),null===n?this.getTokens(te.INT):this.getToken(te.INT,n);}),r.parser=n,r.ruleIndex=te.RULE_chars,r;}return Gn(a,[{key:"accept",value:function(n){return n instanceof Mn?n.visitChars(this):n.visitChildren(this);}}]),a;}(Rn.a.ParserRuleContext);function ke(n){return (ke="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n;}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n;})(n);}function fe(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function");}function we(n,e){for(var a=0;a<e.length;a++){var h=e[a];h.enumerable=h.enumerable||!1,h.configurable=!0,"value"in h&&(h.writable=!0),Object.defineProperty(n,h.key,h);}}function ze(n,e,a){return e&&we(n.prototype,e),a&&we(n,a),n;}function xe(n,e){return (xe=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n;})(n,e);}function Te(n){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return !1;if(Reflect.construct.sham)return !1;if("function"==typeof Proxy)return !0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0;}catch(n){return !1;}}();return function(){var a,h=Ae(n);if(e){var t=Ae(this).constructor;a=Reflect.construct(h,arguments,t);}else a=h.apply(this,arguments);return Ee(this,a);};}function Ee(n,e){return !e||"object"!==ke(e)&&"function"!=typeof e?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n;}(n):e;}function Ae(n){return (Ae=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n);})(n);}te.ScriptContext=re,te.LineContext=ie,te.ExprContext=se,te.CexprContext=le,te.CondContext=oe,te.WeightContext=be,te.AssignContext=de,te.TransformContext=ye,te.DynamicContext=ue,te.SymbolContext=ce,te.ChoiceContext=pe,te.WexprContext=je,te.LinkContext=ve,te.UrlContext=Se,te.OpContext=me,te.CharsContext=ge;var _e=function(n){!function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),e&&xe(n,e);}(a,n);var e=Te(a);function a(n,h){var t;return fe(this,a),(t=e.call(this)).choices={},t.parent=n,t.RiTa=h,t;}return ze(a,[{key:"init",value:function(n,e){return this.pendingSymbols=[],this.context=n||{},this.trace=e&&e.trace,this.silent=e&&e.silent,this;}},{key:"start",value:function(n){var e=n.getText(),a=/\n$/.test(e);this.trace&&console.log("start: '"+e.replace(/\r?\n/g,"\\n")+"'");var h=this.visitChildren(n);return a?h:h.replace(/\r?\n$/,"");}},{key:"visitLine",value:function(n){var e=this.visitChildren(n);return e.length?e+"\n":"";}},{key:"visitLink",value:function(n){return this.trace&&console.log("visitLink: '"+n.getText()+"' link="+n.url().getText()),"["+this.visit(n.expr())+"]&lpar;"+n.url().getText()+"&rpar;"+n.WS();}},{key:"visitChoiceNoObj",value:function(n){var e=[],h=this.RiTa.randomizer;n.wexpr().map(function(n,h){for(var t=n.weight(),r=t?parseInt(t.INT()):1,i=n.expr()||a.EC,s=0;s<r;s++)e.push(i);});var t=n.transform();this.trace&&console.log("visitChoice: '"+n.getText()+"' options=["+e.map(function(n){return n.getText();})+"] tfs="+Re(t));var r=h.random(e);this.trace&&console.log("  select: '"+r.getText()+"' ["+this.ruleName(r)+"]");var i=this.visit(r).trim();if(!t.length)return i;var s=this.applyTransforms(i,t),l=void 0!==s?s:"("+i+")"+Re(t);return this.trace&&console.log("resolveChoice: '"+l+"'"),l.trim();}},{key:"visitChoice",value:function(n){var e=n.getText().replace(qe,""),a=this.choices[e];a||(a=new Ce(this,n),this.choices[e]=a);var h=n.transform(),t=Re(h);this.trace&&console.log("visitChoice: '"+n.getText()+"' options=["+a.optionStr()+"] tfs="+t);var r=a.select(t);this.trace&&console.log("  select: '"+r.getText()+"' ["+this.ruleName(r)+"]");var i=this.visit(r).trim();if(!h.length)return i;var s=this.applyTransforms(i,h),l=void 0!==s?s:"("+i+")"+t;return this.trace&&console.log("resolveChoice: '"+l+"'"),l;}},{key:"visitSymbol",value:function(n){var e=n.transform(),h=n.getText(),t=n.SYM();if(!t){this.trace&&console.log("emptyTransform: "+n.getText());var r=this.applyTransforms("",e);return null!==r?r:h;}var i=De(t.getText());if(this.trace&&console.log("visitSymbol: $"+i+(this.context[a.DYN+i]?" [dynamic]":"")+" tfs="+Re(e)),this.pendingSymbols.includes(i))return this.trace&&console.log("resolveSymbol[0]: (pending) $"+i),h;var s=this.context[i];return s?this.parent.isParseable(s)?(this.pendingSymbols.push(i),h=a.LP+a.SYM+i+a.EQ+s+a.RP+Re(e),this.trace&&console.log("resolveSymbol[P]: $"+i+" -> "+h),h):e.length?(h=this.applyTransforms(s,e)||s+Re(e),this.trace&&console.log("resolveSymbol[3]: $"+i+" -> '"+h+"'"),h):(this.trace&&console.log("resolveSymbol[2]: $"+i+" -> '"+s+"'"),s):(s=this.context[a.DYN+i])?this.resolveDynamic(i,s,e):(this.trace&&console.log("resolveSymbol[1]: $"+i+" -> '"+h+"'"),h);}},{key:"visitAssign",value:function(n){var e,h=n.symbol()||n.dynamic(),t=n.expr(),r=h.getText();return r.startsWith(a.DYN)?(this.trace&&console.log("visitAssign: "+r+"="+Le(t)+" [*DYN*]"),e=t.getText()):(r=De(r),this.trace&&console.log("visitAssign: $"+r+"='"+Le(t)),e=this.visit(t)),this.context[r]=e,this.trace&&console.log("resolveAssign: context["+r+"] -> '"+e+"' "),0===n.start.column?"":e;}},{key:"visitExpr",value:function(n){return this.trace&&console.log("visitExpr: '"+n.getText()+"'"),this.visitChildren(n);}},{key:"visitChars",value:function(n){return this.trace&&console.log("visitChars: '"+n.getText()+"'"),n.getText();}},{key:"visitCexpr",value:function(n){var e=n.cond();this.trace&&console.log("visitCexpr:"+n.expr().getText()+"'","cond={"+e.map(function(n){return n.getText().replace(",","");})+"}");for(var h=0;h<e.length;h++){var t=De(e[h].symbol().getText()),r=_n.fromString(e[h].op().getText()),i=e[h].chars().getText(),s=this.context[t];if(!(!!s&&r.invoke(s,i)))return this.visitExpr(a.EC);}return this.visitExpr(n.expr());}},{key:"visitCond",value:function(n){return this.trace&&console.log("visitCond: '"+n.getText()+"'\t"+stack(n)),this.visitChildren(n);}},{key:"visitWeight",value:function(n){return this.trace&&console.log("visitWeight: '"+n.getText()+"'\t"+stack(n)),this.visitChildren(n);}},{key:"visitWexpr",value:function(n){return this.trace&&console.log("visitWexpr: '"+n.getText()+"'\t"+stack(n)),this.visitChildren(n);}},{key:"visitOp",value:function(n){return this.trace&&console.log("visitOp: '"+n.getText()+"'\t"+stack(n)),this.visitChildren(n);}},{key:"visitTerminal",value:function(n){var e=n.getText();return this.trace&&e!==a.EOF&&console.log("visitTerminal: '"+e.replace(/\r?\n/,"\\n")+"'"),null;}},{key:"visitTransform",value:function(n){throw Error("[ERROR] visitTransform: '"+n.getText()+"'");}},{key:"resolveDynamic",value:function(n,e,h){/^\([^()]*\)$/.test(e)||(e=a.LP+e+a.RP);var t=e+Re(h);return this.trace&&console.log("resolveDynamic[1]: $$"+n+" -> '"+t+"'"),t;}},{key:"applyTransforms",value:function(n,e){if(void 0!==n&&e&&e.length){var a=n;if("string"!=typeof n||(a=(h=n)&&h.length?h.replace(/\r/g,"").replace(/\\n/g,"").replace(/\n/g," "):"",!this.parent.isParseable(a))){for(var h,t=0;t<e.length;t++)a=this.applyTransform(a,e[t]);return a;}}}},{key:"applyTransform",value:function(n,e){var a,h=e.expr(),t=e.DIDENT().getText().replace(/^\./,""),r=n+e.getText();return this.trace&&console.log("applyTransform: '"+r),"function"==typeof this.context[t]?a=h?this.context[t](n,h.getText()):this.context[t](n):"function"==typeof this.parent.transforms[t]?a=this.parent.transforms[t](n):"function"==typeof n[t]?(a=n[t](),""===n&&""===a&&(this.silent||this.RiTa.SILENT||console.warn("[WARN] Unresolved transform[0]: "+r))):n.hasOwnProperty(t)?a=n[t]:(a=r,this.silent||this.RiTa.SILENT||console.warn("[WARN] Unresolved transform: "+a)),this.trace&&console.log("resolveTransform: '"+n+"' -> '"+(a||void 0)+"'"),a;}},{key:"stack",value:function(n){for(var e=this.parent.parser.getRuleNames(),a="    [";n;){var h=n.getRuleIndex();a+=h<0?"n/a":e[h]+" <- ",n=n.parent;}return a.replace(/ <- $/,"]");}},{key:"visitChildren",value:function(n){for(var e="",a=0;a<n.getChildCount();a++){var h=n.getChild(a);e+=this.visit(h)||"";}return e;}},{key:"ruleName",value:function(n){return n.hasOwnProperty("symbol")?n.symbol.type>-1?this.parent.lexer.symbolicNames[n.symbol.type]:"EOF":this.parent.parser.ruleNames[n.ruleIndex];}},{key:"printChildren",value:function(n){for(var e=0;e<n.getChildCount();e++){var a=n.getChild(e);console.log("  child["+e+"]: '"+a.getText()+"' ["+this.ruleName(a)+"]");}}}]),a;}(Mn),Ce=function(){function n(e,a){var h=this;fe(this,n),this.options=[],this.rand=e.RiTa.randomizer,a.wexpr().map(function(n,e){for(var a=n.weight(),t=a?parseInt(a.INT()):1,r=n.expr()||_e.EC,i=0;i<t;i++)h.options.push(r);});}return ze(n,[{key:"optionStr",value:function(){return this.options.map(function(n){return n.getText();});}},{key:"select",value:function(n){if(!this.options.length)throw Error("no options");var e;return e=n.includes("."+Ne[0])||n.includes("."+Ne[1])?this.selectNoRepeat():this.rand.random(this.options),this.last=e;}},{key:"selectNoRepeat",value:function(){var n;do{n=this.rand.random(this.options);}while(n===this.last);return n;}}]),n;}();function De(n){return n.length&&n[0]===_e.SYM?n.substring(1):n;}function Le(n){return n?n.getText():"";}function Re(n){return n&&n.length?n.reduce(function(n,e){return n+e.getText();},""):"";}_e.LP="(",_e.RP=")",_e.EQ="=",_e.OR="OR",_e.SYM="$",_e.DYN="$$",_e.DOT=".",_e.EOF="<EOF>",_e.ASSIGN="[]",_e.FUNC="()",_e.EC=new te.ExprContext();var Ne=["norepeat","nr"],qe=/\.[A-Za-z_0-9][A-Za-z_0-9]*(\(\))?/,Pe=_e;function Oe(n){return (Oe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n;}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n;})(n);}function Ie(n,e){for(var a=0;a<e.length;a++){var h=e[a];h.enumerable=h.enumerable||!1,h.configurable=!0,"value"in h&&(h.writable=!0),Object.defineProperty(n,h.key,h);}}function $e(n,e){return ($e=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n;})(n,e);}function Fe(n){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return !1;if(Reflect.construct.sham)return !1;if("function"==typeof Proxy)return !0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0;}catch(n){return !1;}}();return function(){var a,h=Ue(n);if(e){var t=Ue(this).constructor;a=Reflect.construct(h,arguments,t);}else a=h.apply(this,arguments);return Be(this,a);};}function Be(n,e){return !e||"object"!==Oe(e)&&"function"!=typeof e?Me(n):e;}function Me(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n;}function Ue(n){return (Ue=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n);})(n);}function He(n,e,a){return e in n?Object.defineProperty(n,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):n[e]=a,n;}var Ve,Ge=["\x03\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786","\u5964\x02#\xef\b\x01\b\x01\x04\x02\t\x02\x04\x03","\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06","\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v","\t\v\x04\f\t\f\x04\r\t\r\x04\x0e\t\x0e\x04\x0f\t\x0f","\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t\x12\x04\x13","\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16","\x04\x17\t\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1a","\t\x1a\x04\x1b\t\x1b\x04\x1c\t\x1c\x04\x1d\t\x1d",'\x04\x1e\t\x1e\x04\x1f\t\x1f\x04 \t \x04!\t!\x04"','\t"\x04#\t#\x03\x02\x03\x02\x03\x02\x03\x02\x07',"\x02M\n\x02\f\x02\x0e\x02P\v\x02\x03\x02\x03\x02","\x03\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03","\x03\x03\x07\x03[\n\x03\f\x03\x0e\x03^\v\x03\x03","\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03\x05\x03","\x05\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03","\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03\n\x03\n\x03","\v\x03\v\x03\f\x03\f\x03\r\x03\r\x03\x0e\x03","\x0e\x03\x0f\x03\x0f\x03\x10\x03\x10\x03\x11\x03","\x11\x03\x12\x03\x12\x03\x13\x03\x13\x03\x14\x03","\x14\x03\x14\x03\x15\x05\x15\x8a\n\x15\x03\x15","\x03\x15\x03\x16\x03\x16\x03\x16\x03\x17\x03\x17","\x03\x17\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18","\x03\x19\x07\x19\x9a\n\x19\f\x19\x0e\x19\x9d\v","\x19\x03\x19\x03\x19\x07\x19\xa1\n\x19\f\x19\x0e","\x19\xa4\v\x19\x03\x1a\x07\x1a\xa7\n\x1a\f\x1a","\x0e\x1a\xaa\v\x1a\x03\x1a\x03\x1a\x07\x1a\xae","\n\x1a\f\x1a\x0e\x1a\xb1\v\x1a\x03\x1b\x03\x1b","\x06\x1b\xb5\n\x1b\r\x1b\x0e\x1b\xb6\x03\x1b\x03","\x1b\x03\x1c\x07\x1c\xbc\n\x1c\f\x1c\x0e\x1c\xbf","\v\x1c\x03\x1c\x06\x1c\xc2\n\x1c\r\x1c\x0e\x1c","\xc3\x03\x1c\x07\x1c\xc7\n\x1c\f\x1c\x0e\x1c\xca","\v\x1c\x03\x1d\x03\x1d\x03\x1d\x03\x1e\x06\x1e","\xd0\n\x1e\r\x1e\x0e\x1e\xd1\x03\x1f\x03\x1f\x07","\x1f\xd6\n\x1f\f\x1f\x0e\x1f\xd9\v\x1f\x03 \x03"," \x03 \x03 \x03 \x03!\x03!\x07!\xe2\n!\f!\x0e!\xe5",'\v!\x03"\x06"\xe8\n"\r"\x0e"\xe9\x03#\x03#\x03',"#\x03#\x03N\x02$\x04\x03\x06\x04\b\x05\n\x06\f\x07","\x0e\b\x10\t\x12\n\x14\v\x16\f\x18\r\x1a\x0e\x1c",'\x0f\x1e\x10 \x11"\x12$\x13&\x14(\x15*\x16,\x17',".\x180\x192\x1a4\x1b6\x1c8\x1d:\x1e<\x1f> @!B\x02",'D"F#\x04\x02\x03\r\x05\x02\f\f\x0f\x0f\u202a\u202b\x04','\x02\v\v""\x03\x02*+\x06\x02%%2;C\\c|\x03\x02','2;\b\x02##&&,,>>@@``\n\x02\v\f""&&*,01>@]_}\x7f\x05\x02',"C\\aac|\x07\x02//2;C\\aac|\x06\x022;C\\aac|\x03\x02++\x02","\xfb\x02\x04\x03\x02\x02\x02\x02\x06\x03\x02\x02","\x02\x02\b\x03\x02\x02\x02\x02\n\x03\x02\x02\x02","\x02\f\x03\x02\x02\x02\x02\x0e\x03\x02\x02\x02","\x02\x10\x03\x02\x02\x02\x02\x12\x03\x02\x02\x02","\x02\x14\x03\x02\x02\x02\x02\x16\x03\x02\x02\x02","\x02\x18\x03\x02\x02\x02\x02\x1a\x03\x02\x02\x02","\x02\x1c\x03\x02\x02\x02\x02\x1e\x03\x02\x02\x02",'\x02 \x03\x02\x02\x02\x02"\x03\x02\x02\x02\x02',"$\x03\x02\x02\x02\x02&\x03\x02\x02\x02\x02(\x03","\x02\x02\x02\x02*\x03\x02\x02\x02\x02,\x03\x02","\x02\x02\x02.\x03\x02\x02\x02\x020\x03\x02\x02","\x02\x022\x03\x02\x02\x02\x024\x03\x02\x02\x02","\x026\x03\x02\x02\x02\x028\x03\x02\x02\x02\x02",":\x03\x02\x02\x02\x02<\x03\x02\x02\x02\x02>\x03","\x02\x02\x02\x02@\x03\x02\x02\x02\x03D\x03\x02","\x02\x02\x03F\x03\x02\x02\x02\x04H\x03\x02\x02","\x02\x06V\x03\x02\x02\x02\ba\x03\x02\x02\x02\nd","\x03\x02\x02\x02\fi\x03\x02\x02\x02\x0ek\x03\x02","\x02\x02\x10m\x03\x02\x02\x02\x12o\x03\x02\x02","\x02\x14q\x03\x02\x02\x02\x16s\x03\x02\x02\x02","\x18u\x03\x02\x02\x02\x1aw\x03\x02\x02\x02\x1c","y\x03\x02\x02\x02\x1e{\x03\x02\x02\x02 }\x03\x02",'\x02\x02"\x7f\x03\x02\x02\x02$\x81\x03\x02\x02',"\x02&\x83\x03\x02\x02\x02(\x85\x03\x02\x02\x02","*\x89\x03\x02\x02\x02,\x8d\x03\x02\x02\x02.\x90","\x03\x02\x02\x020\x95\x03\x02\x02\x022\x9b\x03","\x02\x02\x024\xa8\x03\x02\x02\x026\xb2\x03\x02","\x02\x028\xbd\x03\x02\x02\x02:\xcb\x03\x02\x02","\x02<\xcf\x03\x02\x02\x02>\xd3\x03\x02\x02\x02","@\xda\x03\x02\x02\x02B\xdf\x03\x02\x02\x02D\xe7","\x03\x02\x02\x02F\xeb\x03\x02\x02\x02HI\x071\x02","\x02IJ\x07,\x02\x02JN\x03\x02\x02\x02KM\v\x02","\x02\x02LK\x03\x02\x02\x02MP\x03\x02\x02\x02NO\x03","\x02\x02\x02NL\x03\x02\x02\x02OQ\x03\x02\x02\x02","PN\x03\x02\x02\x02QR\x07,\x02\x02RS\x071\x02\x02","ST\x03\x02\x02\x02TU\b\x02\x02\x02U\x05\x03\x02","\x02\x02VW\x071\x02\x02WX\x071\x02\x02X\\\x03\x02","\x02\x02Y[\n\x02\x02\x02ZY\x03\x02\x02\x02[^\x03","\x02\x02\x02\\Z\x03\x02\x02\x02\\]\x03\x02\x02\x02","]_\x03\x02\x02\x02^\\\x03\x02\x02\x02_`\b\x03\x02","\x02`\x07\x03\x02\x02\x02ab\x06\x04\x02\x02bc\x07","A\x02\x02c\t\x03\x02\x02\x02de\x06\x05\x03\x02e","f\x07*\x02\x02fg\x03\x02\x02\x02gh\b\x05\x03\x02","h\v\x03\x02\x02\x02ij\x07*\x02\x02j\r\x03\x02","\x02\x02kl\x07+\x02\x02l\x0f\x03\x02\x02\x02mn\x07","]\x02\x02n\x11\x03\x02\x02\x02op\x07_\x02\x02p\x13","\x03\x02\x02\x02qr\x07}\x02\x02r\x15\x03\x02\x02","\x02st\x07\x7f\x02\x02t\x17\x03\x02\x02\x02uv\x07","1\x02\x02v\x19\x03\x02\x02\x02wx\x07,\x02\x02x\x1b","\x03\x02\x02\x02yz\x07&\x02\x02z\x1d\x03\x02\x02","\x02{|\x07.\x02\x02|\x1f\x03\x02\x02\x02}~\x07@","\x02\x02~!\x03\x02\x02\x02\x7f\x80\x07>\x02\x02","\x80#\x03\x02\x02\x02\x81\x82\x070\x02\x02\x82","%\x03\x02\x02\x02\x83\x84\t\x03\x02\x02\x84'\x03","\x02\x02\x02\x85\x86\x07^\x02\x02\x86\x87\t\x04","\x02\x02\x87)\x03\x02\x02\x02\x88\x8a\x07\x0f","\x02\x02\x89\x88\x03\x02\x02\x02\x89\x8a\x03\x02","\x02\x02\x8a\x8b\x03\x02\x02\x02\x8b\x8c\x07\f","\x02\x02\x8c+\x03\x02\x02\x02\x8d\x8e\x070\x02","\x02\x8e\x8f\x05>\x1f\x02\x8f-\x03\x02\x02\x02","\x90\x91\x07&\x02\x02\x91\x92\x07&\x02\x02\x92","\x93\x03\x02\x02\x02\x93\x94\x05B!\x02\x94/\x03","\x02\x02\x02\x95\x96\x07&\x02\x02\x96\x97\x05","B!\x02\x971\x03\x02\x02\x02\x98\x9a\x05&\x13\x02","\x99\x98\x03\x02\x02\x02\x9a\x9d\x03\x02\x02\x02","\x9b\x99\x03\x02\x02\x02\x9b\x9c\x03\x02\x02\x02","\x9c\x9e\x03\x02\x02\x02\x9d\x9b\x03\x02\x02\x02","\x9e\xa2\x07~\x02\x02\x9f\xa1\x05&\x13\x02\xa0","\x9f\x03\x02\x02\x02\xa1\xa4\x03\x02\x02\x02\xa2","\xa0\x03\x02\x02\x02\xa2\xa3\x03\x02\x02\x02\xa3","3\x03\x02\x02\x02\xa4\xa2\x03\x02\x02\x02\xa5","\xa7\x05&\x13\x02\xa6\xa5\x03\x02\x02\x02\xa7","\xaa\x03\x02\x02\x02\xa8\xa6\x03\x02\x02\x02\xa8","\xa9\x03\x02\x02\x02\xa9\xab\x03\x02\x02\x02\xaa","\xa8\x03\x02\x02\x02\xab\xaf\x07?\x02\x02\xac","\xae\x05&\x13\x02\xad\xac\x03\x02\x02\x02\xae","\xb1\x03\x02\x02\x02\xaf\xad\x03\x02\x02\x02\xaf","\xb0\x03\x02\x02\x02\xb05\x03\x02\x02\x02\xb1","\xaf\x03\x02\x02\x02\xb2\xb4\x07(\x02\x02\xb3","\xb5\t\x05\x02\x02\xb4\xb3\x03\x02\x02\x02\xb5","\xb6\x03\x02\x02\x02\xb6\xb4\x03\x02\x02\x02\xb6","\xb7\x03\x02\x02\x02\xb7\xb8\x03\x02\x02\x02\xb8","\xb9\x07=\x02\x02\xb97\x03\x02\x02\x02\xba\xbc","\x05&\x13\x02\xbb\xba\x03\x02\x02\x02\xbc\xbf","\x03\x02\x02\x02\xbd\xbb\x03\x02\x02\x02\xbd\xbe","\x03\x02\x02\x02\xbe\xc1\x03\x02\x02\x02\xbf\xbd","\x03\x02\x02\x02\xc0\xc2\t\x06\x02\x02\xc1\xc0","\x03\x02\x02\x02\xc2\xc3\x03\x02\x02\x02\xc3\xc1","\x03\x02\x02\x02\xc3\xc4\x03\x02\x02\x02\xc4\xc8","\x03\x02\x02\x02\xc5\xc7\x05&\x13\x02\xc6\xc5","\x03\x02\x02\x02\xc7\xca\x03\x02\x02\x02\xc8\xc6","\x03\x02\x02\x02\xc8\xc9\x03\x02\x02\x02\xc99","\x03\x02\x02\x02\xca\xc8\x03\x02\x02\x02\xcb\xcc","\t\x07\x02\x02\xcc\xcd\x07?\x02\x02\xcd;\x03\x02","\x02\x02\xce\xd0\n\b\x02\x02\xcf\xce\x03\x02\x02","\x02\xd0\xd1\x03\x02\x02\x02\xd1\xcf\x03\x02\x02","\x02\xd1\xd2\x03\x02\x02\x02\xd2=\x03\x02\x02","\x02\xd3\xd7\t\t\x02\x02\xd4\xd6\t\n\x02\x02\xd5","\xd4\x03\x02\x02\x02\xd6\xd9\x03\x02\x02\x02\xd7","\xd5\x03\x02\x02\x02\xd7\xd8\x03\x02\x02\x02\xd8","?\x03\x02\x02\x02\xd9\xd7\x03\x02\x02\x02\xda","\xdb\x07^\x02\x02\xdb\xdc\x05*\x15\x02\xdc\xdd","\x03\x02\x02\x02\xdd\xde\b \x02\x02\xdeA\x03\x02","\x02\x02\xdf\xe3\t\v\x02\x02\xe0\xe2\t\n\x02\x02","\xe1\xe0\x03\x02\x02\x02\xe2\xe5\x03\x02\x02\x02","\xe3\xe1\x03\x02\x02\x02\xe3\xe4\x03\x02\x02\x02","\xe4C\x03\x02\x02\x02\xe5\xe3\x03\x02\x02\x02","\xe6\xe8\n\f\x02\x02\xe7\xe6\x03\x02\x02\x02\xe8","\xe9\x03\x02\x02\x02\xe9\xe7\x03\x02\x02\x02\xe9","\xea\x03\x02\x02\x02\xeaE\x03\x02\x02\x02\xeb","\xec\x07+\x02\x02\xec\xed\x03\x02\x02\x02\xed","\xee\b#\x04\x02\xeeG\x03\x02\x02\x02\x13\x02\x03","N\\\x89\x9b\xa2\xa8\xaf\xb6\xbd\xc3\xc8\xd1\xd7","\xe3\xe9\x05\x02\x03\x02\x07\x03\x02\x06\x02\x02"].join(""),We=new Rn.a.atn.ATNDeserializer().deserialize(Ge),Ye=We.decisionToState.map(function(n,e){return new Rn.a.dfa.DFA(n,e);}),Ke=function(n){!function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),e&&$e(n,e);}(r,n);var e,a,t=Fe(r);function r(n){var e;return function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function");}(this,r),(e=t.call(this,n))._interp=new Rn.a.atn.LexerATNSimulator(Me(e),We,Ye,new Rn.a.PredictionContextCache()),e;}return e=r,(a=[{key:"atn",get:function(){return We;}}])&&Ie(e.prototype,a),r;}(Rn.a.Lexer);function Je(n){return (Je="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n;}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n;})(n);}function Qe(n,e,a){return e in n?Object.defineProperty(n,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):n[e]=a,n;}function Xe(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function");}function Ze(n,e){for(var a=0;a<e.length;a++){var h=e[a];h.enumerable=h.enumerable||!1,h.configurable=!0,"value"in h&&(h.writable=!0),Object.defineProperty(n,h.key,h);}}function na(n,e,a){return e&&Ze(n.prototype,e),a&&Ze(n,a),n;}function ea(n,e){return (ea=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n;})(n,e);}function aa(n){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return !1;if(Reflect.construct.sham)return !1;if("function"==typeof Proxy)return !0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0;}catch(n){return !1;}}();return function(){var a,h=ta(n);if(e){var t=ta(this).constructor;a=Reflect.construct(h,arguments,t);}else a=h.apply(this,arguments);return ha(this,a);};}function ha(n,e){return !e||"object"!==Je(e)&&"function"!=typeof e?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n;}(n):e;}function ta(n){return (ta=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n);})(n);}He(Ke,"grammarFileName","RiScriptLexer.g4"),He(Ke,"channelNames",["DEFAULT_TOKEN_CHANNEL","HIDDEN"]),He(Ke,"modeNames",["DEFAULT_MODE","MD"]),He(Ke,"literalNames",[null,null,null,null,null,"'('",null,"'['","']'","'{'","'}'","'/'","'*'","'$'","','","'>'","'<'","'.'"]),He(Ke,"symbolicNames",[null,"LCOMM","BCOMM","Q","MDS","LP","RP","LB","RB","LCB","RCB","FS","AST","DOL","COM","GT","LT","DOT","WS","ESC","NL","DIDENT","DYN","SYM","OR","EQ","ENT","INT","OP","CHR","IDENT","CONT","MDT","MDE"]),He(Ke,"ruleNames",["LCOMM","BCOMM","Q","MDS","LP","RP","LB","RB","LCB","RCB","FS","AST","DOL","COM","GT","LT","DOT","WS","ESC","NL","DIDENT","DYN","SYM","OR","EQ","ENT","INT","OP","CHR","IDENT","CONT","NIDENT","MDT","MDE"]),Ke.EOF=Rn.a.Token.EOF,Ke.LCOMM=1,Ke.BCOMM=2,Ke.Q=3,Ke.MDS=4,Ke.LP=5,Ke.RP=6,Ke.LB=7,Ke.RB=8,Ke.LCB=9,Ke.RCB=10,Ke.FS=11,Ke.AST=12,Ke.DOL=13,Ke.COM=14,Ke.GT=15,Ke.LT=16,Ke.DOT=17,Ke.WS=18,Ke.ESC=19,Ke.NL=20,Ke.DIDENT=21,Ke.DYN=22,Ke.SYM=23,Ke.OR=24,Ke.EQ=25,Ke.ENT=26,Ke.INT=27,Ke.OP=28,Ke.CHR=29,Ke.IDENT=30,Ke.CONT=31,Ke.MDT=32,Ke.MDE=33,Ke.MD=1,Ke.prototype.sempred=function(n,e,a){switch(e){case 2:return this.Q_sempred(n,a);case 3:return this.MDS_sempred(n,a);default:throw "No registered predicate for:"+e;}},Ke.prototype.Q_sempred=function(n,e){switch(e){case 0:return this._input.LA(-1)=="}".charCodeAt(0);default:throw "No predicate with index:"+e;}},Ke.prototype.MDS_sempred=function(n,e){switch(e){case 1:return this._input.LA(-1)=="]".charCodeAt(0);default:throw "No predicate with index:"+e;}};var ra=function(n){!function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),e&&ea(n,e);}(a,n);var e=aa(a);function a(){return Xe(this,a),e.call(this);}return na(a,[{key:"syntaxError",value:function(n,e,a,h,t,r){throw Error("".concat(e," line ").concat(a,", col ").concat(h,": ").concat(t));}}]),a;}(Rn.a.error.ErrorListener),ia=function(){function n(){Xe(this,n),this.visitor=new Pe(this,sa()),this.transforms=n.transforms;}return na(n,[{key:"evaluate",value:function(e,a){var h=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};a=a||{};for(var t,r=h.singlePass,i=e,s=h.trace,l=0;i!==t&&l<n.MAX_TRIES&&(t=i,s&&console.log("-".repeat(20)+" Pass#"+l+" "+"-".repeat(20)),i=this.lexParseVisit(i,a,h),s&&this.passInfo(a,t,i,l),!r&&this.isParseable(i));l++);return h.silent||n.parent.SILENT||!pa.test(i)||console.warn('[WARN] Unresolved symbol(s) in "'+i+'" '),this.resolveEntities(i);}},{key:"passInfo",value:function(e,a,h,t){if(console.log("\nPass#"+t+":  "+a.replace(/\r?\n/g,"\\n")+"\nResult:  "+h+"\nContext: "+JSON.stringify(e)+"\n"),t>=n.MAX_TRIES-1)throw Error('Unable to resolve:\n"'+a+'"\nafter '+n.MAX_TRIES+" tries. An infinite loop?");}},{key:"lex",value:function(n,e){var a=this;this.lexer=new Ke(new Rn.a.InputStream(n)),this.lexer.removeErrorListeners(),this.lexer.addErrorListener(new ra());var h,t=e&&e.silent,r=e&&e.traceLex;try{h=new Rn.a.CommonTokenStream(this.lexer),r&&(h.fill(),h.tokens.forEach(function(n){return console.log(a.tokenToString(n));}));}catch(e){throw t||console.error("LEXER: "+n+"\n"+e.message+"\n"),e;}return h;}},{key:"tokenToString",value:function(n){var e="<no text>";n.text&&n.text.length&&(e=n.text.replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/\t/g,"\\t"));var a=n.type>-1?Ke.symbolicNames[n.type]:"EOF";return "[ "+n.line+"."+n.column+": '"+e+"' -> "+a+" ]";}},{key:"parse",value:function(n,e,a){this.parser=new te(n),this.parser.removeErrorListeners(),this.parser.addErrorListener(new ra());var h,t=a&&a.silent,r=a&&a.trace;try{h=this.parser.script();}catch(n){throw t||console.error("PARSER: '"+e+"'\n"+n.message+"\n"),n;}return r&&console.log("\n"+h.toStringTree(this.parser.ruleNames)+"\n"),h;}},{key:"lexParse",value:function(n,e){var a=this.lex(n,e);return this.parse(a,n,e);}},{key:"lexParseVisitNoPre",value:function(n,e,a){if(!n||!n.length)return "";var h=this.lexParse(n,a);return this.visitor.init(e,a).start(h);}},{key:"lexParseVisit",value:function(n,e,a){var h=this.preparse(n,a),t=h.pre,r=h.parse,i=h.post;a.trace&&(t.length||i.length)&&console.log('preParse("'+t+'", "'+i+'");');var s="";if(r.length){var l=this.lexParse(r,a);s=this.visitor.init(e,a).start(l);}var o=t.length&&s.length?t+"\n"+s:t+s;return o.length&&i.length?o+"\n"+i:o+i;}},{key:"resolveEntities",value:function(n){return void 0===n?"":this.unescape(Object(Nn.decode)(n).replace(ua," "));}},{key:"unescape",value:function(n){return n.replace(/\\\(/g,"(").replace(/\\\)/g,")");}},{key:"isParseable",value:function(n){return ca.test(n);}},{key:"preparse",value:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a={pre:"",parse:n||"",post:""};if(!n.length)return a;if(!e.nopre){var h=(n=n.replace(ja,"")).split(/\r?\n/g),t=[],r=[],i=[],s=0,l=function(n){return n.startsWith("{")||va.test(n);};h.forEach(function(n){0===s?l(n)?(t.push(n),s=1):r.push(n):1===s?l(n)?t.push(n):(i.push(n),s=2):2===s&&(l(n)?(t.push.apply(t,i.concat([n])),i.length=0,s=1):i.push(n));}),a.pre=r.length?r.join("\n"):"",a.parse=t.length?t.join("\n"):"",a.post=i.length?i.join("\n"):"";}return a;}}],[{key:"eval",value:function(){var e;return (e=new n()).evaluate.apply(e,arguments);}},{key:"addTransform",value:function(e,a){return n.transforms[e]=a,n.transforms;}},{key:"articlize",value:function(n){if(!n||!n.length)return "";var e=n.split(/\s+/)[0],a=sa().phones(e,{silent:!0});return (a&&a.length&&ya.test(a[0])?"an ":"a ")+n;}},{key:"identity",value:function(n){return n;}}]),n;}();function sa(){return ia.parent;}function la(n){return sa().capitalize(n);}function oa(n){return n?n.toUpperCase():"";}function ba(n){return "&#8220;"+(n||"")+"&#8221;";}function da(n){return sa().pluralize(n);}ia.MAX_TRIES=99,ia.transforms=(Qe(Ve={quotify:ba,pluralize:da,capitalize:la,articlize:ia.articlize,uppercase:oa},"pluralize",da),Qe(Ve,"norepeat",ia.identity),Qe(Ve,"art",ia.articlize),Qe(Ve,"nr",ia.identity),Qe(Ve,"cap",la),Qe(Ve,"ucf",la),Qe(Ve,"uc",oa),Qe(Ve,"qq",ba),Qe(Ve,"s",da),Ve);var ya=/[aeiou]/,ua=/[\u00a0\u2000-\u200b\u2028-\u2029\u3000]+/g,ca=/([(){}|]|(\${1,2}\w+))/,pa=/\${1,2}\w+/,ja=/\\\n/,va=/([\/()\$|\[\]])|\.\S/,Sa=ia;function ma(n,e){return function(n){if(Array.isArray(n))return n;}(n)||function(n,e){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(n)))return;var a=[],h=!0,t=!1,r=void 0;try{for(var i,s=n[Symbol.iterator]();!(h=(i=s.next()).done)&&(a.push(i.value),!e||a.length!==e);h=!0);}catch(n){t=!0,r=n;}finally{try{h||null==s.return||s.return();}finally{if(t)throw r;}}return a;}(n,e)||function(n,e){if(!n)return;if("string"==typeof n)return ga(n,e);var a=Object.prototype.toString.call(n).slice(8,-1);"Object"===a&&n.constructor&&(a=n.constructor.name);if("Map"===a||"Set"===a)return Array.from(n);if("Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a))return ga(n,e);}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}();}function ga(n,e){(null==e||e>n.length)&&(e=n.length);for(var a=0,h=new Array(e);a<e;a++)h[a]=n[a];return h;}function ka(n,e){for(var a=0;a<e.length;a++){var h=e[a];h.enumerable=h.enumerable||!1,h.configurable=!0,"value"in h&&(h.writable=!0),Object.defineProperty(n,h.key,h);}}var fa=function(){function n(e,a){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function");}(this,n),this.rules={},this.context=a||{},this.compiler=new n.parent.RiScript(),e&&this.addRules(e);}var e,a,h;return e=n,h=[{key:"fromJSON",value:function(e,a){var h=new n(0,a);return za(h,e,!0),h;}}],(a=[{key:"toJSON",value:function(){for(var n={},e=0,a=Object.entries(this.rules);e<a.length;e++){var h=ma(a[e],2),t=h[0],r=h[1];t.startsWith(Ea)||(t=Ta+t),n[t]=r;}return JSON.stringify(n,null,2);}},{key:"addRules",value:function(n){if(!n)throw Error("No rules found");return "string"==typeof n?za(this,n):xa(this,n);}},{key:"addRule",value:function(n,e){var a=wa(n);if(!e)throw Error("<undefined> rule");return Array.isArray(e)&&(e=function(n){for(var e="(",a=0;a<n.length;a++)e+=n[a].includes(" ")?"("+n[a]+")":n[a],a<n.length-1&&(e+=" | ");return e+")";}(e)),e.includes("|")&&!_a.test(e)&&(e="("+e+")"),this.rules[a]=e,this;}},{key:"expand",value:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"start",e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};arguments.length&&"string"!=typeof n&&(e=n,n="start");var a=Dn()(this.context,this.rules);if(n=wa(n),!a.hasOwnProperty(n)){if(!n.startsWith(Ea))throw Error("Bad rule (post-validation): "+n);if(n=n.substring(2),!a.hasOwnProperty(n))throw Error("Rule "+n+" not found");}return this.compiler.evaluate(a[n],a,e);}},{key:"toString",value:function(n){var e=JSON.stringify(this.rules,null,2);return n?e.replace(/\n/g,n):e;}},{key:"removeRule",value:function(n){return n&&n.length&&(n=wa(n),delete this.rules[n]),this;}},{key:"addTransform",value:function(){return Sa.addTransform.apply(Sa,arguments),this;}},{key:"removeTransform",value:function(n){return Sa.addTransform(n,null),this;}},{key:"getTransforms",value:function(){return Sa.transforms;}}])&&ka(e.prototype,a),h&&ka(e,h),n;}();function wa(n){if(!n||!n.length)throw Error("expected [string] name");if(n.startsWith(Ea))throw n=n.substring(2),Error("Grammar rules are dynamic by default; if you need a non-dynamic rule, use '$"+n+"', otherwise just use '"+n+"'.");return Aa.test(n)?n=n.substring(1):n.startsWith(Ea)||(n=Ea+n),n;}function za(n,e,a){if("string"!=typeof e)throw Error("expected JSON string");var h;try{h=JSON.parse(e);}catch(n){throw Error("RiGrammar appears to be invalid JSON, please check it at http://jsonlint.com/\n"+e);}xa(n,h,a);}function xa(n,e,a){Object.keys(e).forEach(function(h){n.addRule(a&&h.startsWith(Ea)?h.substring(2):h,e[h]);});}var Ta="$",Ea="$$",Aa=/^\$[^$]/,_a=/^\([^()]*\)$/,Ca=fa;function Da(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function");}function La(n,e){for(var a=0;a<e.length;a++){var h=e[a];h.enumerable=h.enumerable||!1,h.configurable=!0,"value"in h&&(h.writable=!0),Object.defineProperty(n,h.key,h);}}function Ra(n,e,a){return e&&La(n.prototype,e),a&&La(n,a),n;}var Na=function(){function n(e){var a=this;Da(this,n),this.RiTa=e,this.cache={},this.letterIndex={},this.fval_buff=[],this.numStates=0,this.stateMachine=null,this.warnedForNoLTS=!1,this.tokenizer=new qa(),n.RULES.forEach(function(n){return a.parseAndAdd(n);});}return Ra(n,[{key:"createState",value:function(n){if("S"===n){var e=parseInt(this.tokenizer.nextToken()),a=this.tokenizer.nextToken(),h=parseInt(this.tokenizer.nextToken()),t=parseInt(this.tokenizer.nextToken());return new Pa(e,a.charAt(0),h,t);}if("P"===n)return new Oa(this.tokenizer.nextToken());throw Error("Unexpected type: "+n);}},{key:"parseAndAdd",value:function(n){this.tokenizer.tokenize(n," ");var e=this.tokenizer.nextToken();if("S"===e||"P"===e)this.stateMachine[this.numStates++]=this.createState(e,this.tokenizer);else if("I"===e){var a=parseInt(this.tokenizer.nextToken());if(a!=this.numStates)throw Error("Bad index in file.");this.letterIndex[this.tokenizer.nextToken()]=a;}else "T"==e&&(this.stateMachine=[],this.stateMachineSize=parseInt(this.tokenizer.nextToken()));}},{key:"buildPhones",value:function(e,a){var h=this.RiTa;if(e&&e.length&&!h.isPunct(e)){var t,r,i,s,o,b,d=[],y=h.SILENT||h.SILENCE_LTS||a&&a.silent;if(!n.RULES)return this.warnedForNoLTS||(this.warnedForNoLTS=!0,y||console.warn("[WARN] No LTS-rules: for words not in lexicon, use a full version of RiTa")),null;if(e=e.toLowerCase(),l.isNum(e)){e=e.length>1?e.split(""):[e];for(var u=0;u<e.length;u++)t=parseInt(e[u]),d.push(l.Phones.digits[t]);return d;}r=("000#"+e.trim()+"#000").split("");for(var c=0;c<e.length;c++){for(var p=0;p<4;p++)this.fval_buff[p]=r[c+p],this.fval_buff[p+4]=r[p+c+1+4];if("'"!=(b=e[c])){if(s=this.letterIndex[b],isNaN(parseFloat(s))||!isFinite(s))return y||console.warn("Unable to generate LTS for '"+e+"', no index for '"+b+"', isDigit="+l.isNum(b)+", isPunct="+h.isPunct(b)),null;for(o=parseInt(s),i=this.getState(o);!(i instanceof Oa);)o=i.getNextState(this.fval_buff),i=this.getState(o);i.append(d);}}return d;}}},{key:"getState",value:function(n){if("number"==typeof n){return " "===this.stateMachine[n]?this.getState(this.stateMachine[n]):this.stateMachine[n];}return this.tokenizer.tokenize(n),this.getState(this.tokenizer.nextToken(),this.tokenizer);}}]),n;}(),qa=function(){function n(){Da(this,n);}return Ra(n,[{key:"tokenize",value:function(n,e){this.idx=0,this.tokens=n.split(e||" ");}},{key:"nextToken",value:function(){return this.idx<this.tokens.length?this.tokens[this.idx++]:null;}}]),n;}(),Pa=function(){function n(e,a,h,t){Da(this,n),this.c=a,this.index=e,this.qtrue=h,this.qfalse=t;}return Ra(n,[{key:"getNextState",value:function(n){return n[this.index]==this.c?this.qtrue:this.qfalse;}}]),n;}();Pa.TYPE=1;var Oa=function(){function n(e){if(Da(this,n),this.phoneList=[],"epsilon"!==e)if(Array.isArray(e))this.phoneList=e;else {var a=e.indexOf("-");-1!=a?(this.phoneList[0]=e.substring(0,a),this.phoneList[1]=e.substring(a+1)):this.phoneList[0]=e;}}return Ra(n,[{key:"append",value:function(n){if(this.phoneList)for(var e=0;e<this.phoneList.length;e++)n.push(this.phoneList[e]);}}]),n;}();Oa.TYPE=2,Na.RULES=["T 13100","I 0 a","S 4 r 2 1","S 6 0 4 3","S 3 e 6 5","S 4 u 8 7","S 4 y 10 9","S 3 w 12 11","S 5 t 14 13","S 3 e 16 15","S 3 e 18 17","S 4 # 20 19","S 3 w 22 21","S 1 0 24 23","S 5 e 26 25","S 5 n 28 27","S 2 h 29 28","S 5 e 31 30","S 2 r 33 32","S 5 e 35 34","S 5 t 28 36","S 3 e 38 37","S 3 e 40 39","S 2 c 42 41","S 2 a 43 42","S 5 y 45 44","S 5 r 47 46","S 5 d 49 48","P eh1","S 5 m 51 50","P epsilon","P aa1","S 4 i 53 52","S 4 g 55 54","S 4 n 57 56","S 1 # 59 58","S 5 g 61 60","S 1 0 63 62","S 1 u 29 64","S 3 o 28 65","S 4 u 67 66","S 3 a 29 68","S 2 l 68 69","S 1 # 42 70","P ey1","S 1 l 72 71","S 5 i 74 73","S 3 n 26 75","S 5 a 77 76","S 2 # 79 78","S 5 i 26 80","S 1 0 82 81","S 2 w 28 83","S 2 r 29 84","S 5 i 86 85","S 5 r 88 87","S 6 # 90 89","S 1 0 92 91","S 4 b 94 93","S 1 # 96 95","S 4 k 98 97","S 5 t 100 99","S 1 0 102 101","S 2 # 104 103","S 1 # 63 105","P aw1","S 6 e 107 106","S 4 w 109 108","S 4 d 28 110","S 1 o 111 107","P ah","S 2 y 68 112","S 2 p 42 113","S 1 t 72 42","P ey","S 5 e 115 114","S 6 # 29 116","S 2 c 26 117","S 5 i 119 118","S 3 p 26 120","S 6 o 100 28","S 3 n 26 121","S 1 0 82 122","S 1 # 82 123","P ao1","S 1 s 125 124","S 1 # 28 126","S 4 y 128 127","S 6 o 130 129","S 5 n 132 131","S 3 z 133 26","S 3 w 135 134","S 4 t 137 136","S 1 # 139 138","S 3 m 100 140","S 1 i 142 141","S 1 # 28 68","S 1 c 28 143","S 5 d 100 144","S 4 t 146 145","S 1 b 42 28","S 6 n 148 147","P ae1","S 1 # 150 149","S 3 c 152 151","S 2 n 154 153","S 3 l 100 82","P aw","S 1 o 111 155","P ow1","S 1 # 157 156","S 3 l 82 158","S 4 n 160 159","P ow","S 1 c 28 68","S 1 l 162 161","S 5 r 164 163","S 6 l 166 165","S 6 z 28 167","S 2 e 26 168","S 5 e 170 169","S 6 s 172 171","S 6 # 29 173","S 3 h 175 174","S 5 # 28 176","S 1 r 82 28","S 5 l 178 177","S 6 # 179 126","P ih1","S 2 # 181 180","S 5 a 183 182","S 6 # 29 184","S 4 t 186 185","S 5 l 188 187","S 3 t 190 189","P ay","S 6 d 192 191","S 4 t 194 193","S 3 i 196 195","S 3 u 198 197","S 3 i 28 199","S 2 s 42 200","S 6 r 42 201","S 1 t 203 202","S 2 n 42 204","S 1 r 68 205","S 2 d 100 28","S 5 o 28 206","S 1 c 42 207","S 5 e 28 208","S 4 g 42 28","S 5 l 210 209","S 3 h 82 211","S 2 # 213 212","S 6 a 82 214","S 1 # 82 215","P ao","S 2 b 217 216","S 4 n 219 218","S 3 a 29 220","S 1 e 154 82","S 2 n 222 221","S 1 c 28 223","S 3 d 42 224","S 3 d 225 72","S 5 t 227 226","S 2 q 82 228","S 6 t 28 229","S 2 c 28 230","S 6 o 232 231","S 3 u 26 233","S 5 o 235 234","S 6 e 28 236","S 6 # 29 237","S 2 # 238 28","S 6 s 240 239","S 6 y 26 241","S 6 e 100 242","S 2 e 28 243","S 2 b 245 244","S 2 p 28 246","S 2 h 247 28","S 1 # 249 248","S 3 w 251 250","S 5 o 253 252","S 6 s 230 254","S 6 z 256 255","S 4 n 100 257","S 1 0 100 258","S 6 # 260 259","S 3 m 261 42","S 1 a 263 262","S 2 s 42 264","S 6 s 266 265","S 4 t 268 267","S 4 l 68 42","S 2 t 29 82","S 3 o 28 269","S 4 l 29 100","S 3 t 42 270","S 2 t 42 271","S 6 n 68 272","S 3 r 42 273","S 6 # 42 274","S 1 # 28 275","S 4 t 276 28","S 4 s 28 277","S 2 c 68 278","S 4 n 68 279","S 1 t 28 280","S 5 s 68 281","S 6 # 283 282","S 3 n 107 284","S 2 c 82 285","S 5 t 82 286","S 5 n 82 287","S 5 s 29 288","S 2 e 154 289","S 1 e 111 107","S 5 c 107 290","S 4 l 292 291","S 3 m 68 293","S 4 u 63 294","S 1 a 28 295","S 1 i 68 28","S 1 # 28 296","S 2 t 42 297","S 2 i 72 42","S 3 o 28 298","S 2 q 82 299","S 1 r 26 300","S 1 c 302 301","P aa","S 6 a 26 303","S 3 s 29 304","S 3 r 26 305","S 5 y 307 306","S 6 l 309 308","S 2 # 311 310","S 3 v 313 312","S 3 p 28 26","S 6 b 100 314","S 3 h 28 29","S 6 i 316 315","S 6 o 26 100","S 1 # 82 317","S 5 c 28 318","S 5 d 126 28","S 1 # 319 28","P ih","S 5 o 321 320","S 3 o 323 322","S 4 w 325 324","S 4 l 327 326","S 5 r 328 42","S 2 # 42 329","S 2 a 331 330","S 6 n 333 332","S 1 0 100 68","S 1 0 335 334","S 3 n 337 336","S 5 o 28 338","S 5 a 29 42","S 2 e 72 42","S 6 g 29 339","S 3 r 42 340","S 6 e 42 341","S 4 k 343 342","S 4 t 345 344","S 3 o 28 346","S 3 o 28 42","S 2 a 348 347","S 2 i 350 349","S 1 a 42 68","S 6 r 352 351","S 3 l 100 68","S 2 # 354 353","S 2 m 42 355","S 5 r 100 68","S 4 l 28 68","S 2 g 68 356","S 4 l 28 357","S 5 h 28 358","S 4 p 68 359","S 5 s 361 360","S 5 d 107 362","S 3 s 82 363","S 6 e 365 364","S 5 d 82 366","S 5 r 368 367","S 5 l 29 82","S 2 o 154 369","S 6 o 107 370","S 4 s 372 371","S 3 h 373 68","S 3 i 68 374","S 4 i 28 375","S 4 k 28 376","S 1 o 68 377","S 1 c 42 378","S 1 # 380 379","S 1 # 29 381","S 1 e 383 382","S 6 # 385 384","S 3 s 29 230","S 6 c 387 386","S 3 c 26 388","S 2 i 26 389","S 5 u 391 390","S 6 # 26 392","S 6 # 29 393","S 3 p 28 394","S 6 n 28 230","S 3 m 230 395","S 6 t 26 396","S 6 e 28 26","S 2 # 398 397","S 3 m 400 399","S 3 m 26 401","S 2 h 82 402","S 5 s 404 403","S 6 e 28 126","S 5 l 406 405","S 6 # 29 407","S 4 w 409 408","S 2 j 29 28","S 4 l 411 410","S 5 a 413 412","S 4 g 100 414","S 6 o 288 82","S 6 e 26 42","S 6 # 42 415","S 3 r 42 416","S 6 # 29 68","S 6 a 418 417","S 4 t 420 419","S 2 t 100 421","S 4 d 42 422","S 3 u 42 423","S 2 i 42 424","S 6 a 426 425","S 2 a 26 427","S 3 g 68 42","S 1 u 68 428","S 4 y 42 429","S 3 m 42 430","S 4 w 82 431","S 3 u 42 432","S 4 w 82 433","S 1 0 42 434","S 1 l 29 435","S 3 n 437 436","S 3 d 42 438","S 6 o 42 439","S 2 l 247 440","S 6 n 68 42","S 6 n 442 441","S 1 a 444 443","S 5 s 68 28","S 5 t 445 28","S 1 h 28 68","S 4 f 68 446","S 2 s 28 447","S 6 t 82 448","S 3 n 82 449","S 6 t 450 82","S 5 s 452 451","S 5 b 63 453","S 6 t 455 454","S 5 l 457 456","S 3 l 82 458","S 1 0 460 459","S 1 # 111 107","S 4 u 105 461","S 3 a 230 462","S 2 t 463 68","S 1 n 465 464","S 4 o 28 466","S 4 t 28 467","S 2 r 28 468","S 1 e 42 469","S 6 e 471 470","S 5 a 473 472","S 3 p 29 474","S 2 c 476 475","S 2 r 100 26","S 3 v 29 477","S 3 c 26 478","S 1 i 26 479","S 2 a 28 100","S 3 l 29 26","S 2 s 26 480","S 3 h 482 481","S 6 s 230 28","S 3 m 100 26","S 6 s 230 483","S 3 c 26 484","S 6 l 230 485","S 6 b 100 486","S 6 m 26 28","S 3 n 230 487","S 3 g 100 488","S 6 o 230 29","S 3 p 29 100","S 5 t 28 29","S 5 r 28 489","S 6 # 126 28","S 1 0 491 490","S 4 b 493 492","S 4 t 495 494","S 4 l 497 496","S 5 a 68 498","S 5 a 500 499","S 5 a 502 501","S 6 r 68 503","S 3 k 29 68","S 5 t 505 504","S 1 # 42 72","S 3 p 42 28","S 6 v 507 506","S 2 # 509 508","S 3 o 28 510","S 1 0 512 511","S 3 n 29 513","S 4 v 42 514","S 1 i 515 42","S 1 e 100 516","S 5 s 518 517","S 3 m 42 519","S 3 m 42 520","S 1 0 42 521","S 2 # 523 522","S 2 # 525 524","S 4 l 527 526","S 1 t 529 528","S 4 x 100 530","S 2 i 532 531","S 4 l 29 533","S 3 r 535 534","S 2 e 42 536","S 1 c 42 537","S 2 s 539 538","S 3 l 72 540","S 3 h 100 541","S 3 h 42 100","S 4 d 28 542","S 4 t 68 28","S 1 b 28 100","S 5 l 100 543","S 6 h 105 544","S 3 h 63 545","S 3 b 63 546","S 3 f 82 107","S 5 t 547 82","S 2 k 63 82","S 2 k 63 548","S 5 r 82 549","S 5 s 82 498","S 3 g 551 550","S 6 i 82 552","S 6 e 105 82","S 2 c 82 553","S 6 u 82 554","S 4 i 556 555","S 3 v 558 557","S 1 n 29 82","S 2 s 560 559","S 3 h 562 561","S 3 i 68 563","S 1 e 68 564","S 1 a 68 565","S 1 t 42 566","S 3 l 568 567","S 3 b 569 29","S 5 o 571 570","S 6 # 29 572","S 3 c 29 573","S 3 h 100 574","S 6 i 100 575","S 3 p 26 576","S 3 f 26 577","S 3 l 579 578","S 2 u 26 580","S 5 k 29 581","S 6 o 582 29","S 6 u 28 583","S 3 k 26 100","S 6 # 26 584","S 6 e 26 585","S 6 c 230 586","S 6 # 29 587","S 2 l 589 588","S 3 o 591 590","S 4 l 593 592","S 6 y 595 594","S 6 i 100 596","S 6 s 598 597","S 6 r 600 599","S 2 t 602 601","S 2 s 604 603","S 5 c 29 82","S 5 o 606 605","S 6 # 608 607","S 5 o 610 609","S 6 # 29 611","S 5 h 82 612","S 4 c 614 613","S 4 s 42 29","S 6 e 616 615","S 4 t 618 617","S 4 z 29 619","S 3 r 42 620","S 4 g 622 621","S 3 u 623 42","S 3 l 230 42","S 4 z 100 624","S 2 # 230 29","S 2 r 625 42","S 1 d 100 42","S 5 a 28 626","S 6 t 29 627","S 1 # 42 628","S 3 l 629 42","S 6 t 68 630","S 1 # 632 631","S 6 k 634 633","S 1 # 42 635","S 3 t 42 636","S 4 n 638 637","S 1 0 640 639","S 3 g 642 641","S 3 m 68 42","S 1 0 644 643","S 3 a 29 645","S 4 l 29 42","S 4 c 29 646","S 3 l 42 647","S 2 a 68 648","S 1 i 68 649","S 3 m 68 650","S 1 e 652 651","S 3 s 331 42","S 3 r 29 653","S 3 p 100 42","S 6 o 28 654","S 6 g 68 655","S 2 e 657 656","S 3 r 63 82","S 5 s 659 658","S 2 t 63 82","S 3 r 82 63","S 5 b 82 660","S 3 s 662 661","S 5 c 63 663","S 6 t 82 664","S 1 o 154 665","S 6 m 230 82","S 4 o 667 666","S 2 a 29 28","S 3 j 230 68","S 2 i 230 68","S 3 h 669 668","S 3 s 68 670","S 3 g 672 671","P ae","S 3 u 29 673","S 4 m 28 674","S 1 e 28 68","S 2 o 42 675","S 3 p 677 676","S 2 u 28 678","S 1 e 230 29","S 2 s 680 679","S 3 h 26 29","S 3 h 682 681","S 2 g 28 683","S 6 # 100 684","S 6 e 26 100","S 1 # 686 685","S 1 # 26 687","S 6 e 26 688","S 6 t 26 689","S 3 i 28 690","S 6 s 29 691","S 5 b 29 692","S 3 m 28 693","S 3 l 28 694","S 6 c 100 695","S 3 c 100 696","S 6 e 698 697","S 1 n 28 699","S 1 c 126 700","S 4 n 702 701","S 5 t 704 703","S 4 e 28 705","S 5 a 707 706","S 4 l 709 708","S 3 c 28 68","S 1 0 42 68","S 4 g 711 710","S 4 g 230 712","S 2 e 68 713","S 1 d 42 714","S 4 a 28 715","S 5 s 717 716","S 6 # 719 718","S 3 t 82 720","S 4 a 28 721","S 6 # 29 722","S 3 v 724 723","S 4 n 100 29","S 5 m 726 725","S 6 # 29 727","S 3 b 100 728","S 3 p 729 82","S 4 a 28 730","S 5 h 82 100","S 6 c 732 731","S 4 n 734 733","S 4 s 42 735","S 2 r 68 736","S 3 t 738 737","S 3 m 740 739","S 4 w 82 741","S 2 i 100 742","P w-ey1","S 1 o 42 743","S 3 m 42 100","S 6 s 42 744","S 3 m 42 745","S 3 r 42 28","S 2 p 42 746","S 1 o 42 747","S 1 0 749 748","S 6 r 751 750","S 3 v 753 752","S 4 c 29 754","S 6 n 42 755","S 3 l 42 756","S 4 x 100 757","S 2 0 100 758","S 2 o 29 759","S 2 # 42 230","S 2 c 42 760","S 2 e 68 42","S 4 l 68 761","S 3 m 100 762","S 1 # 42 763","S 4 d 42 740","S 3 i 765 764","S 2 u 68 766","S 1 t 68 42","S 1 t 42 767","S 2 e 247 768","S 3 g 42 247","S 3 n 68 247","S 5 h 28 769","S 6 u 68 28","S 2 t 105 770","S 6 e 771 82","S 3 h 107 772","S 3 h 63 105","S 6 i 63 773","S 6 # 82 774","S 5 t 154 82","S 5 d 111 775","S 6 e 82 776","S 2 a 154 777","S 4 e 628 778","S 2 a 28 105","S 3 w 780 779","S 1 l 562 781","S 3 t 100 782","S 2 a 100 68","S 2 i 68 562","S 3 h 100 783","S 1 # 28 784","S 3 l 786 785","S 5 k 788 787","S 5 a 790 789","S 2 c 28 791","S 3 h 29 792","S 3 c 793 29","S 2 g 26 28","S 6 c 26 28","S 6 y 29 794","S 2 a 795 29","S 1 e 26 796","S 3 h 26 797","S 3 m 26 798","S 6 u 26 799","S 1 # 26 28","S 1 a 28 800","S 5 c 802 801","S 5 p 230 29","S 3 l 100 803","S 3 p 804 26","S 3 c 230 805","S 3 t 230 806","S 3 d 100 807","S 3 f 26 808","S 2 t 28 809","S 1 # 126 28","S 5 a 811 810","S 5 g 813 812","S 4 n 68 28","S 2 c 28 100","S 4 n 815 814","S 5 t 817 816","S 6 r 68 818","S 4 h 820 819","S 6 # 822 821","S 2 a 824 823","S 6 n 100 68","S 1 o 100 825","S 2 u 68 826","S 2 t 42 827","S 3 i 829 828","S 5 a 230 830","S 6 o 100 831","S 5 t 82 832","S 5 a 29 833","S 3 m 82 834","S 4 e 836 835","S 6 r 838 837","S 6 n 840 839","S 4 c 72 841","S 5 d 843 842","S 6 a 100 844","S 6 s 68 845","S 6 s 29 846","S 5 l 230 82","S 5 g 100 847","S 6 t 849 848","S 4 t 100 850","S 1 0 852 851","S 1 0 853 68","S 4 l 68 230","S 2 e 68 854","S 4 n 856 855","S 4 l 858 857","S 3 d 42 859","S 4 n 42 29","S 4 y 42 860","S 1 0 100 247","S 4 c 42 861","S 6 n 42 862","S 3 n 42 863","S 6 e 42 68","S 6 i 42 864","S 3 o 28 865","S 4 m 867 866","S 2 s 869 868","S 3 o 28 870","S 6 l 872 871","S 4 l 873 562","S 4 s 29 100","S 3 b 42 68","S 3 b 42 100","S 4 j 68 874","S 2 e 68 875","S 1 # 68 876","S 3 l 878 877","S 4 h 68 879","S 4 l 100 880","S 4 c 882 881","S 2 e 42 883","S 2 c 42 884","S 1 t 68 885","S 1 d 42 886","S 3 p 42 887","S 1 u 28 888","S 1 r 29 889","S 3 l 105 82","S 3 r 63 771","S 5 s 63 890","S 5 m 63 891","S 5 t 82 63","S 6 # 82 892","S 2 r 154 82","S 4 k 894 893","S 3 g 68 895","S 2 o 68 896","S 1 u 68 897","S 3 c 100 68","S 3 w 29 898","S 4 f 28 899","S 1 u 901 900","S 1 i 42 902","S 5 a 904 903","S 3 m 29 905","S 2 p 28 906","S 6 g 26 28","S 1 o 28 907","S 3 u 29 908","S 6 e 29 909","S 1 n 29 910","S 3 v 28 230","S 6 s 29 28","S 3 l 26 911","S 2 s 26 29","S 6 l 26 912","S 2 a 28 913","S 6 a 915 914","S 3 m 917 916","S 6 t 100 918","S 6 n 28 26","S 6 m 28 919","S 6 h 100 920","S 3 p 26 921","S 3 c 230 922","S 6 n 126 923","S 4 l 925 924","S 6 # 927 926","S 6 # 929 928","S 6 e 931 930","S 4 a 28 932","S 5 y 26 933","S 5 d 935 934","S 6 e 82 936","S 6 n 230 937","S 4 e 939 938","S 6 # 940 29","S 6 s 82 941","S 3 b 82 942","S 1 0 944 943","S 1 p 68 945","S 4 p 68 946","S 2 o 68 947","S 2 i 949 948","S 4 e 951 950","S 2 d 953 952","S 5 o 29 954","S 6 l 562 955","S 3 n 68 956","S 5 l 82 68","S 5 a 29 957","S 4 h 959 958","S 3 m 28 960","S 6 s 962 961","S 4 n 100 963","S 6 s 965 964","S 3 p 230 966","S 4 n 562 100","S 5 v 968 967","S 6 a 230 969","S 3 c 29 970","S 6 m 230 971","S 3 t 230 972","S 6 # 29 973","S 1 0 975 974","S 2 q 29 976","S 4 s 756 977","S 1 # 979 978","S 4 v 42 980","S 3 d 100 562","S 1 c 68 981","S 2 o 29 982","S 3 m 42 983","S 2 s 29 42","S 1 r 100 29","S 3 f 230 984","S 4 k 42 985","S 2 e 42 986","S 3 b 28 987","S 3 c 42 988","S 2 t 42 989","S 4 i 28 990","S 4 d 100 991","S 6 l 68 992","S 3 r 994 993","S 3 p 42 995","S 3 x 100 996","S 3 m 998 997","S 3 l 1000 999","S 6 r 68 100","S 3 r 42 1001","S 3 r 42 1002","S 2 n 68 29","S 2 i 529 42","S 1 m 42 1003","S 4 m 1005 1004","S 2 # 42 68","S 3 d 42 1006","S 2 p 42 1007","S 1 l 72 1008","S 1 e 68 42","S 1 d 68 42","S 3 n 42 1009","S 3 r 1011 1010","S 2 n 1012 28","S 5 d 82 1013","S 6 e 63 82","S 6 u 29 1014","S 6 k 82 1015","S 4 h 1017 1016","S 3 i 562 1018","S 3 f 100 1019","S 2 e 68 230","S 1 e 68 1020","S 2 o 68 1021","S 4 l 28 1022","S 2 r 42 1023","S 2 r 28 42","S 1 a 72 42","S 5 o 1025 1024","S 6 # 29 1026","S 2 m 29 230","S 5 o 28 1027","S 6 o 29 1028","S 3 l 29 1029","S 6 i 230 29","S 2 i 230 1030","S 6 d 26 28","S 6 t 1032 1031","S 1 u 28 1033","S 6 o 1035 1034","S 5 j 29 1036","S 3 s 230 909","S 6 e 230 1037","S 3 g 230 1038","S 6 z 28 1039","S 3 s 26 1040","S 6 u 230 1041","S 3 b 100 29","S 6 # 1042 126","S 4 a 28 1043","S 5 s 1045 1044","S 6 b 1047 1046","S 4 h 230 29","S 5 c 1049 1048","S 5 a 1051 1050","S 6 # 100 1052","S 3 l 100 1053","S 4 m 1055 1054","S 5 t 1057 1056","S 5 m 1059 1058","S 6 e 82 1060","S 6 a 82 1061","S 6 m 100 68","S 4 w 82 1062","S 2 c 68 1063","S 2 r 230 1064","S 2 h 82 1065","S 3 f 82 1066","S 4 b 1068 1067","S 6 i 1070 1069","S 6 t 230 1071","S 4 d 29 1072","S 1 o 68 1073","S 3 l 1075 1074","S 1 p 68 1076","S 3 w 1078 1077","S 3 r 28 1079","S 2 c 82 1080","S 6 n 1082 1081","S 4 c 1084 1083","S 6 c 562 1085","S 6 n 68 1086","S 3 c 1088 1087","S 4 n 1090 1089","S 6 a 1092 1091","S 3 h 28 1093","S 6 o 1095 1094","S 4 n 1097 1096","S 3 f 42 1098","S 4 t 1100 1099","S 4 n 100 1101","S 4 v 68 1102","S 6 e 1104 1103","S 3 m 29 1105","S 3 v 230 1106","S 3 b 29 1107","S 3 s 68 1108","S 3 s 100 1109","S 4 n 29 1110","S 6 u 42 1111","S 6 s 1113 1112","S 4 d 68 1114","S 2 t 68 1115","S 4 t 42 1116","S 4 z 42 193","S 4 l 1118 1117","S 2 i 1120 1119","S 2 s 29 1121","S 2 l 42 1122","S 4 n 29 100","S 1 # 1124 1123","S 2 b 29 1125","S 3 n 42 1126","S 1 0 1127 42","S 2 r 42 68","S 6 z 29 1128","S 4 n 100 1129","S 6 n 68 873","S 6 n 1131 1130","S 6 l 1133 1132","S 4 d 100 1134","S 2 d 42 1135","S 6 t 1137 1136","S 6 y 42 1138","S 3 h 1140 1139","S 4 b 42 68","S 2 # 1142 1141","S 1 0 42 1143","S 1 c 68 42","S 4 d 42 1144","S 1 # 42 68","S 4 l 1146 1145","S 2 s 42 1147","S 3 g 1148 42","S 3 g 42 1149","S 6 l 68 1150","S 2 t 42 1151","S 4 l 68 28","S 5 r 82 1152","S 6 i 82 1153","S 6 l 82 1154","S 4 m 1156 1155","S 2 r 1157 68","S 2 c 1159 1158","S 3 l 68 1160","S 2 t 68 1161","S 2 a 68 1162","S 2 r 68 28","S 3 s 28 1163","S 6 # 1165 1164","S 6 # 1166 28","S 3 h 1168 1167","S 1 e 28 1169","S 5 # 28 1170","S 3 i 28 1171","S 1 s 29 1172","S 1 m 29 1173","S 1 a 28 26","S 3 t 28 1174","S 5 q 1176 1175","S 5 t 1178 1177","S 3 f 29 1179","S 6 i 29 1180","S 6 c 28 1181","S 2 # 1182 100","S 3 k 26 1183","S 3 c 1185 1184","S 5 y 126 28","S 4 w 1187 1186","S 3 w 1189 1188","S 6 k 29 68","S 3 b 711 1190","S 3 l 100 42","S 6 s 1192 1191","S 6 e 1194 1193","S 5 k 100 1195","S 2 u 29 1196","S 6 i 42 1197","S 3 r 1198 42","S 5 r 1200 1199","S 5 a 1202 1201","S 5 n 1204 1203","S 6 o 100 1205","S 5 u 68 1206","S 6 o 29 230","S 6 r 82 29","S 6 o 100 1207","S 4 o 28 1208","S 1 a 133 42","S 2 n 29 1209","S 2 s 1211 1210","S 3 c 82 1212","S 3 h 1214 1213","S 1 b 42 1215","S 6 r 1217 1216","S 4 l 230 68","S 4 m 68 1218","S 4 n 29 68","S 2 a 68 937","S 1 n 42 1219","S 1 g 72 42","S 3 c 42 1220","S 2 a 1222 1221","S 5 g 100 1223","S 2 s 42 28","S 2 g 1225 1224","S 4 g 68 1226","S 4 m 68 100","S 3 h 100 1227","S 5 k 100 1228","S 6 a 100 1229","S 3 h 100 1230","S 5 l 1231 29","S 5 p 100 1232","S 3 o 28 1233","S 5 g 1235 1234","S 6 e 29 1236","S 5 r 28 29","S 5 n 28 1237","S 6 n 1239 1238","S 4 b 562 1240","S 3 l 68 29","S 3 j 68 562","S 4 b 1242 1241","S 4 n 1244 1243","S 3 d 42 1245","S 4 t 68 29","S 4 h 68 1246","S 6 # 82 1247","S 5 t 82 1248","S 6 o 29 1249","S 6 o 1251 1250","S 6 e 230 1252","S 6 g 100 1253","S 6 y 68 1254","S 5 m 82 1255","S 1 # 1257 1256","S 6 k 608 1258","S 4 o 28 1259","S 3 b 68 1260","S 4 n 100 1261","S 3 v 230 68","S 2 # 1262 100","S 2 # 230 42","S 3 l 42 1263","S 3 t 42 68","S 2 g 1265 1264","S 1 # 29 1266","S 2 # 1268 1267","S 3 t 29 1269","S 4 s 29 42","S 5 c 42 1270","S 3 d 42 1271","S 6 o 1273 1272","S 4 b 1275 1274","S 4 t 1277 1276","S 2 p 230 1278","S 2 g 42 1279","S 4 v 1280 100","S 3 h 42 1281","S 2 f 42 1282","S 6 i 68 1283","S 4 n 68 1284","S 4 t 68 1285","S 4 n 1287 1286","S 4 z 42 100","S 4 k 42 1288","S 3 t 100 42","S 3 l 42 271","S 4 y 42 1289","S 3 g 42 1290","S 1 e 42 1291","S 3 f 42 1096","S 2 n 72 42","S 3 c 42 68","S 1 i 247 1292","S 1 o 247 331","S 2 a 29 82","S 3 f 1294 1293","S 6 s 82 1295","S 4 a 28 1296","S 2 g 100 1297","S 1 a 68 29","S 3 y 562 1298","S 3 h 68 562","S 3 n 68 1299","S 2 o 230 1300","S 2 i 29 1301","S 2 s 42 72","S 5 # 1303 1302","S 3 y 29 1304","S 2 i 230 29","S 1 d 28 1305","S 1 s 100 28","S 6 # 28 1306","S 1 h 28 1307","S 2 a 1308 29","S 2 e 230 1309","S 3 u 230 1310","S 1 e 26 28","S 6 i 1312 1311","S 3 m 29 230","S 5 d 1314 1313","S 3 m 230 1315","S 5 t 230 1316","S 6 h 29 400","S 6 m 28 1317","S 6 n 1319 1318","S 6 l 230 1320","S 3 f 29 1321","S 6 a 230 100","S 5 t 1323 1322","S 6 k 29 82","S 6 # 1325 1324","S 5 k 1327 1326","S 6 y 68 1328","S 3 w 1330 1329","S 5 t 68 1331","S 6 y 68 1332","S 2 f 230 1333","S 5 d 1335 1334","S 1 t 29 1336","S 6 l 100 1337","S 1 a 42 1338","S 4 w 1340 1339","S 6 o 100 1341","S 5 u 68 1342","S 6 n 68 1343","S 6 l 100 1344","S 6 o 68 100","S 6 a 562 100","S 5 p 100 1345","S 6 i 29 100","S 4 g 1347 1346","S 3 d 29 230","S 3 w 82 1348","S 1 n 82 1349","S 2 e 1351 1350","S 4 v 1353 1352","S 2 s 100 1354","S 1 o 100 68","S 6 u 68 1355","S 4 m 100 1226","S 6 g 68 1356","S 3 i 42 1357","S 3 t 42 1358","S 3 u 1360 1359","S 3 v 29 1361","S 5 k 82 29","S 4 n 1363 1362","S 6 a 68 1364","S 4 n 100 68","S 3 r 100 29","S 5 t 100 1365","S 6 m 562 1366","S 6 e 29 1367","S 3 h 100 29","S 5 l 100 82","S 4 o 1369 1368","S 3 v 1371 1370","S 6 e 1373 1372","S 5 l 29 1374","S 5 t 28 1375","S 4 k 68 1376","S 4 x 100 1377","S 4 h 29 68","S 3 l 230 1378","S 3 l 42 100","S 4 k 1380 1379","S 3 m 100 1381","S 3 f 42 1382","S 4 p 68 1383","S 5 u 1385 1384","S 5 k 82 1386","S 3 s 1388 1387","S 6 e 1389 82","S 3 b 230 29","S 6 o 100 1390","S 6 r 100 1391","S 3 c 68 1392","S 5 r 29 1393","S 6 s 1395 1394","S 2 q 29 1396","S 6 m 1398 1397","S 4 n 100 1399","S 4 l 1401 1400","S 4 l 1403 1402","S 4 t 42 1404","S 3 n 42 68","S 4 l 1405 42","S 4 c 42 100","S 1 o 42 100","S 4 m 1407 1406","S 3 m 1409 1408","S 3 x 100 1410","S 1 t 42 1411","S 3 r 42 1412","S 4 m 1414 1413","S 2 n 100 42","S 6 l 230 1415","S 6 r 100 1416","S 3 i 68 1417","S 6 a 562 1418","S 4 m 68 42","S 2 t 42 1419","S 2 t 100 42","S 6 n 100 42","S 4 t 42 1420","S 6 y 1422 1421","S 4 m 100 1423","S 4 n 68 100","S 3 m 1425 1424","S 3 p 100 68","S 4 d 42 1426","S 1 r 68 42","S 4 k 42 1427","S 3 g 29 1428","S 3 l 29 1429","S 6 h 82 1430","S 5 s 82 63","S 3 p 82 63","S 4 z 230 1431","S 3 h 671 1432","S 1 t 230 1433","S 3 y 68 1434","S 2 g 68 1435","S 2 e 68 1436","S 6 s 1438 1437","S 3 g 28 1439","S 3 c 29 1440","S 1 m 29 1441","S 5 # 28 29","S 2 l 28 1442","S 5 # 29 28","S 1 t 29 1443","S 1 a 28 1444","S 6 e 1445 29","S 5 t 29 1446","S 3 k 29 1447","S 3 c 230 29","S 3 c 230 1251","S 3 k 29 1448","S 3 b 1450 1449","S 3 p 28 1451","S 3 m 28 26","S 3 h 28 1452","S 3 b 1453 29","S 3 b 1455 1454","S 4 t 1457 1456","S 5 d 1459 1458","S 5 d 68 1460","S 5 d 1461 68","S 6 # 29 82","S 1 r 68 1462","S 5 a 1464 1463","S 5 d 29 82","S 5 d 1466 1465","S 6 i 1468 1467","S 3 h 100 1469","S 3 m 68 1470","S 3 l 1472 1471","S 3 t 100 1473","S 6 u 100 1474","S 2 t 42 72","S 5 a 1476 1475","S 5 a 68 29","S 6 i 1478 1477","S 6 r 100 1479","S 6 z 100 1480","S 5 g 1482 1481","S 6 i 1484 1483","S 4 c 68 1485","S 3 t 562 1486","S 3 c 82 1487","S 1 y 68 29","S 3 d 68 1488","S 3 r 82 1489","S 3 r 1491 1490","S 6 r 42 230","S 2 c 28 68","S 6 l 1493 1492","S 6 m 68 1070","S 2 o 1495 1494","S 1 t 1496 42","S 2 u 1498 1497","S 6 r 230 1499","S 5 o 331 1500","S 2 v 68 1501","S 5 c 230 29","S 4 c 68 1502","S 6 e 42 100","S 6 p 562 1503","S 6 a 100 1504","S 6 e 1506 1505","S 6 i 1507 230","S 3 i 68 1508","S 5 d 100 1509","S 6 i 1511 1510","S 3 t 100 1512","S 5 r 29 1513","S 3 b 28 1514","S 3 c 1516 1515","S 3 l 1518 1517","S 4 p 230 1519","S 6 l 1521 1520","S 3 n 230 1522","S 3 c 68 1523","S 3 c 100 1524","S 3 b 42 1525","S 3 m 1527 1526","S 3 v 562 1528","S 3 b 1530 1529","S 6 e 100 1531","S 6 a 100 1532","S 3 b 230 82","S 6 i 82 100","S 3 m 100 1533","S 3 k 100 1534","S 4 h 29 1535","S 4 b 1537 1536","S 4 l 68 1538","S 3 t 1540 1539","S 6 f 100 1541","S 3 m 100 1542","S 4 l 100 1543","S 4 c 100 1544","S 1 0 68 1545","S 3 r 100 1546","S 1 0 68 100","S 4 m 42 1547","S 2 a 29 42","S 3 r 1549 1548","S 1 o 100 1550","S 3 j 68 1551","S 4 c 100 1552","S 2 c 1554 1553","S 6 h 42 1555","S 6 e 28 42","S 6 r 1557 1556","S 6 n 68 1558","S 6 x 68 1559","S 6 l 100 68","S 6 t 100 1560","S 2 a 68 29","S 2 c 42 1561","S 4 m 42 1562","S 4 p 42 1563","S 3 r 100 42","S 4 c 100 68","S 3 p 68 1564","S 4 d 100 68","S 1 # 42 1565","S 3 c 42 1566","S 3 v 42 1567","S 1 d 68 1568","S 5 t 1570 1569","S 4 x 1572 1571","S 3 r 100 1573","S 1 b 68 1574","S 3 a 29 1575","S 2 a 1576 68","S 3 y 68 100","S 6 z 28 1577","S 3 y 29 1578","S 2 s 1580 1579","S 5 z 230 1581","S 3 c 28 1582","S 5 d 29 1583","S 1 c 29 1584","S 3 p 26 1585","S 5 m 1587 1586","S 5 p 230 1588","S 3 g 29 1589","S 3 p 29 1590","S 3 c 28 26","S 6 n 100 28","S 6 o 230 26","S 3 m 28 1591","S 6 a 100 29","S 4 e 1593 1592","S 5 h 1595 1594","S 2 a 1597 1596","S 6 # 68 1598","S 5 y 68 1599","S 2 e 68 1600","S 5 t 82 1601","S 1 e 1603 1602","S 2 d 82 1604","S 5 s 1606 1605","S 3 m 100 1607","S 3 b 100 1608","S 1 r 100 1609","S 2 r 29 1610","S 1 f 100 68","S 1 f 100 1611","S 5 y 1613 1612","S 3 h 100 1614","S 2 l 68 1615","S 3 i 100 1616","S 6 o 100 29","S 5 u 1618 1617","S 6 l 230 1619","S 6 e 1621 1620","S 4 d 230 100","S 5 m 100 1622","S 6 l 68 1623","S 6 r 100 1624","S 6 e 100 1625","S 5 k 100 1626","S 5 b 230 1627","S 4 d 100 1628","S 6 i 29 68","S 1 p 68 1629","S 2 o 68 1630","S 3 w 68 82","S 4 n 1631 68","S 2 t 68 1632","S 4 v 100 1633","S 4 p 68 100","S 3 r 1634 1120","S 3 r 68 1289","S 3 g 42 68","S 5 a 1636 1635","S 3 n 68 100","S 4 d 29 1637","S 6 o 100 1638","S 4 s 100 1101","S 5 n 68 29","S 6 f 562 1639","S 6 s 29 1640","S 5 y 1642 1641","S 5 l 1644 1643","S 5 l 230 72","S 5 t 1646 1645","S 6 l 100 1647","S 6 a 1511 100","S 3 m 230 100","S 3 l 42 1648","S 6 i 29 1649","S 6 e 28 1650","S 3 i 29 1651","S 4 n 68 1493","S 4 n 100 1652","S 4 m 230 1653","S 3 c 68 529","S 6 r 1655 1654","S 3 m 100 1656","S 6 r 68 230","S 3 f 68 1657","S 3 n 230 1511","S 3 l 230 1658","S 5 t 1660 1659","S 6 i 100 1661","S 6 t 68 100","S 5 l 1663 1662","S 5 l 100 42","S 3 g 100 1185","S 6 i 100 230","S 6 n 68 100","S 6 d 100 1664","S 5 l 29 1665","S 2 q 29 1666","S 2 s 42 68","S 3 s 100 1667","S 6 k 29 1668","S 4 b 42 1669","S 3 w 230 1670","S 2 # 230 100","S 3 n 29 1671","S 2 a 68 1672","S 2 c 68 100","S 1 d 100 1673","S 3 m 100 1674","S 2 o 1676 1675","S 2 g 42 1677","S 1 e 100 68","S 4 n 42 1678","S 4 l 100 230","S 2 g 68 1679","S 4 v 42 100","S 2 c 42 1680","S 2 s 42 1681","S 4 t 273 1682","S 6 r 68 1683","S 4 v 1685 1684","S 3 n 100 1686","S 4 d 68 1687","S 2 t 1688 42","S 3 h 1690 1689","S 3 c 68 1691","S 1 e 42 1692","S 2 o 42 1693","S 2 e 42 1694","S 3 d 247 1695","S 3 t 63 1696","S 6 z 82 63","S 4 v 230 1697","S 3 n 562 1698","S 2 t 68 1699","S 2 r 68 1700","S 3 u 230 1701","S 1 r 562 68","S 2 a 1703 1702","S 3 z 28 1704","S 3 a 29 1705","S 3 s 28 29","S 3 a 29 1706","S 2 a 28 230","S 1 m 28 29","S 3 t 29 1707","S 2 s 26 1708","S 3 f 29 1709","S 3 p 29 1710","S 3 s 29 1711","S 3 t 29 1712","S 5 l 29 1713","S 6 n 28 1714","S 2 a 1716 1715","S 6 # 42 28","S 5 k 100 1717","S 4 c 1719 1718","S 4 c 1721 1720","S 1 h 68 100","S 2 a 29 1722","S 5 t 68 1723","S 3 n 29 1724","S 5 k 82 100","S 2 e 154 68","S 2 n 82 154","S 2 a 1726 1725","S 6 l 1728 1727","S 6 k 100 1729","S 6 r 230 1730","S 5 n 68 1731","S 2 s 100 1732","S 3 i 29 1733","S 2 d 1735 1734","S 3 i 68 1736","S 2 l 42 68","S 3 r 1738 1737","S 1 g 68 1739","S 1 i 29 100","S 5 h 1741 1740","S 4 b 68 1742","S 4 g 100 1743","S 6 a 68 1744","S 4 g 68 29","S 5 b 1745 100","S 6 s 68 1746","S 5 a 100 1747","S 6 o 562 100","S 6 e 1749 1748","S 5 v 230 100","S 4 t 100 1750","S 6 o 1752 1751","S 2 r 68 1753","S 6 v 100 1754","S 6 n 68 29","S 4 d 68 1755","S 2 e 42 68","S 5 o 1757 1756","S 6 # 608 1758","S 5 t 29 1759","S 4 p 100 1760","S 6 g 562 1761","S 6 i 100 68","S 5 u 1763 1762","S 6 # 42 1764","S 3 c 1766 1765","S 4 c 68 1767","S 5 u 1769 1768","S 3 s 1770 100","S 6 i 100 1771","S 3 d 42 625","S 5 u 100 1772","S 3 k 28 1773","S 3 z 68 1774","S 4 g 230 1775","S 4 f 100 230","S 3 c 1777 1776","S 4 d 42 1778","S 4 m 68 1779","S 3 p 100 1780","S 4 t 42 1781","S 5 k 1783 1782","S 3 s 82 1784","S 6 r 562 1785","S 3 f 82 1786","S 3 c 82 1787","S 6 m 100 1788","S 5 d 29 1789","S 6 m 1791 1790","S 4 k 29 1792","S 6 l 1794 1793","S 4 t 68 100","S 3 d 1796 1795","S 4 t 100 1797","S 3 h 100 1798","S 1 0 100 1799","S 4 p 42 100","S 4 d 512 1800","S 3 m 230 68","S 1 p 42 1801","S 3 r 1803 1802","S 2 h 68 1804","S 5 g 1806 1805","S 6 k 1808 1807","S 4 p 42 1809","S 2 a 68 1810","S 6 t 68 1811","S 6 n 230 100","S 3 c 68 1812","S 2 d 68 1813","S 4 v 100 42","S 6 e 100 1814","S 4 b 100 1815","S 3 g 68 1816","S 4 m 42 1817","S 1 o 42 1818","S 3 c 42 29","S 2 a 247 1819","S 3 h 773 1820","S 3 a 29 1821","S 3 r 562 100","S 3 d 68 1822","S 2 s 68 1823","S 2 t 1825 1824","S 6 l 28 1826","S 6 a 29 1827","S 1 r 29 28","S 3 n 1829 1828","S 5 d 1831 1830","S 2 l 29 1832","S 2 e 28 1833","S 3 l 29 1834","S 2 # 1314 230","S 3 d 29 1835","S 3 p 29 1836","S 3 v 230 1837","S 3 g 28 1838","S 5 y 1840 1839","S 4 o 28 1841","S 4 b 29 1842","S 6 # 68 29","S 1 e 1844 1843","S 6 e 100 1845","S 2 m 1846 100","S 6 a 29 100","S 5 v 29 1847","S 6 i 29 1059","S 2 i 1849 1848","S 6 n 1851 1850","S 2 c 1853 1852","S 5 t 1854 100","S 2 x 100 1855","S 6 n 100 1856","S 1 a 100 29","S 1 e 100 1857","S 1 n 100 1858","S 1 n 68 1859","S 3 v 100 68","S 5 t 1861 1860","S 3 i 68 1862","S 1 e 562 1863","S 1 c 68 1864","S 4 s 1866 1865","S 4 s 100 1867","S 6 l 68 1868","S 6 i 68 1869","S 6 u 230 68","S 6 i 562 1205","S 6 r 100 1870","S 5 c 1871 100","S 6 a 1873 1872","S 5 v 230 1874","S 4 p 68 1875","S 6 u 68 1876","S 2 e 29 1877","S 3 h 1879 1878","S 1 r 230 68","S 4 b 68 1880","S 3 a 29 1881","S 6 # 29 1882","S 4 h 28 1883","S 2 q 100 1884","S 4 c 100 1885","S 6 i 562 100","S 6 a 1887 1886","S 6 # 29 1888","S 4 t 29 1889","S 5 u 1891 1890","S 5 t 230 1892","S 4 b 42 1893","S 5 y 100 1894","S 6 s 42 1895","S 6 o 230 1185","S 5 n 562 1896","S 3 m 100 1897","S 6 # 28 42","S 6 b 100 1898","S 4 t 68 1899","S 4 j 68 1900","S 4 p 68 1901","S 3 c 230 1902","S 3 c 1904 1903","S 3 h 100 1905","S 3 c 42 1906","S 5 l 1908 1907","S 6 o 100 1909","S 6 o 29 1910","S 6 u 562 100","S 3 s 42 100","S 3 v 100 1911","S 3 m 68 1685","S 5 a 29 1912","S 6 l 1914 1913","S 2 a 68 28","S 2 r 68 1915","S 2 d 68 1916","S 3 r 1917 68","S 3 t 100 1918","S 6 d 42 68","S 3 l 100 1554","S 2 o 230 1919","S 4 v 100 29","S 4 l 68 1920","S 4 f 230 1921","S 3 k 1923 1922","S 4 b 68 42","S 3 r 42 1924","S 6 e 42 1925","S 3 d 42 28","S 6 l 1927 1926","S 4 c 68 1928","S 2 a 68 1929","S 3 h 68 100","S 4 l 68 1930","S 4 b 68 1931","S 2 b 100 29","S 4 c 1047 1932","S 6 r 100 1281","S 3 r 100 1933","S 4 s 68 42","S 2 p 42 1934","S 1 r 247 1935","S 3 b 63 1936","S 3 c 100 1937","S 2 l 68 1938","S 3 l 68 1939","S 3 p 100 1940","S 3 r 100 68","S 6 t 1942 1941","S 6 i 28 29","S 2 l 1944 1943","S 1 o 29 28","S 5 s 28 29","S 3 i 28 1945","S 6 e 29 1946","S 3 h 28 1947","S 3 t 29 1948","S 3 j 29 1949","S 2 # 1950 29","S 3 c 29 1951","S 3 l 100 230","S 3 w 1953 1952","S 4 c 68 1954","S 6 i 1956 1955","S 4 g 100 1957","S 2 r 230 1958","S 2 n 230 1959","S 6 a 1961 1960","S 6 # 562 100","S 1 d 100 1962","S 6 g 100 1963","S 3 y 230 68","S 6 k 230 1964","S 3 t 230 68","S 1 r 100 1965","S 1 r 68 100","S 1 i 100 68","S 3 m 68 1966","S 6 h 100 68","S 1 o 100 1967","S 3 r 29 1968","S 1 r 68 1969","S 5 s 68 100","S 2 p 100 1970","S 2 e 100 1971","S 1 s 68 1972","S 2 o 68 1973","S 6 r 1975 1974","S 5 s 68 1976","S 6 i 68 1977","S 6 n 68 1978","S 4 b 68 1979","S 6 d 230 100","S 6 h 100 1980","S 5 g 562 100","S 5 v 100 1981","S 5 g 100 1982","S 4 s 68 1983","S 6 a 1985 1984","S 1 0 100 1986","S 3 g 68 1987","S 2 s 68 1988","S 4 m 68 1989","S 5 y 1991 1990","S 2 o 68 1992","S 3 p 230 1993","S 2 g 29 1994","S 4 s 1996 1995","S 5 r 1998 1997","S 4 j 2000 1999","S 3 m 2002 2001","S 3 b 42 2003","S 5 h 2005 2004","S 4 g 42 100","S 4 p 230 100","S 3 l 42 1674","S 3 h 100 2006","S 6 e 230 100","S 5 v 562 2007","S 6 # 100 29","S 4 n 2009 2008","S 4 m 68 2010","S 6 t 2012 2011","S 4 s 1870 68","S 3 h 100 2013","S 4 b 230 2014","S 4 v 100 230","S 3 k 100 2015","S 3 h 42 2016","S 5 s 2018 2017","S 6 a 100 2019","S 3 t 82 2020","S 6 h 100 2021","S 3 g 100 2022","S 4 f 29 2023","S 2 a 68 2024","S 3 f 100 68","S 4 t 68 2025","S 6 r 68 2026","S 4 z 68 100","S 4 s 2028 2027","S 3 d 100 2029","S 1 o 68 2030","S 2 a 230 68","S 4 s 42 2031","S 4 l 68 100","S 2 s 42 2032","S 2 # 2034 2033","S 4 d 68 2035","S 4 n 2037 2036","S 4 n 68 29","S 3 s 42 2038","S 4 c 68 2039","S 2 c 68 2040","S 4 x 100 2041","S 3 s 68 2042","S 3 s 42 2043","S 1 a 2045 2044","S 5 b 63 2046","S 3 t 2048 2047","S 3 n 68 2049","S 1 p 68 2050","S 3 b 68 2051","S 2 c 29 2052","S 3 h 2053 29","S 2 h 28 2054","S 1 a 230 28","S 3 k 28 2055","S 3 b 29 2056","S 6 n 28 2057","S 3 k 29 2058","S 3 t 29 2059","S 3 c 29 2060","S 5 b 29 2061","S 5 u 2063 2062","S 2 o 68 2064","S 6 # 2065 68","S 4 s 2067 2066","S 1 p 42 2068","S 2 m 100 2069","S 1 i 29 2070","S 2 r 29 230","S 3 c 100 2071","S 1 d 68 100","S 6 a 2073 2072","S 4 f 230 2074","S 3 k 230 2075","S 5 d 2077 2076","S 2 t 100 68","S 3 l 68 100","S 3 l 2078 100","S 3 d 68 2079","S 2 u 68 2080","S 1 o 68 1986","S 2 b 100 68","S 1 s 100 1854","S 4 h 29 2081","S 4 g 68 2082","S 5 y 42 2083","S 4 c 100 2084","S 4 c 68 2085","S 6 t 100 2086","S 6 e 100 230","S 5 b 100 2087","S 5 b 100 562","S 4 f 68 1285","S 6 e 2089 2088","S 1 a 100 1403","S 2 i 68 100","S 3 w 82 2090","S 2 c 68 82","S 4 n 68 2091","S 6 e 2093 2092","S 6 # 42 100","S 4 v 2095 2094","S 3 m 68 2096","S 6 # 29 230","S 3 r 68 2097","S 3 n 230 100","S 3 m 2099 2098","S 4 t 2101 2100","S 3 m 2103 2102","P ay1","S 4 k 68 2104","S 4 t 68 1917","S 4 d 42 100","S 5 r 1786 2105","S 3 f 29 2106","S 6 o 2108 2107","S 5 c 100 2109","S 3 n 2028 2110","S 3 j 68 100","S 4 p 230 2111","S 4 c 2113 2112","S 4 b 29 1838","S 4 h 29 2114","S 4 s 68 230","S 3 b 68 100","S 3 m 68 2115","S 5 z 2117 2116","S 3 f 82 2020","S 6 u 2119 2118","S 3 b 82 100","S 3 b 100 82","S 3 t 82 100","S 5 h 29 2120","S 4 v 230 2121","S 3 t 1285 2122","S 2 s 230 100","S 3 f 68 2123","S 6 l 230 68","S 2 # 2125 2124","S 2 a 68 2126","S 3 s 2128 2127","S 2 b 42 2129","S 1 # 42 2130","S 6 l 42 2131","S 6 m 42 2132","S 2 n 68 2133","S 2 m 100 230","S 4 v 230 2134","S 6 r 29 68","S 2 a 2136 2135","S 3 c 2138 2137","S 3 n 42 2139","S 3 r 42 2140","S 2 i 247 68","S 2 n 247 2141","S 6 c 63 2142","S 2 a 2144 2143","S 4 d 68 2145","S 2 i 68 2146","S 1 h 68 2147","S 1 r 68 2148","S 3 n 2150 2149","S 1 e 230 2151","S 3 y 29 2152","S 1 r 2154 2153","S 3 h 2156 2155","S 3 t 28 29","S 3 m 2157 29","S 3 f 29 2158","S 5 g 230 29","S 2 # 29 2159","S 1 s 2161 2160","S 6 l 2163 2162","S 5 h 29 2164","S 4 d 42 68","S 6 e 68 2165","S 6 # 2167 2166","S 4 s 29 2168","S 4 s 68 100","S 2 h 29 2169","S 2 c 100 2170","S 5 u 1735 2171","S 5 c 230 100","S 1 s 29 2172","S 6 s 29 68","S 2 i 100 2173","S 3 l 2175 2174","S 6 h 68 29","S 1 m 2176 68","S 3 n 68 2177","S 4 p 2179 2178","S 4 b 68 2180","S 6 h 100 2181","S 6 a 2183 2182","S 6 a 29 2184","S 6 p 68 2185","S 5 c 100 562","S 6 i 100 2186","S 1 0 100 2187","S 3 n 68 2188","S 4 l 68 1493","S 5 r 2190 2189","S 2 i 68 2191","S 6 s 42 2192","S 2 f 42 68","S 2 g 2194 2193","S 4 n 2195 68","S 6 u 2197 2196","S 4 c 2199 2198","S 4 v 100 2200","S 3 m 42 2201","S 3 c 2203 2202","S 4 c 2205 2204","S 3 y 29 2206","S 4 s 2208 2207","S 4 c 2210 2209","S 3 m 2212 2211","S 5 k 100 2213","S 5 m 562 2214","S 6 t 100 2215","S 3 m 42 2216","S 3 y 29 2217","S 3 m 68 230","S 4 z 2219 2218","S 4 g 42 230","S 5 h 562 100","S 3 s 82 230","S 3 b 2221 2220","S 3 h 68 2222","S 4 m 29 2223","S 2 o 68 2224","S 1 e 68 2225","S 3 m 68 2226","S 3 c 100 2227","S 4 n 100 2228","S 4 n 100 2229","S 4 b 100 2230","S 4 v 230 68","S 4 m 68 193","S 6 i 28 42","S 3 r 42 2231","S 6 g 100 2232","S 2 a 68 2233","S 1 r 29 2234","S 4 n 100 2235","S 3 m 29 68","S 3 t 2237 2236","S 6 g 100 2238","S 3 f 42 100","S 4 v 42 2239","S 2 c 247 2240","S 3 k 82 2241","S 1 a 2243 2242","S 3 b 230 1423","S 4 g 100 2244","S 1 i 68 2245","S 1 k 68 2246","S 2 u 68 2247","S 1 a 2249 2248","S 5 d 909 230","S 2 c 230 2250","S 3 f 230 2251","S 1 b 29 2252","S 2 e 29 28","S 2 c 29 230","S 1 o 230 2253","S 5 s 230 29","S 5 s 29 2254","S 5 n 230 29","S 6 # 2256 2255","S 3 i 247 2257","S 4 t 2259 2258","S 4 c 100 2260","S 4 t 29 154","S 4 g 2262 2261","S 6 e 100 2263","S 5 h 247 100","S 3 r 29 100","S 6 # 905 29","S 6 i 100 2264","S 2 n 100 2265","S 4 d 2267 2266","S 2 o 2269 2268","S 2 g 562 2270","S 2 e 68 2271","S 2 b 68 100","S 2 i 68 782","S 5 t 2273 2272","S 5 p 2274 100","S 5 c 68 2275","S 6 o 68 2276","S 4 d 68 2277","S 4 t 100 68","S 4 q 100 1532","S 6 d 100 2278","S 6 g 100 82","S 3 v 68 2279","S 1 a 68 2280","S 3 h 2282 2281","S 4 g 42 2283","S 5 l 2285 2284","S 4 t 2287 2286","S 4 n 2289 2288","S 4 n 230 100","S 5 d 68 29","S 6 o 2291 2290","S 5 q 2293 2292","S 5 h 100 2294","S 5 h 2296 2295","S 3 l 230 2297","S 3 p 1204 100","S 5 k 2299 2298","S 4 m 230 2300","S 4 s 100 2301","S 5 c 100 2302","S 3 k 29 2303","S 3 m 2304 100","S 5 s 100 2305","S 4 t 2306 100","S 3 b 29 100","S 3 l 100 2307","S 5 c 2308 100","S 3 p 230 100","S 6 a 100 2309","S 6 d 230 2310","S 4 s 100 68","S 6 g 100 2311","S 3 s 2313 2312","S 3 n 230 68","S 6 s 82 2314","S 6 o 68 2315","S 3 g 230 100","S 6 o 82 2316","S 6 r 100 2317","S 2 u 68 2318","S 4 m 2320 2319","S 4 g 100 2321","S 3 c 100 2322","S 4 c 68 596","S 4 l 100 2323","S 5 t 42 2324","S 2 c 100 2325","S 2 o 68 2326","S 2 t 68 2327","S 3 l 2287 29","S 3 l 2329 2328","S 6 r 2330 100","S 4 m 100 2331","S 3 t 42 2332","S 6 # 247 68","S 3 l 2334 2333","S 4 f 68 2335","S 4 d 29 2336","S 4 t 100 562","S 2 s 562 2337","S 1 r 68 2338","S 3 d 68 2339","S 6 h 29 2340","S 2 n 28 29","S 1 r 230 29","S 3 b 29 2341","S 1 h 28 2342","S 2 n 29 2343","S 3 m 29 2344","S 4 p 2346 2345","S 4 h 68 2347","S 2 q 29 2348","S 6 a 29 2349","S 2 n 100 2350","S 1 n 100 230","S 4 z 29 2351","S 1 p 68 2352","S 6 o 29 1722","S 2 s 2354 2353","S 3 v 68 2355","S 1 m 2357 2356","S 3 r 68 230","S 6 r 68 2358","S 1 i 29 2359","S 6 t 68 2360","S 6 i 100 2361","S 6 e 2363 2362","S 4 t 2364 100","S 6 o 68 2365","S 4 p 68 2366","S 5 c 2365 2367","S 6 e 100 2368","S 4 p 68 2369","S 2 c 100 82","S 3 t 68 82","S 3 y 2371 2370","S 5 u 29 2372","S 4 h 29 100","S 3 h 2374 2373","S 4 b 42 2375","S 3 r 2377 2376","S 2 p 68 100","S 4 c 42 2378","S 2 b 100 2379","S 6 i 2381 2380","S 5 k 2299 2382","S 5 s 100 2383","S 3 p 230 2384","S 4 z 230 2385","S 5 k 100 68","S 6 i 247 68","S 3 g 230 2386","S 5 h 2388 2387","S 4 c 100 29","S 5 c 562 2389","S 4 m 29 2390","S 5 h 100 68","S 3 n 100 2391","S 4 c 68 2392","S 3 h 42 2393","S 3 m 100 2394","S 3 c 2396 2395","S 6 i 230 100","S 6 e 562 2397","S 4 v 230 2398","S 6 d 100 2399","S 3 m 68 2400","S 4 m 100 230","S 6 m 82 2401","S 6 i 100 82","S 6 e 82 29","S 1 m 68 100","S 4 m 29 2402","S 4 l 2404 2403","S 3 c 68 2405","S 2 g 100 2406","S 4 v 100 273","S 3 l 2408 2407","S 6 i 42 2409","S 6 a 2411 2410","S 4 b 230 68","S 2 e 68 2412","S 4 f 42 2413","S 6 r 2330 2414","S 4 v 230 42","S 6 b 42 2415","S 1 h 42 2416","S 5 s 82 2417","S 5 d 82 63","S 4 b 100 2418","S 4 t 562 2419","S 1 a 562 68","S 2 o 562 68","S 1 l 68 2420","S 3 i 29 2421","S 3 m 2423 2422","S 2 r 2425 2424","S 1 i 230 2426","S 3 b 2427 29","S 5 r 2429 2428","S 6 i 100 2430","S 5 z 1669 2431","S 3 r 100 2432","S 6 # 29 558","S 3 r 68 2433","S 1 p 68 2434","S 6 a 29 230","S 2 d 100 2435","S 3 t 562 100","S 6 u 100 2436","S 4 z 100 68","S 2 c 100 896","S 3 l 2438 2437","S 6 o 29 2439","S 1 a 100 2440","S 6 e 1854 29","S 4 c 2442 2441","S 5 c 562 2443","S 6 i 100 2444","S 6 e 68 100","S 4 t 68 2445","S 6 a 100 2446","S 6 l 562 100","S 4 h 68 2447","S 2 o 1825 2448","S 5 t 68 100","S 2 b 29 2449","S 5 c 2451 2450","S 5 g 42 2452","S 3 h 100 2453","S 3 l 100 2454","S 6 n 100 2455","S 6 n 42 2456","S 2 s 100 273","S 6 r 2458 2457","S 5 t 2460 2459","S 5 h 100 2461","S 3 t 230 2462","S 4 c 100 562","S 6 r 562 2463","S 4 p 100 2464","S 5 r 2466 2465","S 4 s 100 2467","S 5 h 100 2468","S 4 t 100 2469","S 6 n 68 2470","S 4 g 100 2471","S 3 t 42 100","S 3 g 100 756","S 6 a 100 2472","S 5 c 1980 100","S 6 o 2473 100","S 6 v 230 2474","S 4 p 68 2475","S 3 b 68 2476","S 3 h 2477 100","S 4 n 2478 1425","S 6 g 100 2479","S 6 g 68 2480","S 2 # 68 2481","S 4 n 100 256","S 3 f 42 2482","S 4 m 100 68","S 6 o 42 28","S 6 y 2484 2483","S 3 r 42 68","S 2 s 68 2485","S 6 n 2487 2486","S 4 t 42 68","S 4 v 42 2488","S 1 c 42 2489","S 3 m 82 2490","S 2 i 562 2491","S 3 i 100 2492","S 2 e 68 2493","S 1 r 29 2494","S 1 l 28 2495","S 1 a 29 2496","S 1 o 28 2497","S 3 g 28 29","S 2 r 230 29","S 5 b 230 29","S 5 h 2499 2498","S 3 p 42 2500","S 5 s 100 2501","S 4 s 2503 2502","S 3 h 100 2504","S 3 l 42 68","S 4 k 562 2505","S 1 e 100 2506","S 6 i 100 2507","S 5 n 1207 2508","S 6 e 2509 100","S 5 n 100 29","S 3 s 29 2510","S 4 z 230 2511","S 5 k 2513 2512","S 5 v 100 2514","S 6 e 68 2515","S 4 d 68 100","S 6 u 68 2516","S 4 d 100 2517","S 4 h 2519 2518","S 4 t 100 2520","S 2 o 68 2521","S 2 f 230 100","S 5 b 42 2069","S 2 b 100 2522","S 2 s 100 2523","S 2 g 42 29","S 6 s 29 2524","S 5 z 2526 2525","S 5 t 100 2527","S 5 h 100 2528","S 4 s 100 2529","S 4 b 68 2530","S 3 h 100 2213","S 6 u 2532 2531","S 3 f 100 2533","S 4 b 100 2534","S 4 g 42 2535","S 4 t 100 2536","S 5 t 2538 2537","S 5 n 100 2539","S 4 b 1416 2540","S 5 z 230 100","S 3 b 100 2541","S 5 h 100 562","S 4 g 230 2542","S 3 j 68 2543","S 4 v 2545 2544","S 6 o 100 2315","S 2 a 68 2546","S 4 p 100 2547","S 6 l 68 2548","S 6 r 100 68","S 4 v 100 2549","S 4 n 68 2550","S 3 l 68 42","S 3 h 42 2551","S 4 b 42 2552","S 3 g 42 2553","S 4 s 42 2554","S 2 l 68 2555","S 5 p 82 63","S 3 u 562 2556","S 4 c 562 100","S 3 k 68 2557","S 1 b 230 2558","S 1 u 29 2559","S 2 a 29 2560","S 3 u 29 2561","S 6 e 2563 2562","S 3 t 100 2564","S 6 e 2566 2565","S 6 s 100 2567","S 5 p 2569 2568","S 5 s 2570 100","S 4 s 100 29","S 4 d 29 2571","S 2 t 100 2572","S 3 c 29 2573","S 3 s 29 2574","S 2 p 100 29","S 1 d 100 2575","S 5 j 68 2576","S 6 i 100 2577","S 6 n 562 100","S 4 f 68 2578","S 6 a 68 100","S 6 i 2579 100","S 6 n 230 2580","S 2 i 2582 2581","S 5 l 29 100","S 5 p 1625 2583","S 5 g 2585 2584","S 2 s 1674 2586","S 4 p 100 2587","S 4 v 68 100","S 5 h 2588 100","S 4 c 68 100","S 5 b 100 2589","S 5 s 2591 2590","S 4 t 2592 100","S 4 s 100 2593","S 6 o 2073 100","S 5 s 230 100","S 4 c 100 2594","S 3 h 100 2595","S 3 l 230 100","S 4 p 562 100","S 5 s 100 2596","S 4 s 230 100","S 4 g 100 230","S 3 r 230 2597","S 6 u 100 2598","S 4 f 29 2599","S 3 r 29 2600","S 4 b 230 2601","S 3 n 100 230","S 2 i 68 29","S 4 c 1416 2602","S 6 p 100 2603","S 4 m 42 2604","S 6 n 2605 68","S 1 a 68 42","S 6 c 100 2606","S 4 d 42 2607","S 6 n 100 1353","S 2 r 68 2608","S 3 h 100 2609","S 2 h 68 2610","S 2 n 230 2611","S 1 k 28 2612","S 1 d 29 230","S 3 t 28 2613","S 6 o 2615 2614","S 4 g 2617 2616","S 3 f 29 2618","S 6 i 2620 2619","S 2 i 68 2621","S 5 h 68 2622","S 4 p 100 2623","S 3 k 2624 100","S 2 g 100 2625","S 5 u 68 2626","S 3 r 68 2627","S 6 o 2317 68","S 1 u 68 2628","S 1 m 100 2629","S 4 t 100 2630","S 6 o 68 2631","S 5 n 100 2632","S 5 p 100 68","S 6 r 100 2216","S 6 i 2634 2633","S 5 c 100 2635","S 2 s 100 2636","S 5 u 1891 100","S 4 g 100 2637","S 2 c 42 100","S 3 h 100 68","S 4 c 2638 100","S 4 t 100 2639","S 5 l 100 2640","S 4 s 100 562","S 3 b 230 100","S 3 k 29 2641","S 4 m 100 2642","S 5 z 230 2643","S 5 r 230 100","S 3 l 230 2644","S 6 i 1996 100","S 3 l 100 2645","S 4 g 100 2646","S 3 t 100 230","S 3 p 68 2647","S 3 v 100 2648","S 4 p 230 42","S 4 t 100 2649","S 3 p 2651 2650","S 3 p 100 1825","S 1 e 42 2652","S 2 t 100 2653","S 1 e 68 2654","S 5 s 29 2655","S 3 t 28 2656","S 1 a 28 2657","S 6 h 100 2658","S 5 n 230 2659","S 3 m 68 2660","S 1 r 100 42","S 4 t 2662 2661","S 3 l 29 2663","S 3 i 68 100","S 3 s 68 42","S 3 s 68 100","S 3 v 562 2664","S 2 n 562 100","S 1 a 68 100","S 5 h 68 2665","S 1 o 100 2666","S 6 e 2668 2667","S 6 r 2670 2669","S 5 f 2672 2671","S 6 u 68 100","S 4 d 2673 100","S 6 o 2675 2674","S 3 r 2676 100","S 3 n 1423 2677","S 5 t 2678 100","S 3 r 42 100","S 3 b 29 2679","S 4 f 100 2680","S 3 c 2073 2681","S 5 b 2683 2682","S 6 i 100 2684","S 5 l 100 2685","S 4 c 100 2686","S 6 m 68 2687","S 6 y 2689 2688","S 4 t 100 2690","S 6 b 100 230","S 2 t 68 2691","S 3 n 2693 2692","S 6 r 68 2694","S 2 n 68 42","S 1 d 68 2695","S 1 m 100 2696","S 6 o 29 2697","S 1 o 29 2698","S 1 i 28 2699","S 5 k 2701 2700","S 5 z 29 2702","S 3 s 68 2703","S 2 h 100 2704","S 2 m 68 2705","S 3 r 28 68","S 2 t 100 2706","S 6 # 68 2707","S 6 # 100 68","S 5 t 2709 2708","S 5 t 29 100","S 3 h 100 2710","S 3 x 100 29","S 5 s 2712 2711","S 6 o 68 2713","S 5 d 68 100","S 6 a 2715 2714","S 3 l 2717 2716","S 4 n 2719 2718","S 4 n 29 230","S 4 n 100 562","S 6 t 29 100","S 4 m 100 2299","S 3 z 230 2720","S 3 c 100 2721","S 3 r 68 100","S 3 m 100 2722","S 4 m 100 2723","S 6 l 230 2724","S 6 u 68 2725","S 3 t 100 2726","S 3 m 29 100","S 3 c 230 2727","S 3 v 68 2728","S 4 t 42 2729","S 6 r 42 68","S 4 l 42 230","S 3 v 68 2730","S 3 c 68 2731","S 3 c 29 2732","S 1 a 29 2733","S 3 r 29 2734","S 3 l 100 2735","S 6 s 100 2736","S 4 s 29 1860","S 3 n 562 2737","S 6 i 2739 2738","S 3 n 68 2740","S 5 h 2742 2741","S 6 o 68 1722","S 5 z 29 2743","S 1 n 68 2744","S 6 i 100 2745","S 6 u 562 2746","S 4 b 2747 100","S 6 i 68 2748","S 3 v 68 2749","S 5 c 2194 2750","S 5 k 100 2751","S 5 b 562 100","S 2 g 100 2752","S 5 c 562 100","S 3 v 100 2753","S 3 t 2754 100","S 6 o 68 29","S 5 m 100 2755","S 4 t 100 2756","S 4 s 100 2757","S 6 h 29 2758","S 4 k 68 2759","S 4 l 68 2760","S 4 s 42 2761","S 2 r 2763 2762","S 3 s 68 2764","S 2 e 230 29","S 3 i 28 2765","S 2 t 28 2766","S 4 c 29 2767","S 2 e 100 2768","S 2 o 2216 2769","S 4 c 2771 2770","S 3 h 29 68","S 2 o 100 2772","S 2 l 2774 2773","S 4 t 1287 68","S 5 j 29 2295","S 1 o 230 2775","S 1 s 100 2776","S 5 d 2778 2777","S 6 t 68 1204","S 6 l 68 100","S 5 u 2779 100","S 4 g 100 2780","S 5 n 230 2781","S 5 h 42 100","S 5 c 2782 100","S 5 p 100 562","S 3 z 230 2783","S 4 m 100 2784","S 6 w 68 2785","S 4 v 29 2786","S 2 # 2788 2787","S 4 c 42 2789","S 4 v 42 2790","S 2 u 562 2791","S 1 e 100 1425","S 3 t 68 2792","S 1 m 28 2793","S 2 i 28 2794","S 1 i 100 2795","S 2 u 29 2796","S 3 h 2798 2797","S 6 e 100 68","S 2 e 29 2799","S 2 e 100 68","S 5 k 2801 2800","S 4 m 68 2802","S 2 r 100 2803","S 6 o 100 2804","S 6 a 2806 2805","S 4 b 100 2807","S 2 s 2601 100","S 4 m 100 2808","S 2 f 100 2809","S 3 f 100 230","S 3 p 2811 2810","S 3 c 100 2812","S 4 d 100 2813","S 6 k 29 2814","S 4 v 230 2815","S 6 r 68 2816","S 4 v 68 230","S 3 d 42 2817","S 2 c 100 2818","S 2 a 68 2819","S 2 o 29 2820","S 3 b 28 2821","S 5 p 100 2822","S 4 s 29 2823","S 4 s 2824 100","S 5 m 100 68","S 1 t 29 68","S 1 o 100 2825","S 1 o 68 2826","S 5 s 562 68","S 2 n 100 2827","S 1 l 100 2828","S 5 k 562 2829","S 5 v 68 100","S 6 i 68 100","S 4 n 100 2830","S 5 h 29 100","S 5 t 2832 2831","S 5 s 230 2538","S 3 p 100 230","S 3 s 100 2748","S 4 z 68 2833","S 4 b 68 2834","S 4 n 68 1799","S 6 a 42 2835","S 3 b 100 2836","S 1 a 68 2837","S 2 a 29 2838","S 3 n 28 2839","S 2 s 100 2840","S 1 a 100 2841","S 3 p 100 2625","S 2 s 100 2842","S 3 s 68 2843","S 6 a 100 2844","S 3 m 2770 100","S 6 i 562 2845","S 2 f 100 2846","S 3 k 100 2847","S 4 t 230 100","S 3 l 68 2848","S 4 g 68 100","S 6 r 2850 2849","S 3 p 100 2851","S 2 o 2852 68","S 2 i 29 28","S 2 s 28 2853","S 1 m 100 2854","S 2 c 100 29","S 3 c 100 2855","S 1 a 68 1853","S 2 s 100 2856","S 5 v 100 2857","S 5 u 100 2858","S 5 g 100 2859","S 4 h 68 2860","S 4 n 100 1552","S 4 m 42 2861","S 2 g 100 2862","S 1 d 29 68","S 3 g 28 2863","S 5 m 2865 2864","S 2 g 68 2866","S 3 r 100 2867","S 5 n 100 2868","S 3 l 100 1227","S 3 r 100 2869","S 6 m 230 100","S 4 d 100 2870","S 2 e 2183 2871","S 2 c 28 240","S 5 b 100 2872","S 6 a 100 562","S 4 m 68 2873","S 2 a 100 2874","S 4 b 100 2875","S 5 c 2876 100","S 3 g 100 42","S 4 p 100 2877","S 2 l 2879 2878","S 3 r 100 2880","S 6 i 100 29","S 5 m 562 68","S 4 c 100 230","S 3 i 100 2881","S 5 s 2883 2882","S 1 a 230 68","S 5 s 100 68","S 1 c 68 2884","S 3 p 230 2885","S 1 a 68 2886","S 3 r 2183 2887","S 4 g 100 2888","S 4 s 2889 29","S 4 d 562 2890","S 4 d 100 2891","S 2 o 29 100","S 4 t 100 2892","S 5 c 100 68","S 3 m 562 2893","S 2 s 562 100","I 2894 b","S 4 b 2896 2895","S 3 m 2898 2897","S 1 c 2900 2899","S 4 t 2902 2901","S 4 # 2899 2903","P epsilon","S 2 r 2904 2899","P b","S 1 d 2899 2905","S 4 s 2899 2906","S 3 a 2899 2901","S 2 d 2899 2901","S 2 o 2908 2907","S 1 l 2910 2909","S 4 a 2901 2911","S 2 u 2912 2901","S 2 i 2913 2901","S 1 b 2899 2914","S 1 d 2899 2901","S 4 e 2899 2901","S 1 c 2913 2901","I 2915 c","S 4 k 2917 2916","S 4 h 2919 2918","S 5 i 2921 2920","S 4 e 2923 2922","S 3 s 2925 2924","P epsilon","S 6 # 2926 2920","S 4 i 2928 2927","S 3 s 2920 2929","S 3 t 2931 2930","S 2 t 2931 2932","S 1 # 2920 2933","S 4 c 2935 2934","S 3 s 2937 2936","S 3 m 2939 2938","S 2 0 2941 2940","P ch","S 5 o 2943 2942","S 1 o 2945 2944","S 4 y 2947 2946","S 5 e 2949 2948","S 5 a 2951 2950","S 5 a 2953 2952","S 3 x 2920 2954","P k","S 3 n 2956 2955","S 5 r 2939 2957","S 5 i 2959 2958","S 6 o 2939 2920","S 1 a 2961 2960","P t-s","S 4 z 2963 2962","S 5 r 2939 2964","S 5 i 2965 2920","S 3 a 2939 2966","S 3 c 2968 2967","S 6 l 2970 2969","S 1 p 2931 2920","S 1 0 2920 2931","S 5 k 2972 2971","S 2 v 2931 2973","S 5 o 2975 2974","S 5 l 2939 2976","S 6 d 2978 2977","S 1 0 2920 2939","S 3 i 2945 2979","S 2 l 2920 2945","S 4 g 2920 2980","S 2 s 2920 2931","P s","S 6 # 2920 2981","S 2 s 2939 2920","S 6 u 2983 2982","S 5 # 2931 2984","S 3 i 2970 2985","P sh","S 6 n 2987 2986","S 3 i 2931 2988","S 2 e 2990 2989","S 6 l 2992 2991","S 6 r 2939 2993","S 5 a 2995 2994","S 1 0 2997 2996","S 5 a 2920 2939","S 1 r 2945 2998","S 4 q 2920 2999","S 6 d 2939 3000","S 3 x 2920 3001","S 5 o 2970 2964","S 5 o 2931 3002","S 6 t 3004 3003","S 2 0 3006 3005","S 5 a 2970 2964","S 1 # 2931 3007","S 5 e 3009 3008","S 3 i 2939 3010","S 5 e 2931 3011","S 2 i 2931 2970","S 6 # 2931 2939","S 6 v 2931 3012","S 6 r 2931 3013","S 5 a 3014 2920","S 6 m 3015 2920","S 2 r 2945 3016","S 3 k 2920 3017","S 6 a 2920 3018","S 6 n 3020 3019","S 1 # 2964 3021","S 3 c 2931 3022","S 1 p 2970 2964","S 5 o 2970 3023","S 5 n 2964 3024","S 1 o 2931 3025","S 3 e 3027 3026","S 6 r 3029 3028","S 3 c 2939 3030","S 1 s 2939 3031","S 6 r 3033 3032","S 6 u 2970 2931","S 6 r 3034 2920","S 5 e 2939 2920","S 3 a 2945 3035","S 3 n 3037 3036","S 3 a 3038 2920","S 3 m 2939 3039","S 2 f 2970 3040","S 1 v 2964 2931","S 1 0 2931 3041","S 6 c 3043 3042","S 6 s 2964 3044","S 1 a 2931 3045","S 2 b 3047 3046","S 2 i 3049 3048","S 6 n 3051 3050","S 3 a 2939 3052","S 3 u 2939 3053","S 5 # 2931 3054","S 6 a 3056 3055","S 5 o 2939 2931","S 1 d 2931 2939","S 3 o 2945 2920","S 2 u 3058 3057","S 1 r 3059 2939","S 1 # 2939 2920","S 5 e 3061 3060","S 5 n 2964 3062","S 3 n 2931 3063","S 3 n 3065 3064","S 2 a 2931 2964","S 5 m 2964 3066","S 3 a 2964 2931","S 3 c 2939 3067","S 5 # 2939 3068","S 5 a 3070 3069","S 5 # 2931 2939","S 6 l 3072 3071","S 3 r 2931 2939","S 1 r 2931 3073","S 3 r 3074 2931","S 6 s 2931 3075","S 6 m 3076 2931","S 5 i 2939 2931","S 4 # 2939 3077","S 4 l 2920 2939","S 5 i 2964 2939","S 5 # 3079 3078","S 6 # 2939 3080","S 3 n 2931 2964","S 6 n 2970 3081","S 5 l 3083 3082","S 5 n 3084 2964","S 6 u 2931 3085","S 2 o 3087 3086","S 1 # 3088 2931","S 5 i 3090 3089","S 2 m 2939 2931","S 6 t 3092 3091","S 2 r 2970 3093","S 3 e 2939 3094","S 5 a 2931 3095","S 1 r 2931 3096","S 5 e 2939 2931","S 1 n 3097 2939","S 6 g 2964 3098","S 3 i 2931 3099","S 3 n 2964 3100","S 3 r 2964 3101","S 1 a 3103 3102","S 6 e 2964 3104","S 1 v 2931 2964","S 5 p 2964 3105","S 2 u 3107 3106","S 3 r 3108 2931","S 6 e 2939 3109","S 1 c 3110 2939","S 6 n 2931 2939","S 6 m 3112 3111","S 2 a 2939 3113","S 3 a 2931 2939","S 1 # 2931 3114","S 1 k 2931 3115","S 6 n 2931 3116","S 4 t 3117 2939","S 5 n 3119 3118","S 3 a 2931 2964","S 3 r 2939 3120","S 3 a 2931 2970","S 5 s 3122 3121","S 3 i 2964 3099","S 3 a 2964 3123","S 6 t 2964 3124","S 5 i 3126 3125","S 5 a 3127 2931","S 5 a 2931 3056","S 6 n 2939 3128","S 2 h 2931 2939","S 2 s 2939 3129","S 3 o 2939 3130","S 1 # 2970 3131","S 3 r 3133 3132","S 5 e 2931 2939","S 2 i 2931 3134","S 3 i 3135 2939","S 3 i 2964 3136","S 2 m 2939 3137","S 2 0 2931 3138","S 6 # 2964 3139","S 6 t 2920 2964","S 6 y 2964 3140","S 5 r 3141 2964","S 5 a 3143 3142","S 3 a 3145 3144","S 1 p 2931 2970","S 6 a 2939 3146","S 6 d 2931 3147","S 1 # 2931 2939","S 3 o 2970 2931","S 2 o 2931 2939","S 2 a 2931 2939","S 5 a 3148 2931","S 2 d 2920 2939","S 5 c 3150 3149","S 6 s 2931 3151","S 6 s 2964 3152","S 6 o 2964 3153","S 1 m 3155 3154","S 6 e 2964 3156","S 6 w 3158 3157","S 6 e 2939 3159","S 3 r 2939 3160","S 6 e 2931 3161","S 3 u 2939 2931","S 6 v 2931 3162","S 6 r 2931 2939","S 5 o 3164 3163","S 1 0 2964 2931","S 1 m 2931 3165","S 3 a 2970 2964","S 3 i 2964 3166","S 2 a 2964 3167","S 6 l 2964 2931","S 6 a 2964 3168","S 3 o 3170 3169","S 3 a 2920 2931","S 1 0 2939 3171","S 2 s 2939 3172","S 2 m 2970 3173","S 1 l 2931 3174","S 5 u 2964 3175","S 3 o 2964 3176","S 6 o 2931 3177","S 2 e 2964 3178","S 6 l 3179 2964","S 6 v 2964 2931","S 2 r 3181 3180","S 5 u 2931 2939","S 3 r 3183 3182","S 2 a 2931 3184","S 1 s 2970 2993","S 6 c 2931 3185","S 5 k 2931 3186","S 6 # 3187 2931","S 3 l 2931 3188","S 2 d 2964 3189","S 3 i 2964 3190","S 2 l 3192 3191","S 1 # 2931 3193","S 6 u 2970 3194","S 1 # 2970 2939","S 2 m 2931 3195","S 3 u 3197 3196","S 5 m 3199 3198","S 3 a 2964 3200","S 6 a 3201 2964","S 5 r 3203 3202","S 1 p 2964 2931","S 2 y 2920 3204","S 5 # 2939 3205","S 3 a 3049 2939","S 3 u 3207 3206","S 3 o 3208 2931","S 2 o 3210 3209","S 6 # 2970 2931","S 3 e 2964 3211","S 1 0 2931 2964","S 1 c 2931 2964","S 1 l 2964 2931","S 3 e 2964 3212","S 2 r 2964 3213","S 5 # 3215 3214","S 5 l 2939 3216","S 3 a 3218 3217","S 6 r 2939 2931","S 2 r 2939 2931","S 1 c 2939 3219","S 1 # 2939 2931","S 1 # 3220 2964","S 2 l 2964 3221","S 1 # 3045 2964","S 3 y 2939 3222","S 1 # 2931 3223","S 6 e 2939 3224","S 3 i 2931 3225","S 1 # 3207 2931","S 2 r 3227 3226","S 6 a 2931 2964","S 1 s 2964 3228","S 6 l 2939 3229","S 1 t 2931 3230","S 5 t 2931 2939","S 3 o 2939 2931","S 1 a 2931 3231","S 3 i 2931 3232","S 1 f 2964 3233","S 5 u 2931 3234","S 1 a 2920 3235","S 2 a 2931 3236","S 3 o 2931 2939","S 6 e 2964 3237","S 5 o 3239 3238","S 1 o 2939 3240","S 1 # 2931 3197","S 1 t 2964 3241","S 6 i 3051 3242","S 6 # 2931 3243","S 1 u 2939 3244","S 3 a 3245 2964","S 2 n 2939 3246","S 1 0 2939 2931","S 3 a 2939 3247","S 2 f 2964 3248","S 1 # 3250 3249","S 1 r 2939 3251","S 5 t 2964 3252","S 5 m 2931 2939","S 5 y 2931 3253","S 3 i 2931 3254","S 1 # 2964 3255","S 2 m 2931 3256","S 2 a 2931 3257","S 1 g 2964 3258","S 6 a 2931 2939","S 2 i 2931 2939","S 1 r 2964 3259","S 5 # 2964 2931","I 3260 d","S 4 # 3262 3261","S 4 d 3264 3263","S 3 e 3266 3265","S 4 g 3268 3267","S 2 g 3270 3269","P d","S 2 k 3272 3271","S 4 t 3274 3273","S 5 e 3276 3275","S 3 o 3276 3277","S 3 o 3265 3276","S 2 h 3279 3278","P t","S 4 j 3276 3280","S 5 # 3282 3281","S 5 r 3265 3283","P epsilon","S 2 b 3276 3284","S 2 p 3272 3285","S 1 t 3265 3286","S 3 d 3288 3287","S 1 # 3265 3289","S 3 u 3265 3270","S 5 a 3265 3290","S 3 e 3292 3291","S 2 c 3272 3293","S 1 g 3265 3272","S 4 u 3295 3294","S 2 e 3297 3296","S 5 h 3265 3298","S 5 o 3265 3276","S 5 y 3276 3299","S 5 y 3265 3300","S 2 s 3302 3301","S 4 z 3303 3265","S 2 0 3265 3304","S 4 e 3306 3305","S 4 y 3276 3307","S 1 o 3265 3308","S 5 i 3276 3309","S 6 r 3276 3310","S 2 f 3272 3311","S 1 s 3272 3312","S 6 # 3265 3313","S 5 a 3315 3314","S 1 # 3265 3316","S 1 b 3265 3317","S 6 # 3265 3318","S 5 k 3265 3276","S 2 m 3276 3319","S 2 p 3265 3276","S 2 x 3272 3265","S 1 r 3272 3320","S 6 k 3265 3321","S 5 l 3323 3322","S 1 g 3321 3324","S 1 w 3265 3325","S 1 l 3265 3326","S 1 p 3276 3327","S 6 d 3276 3328","S 1 a 3272 3329","P jh","S 3 e 3330 3265","S 3 o 3321 3331","S 3 i 3321 3265","S 6 d 3265 3332","S 5 d 3265 3333","S 5 r 3265 3334","S 2 w 3265 3335","S 1 n 3272 3336","S 1 # 3265 3337","S 2 h 3321 3338","S 2 a 3340 3339","S 1 m 3265 3341","S 4 i 3265 3342","S 1 s 3344 3343","S 1 i 3265 3345","S 1 0 3321 3346","S 6 t 3265 3347","S 1 r 3348 3265","S 6 # 3265 3349","S 1 s 3265 3350","S 5 # 3276 3265","S 2 p 3276 3351","S 2 h 3265 3276","S 1 o 3265 3352","S 5 c 3265 3321","S 2 i 3265 3353","S 2 i 3276 3265","S 1 h 3276 3265","S 6 # 3265 3354","S 1 c 3276 3355","S 1 u 3265 3272","S 3 n 3321 3265","S 2 a 3276 3356","S 2 l 3276 3357","S 5 r 3276 3265","S 2 f 3276 3358","S 3 i 3360 3359","S 2 r 3276 3361","S 2 r 3265 3276","S 5 e 3362 3276","S 1 # 3276 3265","I 3363 e","S 6 0 3365 3364","S 4 r 3367 3366","S 4 # 3369 3368","S 4 a 3371 3370","S 5 r 3373 3372","S 4 r 3375 3374","S 3 e 3377 3376","S 3 e 3379 3378","S 5 r 3381 3380","S 5 i 3383 3382","S 3 b 3385 3384","S 4 n 3387 3386","S 3 e 3389 3388","S 3 n 3391 3390","S 2 r 3393 3392","S 4 e 3395 3394","S 2 r 3397 3396","S 5 u 3399 3398","S 3 w 3385 3400","S 3 e 3389 3401","S 6 n 3403 3402","S 1 0 3405 3404","P eh1","S 3 e 3407 3406","S 3 e 3393 3408","S 2 e 3409 3399","P ih1","S 3 r 3411 3410","S 2 o 3413 3412","S 2 p 3393 3414","P iy1","S 4 i 3416 3415","S 3 r 3417 3399","S 2 f 3418 3393","S 1 # 3420 3419","S 5 d 3422 3421","P epsilon","S 3 b 3424 3423","S 5 o 3426 3425","S 6 a 3428 3427","S 3 e 3389 3399","S 3 h 3385 3429","S 3 p 3399 3430","S 4 l 3432 3431","S 1 # 3393 3433","S 3 m 3435 3434","S 3 w 3437 3436","S 3 k 3439 3438","S 2 d 3441 3440","S 2 i 3399 3442","S 1 i 3444 3443","S 2 n 3393 3445","S 1 0 3447 3446","S 5 r 3449 3448","S 1 0 3451 3450","S 1 # 3393 3452","S 1 p 3453 3393","S 5 a 3455 3454","S 6 h 3457 3456","S 3 h 3385 3458","S 1 u 3444 3459","S 6 d 3399 3385","S 5 e 3461 3460","S 1 0 3463 3462","S 6 o 3465 3464","S 3 l 3399 3466","S 2 o 3399 3467","S 6 a 3468 3385","S 4 k 3470 3469","S 3 i 3472 3471","S 2 r 3393 3473","S 2 g 3475 3474","S 1 a 3455 3476","S 3 y 3477 3399","P y-uw1","S 2 n 3479 3478","S 2 t 3444 3480","S 2 b 3399 3481","S 1 n 3399 3455","S 2 a 3399 3482","S 1 t 3399 3483","P iy","S 1 d 3393 3484","S 3 i 3486 3485","S 3 r 3488 3487","S 5 g 3490 3489","S 6 a 3385 3491","S 2 p 3492 3399","S 6 a 3444 3493","S 4 d 3444 3393","S 4 m 3385 3494","S 4 n 3389 3495","P ah","S 1 0 3497 3496","S 5 t 3498 3393","S 3 t 3500 3499","S 6 r 3393 3399","S 5 a 3502 3501","S 6 d 3399 3503","S 6 # 3505 3504","S 3 a 3385 3506","S 6 e 3508 3507","S 3 t 3389 3509","S 2 a 3389 3510","S 6 y 3385 3511","S 3 s 3385 3512","S 3 t 3514 3513","S 1 # 3385 3515","S 3 t 3517 3516","S 1 # 3399 3518","S 4 d 3393 3519","S 3 i 3521 3520","S 3 r 3522 3455","S 2 l 3522 3523","S 1 m 3399 3524","S 3 h 3399 3525","S 3 t 3526 3399","S 2 z 3444 3527","S 1 i 3529 3528","S 2 e 3399 3530","S 1 h 3399 3531","S 2 s 3533 3532","S 5 t 3535 3534","S 5 t 3537 3536","S 4 w 3539 3538","S 4 v 3541 3540","S 3 r 3543 3542","S 6 h 3545 3544","S 6 o 3385 3546","S 5 m 3444 3399","S 6 t 3444 3399","P ih","S 6 # 3393 3547","S 5 s 3549 3548","S 3 r 3551 3550","S 2 # 3385 3552","S 3 d 3385 3553","S 1 # 3385 3554","S 5 u 3556 3555","S 6 # 3558 3557","S 1 0 3560 3559","S 1 # 3546 3399","S 3 i 3399 3385","S 6 u 3399 3561","S 3 d 3563 3562","S 1 0 3385 3564","S 1 i 3385 3565","S 2 i 3389 3566","S 1 m 3385 3567","S 3 t 3399 3568","S 4 t 3570 3569","S 4 d 3455 3571","S 3 t 3573 3572","S 3 a 3399 3574","S 2 s 3455 3575","S 1 a 3576 3399","S 1 s 3393 3577","S 1 # 3578 3455","S 2 t 3399 3579","P eh","S 1 o 3455 3580","P ey1","S 2 e 3582 3581","S 1 a 3444 3583","S 2 d 3444 3584","S 1 d 3399 3585","S 2 o 3444 3399","S 2 y 3399 3586","S 1 b 3399 3587","S 1 e 3444 3588","S 1 s 3444 3393","S 5 s 3590 3589","S 6 # 3592 3591","S 4 n 3594 3593","S 4 s 3596 3595","S 4 u 3598 3597","S 3 n 3600 3599","S 4 u 3602 3601","S 5 i 3604 3603","S 3 v 3606 3605","S 5 n 3608 3607","S 6 n 3609 3399","S 3 l 3399 3610","S 3 h 3385 3399","S 5 e 3611 3393","S 5 b 3613 3612","S 6 u 3385 3614","S 3 h 3616 3615","S 5 g 3618 3617","S 3 h 3393 3385","S 3 r 3620 3619","S 1 m 3385 3621","S 2 e 3623 3622","S 1 0 3624 3399","S 1 0 3626 3625","S 3 i 3399 3627","S 6 # 3629 3628","S 6 g 3631 3630","S 3 p 3399 3632","S 6 z 3399 3633","S 1 0 3634 3399","S 2 x 3389 3399","S 3 p 3389 3385","S 2 m 3389 3635","S 6 o 3637 3636","S 3 f 3399 3385","S 4 w 3639 3638","S 3 k 3455 3640","S 4 s 3642 3641","S 3 c 3644 3643","S 2 a 3522 3645","S 3 u 3647 3646","S 2 t 3455 3648","S 2 n 3455 3399","S 2 s 3393 3649","S 3 o 3399 3650","S 2 r 3455 3399","S 2 r 3522 3651","S 3 b 3399 3652","S 3 s 3399 3653","S 1 o 3444 3654","S 2 m 3444 3399","S 2 u 3399 3655","S 1 e 3399 3656","S 1 d 3399 3657","S 1 u 3444 3658","S 4 n 3660 3659","S 6 # 3662 3661","S 4 n 3664 3663","S 4 n 3666 3665","S 4 t 3668 3667","S 5 c 3670 3669","S 1 o 3672 3671","S 6 # 3455 3399","S 3 d 3674 3673","S 3 d 3676 3675","S 5 e 3678 3677","P uw1","S 4 n 3680 3679","S 6 i 3444 3681","S 5 a 3444 3682","S 6 e 3444 3683","S 2 t 3493 3684","S 5 t 3399 3685","S 5 m 3686 3399","S 1 0 3687 3399","S 2 # 3524 3399","S 3 h 3399 3688","S 4 l 3455 3393","S 2 b 3690 3689","S 2 a 3399 3691","S 6 a 3385 3692","S 5 n 3694 3693","S 6 t 3385 3695","S 5 c 3444 3696","S 6 a 3399 3393","S 1 0 3697 3393","S 1 0 3699 3698","S 6 # 3385 3399","S 6 # 3399 3700","S 3 w 3600 3701","S 6 p 3494 3702","S 3 h 3703 3399","S 2 # 3705 3704","S 3 h 3399 3706","S 3 h 3708 3707","S 3 i 3710 3709","S 6 c 3494 3711","S 3 d 3444 3399","S 3 s 3522 3712","S 3 i 3399 3713","S 6 v 3399 3714","S 1 0 3385 3389","S 1 a 3399 3715","S 2 n 3385 3399","S 4 s 3717 3716","S 2 v 3437 3718","S 3 u 3720 3719","S 4 e 3399 3721","S 2 n 3722 3399","S 3 z 3522 3723","S 2 i 3522 3724","S 1 o 3522 3725","S 1 e 3455 3726","S 1 # 3399 3455","S 2 r 3728 3727","S 2 l 3393 3729","S 2 o 3455 3730","S 1 e 3522 3731","S 2 b 3399 3732","S 3 w 3600 3399","S 1 e 3444 3399","S 1 t 3399 3733","S 1 y 3399 3734","S 1 e 3399 3735","S 2 f 3444 3736","S 4 l 3738 3737","S 5 e 3740 3739","S 6 i 3385 3741","S 4 y 3399 3742","S 4 s 3744 3743","S 6 s 3746 3745","S 4 t 3748 3747","S 1 # 3385 3749","S 5 l 3751 3750","S 1 # 3753 3752","S 1 f 3385 3754","S 1 e 3455 3755","S 4 n 3757 3756","S 6 a 3455 3385","S 4 x 3759 3758","S 4 m 3761 3760","S 3 t 3762 3399","S 5 t 3762 3399","S 3 b 3455 3763","S 6 l 3764 3399","S 4 y 3524 3765","S 6 w 3455 3766","S 5 s 3399 3762","S 6 l 3385 3767","S 6 v 3494 3444","S 3 d 3399 3768","S 6 l 3399 3524","S 6 b 3393 3399","S 6 t 3444 3769","S 2 0 3524 3770","S 5 m 3393 3771","S 3 r 3399 3393","S 3 g 3399 3772","S 2 b 3385 3773","S 5 t 3393 3774","S 6 d 3444 3393","S 5 v 3385 3393","S 5 l 3776 3775","S 3 b 3393 3777","S 2 b 3385 3778","S 6 i 3385 3393","S 3 z 3780 3779","S 3 u 3762 3399","S 3 p 3399 3385","S 6 p 3385 3781","S 6 s 3494 3522","S 3 d 3494 3782","S 2 e 3399 3385","S 6 o 3385 3783","S 1 # 3785 3784","S 2 w 3385 3786","S 2 r 3399 3522","S 3 p 3399 3787","S 3 v 3399 3788","S 1 a 3790 3789","S 6 s 3399 3385","S 1 # 3792 3791","S 3 d 3794 3793","S 3 s 3455 3795","S 1 # 3600 3796","S 3 l 3455 3797","S 2 q 3524 3399","S 4 y 3399 3798","S 1 e 3522 3799","S 3 s 3522 3800","S 2 e 3522 3801","S 2 i 3522 3385","S 1 i 3455 3802","S 2 h 3455 3385","S 1 e 3455 3385","S 4 s 3803 3393","S 3 r 3385 3455","S 2 s 3522 3804","S 3 j 3399 3805","S 1 s 3806 3399","S 2 u 3399 3807","S 1 m 3399 3808","S 1 n 3444 3809","S 4 w 3811 3810","S 5 y 3813 3812","S 5 d 3815 3814","S 6 # 3817 3816","S 1 # 3819 3818","S 4 w 3600 3820","S 4 u 3822 3821","S 6 o 3824 3823","S 6 l 3455 3825","S 3 m 3455 3826","S 4 s 3828 3827","S 3 u 3399 3829","S 3 m 3455 3830","S 4 w 3832 3831","S 6 o 3385 3833","S 2 p 3399 3834","S 2 d 3835 3399","S 5 n 3385 3836","S 6 e 3455 3399","S 4 t 3837 3399","S 6 i 3455 3838","S 4 y 3840 3839","S 2 # 3385 3841","S 4 l 3843 3842","S 6 g 3385 3844","P oy1","S 3 d 3600 3845","S 3 j 3600 3385","S 5 a 3847 3846","S 5 a 3455 3848","S 5 e 3494 3849","S 5 j 3524 3850","S 6 v 3393 3851","S 3 r 3852 3524","S 3 w 3854 3853","S 3 c 3399 3855","S 6 # 3856 3393","S 6 u 3858 3857","S 6 a 3444 3393","S 6 i 3393 3859","S 6 o 3385 3860","S 2 t 3385 3861","S 3 a 3385 3862","S 1 0 3389 3399","S 1 # 3385 3399","S 6 r 3399 3863","S 3 r 3393 3864","S 2 t 3399 3389","S 2 t 3385 3522","S 1 l 3399 3389","S 6 # 3389 3865","S 3 z 3389 3866","S 6 d 3399 3867","S 2 r 3385 3399","S 2 n 3399 3868","S 2 s 3385 3399","S 4 d 3870 3869","S 4 d 3455 3871","S 3 c 3455 3872","S 3 h 3874 3873","S 3 i 3876 3875","S 4 m 3455 3877","S 1 a 3399 3522","S 3 l 3879 3878","S 2 a 3522 3880","S 2 p 3455 3881","S 2 n 3393 3882","S 2 h 3522 3883","S 3 i 3399 3884","S 2 a 3444 3399","S 2 r 3399 3885","S 1 o 3399 3886","S 1 a 3444 3887","S 4 o 3889 3888","S 1 # 3891 3890","S 5 l 3893 3892","S 6 # 3399 3455","S 5 b 3455 3894","S 6 o 3896 3895","S 6 s 3399 3897","S 2 y 3393 3898","S 4 w 3900 3899","S 4 s 3902 3901","S 1 # 3904 3903","S 4 o 3444 3905","S 3 r 3762 3399","S 3 n 3455 3906","S 2 i 3399 3907","S 6 h 3730 3908","S 1 r 3385 3909","S 4 c 3385 3910","S 1 # 3385 3911","S 1 # 3385 3912","S 3 s 3914 3913","S 1 a 3576 3915","S 5 s 3917 3916","S 4 l 3790 3399","S 1 o 3455 3918","S 5 z 3399 3919","S 1 a 3920 3399","S 6 # 3399 3385","S 1 e 3455 3921","S 2 # 3923 3922","S 5 e 3399 3924","S 5 a 3494 3925","S 4 v 3927 3926","S 5 i 3929 3928","S 5 i 3931 3930","S 3 l 3933 3932","S 4 j 3494 3934","S 6 l 3936 3935","S 5 e 3393 3937","S 5 o 3494 3385","S 6 o 3399 3938","S 6 f 3393 3939","S 2 f 3524 3399","S 6 i 3941 3940","S 5 t 3385 3393","S 6 l 3393 3399","S 1 # 3393 3444","S 6 o 3943 3942","S 5 s 3385 3393","S 6 l 3444 3393","S 3 l 3944 3393","S 1 s 3385 3945","S 1 l 3947 3946","S 3 p 3399 3948","S 1 # 3399 3949","S 3 j 3385 3950","S 2 # 3568 3494","S 6 s 3952 3951","S 1 d 3399 3953","S 4 y 3955 3954","S 3 w 3957 3956","S 4 z 3522 3958","S 3 g 3455 3959","S 3 r 3961 3960","P y-uw","S 2 o 3963 3962","S 2 l 3399 3455","S 2 t 3399 3964","S 1 z 3522 3965","S 2 a 3522 3966","S 2 u 3522 3385","S 3 p 3968 3967","S 2 t 3393 3444","S 1 w 3522 3969","S 2 i 3399 3970","S 2 n 3399 3971","S 1 r 3399 3972","S 2 b 3533 3973","S 6 # 3975 3974","S 3 g 3399 3976","S 6 # 3600 3977","S 5 e 3979 3978","S 5 d 3981 3980","S 6 # 3983 3982","S 6 # 3985 3984","S 3 t 3385 3986","S 3 u 3385 3987","S 6 d 3455 3988","S 2 l 3393 3989","S 4 s 3991 3990","S 2 s 3385 3992","S 3 o 3399 3993","S 3 r 3385 3994","S 3 n 3455 3995","S 4 n 3455 3996","S 3 o 3399 3997","S 2 n 3385 3998","S 3 l 3399 3999","S 1 # 3385 4000","S 3 c 3455 4001","S 1 # 3385 4002","S 3 u 3385 4003","S 3 g 4005 4004","S 3 v 3385 4006","S 1 r 3385 3455","S 5 c 3385 3399","S 2 v 4007 3399","S 2 n 3385 3437","S 2 t 3455 4008","S 5 e 3399 3455","S 5 a 3455 3399","S 2 t 3399 4009","S 4 n 4011 4010","S 4 o 4013 4012","S 3 k 4015 4014","S 5 i 4017 4016","S 4 c 4019 4018","S 6 a 3393 4020","S 5 u 4022 4021","S 6 c 3385 4023","S 6 r 4025 4024","S 6 l 3444 3385","S 3 s 3600 4026","S 5 a 4027 3600","S 5 e 4029 4028","S 6 i 3455 4030","S 4 c 3494 4031","S 6 i 3522 4032","S 6 u 3399 4033","S 6 s 3393 4034","S 6 t 4036 4035","S 2 c 3444 4037","S 5 f 4039 4038","S 5 l 3385 3393","S 6 e 3393 3385","S 2 d 3385 4040","S 5 y 4042 4041","S 5 t 4043 3399","S 6 l 4045 4044","S 6 r 3399 4046","S 6 a 3399 4047","S 2 p 3385 4048","S 1 0 3385 3399","S 3 f 3399 4049","S 4 e 3399 4050","S 3 k 4052 4051","S 1 # 3399 4053","S 2 e 3600 3399","S 4 a 3444 4054","S 3 h 4056 4055","S 1 e 3600 4027","S 2 b 4027 3600","S 2 c 4058 4057","S 3 n 3522 3455","S 2 s 4060 4059","S 1 p 3494 4061","S 2 o 3522 3494","S 3 g 3455 4062","S 2 a 3455 4063","S 1 r 3455 4064","S 1 a 3399 4065","S 1 o 3399 4066","S 1 c 3444 4067","S 1 i 3444 4068","S 1 # 4070 4069","S 5 e 4072 4071","S 1 # 4074 4073","S 2 c 3600 4075","S 3 r 3600 4076","S 6 l 3600 3399","S 6 # 4078 4077","S 3 f 4080 4079","S 3 o 3399 4081","S 3 w 4083 4082","S 1 # 4085 4084","S 5 y 3455 4086","S 2 l 4088 4087","S 3 l 3385 3455","S 3 g 4090 4089","S 2 i 3393 4091","S 6 k 3385 4092","S 6 l 4094 4093","S 3 l 3385 4095","S 4 u 3399 4096","S 6 a 3522 4097","S 4 n 3455 4098","S 3 r 3385 4099","S 3 u 4101 4100","S 1 # 4103 4102","S 2 o 3399 4104","S 2 i 3385 4105","S 1 i 3385 3455","S 4 d 3522 4106","S 1 d 3385 4107","S 3 k 4109 4108","S 2 d 3455 4110","S 3 r 3455 4111","S 5 e 3399 3437","S 1 q 3455 4112","S 2 c 4113 3596","S 6 c 4115 4114","S 5 g 4117 4116","S 5 t 4119 4118","S 5 r 3399 4120","S 5 r 3385 3524","S 6 e 3524 3393","S 6 c 3385 4121","S 6 s 3494 3385","S 4 g 4123 4122","S 5 e 3455 4124","S 6 r 3385 4125","S 6 o 4127 4126","S 6 c 3522 3455","S 6 s 3393 3455","S 5 e 3389 4128","S 5 e 3444 4129","S 3 j 3600 3437","P uw","S 4 c 4131 4130","S 6 r 4133 4132","S 6 r 4135 4134","S 4 g 3494 3455","S 6 u 3389 3385","S 3 s 4136 3399","S 6 c 3444 3399","S 1 t 3385 4137","S 3 r 3444 4138","S 3 d 3393 4139","S 3 l 3393 4140","S 3 l 3393 3385","S 1 t 3385 3393","S 1 0 4142 4141","S 6 l 3385 3399","S 6 y 3399 4143","S 6 t 3385 4144","S 3 g 3522 3385","S 2 r 3389 3399","S 6 s 4146 4145","S 6 # 3385 4147","S 6 e 3399 3385","S 4 a 4149 4148","S 3 v 4151 4150","S 2 c 3399 4152","S 3 m 3399 4153","S 4 o 3444 4154","S 3 z 3455 4155","S 2 t 3399 3455","S 3 p 3455 4156","S 1 o 3524 3455","S 2 a 3385 4157","S 4 p 3385 3522","S 3 r 4159 4158","S 3 h 3455 4160","S 1 a 3455 3385","S 1 i 3522 3455","S 3 a 3399 4161","S 2 g 3399 3444","S 1 z 3444 4162","S 1 r 3882 4163","S 5 i 4165 4164","S 3 o 3399 4166","S 4 u 4168 4167","S 4 k 3494 4169","S 6 l 3393 4170","S 3 d 3444 4171","S 6 c 3399 4172","S 2 s 3600 4173","S 2 n 4175 4174","S 3 a 3399 4176","S 3 h 3385 4177","S 6 t 3522 4178","S 3 u 4049 4179","S 1 # 3385 4180","S 2 o 3522 4181","S 5 c 4183 4182","S 3 u 4185 4184","S 5 a 4187 4186","S 1 l 3455 4188","S 1 a 3385 3522","S 1 # 4190 4189","S 6 r 3385 3455","S 3 c 3393 4191","S 6 e 4193 4192","S 3 n 3455 4194","S 3 l 3455 3399","S 3 j 3385 4195","S 3 u 3399 4196","S 6 n 3399 3385","S 3 l 3455 4197","S 2 s 3385 4198","S 4 l 4200 4199","S 2 q 3385 4201","S 6 a 4203 4202","S 2 p 3385 4204","S 3 r 3385 4205","S 1 d 3385 4206","S 1 o 3522 4207","S 3 w 3385 4208","S 3 v 3455 4209","S 1 o 3455 3522","S 2 g 3522 3455","S 3 g 3455 4210","S 6 r 3455 4211","S 1 s 3455 3399","S 4 m 4213 4212","S 4 l 3455 4214","S 6 e 4216 4215","S 6 l 3389 4217","S 6 # 4219 4218","S 3 o 3399 4220","S 3 l 4222 4221","S 6 m 3494 4223","S 5 p 4225 4224","S 6 o 3385 3494","S 5 i 4227 4226","S 6 n 3385 4228","S 6 y 3455 4229","S 5 m 3522 3385","S 5 a 3389 4230","S 5 a 3385 3389","S 4 g 4232 4231","S 5 u 3494 4233","S 4 s 4235 4234","S 4 f 3385 4236","S 4 m 3393 4237","S 4 m 3444 3455","S 5 n 3524 3399","S 1 l 4239 4238","S 5 n 3399 3385","S 3 p 3393 4240","S 6 a 3393 4241","S 5 t 4243 4242","S 5 d 4245 4244","S 6 i 3399 3385","S 3 s 3399 4246","S 3 d 3385 4247","S 3 t 3399 3385","S 3 t 3792 4248","S 4 o 3444 4249","S 3 y 3399 4250","S 1 # 4251 3399","S 1 u 3524 3399","S 1 a 4252 3399","S 3 y 3399 4253","S 4 e 3399 4254","S 3 x 3455 4255","S 3 g 3455 4256","S 4 c 3385 4257","S 1 b 3522 4258","S 2 o 3494 3522","S 1 u 3455 4259","S 3 l 4260 3399","S 1 s 3444 4261","S 1 t 3393 4262","S 4 y 3399 4263","S 6 a 4265 4264","S 2 p 4267 4266","S 4 c 4269 4268","S 5 m 3393 4270","S 3 o 3399 4271","S 3 k 3399 4272","S 5 r 3393 4273","S 6 l 4274 3399","S 3 l 3600 3399","S 6 s 4276 4275","S 6 a 3455 4277","S 3 u 3399 4278","S 6 # 3522 4279","S 1 r 3522 3385","S 2 n 4281 4280","S 3 b 4283 4282","S 2 e 3522 3385","S 3 o 4285 4284","S 6 e 4287 4286","S 3 o 3399 4288","S 2 q 3385 3399","S 5 o 3385 4289","S 2 e 3385 4290","S 1 b 3522 4291","S 3 m 3385 4292","S 6 l 3385 4293","S 1 o 3393 4294","S 4 n 4296 4295","S 4 n 4298 4297","S 6 n 3455 4299","S 3 z 3385 3600","S 2 s 3385 4300","S 4 s 4302 4301","S 4 s 3385 3455","S 6 i 3385 4303","S 3 f 3522 4304","S 2 h 3399 4305","S 1 d 3385 4306","S 2 o 3399 4307","S 2 c 3385 4308","S 1 a 3385 3399","S 6 r 4310 4309","S 4 l 4311 3385","S 3 v 3455 4312","S 3 m 3389 4313","S 2 r 3385 4314","S 5 a 3399 3579","S 4 q 4316 4315","S 5 b 4318 4317","S 4 v 3494 4319","S 5 e 3385 4320","S 5 t 3385 4321","S 6 r 3455 4322","S 5 u 4324 4323","S 5 e 3393 4325","S 6 a 4327 4326","S 5 l 3444 4328","S 6 e 3522 4329","S 6 l 3494 4330","S 4 p 4332 4331","S 6 e 3385 3389","S 6 m 3393 4333","S 6 m 3385 3455","S 5 e 3494 4334","S 6 t 3455 4335","S 5 o 4336 3385","S 4 q 4338 4337","S 5 r 3494 4339","S 5 i 3455 4340","S 4 c 3455 4341","S 6 n 3455 4342","S 4 s 3385 4343","S 4 l 4345 4344","S 3 c 4347 4346","S 3 n 3444 3393","S 2 t 3393 4348","S 6 t 3943 3393","S 2 a 4349 3399","S 3 b 4350 3399","S 3 p 3399 4351","S 6 a 3385 3399","S 3 c 3399 4352","S 3 s 3385 4353","S 6 l 4355 4354","S 3 i 3399 4356","S 1 a 3444 4357","S 3 r 3524 3399","S 2 n 3393 3399","S 3 f 3399 4358","S 4 y 3399 4359","S 3 i 3399 4360","S 3 c 3455 4361","S 4 x 3385 4362","S 3 p 3494 4363","S 1 a 4365 4364","S 2 a 4366 3399","S 1 n 3444 4367","S 1 l 3444 4368","S 6 n 4370 4369","S 6 c 4372 4371","S 2 s 3385 4373","S 3 u 4375 4374","S 4 u 3399 4376","S 5 h 4378 4377","S 5 k 4379 3385","S 5 x 4380 3399","S 4 s 4382 4381","S 5 l 3444 4383","S 5 d 3393 4384","S 3 n 3455 3399","S 5 i 4386 4385","S 5 e 3399 4387","S 3 g 4389 4388","S 5 e 4391 4390","S 6 e 3385 3455","S 6 e 4393 4392","S 6 e 3455 4394","S 2 r 4396 4395","S 1 a 3522 3385","S 5 z 4398 4397","S 1 b 3393 3399","S 6 y 3455 4399","S 1 o 3385 3455","S 2 e 3455 4400","S 1 # 3385 4401","S 3 l 3524 4402","S 2 e 3385 4403","S 1 e 3455 4404","S 3 h 3522 3459","S 1 a 3393 4405","S 4 l 3455 4406","S 1 i 4408 4407","S 4 l 3455 3385","S 1 l 3455 4409","S 1 n 3455 4410","S 4 t 3385 4411","S 4 u 3444 4412","S 3 s 3385 4413","S 2 d 3385 4414","S 6 i 3455 3385","S 6 e 3385 3399","S 2 i 3399 4415","S 2 i 3522 4359","S 2 q 3385 4416","S 2 n 4418 4417","S 3 c 4419 3455","S 3 f 3385 3522","S 3 r 4421 4420","S 2 b 3522 4422","S 2 n 4424 4423","S 4 v 4426 4425","S 6 a 3393 3494","S 5 a 4428 4427","S 6 l 3385 3522","S 4 d 3385 4429","S 5 u 3455 4430","S 5 d 3522 4431","S 6 a 3522 3385","S 5 i 4433 4432","S 4 g 4435 4434","S 5 a 4437 4436","S 3 b 3385 4438","S 3 t 3385 4439","S 6 a 3385 3393","S 6 o 3393 4440","S 5 p 4442 4441","S 4 f 3455 4443","S 5 r 4445 4444","S 5 h 3385 4446","S 6 l 4448 4447","S 6 r 4450 4449","S 6 n 3385 3389","S 4 f 4452 4451","S 6 i 3385 3494","S 6 o 3393 3385","S 6 n 3444 4453","S 6 a 4455 4454","S 6 m 3455 3444","S 4 p 3385 3444","S 6 # 3393 4456","S 6 t 3385 3455","S 3 h 3393 4457","S 1 # 3399 3393","S 5 l 3393 4458","S 1 c 3399 4459","S 6 a 3385 4460","S 6 a 4461 3399","S 3 g 3399 4097","S 3 c 3385 4462","S 3 p 4464 4463","S 3 p 3385 3399","S 4 i 3524 4465","S 2 d 3444 4466","S 3 b 4464 4467","S 2 a 3385 3455","S 2 e 3653 4468","S 1 b 3455 4469","S 4 z 3522 3385","S 1 h 3494 4470","S 1 # 4359 4471","S 3 c 3385 3455","S 1 d 3399 4472","S 1 p 3444 3399","S 1 y 3444 4473","S 5 k 4475 4474","S 4 m 4477 4476","S 6 o 4479 4478","S 4 t 3385 4480","S 2 e 4481 3393","S 4 u 3399 4482","S 2 q 4483 3399","S 4 v 4485 4484","S 5 y 4487 4486","S 4 s 3385 4488","S 3 b 4490 4489","P ow1","S 4 t 4492 4491","S 2 a 4494 4493","S 5 w 3399 4495","S 2 c 3393 3882","S 6 n 4497 4496","S 6 a 4499 4498","S 3 h 3385 4500","S 5 e 3455 4501","S 6 c 3385 4502","S 5 a 4503 3385","S 2 e 3455 4504","S 2 s 4506 4505","S 3 c 3455 4507","S 6 y 3455 4508","S 2 a 4510 4509","S 3 d 3385 4511","S 5 i 4513 4512","S 6 o 3385 4514","S 2 e 3455 4515","S 3 c 3455 4516","S 5 z 3522 3385","S 3 r 3385 4517","S 3 s 3455 4518","S 1 a 3455 4519","S 2 a 3393 4520","S 6 o 3455 3399","S 6 u 3385 3455","S 2 s 3385 3455","S 2 n 3385 4521","S 2 t 4523 4522","S 3 r 3385 4297","S 3 k 3455 4524","S 3 c 3385 4525","S 1 v 4527 4526","S 3 v 4529 4528","S 3 r 3385 3399","S 2 t 3385 4530","S 6 o 3455 3385","S 1 o 3455 3385","S 3 f 3385 3455","S 1 e 3389 4531","S 3 r 3522 4532","S 1 a 3455 4533","S 3 t 3385 3455","S 4 c 4535 4534","S 6 r 3385 4536","S 6 l 4538 4537","S 6 n 3385 3393","S 4 p 3385 3494","S 5 i 3385 4539","S 5 v 3522 3385","S 5 a 4541 4540","S 6 o 3393 4542","S 4 c 4544 4543","S 3 b 3494 4545","S 5 o 4546 3385","S 4 n 3393 4547","S 6 u 4548 3385","S 3 p 3385 4549","S 5 n 4322 3385","S 5 h 4551 4550","S 6 a 3494 4552","S 6 r 4554 4553","S 5 a 3455 4555","S 6 e 3455 4556","S 5 k 3385 4557","S 5 a 3385 3494","S 5 a 3494 3385","S 5 g 3522 4558","S 5 o 3455 3522","S 5 u 4560 4559","S 5 r 3455 4561","S 6 a 3444 4562","S 4 b 3455 4563","S 4 p 3455 3444","S 6 b 3393 4564","S 5 k 4566 4565","S 1 # 3393 4567","S 3 l 3399 4568","S 6 o 4569 3399","S 5 s 3399 4570","S 6 t 3385 4571","S 1 0 3385 4572","S 1 e 3385 3399","S 4 z 4574 4573","S 1 c 3399 4575","S 2 s 3399 4576","S 3 j 3455 4577","S 3 r 4579 4578","S 2 a 3494 4580","S 3 k 3455 4581","S 1 n 3444 4582","S 2 h 4584 4583","S 2 e 4586 4585","S 6 e 4587 3385","S 5 e 4589 4588","S 2 p 3455 4590","S 4 d 4592 4591","S 2 i 3444 4593","S 4 v 3494 4594","S 4 d 3393 3455","S 4 y 4596 4595","S 4 b 3455 4597","S 6 m 3455 4598","S 5 i 3393 3494","S 3 o 3399 4599","S 3 l 3399 4600","S 1 # 3393 4601","S 2 l 3494 4602","S 2 e 3522 4603","S 4 y 3399 4604","S 3 l 3393 4605","S 1 a 3524 4606","S 3 n 3524 3393","S 3 c 3399 4607","S 3 o 4609 4608","S 2 i 3399 4610","S 2 i 4612 4611","S 2 o 3385 3393","S 1 # 3399 4613","S 5 a 3455 4614","S 5 o 3522 4615","S 2 r 3385 4616","S 2 a 3455 4001","S 6 s 3385 4617","S 1 # 3385 4618","S 3 b 3455 4619","S 3 c 3455 3385","S 1 i 3455 4620","S 3 v 3455 3385","S 3 r 4622 4621","S 5 n 4624 4623","S 6 n 3455 4625","S 1 l 3522 4626","S 3 r 3385 4627","S 2 o 3455 4628","S 3 h 3455 3393","S 2 r 3385 4629","S 6 r 4631 4630","S 1 e 3393 4632","S 3 p 3385 4420","S 3 c 4178 4633","S 1 s 3385 3455","S 4 l 4635 4634","S 3 r 4636 3455","S 2 s 4638 4637","S 4 t 3385 3494","S 1 f 3455 4639","S 2 l 3385 3455","S 1 s 3455 4640","S 2 e 3455 4641","S 2 l 3522 4642","S 1 r 4643 3455","S 4 g 4645 4644","S 5 o 3494 4646","S 5 e 4648 4647","S 5 e 3385 4649","S 5 p 3522 4650","S 5 c 4652 4651","S 5 e 4654 4653","S 3 m 4656 4655","S 6 a 4658 4657","S 4 q 4660 4659","S 6 r 3494 3385","P ey","S 4 n 3524 3385","S 3 l 3393 4661","S 4 n 4662 3385","S 3 c 3522 4663","S 6 a 3385 4664","S 6 i 3494 4665","S 6 r 3494 4338","S 5 t 4667 4666","S 4 t 3455 4668","S 5 o 3455 4669","S 6 i 3455 3444","S 6 d 3494 4670","S 5 a 3385 4671","S 5 o 4673 4672","S 6 s 3393 4674","S 6 s 3455 4675","S 5 y 3444 4676","S 4 p 3455 4677","S 6 p 3393 4678","S 5 v 4680 4679","S 3 p 3393 4681","S 5 t 3444 3393","S 3 v 4245 3399","S 2 m 3399 3385","S 5 v 3399 4682","S 6 n 4683 3385","S 3 m 3385 4684","S 4 m 4686 4685","S 1 # 3385 4687","S 2 a 3393 4688","S 3 r 4689 3399","S 3 r 4691 4690","S 2 r 4693 4692","S 2 r 3455 3385","S 1 o 3494 4694","S 1 k 3455 4695","S 1 i 3444 3399","S 1 o 3444 4696","S 1 s 3444 4697","S 2 n 4699 4698","S 3 l 4701 4700","S 3 n 4703 4702","S 4 c 4705 4704","S 2 p 3455 4706","S 2 c 4708 4707","S 2 i 3399 4709","S 6 t 3728 4710","S 1 s 3385 3393","S 3 n 3455 4711","S 3 y 3399 4712","S 5 e 3399 3524","S 4 s 4545 3399","S 5 i 4714 4713","S 3 u 4716 4715","S 1 s 3399 3455","S 2 a 3455 3522","S 1 # 3385 4717","S 2 r 3522 3385","S 3 u 3399 3393","S 2 c 3393 4718","S 1 u 3524 3393","S 2 c 4720 4719","S 6 p 3385 4721","S 5 e 3455 3399","S 3 v 3399 4722","S 6 o 3393 4723","S 1 l 3399 4724","S 3 n 3455 3385","S 6 e 3455 4725","S 6 s 3455 4726","S 2 a 3385 4727","S 6 y 3455 3385","S 6 i 3385 4728","S 1 # 3385 4729","S 1 k 3455 4730","S 3 t 3524 3455","S 1 u 3455 4731","S 5 k 4733 4732","S 6 e 3475 3385","S 6 c 3385 4734","S 6 i 3385 4735","S 1 e 3455 4736","S 5 o 3455 4737","S 2 h 3522 4738","S 3 o 3399 4739","S 1 i 3455 3444","S 3 l 3393 4740","S 3 r 3385 4741","S 4 m 3455 4742","S 3 t 3455 4743","S 2 t 3455 4744","S 6 s 4746 4745","S 3 t 4747 3385","S 1 h 3399 4748","S 3 v 3385 4749","S 2 o 3455 3385","S 1 o 3522 4750","S 3 d 3455 3385","S 5 a 4297 4751","S 5 g 3385 4752","S 5 l 3494 4753","S 5 i 4755 4754","S 6 n 3393 3385","S 5 o 3389 4756","S 5 u 3385 4757","S 5 t 4759 4758","S 6 y 3455 3522","S 5 o 4761 4760","S 6 r 4763 4762","S 4 l 4765 4764","S 6 r 3455 4766","S 6 u 3393 4767","S 4 d 3393 4768","S 6 c 3455 4769","S 3 s 3393 4435","S 4 d 3524 4770","S 3 v 3522 3385","S 4 s 3385 4771","S 6 o 4773 4772","S 6 a 3494 3522","S 4 s 4775 4774","S 6 a 3444 3385","S 4 s 3455 4776","S 5 u 3385 3455","S 5 l 3494 4777","S 5 l 3385 4778","S 5 r 4780 4779","S 6 s 3393 4781","S 6 b 3444 4782","S 5 i 4784 4783","S 6 u 4786 4785","S 6 e 3455 4787","S 4 p 4789 4788","S 2 c 4791 4790","S 1 e 3385 3393","S 3 r 3393 4792","S 3 v 3399 4793","S 3 b 3385 3389","S 3 h 3385 4794","S 4 u 3399 4795","S 1 # 3385 3455","S 1 i 3522 4796","S 1 # 3393 4797","S 2 f 3455 4798","S 2 l 3399 4799","S 2 a 3399 4800","S 1 e 3455 4801","S 3 n 3385 3522","S 2 i 3494 4802","S 2 u 4803 3455","S 1 s 4804 3393","S 1 c 3444 3393","S 4 t 4806 4805","S 5 r 3455 4807","S 5 e 4809 4808","S 6 i 3385 3455","S 3 d 3494 3385","S 1 e 3494 3522","S 4 t 4811 4810","S 2 o 3385 4812","S 4 s 3444 3455","S 2 e 4813 3399","S 3 r 3455 3399","S 2 a 4815 4814","S 1 n 3399 4816","S 4 m 3385 4817","S 4 x 4819 4818","S 4 c 4821 4820","S 6 e 3522 4822","S 5 z 4824 4823","S 5 a 3385 3399","S 1 e 3385 4825","S 3 r 3444 3393","S 6 t 3399 4826","S 1 n 3399 3444","S 2 s 4686 4827","S 1 # 3385 4828","S 1 f 3399 4829","S 6 n 3399 4830","S 6 n 3455 4831","S 5 i 3522 4832","S 2 n 3385 3455","S 1 a 4833 3385","S 3 v 4803 3385","S 2 o 3455 4834","S 1 o 3455 4835","S 5 g 4837 4836","S 1 o 3455 4838","S 6 e 3393 4839","S 3 l 3522 3385","S 1 n 3455 4840","S 2 a 4701 4841","S 2 a 4842 3385","S 1 o 3455 4843","S 3 r 3393 3444","S 3 s 3385 4844","S 4 t 4846 4845","S 3 p 3385 3455","S 2 p 3385 4847","S 1 t 3455 3385","S 4 t 3455 3385","S 6 e 3522 3385","S 6 r 4849 4848","S 1 a 4851 4850","S 2 p 3522 4852","S 4 s 4854 4853","S 5 l 3385 4855","S 5 c 3494 3385","S 6 n 3385 4856","S 6 l 3393 3385","S 6 o 3389 4857","S 5 i 3522 3385","S 5 d 4859 4858","S 6 a 3522 4860","S 5 r 4862 4861","S 4 g 4274 4863","S 3 t 4865 4864","S 3 g 3385 4866","S 3 p 3385 4867","S 6 n 3385 4868","S 4 g 3385 4869","S 3 b 4871 4870","S 4 n 3393 3385","S 3 s 3385 4872","S 3 m 3385 4873","S 4 t 3385 3522","S 6 r 4773 4874","S 5 t 3494 3385","S 5 u 4876 4875","S 5 e 3522 4877","S 5 a 3455 3385","S 5 r 3494 4878","S 5 o 3385 4879","S 4 d 4881 4880","S 6 o 4883 4882","S 4 s 4885 4884","S 4 d 3455 4886","S 5 l 3455 4887","S 6 n 3455 3444","S 6 v 3494 4888","S 5 o 3494 3455","S 6 m 3455 4889","S 6 c 3455 4890","S 6 c 3393 3444","S 2 r 4892 4891","S 5 t 3444 4893","S 3 n 3393 4894","S 3 h 3399 4895","S 1 # 3385 4896","S 3 o 3399 4897","S 3 u 3385 3522","S 3 n 3444 4898","S 2 d 3455 3399","S 1 i 3399 4899","S 2 d 3524 3399","S 1 i 3385 4900","S 2 u 3494 4901","S 1 r 3455 3385","S 2 l 3393 3444","S 4 d 4903 4902","S 5 e 4905 4904","S 3 t 4907 4906","S 4 u 3399 4908","S 4 v 3494 4909","S 3 t 4911 4910","S 5 a 3522 3399","S 5 o 4913 4912","S 5 a 3399 3455","S 6 l 4915 4914","S 3 t 3455 3399","S 2 m 3385 4916","S 3 m 3385 4917","S 5 e 4919 4918","S 3 n 3494 4776","S 3 r 4920 3385","S 5 e 3455 4921","S 6 c 3455 4922","S 4 d 4924 4923","S 1 # 3385 3522","S 2 h 3385 4925","S 5 n 3444 4926","S 6 h 3385 4927","S 5 a 4928 3455","S 6 c 4930 4929","S 3 d 3385 3399","S 1 i 3385 4931","S 1 e 3522 3455","S 6 a 3385 3455","S 2 e 3455 4932","S 1 e 3455 3524","S 5 u 4934 4933","S 6 t 3385 4935","S 6 e 3385 4936","S 6 a 3393 4937","S 2 i 3455 4938","S 5 a 3455 4939","S 3 m 3385 4686","S 3 v 3455 3399","S 3 l 3385 4420","S 4 d 4930 4343","S 3 s 3385 3455","S 1 n 3455 4940","S 1 c 3522 4941","S 1 e 3385 4942","S 1 l 4944 4943","S 2 c 3385 4945","S 1 e 3522 4946","S 4 l 4948 4947","S 6 a 4950 4949","S 6 e 3385 4951","S 5 a 3494 4952","S 6 s 3385 4953","S 5 o 3455 4954","S 6 a 3522 4955","S 6 h 3522 4956","S 3 o 3399 4957","S 4 t 4959 4958","S 4 c 4961 4960","S 4 v 4963 4962","S 4 l 3385 4964","S 3 p 4966 4965","S 4 c 3494 4967","S 3 v 3522 4968","S 6 n 3385 4969","S 4 v 3385 4970","S 6 e 3455 4971","S 3 l 3522 4972","S 4 t 3385 3524","S 5 t 3494 4973","S 5 a 4975 4974","S 4 b 3385 3455","S 6 e 3455 4976","S 5 a 3494 4977","S 5 e 3385 4978","S 4 m 4881 4979","S 5 i 4980 3385","S 4 p 4981 3444","S 4 t 3385 4982","S 4 b 3444 4983","S 6 u 3444 4984","S 6 m 3455 4985","S 6 r 3455 4986","S 6 r 3455 4987","S 4 l 4989 4988","S 4 c 3444 4990","S 2 l 3399 4991","S 5 l 3393 3444","S 1 a 3399 4992","S 6 # 3399 3393","S 3 g 3399 4993","S 6 c 3399 3385","S 3 u 3399 4994","S 2 r 3393 4995","S 2 n 3399 4996","S 2 m 3455 4997","S 1 r 3494 4998","S 5 c 3385 4999","S 5 g 5001 5000","S 6 r 3455 5002","S 3 m 3455 5003","S 4 b 4274 5004","S 5 p 3385 5005","S 3 n 5007 5006","S 6 r 3444 5008","S 2 e 3455 5009","S 5 a 3522 3455","S 5 h 3455 3399","S 1 c 3385 3455","S 4 f 5011 5010","S 2 e 3385 4274","S 3 p 3393 5012","S 3 d 3385 5013","S 2 a 5015 5014","S 4 s 3399 5016","S 6 r 5018 5017","S 6 n 3393 5019","S 4 s 3455 5020","S 4 j 3524 5021","S 5 i 3385 5022","S 3 n 3385 5023","S 1 g 3399 3444","S 6 d 3455 5024","S 2 o 3399 3455","S 1 # 5026 5025","S 3 r 3455 3385","S 1 e 3385 5027","S 1 r 3455 5028","S 5 o 3455 5029","S 3 t 3385 4727","S 1 e 3494 5030","S 2 o 3385 5027","S 2 u 3455 5031","S 1 i 3455 3385","S 2 u 3522 5032","S 2 g 3385 5033","S 2 l 3399 5034","S 2 c 3455 5035","S 2 m 3522 5036","S 3 m 3385 3522","S 6 i 4579 5037","S 3 h 3522 5038","S 5 f 5037 5039","S 5 i 5041 5040","S 5 c 5043 5042","S 5 t 3455 5044","S 5 e 3385 3393","S 6 l 3494 3385","S 6 g 3385 5045","S 5 a 3522 5046","S 6 o 3522 3385","S 6 i 3522 5047","S 6 a 5049 5048","S 4 h 5051 5050","S 3 b 3455 5052","S 3 h 5054 5053","S 6 m 3494 3385","S 4 g 5056 5055","S 6 n 3385 5057","S 4 n 3385 3455","S 4 d 3385 5058","S 4 t 3393 3385","S 6 l 5060 5059","S 6 g 3455 5061","S 6 m 3385 5062","S 4 t 5064 5063","S 6 n 3385 5065","S 6 s 3455 5066","S 6 h 3494 5067","S 5 e 5069 5068","S 6 t 3455 5070","S 5 i 5071 4776","S 6 n 3444 3385","S 5 b 3522 3385","S 5 i 5073 5072","S 6 s 3444 3385","S 6 e 3385 3444","S 4 p 3444 3385","S 4 p 3455 5074","S 6 l 3444 3455","S 6 i 3444 5075","S 5 u 3455 3385","S 6 i 5076 3385","S 4 m 3385 5077","S 6 n 3455 3385","S 6 t 3393 3444","S 3 n 3399 5078","S 6 s 3385 3393","S 3 b 3399 5079","S 4 c 5081 5080","S 1 n 3444 5082","S 2 a 5083 3399","S 2 a 3385 5084","S 3 b 3494 3522","S 6 t 5086 5085","S 6 y 3455 5087","S 1 o 3494 3385","S 3 k 3455 5088","S 3 k 3455 5089","S 3 d 5091 5090","S 1 o 3522 3455","S 1 r 5093 5092","S 6 t 3494 5094","S 6 d 3393 3455","S 4 s 5096 5095","S 3 s 3385 5097","S 2 e 3455 5098","S 3 c 3393 3455","S 3 l 3455 3393","S 2 i 5100 5099","S 5 o 3399 5101","S 6 s 3393 5102","S 6 n 5104 5103","S 4 p 3444 5105","S 6 u 3494 3444","S 4 c 3455 5106","S 5 a 5108 5107","S 5 o 3524 5109","S 2 c 3385 3494","S 5 e 5111 5110","S 6 n 5113 5112","S 3 m 3522 5114","S 6 o 3385 3455","S 3 s 3455 5115","S 3 u 3399 5116","S 6 e 3455 5117","S 2 l 3455 5118","S 5 h 3455 3385","S 2 d 3385 3455","S 2 q 3385 5119","S 2 e 3455 3399","S 2 a 5121 5120","S 6 e 3455 3385","S 1 u 3455 5122","S 6 l 3385 5123","S 5 u 3455 5124","S 6 a 3455 5125","S 6 o 3385 5126","S 6 h 3385 5127","S 5 c 3385 5128","S 5 m 3385 5129","S 6 o 5131 5130","S 6 r 3522 4955","S 4 n 5133 5132","S 3 s 5134 3385","S 4 d 5136 5135","S 6 a 3524 3385","S 6 o 3385 5137","S 6 s 5139 5138","S 6 r 3385 5140","S 6 o 3393 5141","S 3 b 3494 3385","S 6 l 3385 5142","S 3 f 3393 5143","S 4 p 3385 5144","S 4 g 3393 5145","S 3 b 3455 4045","S 6 c 3385 5146","S 4 g 5064 5147","S 6 t 3455 3385","S 6 s 3385 5148","S 6 d 3455 3385","S 5 c 3494 5149","S 5 o 5151 5150","S 4 t 3455 5152","S 4 t 3455 5153","S 6 g 3455 3385","S 4 s 5155 5154","S 4 s 5157 5156","S 4 m 3455 5158","S 4 p 5160 5159","S 5 t 3385 3494","S 6 p 3393 5161","S 1 r 3393 5162","S 3 f 3399 5163","S 2 r 3385 5164","S 2 a 3494 4824","S 2 o 3444 5165","S 3 l 5166 3399","S 2 i 3963 5167","S 4 g 5169 5168","S 5 h 5171 5170","S 1 s 3385 5172","S 6 e 5174 5173","S 2 p 5176 5175","S 1 u 5178 5177","S 1 a 3455 4701","S 3 g 3455 5179","S 4 m 3385 5180","S 5 r 3455 4776","S 4 b 3399 5181","S 3 l 3399 3455","S 3 r 5183 5182","S 6 n 3399 5096","S 4 q 5185 5184","S 3 n 5186 5113","S 3 r 3522 5187","S 6 r 5189 5188","S 4 p 5191 5190","S 4 s 3385 3444","S 4 f 3385 5192","S 4 d 3393 4992","S 5 o 5194 5193","S 4 m 5196 5195","S 3 r 3385 5197","S 5 o 3455 5198","S 3 c 3385 5199","S 2 a 3455 3579","S 3 c 3399 3455","S 3 r 3455 5200","S 2 n 3455 5201","S 5 h 3455 5202","S 3 s 3455 5203","S 6 t 3385 5204","S 3 t 3385 5205","S 6 a 5207 5206","S 6 i 5209 5208","S 1 r 3455 3522","S 5 h 3385 5210","S 5 o 3455 5211","S 6 m 3455 5212","S 5 s 3385 5213","S 6 o 3385 3522","S 5 p 3522 3385","S 5 i 5215 5214","S 5 l 5217 5216","S 5 f 3522 5218","S 6 u 5219 3385","S 3 m 5221 5220","S 5 s 3522 3385","S 4 n 3385 5222","S 3 p 4545 4701","S 6 u 3522 3385","S 6 l 3385 5223","S 4 l 3522 3393","S 6 t 3385 3393","S 3 b 5225 5224","S 3 l 3385 3494","S 4 v 3385 5226","S 6 v 5228 5227","S 4 f 3455 5229","S 6 p 3385 5230","S 3 v 3385 5231","S 6 t 3455 5232","S 6 n 3494 3385","S 4 n 3385 5233","S 4 n 3455 5234","S 4 n 3389 4876","S 4 b 3455 3385","S 4 o 3444 5235","S 6 o 3455 5236","S 4 w 3444 5237","S 6 s 3455 5238","S 4 d 3455 3444","S 4 s 4090 3455","S 6 t 3385 3444","S 6 s 3393 5239","S 2 i 3399 5240","S 5 n 3385 3399","S 2 p 3385 5241","S 3 h 3393 3444","S 1 r 3522 3399","S 3 d 3385 5242","S 4 v 5244 5243","S 5 a 5246 5245","S 3 s 5248 5247","S 2 b 3494 5249","S 6 w 3399 5250","S 1 e 5252 5251","S 5 h 3385 5253","S 6 r 5255 5254","S 3 l 3393 3455","S 4 f 3399 5256","S 6 r 3455 5257","S 1 v 3494 5258","S 5 o 3385 3455","S 4 h 3399 5259","S 6 n 5261 5260","S 2 t 3385 4727","S 5 a 5263 5262","S 2 f 3393 3494","S 4 f 3455 3385","S 3 l 4545 5264","S 4 v 5266 5265","S 2 f 3385 5267","S 6 d 5269 5268","S 5 a 3444 3385","S 4 s 3455 3444","S 5 i 3385 5270","S 3 r 3385 5271","S 4 b 3393 5272","S 3 n 3455 5273","S 2 a 3524 5271","S 5 k 3385 5274","S 2 r 3385 5275","S 6 n 5276 3399","S 2 p 3455 5277","S 2 o 3455 5278","S 6 a 3524 3455","S 6 s 3385 3455","S 3 d 3455 5279","S 2 o 5280 3385","S 3 t 3455 5281","S 3 m 3385 5282","S 1 v 3455 3522","S 4 d 3385 5283","S 5 l 3385 5284","S 6 z 3389 5285","S 5 t 3385 5286","S 6 t 3385 5287","S 6 n 3385 3522","S 5 r 3522 5288","S 6 a 3455 3522","S 5 j 3522 5289","S 3 s 3494 3385","S 3 z 3385 5290","S 6 e 3385 5291","S 3 b 3455 5292","S 4 m 5294 5293","S 4 h 3393 5295","S 4 n 3385 5296","S 4 m 3385 5297","S 4 m 5299 5298","S 4 h 3455 4545","S 4 v 4545 3455","S 4 t 5301 5300","S 6 l 3522 5302","S 4 n 3455 3385","S 4 d 3385 5303","S 6 n 5304 4746","S 5 l 5306 5305","S 6 i 5308 5307","S 4 t 5310 5309","S 6 g 3385 3455","S 6 n 5311 3444","S 1 o 3399 5312","S 1 n 5314 5313","S 1 a 3455 5315","S 4 m 5317 5316","S 5 a 4545 5318","S 3 r 5320 5319","S 6 l 3393 3494","S 2 g 3455 5321","S 1 e 3455 3494","S 2 k 3494 3385","S 6 s 3393 5322","S 5 c 3385 5323","S 5 r 3455 3385","S 3 t 3522 3399","S 6 d 3455 3399","S 2 a 3455 3399","S 5 u 3455 5324","S 4 c 3385 3444","S 4 g 5326 5325","S 2 c 3455 5327","S 4 s 5329 5328","S 4 t 3455 5330","S 2 o 5332 5331","S 3 a 3399 5333","S 3 n 3455 5334","S 4 d 4648 3385","S 6 n 5335 3393","S 4 v 3385 5336","S 5 e 3393 5337","S 4 j 3385 3444","S 5 r 3385 5338","S 1 # 3393 3524","S 1 a 3385 5339","S 3 d 3385 3393","S 6 a 3455 5340","S 2 c 3455 5341","S 2 e 3455 3385","S 1 t 3455 5342","S 1 h 3455 5343","S 2 e 4745 3385","S 1 p 3385 5344","S 2 u 3385 5345","S 1 p 3455 3385","S 5 i 5347 5346","S 5 e 3385 5348","S 6 s 3455 3385","S 6 i 5128 3385","S 6 h 3385 5349","S 5 h 3522 5350","S 5 r 3522 3385","S 5 d 4662 3385","S 5 s 3385 5351","S 4 l 3385 5352","S 4 l 5354 5353","S 6 n 3385 5334","S 6 d 4545 5355","S 6 a 3455 5356","S 4 t 5357 3385","S 4 d 5359 5358","S 6 n 3393 5360","S 6 l 3385 5232","S 6 l 3385 3455","S 3 s 3385 5361","S 6 a 3455 5362","S 4 t 3385 3455","S 5 y 3444 3385","S 6 i 3385 3444","S 5 p 3455 5363","S 5 c 3455 3385","S 4 l 3455 3444","S 6 r 3455 3385","S 4 g 3444 3385","S 1 # 5365 5364","S 1 # 5367 5366","S 4 x 3385 3455","S 1 o 4727 3385","S 4 x 3385 5368","S 5 a 5370 5369","S 3 s 3455 5371","S 5 o 5373 5372","S 2 g 3522 3385","S 1 t 3399 5374","S 5 r 5376 5375","S 5 r 5378 5377","S 3 n 3455 5379","S 4 s 3385 5380","S 1 d 3385 3455","S 4 d 3455 5381","S 2 l 3399 5382","S 1 a 3393 3455","S 3 h 3455 5383","S 5 u 5385 5384","S 6 n 3455 5386","S 2 e 3455 5387","S 3 m 3385 3455","S 3 l 3385 3393","S 3 a 3385 5388","S 6 a 3385 5389","S 1 # 3385 5390","S 4 t 5392 5391","S 5 a 4686 5393","S 3 t 3399 5394","S 3 m 3455 5395","S 1 c 3455 5396","S 6 i 3522 3385","S 3 s 3455 3385","S 4 t 3385 5397","S 6 t 3385 5398","S 5 y 3385 5399","S 6 e 3385 5128","S 6 u 3522 5400","S 6 i 3385 5401","S 4 c 3944 5402","S 6 n 4964 5403","S 3 b 3455 5404","S 4 l 5406 5405","S 4 d 3455 3385","S 3 h 3385 5407","S 4 b 5345 5408","S 3 s 3455 3393","S 3 l 3455 3385","S 3 h 3385 5409","S 6 e 3385 5410","S 6 r 3444 5411","S 2 u 3444 5412","S 3 l 5414 5413","S 2 s 3494 5415","S 3 r 3385 5416","S 4 q 5418 5417","S 5 e 5420 5419","S 6 k 3399 5421","S 3 r 5423 5422","S 3 l 5425 5424","S 6 r 3455 5426","S 2 o 3399 5427","S 3 c 3393 5428","S 2 a 3393 3385","S 2 o 3399 5429","S 6 i 5334 5430","S 6 e 3399 5431","S 1 l 3524 5432","S 4 p 3399 5433","S 1 o 3385 5434","S 4 s 3522 5435","S 5 i 5437 5436","S 4 c 5276 4416","S 5 i 3393 3524","S 3 r 5439 5438","S 4 g 3393 5440","S 6 e 3385 5441","S 1 c 3385 5442","S 3 r 3393 5443","S 1 # 3393 3385","S 3 c 3455 5444","S 3 d 3455 5445","S 3 h 3455 5446","S 3 d 3455 5447","S 5 o 3385 5448","S 6 s 3389 3385","S 5 v 3385 5449","S 5 v 3522 5450","S 5 d 3522 3385","S 6 e 3385 5451","S 3 g 3385 5452","S 6 d 3385 5453","S 6 z 3385 5454","S 6 c 3455 5455","S 3 v 3385 3393","S 6 s 3393 5456","S 4 l 5458 5457","S 4 b 5460 5459","S 6 a 3444 5461","S 5 t 4697 5462","S 2 g 3399 3393","S 6 o 3399 3393","S 3 w 3385 5463","S 2 a 3522 3385","S 1 i 5465 5464","S 1 a 3494 5466","S 5 b 5468 5467","S 3 r 3393 5469","S 1 a 3455 5470","S 6 r 3385 4042","S 1 i 3385 3522","S 3 u 3399 5471","S 5 r 3522 5472","S 2 a 3399 3455","S 2 t 5474 5473","S 3 p 3393 5475","S 1 r 3455 5476","S 6 y 3455 3399","S 1 o 3385 5477","S 3 s 3455 5478","S 2 o 3494 3455","S 4 x 3385 5479","S 2 n 3494 3385","S 5 o 5481 5480","S 6 e 5483 5482","S 4 h 3385 5484","S 2 c 3393 3385","S 3 r 3393 3399","S 4 s 3385 5485","S 1 s 3385 3522","S 2 a 3385 4499","S 3 k 3455 5486","S 6 r 3455 3647","S 3 z 3455 5487","S 3 h 3455 5488","S 5 l 3385 5489","S 6 r 5491 5490","S 6 i 3385 5134","S 3 n 3393 3385","S 6 p 3385 5492","S 6 n 4311 3385","S 3 w 3385 5493","S 3 m 3455 5494","S 6 r 5496 5495","S 6 e 3393 5497","S 3 f 3455 5498","S 4 t 3385 3444","S 5 i 3455 3385","S 6 h 3444 3385","S 3 l 3393 5499","S 1 a 5501 5500","S 4 j 3399 5502","S 3 r 5504 5503","S 6 e 3393 3455","S 5 u 3455 5505","S 2 s 3385 4833","S 3 h 3393 5506","S 6 r 5426 3455","S 6 e 3494 5507","S 2 l 3455 3385","S 4 m 3455 5508","S 3 h 3455 3385","S 5 n 3455 5509","S 6 a 3455 5510","S 1 e 3385 5511","S 4 c 3385 5512","S 2 p 3455 5513","S 2 u 3455 5514","S 3 r 3385 5515","S 3 h 5516 3385","S 2 c 3385 3393","S 3 l 3385 5517","S 5 a 3452 3385","S 5 v 3385 5518","S 1 u 3455 5519","S 3 p 3385 5520","S 4 h 3385 5521","S 6 o 3385 5522","S 5 d 3385 3522","S 6 y 3385 5523","S 6 s 5525 5524","S 6 b 3385 5526","S 3 l 3385 5527","S 4 g 3522 3385","S 3 m 3385 5528","S 6 n 3455 5529","S 6 # 5530 3393","S 2 t 3385 5531","S 4 v 3522 3385","S 1 e 5533 5532","S 4 b 3455 5534","S 4 p 5535 3455","S 3 m 3385 5536","S 6 r 3399 3455","S 5 r 3399 5537","S 4 g 3455 3399","S 5 a 3455 5538","S 5 o 3399 5539","S 3 c 5540 3385","S 1 h 3399 5304","S 3 l 5035 5541","S 6 a 3385 5542","S 4 m 3455 3385","S 4 m 3385 3393","S 4 f 3385 5543","S 6 i 3385 5544","S 3 n 4913 5545","S 5 f 3455 5546","S 5 p 3385 5547","S 5 g 3522 3385","S 4 s 3385 5548","S 6 a 3455 5549","S 4 c 3455 5356","S 3 c 3522 4989","S 6 d 3455 5550","S 4 p 3522 5551","S 3 m 3522 3385","S 3 r 3444 5552","S 4 x 5554 5553","S 5 q 3385 5555","S 2 r 4279 5556","S 2 d 3399 5557","S 5 r 3385 3455","S 5 o 3399 3385","S 5 u 3399 5558","S 2 a 3399 5559","S 2 i 3399 5560","S 6 o 3385 3399","S 2 s 3455 5561","S 4 s 5562 3385","S 3 h 3385 5563","S 1 i 3455 5564","S 2 t 3385 5565","S 6 n 3455 5566","S 4 b 3385 5567","S 4 d 5310 5568","S 4 b 3385 5569","S 6 c 3455 5570","S 3 g 3385 5571","S 1 a 3444 3393","S 4 v 4359 3455","S 2 i 3522 5572","S 2 h 5574 5573","S 2 f 3385 5575","S 4 h 3455 5576","S 6 r 3399 3385","S 3 l 3455 5577","S 5 h 3399 3385","S 2 g 3455 5578","S 2 c 5579 3385","S 4 p 3455 3385","S 2 e 3455 5580","S 3 r 3455 5581","S 3 k 3455 5582","S 5 s 3385 5583","S 3 l 3385 4424","S 3 g 5064 5584","S 4 g 3385 5585","S 4 d 3385 5586","S 2 u 3455 5587","S 3 h 5589 5588","S 3 o 3399 5590","S 2 m 3385 3399","S 6 s 3399 3455","S 5 e 4090 3455","S 2 e 3455 5591","S 5 c 3522 3385","S 2 o 3385 3455","S 1 o 3455 5592","S 2 r 3455 5593","S 5 e 3393 3385","S 4 f 3455 5594","S 4 t 3385 5595","S 3 f 3385 5596","S 2 a 3385 5597","S 4 c 5599 5598","S 4 u 3399 4523","S 3 a 3399 3385","S 2 n 3455 3385","S 1 e 3455 5600","S 2 u 3455 4701","S 3 c 3455 5601","S 3 t 3385 5602","S 6 n 5603 3385","S 2 o 3522 5276","S 5 h 5605 5604","S 6 l 3455 5606","S 3 k 3455 3385","S 4 m 3385 5037","S 3 s 3385 5607","S 4 n 3987 3393","S 3 d 5609 5608","S 1 j 3455 5610","S 5 e 3494 5611","S 4 v 3385 5612","S 4 h 3399 5613","S 2 i 3399 5614","S 3 r 3399 5615","S 6 e 5616 4912","S 4 n 3385 5617","S 6 s 3399 5618","S 1 r 3455 5619","S 6 o 3399 5620","S 5 h 3385 3494","S 3 b 3385 3522","S 5 n 3399 5621","S 4 b 3399 3455","S 2 a 3385 5622","S 5 u 3399 5623","S 6 i 3399 3494","S 1 f 3399 5624","S 3 r 5626 5625","S 2 i 5628 5627","S 2 t 3455 5629","S 4 p 5631 5630","S 5 o 3399 5632","S 2 r 3455 5633","S 3 g 3455 5634","S 5 p 3385 3399","S 6 r 3399 5635","S 6 r 3455 3399","S 3 a 3399 5636","S 5 e 3455 5637","S 1 a 5639 5638","S 3 n 5640 3399","S 6 a 3399 5641","S 4 b 3455 3399","S 4 s 3399 3455","S 4 f 3399 5642","S 3 l 3399 5643","S 1 n 3399 5644","S 5 e 5645 3399","S 6 r 3399 5646","S 4 k 3399 3455","I 5647 f","S 4 f 5649 5648","P f","P epsilon","I 5650 g","S 3 n 5652 5651","S 4 h 5654 5653","S 4 # 5656 5655","S 4 g 5658 5657","S 5 t 5656 5659","S 4 s 5656 5660","P epsilon","S 4 e 5662 5661","S 2 s 5664 5663","S 3 u 5666 5665","S 4 e 5668 5667","S 4 i 5670 5669","S 5 r 5672 5671","S 1 # 5656 5673","S 6 s 5674 5656","S 3 i 5676 5675","S 5 # 5656 5677","S 4 i 5679 5678","S 6 # 5681 5680","S 4 y 5683 5682","S 2 l 5685 5684","S 3 d 5687 5686","S 6 # 5689 5688","S 5 l 5691 5690","P g","S 1 0 5674 5692","S 5 a 5674 5693","S 1 t 5695 5694","S 4 t 5697 5696","S 6 g 5699 5698","S 5 # 5687 5700","S 5 l 5674 5701","S 4 n 5703 5702","S 3 g 5674 5704","S 5 a 5687 5705","S 5 n 5706 5687","S 3 g 5708 5707","P jh","S 6 a 5687 5709","S 3 d 5687 5710","S 2 b 5674 5656","S 1 t 5674 5656","S 1 b 5674 5711","S 5 e 5674 5656","S 1 l 5713 5712","P f","S 4 y 5687 5714","S 2 e 5715 5656","S 5 l 5674 5716","S 2 i 5656 5717","S 5 r 5719 5718","S 5 s 5687 5720","S 3 d 5722 5721","S 5 # 5656 5723","S 2 l 5687 5724","S 2 0 5726 5725","S 6 g 5687 5674","S 5 # 5687 5727","S 1 s 5687 5674","S 3 g 5674 5728","S 1 c 5687 5729","S 3 e 5674 5730","S 2 o 5732 5731","S 2 a 5733 5656","S 5 y 5735 5734","S 6 e 5656 5736","S 6 e 5687 5737","S 2 o 5656 5687","S 5 l 5739 5738","S 1 f 5674 5740","S 1 s 5742 5741","S 3 g 5744 5743","S 4 r 5674 5745","S 2 0 5656 5746","S 1 # 5674 5747","S 3 g 5749 5748","S 5 l 5674 5750","S 5 l 5752 5751","S 3 d 5687 5753","S 3 a 5755 5754","S 2 a 5674 5756","S 2 a 5656 5757","S 1 c 5695 5656","S 5 l 5736 5695","S 4 h 5759 5758","S 4 l 5656 5674","P k","S 6 l 5687 5760","S 6 b 5656 5761","S 2 a 5762 5674","S 1 d 5687 5763","S 2 i 5765 5764","S 2 i 5687 5656","S 4 t 5766 5674","S 1 r 5735 5674","S 6 n 5687 5767","S 6 d 5656 5768","S 6 e 5674 5687","S 3 c 5674 5769","S 5 o 5687 5770","S 5 o 5687 5771","S 5 i 5674 5772","S 6 l 5774 5773","S 6 t 5674 5775","S 1 m 5687 5674","S 2 r 5674 5776","S 5 # 5656 5777","S 5 e 5656 5674","S 4 m 5656 5778","S 5 i 5674 5656","S 1 # 5687 5779","S 1 l 5674 5780","S 6 o 5674 5781","S 6 s 5783 5782","S 1 w 5656 5784","S 1 h 5687 5656","S 3 a 5674 5785","S 5 e 5687 5786","S 6 t 5674 5787","S 5 v 5674 5788","S 5 # 5687 5789","S 5 u 5687 5790","S 5 t 5792 5791","S 2 0 5793 5674","S 3 a 5687 5674","S 6 s 5795 5794","S 1 s 5674 5796","S 1 o 5656 5674","S 4 b 5656 5797","S 1 r 5687 5798","S 6 t 5687 5799","S 1 v 5687 5800","S 1 l 5674 5801","S 2 i 5656 5802","S 2 o 5656 5803","S 1 # 5674 5656","S 4 a 5674 5804","S 3 i 5806 5805","S 3 o 5674 5807","S 5 n 5674 5808","S 5 n 5810 5809","S 2 h 5812 5811","S 1 0 5674 5813","S 6 a 5687 5674","S 2 e 5674 5814","S 3 a 5815 5674","S 1 h 5674 5816","S 4 d 5656 5817","S 5 n 5674 5818","S 2 o 5687 5819","S 1 # 5820 5674","S 1 # 5674 5821","S 2 e 5687 5656","S 5 d 5687 5822","S 4 o 5674 5687","S 6 # 5757 5674","S 5 m 5656 5823","S 6 # 5825 5824","S 1 r 5687 5674","S 5 v 5674 5826","S 6 n 5687 5827","S 6 s 5829 5828","S 1 n 5674 5830","S 2 v 5687 5831","S 6 g 5674 5832","S 1 # 5674 5687","S 1 # 5674 5833","S 4 f 5656 5834","S 2 i 5674 5835","S 6 i 5674 5836","S 6 i 5674 5687","S 6 t 5674 5837","S 2 e 5687 5838","S 5 s 5656 5839","S 6 l 5841 5840","S 2 r 5687 5842","S 5 f 5674 5843","S 6 t 5687 5844","S 6 h 5674 5845","S 1 j 5674 5846","S 5 m 5674 5847","S 6 t 5848 5674","S 6 l 5674 5849","S 2 e 5674 5687","S 4 w 5656 5850","S 5 e 5656 5687","S 6 u 5687 5851","S 2 i 5687 5674","S 1 r 5687 5852","S 1 0 5674 5853","S 2 b 5674 5854","S 1 c 5674 5855","S 2 o 5855 5856","S 6 d 5674 5857","S 6 g 5674 5687","S 5 u 5859 5858","S 1 # 5674 5860","S 5 n 5674 5687","S 3 r 5674 5687","S 6 b 5674 5861","S 4 p 5656 5862","S 2 a 5687 5863","S 1 l 5656 5864","S 5 a 5674 5865","S 2 h 5674 5866","S 5 e 5674 5687","S 1 # 5687 5867","S 6 s 5674 5868","S 1 b 5848 5869","P zh","S 5 m 5687 5870","S 6 y 5687 5871","S 5 u 5873 5872","S 1 # 5674 5874","S 5 r 5875 5687","S 6 f 5674 5876","S 2 s 5674 5687","S 5 s 5674 5877","S 5 s 5687 5878","S 2 b 5674 5879","S 5 n 5880 5674","S 2 n 5687 5881","S 4 o 5674 5882","S 2 a 5656 5883","S 2 i 5674 5687","S 2 a 5656 5674","S 2 m 5674 5884","S 1 r 5674 5885","S 5 r 5674 5886","S 6 r 5888 5887","S 1 0 5687 5674","S 2 0 5890 5889","S 4 a 5892 5891","S 6 i 5656 5674","S 6 n 5894 5893","S 2 e 5674 5895","S 6 g 5674 5896","S 3 a 5898 5897","S 5 o 5687 5899","S 3 i 5687 5900","S 6 m 5687 5901","S 4 r 5674 5902","S 1 h 5656 5674","S 6 r 5656 5903","S 5 i 5656 5674","S 3 a 5674 5687","S 6 m 5674 5904","S 6 t 5687 5905","S 5 n 5815 5687","S 5 a 5674 5906","S 6 i 5687 5674","S 6 r 5687 5907","S 4 l 5909 5908","S 6 # 5656 5674","S 5 d 5674 5910","S 5 o 5687 5911","S 5 e 5674 5912","S 6 i 5687 5913","S 5 e 5656 5914","S 2 e 5757 5915","S 5 b 5917 5916","S 5 n 5919 5918","S 5 h 5674 5687","S 6 o 5687 5674","S 4 u 5674 5656","S 5 e 5921 5920","S 6 l 5687 5922","S 6 b 5674 5687","S 6 # 5687 5923","S 6 # 5924 5874","S 6 s 5674 5925","S 1 l 5656 5674","S 5 e 5674 5926","S 5 a 5687 5927","S 3 o 5687 5928","S 6 n 5674 5929","S 6 a 5674 5930","S 6 i 5687 5931","S 3 r 5674 5932","S 6 m 5674 5933","S 6 t 5674 5687","S 3 l 5674 5934","S 1 # 5674 5935","S 5 a 5656 5894","S 6 a 5674 5936","S 3 i 5687 5674","S 5 m 5687 5937","S 1 0 5938 5674","S 5 b 5687 5674","I 5939 h","S 3 # 5941 5940","S 3 c 5943 5942","S 4 a 5945 5944","S 3 s 5947 5946","S 4 o 5948 5947","S 4 o 5945 5949","P hh","S 3 t 5951 5950","P epsilon","S 1 i 5945 5947","S 4 i 5945 5952","S 3 p 5954 5953","S 4 o 5955 5947","S 4 u 5945 5956","S 3 g 5958 5957","S 1 # 5947 5959","S 1 0 5947 5960","S 4 y 5945 5961","S 1 0 5963 5962","S 1 i 5965 5964","S 1 h 5966 5947","S 1 g 5945 5947","S 4 e 5945 5967","S 4 l 5947 5968","S 4 o 5970 5969","S 4 o 5972 5971","S 4 o 5945 5973","S 4 e 5947 5945","S 4 r 5945 5974","S 4 # 5947 5975","S 3 o 5977 5976","S 3 r 5947 5978","S 4 a 5980 5979","S 1 0 5947 5945","S 4 a 5945 5947","S 4 l 5945 5947","S 4 n 5947 5981","S 3 a 5973 5947","S 4 a 5945 5982","S 3 w 5945 5947","S 4 u 5945 5947","S 1 0 5947 5983","S 4 r 5947 5984","S 4 l 5947 5985","S 1 n 5945 5947","S 4 m 5947 5986","S 4 m 5947 5945","S 4 s 5947 5987","S 3 w 5983 5988","S 3 x 5990 5989","S 4 t 5947 5991","S 4 i 5947 5992","S 4 d 5947 5993","S 4 a 5947 5945","S 4 o 5995 5994","S 3 n 5945 5996","S 1 s 5945 5997","S 4 y 5999 5998","S 1 c 5945 6000","S 1 h 5992 6001","S 3 e 5945 6002","S 3 e 5945 6003","S 3 z 6005 6004","S 3 a 5945 5947","S 3 d 5945 6006","S 3 d 6008 6007","S 4 a 5945 6009","S 3 n 5945 6010","S 1 u 5945 6011","S 4 e 5945 6012","S 4 e 5945 5947","S 1 o 6013 5945","S 1 e 5945 6014","S 4 u 5945 6015","S 3 r 5947 5945","S 4 a 6017 6016","S 1 e 5945 5947","S 1 # 6019 6018","S 1 # 5945 6020","S 1 k 5947 6021","S 4 i 5945 6022","S 1 b 5945 6023","S 3 o 5945 6024","S 4 e 5945 5979","S 1 v 5945 6025","S 1 p 5945 6026","S 1 m 5947 6027","S 1 t 5945 6028","S 3 i 5945 6029","S 1 i 5945 6030","S 1 f 5945 6031","S 1 l 5945 6032","S 1 d 5945 6033","S 1 o 5945 6034","S 3 o 5945 6035","S 1 g 5945 6036","S 3 a 5945 6037","S 3 i 6039 6038","S 3 m 5945 6040","S 1 c 5945 6041","S 1 n 5947 5945","S 1 r 6042 5945","S 1 n 5945 6043","S 3 u 5947 5945","S 3 e 5945 6044","S 1 w 5945 6045","S 1 r 5945 6046","S 1 a 5945 6047","S 3 r 5945 6048","S 1 s 5945 6049","S 1 m 5945 6002","I 6050 i","S 5 g 6052 6051","S 4 # 6054 6053","S 6 # 6056 6055","S 4 o 6058 6057","S 3 a 6060 6059","S 2 # 6062 6061","S 4 n 6064 6063","S 4 e 6066 6065","S 3 t 6068 6067","S 3 e 6070 6069","S 2 h 6072 6071","S 4 n 6074 6073","S 4 e 6076 6075","S 4 e 6076 6077","S 2 # 6077 6078","S 4 a 6080 6079","S 2 # 6082 6081","S 3 s 6084 6083","S 5 n 6086 6085","P iy","S 2 m 6072 6086","S 2 k 6072 6087","P ay1","S 4 e 6076 6088","S 3 s 6090 6089","S 4 r 6086 6091","P iy1","P ih1","S 3 r 6093 6092","S 3 a 6095 6094","S 3 c 6097 6096","S 5 r 6099 6098","S 5 r 6101 6100","S 2 # 6103 6102","S 5 n 6086 6069","S 5 u 6086 6069","P epsilon","S 2 d 6086 6072","S 6 e 6105 6104","S 2 0 6077 6106","S 6 e 6108 6107","S 4 a 6110 6109","S 3 w 6111 6107","S 2 d 6077 6112","S 5 e 6114 6113","S 4 c 6116 6115","S 3 t 6118 6117","S 5 t 6069 6119","S 5 # 6069 6120","S 3 e 6122 6121","S 5 w 6086 6123","S 3 h 6072 6124","S 5 n 6126 6125","S 3 g 6086 6127","S 4 o 6129 6128","S 2 r 6107 6130","S 3 e 6072 6131","P ih","P ah","S 4 o 6132 6077","S 3 d 6072 6069","S 2 o 6107 6133","S 2 e 6107 6134","S 4 c 6136 6135","S 4 v 6138 6137","S 2 z 6077 6139","S 5 # 6107 6086","S 2 # 6141 6140","S 5 t 6069 6142","S 6 o 6069 6143","S 5 s 6145 6144","S 6 # 6147 6146","S 2 m 6132 6072","S 3 d 6149 6148","S 3 p 6077 6150","S 5 u 6152 6151","S 2 l 6154 6153","S 3 f 6069 6155","S 4 a 6069 6156","S 2 o 6132 6069","S 4 d 6158 6157","S 2 s 6160 6159","P ay","S 2 a 6107 6161","S 2 a 6107 6162","S 4 r 6164 6163","S 2 # 6166 6165","S 3 o 6168 6167","S 3 t 6107 6169","S 5 a 6171 6170","S 3 s 6173 6172","S 3 g 6086 6174","S 6 # 6086 6175","S 5 l 6086 6176","S 5 d 6178 6177","S 3 f 6072 6179","S 6 s 6181 6180","S 3 a 6132 6182","S 6 e 6076 6183","S 5 t 6185 6184","S 3 s 6069 6186","S 5 r 6188 6187","S 3 c 6086 6189","S 3 n 6154 6190","P y","S 5 l 6192 6191","S 6 r 6086 6077","S 4 g 6077 6072","S 3 r 6193 6107","S 3 r 6195 6194","S 3 w 6077 6196","S 2 e 6107 6077","S 2 u 6107 6197","S 3 e 6199 6198","S 6 n 6201 6200","S 5 # 6107 6202","S 5 r 6072 6203","S 6 # 6205 6204","S 4 r 6206 6086","S 3 s 6107 6207","S 5 o 6209 6208","S 4 n 6086 6210","S 3 l 6212 6211","S 5 k 6069 6213","S 3 d 6072 6214","S 2 s 6216 6215","S 5 n 6086 6217","S 5 w 6219 6218","S 3 f 6072 6220","S 6 # 6222 6221","S 6 i 6077 6223","S 2 i 6072 6224","S 3 f 6072 6225","S 5 s 6184 6226","S 6 # 6072 6076","S 6 z 6076 6227","S 6 a 6076 6228","S 2 0 6072 6229","S 3 r 6231 6230","S 3 g 6086 6069","S 2 0 6132 6232","S 3 b 6072 6233","S 6 e 6072 6234","S 2 b 6077 6235","S 6 s 6107 6236","S 6 t 6107 6237","S 6 u 6077 6238","S 2 o 6107 6239","S 3 o 6241 6240","S 4 g 6243 6242","S 3 o 6245 6244","S 5 a 6107 6246","S 5 a 6248 6247","S 5 k 6077 6249","S 2 # 6251 6250","S 4 n 6253 6252","P aa1","S 3 e 6076 6254","S 4 v 6086 6255","S 4 n 6086 6256","S 2 t 6072 6086","S 3 g 6258 6257","S 6 e 6260 6259","S 6 i 6069 6261","S 5 n 6263 6262","S 2 n 6086 6264","S 5 # 6069 6265","S 6 # 6069 6086","S 5 n 6267 6266","S 3 v 6086 6268","S 6 # 6270 6269","S 3 r 6076 6271","S 3 l 6273 6272","S 6 e 6275 6274","S 3 l 6154 6276","S 3 s 6069 6277","S 3 b 6279 6278","S 6 e 6076 6072","S 6 n 6077 6280","S 5 # 6282 6281","S 2 a 6154 6283","S 2 p 6132 6069","S 3 l 6285 6284","S 6 t 6069 6286","S 6 i 6132 6287","S 2 t 6077 6288","S 2 k 6077 6289","S 2 e 6107 6290","S 6 i 6077 6291","S 2 r 6107 6292","S 2 # 6294 6293","S 4 s 6296 6295","S 5 # 6298 6297","S 5 h 6300 6299","S 5 a 6302 6301","S 5 # 6206 6086","S 2 # 6304 6303","S 6 # 6306 6305","S 6 t 6308 6307","S 3 e 6072 6309","S 3 e 6311 6310","S 4 r 6313 6312","S 4 c 6315 6314","S 3 l 6317 6316","S 3 d 6319 6318","S 4 s 6320 6086","S 6 r 6086 6321","S 3 o 6154 6322","S 2 r 6086 6323","S 2 g 6069 6324","S 5 m 6086 6069","S 5 s 6069 6325","S 3 h 6072 6326","S 6 # 6076 6069","S 6 s 6086 6327","S 6 i 6086 6069","S 5 t 6329 6328","S 2 f 6086 6330","S 6 i 6108 6069","S 2 f 6076 6069","S 2 p 6072 6331","S 6 t 6069 6332","S 2 i 6069 6333","S 2 l 6069 6072","S 2 n 6069 6077","S 2 e 6077 6334","S 2 o 6069 6335","S 2 r 6069 6336","S 5 n 6338 6337","S 5 n 6108 6076","S 3 w 6077 6339","S 3 a 6072 6340","S 3 h 6341 6069","S 3 n 6154 6342","S 3 r 6069 6343","S 2 g 6069 6154","S 5 n 6072 6344","S 3 b 6132 6072","S 2 d 6107 6345","S 6 u 6077 6346","S 2 a 6107 6347","S 3 l 6077 6348","S 2 i 6107 6345","S 2 0 6350 6349","S 4 g 6352 6351","S 5 c 6108 6086","S 5 # 6206 6353","S 2 r 6355 6354","S 2 h 6357 6356","S 5 n 6359 6358","S 6 # 6086 6360","S 5 o 6362 6361","S 3 e 6086 6363","S 2 0 6072 6364","S 5 o 6107 6086","S 3 e 6072 6365","S 5 o 6367 6366","S 6 l 6369 6368","S 3 r 6107 6370","S 5 h 6372 6371","S 4 z 6374 6373","S 6 d 6086 6375","S 6 s 6377 6376","S 3 d 6086 6378","S 4 l 6380 6379","S 2 # 6072 6381","S 3 w 6072 6382","S 2 o 6076 6383","S 2 o 6385 6384","S 2 # 6386 6072","S 6 # 6387 6086","S 6 n 6086 6388","S 3 n 6390 6389","S 6 # 6069 6391","S 2 p 6072 6392","S 6 # 6086 6393","S 3 v 6072 6394","S 5 # 6086 6395","S 6 l 6069 6396","S 3 u 6072 6397","S 3 c 6399 6398","S 2 r 6069 6400","S 6 c 6069 6401","S 2 c 6072 6069","S 2 i 6069 6077","S 3 r 6069 6077","S 3 r 6069 6402","S 3 l 6076 6403","S 3 v 6069 6076","S 3 b 6077 6404","S 5 t 6069 6405","S 2 c 6069 6072","S 6 a 6154 6069","S 3 p 6069 6406","S 5 c 6072 6407","S 2 h 6107 6077","S 6 a 6107 6408","S 2 r 6107 6345","S 6 l 6077 6409","S 5 a 6411 6410","S 4 n 6077 6412","S 5 a 6414 6413","S 5 h 6072 6415","S 2 b 6086 6416","S 6 # 6418 6417","S 4 n 6420 6419","S 2 t 6422 6421","S 4 s 6132 6423","S 2 w 6425 6424","S 6 i 6107 6426","S 2 h 6072 6086","S 5 r 6428 6427","S 3 e 6086 6429","S 3 p 6431 6430","S 2 n 6072 6432","S 5 i 6434 6433","S 3 e 6436 6435","S 3 r 6076 6437","S 6 # 6107 6438","S 3 g 6107 6439","S 2 e 6107 6440","S 3 b 6072 6441","S 3 m 6442 6077","S 6 s 6444 6443","S 6 n 6108 6445","S 4 t 6446 6072","S 3 e 6072 6447","S 4 g 6132 6072","S 6 l 6107 6072","S 4 r 6072 6448","S 2 # 6072 6449","S 3 r 6451 6450","S 2 # 6072 6452","S 2 a 6076 6072","S 3 n 6454 6453","S 6 r 6069 6107","S 6 s 6132 6455","S 5 e 6086 6077","S 4 d 6072 6086","S 3 a 6154 6456","S 6 u 6069 6457","S 5 n 6069 6458","S 2 e 6460 6459","S 5 # 6462 6461","S 6 # 6072 6463","S 2 i 6086 6069","S 5 u 6465 6464","S 2 p 6072 6466","S 3 t 6108 6467","S 2 i 6108 6468","S 2 a 6069 6469","S 6 o 6069 6076","S 3 z 6069 6470","S 5 t 6472 6471","S 3 g 6077 6473","S 2 i 6475 6474","S 2 s 6086 6476","S 5 t 6072 6477","S 6 o 6077 6478","S 3 t 6479 6107","S 5 y 6481 6480","S 6 # 6483 6482","S 4 m 6077 6484","S 5 o 6486 6485","S 6 # 6076 6487","S 5 r 6489 6488","S 2 a 6077 6086","S 4 n 6491 6490","S 4 s 6493 6492","S 6 u 6108 6494","S 6 # 6076 6495","S 4 n 6497 6496","S 4 n 6132 6072","S 4 t 6132 6072","S 5 # 6076 6072","S 5 # 6132 6072","S 2 r 6108 6086","S 5 i 6499 6498","S 2 0 6501 6500","S 6 # 6077 6502","S 6 # 6077 6503","S 2 # 6072 6504","S 5 o 6086 6072","S 5 k 6506 6505","S 6 s 6108 6507","S 5 i 6076 6508","S 5 h 6509 6076","S 3 n 6076 6510","S 2 n 6069 6511","S 2 s 6107 6512","S 3 d 6513 6108","S 5 t 6515 6514","S 6 e 6107 6077","S 2 0 6517 6516","S 4 n 6519 6518","S 6 d 6072 6520","S 6 r 6521 6072","S 4 b 6523 6522","S 3 e 6525 6524","S 3 t 6108 6526","S 2 e 6108 6527","S 2 o 6077 6072","S 2 a 6076 6528","S 2 l 6107 6529","S 2 u 6107 6072","S 6 r 6132 6072","S 5 h 6072 6530","S 2 e 6531 6069","S 2 e 6069 6086","S 5 r 6154 6532","S 5 # 6069 6533","S 6 s 6086 6069","S 2 o 6069 6086","S 3 w 6072 6534","S 2 c 6536 6535","S 6 # 6086 6069","S 6 y 6072 6537","S 3 n 6154 6538","S 2 s 6072 6069","S 2 o 6069 6539","S 2 l 6069 6540","S 3 s 6076 6541","S 6 z 6076 6542","S 3 v 6077 6543","S 3 c 6462 6544","S 6 a 6086 6069","S 3 g 6086 6545","S 3 r 6069 6546","S 6 t 6107 6547","S 6 s 6107 6077","S 5 h 6549 6548","S 4 n 6550 6108","S 6 t 6552 6551","S 4 k 6107 6553","S 5 o 6072 6554","S 4 u 6189 6555","S 6 # 6076 6556","S 4 s 6077 6557","S 6 # 6559 6558","S 6 e 6132 6072","S 5 t 6122 6560","S 6 t 6108 6072","S 2 h 6072 6561","S 5 t 6108 6562","S 6 # 6563 6072","S 5 f 6077 6564","S 2 f 6072 6565","S 2 r 6086 6566","S 5 # 6568 6567","S 3 p 6077 6569","S 3 m 6077 6086","S 6 i 6077 6107","S 6 l 6107 6570","S 2 d 6086 6571","S 6 t 6086 6072","S 5 t 6573 6572","S 2 e 6107 6574","S 6 z 6108 6575","S 5 s 6107 6576","S 2 r 6132 6072","S 3 t 6107 6076","S 3 r 6578 6577","S 3 d 6580 6579","S 2 n 6108 6581","S 6 # 6076 6582","S 6 o 6107 6077","S 4 g 6584 6583","S 4 n 6077 6585","S 4 g 6107 6586","S 3 s 6588 6587","S 6 s 6072 6589","S 2 r 6077 6072","S 3 t 6072 6590","S 3 f 6072 6591","S 3 u 6593 6592","S 4 d 6072 6076","S 2 a 6108 6594","S 2 s 6596 6595","S 3 t 6076 6597","S 6 s 6599 6598","S 5 s 6601 6600","S 6 # 6602 6069","S 6 s 6154 6603","S 6 # 6069 6072","S 5 l 6069 6604","S 2 a 6606 6605","S 6 # 6108 6076","S 3 t 6069 6607","S 2 b 6072 6608","S 2 l 6069 6609","S 2 a 6611 6610","S 6 h 6613 6612","S 3 v 6069 6614","S 3 f 6077 6076","S 3 v 6072 6069","S 3 z 6069 6615","S 6 i 6072 6110","S 3 h 6077 6616","S 5 o 6618 6617","S 4 g 6072 6619","S 6 # 6072 6077","S 4 g 6621 6620","S 4 v 6623 6622","S 4 l 6624 6076","S 5 a 6626 6625","S 5 i 6628 6627","S 4 k 6107 6629","S 4 y 6076 6630","S 5 u 6632 6631","S 5 s 6077 6076","S 2 c 6076 6633","S 4 n 6076 6634","S 5 s 6072 6077","S 4 s 6072 6076","S 5 i 6072 6635","S 2 b 6132 6636","S 2 b 6132 6072","S 5 u 6638 6637","S 3 e 6077 6639","S 2 0 6072 6640","S 2 # 6641 6072","S 2 # 6643 6642","S 6 i 6645 6644","S 2 n 6077 6646","S 2 r 6107 6647","S 6 d 6108 6648","S 5 t 6077 6649","S 3 h 6107 6650","S 2 f 6107 6108","S 2 c 6652 6651","S 2 a 6108 6107","S 2 u 6107 6108","S 5 c 6654 6653","S 6 n 6656 6655","S 6 n 6658 6657","S 4 d 6660 6659","S 4 l 6662 6661","S 3 m 6108 6663","S 2 u 6086 6069","S 6 r 6072 6077","S 6 r 6665 6664","S 6 r 6077 6666","S 4 t 6668 6667","S 4 s 6086 6072","S 3 s 6108 6669","S 2 n 6108 6670","S 3 t 6108 6072","S 2 s 6072 6671","S 6 # 6072 6672","S 3 l 6077 6072","S 3 f 6674 6673","S 6 # 6675 6072","S 5 n 6069 6154","S 6 i 6069 6676","S 3 l 6072 6069","S 6 # 6678 6677","S 3 n 6154 6679","S 6 t 6069 6680","S 3 l 6069 6681","S 2 n 6069 6682","S 2 t 6069 6683","S 3 n 6069 6684","S 6 b 6069 6076","S 3 p 6069 6076","S 6 r 6076 6685","S 3 c 6687 6686","S 6 i 6077 6688","S 4 u 6690 6689","S 6 # 6076 6691","S 4 s 6693 6692","S 4 v 6695 6694","S 6 n 6107 6696","S 2 c 6697 6108","S 3 r 6072 6698","S 3 u 6076 6699","S 5 l 6701 6700","S 6 l 6108 6702","S 5 d 6704 6703","S 6 n 6706 6705","S 4 v 6107 6707","S 6 t 6709 6708","S 6 e 6077 6710","S 6 r 6077 6069","S 4 s 6072 6711","S 5 y 6108 6712","S 5 v 6077 6713","S 4 l 6076 6714","S 3 e 6716 6715","S 6 s 6072 6077","S 3 m 6077 6717","S 6 c 6072 6718","S 3 h 6077 6107","S 2 e 6072 6719","S 6 d 6132 6720","S 5 o 6722 6721","S 5 h 6076 6107","S 6 s 6723 6077","S 6 s 6725 6724","S 6 n 6727 6726","S 2 s 6729 6728","S 2 a 6107 6730","S 3 m 6731 6107","S 3 t 6108 6107","S 3 n 6077 6732","S 6 i 6069 6077","S 6 d 6734 6733","S 2 e 6108 6735","S 2 s 6737 6736","S 3 l 6108 6738","S 4 r 6107 6739","S 6 o 6072 6132","S 4 c 6596 6740","S 2 o 6076 6072","S 3 g 6108 6741","S 3 l 6743 6742","S 3 n 6132 6744","S 6 l 6072 6077","S 4 s 6746 6745","S 2 i 6108 6747","S 3 r 6108 6748","S 3 v 6108 6749","S 2 o 6076 6750","S 2 0 6072 6751","S 2 t 6753 6752","S 2 i 6072 6069","S 3 r 6076 6069","S 2 l 6754 6069","S 5 v 6076 6755","S 5 f 6076 6756","S 6 # 6069 6076","S 6 # 6069 6757","S 6 t 6069 6758","S 2 e 6069 6759","S 3 v 6069 6760","S 3 v 6154 6069","S 3 p 6072 6076","S 3 x 6086 6069","S 6 a 6069 6086","S 2 m 6107 6761","S 6 n 6763 6762","S 6 # 6069 6764","S 4 k 6107 6765","S 2 s 6077 6766","S 3 f 6077 6767","S 6 s 6769 6768","S 3 v 6072 6770","S 3 r 6108 6580","S 4 n 6108 6072","S 2 o 6108 6771","S 2 a 6077 6076","S 4 g 6773 6772","S 4 l 6077 6774","S 6 n 6776 6775","S 5 u 6778 6777","S 4 d 6077 6779","S 6 # 6076 6780","S 4 s 6077 6781","S 4 s 6077 6782","S 6 r 6784 6783","S 4 l 6132 6077","S 5 a 6786 6785","S 2 f 6108 6787","S 4 t 6076 6788","S 6 e 6790 6789","S 2 r 6076 6563","S 5 y 6072 6086","S 2 w 6077 6086","S 2 a 6086 6791","S 6 l 6107 6792","S 3 h 6107 6793","S 3 g 6086 6794","S 6 l 6796 6795","S 2 0 6072 6797","S 3 d 6107 6077","S 2 i 6107 6798","S 2 d 6107 6799","S 2 e 6801 6800","S 3 d 6108 6072","S 3 w 6803 6802","S 3 t 6077 6107","S 6 b 6077 6804","S 2 e 6108 6107","S 5 i 6077 6805","S 2 w 6072 6806","S 4 t 6808 6807","S 2 w 6072 6809","S 3 r 6077 6107","S 6 r 6072 6107","S 2 e 6107 6108","S 4 k 6072 6810","S 4 f 6108 6811","S 3 l 6072 6812","S 4 p 6072 6813","S 6 a 6077 6814","S 4 t 6077 6815","S 4 g 6107 6072","S 2 a 6108 6816","S 2 e 6072 6817","S 2 o 6108 6509","S 2 r 6077 6818","S 3 v 6072 6819","S 6 a 6107 6820","S 3 e 6086 6821","S 5 # 6069 6822","S 6 # 6824 6823","S 6 a 6076 6825","S 2 t 6076 6826","S 3 p 6076 6827","S 6 c 6069 6828","S 2 f 6069 6829","S 2 p 6069 6830","S 3 d 6107 6831","S 4 k 6833 6832","S 4 z 6072 6834","S 6 p 6072 6265","S 6 s 6836 6835","S 6 o 6108 6837","S 2 s 6077 6838","S 4 k 6840 6839","S 2 o 6108 6076","S 3 r 6072 6841","S 2 c 6108 6107","S 4 s 6842 6077","S 6 o 6077 6107","S 6 e 6072 6843","S 4 s 6077 6844","S 4 v 6072 6107","S 3 v 6846 6845","S 4 l 6108 6847","S 4 l 6849 6848","S 4 v 6723 6850","S 4 v 6723 6851","S 3 s 6853 6852","S 3 l 6077 6854","S 3 b 6132 6855","S 5 n 6857 6856","S 3 g 6077 6858","S 2 v 6086 6859","S 2 n 6076 6860","S 5 c 6077 6861","S 5 t 6077 6086","S 3 h 6086 6077","S 2 # 6077 6862","S 2 0 6107 6072","S 3 m 6864 6863","S 5 h 6866 6865","S 2 r 6077 6867","S 3 t 6069 6868","S 3 r 6077 6869","S 2 n 6107 6077","S 6 a 6077 6870","S 3 n 6108 6077","S 2 l 6107 6871","S 5 k 6872 6107","S 2 l 6107 6873","S 3 v 6077 6874","S 6 r 6876 6875","S 4 s 6072 6877","S 2 i 6108 6878","S 3 r 6880 6879","S 6 n 6077 6881","S 4 s 6072 6882","S 3 b 6072 6883","S 4 l 6885 6884","S 4 c 6072 6886","S 3 m 6077 6853","S 3 m 6072 6887","S 3 s 6072 6509","S 2 i 6077 6108","S 3 b 6072 6888","S 6 t 6077 6889","S 3 h 6069 6890","S 5 n 6069 6891","S 6 t 6154 6069","S 5 m 6154 6069","S 5 b 6076 6892","S 2 s 6076 6675","S 2 o 6069 6076","S 6 n 6069 6679","S 3 r 6072 6069","S 3 d 6069 6893","S 3 n 6107 6894","S 4 g 6896 6895","S 5 i 6076 6107","S 4 m 6077 6897","S 4 g 6899 6898","S 4 t 6076 6900","S 6 e 6902 6901","S 6 # 6904 6903","S 6 l 6906 6905","S 6 w 6069 6907","S 3 n 6107 6908","S 6 i 6909 6077","S 6 a 6077 6072","S 6 r 6077 6072","S 5 r 6911 6910","S 4 b 6072 6912","S 6 s 6914 6913","S 3 f 6072 6915","S 3 w 6072 6077","S 4 p 6069 6077","S 4 m 6916 6072","S 6 r 6918 6917","S 4 m 6077 6072","S 3 d 6920 6919","S 4 l 6108 6077","S 3 d 6922 6921","S 3 s 6924 6923","S 3 l 6077 6925","S 6 h 6086 6926","S 5 a 6076 6927","S 5 s 6077 6928","S 6 # 6077 6929","S 3 v 6077 6107","S 6 b 6107 6077","S 6 e 6931 6930","S 2 c 6933 6932","S 3 t 6077 6934","S 3 n 6925 6935","S 3 t 6077 6936","S 3 l 6077 6937","S 2 r 6107 6938","S 2 d 6107 6939","S 6 n 6940 6731","S 5 a 6942 6941","S 4 r 6944 6943","S 4 k 6107 6945","S 2 r 6108 6946","S 2 e 6108 6072","S 4 d 6948 6947","S 2 b 6077 6072","S 4 c 6072 6949","S 2 i 6950 6072","S 3 f 6072 6951","S 3 w 6072 6952","S 3 s 6072 6953","S 4 f 6072 6954","S 3 v 6072 6955","S 3 d 6957 6956","S 2 d 6072 6958","S 5 # 6069 6959","S 6 # 6072 6960","S 5 f 6076 6961","S 2 e 6069 6962","S 6 l 6107 6963","S 5 d 6965 6964","S 5 # 6967 6966","S 4 g 6077 6968","S 4 v 6970 6969","S 2 n 6077 6971","S 3 h 6108 6972","S 3 r 6077 6973","S 3 r 6077 6108","S 3 r 6975 6974","S 3 k 6107 6976","S 6 b 6978 6977","S 3 r 6108 6979","S 3 r 6108 6107","S 6 r 6069 6980","S 5 h 6107 6077","S 5 l 6982 6981","S 4 s 6077 6983","S 6 a 6985 6984","S 3 s 6077 6986","S 4 s 6077 6072","S 3 m 6988 6987","S 3 d 6108 6077","S 3 b 6108 6989","S 4 m 6132 6990","S 3 m 6992 6991","S 4 m 6077 6108","S 5 l 6107 6077","S 6 t 6077 6107","S 6 i 6077 6993","S 6 a 6077 6994","S 6 l 6069 6107","S 2 h 6072 6995","S 4 l 6072 6086","S 5 t 6077 6072","S 2 a 6086 6077","S 5 y 6108 6996","S 3 t 6108 6997","S 6 o 6108 6998","S 6 e 6069 6077","S 3 d 6077 6108","S 2 p 6108 6999","S 2 t 6077 7000","S 3 f 6077 7001","S 2 h 6909 6107","S 2 t 6077 6107","S 3 f 6107 7002","S 6 n 6077 7003","S 3 r 6107 7004","S 6 k 7006 7005","S 3 d 6086 7007","S 4 t 7009 7008","S 3 t 6108 7010","S 2 l 6107 6108","S 2 i 6132 6108","S 4 t 6072 6589","S 3 c 6072 6108","S 2 r 6076 7011","S 3 s 7013 7012","S 6 y 6072 7014","S 4 k 6072 6988","S 3 w 6072 7015","S 2 l 6072 7016","S 2 n 6072 6076","S 6 r 7018 7017","S 2 b 6069 7019","S 6 s 6072 6069","S 2 y 6076 7020","S 2 o 6069 7021","S 2 n 6077 7022","S 5 i 7024 7023","S 6 a 7026 7025","S 5 n 7028 7027","S 2 e 6107 7029","S 5 i 7031 7030","S 6 r 7033 7032","S 2 r 6072 6077","S 2 g 6107 7034","S 4 n 6076 6108","S 2 e 6108 6077","S 6 m 6107 7035","S 6 e 6107 7036","S 2 a 6107 7037","S 6 n 7039 7038","S 2 s 6086 7040","S 2 s 6108 7041","S 2 l 6107 6077","S 4 k 6442 7042","S 4 l 6077 7043","S 3 c 6077 7044","S 5 c 7045 6077","S 4 n 6077 7046","S 6 l 6107 7047","S 6 o 6077 7048","S 4 n 6072 6077","S 3 d 6988 7049","S 3 m 6072 6108","S 6 l 7051 7050","S 6 s 6072 7052","S 3 m 6077 6069","S 6 i 6107 6072","S 5 z 6072 7053","S 3 m 6076 7054","S 2 o 6108 6107","S 3 m 6107 7055","S 6 n 7056 6107","S 2 q 6077 7057","S 6 p 6077 7058","S 2 e 6107 7059","S 6 r 6072 7060","S 6 r 6107 7061","S 6 z 6076 7062","S 4 c 6107 6077","S 6 m 6072 7063","S 2 a 6108 7064","S 3 l 7066 7065","S 2 a 6108 7067","S 3 d 6069 7068","S 4 s 6077 7069","S 4 d 6072 6077","S 3 f 6072 6916","S 2 e 6132 6072","S 3 f 6072 7070","S 6 n 7072 7071","S 2 # 6077 7073","S 2 0 7074 6069","S 5 c 6076 7075","S 2 i 6069 7076","S 2 a 6107 7077","S 4 x 6107 7078","S 6 # 6076 7079","S 2 s 6077 7080","S 2 r 6108 7081","S 5 r 6108 7082","S 6 o 7084 7083","S 2 n 6107 7085","S 5 u 6108 6077","S 3 u 7087 7086","S 4 s 7089 7088","S 4 s 6072 7090","S 6 t 6108 6907","S 3 d 6107 7091","S 6 m 6077 6107","S 2 o 6107 7092","S 2 l 7094 7093","S 2 a 7096 7095","S 4 t 6108 7097","S 2 a 6108 7098","S 3 d 7100 7099","S 6 e 7102 7101","S 3 m 6077 7103","S 6 e 6077 6069","S 5 l 6069 6077","S 4 q 6501 7104","S 6 # 6072 7105","S 3 p 6072 7106","S 3 f 7108 7107","S 3 v 6072 7109","S 4 h 6108 7110","S 4 d 6072 7111","S 3 r 6107 6773","S 2 e 6107 7112","S 2 i 6108 6107","S 3 l 6077 7113","S 6 o 6077 7114","S 3 l 6107 6108","S 3 d 6107 7115","S 3 p 6107 6069","S 6 m 7117 7116","S 2 e 6072 6107","S 3 r 6072 7118","S 3 u 6086 6132","S 2 l 6077 6076","S 4 d 6072 7119","S 3 h 6069 7120","S 6 l 7122 7121","S 2 e 6076 7123","S 2 # 6072 7124","S 3 g 6077 7125","S 2 e 6077 7126","S 5 n 6069 7127","S 3 p 6076 7128","S 2 n 6069 7129","S 3 t 6107 7130","S 4 n 7132 7131","S 6 e 7134 7133","S 3 u 6077 7135","S 3 l 6076 6077","S 5 s 7137 7136","S 6 a 6161 7138","S 3 s 6069 6077","S 2 r 6107 7139","S 4 v 7141 7140","S 2 g 6072 7142","S 6 u 6108 7143","S 2 p 6077 6108","S 4 m 6076 6108","S 6 e 6107 7144","S 2 i 6107 7145","S 4 y 6108 7146","S 3 l 6108 6069","S 3 r 6108 7147","S 4 t 6108 6069","S 3 m 6108 6072","S 3 m 6108 7148","S 4 z 7150 7149","S 4 f 7151 6077","S 3 d 7152 6077","S 4 n 6077 7153","S 6 i 7155 7154","S 4 s 6077 7156","S 6 l 6077 7157","S 3 k 7159 7158","S 3 c 6077 7160","S 6 n 6108 6077","S 4 v 6072 7161","S 4 l 6069 6077","S 5 i 6076 7162","S 6 s 6107 7163","S 6 i 6077 7164","S 6 t 6077 6072","S 3 p 6107 6077","S 6 e 6108 7165","S 4 d 6108 7166","S 4 s 6072 7167","S 2 p 6072 7168","S 2 a 6069 7169","S 3 v 6077 7170","S 3 f 6108 6077","S 3 m 6108 7171","S 6 d 6072 6077","S 3 r 6077 6072","S 3 r 6072 6077","S 6 o 6069 6072","S 2 n 6076 7172","S 2 s 7173 6069","S 2 l 6107 7174","S 3 u 7176 7175","S 5 k 6077 7177","S 6 z 6108 7178","S 4 v 6107 7179","S 4 d 6077 7180","S 5 m 6077 7181","S 6 # 6077 6107","S 2 n 6077 7182","S 2 i 6107 7183","S 2 c 6072 7184","S 3 g 6077 6072","S 4 s 6086 6108","S 4 m 7186 7185","S 6 i 6107 7187","S 3 n 6077 7188","S 2 c 7190 7189","S 2 n 6108 7191","S 3 g 6108 7192","S 5 h 7194 7193","S 3 p 6069 6077","S 6 u 6108 6077","S 4 s 6077 6108","S 4 s 6077 7195","S 6 a 6132 7196","S 4 b 6072 6077","S 6 r 6077 7197","S 6 a 6077 7198","S 6 n 6077 7199","S 4 l 6077 6108","S 4 t 7201 7200","S 3 f 6072 6077","S 5 o 6108 7202","S 2 o 6107 6077","S 2 k 6077 7203","S 2 a 6108 7204","S 4 c 6108 6072","S 2 s 6072 7205","S 4 n 6072 7206","S 3 p 6069 7207","S 3 p 6077 7208","S 3 u 6072 7209","S 2 m 6076 7210","S 3 h 6069 6072","S 3 v 6107 7211","S 5 m 7213 7212","S 2 q 7215 7214","S 6 k 6077 7216","S 6 o 7218 7217","S 4 f 6108 7219","S 2 a 6077 7220","S 6 b 6108 7221","S 3 s 6072 7222","S 2 l 6107 7223","S 4 f 6069 7224","S 3 u 7226 7225","S 6 t 6069 6108","S 3 l 6077 6107","S 3 t 6077 7227","S 3 l 6108 7228","S 3 l 6077 6108","S 2 e 6108 7229","S 3 n 6108 7230","S 5 y 6550 7231","S 3 n 6069 7232","S 3 t 6072 7233","S 4 t 6072 7234","S 6 c 6108 6077","S 3 k 6077 7235","S 6 t 6077 7236","S 4 j 6072 7237","S 3 t 6072 6069","S 6 n 6072 7238","S 2 c 6077 7239","S 4 n 7241 7240","S 3 w 6072 7242","S 3 f 6072 7243","S 3 r 6076 7201","S 4 m 6077 7244","S 2 c 6076 7245","S 3 h 6076 7246","S 2 r 6107 7247","S 3 h 7249 7248","S 6 a 7250 6077","S 4 t 7252 7251","S 5 t 6077 7253","S 2 u 7255 7254","S 6 t 7257 7256","S 4 t 6077 7258","S 4 t 6108 7259","S 3 w 6077 7260","S 6 o 6077 7261","S 3 l 6072 6077","S 2 h 6107 7262","S 2 w 6072 7263","S 3 h 7265 7264","S 4 n 6108 6086","S 2 e 6077 7266","S 4 s 6077 7267","S 4 d 6108 7268","S 4 p 6108 7269","S 6 a 6077 7270","S 4 s 6077 7271","S 3 r 6072 7272","S 4 b 6108 6077","S 3 h 6077 7273","S 3 w 6077 7274","S 3 w 6072 7275","S 5 a 6072 7276","S 2 s 6077 6442","S 2 i 7096 7277","S 6 l 7279 7278","S 4 c 6108 7280","S 3 h 6108 7166","S 3 c 6077 7281","S 2 r 6076 7282","S 2 h 6076 7283","S 2 p 6107 7284","S 4 q 7286 7285","S 5 u 6108 7287","S 2 a 6108 6077","S 2 o 6069 7288","S 2 c 6108 6086","S 4 p 6077 7289","S 3 u 7291 7290","S 3 n 6077 7292","S 6 a 7294 7293","S 3 b 6077 7295","S 4 s 6077 7296","S 3 c 6077 7297","S 6 # 6072 7298","S 3 f 6077 7299","S 3 s 6107 7300","S 4 s 6072 7301","S 2 t 6072 7302","S 4 z 6072 6077","S 3 r 7303 6107","S 3 m 6108 7304","S 2 p 6108 7305","S 2 i 6072 7306","S 6 o 6077 7307","S 3 s 6072 7308","S 3 s 6072 7155","S 6 b 6077 7309","S 4 n 6069 7310","S 3 s 6072 7311","S 6 a 6072 7312","S 3 u 7314 7313","S 6 t 6108 7315","S 3 t 6108 6069","S 3 u 6072 7316","S 4 n 7318 7317","S 3 s 6076 7319","S 6 d 7321 7320","S 3 f 6077 6107","S 3 g 7323 7322","S 6 i 6077 6076","S 4 d 6108 7324","S 5 # 6108 7325","S 5 l 6077 7326","S 5 c 7328 7327","S 2 q 6077 7329","S 5 # 7330 6108","S 4 v 7332 7331","S 4 f 6108 7333","S 3 t 6077 7334","S 2 n 6069 7335","S 3 t 6108 6855","S 6 s 6072 7336","S 5 u 6076 6077","S 3 t 6107 7337","S 3 f 6072 7338","S 2 o 7340 7339","S 2 u 6107 6077","S 3 n 6108 7341","S 2 u 6108 7342","S 4 t 6072 6108","S 5 v 6077 7343","S 6 d 6108 6077","S 3 l 6077 7344","S 3 l 6077 7345","S 6 n 6108 7346","S 4 f 6072 7347","S 2 p 6072 7348","S 2 g 6072 6069","S 2 r 6108 6077","S 4 b 7350 7349","S 3 h 6072 7351","S 6 t 7353 7352","S 2 i 6108 7354","S 3 r 6076 7355","S 2 l 6076 7356","S 6 i 7358 7357","S 2 c 6077 7359","S 2 w 6077 7360","S 2 g 6077 7361","S 5 # 6077 7362","S 2 a 7364 7363","S 2 i 6108 7365","S 5 s 6108 7366","S 3 b 6077 7367","S 4 b 6108 7368","S 3 t 6107 7369","S 3 b 6076 7370","S 2 a 6077 7371","S 2 s 6077 7372","S 3 m 6072 7373","S 2 d 6107 7374","S 2 a 6108 7375","S 4 b 6108 7376","S 4 l 6072 6108","S 3 r 7378 7377","S 2 i 6108 7379","S 3 m 7380 6077","S 3 v 6077 7381","S 6 f 6077 7382","S 3 r 6072 6108","S 4 t 7384 7383","S 3 m 6069 7385","S 3 h 6077 7386","S 2 e 6077 6108","S 4 d 7388 7387","S 3 m 6072 7161","S 3 n 6072 6077","S 3 p 6072 7389","S 6 s 6076 6069","S 2 d 6076 7390","S 2 i 7392 7391","S 4 z 6076 7393","S 6 i 6077 7394","S 4 s 7395 6077","S 5 s 6108 6790","S 4 t 6108 6077","S 2 p 6077 7396","S 3 t 6108 7397","S 2 e 6077 7398","S 5 # 6108 6077","S 3 l 6077 7399","S 4 f 7401 7400","S 6 l 6077 7402","S 3 u 6076 7403","S 4 v 6077 7404","S 2 o 6077 7405","S 2 e 6077 7406","S 3 w 6077 6107","S 2 i 6108 7407","S 4 p 6077 7408","S 3 t 6108 7409","S 6 r 6108 7410","S 3 t 6108 7411","S 4 t 7412 6077","S 6 i 6072 6077","S 6 s 6108 6077","S 4 l 6072 6076","S 5 h 6076 6072","S 4 k 6072 7413","S 4 f 7415 7414","S 4 c 7416 6077","S 3 r 6108 6077","S 3 e 6076 7417","S 2 g 6076 7418","S 2 a 7420 7419","S 6 a 7422 7421","S 5 t 6077 7423","S 2 r 7424 6108","S 2 t 6077 7425","S 3 x 6108 7426","S 6 o 6108 7427","S 6 i 6077 7428","S 3 p 7429 6077","S 6 v 7431 7430","S 2 n 6077 7432","S 3 d 6107 6108","S 2 i 6077 7433","S 2 q 6108 7434","S 2 e 6076 7435","S 6 i 6072 7436","S 2 l 6108 7437","S 6 l 6108 7438","S 2 u 6069 7439","S 6 c 6077 6108","S 4 n 6108 7440","S 6 u 6069 6077","S 2 n 6108 7441","S 2 n 6077 7442","S 2 o 6077 6108","S 3 d 6077 6072","S 2 t 6072 7443","S 2 t 6076 7444","S 6 e 7446 7445","S 5 t 7448 7447","S 5 c 6077 7449","S 4 t 6107 7450","S 3 c 7452 7451","S 5 l 6077 6108","S 2 c 6077 7089","S 6 o 7454 7453","S 3 r 6077 7455","S 6 h 6077 7456","P ae1","S 6 s 7458 7457","S 4 t 6108 6072","S 6 c 7459 6108","S 3 d 6076 6077","S 3 m 6077 7460","S 4 l 6077 6076","S 3 l 7462 7461","S 3 d 6108 7463","S 4 n 7465 7464","S 6 v 6108 7466","S 3 n 6108 7467","S 4 t 7469 7468","S 4 m 6077 7470","S 2 p 6076 7471","S 2 f 6069 6076","S 5 z 7473 7472","S 4 b 7475 7474","S 4 s 7477 7476","S 3 t 6077 7478","S 5 t 7480 7479","S 4 d 6077 7159","S 2 l 7452 7481","S 4 p 6108 6077","S 2 g 6077 7482","S 2 e 6108 7483","S 3 m 6077 7484","S 6 t 6077 7485","S 4 t 7487 7486","S 4 t 7489 7488","S 3 c 7491 7490","S 4 m 6077 7492","S 2 g 6072 7493","S 2 b 6072 6077","S 2 r 6108 7494","S 6 m 6077 7495","S 6 i 6108 7496","S 6 d 6077 7497","S 3 l 6108 7096","S 6 a 6108 7498","S 6 c 6108 7499","S 4 p 6108 7500","S 2 n 6076 6072","S 5 u 7502 7501","S 6 o 6076 6077","S 3 t 7504 7503","S 5 l 6108 6077","S 5 # 7506 7505","S 5 # 7508 7507","S 6 s 6108 7509","S 4 s 7511 7510","S 3 n 6108 7512","S 4 t 7514 7513","S 2 e 7516 7515","S 5 s 7190 6077","S 3 b 6077 6916","S 3 r 6077 7517","S 4 h 6069 7518","S 2 e 6077 7410","S 4 n 7520 7519","S 2 e 6076 6072","S 2 g 6077 6108","S 2 a 6077 6108","S 4 p 6077 7521","S 3 r 6077 7522","S 4 k 6072 7523","S 2 a 6108 7524","S 6 v 6108 7250","S 3 v 6077 7525","S 2 o 6076 7526","S 2 s 6072 6108","S 2 r 6072 7527","S 2 o 7529 7528","S 4 t 6108 7530","S 3 v 6077 7531","S 2 s 6077 7532","S 4 b 6108 7533","S 4 d 6108 7534","S 3 r 7536 7535","S 3 x 6108 6077","S 3 v 6077 7537","S 6 e 6108 7538","S 3 n 6069 6108","S 3 v 6077 6108","S 3 m 6077 7539","S 5 r 6076 6077","S 3 l 6077 7540","S 3 m 6077 7541","S 2 n 6077 6108","S 3 r 6077 7542","S 4 l 6108 7543","S 2 d 6077 7544","S 3 l 6108 7545","S 2 n 6077 7546","S 3 l 6072 7547","S 3 p 6108 7548","S 2 r 6108 7549","S 4 s 6077 7550","S 2 l 6108 7551","S 6 h 7553 7552","S 5 t 7555 7554","S 4 f 6108 7556","S 5 l 7558 7557","S 4 t 6072 7559","S 4 d 6108 7560","S 4 l 6108 7561","S 3 t 6108 7562","S 5 s 6077 6108","S 3 r 7563 6108","S 4 b 6108 7564","S 4 s 7565 6077","S 3 k 7567 7566","S 6 u 6077 7568","S 4 d 6077 7569","S 4 m 6108 6069","S 3 f 6077 6818","S 2 e 7122 6077","S 6 r 6077 7570","S 2 o 6108 7571","S 6 n 6108 7572","S 4 n 6077 7573","S 2 s 6077 7574","S 3 l 6072 7575","S 5 r 7577 7576","S 5 c 6077 7536","S 3 s 6108 7578","S 4 s 6108 6077","S 6 s 6108 7579","S 5 r 6108 7580","S 4 l 6077 7581","S 4 l 6077 7582","S 6 d 6108 7583","S 4 t 6108 6076","S 6 a 6077 6107","S 6 o 6077 6108","S 5 s 6108 7584","S 2 c 6077 7585","S 5 # 7587 7586","S 2 c 7366 6077","S 3 d 6077 7588","S 6 l 7590 7589","S 6 e 6077 6072","S 3 n 6072 7591","S 3 t 6069 7592","S 2 s 6108 7593","S 3 r 7595 7594","S 4 n 6077 6072","S 2 e 7597 7596","S 6 o 7598 6108","S 4 d 6108 7599","S 2 t 6077 7600","S 2 l 6108 7601","S 3 r 7013 7602","S 5 l 6108 6069","S 3 c 6108 7603","S 6 # 6077 7604","S 5 k 6077 6902","S 5 f 6108 7605","S 3 t 7607 7606","S 3 n 6077 7608","S 6 b 6077 7609","S 3 s 6077 6069","S 4 l 6072 7610","S 3 r 6108 7611","S 3 h 6077 6108","S 2 l 6108 7612","S 4 c 6108 7613","S 4 d 7615 7614","S 3 l 7617 7616","S 4 p 6077 6108","S 5 c 6108 7618","S 2 s 6077 6108","S 2 u 6108 7619","S 4 p 6108 6132","S 4 t 7621 7620","S 5 p 6077 6108","S 6 e 6077 7622","S 3 d 6077 7623","S 2 t 6077 7624","S 3 l 6077 7625","S 3 h 6077 7626","S 3 c 6072 7627","S 6 w 6077 6069","S 3 h 6108 7628","S 6 t 6108 6077","S 4 s 7630 7629","S 5 t 6077 7631","S 6 r 6108 7632","S 4 s 7633 6077","S 3 f 6077 7634","S 4 m 6077 7635","S 3 x 6108 7636","S 5 c 6077 7637","S 5 s 6077 7638","S 3 p 6077 7639","S 2 s 6077 7517","S 6 e 6108 6077","S 4 l 7410 7640","S 3 r 6072 7641","S 2 e 6108 7166","S 3 s 7643 7642","S 3 r 7645 7644","S 3 b 6077 7646","S 5 # 7648 7647","S 6 # 6108 7649","S 3 t 6077 7650","S 2 o 7652 7651","S 6 # 7475 7653","S 5 u 6077 7654","S 5 n 6077 7655","S 2 i 6902 7656","S 2 n 6077 7657","S 4 d 6108 6072","S 2 r 7659 7658","S 2 r 6077 6108","S 5 # 7661 7660","S 2 h 6077 7662","S 2 r 6108 7663","S 3 p 6077 7664","S 4 l 6108 7665","S 5 # 6077 6108","S 3 l 7555 7666","S 2 r 7388 7667","S 5 t 6077 6108","S 3 m 6077 7668","S 5 z 6077 6108","S 3 s 6077 7669","S 2 y 6108 7670","S 3 l 6077 7671","S 2 c 6077 7672","S 3 r 7652 7673","S 3 t 7675 7674","S 3 b 6077 7676","S 5 c 6076 6077","S 2 u 6108 7677","S 3 d 7563 7678","S 3 s 6108 7152","S 3 d 6077 7679","S 3 n 7555 6077","S 6 l 6077 7159","S 3 c 6077 7680","S 2 r 6077 7681","S 6 c 6077 7682","S 2 u 7684 7683","S 3 t 6076 7685","S 3 n 6108 7686","S 6 # 6108 7687","S 2 l 6077 7688","S 2 g 6077 7600","S 3 n 6108 7689","S 3 m 6108 7690","S 2 n 6077 7691","S 2 l 6077 7692","S 3 m 6077 6108","S 2 l 7452 7693","S 5 # 7695 7694","S 3 n 6108 7696","S 6 o 7698 7697","S 6 s 6108 6069","S 2 y 6108 7699","S 5 t 7701 7700","S 4 t 6077 7702","S 6 a 6108 6077","S 3 b 7704 7703","S 4 l 7706 7705","S 6 # 6108 6077","S 4 t 6077 6108","S 4 t 7707 6077","S 3 w 6077 7708","S 5 c 6077 6108","S 2 r 6077 7709","S 3 r 7424 7710","S 3 t 6108 7711","S 3 b 6108 6077","S 3 n 6077 7712","S 2 o 6108 7713","S 3 t 7714 6077","S 3 c 7716 7715","S 3 m 6108 6077","S 3 s 6077 7717","S 3 d 6077 7718","S 6 a 6108 7719","S 3 s 6077 7720","S 2 n 7721 6077","S 2 b 6108 6077","S 2 n 6108 6077","S 3 k 6077 7722","S 2 s 6108 7424","S 3 k 6077 7723","S 3 t 7725 7724","S 3 v 6108 6077","S 3 x 6077 7726","S 3 g 6077 6108","S 2 b 6108 7727","S 3 p 6077 7728","S 2 u 6077 7729","S 2 n 6077 7730","S 4 s 6902 6077","S 5 l 7732 7731","S 6 s 6108 7733","S 3 n 6077 7734","S 2 t 6077 6108","S 3 t 6077 7735","S 3 b 6077 7736","S 3 l 6077 7737","S 3 s 6077 7190","S 5 t 6108 6077","S 2 s 7738 6077","S 3 f 6108 7739","S 3 t 7691 6077","S 2 n 7740 6934","S 6 r 6108 6077","I 7741 j","S 3 # 7743 7742","S 4 a 7745 7744","P jh","S 3 n 7743 7746","S 3 o 7748 7747","S 3 d 7743 7749","S 3 a 7743 7750","P y","S 4 i 7743 7751","S 3 e 7748 7752","S 4 o 7754 7753","S 3 u 7748 7743","S 4 e 7743 7755","S 3 s 7757 7756","S 4 u 7743 7758","S 3 b 7748 7743","P epsilon","S 3 o 7757 7759","S 4 k 7757 7760","S 4 d 7757 7761","S 3 e 7757 7743","I 7762 k","S 4 n 7764 7763","S 4 k 7766 7765","S 1 0 7766 7767","P k","P epsilon","S 1 n 7766 7765","I 7768 l","S 4 l 7770 7769","S 4 e 7772 7771","S 5 # 7774 7773","S 6 g 7776 7775","S 3 b 7778 7777","S 6 # 7774 7779","P epsilon","S 4 k 7781 7780","S 4 i 7783 7782","S 5 # 7785 7784","S 5 # 7787 7786","S 2 t 7774 7788","S 3 l 7790 7789","S 3 a 7792 7791","P l","S 3 l 7782 7793","S 3 t 7795 7794","S 3 l 7782 7796","S 2 # 7782 7797","P ah-l","S 6 k 7774 7798","S 4 m 7800 7799","S 6 0 7782 7801","S 3 o 7802 7782","S 2 w 7774 7803","S 3 b 7787 7804","S 6 # 7806 7805","S 5 y 7782 7807","S 3 a 7782 7808","S 5 s 7787 7809","S 3 a 7774 7810","S 4 # 7812 7811","S 3 a 7814 7813","S 4 u 7815 7782","S 2 f 7774 7816","S 2 t 7774 7817","S 3 g 7787 7818","S 3 d 7820 7819","S 5 y 7782 7821","S 6 s 7782 7822","S 3 i 7782 7823","S 5 d 7787 7824","S 6 l 7825 7774","S 3 u 7827 7826","S 3 d 7787 7828","S 3 o 7829 7782","S 5 # 7774 7830","S 2 e 7831 7782","S 5 # 7774 7782","S 5 # 7774 7832","S 3 t 7834 7833","S 3 g 7836 7835","S 6 s 7782 7837","S 3 l 7782 7838","S 5 r 7840 7839","S 3 o 7782 7841","S 5 y 7782 7842","S 2 c 7782 7774","S 4 f 7844 7843","S 5 # 7845 7782","S 3 t 7787 7846","S 2 c 7774 7782","S 5 a 7782 7847","S 5 m 7782 7848","S 5 a 7782 7849","S 2 z 7787 7850","S 2 r 7782 7851","S 3 p 7853 7852","S 2 # 7782 7854","S 2 d 7787 7855","S 3 i 7782 7856","S 6 g 7782 7857","S 2 i 7787 7858","S 3 e 7782 7859","S 2 a 7787 7860","S 4 v 7862 7861","S 2 h 7863 7782","S 4 t 7864 7782","S 3 g 7787 7865","S 2 c 7774 7866","S 5 l 7867 7782","S 5 o 7782 7868","S 3 p 7787 7869","S 2 s 7782 7787","S 3 k 7871 7870","S 2 p 7873 7872","S 5 c 7782 7874","S 6 a 7787 7875","S 3 a 7782 7876","S 5 t 7782 7877","S 2 s 7782 7878","S 3 y 7782 7879","S 2 u 7787 7880","S 4 n 7829 7782","S 3 a 7881 7782","S 3 a 7774 7782","S 2 a 7774 7782","S 3 a 7782 7882","S 2 b 7774 7881","P y","S 2 f 7774 7883","S 3 d 7885 7884","S 3 z 7787 7782","S 2 # 7782 7886","S 5 c 7787 7782","S 5 m 7782 7787","S 6 s 7782 7887","S 2 n 7787 7782","S 3 e 7782 7888","S 2 n 7787 7889","S 2 u 7787 7782","S 3 u 7782 7890","S 6 s 7782 7891","S 2 h 7774 7782","S 3 e 7782 7892","S 2 h 7774 7893","S 3 f 7787 7894","S 2 d 7787 7782","S 6 s 7782 7895","S 6 o 7787 7896","S 3 o 7782 7897","S 5 s 7787 7898","S 3 r 7900 7899","S 5 t 7782 7901","S 3 i 7782 7902","S 2 b 7774 7782","S 3 s 7782 7903","S 5 b 7787 7782","S 6 a 7787 7904","S 5 s 7906 7905","S 5 d 7787 7907","S 3 w 7782 7908","S 2 a 7782 7787","S 2 m 7782 7909","S 2 c 7911 7910","S 3 c 7912 7782","S 6 e 7787 7913","S 5 d 7915 7914","S 3 y 7782 7916","S 5 m 7787 7917","S 3 s 7918 7787","S 5 m 7782 7919","S 3 u 7782 7920","S 3 h 7787 7782","S 2 # 7782 7787","S 2 n 7782 7787","S 5 r 7921 7782","S 3 u 7782 7922","S 3 u 7782 7923","S 5 b 7787 7924","S 2 i 7782 7787","S 2 b 7782 7925","S 3 o 7782 7926","S 3 s 7851 7927","S 3 w 7782 7928","S 3 r 7782 7929","S 6 e 7787 7930","S 5 r 7787 7782","S 3 h 7782 7931","S 3 g 7933 7932","S 3 r 7782 7934","S 3 w 7782 7787","S 2 t 7787 7782","S 3 r 7782 7935","S 3 d 7937 7936","S 2 a 7782 7938","S 2 n 7787 7939","S 3 y 7782 7929","S 2 c 7911 7940","S 2 n 7782 7941","S 2 e 7782 7942","S 3 d 7787 7943","S 3 f 7945 7944","S 2 d 7782 7787","S 2 n 7787 7946","S 3 k 7787 7947","S 3 p 7948 7782","S 2 f 7782 7787","S 2 i 7787 7782","S 3 g 7787 7949","S 2 p 7782 7787","S 2 f 7787 7950","S 2 z 7787 7951","S 3 p 7787 7952","S 3 c 7787 7782","I 7953 m","S 4 m 7955 7954","S 4 c 7957 7956","P epsilon","S 3 s 7959 7958","S 2 0 7961 7960","S 4 l 7960 7962","S 4 # 7964 7963","P m","S 5 e 7966 7965","S 3 h 7967 7960","S 4 s 7964 7968","P ah-m","S 5 i 7970 7969","S 6 l 7970 7971","S 2 t 7972 7960","S 5 r 7973 7960","P m-ah","P m-ae1","S 6 n 7970 7969","S 6 0 7964 7960","S 4 e 7974 7960","S 2 e 7960 7964","I 7975 n","S 4 g 7977 7976","S 4 n 7979 7978","S 5 # 7981 7980","S 4 k 7983 7982","S 2 m 7985 7984","S 5 e 7987 7986","P ng","S 4 c 7989 7988","S 6 m 7991 7990","S 6 s 7985 7992","P epsilon","S 5 i 7994 7993","S 6 r 7996 7995","S 4 q 7998 7997","S 5 t 7981 7999","S 5 n 8001 8000","P n","S 5 i 7985 8002","S 5 r 8004 8003","S 2 # 7991 8005","S 6 # 7991 8006","S 2 s 7991 8007","S 4 x 7981 7991","S 2 # 7991 8008","S 5 k 7981 8009","S 6 y 7981 8010","S 2 # 7991 7981","S 2 y 7985 8011","S 6 g 7991 8012","S 6 a 7991 8013","S 6 b 7991 8014","S 6 s 7991 8015","S 2 r 7981 8016","S 6 e 7981 7991","S 5 e 7991 8017","S 5 i 7981 8018","S 2 # 7985 8019","S 5 y 7991 7981","S 6 o 7991 7981","S 6 a 7991 8020","S 2 l 8022 8021","S 2 h 7981 8023","S 5 # 7981 8024","S 6 p 7991 7981","S 2 i 7985 8025","S 2 m 7981 8026","S 6 l 8028 8027","S 6 n 7981 8029","S 2 n 7981 8030","S 5 i 7991 8031","S 2 b 8032 7985","S 2 l 7981 8033","S 6 o 7991 8034","S 2 v 7991 7981","S 6 l 7981 7991","S 2 f 7981 8035","S 5 y 7991 8036","S 6 # 8037 7985","S 2 b 7981 8038","S 6 a 7991 8039","S 2 w 7981 8040","S 5 h 8042 8041","S 5 e 7991 7985","S 2 v 7981 8043","S 2 t 7991 8044","S 2 g 7991 7981","S 6 # 8046 8045","S 6 e 7991 8047","S 6 n 8048 7991","S 2 r 7991 8049","S 6 l 8051 8050","S 5 a 7981 8052","S 2 s 7981 7991","S 2 r 7981 7991","S 6 m 7981 8053","S 2 d 7981 8054","S 5 a 7991 7981","S 2 i 7991 8055","S 6 d 7991 8056","S 6 s 7991 8057","S 2 r 7991 7981","S 2 # 7991 8058","S 2 r 8059 7991","S 6 n 7981 7991","S 6 i 7991 8060","S 5 o 7981 7991","I 8061 o","S 4 r 8063 8062","S 4 # 8065 8064","S 1 0 8067 8066","S 3 o 8069 8068","S 3 o 8071 8070","S 1 # 8073 8072","S 3 w 8075 8074","S 4 o 8077 8076","S 4 d 8079 8078","S 3 a 8081 8080","P uw1","S 5 # 8083 8082","S 3 o 8085 8084","S 3 c 8087 8086","P epsilon","S 4 u 8089 8088","S 3 c 8090 8075","S 4 k 8092 8091","S 2 l 8094 8093","S 3 g 8096 8095","P aw1","S 3 w 8098 8097","S 3 c 8100 8099","S 2 s 8100 8101","S 2 d 8100 8102","S 5 r 8104 8103","S 5 r 8105 8100","S 4 n 8107 8106","S 5 s 8109 8108","S 5 r 8096 8075","S 2 f 8111 8110","S 1 s 8113 8112","S 2 f 8071 8114","P ah1","S 3 d 8096 8115","P ow","S 5 s 8117 8116","S 2 a 8075 8118","S 3 o 8120 8119","P ao1","S 2 f 8122 8121","S 2 c 8100 8120","S 5 e 8124 8123","S 6 o 8126 8125","S 6 i 8100 8127","S 4 w 8129 8128","S 5 # 8131 8130","S 5 r 8133 8132","S 6 e 8135 8134","S 2 w 8137 8136","S 4 t 8120 8071","S 1 b 8138 8120","S 5 # 8120 8071","S 2 w 8120 8139","S 3 n 8096 8140","S 5 e 8142 8141","S 6 # 8075 8143","S 2 s 8144 8075","S 3 t 8075 8145","P uh1","S 3 m 8075 8146","S 3 i 8147 8100","S 5 a 8149 8148","S 3 n 8100 8150","S 6 y 8100 8151","S 3 b 8152 8100","S 6 o 8075 8153","S 4 i 8155 8154","S 6 k 8100 8156","S 3 i 8158 8157","S 3 i 8160 8159","S 5 g 8162 8161","S 3 h 8164 8163","S 1 0 8166 8165","S 3 h 8081 8167","S 2 c 8071 8168","S 4 l 8120 8071","S 6 # 8169 8120","S 2 g 8120 8170","S 2 l 8096 8171","S 5 f 8173 8172","S 3 m 8175 8174","S 6 h 8075 8176","S 5 t 8075 8100","S 2 a 8177 8075","S 2 p 8100 8178","P ao","S 5 o 8180 8179","S 6 i 8075 8181","S 6 # 8100 8182","S 6 e 8183 8100","P aa1","S 6 a 8075 8184","S 4 y 8186 8185","S 5 s 8188 8187","S 5 # 8190 8189","S 5 e 8192 8191","S 2 t 8160 8193","S 3 s 8195 8194","P ah","S 5 t 8197 8196","S 2 o 8096 8198","S 3 t 8120 8199","S 1 0 8081 8200","S 1 # 8201 8160","S 6 s 8075 8202","S 1 # 8081 8203","S 1 # 8071 8204","P uh","S 2 h 8120 8113","S 3 t 8205 8096","S 5 t 8207 8206","S 3 d 8147 8075","S 6 d 8209 8208","S 6 # 8211 8210","S 6 t 8212 8100","S 3 d 8100 8075","S 5 o 8075 8213","S 6 g 8215 8214","S 3 b 8075 8216","S 3 m 8218 8217","S 6 a 8100 8219","S 3 f 8100 8220","S 6 u 8075 8100","S 5 e 8222 8221","S 5 o 8224 8223","S 6 g 8226 8225","S 2 # 8228 8227","S 5 n 8230 8229","S 1 # 8232 8231","S 5 g 8234 8233","S 6 # 8236 8235","S 5 e 8238 8237","S 3 t 8160 8239","S 1 a 8240 8160","S 5 n 8242 8241","S 2 0 8081 8243","S 2 # 8245 8244","S 6 t 8247 8246","P aw","S 2 t 8081 8075","S 3 c 8075 8248","S 1 0 8081 8249","S 5 h 8250 8071","S 1 r 8096 8251","S 5 m 8253 8252","S 3 f 8255 8254","S 6 t 8075 8256","S 2 a 8075 8257","S 6 d 8075 8147","S 1 r 8147 8258","S 2 n 8100 8147","S 3 h 8100 8259","S 6 o 8261 8260","S 2 # 8100 8075","S 3 d 8100 8262","S 3 d 8147 8263","S 6 n 8147 8264","S 6 h 8100 8265","S 3 t 8100 8266","S 2 # 8268 8267","S 4 v 8270 8269","S 6 m 8096 8271","S 3 t 8096 8272","S 5 r 8274 8273","S 3 d 8071 8275","S 6 # 8277 8276","S 3 l 8278 8272","S 2 # 8280 8279","S 3 d 8081 8281","S 3 k 8283 8282","S 3 l 8275 8284","S 3 c 8286 8285","S 3 c 8288 8287","S 1 0 8290 8289","S 3 g 8100 8291","S 6 c 8152 8292","S 6 # 8275 8293","S 2 g 8160 8294","S 2 i 8295 8160","S 5 l 8297 8296","S 3 y 8075 8298","S 6 # 8081 8299","S 1 # 8301 8300","S 3 d 8303 8302","S 6 # 8305 8304","S 3 c 8100 8147","S 3 h 8081 8306","S 3 r 8081 8075","S 4 t 8071 8075","S 1 h 8275 8096","S 3 f 8308 8307","S 6 a 8309 8100","S 6 u 8075 8310","S 6 # 8075 8311","S 6 l 8147 8312","S 2 o 8075 8313","S 2 r 8100 8147","S 5 g 8100 8314","S 5 t 8316 8315","S 3 f 8318 8317","S 6 n 8075 8319","S 6 # 8100 8320","S 6 l 8100 8075","S 6 y 8100 8321","S 3 b 8147 8100","S 5 f 8323 8322","S 4 m 8325 8324","S 6 # 8327 8326","S 2 0 8329 8328","S 1 0 8272 8330","P oy1","S 5 a 8332 8331","S 1 0 8272 8277","P ow1","S 3 l 8272 8333","P w","P oy","S 1 # 8335 8334","S 6 l 8337 8336","S 3 t 8081 8338","S 3 n 8096 8339","S 1 a 8096 8200","S 3 r 8275 8081","S 1 0 8341 8340","S 6 # 8343 8342","S 1 0 8345 8344","S 6 e 8160 8346","S 1 # 8348 8347","S 6 y 8350 8349","S 3 d 8351 8275","S 1 # 8160 8352","S 6 t 8096 8160","S 2 n 8354 8353","P aa","S 5 d 8356 8355","S 2 o 8160 8357","S 1 l 8075 8358","S 3 m 8360 8359","S 2 r 8362 8361","S 2 t 8100 8363","S 3 c 8100 8364","S 6 h 8275 8075","S 3 j 8075 8365","S 2 e 8169 8366","S 6 t 8081 8075","S 5 a 8368 8367","S 6 # 8075 8369","S 1 a 8100 8370","S 1 r 8100 8371","S 2 m 8075 8100","S 2 l 8100 8372","S 3 l 8100 8075","S 3 l 8100 8373","S 3 f 8375 8374","S 6 r 8147 8376","S 3 t 8147 8100","S 5 g 8147 8100","S 3 m 8075 8100","S 2 # 8378 8377","S 3 s 8100 8379","S 4 a 8381 8380","S 4 f 8383 8382","S 4 e 8385 8384","S 3 c 8387 8386","S 1 0 8389 8388","S 4 m 8390 8275","S 3 r 8392 8391","S 6 r 8275 8094","S 3 u 8272 8393","S 5 c 8395 8394","S 6 # 8275 8096","S 3 a 8081 8396","S 6 t 8160 8397","S 2 s 8275 8398","S 3 h 8081 8399","S 5 a 8200 8400","S 1 # 8402 8401","S 3 h 8404 8403","S 6 c 8406 8405","S 3 n 8408 8407","S 5 a 8152 8409","S 5 i 8275 8152","S 1 # 8411 8410","S 6 o 8413 8412","S 6 r 8152 8160","S 6 s 8415 8414","S 2 l 8075 8416","S 2 # 8418 8417","S 3 h 8094 8419","S 2 r 8275 8094","S 2 s 8160 8420","S 3 m 8160 8421","S 3 d 8160 8422","S 5 c 8424 8423","S 3 b 8075 8425","S 6 d 8275 8426","S 6 # 8075 8427","S 6 s 8081 8428","S 1 0 8081 8160","S 2 t 8100 8429","S 1 u 8096 8200","S 3 r 8081 8430","S 3 r 8075 8431","S 6 a 8075 8432","S 1 0 8081 8433","S 6 z 8075 8434","S 6 # 8100 8435","S 5 c 8100 8436","S 2 r 8100 8437","S 2 p 8100 8438","S 3 f 8100 8439","S 5 t 8100 8440","S 6 z 8075 8441","S 5 g 8443 8442","S 6 e 8444 8100","S 6 t 8100 8445","S 3 l 8100 8446","S 3 k 8100 8447","S 5 # 8449 8448","S 5 r 8100 8450","S 3 k 8147 8451","S 6 # 8453 8452","S 4 a 8455 8454","S 5 r 8100 8456","S 5 a 8458 8457","S 5 f 8094 8459","S 4 m 8461 8460","S 4 m 8463 8462","S 3 s 8160 8464","S 3 m 8071 8465","S 2 p 8467 8466","S 2 e 8469 8468","S 6 c 8275 8470","S 6 e 8272 8471","S 1 o 8160 8472","S 6 c 8160 8473","S 3 n 8275 8474","S 3 c 8081 8475","S 5 e 8152 8081","S 6 e 8275 8476","S 3 r 8081 8275","S 3 d 8096 8477","S 2 c 8096 8275","S 5 i 8479 8478","S 5 i 8152 8096","S 5 t 8481 8480","S 5 t 8295 8482","S 1 0 8484 8483","S 6 # 8486 8485","S 2 s 8094 8100","S 6 a 8152 8487","S 3 m 8152 8295","S 6 l 8096 8488","S 1 i 8096 8275","S 2 e 8152 8275","P w-ah1","S 3 n 8152 8489","S 3 m 8094 8275","S 6 # 8490 8160","S 1 # 8152 8491","S 1 i 8160 8492","S 6 t 8494 8493","S 3 t 8075 8495","S 3 r 8081 8496","S 6 t 8275 8497","S 2 # 8081 8498","S 1 # 8081 8499","S 3 l 8200 8500","S 2 s 8075 8081","S 3 t 8075 8501","S 6 i 8075 8502","S 2 a 8100 8075","S 3 u 8120 8503","S 1 a 8505 8504","S 6 a 8100 8506","S 3 f 8075 8100","S 3 t 8100 8507","S 3 c 8100 8508","S 5 n 8100 8509","S 6 n 8100 8510","S 5 b 8443 8100","S 6 i 8075 8100","S 2 # 8100 8147","S 6 n 8147 8100","S 3 f 8100 8511","S 6 t 8147 8512","S 5 a 8514 8513","S 4 s 8516 8515","S 2 b 8518 8517","S 3 w 8169 8519","S 6 s 8100 8520","S 3 l 8147 8521","S 5 a 8523 8522","S 5 r 8100 8524","S 6 r 8100 8525","S 5 o 8527 8526","S 3 w 8120 8528","S 5 p 8530 8529","S 4 k 8275 8531","S 3 w 8533 8532","S 4 s 8535 8534","S 3 h 8275 8536","S 3 c 8094 8275","S 3 n 8538 8537","S 1 # 8275 8539","S 1 # 8540 8071","S 5 # 8541 8272","S 5 # 8542 8278","S 1 h 8096 8543","S 6 h 8096 8275","S 6 e 8277 8096","S 2 k 8545 8544","S 2 p 8081 8546","S 3 d 8081 8547","S 3 r 8275 8548","S 2 g 8275 8549","S 2 f 8551 8550","S 6 a 8275 8552","S 5 a 8554 8553","S 3 m 8556 8555","S 5 a 8152 8557","S 2 e 8559 8558","S 6 e 8561 8560","S 3 l 8100 8562","S 3 r 8100 8563","S 6 i 8096 8564","S 3 p 8275 8565","S 3 d 8152 8566","S 5 s 8160 8275","S 2 r 8568 8567","S 1 o 8160 8569","S 5 f 8571 8570","S 5 e 8075 8081","S 6 h 8081 8572","S 3 l 8081 8573","S 3 f 8081 8574","S 3 r 8081 8575","S 6 e 8573 8576","S 2 b 8200 8577","S 6 h 8579 8578","S 3 b 8581 8580","S 5 o 8583 8582","S 6 t 8075 8584","S 3 t 8096 8100","S 5 g 8075 8585","S 1 e 8586 8100","S 2 n 8075 8587","S 6 # 8100 8588","S 3 k 8100 8589","S 3 b 8100 8590","S 3 m 8592 8591","S 4 e 8594 8593","S 6 # 8596 8595","S 4 e 8598 8597","S 1 o 8600 8599","S 3 r 8602 8601","S 5 d 8100 8275","S 4 l 8604 8603","S 1 # 8606 8605","S 1 # 8100 8607","S 4 l 8609 8608","S 6 # 8275 8610","S 6 u 8096 8275","S 5 w 8152 8275","S 5 i 8152 8611","S 6 l 8160 8612","S 6 l 8160 8613","S 5 m 8615 8614","S 6 a 8160 8616","S 4 x 8152 8617","S 6 t 8619 8618","P ih1","S 6 r 8621 8620","S 3 l 8152 8622","S 3 s 8094 8623","S 3 p 8152 8624","S 6 l 8152 8625","S 2 g 8275 8160","S 6 n 8275 8071","S 1 r 8278 8626","S 3 r 8278 8272","S 5 e 8277 8627","S 3 p 8081 8628","S 1 c 8152 8275","S 5 d 8081 8629","S 3 p 8081 8630","S 1 0 8081 8275","S 2 d 8632 8631","S 1 # 8634 8633","S 5 t 8635 8152","S 6 # 8275 8636","S 5 i 8638 8637","S 6 # 8275 8639","S 6 i 8295 8152","S 6 e 8152 8640","S 5 v 8295 8641","S 5 i 8275 8642","S 1 # 8152 8160","S 5 n 8644 8643","S 5 c 8160 8645","S 3 r 8100 8152","S 1 a 8100 8646","S 3 l 8100 8647","S 6 y 8649 8648","S 3 m 8152 8275","S 2 a 8651 8650","S 1 a 8652 8160","S 1 a 8160 8653","S 1 0 8654 8075","S 6 f 8275 8160","S 6 e 8075 8275","S 1 0 8081 8075","S 3 c 8081 8655","S 1 e 8081 8656","S 3 s 8081 8657","S 1 t 8075 8658","S 6 e 8081 8075","S 3 l 8081 8659","S 1 # 8075 8660","S 6 n 8662 8661","S 6 a 8664 8663","S 6 u 8075 8665","S 3 m 8666 8075","S 6 s 8075 8100","S 2 x 8100 8667","S 6 # 8100 8668","S 2 a 8670 8669","S 6 a 8317 8671","S 6 n 8147 8672","S 6 n 8674 8673","S 6 l 8075 8147","S 4 s 8676 8675","S 3 h 8678 8677","S 6 t 8680 8679","S 3 e 8152 8681","S 4 m 8683 8682","S 3 l 8275 8684","S 1 # 8096 8685","S 3 l 8160 8096","S 5 d 8275 8686","S 6 h 8275 8687","S 3 h 8275 8152","S 6 i 8275 8096","S 1 0 8689 8688","S 2 r 8100 8690","S 3 h 8692 8691","S 5 i 8694 8693","S 5 l 8696 8695","S 3 k 8698 8697","S 5 b 8699 8152","S 3 k 8096 8700","S 3 h 8275 8701","S 5 b 8703 8702","S 6 o 8152 8160","S 6 i 8160 8704","S 6 d 8706 8705","S 6 s 8464 8707","S 1 # 8708 8152","S 4 x 8152 8709","S 2 # 8710 8152","S 6 n 8275 8711","S 3 c 8713 8712","S 3 s 8275 8714","S 6 r 8275 8096","S 2 n 8278 8715","S 6 e 8272 8716","S 2 r 8718 8717","S 3 l 8720 8719","S 5 r 8100 8721","S 2 f 8275 8722","S 3 l 8275 8096","S 5 a 8724 8723","S 5 o 8726 8725","S 6 e 8094 8727","S 6 z 8729 8728","S 5 y 8275 8730","S 6 n 8732 8731","S 3 m 8152 8733","S 6 a 8096 8152","S 5 r 8295 8734","S 2 b 8152 8735","S 5 r 8152 8736","S 6 i 8160 8152","S 5 v 8160 8737","S 2 e 8100 8738","S 6 u 8094 8739","S 1 a 8293 8160","S 1 m 8275 8160","S 1 d 8160 8740","S 1 e 8160 8741","S 3 d 8100 8160","S 3 n 8160 8295","S 5 e 8152 8742","S 3 s 8075 8743","S 1 a 8081 8744","S 3 b 8075 8745","S 3 d 8075 8081","S 3 b 8081 8100","S 1 r 8147 8746","S 1 0 8747 8100","S 1 0 8100 8120","S 5 p 8749 8748","S 5 i 8100 8750","S 3 b 8075 8751","S 1 m 8075 8752","S 3 p 8100 8147","S 2 s 8100 8753","S 3 n 8100 8754","S 5 e 8100 8075","S 3 m 8756 8755","S 3 h 8147 8100","S 6 c 8147 8757","S 3 l 8147 8100","S 4 l 8759 8758","S 5 i 8761 8760","S 1 # 8763 8762","S 2 s 8071 8764","S 3 w 8120 8765","S 1 h 8075 8766","S 3 s 8275 8767","S 1 # 8769 8768","S 3 c 8770 8559","S 1 i 8275 8771","S 1 i 8096 8772","S 1 # 8275 8773","S 1 e 8096 8404","S 1 i 8160 8100","S 6 e 8160 8644","S 2 s 8152 8774","S 2 c 8100 8775","S 2 t 8100 8776","S 5 o 8778 8777","S 4 v 8780 8779","S 5 o 8782 8781","S 3 c 8784 8783","S 3 l 8786 8785","S 6 k 8275 8787","S 6 a 8789 8788","S 6 g 8096 8275","S 6 # 8275 8790","S 6 n 8160 8791","S 6 e 8275 8160","S 6 r 8152 8792","S 6 s 8794 8793","S 4 p 8160 8795","S 3 r 8797 8796","S 2 g 8160 8152","S 4 d 8799 8798","S 3 m 8801 8800","S 6 t 8160 8275","S 3 p 8152 8802","S 6 d 8160 8094","S 3 c 8804 8803","S 1 e 8272 8805","S 5 d 8806 8272","S 2 l 8808 8807","S 3 r 8096 8275","S 2 b 8081 8809","S 6 r 8081 8275","S 3 n 8081 8810","S 2 k 8200 8811","S 5 t 8813 8812","S 6 # 8275 8814","S 2 l 8075 8815","S 2 p 8160 8816","S 6 a 8160 8094","S 6 o 8275 8817","S 3 r 8075 8160","S 3 w 8819 8818","S 6 e 8275 8820","S 3 b 8096 8275","S 6 g 8152 8821","S 5 b 8152 8822","S 5 t 8824 8823","S 5 d 8826 8825","S 5 t 8160 8827","S 3 s 8100 8147","S 3 m 8094 8100","S 3 p 8152 8828","S 3 n 8160 8829","S 3 b 8075 8830","S 6 s 8081 8075","S 1 # 8081 8831","S 3 c 8075 8832","S 6 e 8075 8100","S 6 g 8169 8075","S 5 d 8834 8833","S 2 t 8147 8835","S 5 g 8100 8836","S 6 # 8100 8837","S 2 e 8100 8075","S 2 a 8100 8313","S 2 d 8100 8075","S 6 e 8839 8838","S 5 i 8840 8100","S 3 f 8100 8841","S 1 # 8843 8842","S 6 g 8845 8844","S 5 k 8847 8846","S 6 t 8849 8848","S 1 0 8275 8850","S 5 r 8100 8851","S 1 s 8275 8852","S 1 # 8854 8853","S 3 n 8160 8855","S 4 l 8856 8275","S 4 v 8858 8857","S 4 l 8160 8152","S 1 n 8152 8859","S 3 h 8275 8096","S 3 i 8861 8860","S 6 s 8275 8862","S 3 r 8152 8160","S 3 t 8147 8863","S 1 e 8100 8147","S 4 h 8865 8864","S 6 # 8275 8866","S 4 x 8152 8867","S 3 m 8071 8868","S 5 i 8870 8869","S 6 r 8094 8871","S 3 r 8873 8872","S 6 a 8160 8874","S 3 b 8876 8875","S 4 c 8275 8877","S 6 l 8160 8878","S 3 d 8160 8879","S 3 b 8295 8152","S 3 t 8881 8880","S 6 t 8275 8152","S 6 o 8160 8882","S 6 r 8884 8883","S 4 c 8152 8885","S 2 i 8160 8886","S 2 g 8152 8887","S 1 # 8275 8096","S 6 n 8889 8888","S 6 l 8891 8890","S 3 t 8152 8892","S 4 d 8152 8275","S 3 d 8893 8275","S 1 0 8895 8894","S 6 r 8094 8896","S 2 l 8897 8272","S 3 v 8272 8898","S 3 d 8900 8899","S 3 l 8901 8275","S 3 r 8902 8081","S 5 a 8904 8903","S 2 t 8906 8905","S 3 p 8152 8907","S 6 e 8566 8908","S 2 c 8152 8909","S 2 i 8075 8910","S 3 r 8275 8160","S 6 u 8275 8911","S 6 p 8160 8912","S 6 e 8094 8152","S 3 m 8152 8913","S 3 b 8152 8914","S 6 u 8295 8915","S 2 c 8152 8916","S 6 e 8160 8917","S 5 q 8152 8918","S 6 u 8160 8919","S 5 f 8160 8920","S 2 t 8922 8921","S 3 r 8160 8923","S 5 k 8081 8924","S 6 c 8081 8925","S 3 r 8075 8926","S 3 t 8928 8927","S 6 e 8100 8929","S 3 c 8100 8930","S 1 r 8100 8837","S 2 o 8075 8100","S 6 l 8931 8100","S 5 d 8100 8932","S 6 s 8100 8147","S 6 l 8147 8100","S 6 # 8934 8933","S 5 o 8936 8935","S 5 d 8938 8937","S 1 0 8152 8939","S 1 0 8941 8940","S 6 i 8081 8942","S 6 s 8275 8943","S 3 p 8944 8152","S 2 h 8275 8945","S 5 b 8275 8946","S 5 n 8160 8096","S 1 0 8948 8947","S 4 p 8950 8949","S 1 a 8160 8951","S 1 r 8275 8952","S 4 l 8954 8953","S 2 o 8152 8295","S 1 r 8152 8955","S 3 g 8096 8956","S 2 r 8096 8275","S 5 k 8275 8957","S 1 o 8147 8958","S 4 s 8960 8959","S 5 r 8100 8961","S 4 x 8152 8962","S 6 t 8152 8963","S 6 t 8160 8964","S 5 y 8966 8965","S 6 n 8968 8967","S 3 c 8893 8969","S 6 u 8160 8970","S 6 e 8275 8971","S 6 e 8160 8972","S 4 s 8974 8973","S 4 l 8275 8975","S 6 t 8096 8976","S 4 l 8160 8977","S 3 t 8071 8152","S 6 i 8096 8978","S 6 s 8096 8152","S 6 e 8160 8979","S 1 # 8981 8980","S 2 e 8160 8982","S 4 f 8160 8983","S 3 r 8160 8275","S 1 h 8152 8984","S 4 b 8986 8985","S 4 z 8100 8987","S 6 s 8566 8988","S 2 # 8152 8096","S 4 p 8160 8989","S 6 n 8152 8160","S 6 r 8991 8990","S 3 b 8275 8992","S 6 n 8094 8275","S 3 r 8272 8278","S 2 e 8272 8993","S 1 t 8275 8994","S 5 s 8096 8995","S 1 a 8996 8096","S 5 l 8081 8997","S 3 l 8275 8998","S 6 r 8275 8081","S 2 o 8096 8999","S 3 l 8096 8275","S 5 s 9001 9000","S 1 r 9003 9002","S 3 s 8160 9004","S 5 y 8275 9005","S 6 n 9007 9006","S 2 # 9009 9008","S 6 c 8152 9010","S 6 s 8275 9011","S 6 i 8295 9012","S 5 v 8160 9013","S 1 u 8160 9014","S 5 j 8152 9015","S 6 r 8152 8644","S 5 s 8160 9016","S 2 e 9018 9017","S 3 r 9019 8160","S 1 m 8160 9020","S 5 p 8075 9021","S 2 n 8081 9022","S 6 h 8075 8081","S 6 c 8100 9023","S 2 a 8100 9024","S 3 c 9025 8100","S 3 m 8100 8075","S 5 i 8075 8100","S 5 g 8100 9026","S 5 t 9028 9027","S 5 o 8275 9029","S 2 s 9031 9030","S 4 t 8275 9032","S 6 r 8094 9033","S 3 n 9035 9034","S 2 p 8152 9036","S 5 s 9038 9037","S 6 r 8152 9039","S 6 e 8152 9040","S 6 # 8275 9041","S 2 e 8152 9042","S 1 o 8275 9043","S 3 r 8275 9044","S 4 v 9046 9045","S 4 h 8295 9047","S 6 n 9049 9048","S 2 p 8152 8075","S 2 e 9051 9050","S 2 n 9052 8275","S 4 x 9054 9053","S 2 t 8295 9055","S 2 i 8295 9056","S 2 t 8096 9057","S 6 # 8275 9058","S 2 t 8147 9059","S 4 f 9061 9060","S 5 s 9063 9062","S 3 j 8152 9064","S 3 m 8275 9065","S 4 t 8275 9066","S 3 l 8094 9067","S 3 w 9069 9068","S 3 p 8152 8275","S 6 c 9071 9070","S 3 m 8096 8275","S 3 m 8160 9072","S 3 t 9074 9073","S 6 i 8152 8275","S 6 o 8160 9075","S 3 c 9077 9076","S 6 l 8275 8096","S 4 h 8152 9078","S 4 v 8094 8096","S 4 v 8160 8275","S 3 r 8096 9079","S 6 u 8160 9080","S 3 m 9082 9081","S 4 s 8152 9083","S 2 n 8152 9084","S 2 a 8160 9085","S 3 t 8160 9086","S 6 y 8275 9087","S 2 # 8275 8096","S 4 t 8275 9088","S 3 r 9090 9089","S 3 r 8152 8275","S 6 n 8275 9091","S 2 n 8094 9092","S 3 l 8094 9093","S 2 a 8272 9094","S 2 n 9096 9095","S 2 a 8096 8081","S 5 e 8096 9097","S 2 g 8275 9098","S 3 r 8275 9099","S 3 s 8096 9100","S 3 m 9102 9101","S 6 # 9104 9103","S 6 o 8160 8152","S 2 e 8295 8152","S 2 i 8096 9105","S 5 a 9107 9106","S 6 t 8160 9108","S 3 s 8160 9109","S 6 o 8295 9110","S 3 h 8152 9111","S 6 g 8152 9112","S 6 l 8152 9113","S 5 p 9115 9114","S 6 c 8152 9116","S 2 s 8160 8152","S 5 l 8152 9117","S 5 n 8160 8152","S 2 u 9119 9118","S 1 r 8295 9120","S 1 e 8295 9056","S 1 r 8152 9121","S 6 # 8075 9122","S 3 m 8081 9123","S 6 i 8100 9124","S 2 c 8075 9125","S 2 c 8100 9126","S 5 s 8100 9127","S 4 m 9129 9128","S 1 0 9131 9130","S 5 i 8275 9132","S 5 k 8152 9133","S 5 i 8275 9134","S 4 p 9136 9135","S 6 # 9138 9137","S 3 r 8160 9139","S 6 # 8096 8160","S 3 e 9141 9140","S 1 # 9143 9142","S 2 c 8100 9144","S 5 h 8152 9145","S 1 # 8100 8275","S 6 a 8275 9146","S 2 m 8152 8160","S 5 s 8096 9147","S 3 l 8275 9148","S 6 u 8160 9149","S 6 l 8071 8096","S 4 c 8096 9150","S 2 t 8152 9151","S 3 i 8096 8275","S 2 h 8096 9152","S 4 c 8275 8152","S 1 e 8275 8096","S 4 h 8096 9153","S 3 b 8152 8295","S 1 e 8295 9154","S 1 a 8160 8295","S 2 m 8275 8096","S 2 e 8096 9155","S 3 r 8147 9156","S 4 j 8272 9157","S 3 s 8100 9158","S 3 k 9160 9159","S 3 p 9162 9161","S 5 n 9163 8275","S 3 l 8275 9164","S 6 c 9166 9165","S 6 n 8096 9167","S 5 u 9169 9168","S 5 f 8120 8275","S 6 t 9171 9170","S 3 s 8160 8152","S 3 k 8160 9172","S 6 s 8275 8152","S 6 e 8152 8275","S 6 u 8160 8152","S 3 h 8275 9173","S 6 b 8096 8275","S 6 r 8152 9174","S 3 k 8096 9175","S 6 l 8160 8152","S 4 g 8160 9176","S 4 d 8152 9177","S 6 c 9179 9178","S 4 g 8100 9180","S 1 # 9182 9181","S 1 # 8096 9183","S 6 t 9185 9184","S 4 p 8275 9186","S 2 # 9187 8152","S 6 n 8275 8152","S 6 s 8275 9188","S 1 # 8094 8275","S 6 r 8094 9189","S 3 l 8272 8278","S 6 a 8081 9190","S 6 r 8096 8275","S 5 a 9191 8096","S 2 c 8275 8081","S 3 b 9193 9192","S 2 u 8096 9194","S 5 y 8160 9195","S 5 y 9196 8160","S 3 m 8160 8152","S 3 r 8160 9197","S 1 a 9198 8160","S 2 b 8152 9199","S 3 r 8275 8152","S 2 a 8160 9200","S 1 # 8275 9201","S 5 o 8096 8152","S 5 n 9203 9202","S 6 # 8275 9187","S 6 t 9204 8152","S 5 s 9206 9205","S 6 r 8152 8295","S 5 d 9075 9207","S 6 c 8152 9208","S 3 c 9210 9209","S 3 l 8160 8295","S 3 l 8160 9211","S 3 g 8160 9212","S 3 l 8075 9213","S 2 o 8081 9214","S 3 e 8075 9215","S 1 m 8075 9216","S 1 r 8100 8147","S 5 k 8100 9217","S 4 x 8152 9218","S 3 c 9220 9219","S 6 e 9222 9221","S 4 b 8160 9223","S 5 y 9225 9224","S 5 p 8152 9226","S 5 h 9227 8152","S 6 # 8275 9228","S 6 l 8096 9229","S 5 v 8152 9230","S 3 a 8081 9231","S 1 a 8275 9232","S 2 a 8152 9233","S 2 h 8160 9234","S 6 # 9236 9235","S 2 f 8100 9237","S 2 g 9239 9238","S 5 c 9240 8152","S 1 m 8096 9241","S 3 r 8096 9242","S 2 s 8275 8096","S 6 l 9244 9243","S 4 k 8096 9245","S 6 b 8152 9246","S 2 s 8096 9247","S 4 z 8096 9248","S 1 t 8152 9249","S 5 t 8275 9250","S 3 n 8147 9251","S 5 u 9253 9252","S 5 f 9255 9254","S 3 y 8275 9256","S 6 i 8152 9257","S 6 a 9259 9258","S 6 e 8160 8152","S 6 e 8275 9260","S 6 m 8275 9261","S 3 l 8160 9262","S 3 m 8096 8152","S 6 c 8152 8275","S 5 v 8152 9263","S 6 n 8152 9264","S 3 p 8096 9265","S 3 p 8160 9266","S 6 g 8152 9090","S 6 c 8152 9267","S 6 n 8152 8275","S 3 d 8096 8275","S 3 r 9269 9268","S 6 n 8152 8096","S 6 l 8160 9270","S 2 b 8096 8160","S 3 c 8160 9271","S 3 s 8160 8275","S 4 l 8275 9272","S 2 e 8160 9273","S 4 t 9275 9274","S 4 l 8096 8160","S 2 # 9276 8152","S 3 b 8152 8275","S 2 e 8094 9277","S 3 d 8094 8275","S 2 f 8081 9278","S 6 n 8081 8096","S 3 s 8275 9279","S 6 r 8081 9280","S 2 r 8096 9281","S 6 # 9283 9282","S 2 i 8275 8160","S 3 m 8160 9284","S 3 r 8096 8160","S 2 s 8152 9285","S 2 e 8160 9286","S 3 t 8275 8160","S 5 k 9227 9287","S 3 t 8094 8152","S 3 d 8096 8152","S 6 e 8295 8152","S 6 t 8295 8152","S 1 # 8152 9288","S 6 r 9290 9289","S 2 l 8160 9291","S 2 i 8152 8160","S 3 d 8160 9292","S 3 l 8152 8160","S 6 l 8075 9293","S 3 b 8081 9294","S 5 y 9296 9295","S 2 r 8100 9297","S 5 l 8100 9298","S 2 p 9300 9299","S 5 o 8160 9301","S 2 c 9303 9302","S 4 c 8152 9304","S 1 a 8160 9305","S 4 t 8152 9306","S 4 c 9308 9307","S 3 b 8152 9309","S 3 e 9311 9310","S 3 m 8094 8152","S 3 h 8275 9312","S 2 p 8160 8152","S 6 t 9314 9313","S 5 s 8160 9315","S 2 m 8275 9316","S 3 m 8152 9317","S 1 i 8160 8152","S 2 g 8152 9318","S 5 h 9320 9319","S 2 p 9322 9321","S 1 # 9324 9323","S 3 l 8100 8275","S 6 i 8152 8100","S 3 p 8275 9325","S 1 i 8275 8096","S 6 s 9327 9326","S 4 s 8275 9328","S 4 s 8096 9329","S 3 n 8152 9330","S 1 0 8096 9331","S 4 g 9333 9332","S 3 n 8147 9334","S 5 # 8275 9335","S 2 a 8100 9336","S 5 h 9338 9337","S 6 l 8152 9339","S 3 h 8152 9340","S 6 # 8100 9341","S 3 p 9343 9342","S 6 a 8275 9344","S 3 f 8152 9345","S 3 c 8152 8160","S 6 # 8152 8275","S 3 n 9347 9346","S 6 # 8275 9348","S 5 c 9350 9349","S 6 m 8152 8160","S 6 d 8152 9351","S 3 s 8152 8096","S 6 s 9353 9352","S 6 c 8096 9354","S 2 p 8160 9355","S 3 i 8293 9356","S 4 p 9358 9357","S 3 l 8275 9359","S 3 n 8160 9360","S 4 h 8096 9361","S 6 l 8096 8275","S 3 c 8275 9362","S 3 h 8094 9363","S 6 n 9365 9364","S 3 t 8720 9366","S 5 s 8081 8275","S 2 s 8906 8096","S 2 c 8152 9367","S 5 o 8275 8152","S 2 r 8160 9368","S 3 r 8152 9369","S 6 e 8160 9370","S 5 d 9372 9371","S 5 s 9373 8160","S 6 p 8160 9374","S 5 t 8152 8160","S 2 d 8160 9375","S 3 r 8160 9376","S 5 v 8075 8578","S 2 m 8081 9377","S 6 h 8075 9378","S 1 c 8100 8075","S 1 a 8147 9379","S 5 n 8100 9380","S 6 c 9382 9381","S 3 e 8075 9383","S 5 b 9385 9384","S 6 n 8094 9386","S 6 a 8094 8152","S 2 h 8152 9387","S 4 t 9388 8152","S 6 e 8152 9389","S 3 r 9391 9390","S 3 d 8160 9392","S 3 l 8160 9393","S 5 i 9395 9394","S 5 l 8096 8160","S 6 t 8160 9396","S 5 t 8275 9397","S 5 s 8275 9398","S 3 h 9400 9399","S 3 p 8096 9401","S 2 i 8152 9402","S 6 o 9404 9403","S 5 o 8275 9405","S 2 n 8152 8094","S 3 r 8152 9406","S 5 c 8096 8152","S 6 e 8160 9407","S 6 # 8100 9408","S 6 o 8275 9409","S 1 m 9411 9410","S 4 l 8160 9412","S 2 i 8160 9413","S 4 p 8096 9414","S 3 t 8275 9415","S 4 b 8096 9416","S 4 f 9418 9417","S 3 d 8100 9419","S 1 r 8147 9420","S 3 c 8275 8096","S 2 i 8100 9421","S 5 r 9423 9422","S 4 t 9425 9424","S 3 d 8152 9426","S 3 l 8152 8275","S 3 h 8100 9427","S 6 h 8100 9428","S 6 u 8152 9429","S 5 t 8152 9002","S 6 e 8152 9430","S 6 n 8275 9431","S 4 v 8152 8275","S 6 e 9433 9432","S 5 f 9434 8275","S 6 a 8295 8275","S 6 a 8275 9435","S 6 l 9437 9436","S 3 p 8160 8275","S 4 s 8160 9438","S 2 t 8275 9439","S 4 g 8160 9440","S 3 h 9442 9441","S 2 p 8152 8275","S 4 d 8096 8275","S 6 d 8160 8096","S 6 e 8152 9443","S 4 g 8152 9444","S 3 l 8094 8275","S 5 l 8081 9445","S 2 c 8081 8275","S 3 m 8275 8081","S 6 s 8275 9446","S 2 l 8160 9447","S 3 l 8152 9448","S 6 s 9449 8152","S 3 s 8100 8152","S 6 l 8152 9450","S 1 i 8152 8160","S 6 t 8152 9451","S 2 h 8160 9452","S 3 n 8152 8295","S 1 r 8081 9453","S 1 e 9455 9454","S 1 h 8075 9456","S 3 s 8100 9457","S 5 i 9459 9458","S 4 g 8152 9460","S 5 r 9462 9461","S 1 0 9464 9463","S 1 c 8094 9465","S 1 e 9467 9466","S 6 o 8152 9468","S 3 l 8152 8100","S 6 o 8295 8152","S 4 t 9470 9469","S 5 h 8147 9471","S 2 l 9259 9472","S 4 m 8160 9473","S 5 u 9475 9474","S 6 s 9477 9476","S 3 r 9479 9478","S 6 a 9481 9480","S 3 p 9482 8160","S 5 l 8816 9483","S 2 c 8152 9484","S 6 t 8096 9485","S 3 t 8152 9486","S 5 o 9212 9487","S 5 c 8160 9488","S 5 t 9490 9489","S 5 t 8603 9491","S 2 o 8152 9492","S 2 b 8152 8100","S 1 # 8275 9493","S 1 s 9495 9494","S 2 o 8160 8152","S 3 t 8096 8275","S 1 i 8160 8275","S 6 l 8152 9496","S 3 l 8275 9497","S 4 p 9499 9498","S 3 t 8152 9500","S 3 h 8160 8147","S 2 a 8147 9501","S 3 h 8147 9259","S 1 a 8100 8147","S 4 g 9503 9502","S 3 r 8295 9504","S 6 i 9506 9505","S 3 r 8100 9507","S 6 n 8096 9508","S 6 e 8152 9509","S 3 c 9511 9510","S 6 i 8100 8275","S 3 r 9513 9512","S 6 t 8816 9514","S 3 r 9516 9515","S 4 c 8275 9517","S 3 g 8152 8275","S 6 v 8152 9518","S 3 r 9520 9519","S 4 t 8275 9521","S 2 c 8275 9522","S 6 n 8160 8096","S 6 e 8096 9523","S 4 d 8152 9524","S 4 b 8275 8152","S 4 c 9526 9525","S 3 h 8152 8275","S 1 r 8081 9527","S 2 e 8152 9528","S 3 h 8152 9212","S 5 d 8160 8152","S 1 a 8152 8774","S 6 r 8152 9529","S 6 h 8152 9530","S 1 e 9531 8160","S 1 i 8081 8200","S 6 o 8100 9532","S 5 i 9534 9533","S 1 n 8075 8100","S 5 i 8100 9535","S 5 h 9537 9536","S 4 g 9539 9538","S 4 t 8152 9540","S 4 v 8295 9541","S 1 p 8275 9542","S 6 c 8152 9543","S 5 i 8096 8152","S 2 a 8100 8152","S 5 b 8160 9544","S 6 u 8160 8094","S 2 a 8152 8275","S 4 m 9546 9545","S 2 c 8100 9547","S 4 f 8100 9548","S 3 n 8160 9549","S 4 d 8160 9550","S 5 h 9552 9551","S 6 l 8152 9553","S 4 h 8096 9554","S 4 m 8152 8160","S 3 l 8160 9555","S 2 p 9556 8275","S 6 c 9558 9557","S 5 l 9107 8275","S 2 o 8152 9559","S 5 t 8275 9560","S 5 m 8275 9561","S 6 # 9562 8275","S 1 o 8152 9563","S 6 h 8160 9564","S 2 c 8160 9565","P ih","S 2 n 8275 9566","S 5 o 8096 9567","S 3 l 8100 9568","S 3 l 8275 9569","S 4 t 9571 9570","S 4 t 8160 8152","S 6 h 8152 9572","S 4 c 8152 9573","S 1 # 9574 8160","S 1 y 8160 8096","S 2 s 9576 9575","S 3 r 8160 9577","S 5 y 9579 9578","S 3 d 9581 9580","S 3 c 8275 9582","S 3 k 8152 9583","S 4 p 8160 8152","S 3 m 9585 9584","S 4 b 9587 9586","S 3 g 8152 9588","S 5 q 8152 9589","S 6 a 8100 9590","S 6 # 8100 9591","S 6 i 8100 8152","S 3 p 9593 9592","S 6 f 9595 9594","S 4 b 8152 9596","S 3 r 8275 9187","S 3 s 8275 9597","S 6 t 8096 9598","S 4 b 8152 8275","S 4 c 8275 8160","S 4 b 8096 9599","S 6 n 9601 9600","S 1 # 9602 8275","S 6 m 9604 9603","S 6 a 8275 8100","S 6 r 8632 9605","S 5 o 9607 9606","S 3 r 8295 8152","S 6 a 9609 9608","S 3 n 8152 8160","S 1 h 8075 9610","S 6 # 8075 8100","S 3 r 8075 8100","S 5 m 8100 8317","S 5 r 9612 9611","S 4 t 9614 9613","S 6 a 8275 9615","S 3 l 8160 8275","S 4 p 8152 9616","S 4 d 8160 9617","S 1 e 8275 8160","S 2 e 8152 9618","S 2 n 9620 9619","S 4 k 8275 9621","S 5 s 8160 9622","S 3 c 9624 9623","S 4 p 8152 9625","S 2 r 8160 9626","S 4 p 8160 8275","S 5 r 9628 9627","S 4 t 9630 9629","S 6 c 8160 9631","S 4 x 8152 9632","S 2 s 8096 9633","S 4 v 8160 8096","S 1 0 9635 9634","S 3 t 8275 8152","S 2 a 8096 8160","S 3 p 9636 8275","S 1 e 8096 9637","S 3 f 8275 9638","S 2 b 8160 9639","S 3 r 9641 9640","S 5 t 8100 8152","S 3 m 8275 9642","S 5 y 8096 8100","S 6 # 9643 8971","S 6 n 8160 8816","S 6 b 8160 9644","S 1 i 8096 8152","S 4 l 8152 8096","S 6 s 8275 9645","S 4 l 8160 8096","S 3 p 8152 9646","S 3 h 8152 9647","S 2 r 8295 8152","S 5 l 9649 9648","S 4 p 8152 9650","S 5 l 9651 8152","S 6 i 8100 9652","S 6 e 8152 9653","S 4 c 9655 9654","S 3 n 8094 9656","S 6 e 8094 8100","S 6 s 8275 9657","S 3 r 8152 8096","S 3 m 8152 8100","S 6 o 9659 9658","S 5 t 9661 9660","S 3 b 8100 9662","S 3 k 8160 9663","S 4 p 8152 8160","S 6 l 9665 9664","S 3 c 8275 8152","S 4 s 8152 8096","S 6 e 8275 9444","S 4 d 9667 9666","S 2 r 8096 9668","S 3 l 8275 9669","S 2 r 8275 9107","S 3 r 8275 9670","S 3 m 8160 9671","S 4 l 8160 8275","S 3 r 8081 9672","S 6 a 9674 9673","S 6 m 8152 8346","S 6 o 9676 9675","S 5 t 8160 8295","S 2 a 8075 9677","S 4 h 9679 9678","S 6 a 9681 9680","S 1 0 8152 9682","S 6 e 9684 9683","S 4 t 9686 9685","S 1 e 8152 9687","S 5 o 8160 9688","S 5 i 9690 9689","S 6 a 8152 8160","S 1 o 8160 9691","S 4 h 9693 9692","S 5 b 8160 8152","S 5 s 9694 8160","S 1 a 8152 9695","S 5 s 8160 8152","S 2 b 8160 9696","S 4 h 8275 9697","S 4 t 8096 9698","S 3 i 8096 9699","S 3 r 9585 9700","S 6 s 8275 9701","S 3 i 8160 9702","S 4 d 8275 8160","S 6 d 8152 9703","S 5 l 8152 9704","S 5 i 8160 8275","S 1 c 8096 8275","S 3 h 8275 9705","S 1 e 8152 9706","S 3 g 8096 9707","S 2 e 8096 9708","S 3 p 8275 8100","S 3 r 8160 8152","S 4 s 8160 9709","S 6 r 8096 9710","S 2 a 8160 9711","S 4 t 8152 8160","S 5 c 9713 9712","S 4 b 9651 8152","S 4 b 9714 8275","S 6 e 8275 8152","S 5 g 8100 8152","S 6 i 8152 9715","S 3 s 8152 9716","S 6 e 8152 9717","S 6 e 9718 8152","S 4 g 8275 9719","S 5 u 8275 9720","S 3 r 8152 9721","S 5 m 9722 8152","S 6 u 8295 9723","S 3 g 8152 9724","S 6 o 8160 9725","S 3 k 9727 9726","S 3 m 8275 8152","S 4 k 8160 9728","S 6 r 8096 8160","S 2 e 8160 9729","S 3 r 8275 8771","S 2 s 8275 8160","S 2 # 9731 9730","S 6 # 8275 9732","S 5 m 8160 9733","S 3 d 8152 8160","S 5 f 8160 9734","S 5 f 8160 9735","S 6 s 8931 9736","S 5 o 9738 9737","S 5 o 8160 8275","S 1 h 9489 9739","S 2 c 8096 9740","S 4 c 9742 9741","S 6 a 8160 8152","S 2 y 8152 9743","S 6 t 9745 9744","S 3 m 8275 9746","S 4 b 9747 8160","S 4 t 8152 9748","S 3 r 8152 9162","S 3 t 8160 9749","S 6 e 8152 9234","S 2 a 8295 9750","S 3 s 8160 8096","S 3 i 8160 9751","S 2 s 8160 9752","S 2 s 8152 9753","S 2 p 9755 9754","S 2 b 8152 9756","S 2 e 8160 9757","S 2 c 8275 8152","S 4 q 8160 8096","S 3 r 9759 9758","S 5 l 9761 9760","S 5 i 9763 9762","S 2 e 8275 8415","S 2 u 8152 9764","S 6 r 8275 9765","S 2 u 8096 9766","S 1 l 8275 9767","S 3 r 8275 8096","S 1 b 8295 9768","S 4 z 8152 9769","S 4 c 9770 8152","S 6 # 8275 8160","S 6 a 9071 8160","S 4 p 8275 8152","S 6 a 8275 8152","S 3 b 8152 8094","S 4 c 8096 9771","S 3 t 8096 9772","S 3 m 8152 8126","S 6 o 8100 8295","S 6 e 8100 9773","S 3 m 8100 9513","S 3 c 8275 9774","S 4 d 9776 9775","S 6 n 8160 8275","S 6 r 8275 9777","S 1 o 8160 9778","S 6 a 8152 9779","S 3 t 8160 8275","S 5 e 8275 8096","S 3 s 8160 9780","S 6 i 8160 9781","S 5 s 8160 9782","S 3 i 8100 9783","S 5 y 9785 9784","S 4 p 9787 9786","S 1 a 8160 9788","S 2 l 8152 9789","S 1 p 8096 9790","S 1 u 8096 9791","S 2 d 8094 9792","S 6 e 9794 9793","S 4 v 8160 9795","S 3 v 8275 8160","S 1 0 8160 8275","S 6 t 8152 8275","S 2 o 8160 9796","S 3 l 8160 9797","S 3 g 8160 8152","S 2 i 8295 8152","S 1 s 8152 9798","S 3 i 8275 9799","S 5 l 9800 8152","S 4 p 8160 9801","S 2 p 8152 9802","S 2 a 8152 9167","S 6 c 8152 9803","S 6 k 8275 9804","S 3 r 8275 9805","S 5 y 8096 8275","S 6 v 8096 8152","S 1 r 8152 9411","S 6 s 8275 9806","S 2 t 8160 8275","S 4 h 8160 9807","S 1 c 8152 9808","S 6 o 8152 9809","S 6 i 8275 9810","S 4 q 8096 8275","S 5 c 8096 9811","S 6 l 8100 8152","S 4 b 8275 9812","S 4 p 8275 9813","S 6 n 8096 8160","S 4 l 9815 9814","S 2 s 8160 9816","S 6 s 8152 8275","S 5 h 8160 9817","S 5 c 8160 9818","S 5 t 8160 8152","S 1 d 8100 9819","S 5 l 9821 9820","S 4 d 8096 9822","S 1 0 9824 9823","S 6 u 8152 9825","S 6 o 9827 9826","S 1 o 8152 9828","S 3 r 8160 9829","S 3 r 9830 8703","S 1 0 8094 8160","S 4 v 8096 9831","S 1 t 8152 9832","S 4 c 8152 9833","S 2 p 8160 9834","S 1 e 8160 8152","S 1 n 8152 9835","S 5 y 8100 9836","S 4 c 8096 8152","S 6 e 8160 9837","S 6 e 8152 9838","S 2 p 9839 8275","S 5 p 8275 9840","S 1 m 8152 9841","S 1 e 8160 9842","S 2 s 8160 9843","S 3 i 8160 9844","S 5 z 9651 8152","S 6 a 8152 8275","S 3 m 9846 9845","S 4 k 9848 9847","S 4 c 8275 9849","S 6 n 8275 9850","S 6 n 8096 9851","S 4 t 9439 9852","S 2 r 8160 9853","S 6 l 8152 8160","S 1 o 9855 9854","S 4 b 9857 9856","S 3 r 9859 9858","S 4 t 8160 9860","S 1 o 8152 9861","S 4 d 9863 9862","S 3 n 8152 9864","S 1 0 8152 9865","S 1 i 8096 9866","S 3 n 9868 9867","S 2 s 8152 8160","S 6 e 9869 8275","S 3 m 9871 9870","S 4 d 8152 9872","S 4 d 8152 8096","S 3 d 8160 8096","S 3 l 8152 9873","S 4 m 9389 9874","S 4 g 8275 8160","S 2 b 8152 9875","S 4 f 8152 9876","S 2 o 8160 9877","S 3 c 8160 9878","S 2 i 8096 9879","S 3 c 8160 9880","S 2 d 8152 9881","S 6 i 9882 8152","S 5 t 8152 9651","S 6 s 8275 9883","S 3 s 8152 8275","S 3 s 8096 9884","S 6 b 8275 9885","S 6 k 8275 8152","S 1 i 8160 9886","S 3 t 8160 8152","S 5 n 9888 9887","S 6 # 8100 8075","S 5 u 9890 9889","S 6 e 8160 9891","S 6 e 9893 9892","S 4 p 8160 8096","S 4 g 8160 9894","S 1 r 8160 9895","S 6 n 8096 8275","S 6 r 8275 8152","S 2 h 8160 9896","S 1 e 8096 8160","S 1 u 8096 8160","S 1 a 8152 9897","S 2 a 8152 8160","S 1 e 8160 8096","S 4 k 8275 9898","S 2 o 8096 8275","S 1 0 8275 8096","S 2 y 8152 9899","S 5 l 9162 8152","S 4 c 8152 8275","S 6 n 8152 9900","S 6 s 9902 9901","S 1 o 8160 9903","S 1 i 8096 9904","S 1 c 9906 9905","S 3 s 8152 9907","S 5 h 8275 8152","S 6 l 8718 9908","S 3 t 8160 9909","S 3 m 8096 9910","S 4 c 8096 9911","S 6 # 8100 9912","S 2 t 8075 9913","S 1 0 9915 9914","S 4 g 9917 9916","S 5 s 9918 8152","S 1 0 8644 9919","S 4 g 8275 9920","S 4 c 8160 8096","S 1 l 8275 9921","S 6 l 9797 8160","S 3 l 8160 9922","S 2 e 8275 9923","S 1 e 8152 9259","S 4 v 8160 8152","S 3 t 8096 9924","S 2 m 8160 9925","S 2 s 8152 9444","S 6 a 8100 9926","S 6 c 8096 9927","S 2 t 8096 8275","S 3 b 8295 9928","S 6 r 8275 8774","S 3 j 8096 8275","S 6 m 8096 8275","S 2 i 8160 8293","S 2 r 8075 9929","S 1 n 8100 9930","S 2 e 9932 9931","S 6 r 8160 9933","S 1 0 8096 9934","S 3 l 8100 8152","S 6 t 8160 8152","S 6 i 8275 8160","S 3 n 8275 8160","S 4 c 8096 9935","S 3 m 9937 9936","S 1 i 8096 9938","S 5 o 8160 9939","S 2 a 9941 9940","S 2 o 8152 9942","S 3 r 9943 8096","S 2 g 8160 9944","S 2 b 8100 9945","S 2 n 8100 9946","S 6 o 9521 9947","S 1 r 8160 8152","S 5 c 9683 8152","S 3 p 8152 9948","S 6 s 8096 9949","S 3 t 9951 9950","S 4 c 8160 8152","S 6 o 9953 9952","S 6 z 8160 9954","S 2 e 8152 8160","S 3 b 8152 8160","S 3 c 8152 8275","S 2 t 8096 9955","S 2 e 8160 9956","S 2 t 8100 9957","S 1 l 8100 9958","S 4 f 8100 9959","S 4 c 9918 9198","S 6 r 8160 9960","S 4 g 8160 9643","S 4 c 8160 9961","S 2 t 8160 9962","S 4 b 8160 8275","S 1 c 8160 9963","S 6 n 9964 8096","S 2 h 8160 9965","S 6 n 8100 9966","S 1 i 8075 9967","S 6 s 8152 9968","S 1 m 8160 9969","S 1 m 8152 8160","S 3 t 8096 9970","S 3 v 8152 9971","S 2 c 8096 8160","S 2 r 8160 9972","S 1 m 8100 8075","S 2 y 8075 9973","S 1 a 9975 9974","S 2 e 8160 9976","S 1 e 8160 9977","S 6 n 9979 9978","S 4 d 8152 9980","S 1 a 8075 9981","S 3 n 8152 9982","S 2 l 8152 9983","S 4 b 8096 9984","S 1 0 8096 9985","S 2 n 8160 9986","S 3 r 8275 9987","S 2 l 8160 9988","S 3 h 8100 8075","S 2 o 9989 8152","S 6 i 8275 8152","S 4 d 9198 9990","S 6 n 8160 9991","S 2 p 8096 8275","S 3 i 8160 9992","S 1 p 8160 9993","S 5 n 8275 8152","S 3 r 8160 9994","S 2 h 8096 8160","S 1 # 8160 8096","S 3 r 8160 9995","S 3 t 8096 8160","S 1 g 8160 9996","S 3 l 8152 9997","S 3 n 8295 8160","I 9998 p","S 4 p 10000 9999","S 4 h 10002 10001","P epsilon","S 4 f 10004 10003","S 2 # 10006 10005","S 4 s 10008 10007","S 2 0 10000 10009","S 2 h 10011 10010","S 3 u 10009 10010","S 3 p 10009 10012","S 2 0 10000 10013","P p","P f","S 3 e 10009 10010","S 4 t 10004 10014","S 2 o 10015 10009","S 4 b 10017 10016","S 3 r 10000 10009","S 4 n 10004 10009","S 2 a 10000 10009","I 10018 q","P k","I 10019 r","S 3 e 10021 10020","S 4 r 10023 10022","S 1 # 10025 10024","S 1 0 10027 10026","S 2 c 10029 10028","S 4 # 10031 10030","S 4 r 10033 10032","S 3 u 10035 10034","S 3 u 10037 10036","S 1 0 10029 10038","P epsilon","S 4 r 10040 10039","S 2 e 10042 10041","S 4 i 10044 10043","S 2 p 10046 10045","S 3 o 10048 10047","S 1 # 10050 10049","S 3 i 10052 10051","S 4 i 10029 10053","S 2 b 10029 10054","S 4 i 10056 10055","S 2 v 10058 10057","S 2 i 10058 10059","P r","S 4 e 10061 10060","S 2 p 10063 10062","S 2 t 10029 10064","S 5 i 10058 10065","S 3 i 10067 10066","S 2 w 10069 10068","S 2 o 10071 10070","S 4 i 10073 10072","S 3 a 10075 10074","S 4 o 10058 10076","S 4 a 10042 10077","S 3 a 10079 10078","S 2 i 10081 10080","S 5 n 10083 10082","S 1 n 10085 10084","P er","S 2 u 10058 10086","S 4 o 10088 10087","S 2 p 10058 10089","S 5 v 10058 10090","S 5 o 10042 10091","S 2 g 10042 10092","S 5 e 10058 10093","S 3 r 10095 10094","S 2 a 10042 10096","S 1 # 10098 10097","S 1 # 10093 10099","S 2 a 10101 10100","S 1 j 10093 10102","S 4 o 10042 10103","S 2 k 10058 10042","S 4 z 10105 10104","S 4 o 10107 10106","S 5 i 10093 10108","S 4 b 10058 10109","S 2 w 10029 10110","S 2 g 10029 10111","S 5 # 10113 10112","S 4 s 10114 10042","S 5 z 10058 10115","S 2 e 10042 10116","S 2 h 10117 10029","S 5 e 10058 10029","S 2 a 10042 10058","S 4 a 10119 10118","S 2 p 10121 10120","S 2 t 10058 10122","S 5 s 10124 10123","S 5 s 10042 10058","S 2 m 10029 10125","P er1","S 3 a 10127 10126","S 2 u 10129 10128","S 4 e 10131 10130","S 4 # 10133 10132","S 4 o 10135 10134","S 4 k 10093 10136","S 4 e 10138 10137","S 1 t 10058 10042","S 5 s 10140 10139","S 4 a 10042 10141","S 3 o 10142 10042","S 3 g 10093 10143","S 5 s 10144 10042","S 5 u 10058 10042","S 4 a 10042 10145","S 4 e 10029 10146","S 2 d 10148 10147","S 1 # 10150 10149","S 1 0 10152 10151","S 4 a 10154 10153","S 5 # 10058 10042","S 5 e 10156 10155","S 1 t 10058 10157","S 1 s 10042 10029","S 2 p 10159 10158","S 5 # 10042 10160","S 5 u 10058 10161","S 5 n 10042 10058","S 5 s 10042 10162","S 2 d 10042 10163","S 2 d 10058 10042","S 2 h 10029 10164","S 5 # 10166 10165","S 2 e 10168 10167","S 1 c 10170 10169","S 1 s 10058 10171","S 4 a 10173 10172","S 2 m 10042 10174","S 4 s 10176 10175","S 2 c 10042 10177","S 4 a 10179 10178","S 2 b 10180 10042","S 4 t 10182 10181","S 4 a 10184 10183","S 2 t 10058 10185","S 1 c 10187 10186","S 1 n 10093 10042","S 4 e 10042 10188","S 5 g 10144 10042","S 5 y 10058 10042","S 4 i 10058 10042","S 4 i 10042 10189","S 5 u 10058 10093","S 3 i 10190 10029","S 5 a 10042 10029","S 5 a 10029 10191","S 2 f 10029 10192","S 5 i 10194 10193","S 4 a 10042 10195","S 4 o 10042 10196","S 2 h 10058 10042","S 5 # 10042 10197","S 2 p 10042 10058","S 1 n 10058 10198","S 4 u 10042 10199","S 4 u 10058 10200","S 2 d 10042 10201","S 2 f 10058 10042","S 2 j 10042 10202","S 5 d 10058 10042","S 2 c 10029 10203","S 4 z 10058 10204","S 4 e 10205 10042","S 1 # 10207 10206","S 4 n 10209 10208","S 1 # 10211 10210","S 2 a 10042 10212","S 5 c 10058 10213","S 4 o 10215 10214","S 5 # 10042 10216","S 5 c 10058 10217","S 4 d 10219 10218","S 5 # 10221 10220","S 2 o 10042 10222","S 2 c 10224 10223","S 5 i 10058 10042","S 5 w 10058 10093","S 1 s 10042 10225","S 1 s 10058 10226","S 4 g 10228 10227","S 5 # 10042 10229","S 2 s 10231 10230","S 1 f 10042 10232","S 5 g 10093 10233","S 2 s 10235 10234","S 4 e 10042 10093","S 5 e 10029 10236","S 2 m 10029 10237","S 2 t 10029 10238","S 2 e 10042 10239","S 4 s 10241 10240","S 4 o 10042 10242","S 4 e 10042 10243","S 5 o 10042 10244","S 2 f 10058 10245","S 4 y 10042 10246","S 4 l 10093 10247","S 5 s 10042 10248","S 2 d 10042 10249","S 2 j 10029 10250","S 3 y 10252 10251","S 3 y 10042 10253","S 4 # 10255 10254","S 4 o 10257 10256","S 5 h 10093 10258","S 5 # 10259 10093","S 2 a 10261 10260","S 2 a 10262 10042","S 4 i 10042 10263","S 1 d 10029 10264","S 4 i 10266 10265","S 5 n 10267 10042","S 1 d 10058 10268","S 2 o 10042 10269","S 4 a 10271 10270","S 2 f 10272 10042","S 5 h 10058 10042","S 2 o 10042 10058","S 2 t 10058 10273","S 4 t 10042 10274","S 4 s 10275 10042","S 1 r 10093 10276","S 1 t 10093 10277","S 4 i 10279 10278","S 2 b 10058 10093","S 5 l 10058 10280","S 1 i 10029 10281","S 1 n 10042 10282","S 5 e 10042 10283","S 5 e 10284 10042","S 4 y 10042 10285","S 4 v 10058 10286","S 1 # 10042 10029","S 1 c 10029 10287","S 5 # 10042 10288","S 2 d 10058 10289","S 2 s 10093 10290","S 1 o 10058 10093","S 4 u 10042 10291","S 2 e 10042 10292","S 5 a 10294 10293","S 2 h 10058 10295","S 5 a 10297 10296","S 4 v 10058 10298","S 2 p 10058 10299","S 2 b 10121 10042","S 2 k 10029 10300","S 4 o 10042 10301","S 4 n 10093 10302","S 3 c 10058 10303","S 4 d 10305 10304","S 2 l 10058 10306","S 4 a 10308 10307","S 5 # 10042 10309","S 4 l 10093 10310","S 1 h 10058 10093","S 1 f 10312 10311","S 1 b 10042 10313","S 4 o 10042 10314","S 5 # 10042 10315","S 5 l 10042 10316","S 4 # 10042 10317","S 2 p 10042 10318","S 2 v 10042 10319","S 5 t 10319 10320","S 5 d 10058 10321","S 5 z 10058 10322","S 5 # 10154 10323","S 5 # 10058 10324","S 1 a 10325 10058","S 5 r 10042 10326","S 5 e 10058 10042","S 5 # 10327 10093","S 1 e 10093 10328","S 4 y 10330 10329","S 1 i 10029 10331","S 5 t 10333 10332","S 2 e 10093 10334","S 1 s 10042 10058","S 5 o 10042 10335","S 4 s 10042 10093","S 4 u 10042 10336","S 5 e 10093 10337","S 2 h 10029 10338","S 2 j 10029 10339","S 5 e 10341 10340","S 4 m 10343 10342","S 5 c 10042 10093","S 4 s 10058 10344","S 1 0 10042 10345","S 2 l 10058 10042","S 2 i 10042 10058","S 5 o 10347 10346","S 4 d 10042 10348","S 4 f 10058 10349","S 5 l 10042 10350","S 5 e 10352 10351","S 4 a 10354 10353","S 4 t 10093 10355","S 1 f 10058 10356","S 5 t 10358 10357","S 5 # 10360 10359","S 2 g 10058 10361","S 4 i 10363 10362","S 2 h 10324 10364","S 2 p 10366 10365","S 1 l 10368 10367","S 1 t 10370 10369","S 5 d 10093 10371","S 1 e 10058 10372","S 5 v 10058 10373","S 5 c 10058 10374","S 5 t 10093 10375","S 2 e 10042 10376","S 5 # 10042 10377","S 1 # 10042 10058","S 2 h 10042 10378","S 2 f 10380 10379","S 4 o 10382 10381","S 5 t 10384 10383","S 5 s 10058 10042","S 2 d 10042 10058","S 4 n 10042 10385","S 4 d 10093 10058","S 1 l 10058 10093","S 4 o 10387 10386","S 2 b 10042 10058","S 2 c 10042 10388","S 2 c 10029 10389","S 2 t 10058 10029","S 2 j 10058 10390","S 1 p 10042 10391","S 5 u 10393 10392","S 4 m 10058 10394","S 5 e 10029 10395","S 5 i 10029 10396","S 2 h 10398 10397","S 2 o 10042 10399","S 4 e 10042 10400","S 1 e 10093 10401","S 2 b 10058 10402","S 2 d 10058 10403","S 5 u 10405 10404","S 2 v 10058 10406","S 2 d 10093 10407","S 4 n 10058 10408","S 5 t 10042 10409","S 2 d 10042 10410","S 2 f 10042 10029","S 5 c 10042 10411","S 3 h 10412 10042","S 4 o 10042 10413","S 3 t 10058 10414","S 4 s 10416 10415","S 4 i 10418 10417","S 2 w 10420 10419","S 2 o 10042 10421","S 2 n 10058 10422","S 4 e 10275 10042","S 5 t 10042 10423","S 5 d 10425 10424","S 2 m 10058 10426","S 5 l 10058 10042","S 4 s 10428 10427","S 4 # 10058 10144","S 1 w 10430 10429","S 2 o 10042 10431","S 5 r 10058 10432","S 1 g 10042 10433","S 4 i 10042 10058","S 4 e 10435 10434","S 4 e 10093 10436","S 4 u 10042 10437","S 1 a 10058 10438","S 5 b 10042 10439","S 5 s 10282 10440","S 5 f 10042 10058","S 1 s 10442 10441","S 5 u 10444 10443","S 1 o 10058 10445","S 1 r 10058 10446","S 4 g 10448 10447","S 4 # 10450 10449","S 2 e 10042 10451","S 5 a 10042 10452","S 1 a 10058 10042","S 1 r 10029 10453","S 1 s 10058 10454","S 5 i 10093 10455","S 2 p 10058 10093","S 4 p 10058 10093","S 1 s 10042 10456","S 5 y 10029 10457","S 4 v 10459 10458","S 4 m 10093 10460","S 2 b 10058 10461","S 2 d 10058 10462","S 1 x 10093 10463","S 4 y 10058 10464","S 5 s 10466 10465","S 5 i 10468 10467","S 4 m 10058 10469","S 2 b 10470 10093","S 2 c 10093 10471","S 4 c 10065 10472","S 2 g 10058 10473","S 5 i 10029 10474","S 4 # 10042 10475","S 2 a 10058 10042","S 2 m 10042 10476","S 1 a 10058 10477","S 5 z 10479 10478","S 5 # 10480 10042","S 1 s 10042 10481","S 2 l 10042 10482","S 5 s 10484 10483","S 5 l 10058 10485","S 2 w 10058 10486","S 2 a 10042 10487","S 2 p 10042 10488","S 5 # 10042 10489","S 2 p 10058 10042","S 5 u 10058 10249","S 4 # 10042 10490","S 5 # 10042 10491","S 1 u 10493 10492","S 4 i 10093 10042","S 2 i 10093 10494","S 4 o 10042 10495","S 5 s 10042 10496","S 5 b 10058 10497","S 5 s 10042 10498","S 4 o 10500 10499","S 4 y 10042 10501","S 1 q 10058 10502","S 5 l 10042 10503","S 5 t 10058 10504","S 2 b 10506 10505","S 4 t 10042 10507","S 2 b 10058 10508","S 1 t 10093 10058","S 5 b 10058 10509","S 1 c 10058 10510","S 5 z 10058 10511","S 2 f 10179 10042","S 4 u 10042 10512","S 1 a 10058 10513","S 5 # 10042 10058","S 5 z 10058 10514","S 1 e 10515 10042","S 1 l 10058 10516","S 4 v 10093 10517","S 2 v 10042 10029","S 2 d 10029 10518","S 4 n 10520 10519","S 5 a 10521 10058","S 1 t 10523 10522","S 2 t 10525 10524","S 4 c 10527 10526","S 2 t 10058 10528","S 4 m 10093 10529","S 1 l 10058 10530","S 2 v 10042 10058","S 5 e 10531 10093","S 4 l 10228 10532","S 2 m 10058 10093","S 4 t 10058 10093","S 2 f 10058 10533","S 4 k 10093 10534","S 5 r 10058 10535","S 2 s 10042 10029","S 3 d 10537 10536","S 2 s 10538 10042","S 3 d 10042 10539","S 5 n 10541 10540","S 4 i 10058 10542","S 1 s 10042 10543","S 1 i 10058 10544","S 2 m 10042 10545","S 5 l 10058 10546","S 1 b 10042 10547","S 1 k 10058 10548","S 2 c 10042 10549","S 1 l 10551 10550","S 5 e 10552 10042","S 5 m 10042 10553","S 5 n 10042 10554","S 5 e 10093 10555","S 4 h 10058 10556","S 5 # 10042 10557","S 4 u 10058 10558","S 4 e 10042 10559","S 1 f 10042 10560","S 5 p 10058 10561","S 5 l 10042 10058","S 4 # 10093 10562","S 5 w 10093 10042","S 2 o 10042 10563","S 2 c 10058 10042","S 2 t 10042 10564","S 5 r 10058 10565","S 5 d 10567 10566","S 4 t 10042 10568","S 4 e 10042 10569","S 1 o 10058 10042","S 2 h 10042 10570","S 1 i 10058 10571","S 4 e 10042 10572","S 5 t 10058 10573","S 2 e 10575 10574","S 2 t 10577 10576","S 2 c 10042 10029","S 4 a 10042 10578","S 5 l 10093 10579","S 2 p 10029 10580","S 2 r 10042 10581","S 1 o 10058 10582","S 2 s 10583 10058","S 4 e 10042 10584","S 5 p 10042 10585","S 1 o 10058 10586","S 1 n 10058 10587","S 4 t 10589 10588","S 2 x 10058 10093","S 2 d 10093 10058","S 4 k 10093 10590","S 2 m 10592 10591","S 4 m 10594 10593","S 4 d 10093 10595","S 2 g 10058 10596","S 5 i 10598 10597","S 5 f 10058 10599","S 1 # 10042 10600","S 5 n 10601 10042","S 5 a 10042 10058","S 2 a 10058 10602","S 5 v 10058 10603","S 2 m 10058 10604","S 4 c 10058 10042","S 1 l 10058 10605","S 1 p 10058 10606","S 2 g 10058 10042","S 5 i 10607 10042","S 2 u 10042 10608","S 5 e 10058 10324","S 2 a 10042 10609","S 2 s 10611 10610","S 2 i 10058 10612","S 2 v 10058 10042","S 2 g 10042 10613","S 1 y 10042 10614","S 1 h 10093 10042","S 1 g 10616 10615","S 4 i 10058 10029","S 5 n 10617 10042","S 5 l 10093 10618","S 1 i 10058 10619","S 4 a 10058 10620","S 5 e 10093 10621","S 1 # 10623 10622","S 2 v 10042 10624","S 2 t 10114 10042","S 4 y 10626 10625","S 4 e 10058 10042","S 5 n 10058 10627","S 2 t 10042 10628","S 5 s 10042 10629","S 2 p 10058 10630","S 2 b 10042 10631","S 2 b 10633 10632","S 1 s 10093 10634","S 1 t 10042 10635","S 5 n 10636 10042","S 5 n 10058 10324","S 4 # 10042 10637","S 2 t 10093 10638","S 2 h 10042 10639","S 4 t 10641 10640","S 2 b 10058 10642","S 1 e 10058 10093","S 5 y 10058 10643","S 4 t 10093 10644","S 1 t 10058 10645","S 1 e 10093 10058","S 4 n 10647 10646","S 2 b 10058 10648","S 2 v 10058 10649","S 1 s 10042 10650","S 1 a 10042 10651","S 4 g 10652 10093","S 2 f 10058 10093","S 2 t 10093 10653","S 4 m 10093 10654","S 4 m 10093 10655","S 4 m 10058 10093","S 2 c 10058 10656","S 5 s 10657 10042","S 4 e 10658 10042","S 2 e 10042 10659","S 1 s 10661 10660","S 4 o 10058 10662","S 1 u 10058 10663","S 1 e 10058 10664","S 2 n 10042 10665","S 2 y 10042 10058","S 2 y 10042 10666","S 1 m 10058 10667","S 1 s 10058 10042","S 2 m 10058 10042","S 5 n 10668 10042","S 5 o 10670 10669","S 1 p 10042 10671","S 2 e 10029 10042","S 4 a 10058 10093","S 5 n 10672 10042","S 5 w 10029 10673","S 4 o 10058 10042","S 4 y 10093 10674","S 5 a 10058 10675","S 2 v 10676 10093","S 1 a 10042 10656","S 4 n 10678 10677","S 1 a 10042 10679","S 5 e 10042 10680","S 2 c 10042 10681","S 2 p 10058 10682","S 2 c 10058 10683","S 4 b 10179 10042","S 5 a 10685 10684","S 1 l 10058 10686","S 2 c 10093 10058","S 1 s 10058 10093","S 2 s 10042 10058","S 4 s 10042 10687","S 5 o 10689 10688","S 5 e 10029 10690","S 5 s 10692 10691","S 2 b 10694 10693","S 1 a 10696 10695","S 4 t 10093 10697","S 4 e 10163 10058","S 2 p 10699 10698","S 1 s 10700 10058","S 1 o 10058 10701","S 1 e 10093 10702","S 4 t 10058 10703","S 1 x 10042 10704","S 5 c 10058 10042","S 2 s 10042 10093","S 2 v 10093 10705","S 2 m 10058 10706","S 4 p 10058 10707","S 5 n 10058 10042","S 1 s 10058 10708","S 2 n 10058 10042","S 3 b 10058 10042","S 5 b 10058 10709","S 5 c 10042 10710","S 1 g 10042 10711","S 1 i 10042 10058","S 1 c 10058 10389","S 1 e 10042 10712","S 2 k 10058 10713","S 2 f 10042 10714","S 2 b 10058 10042","S 4 d 10555 10715","S 1 d 10093 10042","S 2 i 10029 10716","S 4 a 10042 10093","S 4 y 10042 10717","S 5 # 10042 10430","S 2 k 10689 10093","S 5 i 10058 10093","S 5 # 10719 10718","S 5 # 10720 10042","S 1 c 10058 10721","S 4 g 10042 10722","S 4 f 10042 10723","S 1 c 10058 10724","S 1 o 10058 10725","S 1 s 10093 10726","S 4 b 10058 10093","S 4 s 10093 10727","S 1 m 10042 10567","S 4 g 10093 10728","S 4 k 10058 10093","S 2 w 10042 10729","S 2 o 10042 10730","S 1 i 10042 10731","S 2 u 10042 10732","S 5 s 10058 10733","S 2 t 10735 10734","S 5 a 10093 10058","S 4 a 10058 10736","S 2 g 10058 10737","S 1 s 10738 10058","S 4 o 10058 10739","S 2 t 10740 10093","S 1 d 10058 10741","S 2 t 10058 10742","S 2 h 10042 10743","S 2 c 10744 10093","S 2 b 10093 10745","S 5 u 10746 10470","S 3 p 10042 10747","S 5 y 10749 10748","S 2 t 10042 10750","S 4 a 10154 10751","S 2 c 10042 10752","S 2 u 10042 10753","S 1 s 10755 10754","S 4 i 10042 10756","S 5 # 10042 10757","S 5 n 10759 10758","S 1 o 10761 10760","S 2 f 10762 10042","S 1 g 10042 10763","S 2 t 10042 10764","S 5 # 10765 10058","S 5 # 10042 10766","S 2 n 10058 10767","S 1 a 10058 10612","S 2 e 10093 10768","S 5 a 10093 10769","S 5 a 10470 10093","S 2 m 10042 10770","S 4 a 10772 10771","S 4 u 10058 10773","S 5 s 10775 10774","S 5 y 10058 10776","S 5 a 10058 10777","S 1 s 10093 10058","S 4 o 10042 10778","S 4 l 10058 10779","S 4 s 10093 10058","S 4 l 10093 10058","S 1 a 10093 10058","S 2 v 10093 10058","S 4 d 10058 10780","S 1 n 10058 10781","S 4 t 10093 10058","S 2 h 10093 10782","S 4 s 10058 10093","S 4 u 10042 10783","S 4 y 10785 10784","S 1 u 10058 10786","S 2 c 10042 10787","S 4 t 10042 10788","S 2 u 10042 10789","S 1 p 10058 10790","S 2 t 10058 10791","S 2 t 10042 10425","S 1 h 10042 10792","S 4 a 10794 10793","S 5 c 10042 10795","S 1 m 10042 10796","S 1 a 10798 10797","S 4 t 10042 10799","S 4 t 10058 10042","S 2 h 10058 10800","S 2 s 10058 10801","S 1 l 10058 10802","S 5 e 10042 10373","S 5 n 10804 10803","S 5 o 10093 10805","S 1 y 10058 10806","S 2 n 10042 10029","S 4 e 10808 10807","S 1 m 10042 10809","S 4 a 10042 10810","S 2 c 10058 10811","S 2 s 10093 10058","S 1 l 10093 10042","S 5 o 10058 10093","S 4 n 10093 10812","S 4 e 10058 10813","S 4 n 10058 10093","S 2 v 10058 10814","S 4 b 10058 10815","S 3 g 10042 10816","S 5 # 10818 10817","S 2 n 10042 10819","S 4 t 10042 10058","S 5 e 10042 10820","S 1 s 10042 10821","S 2 o 10042 10822","S 1 y 10058 10823","S 1 u 10058 10824","S 4 e 10042 10825","S 5 r 10042 10826","S 1 s 10029 10042","S 1 j 10042 10827","S 4 e 10042 10828","S 2 r 10058 10829","S 2 t 10042 10830","S 4 c 10058 10831","S 1 a 10042 10124","S 1 e 10058 10042","S 1 a 10058 10832","S 5 l 10833 10042","S 1 a 10042 10058","S 5 i 10093 10594","S 1 n 10093 10834","S 4 o 10836 10835","S 5 o 10042 10837","S 2 v 10838 10058","S 4 e 10552 10058","S 2 w 10093 10058","S 1 s 10093 10839","S 1 m 10058 10840","S 5 d 10058 10841","S 2 s 10093 10741","S 2 e 10042 10842","S 4 o 10091 10843","S 1 g 10545 10042","S 1 e 10042 10844","S 5 # 10042 10845","S 2 l 10042 10846","S 2 i 10042 10668","S 1 e 10848 10847","S 1 g 10042 10849","S 4 y 10042 10850","S 1 m 10042 10851","S 4 i 10853 10852","S 1 w 10029 10042","S 4 i 10855 10854","S 2 v 10058 10856","S 2 n 10058 10857","S 1 n 10042 10058","S 1 e 10042 10858","S 5 e 10093 10859","S 4 y 10861 10860","S 2 t 10058 10862","S 5 d 10058 10863","S 1 o 10058 10864","S 1 p 10058 10042","S 2 m 10093 10865","S 2 t 10058 10866","S 1 a 10042 10867","S 5 s 10869 10868","S 2 r 10042 10870","S 5 s 10042 10871","S 1 t 10042 10872","S 2 h 10832 10873","S 2 r 10042 10658","S 1 a 10042 10874","S 4 a 10042 10875","S 2 e 10876 10042","S 1 t 10042 10877","S 1 m 10042 10878","S 5 t 10058 10879","S 5 a 10042 10880","S 5 h 10042 10881","S 2 t 10058 10294","S 2 m 10042 10058","S 1 r 10058 10635","S 2 u 10883 10882","S 1 e 10042 10058","S 5 u 10058 10884","S 5 r 10058 10885","S 5 g 10042 10058","S 4 d 10042 10886","S 5 c 10058 10366","S 2 s 10042 10887","S 4 e 10889 10888","S 4 i 10890 10042","S 2 u 10042 10891","S 5 l 10042 10892","S 2 p 10042 10893","S 1 n 10058 10894","S 1 i 10042 10895","S 4 m 10042 10896","S 4 # 10042 10897","S 1 n 10042 10898","S 5 e 10042 10029","S 5 u 10839 10899","S 5 o 10042 10900","S 2 m 10058 10901","S 2 y 10903 10902","S 1 e 10058 10904","S 1 e 10058 10905","S 1 n 10042 10906","S 2 v 10908 10907","S 2 o 10042 10909","S 4 a 10911 10910","S 1 q 10042 10912","S 2 t 10058 10913","S 1 a 10058 10914","S 2 w 10042 10915","S 2 h 10058 10916","S 2 i 10042 10917","S 2 c 10042 10918","S 4 h 10042 10919","S 1 v 10042 10920","S 1 p 10042 10921","S 2 f 10923 10922","S 1 c 10058 10924","S 5 s 10042 10925","S 1 a 10058 10926","S 4 l 10058 10042","S 4 s 10042 10927","S 2 p 10058 10928","S 1 o 10058 10929","S 4 v 10093 10930","S 4 t 10093 10931","S 4 i 10042 10932","S 4 i 10934 10933","S 1 i 10058 10935","S 2 p 10042 10936","S 1 c 10042 10937","S 1 i 10042 10938","S 4 k 10042 10939","S 1 n 10058 10042","S 2 r 10042 10940","S 1 n 10042 10941","S 1 # 10042 10093","S 4 o 10042 10942","S 4 a 10944 10943","S 4 f 10832 10042","S 1 m 10058 10945","S 5 s 10058 10946","S 2 f 10042 10567","S 4 m 10058 10947","S 5 a 10058 10042","S 1 i 10058 10121","S 1 e 10058 10948","S 1 s 10093 10949","S 4 g 10093 10950","S 2 t 10042 10412","S 1 l 10951 10042","S 2 t 10042 10952","S 5 c 10042 10953","S 1 e 10058 10954","S 2 l 10042 10058","S 1 c 10042 10955","S 4 l 10042 10956","S 2 b 10058 10957","S 2 d 10058 10958","S 4 y 10029 10959","S 5 # 10029 10960","S 1 s 10058 10961","S 4 c 10042 10962","S 1 g 10042 10963","S 2 p 10965 10964","S 1 f 10058 10121","S 1 c 10093 10966","S 4 s 10968 10967","S 2 m 10042 10294","S 2 h 10058 10969","S 5 m 10058 10042","S 1 c 10058 10970","S 1 u 10042 10971","S 5 d 10042 10972","S 2 n 10973 10058","S 1 h 10058 10974","S 1 d 10976 10975","S 4 e 10978 10977","S 1 h 10029 10042","S 1 n 10979 10042","S 1 t 10042 10980","S 5 r 10982 10981","S 4 s 10983 10058","S 4 n 10093 10984","S 4 b 10093 10058","S 1 n 10058 10093","S 5 e 10985 10042","S 5 l 10042 10986","S 2 t 10058 10987","S 5 a 10042 10988","S 1 i 10058 10042","S 1 k 10058 10989","S 5 t 10029 10042","S 4 e 10042 10029","S 1 h 10029 10990","S 1 h 10042 10991","S 5 s 10042 10992","S 2 i 10042 10993","S 2 w 10327 10994","S 1 n 10995 10058","S 5 t 10058 10996","S 1 e 10058 10744","S 2 n 10042 10997","S 5 k 10042 10937","S 1 o 10042 10998","S 2 h 10999 10042","S 2 b 10042 11000","S 1 m 10042 10029","S 5 l 10042 10029","S 4 m 10927 10058","S 1 h 10042 11001","S 1 c 11003 11002","S 2 g 10058 10093","S 1 m 10093 10777","S 2 u 10042 11004","S 2 d 10042 11005","S 4 e 10042 10058","S 2 m 10042 11006","S 5 n 10937 11007","S 2 t 10058 11008","S 2 k 10058 10093","S 2 i 10042 10937","S 2 i 10042 11009","S 1 e 10058 11010","S 1 i 10042 11011","S 2 b 10058 11012","S 1 l 10042 10058","S 2 v 10042 11013","S 2 t 10801 11014","S 5 a 11015 10058","S 1 o 10058 11016","S 5 c 10042 10058","S 4 s 11017 10058","S 2 i 10058 10042","S 1 i 10093 10058","I 11018 s","S 4 # 11020 11019","S 4 h 11022 11021","S 3 t 11024 11023","S 4 s 11026 11025","S 3 t 11028 11027","S 3 s 11030 11029","P s","S 5 h 11032 11031","S 3 e 11034 11033","S 1 # 11036 11035","P epsilon","S 3 u 11038 11037","S 1 n 11024 11039","S 2 0 11041 11040","S 3 t 11028 11042","S 5 p 11044 11043","S 6 o 11028 11045","P sh","S 3 i 11046 11035","S 3 i 11048 11047","S 2 a 11049 11024","S 2 e 11050 11024","S 4 t 11052 11051","S 4 z 11035 11053","S 4 c 11054 11024","S 1 0 11028 11055","S 3 i 11024 11028","S 2 n 11057 11056","S 6 n 11024 11035","S 2 t 11059 11058","S 2 a 11028 11060","S 1 h 11024 11061","S 1 i 11024 11062","S 3 s 11064 11063","S 6 w 11065 11024","S 4 j 11035 11066","S 6 o 11068 11067","S 1 # 11070 11069","S 2 m 11028 11071","S 1 # 11024 11028","S 3 k 11024 11072","S 3 e 11024 11073","S 2 o 11028 11074","P z","S 1 l 11024 11075","S 4 k 11024 11076","S 5 o 11078 11077","S 1 # 11024 11079","S 4 r 11081 11080","S 6 i 11083 11082","S 2 0 11035 11024","S 5 o 11085 11084","S 2 f 11087 11086","S 1 0 11028 11088","S 3 p 11024 11089","S 3 h 11024 11090","S 2 e 11061 11091","S 1 u 11024 11092","S 6 n 11094 11093","S 4 u 11096 11095","S 6 n 11035 11024","S 2 r 11024 11061","S 6 a 11024 11097","S 5 i 11024 11035","S 3 z 11028 11098","S 1 0 11035 11024","S 6 a 11100 11099","S 1 s 11061 11101","S 5 t 11024 11102","S 3 o 11024 11103","S 2 f 11028 11104","S 3 c 11024 11105","S 1 i 11024 11106","S 2 u 11061 11107","S 1 t 11028 11024","S 4 z 11109 11108","S 4 i 11111 11110","S 2 e 11113 11112","S 5 r 11035 11114","S 5 r 11115 11024","S 1 # 11116 11035","S 6 o 11028 11117","S 3 u 11028 11118","S 3 u 11024 11119","S 2 b 11121 11120","S 3 a 11024 11028","S 2 i 11028 11122","S 2 k 11124 11123","S 1 n 11126 11125","S 1 o 11024 11127","S 4 m 11129 11128","S 6 o 11024 11035","S 4 z 11035 11130","S 5 o 11132 11131","S 5 a 11134 11133","S 1 m 11024 11135","S 2 i 11136 11024","S 4 u 11137 11024","S 6 a 11024 11138","S 1 w 11140 11139","S 5 m 11119 11028","S 2 l 11024 11028","S 2 g 11103 11141","S 3 u 11028 11142","S 1 p 11144 11143","S 3 f 11024 11145","S 3 e 11024 11146","S 1 o 11061 11147","S 3 a 11024 11061","S 2 c 11024 11148","S 4 e 11150 11149","S 5 # 11061 11151","S 4 c 11024 11152","S 5 g 11154 11153","S 3 n 11035 11155","S 6 v 11061 11156","S 4 i 11035 11157","S 1 # 11024 11158","S 1 # 11035 11024","S 6 e 11035 11024","S 6 e 11159 11035","S 3 i 11161 11160","S 5 # 11028 11024","S 2 d 11162 11028","S 3 i 11028 11163","S 1 # 11165 11164","S 5 u 11028 11166","S 3 a 11168 11167","S 1 i 11024 11061","S 1 t 11061 11169","S 1 i 11171 11170","S 4 u 11173 11172","S 3 r 11024 11174","S 5 s 11061 11175","S 4 p 11024 11176","P zh","S 3 e 11061 11024","S 3 l 11035 11153","S 6 s 11178 11177","S 1 l 11028 11024","S 1 d 11024 11179","S 3 u 11035 11180","S 1 e 11028 11181","S 5 a 11182 11028","S 3 i 11028 11183","S 6 # 11024 11184","S 1 r 11186 11185","S 2 b 11028 11187","S 5 l 11028 11188","S 2 p 11190 11189","S 2 z 11061 11191","S 1 l 11061 11192","S 1 a 11024 11193","S 2 t 11024 11061","S 4 c 11195 11194","S 5 r 11197 11196","S 3 n 11199 11198","S 3 r 11024 11200","S 3 d 11061 11201","S 1 # 11024 11202","S 1 p 11061 11024","S 1 b 11024 11203","S 2 r 11024 11204","S 6 c 11028 11205","S 2 r 11024 11028","S 3 o 11028 11024","S 5 i 11028 11103","S 2 r 11207 11206","S 2 g 11028 11208","S 5 o 11024 11209","S 6 # 11028 11210","S 3 o 11212 11211","S 3 o 11061 11024","S 2 y 11024 11213","S 1 s 11061 11214","S 2 k 11061 11024","S 4 i 11216 11215","S 5 i 11218 11217","S 6 l 11153 11219","S 3 n 11221 11220","S 2 o 11223 11222","S 5 y 11061 11224","S 5 i 11226 11225","S 3 t 11024 11227","S 2 i 11024 11228","S 6 d 11028 11229","S 3 o 11024 11035","S 1 l 11028 11230","S 2 h 11028 11231","S 5 l 11028 11232","S 5 # 11233 11024","S 2 r 11028 11234","S 5 e 11024 11235","S 3 h 11237 11236","S 2 o 11061 11238","S 1 u 11061 11239","S 1 a 11061 11190","S 3 x 11028 11240","S 5 a 11242 11241","S 2 e 11243 11024","S 2 o 11035 11024","S 3 e 11244 11024","S 6 e 11153 11245","S 6 e 11035 11246","S 5 # 11248 11247","S 5 r 11250 11249","S 1 e 11061 11024","S 6 l 11061 11251","S 6 c 11061 11024","S 3 w 11061 11252","S 1 c 11024 11253","S 1 f 11024 11254","S 1 t 11028 11255","S 1 l 11024 11256","S 6 r 11028 11257","S 2 l 11028 11024","S 2 h 11024 11258","S 6 n 11260 11259","S 3 e 11261 11061","S 2 c 11024 11262","S 1 u 11264 11263","S 2 l 11266 11265","S 4 p 11268 11267","S 2 p 11270 11269","S 6 # 11272 11271","S 5 o 11024 11061","S 5 m 11061 11273","S 2 e 11153 11024","S 6 g 11024 11274","S 5 d 11276 11275","S 3 p 11024 11277","S 3 i 11061 11278","S 1 # 11061 11279","S 2 c 11061 11280","S 1 0 11282 11281","S 4 o 11284 11283","S 1 h 11028 11285","S 6 i 11287 11286","S 1 b 11028 11288","S 6 v 11028 11289","S 2 l 11291 11290","S 2 r 11140 11024","S 5 i 11024 11028","S 1 q 11024 11292","S 1 i 11061 11293","S 2 l 11061 11294","S 2 l 11024 11061","S 2 c 11024 11295","S 1 l 11061 11296","S 4 o 11298 11297","S 3 w 11061 11024","S 3 u 11300 11299","S 6 i 11061 11301","S 6 k 11024 11302","S 2 n 11153 11303","S 5 l 11061 11024","S 2 i 11035 11024","S 5 r 11305 11304","S 3 a 11024 11306","S 3 a 11308 11307","S 5 d 11061 11024","S 1 r 11061 11309","S 3 d 11061 11310","S 3 r 11024 11311","S 3 i 11028 11312","S 1 g 11314 11313","S 1 l 11028 11315","S 1 i 11024 11316","S 5 u 11028 11317","S 5 f 11024 11028","S 1 o 11028 11318","S 1 b 11028 11319","S 2 w 11024 11320","S 6 n 11028 11024","S 2 f 11024 11321","S 2 a 11061 11322","S 2 g 11061 11323","S 1 a 11061 11324","S 1 a 11061 11024","S 3 g 11326 11325","S 5 r 11328 11327","S 3 i 11330 11329","S 5 v 11024 11331","S 1 e 11061 11332","S 1 t 11061 11333","S 3 o 11024 11334","S 2 r 11336 11335","S 2 e 11338 11337","S 3 p 11024 11339","S 3 l 11024 11340","S 2 r 11061 11341","S 3 u 11024 11061","S 6 s 11061 11342","S 2 u 11024 11343","S 4 m 11061 11024","S 5 i 11345 11344","S 2 a 11028 11024","S 1 h 11024 11346","S 1 c 11348 11347","S 2 c 11028 11349","S 2 l 11028 11350","S 5 e 11352 11351","S 6 l 11028 11353","S 1 e 11264 11061","S 2 g 11061 11024","S 2 d 11061 11354","S 2 e 11356 11355","S 5 e 11358 11357","S 4 b 11061 11359","S 3 a 11361 11360","S 2 v 11061 11362","S 3 e 11364 11363","S 5 t 11061 11365","S 5 # 11024 11366","S 6 e 11061 11367","S 3 a 11024 11035","S 3 a 11153 11024","S 3 i 11369 11368","S 5 n 11371 11370","S 3 i 11061 11372","S 3 y 11061 11373","S 1 o 11024 11061","S 2 w 11061 11374","S 2 b 11024 11375","S 1 u 11024 11376","S 4 o 11024 11377","S 1 f 11379 11378","S 2 o 11028 11024","S 2 u 11140 11024","S 1 v 11024 11380","S 5 r 11381 11024","S 6 f 11028 11382","S 5 i 11028 11383","S 1 d 11024 11384","S 1 d 11028 11385","S 2 j 11024 11386","S 1 a 11388 11387","S 1 r 11390 11389","S 1 n 11024 11061","S 2 d 11392 11391","S 6 # 11394 11393","S 1 i 11061 11395","S 1 # 11397 11396","S 2 e 11398 11024","S 3 b 11061 11399","S 2 h 11401 11400","S 2 r 11403 11402","S 2 d 11024 11404","S 6 e 11061 11405","S 6 g 11061 11406","S 3 u 11408 11407","S 2 w 11061 11409","S 1 # 11411 11410","S 6 t 11061 11412","S 2 i 11024 11413","S 3 l 11024 11414","S 2 h 11061 11415","S 1 c 11024 11416","S 6 t 11418 11417","S 3 i 11024 11419","S 1 b 11421 11420","S 2 u 11024 11422","S 4 y 11024 11423","S 6 # 11024 11424","S 2 l 11426 11425","S 2 u 11028 11427","S 5 # 11028 11428","S 6 s 11024 11028","S 5 e 11028 11429","S 2 m 11061 11430","S 2 r 11061 11395","S 2 r 11432 11431","S 2 g 11024 11061","S 4 l 11434 11433","S 4 r 11435 11024","S 1 0 11437 11436","S 3 i 11028 11438","S 2 n 11061 11024","S 3 i 11178 11439","S 2 r 11441 11440","S 6 # 11442 11061","S 2 r 11061 11024","S 5 e 11024 11443","S 3 y 11061 11024","S 6 a 11061 11444","S 1 # 11061 11445","S 2 v 11061 11446","S 6 g 11448 11447","S 5 t 11061 11024","S 3 o 11450 11449","S 2 a 11061 11451","S 1 r 11061 11452","S 5 s 11453 11024","S 3 o 11061 11454","S 3 o 11061 11455","S 3 e 11061 11456","S 1 h 11061 11024","S 1 b 11061 11457","S 1 r 11024 11458","S 6 y 11024 11459","S 5 a 11024 11061","S 3 k 11024 11460","S 1 l 11462 11461","S 2 u 11024 11463","S 4 i 11024 11028","S 1 j 11465 11464","S 6 i 11028 11024","S 1 g 11028 11466","S 6 s 11028 11467","S 2 c 11028 11468","S 5 i 11028 11024","S 2 t 11024 11028","S 1 l 11024 11469","S 1 t 11061 11470","S 1 t 11061 11224","S 3 p 11024 11471","S 2 o 11024 11472","S 3 e 11028 11024","S 3 u 11024 11473","S 3 i 11028 11024","S 4 n 11028 11024","S 3 y 11474 11024","S 2 m 11061 11024","S 6 a 11061 11273","S 1 r 11024 11061","S 6 g 11190 11475","S 5 r 11061 11024","S 6 e 11061 11024","S 1 p 11061 11476","S 5 b 11061 11477","S 1 # 11024 11061","S 3 e 11479 11478","S 6 # 11481 11480","S 2 m 11061 11482","S 2 h 11061 11483","S 3 i 11061 11024","S 5 m 11061 11024","S 6 d 11024 11154","S 1 h 11061 11484","S 2 e 11486 11485","S 2 c 11024 11487","S 5 a 11489 11488","S 2 r 11491 11490","S 5 e 11024 11492","S 5 f 11024 11493","S 5 # 11028 11494","S 4 l 11496 11495","S 6 # 11028 11024","S 1 o 11028 11497","S 5 b 11028 11498","S 2 s 11028 11499","S 2 n 11501 11500","S 1 m 11061 11502","S 4 q 11024 11503","S 1 r 11061 11024","S 6 y 11505 11504","S 2 a 11061 11024","S 3 a 11507 11506","S 2 a 11061 11508","S 5 c 11061 11024","S 5 y 11510 11509","S 1 h 11061 11511","S 2 j 11024 11512","S 2 p 11061 11513","S 2 f 11061 11024","S 6 h 11061 11514","S 6 # 11516 11515","S 1 i 11024 11517","S 3 e 11442 11024","S 1 l 11024 11061","S 2 d 11024 11518","S 2 a 11024 11519","S 2 c 11024 11520","S 1 # 11061 11024","S 6 a 11024 11521","S 5 s 11024 11522","S 5 d 11024 11523","S 1 r 11525 11524","S 1 r 11024 11526","S 5 a 11028 11527","S 3 a 11528 11028","S 2 t 11028 11024","S 1 d 11079 11529","S 1 i 11061 11024","S 1 p 11024 11530","S 4 a 11532 11531","S 3 i 11024 11533","S 3 i 11061 11507","S 1 r 11474 11534","S 2 e 11061 11024","S 5 # 11024 11535","S 3 a 11536 11024","S 3 t 11024 11537","S 5 t 11024 11538","S 6 u 11024 11539","S 2 l 11061 11491","S 5 s 11061 11540","S 3 a 11024 11541","S 1 # 11061 11542","S 2 t 11024 11543","S 5 e 11154 11024","S 3 i 11061 11544","S 3 o 11024 11545","S 6 g 11024 11546","S 2 a 11547 11024","S 4 i 11024 11314","S 5 a 11024 11548","S 6 g 11028 11549","S 6 r 11028 11024","S 2 a 11028 11550","S 1 c 11028 11551","S 1 n 11024 11552","S 1 e 11061 11553","S 3 t 11024 11554","S 3 r 11024 11555","S 2 e 11557 11556","S 2 r 11491 11024","S 2 o 11061 11558","S 2 e 11273 11024","S 1 # 11024 11559","S 1 g 11024 11560","S 1 # 11273 11024","S 6 # 11024 11561","S 6 s 11061 11024","S 2 r 11061 11562","S 2 c 11564 11563","S 6 r 11024 11061","S 1 k 11061 11565","S 1 o 11024 11566","S 5 c 11028 11024","S 4 o 11028 11567","S 4 m 11028 11568","S 2 t 11028 11569","S 5 # 11028 11570","S 2 h 11024 11061","S 1 i 11061 11571","S 3 i 11573 11572","S 5 n 11575 11574","S 3 d 11061 11576","S 1 r 11024 11577","S 2 u 11061 11578","S 3 l 11024 11061","S 2 h 11024 11579","S 1 w 11024 11580","S 1 s 11024 11581","S 1 e 11583 11582","S 3 u 11061 11024","S 1 l 11061 11584","S 1 w 11024 11585","S 5 n 11024 11586","S 5 r 11024 11587","S 6 m 11028 11588","S 1 g 11024 11028","S 2 d 11061 11589","S 3 w 11061 11590","S 4 r 11061 11024","S 2 v 11061 11591","S 2 e 11061 11592","S 3 a 11024 11593","S 4 b 11061 11594","S 6 e 11024 11595","S 6 s 11061 11596","S 2 e 11597 11024","S 3 u 11024 11474","S 1 a 11154 11598","S 2 r 11061 11453","S 1 i 11061 11599","S 6 l 11600 11024","S 5 s 11024 11601","S 6 t 11024 11602","S 1 r 11604 11603","S 2 s 11024 11061","S 5 s 11024 11605","S 5 l 11607 11606","S 6 # 11061 11541","S 1 c 11024 11608","S 1 n 11061 11609","S 2 r 11061 11610","S 5 n 11611 11024","S 5 n 11061 11024","S 3 i 11061 11612","S 2 l 11061 11613","S 4 a 11028 11024","S 1 n 11615 11614","S 5 v 11024 11616","S 6 e 11028 11617","S 2 e 11028 11182","S 3 k 11024 11618","S 3 a 11024 11619","S 6 e 11024 11620","S 6 l 11622 11621","S 3 n 11024 11061","S 1 # 11024 11623","S 6 # 11061 11024","S 1 r 11625 11624","S 3 a 11312 11626","S 6 # 11628 11627","S 5 e 11024 11028","S 5 # 11024 11629","S 6 s 11028 11630","S 3 a 11507 11631","S 2 e 11024 11632","S 3 o 11061 11633","S 4 f 11024 11634","S 4 n 11024 11061","S 2 e 11024 11339","S 2 p 11061 11635","S 2 i 11061 11024","S 2 t 11024 11636","S 6 r 11024 11637","S 5 d 11024 11028","S 4 e 11638 11028","S 2 m 11028 11639","S 4 f 11024 11640","S 6 l 11061 11641","S 1 # 11024 11609","S 2 o 11024 11642","S 1 # 11061 11643","S 4 b 11061 11644","S 4 e 11024 11645","S 5 s 11028 11646","S 6 d 11028 11647","S 4 n 11024 11648","S 6 c 11190 11649","S 2 c 11024 11650","S 1 l 11061 11651","S 2 i 11061 11652","S 1 s 11024 11653","S 5 d 11028 11024","S 6 # 11028 11654","S 2 l 11061 11655","S 6 i 11564 11656","S 4 w 11024 11657","S 2 i 11024 11061","S 1 h 11024 11658","S 1 l 11024 11028","S 1 a 11028 11659","S 1 f 11024 11660","S 5 b 11448 11661","S 1 g 11024 11662","S 2 e 11024 11663","S 1 b 11028 11664","S 1 c 11061 11665","S 6 e 11024 11666","S 4 l 11024 11667","S 4 m 11024 11564","S 1 m 11028 11668","S 3 u 11024 11669","S 2 a 11671 11670","S 6 r 11672 11061","S 1 s 11028 11673","S 3 o 11675 11674","S 6 s 11024 11676","S 5 # 11024 11472","S 2 a 11024 11677","S 3 a 11140 11028","S 4 d 11679 11678","S 5 # 11061 11024","S 3 u 11680 11534","S 1 # 11024 11681","S 3 e 11395 11682","S 1 d 11061 11683","S 6 # 11024 11684","S 3 n 11061 11024","S 1 h 11024 11685","S 2 u 11061 11686","S 5 # 11024 11061","S 5 r 11061 11687","S 2 a 11024 11061","S 3 m 11061 11688","S 3 r 11024 11689","S 6 c 11061 11690","S 2 u 11024 11691","S 4 v 11061 11692","S 6 r 11693 11474","S 2 e 11061 11694","S 4 b 11061 11686","I 11695 t","S 4 h 11697 11696","S 5 o 11699 11698","S 5 e 11701 11700","S 4 t 11703 11702","S 4 i 11705 11704","S 5 # 11707 11706","S 6 r 11709 11708","S 4 c 11711 11710","S 3 e 11713 11712","S 4 t 11715 11714","S 3 s 11717 11716","S 3 s 11719 11718","P th","S 6 # 11721 11720","S 3 # 11707 11722","S 4 u 11724 11723","S 5 h 11726 11725","S 5 s 11728 11727","S 5 s 11726 11729","S 4 u 11731 11730","S 3 e 11726 11732","S 3 n 11734 11733","P ch","S 5 o 11736 11735","S 6 a 11707 11725","S 6 a 11738 11737","S 3 n 11707 11739","S 3 a 11739 11721","S 3 t 11741 11740","S 3 # 11725 11742","P t","P epsilon","S 6 d 11726 11743","S 6 # 11745 11744","S 5 l 11746 11726","S 3 t 11748 11747","S 6 u 11717 11725","S 6 m 11726 11749","S 6 n 11734 11750","P sh","S 6 # 11752 11751","S 6 r 11707 11753","S 6 d 11755 11754","S 3 # 11707 11756","P dh","S 5 a 11758 11757","S 4 s 11726 11759","S 5 r 11761 11760","S 5 r 11726 11762","S 3 i 11725 11726","S 3 o 11725 11763","S 6 e 11726 11725","S 4 a 11764 11725","S 4 r 11725 11765","S 6 # 11767 11766","S 6 u 11734 11768","S 5 a 11770 11769","S 3 r 11772 11771","S 3 l 11725 11773","S 6 i 11707 11774","S 3 a 11739 11707","S 3 r 11707 11725","S 6 h 11776 11775","S 4 i 11778 11777","S 6 0 11725 11779","S 5 a 11717 11780","S 6 e 11717 11781","S 6 s 11726 11782","S 3 a 11726 11725","P d","S 4 o 11725 11726","S 3 o 11784 11783","S 3 o 11725 11726","S 3 a 11734 11725","S 6 n 11786 11785","S 6 i 11725 11707","S 5 y 11707 11787","S 5 y 11739 11707","S 3 o 11725 11788","S 6 y 11739 11789","S 4 l 11791 11790","S 4 s 11726 11725","S 4 g 11793 11792","S 3 s 11795 11794","S 5 d 11725 11796","S 6 a 11798 11797","S 6 a 11717 11799","S 6 n 11726 11800","S 3 u 11725 11801","S 6 n 11726 11725","S 6 l 11803 11802","S 3 r 11739 11755","S 5 s 11707 11804","S 6 d 11707 11805","S 6 s 11807 11806","S 5 h 11809 11808","S 3 s 11810 11725","S 4 r 11725 11811","S 3 r 11726 11725","S 3 n 11813 11812","S 6 # 11725 11717","S 4 r 11725 11814","S 5 e 11717 11815","S 5 l 11717 11816","S 6 i 11817 11725","S 5 # 11726 11818","S 6 n 11725 11819","S 3 y 11821 11820","S 5 i 11725 11707","S 3 n 11707 11822","S 6 l 11707 11823","S 3 # 11707 11824","S 3 o 11739 11755","S 4 # 11725 11825","S 4 s 11826 11725","S 5 e 11726 11725","S 3 # 11827 11725","S 3 # 11725 11734","S 6 l 11717 11828","S 5 a 11725 11829","S 3 s 11725 11830","S 3 r 11717 11725","S 3 n 11725 11717","S 6 a 11726 11831","S 3 a 11832 11726","S 6 s 11833 11707","S 5 m 11739 11707","S 5 a 11707 11739","S 6 n 11707 11834","S 3 o 11835 11707","S 5 n 11837 11836","S 6 a 11717 11838","S 4 e 11725 11839","S 6 t 11734 11840","S 6 t 11725 11841","S 6 # 11725 11842","S 3 a 11844 11843","S 6 o 11726 11725","S 3 # 11739 11707","S 6 g 11707 11845","S 6 n 11739 11707","S 6 n 11847 11846","S 4 e 11848 11725","S 6 o 11725 11717","S 4 o 11725 11849","S 6 # 11734 11725","S 4 o 11851 11850","S 3 i 11725 11852","S 6 # 11726 11853","S 5 n 11725 11854","S 3 # 11707 11855","S 3 d 11857 11856","S 4 i 11858 11725","S 3 s 11860 11859","S 4 w 11725 11861","S 5 s 11725 11862","S 5 m 11725 11863","S 6 e 11864 11725","S 5 k 11726 11865","S 5 y 11726 11866","S 6 u 11725 11867","S 5 u 11868 11725","S 4 k 11726 11725","S 5 e 11768 11725","S 3 f 11726 11725","S 6 i 11726 11746","S 4 s 11725 11726","S 5 n 11725 11869","S 5 n 11870 11726","S 3 r 11717 11871","S 6 i 11726 11872","S 6 t 11725 11726","S 3 a 11707 11873","S 4 e 11874 11725","S 5 w 11726 11875","S 6 # 11726 11725","S 3 a 11717 11725","S 3 r 11725 11876","S 3 r 11707 11877","S 6 r 11878 11725","S 5 g 11725 11879","S 6 k 11725 11880","S 3 e 11707 11725","S 3 s 11717 11725","S 6 k 11725 11881","S 3 u 11883 11882","S 5 m 11725 11884","S 6 g 11726 11885","S 6 e 11726 11810","S 6 f 11725 11886","S 5 i 11746 11887","S 6 n 11725 11888","S 6 m 11726 11889","S 6 d 11726 11890","S 5 a 11744 11891","S 6 o 11726 11892","S 5 l 11767 11893","S 6 e 11895 11894","S 5 e 11896 11726","S 6 l 11898 11897","S 5 r 11726 11725","S 6 r 11726 11899","S 6 y 11726 11900","S 4 e 11726 11725","S 6 l 11726 11725","S 4 n 11725 11901","S 6 a 11898 11902","S 4 l 11904 11903","S 6 b 11726 11905","S 6 s 11726 11725","S 5 l 11907 11906","S 6 s 11909 11908","S 6 # 11910 11904","S 4 k 11725 11911","S 4 e 11725 11726","S 4 a 11725 11726","S 6 i 11725 11912","S 6 m 11725 11913","S 6 # 11725 11914","S 4 i 11725 11915","S 6 r 11726 11725","I 11916 u","S 4 r 11918 11917","S 3 a 11920 11919","S 5 y 11922 11921","S 3 o 11924 11923","P epsilon","S 5 i 11926 11925","S 3 b 11927 11920","S 3 q 11929 11928","S 4 p 11931 11930","S 5 o 11933 11932","S 3 # 11935 11934","P eh1","S 5 # 11937 11936","S 4 e 11939 11938","S 4 i 11941 11940","S 5 l 11943 11942","S 5 a 11945 11944","S 3 e 11947 11946","S 3 p 11949 11948","S 6 n 11951 11950","S 5 e 11953 11952","S 4 e 11955 11954","S 5 a 11957 11956","S 5 # 11920 11958","S 4 s 11960 11959","S 5 s 11961 11957","P uw1","P ah1","S 5 e 11963 11962","S 6 # 11965 11964","S 3 a 11920 11966","S 6 p 11949 11967","S 3 c 11949 11968","P y-uh1","P y-er","P y-er1","S 5 i 11970 11969","S 4 s 11972 11971","S 4 a 11974 11973","S 3 g 11920 11975","S 6 # 11977 11976","P w","S 6 # 11979 11978","S 4 n 11981 11980","S 5 s 11942 11982","P uw","S 5 r 11984 11983","S 3 t 11920 11985","S 3 t 11920 11986","P uh1","S 6 # 11965 11987","S 6 l 11989 11988","S 3 f 11949 11990","S 5 a 11992 11991","S 3 # 11994 11993","S 3 # 11996 11995","S 6 s 11998 11997","S 4 s 12000 11999","S 3 g 11957 12001","S 3 r 11942 12002","S 4 a 11957 12003","S 5 l 11957 12004","S 5 t 11920 12005","S 5 z 11957 11920","S 4 t 12007 12006","S 5 g 12009 12008","S 5 # 11920 12010","S 5 u 12011 11920","S 3 d 12012 11920","S 3 s 12014 12013","S 3 c 12016 12015","S 6 n 11942 11920","S 6 s 11965 12017","P uh","S 3 b 11927 12018","S 4 e 12020 12019","S 4 l 12022 12021","S 3 m 12024 12023","S 6 n 11943 12025","S 3 r 12027 12026","S 4 n 12029 12028","S 3 e 12031 12030","S 3 r 12000 12032","S 4 m 12000 12033","P ah","S 3 h 11961 11942","S 3 s 11961 12034","S 4 i 11957 12035","S 5 d 11957 12036","S 5 u 11920 12037","S 5 h 12039 12038","S 6 e 12041 12040","S 6 r 11943 11920","S 6 e 11920 11943","S 5 t 12042 11920","S 3 a 11920 11965","P ao1","S 3 a 11920 12043","S 6 # 11920 12044","S 3 g 11950 12045","S 6 t 11949 11950","P y-uw1","S 3 g 11949 12046","S 4 a 12048 12047","S 3 g 11920 12049","S 3 # 12051 12050","S 6 t 12053 12052","S 3 c 12055 12054","S 4 n 12057 12056","S 6 m 11943 12058","S 3 s 12060 12059","S 4 m 12062 12061","S 4 t 12017 12000","S 6 a 12000 12063","S 3 m 12017 12064","S 6 r 11920 12017","S 3 b 11943 12000","S 3 f 12000 12065","S 3 d 11942 12066","S 4 o 11957 11942","S 5 t 11957 12067","S 5 r 11920 12068","S 5 l 12070 12069","S 4 g 11920 12071","S 5 e 12073 12072","S 5 h 11943 11920","S 6 # 11920 12074","S 3 g 11950 12075","S 6 r 11965 12076","S 3 o 11920 12077","S 3 m 11949 12078","S 4 i 12080 12079","S 3 g 12082 12081","S 3 r 12084 12083","S 6 # 11942 12085","S 4 n 12086 12017","S 6 r 12088 12087","S 3 t 12000 12089","S 3 b 12091 12090","S 4 s 12093 12092","S 6 o 11942 12017","S 6 c 12017 12094","S 4 n 12017 12095","S 3 l 12097 12096","S 4 l 12000 11942","S 6 t 11961 12098","S 6 n 12000 11942","S 6 x 11943 12099","S 3 f 12017 12100","S 3 e 12102 12101","S 3 n 12104 12103","S 5 n 11957 12105","S 6 y 11920 11957","S 4 x 11942 12106","S 4 b 11943 12107","S 6 a 11943 12108","S 5 a 11961 11920","S 6 d 11920 12109","S 6 i 11942 11920","S 3 o 11920 12110","S 6 s 11920 12111","S 3 m 11920 12112","S 3 d 11965 12113","S 3 # 12115 12114","S 3 g 12117 12116","S 5 t 12119 12118","S 5 r 11920 12120","S 6 # 12122 12121","S 5 n 11965 11942","S 6 t 12124 12123","S 6 b 12017 12125","S 3 t 11942 12126","S 3 c 12128 12127","S 3 s 12000 12129","S 3 l 11942 12130","S 4 s 12132 12131","S 6 e 12128 12133","S 6 n 12017 11942","S 6 z 12128 12134","S 4 t 12017 11961","S 3 t 12136 12135","S 6 n 12137 11942","S 6 l 11942 12138","S 6 m 11943 12000","S 3 b 12017 12139","S 4 i 11942 12140","S 4 x 11920 12141","S 3 l 11942 12142","P y-uw","S 4 i 11957 11920","S 4 e 12144 12143","S 4 e 11961 11920","S 6 e 11920 12145","S 6 r 11920 11942","S 3 b 12147 12146","S 6 d 11965 11920","S 3 # 11949 12148","S 3 k 11920 12149","S 5 o 12151 12150","S 4 n 12153 12152","S 3 b 11920 12154","S 6 h 11957 12155","S 5 l 12157 12156","S 3 t 11961 12158","S 6 a 11957 12159","S 3 l 12161 12160","S 3 s 11942 12162","S 3 h 12164 12163","S 4 t 12166 12165","S 6 n 11943 12167","S 3 c 12128 12168","S 3 g 12128 12169","P y-ah","S 3 d 12000 12128","S 3 p 12171 12170","S 6 o 12017 12172","P ih1","S 6 v 12128 12173","S 6 s 12128 12017","S 3 d 12175 12174","S 4 d 11942 12176","S 4 m 11943 11942","S 6 n 12177 11942","S 3 # 12017 12178","S 4 y 11920 12179","S 4 p 11943 11961","S 3 c 12104 12017","S 5 t 11920 12180","S 6 t 11961 11942","S 6 i 11920 12181","S 3 c 12183 12182","S 6 a 11949 11927","S 6 s 11965 12184","S 3 a 11920 12185","S 4 # 12187 12186","S 6 # 12189 12188","S 4 p 12191 12190","S 5 d 12193 12192","S 3 c 12195 12194","S 5 t 11920 12196","S 3 t 12198 12197","S 3 n 12104 12199","S 3 d 12201 12200","S 5 n 11957 12202","S 3 b 12204 12203","S 5 n 11961 12205","S 3 n 12207 12206","S 3 s 12209 12208","S 4 m 12017 11942","S 3 c 12128 12210","S 3 p 12128 12104","S 6 l 12000 11943","S 3 m 12128 12211","S 3 p 12128 12000","S 3 f 12213 12212","S 6 s 11943 12017","S 4 t 12104 12093","S 6 n 12128 12017","S 3 e 12215 12214","S 4 l 11961 11942","S 4 t 11942 12216","S 4 d 11942 12217","S 3 c 12017 12218","S 4 z 11961 12219","S 4 # 11942 12220","S 6 # 11920 11943","S 3 p 11949 12221","S 6 # 11950 11949","S 3 a 11920 12222","S 3 o 11920 12223","S 4 o 12225 12224","S 3 c 12104 12226","S 6 u 12228 12227","S 3 c 12017 11942","S 5 u 12017 12229","S 5 h 12000 12230","S 5 o 11943 12231","S 6 o 12000 12232","S 5 n 12234 12233","S 5 s 11957 11920","S 6 g 11920 12235","S 3 n 11942 12236","S 6 y 11961 12237","S 3 d 11961 12238","S 3 l 12104 12239","P ah-w","S 6 # 11920 11957","S 3 m 12241 12240","S 5 n 11957 12017","S 6 e 11965 11942","S 3 l 12243 12242","S 5 l 11989 12104","S 3 g 12245 12244","S 6 r 11965 12246","S 4 m 11942 12247","S 6 # 11942 12248","S 3 h 12250 12249","S 4 j 11942 12017","S 4 y 11920 12251","S 4 g 12104 12252","S 4 n 12253 11942","S 4 b 11942 12000","S 6 n 11942 12254","S 4 l 12000 12255","S 4 v 12257 12256","S 3 # 11951 12258","S 6 l 11920 12259","S 3 e 11920 12260","S 3 e 12262 12261","S 5 u 12264 12263","S 3 e 11942 12265","S 3 c 12267 12266","S 4 l 12128 11943","S 4 h 12269 12268","S 5 d 12000 12270","S 6 o 12272 12271","S 6 e 11943 12273","S 3 m 11942 12274","S 3 r 11942 12275","S 6 d 11920 12276","S 5 n 12278 12277","S 6 i 11961 11942","S 3 t 12280 12279","S 3 n 12104 12128","S 3 f 12282 12281","S 5 l 12104 12017","S 3 d 11942 12283","S 5 d 12104 11942","S 3 n 12285 12284","S 6 n 11920 12000","S 6 n 11961 11942","S 3 d 12000 12286","S 3 d 12000 11942","S 3 k 12288 12287","S 4 m 12104 12289","S 6 n 12291 12290","S 6 r 12293 12292","S 6 # 11942 12000","S 3 r 11942 12294","S 4 h 11961 12295","S 5 a 12297 12296","S 5 i 11961 11942","S 6 k 11965 12298","S 6 n 12300 12299","S 6 n 12302 12301","S 5 u 12304 12303","S 4 p 11943 12305","S 5 r 11920 12306","S 3 n 12104 12307","S 3 g 11961 12308","S 3 b 12310 12309","S 4 t 12128 11942","S 4 m 11943 12311","S 6 i 11965 11942","S 5 p 11943 12312","S 5 u 12000 12313","S 5 c 11943 12000","S 6 i 11943 12000","S 3 s 11942 12314","S 6 g 11942 12128","S 6 e 11920 12315","S 3 s 11957 12316","S 3 h 11957 12317","S 3 s 12201 12318","S 6 i 12201 11961","S 5 r 12320 12319","S 5 l 12017 11957","S 5 r 11920 12321","S 3 c 12173 12322","S 4 f 12128 11942","S 4 g 12000 12323","S 3 g 11961 12324","S 6 c 12017 12325","S 6 a 11942 12326","S 3 n 12328 12327","S 4 m 12128 12329","S 6 # 11943 12330","S 4 v 11942 12331","S 6 # 12017 11942","S 4 k 12000 12332","S 4 a 11961 12333","S 4 g 11942 12334","S 3 l 11965 12335","S 3 d 11965 11920","S 3 d 11920 12336","S 6 z 11920 12337","S 3 t 11920 12338","S 3 s 12340 12339","S 3 c 12342 12341","S 5 r 11942 12343","S 6 # 11920 12344","S 3 c 12104 12345","S 3 n 11961 12346","S 3 m 12104 12347","S 4 t 12128 12017","S 5 t 11943 12348","S 6 i 11943 12349","S 5 w 12000 12350","S 6 # 12352 12351","S 5 l 11920 12353","S 5 d 11957 12354","S 3 j 11957 11961","S 3 x 12201 11961","S 6 a 11957 12355","S 3 e 11920 12356","S 3 c 12017 12357","S 4 t 12359 12358","S 3 t 12000 12360","S 6 e 12362 12361","S 4 l 12104 12062","S 4 l 12017 11942","S 3 j 11942 12363","S 4 t 12000 11942","S 4 l 12128 12364","S 6 n 11920 11942","S 4 t 11942 12365","S 3 n 11943 12366","S 6 u 11920 12367","S 6 # 11942 12175","S 6 t 11920 12368","S 3 s 11965 12017","S 3 j 11965 12369","S 3 s 11965 11920","S 4 l 12371 12370","S 5 r 12373 12372","S 4 t 12375 12374","S 4 m 12017 12128","S 6 a 12104 12376","S 5 y 11920 12377","S 3 t 12000 11961","S 3 l 11961 12378","S 4 b 12380 12379","S 5 o 12104 12381","S 6 a 11943 12382","S 6 a 12000 12383","S 5 d 11961 12384","S 3 r 11942 11961","S 6 t 11957 12385","S 5 r 11957 11942","S 3 k 11965 12386","S 3 h 11920 11965","S 5 l 11942 12017","S 6 m 11942 12387","S 3 r 11942 12388","S 4 n 11961 11942","S 3 e 12390 12389","S 4 l 11942 12391","S 3 h 12393 12392","S 3 j 11942 12017","S 4 b 11920 11942","S 4 g 11943 12394","S 6 r 11920 12395","S 3 j 11920 12396","S 6 s 11920 12397","S 5 h 12399 12398","S 3 f 12401 12400","S 4 b 12403 12402","S 6 e 11961 12404","S 6 # 11942 12405","S 3 m 12017 12406","S 6 c 11920 12407","S 3 b 11957 12408","S 3 r 11961 12409","S 4 d 11942 12410","S 3 s 12000 12411","S 4 z 11961 11943","S 5 t 11943 12412","S 5 f 12000 12413","S 3 h 11920 12414","S 6 i 11920 12415","S 3 h 12417 12416","S 3 e 12419 12418","S 3 l 11961 12420","S 3 n 11942 12421","S 6 c 12017 11942","S 3 r 11942 11943","S 4 t 12423 12422","S 4 l 11942 12424","S 4 p 12426 12425","S 6 t 11961 12427","S 3 e 11920 12428","S 3 t 11965 12429","S 6 # 12431 12430","S 4 s 12433 12432","S 3 b 12435 12434","S 6 y 12000 12436","S 5 p 12438 12437","S 6 c 12000 12439","S 6 a 11942 11943","S 4 k 11961 12440","S 6 r 12017 11942","S 6 i 11942 12441","S 5 m 11957 12442","S 3 k 11942 12443","S 3 h 12164 12444","S 3 d 12000 11943","S 6 r 12000 12445","S 5 l 12000 12446","S 3 d 11961 11942","S 6 n 11920 12447","S 3 # 11965 12448","S 5 t 11942 12449","S 6 s 12451 12450","S 6 l 12017 11942","S 3 b 12128 12452","S 6 o 11942 12453","S 3 m 12455 12454","S 3 b 12104 12017","S 4 t 11942 12456","S 3 m 12000 12457","S 3 r 12000 12458","S 5 i 12460 12459","S 3 n 11950 12461","S 6 a 11965 12462","S 4 y 11920 12463","S 5 y 12465 12464","S 4 t 12467 12466","S 3 b 11965 12468","S 3 p 12470 12469","S 5 l 11965 12471","S 5 n 12000 12472","S 5 c 12474 12473","S 4 m 11943 12475","S 6 l 11943 12476","S 6 l 11942 12477","S 6 # 12478 11920","S 6 o 11957 12479","S 3 m 11942 11961","S 3 e 12481 12480","S 6 e 12000 11943","S 5 h 12000 12482","S 6 o 11920 12483","S 6 d 11942 12484","S 5 l 11942 11965","S 3 k 11961 12485","S 3 l 11942 12486","S 3 p 12128 12017","S 6 # 11942 12487","S 4 p 11942 12488","S 4 n 12489 12017","S 6 # 12017 12164","S 3 b 12000 12490","S 3 d 11943 12491","S 5 f 11920 12492","S 6 n 12494 12493","S 6 # 11965 12495","S 3 l 11965 11920","S 5 c 12497 12496","S 5 d 12499 12498","S 4 d 11942 12500","S 4 g 12502 12501","S 6 # 12504 12503","S 3 p 11965 12505","S 5 l 12507 12506","S 5 l 11965 12508","S 6 a 12000 11943","S 5 f 11989 12509","S 4 g 12000 12510","S 6 e 12000 12511","S 6 h 11943 12512","S 6 a 11943 12513","S 6 s 11942 12514","S 5 z 11920 11942","S 5 n 11961 11942","S 6 w 12000 12515","S 6 g 12017 11920","S 5 v 12000 12516","S 5 n 11920 12517","S 3 c 11957 12518","S 3 f 11961 12519","S 4 d 11943 11942","S 4 c 11942 12520","S 3 z 11942 12521","S 6 # 12017 12104","S 3 r 12523 12522","S 3 s 12000 12524","S 5 # 12526 12525","S 4 l 11942 11920","S 4 l 11961 11920","S 3 d 11965 11949","S 5 l 12528 12527","S 4 c 12530 12529","S 5 r 11920 12531","S 4 n 12532 11943","S 3 l 11942 12533","S 6 i 11942 12534","S 6 e 12017 11943","S 3 r 12535 11943","S 3 m 11961 12536","S 3 c 11965 11943","S 5 y 11942 12537","S 6 o 11942 11943","S 6 o 11965 12538","S 6 i 11965 12539","S 6 a 12541 12540","S 4 c 12000 11943","S 4 s 12000 12542","S 5 m 12000 12543","S 6 e 12545 12544","S 3 d 11961 12546","S 5 t 12000 12547","S 6 a 11920 11957","S 3 t 11961 12548","S 3 b 11961 12549","S 6 g 11943 12550","S 6 l 11942 12551","S 3 p 11943 12552","S 4 n 11943 12553","S 3 h 12000 11943","S 6 a 11942 12554","S 4 d 11920 11942","S 5 r 12556 12555","S 4 h 11942 12557","S 3 b 12558 11943","S 6 i 12560 12559","S 3 i 12000 12561","S 3 f 11943 12562","S 4 b 11942 12128","S 3 b 12564 12563","S 6 e 11943 11942","S 3 l 11942 12565","S 3 h 11943 12566","S 6 i 11943 12567","S 6 o 11965 12568","S 5 h 11943 12569","S 4 s 12000 12570","S 6 o 12000 12571","S 6 o 12000 12572","S 4 s 12017 12573","S 4 g 12017 12000","S 6 t 11961 12574","S 5 b 12575 12000","S 3 d 11942 12576","S 3 m 11961 12577","S 4 m 12579 12578","S 6 r 12017 12580","S 3 h 11943 12581","S 4 t 12000 11943","S 5 e 12493 12582","S 4 z 12584 12583","S 4 h 11965 12585","S 4 c 11942 12586","S 4 n 11943 12587","S 6 o 11942 11961","S 3 b 11961 11942","S 3 p 12589 12588","S 3 l 12000 12590","S 3 d 11943 12591","S 6 a 12104 11943","S 3 r 11961 11942","S 5 f 12593 12592","S 5 t 12000 11943","S 5 l 11965 12594","S 4 f 12596 12595","S 4 m 12000 11943","S 6 r 12000 12167","S 5 v 12000 12597","S 6 a 11942 12598","S 3 r 11942 12599","S 6 e 11943 12000","S 5 l 11961 12600","S 4 k 11961 12601","S 3 s 11961 12602","S 6 n 11942 11961","S 4 l 12604 12603","S 3 c 11943 12605","S 4 l 11920 12606","S 4 s 12608 12607","S 6 l 11943 12609","S 3 n 11961 12610","S 4 p 12612 12611","S 4 s 11943 11965","S 5 l 11943 12613","S 5 s 11965 11943","S 3 m 12000 11943","S 3 r 11943 12614","S 6 a 12567 12615","S 3 g 11943 12000","S 6 # 11965 11943","S 5 d 11943 12616","S 6 i 12000 11943","S 5 l 12000 12617","S 4 b 12000 12618","S 4 s 12000 12619","S 3 s 11957 12620","S 4 n 12622 12621","S 6 l 12624 12623","S 6 # 12017 12625","S 3 c 12017 12626","S 3 l 12628 12627","S 6 e 11942 11920","S 4 h 12630 12629","S 5 s 12632 12631","S 6 e 12634 12633","S 3 l 11942 12635","S 4 g 12637 12636","S 3 d 11942 12391","S 5 z 12524 12638","S 3 h 11943 12639","S 6 # 11943 12640","S 5 s 12642 12641","S 6 r 12000 12643","S 3 d 12000 12644","S 6 n 12646 12645","S 3 p 11957 11942","S 4 s 11961 12647","S 3 d 11943 11942","S 4 l 12649 12648","S 4 b 11942 12017","S 4 g 12017 12650","S 3 b 12017 12104","S 3 g 12652 12651","S 4 b 11943 12000","S 6 o 11943 12653","S 6 e 11942 11943","S 5 t 12654 11943","S 3 r 12507 11943","S 5 z 12655 11943","S 3 b 11943 11961","S 6 i 11943 12656","S 6 e 12658 12657","S 3 g 11961 11943","S 5 m 11943 12659","S 6 # 12000 11943","S 6 y 12000 12660","S 4 l 12661 11943","S 4 s 11943 12652","S 5 t 11943 12662","S 6 r 12000 11943","S 4 l 12000 12663","S 3 l 11961 11942","S 4 v 11961 12664","S 3 j 11942 12665","S 3 j 11942 12666","S 6 s 12017 12667","S 3 t 11943 12000","S 4 n 11943 12000","S 3 c 12669 12668","S 6 r 12671 12670","S 6 i 11942 12507","S 3 d 12628 11943","S 6 a 12672 11943","S 4 b 11942 11943","S 4 m 12674 12673","S 5 c 11943 12675","S 6 o 12000 11943","S 5 j 12000 12676","S 6 s 11942 12677","S 6 y 11961 12678","S 4 s 11942 12679","S 3 d 11942 12680","S 4 n 12017 12681","S 3 p 11943 12682","S 4 m 12683 11943","S 6 a 12684 11943","S 3 l 12000 11943","S 4 n 11943 11942","S 4 t 12686 12685","S 5 p 11943 12687","S 5 t 11943 12688","S 5 s 12596 11943","S 3 l 11942 12360","S 3 r 12690 12689","S 3 d 11942 12691","S 3 t 11961 11942","S 6 d 12017 11942","S 5 z 12693 12692","S 5 s 12000 12694","S 3 g 11943 12695","S 3 j 11943 12696","S 5 s 11943 12697","S 5 b 11943 12000","S 3 c 11943 12698","S 3 t 11942 12699","S 6 l 11961 11942","S 4 d 11942 12700","S 3 i 12000 12701","S 6 i 12702 11943","S 5 v 12000 11943","S 3 b 11943 12703","S 5 n 11943 12704","S 3 c 12000 11943","S 3 v 11943 12705","S 6 r 12707 12706","S 6 s 11942 12708","S 4 k 12000 12709","S 4 d 11943 12710","S 3 m 11943 12000","S 3 b 11943 12711","S 3 g 11943 12712","S 4 d 11942 12713","S 3 l 11942 11961","S 6 c 11942 12714","S 3 l 12716 12715","S 3 n 11961 11943","S 3 g 11943 12717","S 5 g 11943 12718","S 6 l 11942 12719","S 3 t 11942 12720","S 4 m 11943 12721","S 5 n 12000 12722","S 4 g 11943 12723","S 5 s 11943 12724","S 4 b 11942 12725","S 4 b 11942 12726","S 3 r 11943 12727","S 6 a 12729 12728","S 3 d 11943 12730","S 5 k 11943 12731","S 3 d 12000 12246","S 6 n 11942 12732","S 6 a 12734 12733","S 5 w 11943 12735","S 4 n 12000 11943","S 5 g 12737 12736","S 6 o 11943 12703","S 6 a 11942 11961","S 6 s 12590 11943","S 5 t 11943 12738","S 5 t 12739 11943","S 3 f 11943 12740","S 3 t 12000 11943","S 3 n 12000 11943","S 4 t 11943 12445","S 4 p 12741 11943","S 5 p 11943 12742","S 3 r 12000 11943","I 12743 v","S 4 v 12745 12744","P v","P epsilon","I 12746 w","S 3 o 12748 12747","S 3 e 12750 12749","S 5 k 12752 12751","S 3 a 12754 12753","S 5 k 12756 12755","S 6 z 12758 12757","S 6 i 12756 12759","S 4 r 12759 12760","S 4 a 12762 12761","S 6 z 12764 12763","P f","S 4 a 12766 12765","S 5 c 12764 12767","P epsilon","S 5 o 12769 12768","S 5 k 12756 12770","S 5 l 12759 12767","S 4 o 12762 12771","P v","S 6 l 12773 12772","S 5 y 12767 12774","P w","S 3 u 12776 12775","S 4 h 12777 12767","S 4 o 12767 12778","S 4 a 12780 12779","S 4 o 12767 12759","S 5 l 12767 12759","S 1 c 12767 12759","S 5 r 12782 12781","S 1 # 12767 12783","S 6 l 12759 12784","S 4 h 12767 12785","S 4 i 12787 12786","S 5 y 12767 12788","S 4 e 12767 12789","S 3 s 12790 12767","S 4 e 12767 12759","S 6 o 12767 12759","S 4 i 12792 12791","S 4 e 12794 12793","S 6 d 12767 12795","S 1 # 12759 12796","S 5 s 12798 12797","S 6 t 12767 12799","S 4 e 12801 12800","S 6 g 12759 12802","S 4 h 12802 12759","S 6 l 12802 12803","S 6 e 12767 12804","S 6 e 12767 12805","S 3 i 12806 12767","S 6 i 12764 12767","S 1 a 12759 12807","S 5 o 12808 12759","S 1 # 12809 12759","S 1 # 12759 12767","S 5 d 12759 12810","S 1 e 12767 12811","S 6 k 12767 12812","S 1 s 12764 12767","S 6 d 12759 12767","S 1 # 12813 12759","S 6 # 12759 12764","S 5 l 12759 12814","S 5 s 12759 12815","S 6 # 12759 12816","S 6 n 12759 12764","S 5 r 12759 12817","S 5 n 12759 12818","S 1 s 12759 12819","S 5 s 12759 12820","S 6 t 12759 12821","S 5 r 12767 12773","S 5 y 12759 12822","S 6 # 12759 12767","S 6 t 12759 12823","S 5 n 12759 12824","S 5 # 12759 12767","I 12825 x","S 3 u 12827 12826","S 2 0 12829 12828","S 4 # 12831 12830","S 3 e 12832 12830","P z","P k-s","S 2 l 12830 12833","S 4 a 12835 12834","P epsilon","S 4 u 12837 12836","S 2 # 12839 12838","S 4 h 12839 12840","S 2 s 12841 12839","S 2 l 12839 12830","P g-z","S 4 e 12843 12842","P k-sh","S 4 i 12845 12844","S 2 # 12839 12830","S 4 o 12839 12830","S 2 l 12830 12846","S 2 m 12830 12843","I 12847 y","S 4 # 12849 12848","S 2 0 12851 12850","S 3 a 12853 12852","S 3 a 12855 12854","S 5 a 12857 12856","S 3 o 12853 12858","P epsilon","S 3 o 12860 12859","S 4 a 12862 12861","P y","S 4 e 12856 12863","S 3 f 12865 12864","S 3 e 12867 12866","S 4 o 12869 12868","S 4 u 12853 12870","S 5 m 12856 12871","P iy","S 3 e 12873 12872","S 2 i 12875 12874","S 1 0 12877 12876","S 4 e 12879 12878","S 5 m 12856 12853","S 2 t 12856 12853","S 4 o 12853 12880","S 2 b 12853 12881","S 3 u 12875 12882","S 2 l 12863 12883","S 2 f 12863 12875","P ay1","S 4 a 12885 12884","S 3 s 12887 12886","S 1 # 12853 12888","S 2 m 12890 12889","S 5 v 12875 12853","S 2 r 12853 12891","S 2 f 12892 12863","S 2 n 12863 12893","S 1 # 12895 12894","S 1 # 12897 12896","S 5 e 12875 12898","S 5 o 12900 12899","S 2 n 12863 12901","S 5 r 12903 12902","S 1 # 12875 12904","S 2 k 12875 12905","S 3 l 12875 12863","S 2 s 12863 12906","S 5 e 12908 12907","S 2 a 12910 12909","S 3 i 12912 12911","S 3 i 12856 12875","S 4 o 12914 12913","S 4 r 12916 12915","S 4 n 12917 12916","S 5 # 12863 12918","S 5 d 12853 12875","S 2 b 12875 12853","P ay","S 5 n 12853 12919","S 2 v 12920 12863","S 4 n 12922 12921","S 3 r 12863 12923","S 2 o 12925 12924","S 3 n 12863 12916","S 5 n 12926 12856","S 5 # 12853 12856","S 4 u 12856 12927","S 3 k 12856 12928","S 5 e 12875 12916","P ih1","P ah","S 2 l 12863 12853","S 2 p 12853 12875","S 1 a 12863 12929","S 5 n 12931 12930","S 5 a 12904 12932","S 1 p 12934 12933","S 2 e 12936 12935","S 4 m 12916 12917","S 2 e 12856 12937","S 4 a 12939 12938","S 5 n 12875 12940","S 1 o 12863 12941","S 4 k 12943 12942","S 4 i 12944 12937","S 2 a 12946 12945","S 2 g 12916 12947","S 4 m 12917 12863","S 3 s 12875 12948","S 3 g 12917 12916","S 3 n 12856 12863","S 4 e 12875 12949","S 5 n 12904 12875","S 3 m 12875 12856","S 1 l 12863 12853","S 4 l 12951 12950","S 5 # 12952 12916","S 3 f 12875 12953","S 2 e 12917 12954","S 3 r 12952 12916","S 4 l 12956 12955","S 5 e 12875 12957","S 4 r 12959 12958","S 4 e 12961 12960","S 5 # 12917 12962","P ih","S 3 l 12964 12963","S 5 s 12916 12965","S 3 d 12875 12966","S 2 s 12875 12917","S 4 e 12875 12967","S 3 h 12969 12968","S 5 o 12875 12970","S 4 o 12972 12971","S 3 u 12853 12973","S 3 r 12975 12974","S 2 r 12863 12976","S 2 l 12863 12875","S 1 r 12917 12977","S 4 n 12875 12978","S 3 k 12875 12979","S 4 n 12981 12980","S 5 n 12916 12982","S 5 a 12875 12983","S 4 u 12856 12984","S 5 # 12856 12863","S 5 # 12875 12985","S 2 a 12917 12986","S 1 m 12917 12863","S 3 r 12875 12863","S 5 i 12916 12987","S 4 p 12875 12988","S 4 o 12990 12989","S 5 o 12992 12991","S 3 d 12875 12916","S 5 t 12916 12875","S 3 l 12916 12993","S 4 r 12995 12994","S 3 m 12863 12996","S 3 b 12916 12917","S 3 w 12916 12997","S 1 e 12999 12998","S 3 u 12875 13000","S 3 r 12875 12853","S 3 c 13002 13001","S 4 c 12904 12875","S 3 m 12853 13003","S 5 t 13005 13004","S 2 o 12863 12853","S 3 l 13006 12856","S 3 s 12916 13007","S 2 a 12875 13008","S 2 n 12875 12863","S 4 n 12916 13009","S 5 a 13011 13010","S 4 c 12875 13012","S 5 i 12875 12916","S 4 c 13014 13013","S 3 l 12917 12916","S 5 a 12856 12863","S 2 r 12916 13015","S 1 c 12863 13016","S 5 n 12875 13017","S 3 m 12916 13018","S 3 l 12875 13019","S 4 p 12875 12916","S 4 i 12972 13020","S 3 c 13022 13021","S 1 e 12917 12916","S 3 l 12863 13023","S 4 l 12875 13024","S 4 m 12916 13025","S 3 b 12875 13026","S 3 l 13028 13027","S 3 z 12916 13029","S 2 i 12952 12875","S 2 o 12875 13030","S 5 o 12875 13031","S 3 r 12916 13032","S 4 l 12916 13033","S 3 z 13035 13034","S 2 l 13037 13036","S 2 o 13038 12916","S 4 r 12875 13039","S 2 f 12875 13040","S 4 i 12875 13041","S 4 b 12916 12875","S 4 d 13043 13042","S 4 b 12917 12875","S 4 t 13045 13044","S 4 s 12917 12863","S 1 p 12952 12863","S 3 h 12875 12904","S 2 s 13047 13046","S 5 u 12916 13048","S 1 o 12916 13049","S 3 h 12875 12863","S 5 i 12917 13050","S 2 a 12916 12917","S 2 p 12916 13051","S 3 z 12916 12875","S 3 z 12916 13052","S 1 r 12916 13053","S 1 p 13054 12916","S 4 p 12916 13055","S 5 h 12875 13056","S 4 p 12916 13057","S 4 g 12916 13058","S 5 h 12916 13059","S 3 d 12916 13060","S 3 s 12917 13061","S 5 a 12917 12863","S 3 h 12875 13062","S 5 s 12916 13063","S 3 n 13064 12863","S 2 c 12916 13065","S 3 b 12875 13066","S 2 o 12917 12863","S 3 r 12916 12875","S 4 d 12916 13067","S 5 i 12875 13068","S 3 l 12875 13069","S 3 w 12875 12916","I 13070 z","S 3 t 13072 13071","S 4 z 13074 13073","S 4 # 13076 13075","S 3 c 13074 13077","P epsilon","S 4 e 13079 13078","P s","S 3 s 13074 13080","S 4 s 13074 13081","P z","S 3 z 13083 13082","S 4 i 13079 13084","S 3 d 13086 13085","S 4 l 13079 13087","S 4 o 13079 13076","S 4 s 13074 13088","S 4 i 13074 13089","S 4 # 13079 13090","S 4 h 13092 13091","S 4 e 13079 13074","S 4 y 13079 13093","S 3 r 13079 13094","S 3 # 13095 13079","S 4 o 13079 13096","S 4 # 13079 13097","P zh","S 4 e 13079 13098","S 3 l 13099 13079","P t-s","S 4 b 13098 13079"];var Ia=Na;function $a(n,e){for(var a=0;a<e.length;a++){var h=e[a];h.enumerable=h.enumerable||!1,h.configurable=!0,"value"in h&&(h.writable=!0),Object.defineProperty(n,h.key,h);}}var Fa=function(){function n(e){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function");}(this,n),this.cache={},this.RiTa=e,this.lts=void 0;}var e,a;return e=n,(a=[{key:"analyze",value:function(n,e){for(var a=this.RiTa.tokenizer.tokenize(n),h={phones:"",stresses:"",syllables:"",pos:this.RiTa.pos(n,e).join(" "),tokens:a.join(" ")},t=0;t<a.length;t++){var r=this.analyzeWord(a[t],e),i=r.phones,s=r.stresses,l=r.syllables;h.phones+=i,h.stresses+=s,h.syllables+=l;}return h.phones=h.phones.trim(),h.stresses=h.stresses.trim(),h.syllables=h.syllables.trim(),h;}},{key:"computePhones",value:function(n,e){return this.lts||(this.lts=new Ia(this.RiTa)),this.lts.buildPhones(n,e);}},{key:"phonesToStress",value:function(n){if(n){for(var e="",a=n.split(" "),h=0;h<a.length;h++)a[h].length&&(e+=a[h].includes("1")?"1":"0",h<a.length-1&&(e+="/"));return e;}}},{key:"analyzeWord",value:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=this.RiTa,h=a.CACHING&&this.cache[n];if(void 0===h){var t=!1,r="/",i="-",s=this.RiTa.lexicon(),o=s.rawPhones(n,{noLts:!0});if(!o&&n.endsWith("s")){var b=a.singularize(n);(o=s.rawPhones(b,{noLts:!0}))&&(o+="-z");}var d=a.SILENT||a.SILENCE_LTS||e&&e.silent;if(!o){var y=this.computePhones(n,e);y&&y.length?(!d&&s.size()&&n.match(Ba)&&console.log("[RiTa] Used LTS-rules for '"+n+"'"),o=l.syllablesFromPhones(y)):(o=n,t=!0);}var u=o.replace(/1/g,"").replace(/ /g,i)+" ",c="dh "===u?"dh-ah ":u,p=o.replace(/ /g,r).replace(/1/g,"")+" ",j="dh "===p?"dh-ah ":p,v=t?n:this.phonesToStress(o);v.endsWith(" ")||(v+=" "),h={phones:c,stresses:v,syllables:j},a.CACHING&&(this.cache[n]=h);}return h;}}])&&$a(e.prototype,a),n;}(),Ba=/[a-zA-Z]+/,Ma=Fa;function Ua(n,e){for(var a=0;a<e.length;a++){var h=e[a];h.enumerable=h.enumerable||!1,h.configurable=!0,"value"in h&&(h.writable=!0),Object.defineProperty(n,h.key,h);}}var Ha=function(){function n(e){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function");}(this,n),this.RiTa=e,this.splitter=/(\S.+?[.!?]["\u201D]?)(?=\s+|$)/g;}var e,a;return e=n,(a=[{key:"tokens",value:function(n){var e=this,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},h=this.tokenize(n,a),t={};h.forEach(function(n){a.caseSensitive||(n=n.toLowerCase()),(a.includePunct||th.test(n))&&(t[n]=1);});var r=Object.keys(t);return a.ignoreStopWords&&(r=r.filter(function(n){return !e.RiTa.isStopWord(n);})),a.sort?r.sort():r;}},{key:"sentences",value:function(n,e){var a=this;if(!n||!n.length)return [n];var h=n.replace(sh," "),t=new RegExp("___","g"),r=e||this.splitter,i=function(n){for(var e=a.RiTa.ABRV,h=0;h<e.length;h++)for(var t=e[h],r=n.indexOf(t);r>-1;)r=(n=n.replace(t,t.replace(".","___"))).indexOf(t);return n;}(h).match(r);return i&&i.length?function(n){for(var e=0;e<n.length;e++)n[e]=n[e].replace(t,".");return n;}(i):[n];}},{key:"tokenize",value:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if("string"!=typeof n)return [];if(e.regex)return n.split(regex);for(var a=this.pushTags(n.trim()),h=a.tags,t=a.text,r=0;r<bh.length;r+=2)t=t.replace(bh[r],bh[r+1]);if(this.RiTa.SPLIT_CONTRACTIONS||e.splitContractions)for(var i=0;i<dh.length;i+=2)t=t.replace(dh[i],dh[i+1]);return this.popTags(t.trim().split(rh),h);}},{key:"untokenize",value:function(n,e){e=e||" ";for(var a=!1,h=!1,t=!1,r=(n=this.preProcessTags(n)).length&&eh.test(n[0]),i=n[0]||"",s=1;s<n.length;s++)if(n[s]){var l=n[s],o=n[s-1],b=","===l,d=","===o,y=oh.test(l)||Va[2].test(l),u=Za.test(l),c=nh.test(l),p=oh.test(o),j=Ja.test(o)||Va[1].test(o),v=Za.test(o),S=nh.test(o),m="s"===o[o.length-1]&&"is"!=o&&"Is"!=o&&"IS"!=o,g=lh.test(o),k=ah.test(l),f=s!=n.length-1&&("s"===n[s+1]||"S"===n[s+1]),w=eh.test(o),z=s==n.length-1,x=eh.test(l);"."===o&&k||a?(a=!1,i+=l):("."===l&&g?a=!0:u?i+=e:S?y||u||(i+=e):x?r?(h=!0,r=!1):ih.test(l)&&m||ih.test(l)&&f||(r=!0,h=!1,i+=e):h&&!y?(i+=e,h=!1):w&&b?t=!0:t&&d?(i+=e,t=!1):(y||w||j||v||c)&&(z||!y||!p||j||w||v||c)||(i+=e),i+=l,y&&!p&&!r&&hh.test(l)&&m&&(i+=e));}return i.trim();}},{key:"pushTags",value:function(n){for(var e=[],a=0;yh.test(n);)e.push(n.match(yh)[0]),n=n.replace(yh," _"+Qa+a++ +"_ ");return {tags:e,text:n};}},{key:"popTags",value:function(n,e){for(var a=0;a<n.length;a++)uh.test(n[a])&&(n[a]=e.shift()),n[a].includes("_")&&(n[a]=n[a].replace(Xa,"$1 $2"));return n;}},{key:"preProcessTags",value:function(n){for(var e=[],a=0;a<n.length;){var h=n[a];if(Ga.test(h)){for(var t=[n[a]],r=a+1;r<n.length&&(t.push(n[r]),!Ga.test(n[r]))&&!Wa.test(n[r]);)r++;if(Ga.test(t[t.length-1]))e=e.concat(t.slice(0,t.length-1)),a=r;else if(Wa.test(t[t.length-1])){if(yh.test(t.join(""))){var i=this.tagSubarrayToString(t);e.push(i),a=r+1;}else e=e.concat(t),a=r+1;}else e=e.concat(t),a=r+1;}else e.push(h),a++;}return e;}},{key:"tagSubarrayToString",value:function(n){if(!Ga.test(n[0])||!Wa.test(n[n.length-1]))throw Error(n+"is not a tag");var e="",a="";e+=n[0].trim(),a=n[n.length-1].trim()+a;for(var h=1;h<n.length-1&&Ya.test(n[h]);)e+=n[h].trim(),h++;var t=h;for(h=n.length-2;h>t&&Ka.test(n[h]);)a=n[h].trim()+a,h--;var r=h;return e+this.untokenize(n.slice(t,r+1)).trim()+a;}}])&&Ua(e.prototype,a),n;}(),Va=[/^ *<[a-z][a-z0-9='"#;:&\s\-\+\/\.\?]*\/> *$/i,/^ *<([a-z][a-z0-9='"#;:&\s\-\+\/\.\?]*[a-z0-9='"#;:&\s\-\+\.\?]|[a-z])> *$/i,/^ *<\/[a-z][a-z0-9='"#;:&\s\-\+\/\.\?]*> *$/i,/^ *<!DOCTYPE[^>]*> *$/i,/^ *<!--[^->]*--> *$/i],Ga=/^ *< *$/,Wa=/^ *> *$/,Ya=/^ *[!\-\/] *$/,Ka=/^ *[\-\/] *$/,Ja=/^[\^\*\$\/\u2044#\-@\u00b0]+$/,Qa="TAG",Xa=/([a-zA-z]|[\.\,])_([a-zA-Z])/g,Za=/^[\[\(\{\u27e8]+$/,nh=/^[\)\]\}\u27e9]+$/,eh=/^[""\u201c\u201d\u2019\u2018`''\u00ab\u00bb]+$/,ah=/^(com|org|edu|net|xyz|gov|int|eu|hk|tw|cn|de|ch|fr)$/,hh=/^[\u2019\u2018`']+$/,th=/^[A-Za-z\u2019']+$/,rh=/\s+/,ih=/^[\u2019']+$/,sh=/(\r?\n)+/g,lh=/^(www[0-9]?|WWW[0-9]?)$/,oh=/^[,\.\;\:\?\!\)""\u201c\u201d\u2019\u2018`'%\u2026\u2103\^\*\u00b0\/\u2044\-@]+$/,bh=[/([Ee])[.]([Gg])[.]/g,"_$1$2_",/([Ii])[.]([Ee])[.]/g,"_$1$2_",/([Aa])[.]([Mm])[.]/g,"_$1$2_",/([Pp])[.]([Mm])[.]/g,"_$1$2_",/(Cap)[\.]/g,"_Cap_",/([Cc])[\.]/g,"_$1_",/([Ee][Tt])[\s]([Aa][Ll])[\.]/,"_$1zzz$2_",/(etc|ETC)[\.]/g,"_$1_",/([Pp])[\.]([Ss])[\.]/g,"_$1$2dot_",/([Pp])[\.]([Ss])/g,"_$1$2_",/([Pp])([Hh])[\.]([Dd])/g,"_$1$2$3_",/([Rr])[\.]([Ii])[\.]([Pp])/g,"_$1$2$3_",/([Vv])([Ss]?)[\.]/g,"_$1$2_",/([Mm])([Rr]|[Ss]|[Xx])[\.]/g,"_$1$2_",/([Dd])([Rr])[\.]/g,"_$1$2_",/([Pp])([Ff])[\.]/g,"_$1$2_",/([Ii])([Nn])([Dd]|[Cc])[\.]/g,"_$1$2$3_",/([Cc])([Oo])[\.][\,][\s]([Ll])([Tt])([Dd])[\.]/g,"_$1$2dcs$3$4$5_",/([Cc])([Oo])[\.][\s]([Ll])([Tt])([Dd])[\.]/g,"_$1$2ds$3$4$5_",/([Cc])([Oo])[\.][\,]([Ll])([Tt])([Dd])[\.]/g,"_$1$2dc$3$4$5_",/([Cc])([Oo])([Rr]?)([Pp]?)[\.]/g,"_$1$2$3$4_",/([Ll])([Tt])([Dd])[\.]/g,"_$1$2$3_",/(prof|Prof|PROF)[\.]/g,"_$1_",/\.\.\.\s/g,"_elipsisDDD_ ",/([\?!\"\u201C\.,;:@#$%&])/g," $1 ",/\u2026/g," \u2026 ",/\s+/g," ",/,([^0-9])/g," , $1",/([^.])([.])([\])}>\"'\u2019]*)\s*$/g,"$1 $2$3 ",/([\[\](){}<>\u27e8\u27e9])/g," $1 ",/--/g," -- ",/$/g," ",/^/g," ",/([^'])' | '/g,"$1 ' ",/ \u2018/g," \u2018 ",/'([SMD]) /g," '$1 ",/ ([A-Z]) \./g," $1. ",/^\s+/g,"",/\^/g," ^ ",/\u00b0/g," \xb0 ",/_elipsisDDD_/g," ... ",/_([Ee])([Gg])_/g,"$1.$2.",/_([Ii])([Ee])_/g,"$1.$2.",/_([Aa])([Mm])_/g,"$1.$2.",/_([Pp])([Mm])_/g,"$1.$2.",/_Cap_/g,"Cap.",/_([Cc])_/g,"$1.",/_([Ee][Tt])zzz([Aa][Ll])_/,"$1_$2.",/_(etc|ETC)_/g,"$1.",/_([Pp])([Ss])dot_/g,"$1.$2.",/_([Pp])([Ss])_/g,"$1.$2",/_([Pp])([Hh])([Dd])_/g,"$1$2.$3",/_([Rr])([Ii])([Pp])_/g,"$1.$2.$3",/_([Vv])([Ss]?)_/g,"$1$2.",/_([Mm])([Rr]|[Ss]|[Xx])_/g,"$1$2.",/_([Dd])([Rr])_/g,"$1$2.",/_([Pp])([Ff])_/g,"$1$2.",/_([Ii])([Nn])([Dd]|[Cc])_/g,"$1$2$3.",/_([Cc])([Oo])([Rr]?)([Pp]?)_/g,"$1$2$3$4.",/_([Cc])([Oo])dc([Ll])([Tt])([Dd])_/g,"$1$2.,$3$4$5.",/_([Ll])([Tt])([Dd])_/g,"$1$2$3.",/_([Cc])([Oo])dcs([Ll])([Tt])([Dd])_/g,"$1$2.,_$3$4$5.",/_([Cc])([Oo])ds([Ll])([Tt])([Dd])_/g,"$1$2._$3$4$5.",/_(prof|PROF|Prof)_/g,"$1."],dh=[/([Cc])an['\u2019]t/g,"$1an not",/([Dd])idn['\u2019]t/g,"$1id not",/([CcWw])ouldn['\u2019]t/g,"$1ould not",/([Ss])houldn['\u2019]t/g,"$1hould not",/([Ii])t['\u2019]s/g,"$1t is",/([tT]hat)['\u2019]s/g,"$1 is",/(she|he|you|they|i)['\u2019]d/gi,"$1 would",/(she|he|you|they|i)['\u2019]ll/gi,"$1 will",/n['\u2019]t /g," not ",/['\u2019]ve /g," have ",/['\u2019]re /g," are "],yh=/(<\/?[a-z][a-z0-9='"#;:&\s\-\+\/\.\?]*\/?>|<!DOCTYPE[^>]*>|<!--[^>-]*-->)/i,uh=new RegExp("_".concat(Qa,"[0-9]+_")),ch=Ha;function ph(n){return (ph="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n;}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n;})(n);}function jh(n,e){for(var a=0;a<e.length;a++){var h=e[a];h.enumerable=h.enumerable||!1,h.configurable=!0,"value"in h&&(h.writable=!0),Object.defineProperty(n,h.key,h);}}var vh=function(){function n(e){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function");}(this,n),this.RiTa=e;}var e,a;return e=n,(a=[{key:"concordance",value:function(n,e){this.words=Array.isArray(n)?n:this.RiTa.tokenize(n),this.ignoreCase=e&&e.ignoreCase||!1,this.ignoreStopWords=e&&e.ignoreStopWords||!1,this.ignorePunctuation=e&&e.ignorePunctuation||!1,this.wordsToIgnore=e&&e.wordsToIgnore||[],this._buildModel();var a={};for(var h in this.model)a[h]=this.model[h].indexes.length;return a;}},{key:"kwic",value:function(n,e){var a=6;if("object"===ph(e)?(a=e.numWords,e.text&&e.text.length&&this.concordance(e.text,e),e.words&&e.words.length&&this.concordance(e.words,e)):"number"==typeof e&&(a=e),"number"!=typeof a&&(a=6),!this.model)throw Error("Call concordance() first");var h=[],t=this._lookup(n);if(t)for(var r=t.indexes,i=0;i<r.length;i++){var s=this.words.slice(Math.max(0,r[i]-a),Math.min(this.words.length,r[i]+a+1));(i<1||r[i]-r[i-1]>a)&&h.push(this.RiTa.untokenize(s));}return h;}},{key:"count",value:function(n){var e=this._lookup(n);return null==e?0:e.indexes.length;}},{key:"_buildModel",value:function(){if(!this.words||0==this.words.length)throw Error("No text in model");this.model={};for(var n=0;n<this.words.length;n++){var e=this.words[n];if(!this._isIgnorable(e)){var a=this._lookup(e);a&&"object"===ph(a)||(a={word:e,key:this._compareKey(e),indexes:[]},this.model[a.key]=a),a.indexes.push(n);}}}},{key:"_isIgnorable",value:function(n){if(this.ignorePunctuation&&this.RiTa.isPunct(n)||this.ignoreStopWords&&this.RiTa.isStopWord(n))return !0;for(var e=0;e<this.wordsToIgnore.length;e++){var a=this.wordsToIgnore[e];if(n===a||this.ignoreCase&&n.toUpperCase()===a.toUpperCase())return !0;}}},{key:"_compareKey",value:function(n){return this.ignoreCase?n.toLowerCase():n;}},{key:"_lookup",value:function(n){var e=this._compareKey(n);return this.model[e];}}])&&jh(e.prototype,a),n;}();function Sh(n,e){for(var a=0;a<e.length;a++){var h=e[a];h.enumerable=h.enumerable||!1,h.configurable=!0,"value"in h&&(h.writable=!0),Object.defineProperty(n,h.key,h);}}var mh=function(){function n(e){var a,h,t;!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function");}(this,n),t=function(n){if(this.RiTa.hasWord(n)&&this.RiTa.isVerb(n))return n;for(var e=n;e.length>1;){var a=this.RiTa.search(new RegExp("^"+e),{pos:"v"});if(!a||a.length<1)e=e.slice(0,-1);else {a.sort(function(n,e){return n.length-e.length;});for(var h=0;h<a.length;h++){if(n===a[h])return n;if(this.RiTa.stem(a[h])===n)return a[h];}e=e.slice(0,-1);}}return n;},(h="_handleStem")in(a=this)?Object.defineProperty(a,h,{value:t,enumerable:!0,configurable:!0,writable:!0}):a[h]=t,this.RiTa=e,this._reset();}var e,a;return e=n,(a=[{key:"conjugate",value:function(n,e){if(!n||!n.length)throw Error("No verb");if(!e)return n;n=n.toLowerCase(),e=this._parseArgs(e);var a,h,t=Nh.includes(n)?"be":this._handleStem(n),r=[],i=this.RiTa;return this.form===i.INFINITIVE&&(a="to"),this.tense===i.FUTURE&&(a="will"),this.passive&&(r.push(this.pastPart(t)),t="be"),this.progressive&&(r.push(this.presentPart(t)),t="be"),this.perfect&&(r.push(this.pastPart(t)),t="have"),a&&(r.push(t),t=null),t&&(this.form===i.GERUND?r.push(this.presentPart(t)):this.interrogative&&"be"!=t&&r.length<1?r.push(t):(h=this._verbForm(t,this.tense,this.person,this.number),r.push(h))),a&&r.push(a),r.reduce(function(n,e){return e+" "+n;}).trim();}},{key:"presentPart",value:function(n){return "be"===n?"being":this._checkRules(Dh,n);}},{key:"pastPart",value:function(n){return this._checkRules(Ch,n);}},{key:"toString",value:function(){return "  ---------------------\n  Passive = "+this.passive+"\n  Perfect = "+this.perfect+"\n  Progressive = "+this.progressive+"\n  ---------------------\n  Number = "+this.number+"\n  Person = "+this.person+"\n  Tense = "+this.tense+"\n  ---------------------\n";}},{key:"_reset",value:function(){this.perfect=this.progressive=this.passive=this.interrogative=!1,this.tense=this.RiTa.PRESENT,this.person=this.RiTa.FIRST,this.number=this.RiTa.SINGULAR,this.form=this.RiTa.NORMAL;}},{key:"_parseArgs",value:function(n){this._reset();var e=this.RiTa;if("string"==typeof n){if(!/^[123][SP](Pr|Pa|Fu)$/.test(n))throw Error("Invalid args: "+n);var a={};a.person=parseInt(n[0]),a.number="S"===n[1]?e.SINGULAR:e.PLURAL;var h=n.substr(2);"Pr"===h&&(a.tense=e.PRESENT),"Fu"===h&&(a.tense=e.FUTURE),"Pa"===h&&(a.tense=e.PAST),n=a;}n.number&&(this.number=n.number),n.person&&(this.person=n.person),n.tense&&(this.tense=n.tense),n.form&&(this.form=n.form),n.passive&&(this.passive=n.passive),n.progressive&&(this.progressive=n.progressive),n.interrogative&&(this.interrogative=n.interrogative),n.perfect&&(this.perfect=n.perfect);}},{key:"_checkRules",value:function(n,e){if(!e||!e.length)return "";e=e.trim(),n.name;var a=n.rules,h=n.defaultRule;if(a||console.error("no rule: "+n.name+" of "+e),fh.includes(e))return e;for(var t=0;t<a.length;t++)if(a[t].applies(e)){var r=a[t].fire(e);return r;}return n.doubling&&_h.includes(e)&&(e=this._doubleFinalConsonant(e)),h.fire(e);}},{key:"_doubleFinalConsonant",value:function(n){return n+n.charAt(n.length-1);}},{key:"_pastTense",value:function(n,e,a){var h=this.RiTa;if("be"===n.toLowerCase())switch(a){case h.SINGULAR:switch(e){case h.FIRST:break;case h.THIRD:return "was";case h.SECOND:return "were";}break;case h.PLURAL:return "were";}return this._checkRules(Lh,n);}},{key:"_presentTense",value:function(n,e,a){e=e||this.person,a=a||this.number;var h=this.RiTa;if(e===h.THIRD&&a===h.SINGULAR)return this._checkRules(Rh,n);if("be"===n){if(a!==h.SINGULAR)return "are";switch(e){case h.FIRST:return "am";case h.SECOND:return "are";case h.THIRD:return "is";}}return n;}},{key:"_verbForm",value:function(n,e,a,h){switch(e){case this.RiTa.PRESENT:return this._presentTense(n,a,h);case this.RiTa.PAST:return this._pastTense(n,a,h);}return n;}}])&&Sh(e.prototype,a),n;}(),gh=l.RE,kh="[bcdfghjklmnpqrstvwxyz]",fh=["shall","would","may","might","ought","should"],wh="((be|with|pre|un|over|re|mis|under|out|up|fore|for|counter|co|sub)(-?))",zh="^((\\w+)(-\\w+)*)(\\s((\\w+)(-\\w+)*))*$",xh=[gh(kh+"ie$",2,"ying",1),gh("[^ie]e$",1,"ing",1),gh("^trek$",1,"cking"),gh("^bring$",0,"ing"),gh("^be$",0,"ing"),gh("^age$",1,"ing"),gh("(ibe)$",1,"ing",0)],Th=[gh(kh+"y$",1,"ied",1),gh("^"+wh+"?(bring)$",3,"ought"),gh("^"+wh+"?(take|rise|strew|blow|draw|drive|know|give|arise|gnaw|grave|grow|hew|know|mow|see|sew|throw|prove|saw|quartersaw|partake|sake|shake|shew|show|shrive|sightsee|strew|strive)$",0,"n"),gh("^"+wh+"?[gd]o$",0,"ne",1),gh("^(beat|eat|be|fall)$",0,"en"),gh("^(have)$",2,"d"),gh("^"+wh+"?bid$",0,"den"),gh("^"+wh+"?[lps]ay$",1,"id",1),gh("^behave$",0,"d"),gh("^"+wh+"?have$",2,"d",1),gh("(sink|slink|drink|shrink|stink)$",3,"unk"),gh("(([sfc][twlp]?r?|w?r)ing|hang)$",3,"ung"),gh("^"+wh+"?(shear|swear|bear|wear|tear)$",3,"orn"),gh("^"+wh+"?(bend|spend|send|lend)$",1,"t"),gh("^"+wh+"?(weep|sleep|sweep|creep|keep$)$",2,"pt"),gh("^"+wh+"?(sell|tell)$",3,"old"),gh("^(outfight|beseech)$",4,"ought"),gh("^bethink$",3,"ought"),gh("^buy$",2,"ought"),gh("^aby$",1,"ought"),gh("^tarmac",0,"ked"),gh("^abide$",3,"ode"),gh("^"+wh+"?(speak|(a?)wake|break)$",3,"oken"),gh("^backbite$",1,"ten"),gh("^backslide$",1,"den"),gh("^become$",3,"ame"),gh("^begird$",3,"irt"),gh("^outlie$",2,"ay"),gh("^rebind$",3,"ound"),gh("^relay$",2,"aid"),gh("^shit$",3,"hat"),gh("^bereave$",4,"eft"),gh("^foreswear$",3,"ore"),gh("^overfly$",1,"own"),gh("^beget$",2,"otten"),gh("^begin$",3,"gun"),gh("^bestride$",1,"den"),gh("^bite$",1,"ten"),gh("^bleed$",4,"led"),gh("^bog-down$",5,"ged-down"),gh("^bind$",3,"ound"),gh("^(.*)feed$",4,"fed"),gh("^breed$",4,"red"),gh("^brei",0,"d"),gh("^bring$",3,"ought"),gh("^build$",1,"t"),gh("^come"),gh("^catch$",3,"ught"),gh("^chivy$",1,"vied"),gh("^choose$",3,"sen"),gh("^cleave$",4,"oven"),gh("^crossbreed$",4,"red"),gh("^deal",0,"t"),gh("^dow$",1,"ught"),gh("^dream",0,"t"),gh("^dig$",3,"dug"),gh("^dwell$",2,"lt"),gh("^enwind$",3,"ound"),gh("^feel$",3,"elt"),gh("^flee$",2,"ed"),gh("^floodlight$",5,"lit"),gh("^fly$",1,"own"),gh("^forbear$",3,"orne"),gh("^forerun$",3,"ran"),gh("^forget$",2,"otten"),gh("^fight$",4,"ought"),gh("^find$",3,"ound"),gh("^freeze$",4,"ozen"),gh("^gainsay$",2,"aid"),gh("^gin$",3,"gan"),gh("^gen-up$",3,"ned-up"),gh("^ghostwrite$",1,"ten"),gh("^get$",2,"otten"),gh("^grind$",3,"ound"),gh("^hacksaw",0,"n"),gh("^hear",0,"d"),gh("^hold$",3,"eld"),gh("^hide$",1,"den"),gh("^honey$",2,"ied"),gh("^inbreed$",4,"red"),gh("^indwell$",3,"elt"),gh("^interbreed$",4,"red"),gh("^interweave$",4,"oven"),gh("^inweave$",4,"oven"),gh("^ken$",2,"ent"),gh("^kneel$",3,"elt"),gh("^lie$",2,"ain"),gh("^leap$",0,"t"),gh("^learn$",0,"t"),gh("^lead$",4,"led"),gh("^leave$",4,"eft"),gh("^light$",5,"lit"),gh("^lose$",3,"ost"),gh("^make$",3,"ade"),gh("^mean",0,"t"),gh("^meet$",4,"met"),gh("^misbecome$",3,"ame"),gh("^misdeal$",2,"alt"),gh("^mishear$",1,"d"),gh("^mislead$",4,"led"),gh("^misunderstand$",3,"ood"),gh("^outbreed$",4,"red"),gh("^outrun$",3,"ran"),gh("^outride$",1,"den"),gh("^outshine$",3,"one"),gh("^outshoot$",4,"hot"),gh("^outstand$",3,"ood"),gh("^outthink$",3,"ought"),gh("^outgo$",2,"went"),gh("^overbear$",3,"orne"),gh("^overbuild$",3,"ilt"),gh("^overcome$",3,"ame"),gh("^overfly$",2,"lew"),gh("^overhear$",2,"ard"),gh("^overlie$",2,"ain"),gh("^overrun$",3,"ran"),gh("^override$",1,"den"),gh("^overshoot$",4,"hot"),gh("^overwind$",3,"ound"),gh("^overwrite$",1,"ten"),gh("^plead$",2,"d"),gh("^rebuild$",3,"ilt"),gh("^red$",3,"red"),gh("^redo$",1,"one"),gh("^remake$",3,"ade"),gh("^resit$",3,"sat"),gh("^rethink$",3,"ought"),gh("^rewind$",3,"ound"),gh("^rewrite$",1,"ten"),gh("^ride$",1,"den"),gh("^reeve$",4,"ove"),gh("^sit$",3,"sat"),gh("^shoe$",3,"hod"),gh("^shine$",3,"one"),gh("^shoot$",4,"hot"),gh("^ski$",1,"i'd"),gh("^slide$",1,"den"),gh("^smite$",1,"ten"),gh("^seek$",3,"ought"),gh("^spit$",3,"pat"),gh("^speed$",4,"ped"),gh("^spellbind$",3,"ound"),gh("^spoil$",2,"ilt"),gh("^spotlight$",5,"lit"),gh("^spin$",3,"pun"),gh("^steal$",3,"olen"),gh("^stand$",3,"ood"),gh("^stave$",3,"ove"),gh("^stride$",1,"den"),gh("^strike$",3,"uck"),gh("^stick$",3,"uck"),gh("^swell$",3,"ollen"),gh("^swim$",3,"wum"),gh("^teach$",4,"aught"),gh("^think$",3,"ought"),gh("^tread$",3,"odden"),gh("^typewrite$",1,"ten"),gh("^unbind$",3,"ound"),gh("^underbuy$",2,"ought"),gh("^undergird$",3,"irt"),gh("^undergo$",1,"one"),gh("^underlie$",2,"ain"),gh("^undershoot$",4,"hot"),gh("^understand$",3,"ood"),gh("^unfreeze$",4,"ozen"),gh("^unlearn",0,"t"),gh("^unmake$",3,"ade"),gh("^unreeve$",4,"ove"),gh("^unstick$",3,"uck"),gh("^unteach$",4,"aught"),gh("^unthink$",3,"ought"),gh("^untread$",3,"odden"),gh("^unwind$",3,"ound"),gh("^upbuild$",1,"t"),gh("^uphold$",3,"eld"),gh("^upheave$",4,"ove"),gh("^waylay$",2,"ain"),gh("^whipsaw$",2,"awn"),gh("^withhold$",3,"eld"),gh("^withstand$",3,"ood"),gh("^win$",3,"won"),gh("^wind$",3,"ound"),gh("^weave$",4,"oven"),gh("^write$",1,"ten"),gh("^trek$",1,"cked"),gh("^ko$",1,"o'd"),gh("^win$",2,"on"),gh("e$",0,"d",1),gh("^"+wh+"?(cast|thrust|typeset|cut|bid|upset|wet|bet|cut|hit|hurt|inset|let|cost|burst|beat|beset|set|upset|hit|offset|put|quit|wed|typeset|wed|spread|split|slit|read|run|rerun|shut|shed)$",0)],Eh=[gh("^(reduce)$",0,"d"),gh("^"+wh+"?[pls]ay$",1,"id",1),gh(kh+"y$",1,"ied",1),gh("^(fling|cling|hang)$",3,"ung"),gh("(([sfc][twlp]?r?|w?r)ing)$",3,"ang",1),gh("^"+wh+"?(bend|spend|send|lend|spend)$",1,"t"),gh("^"+wh+"?lie$",2,"ay"),gh("^"+wh+"?(weep|sleep|sweep|creep|keep)$",2,"pt"),gh("^"+wh+"?(sell|tell)$",3,"old"),gh("^"+wh+"?do$",1,"id"),gh("^"+wh+"?dig$",2,"ug"),gh("^behave$",0,"d"),gh("^(have)$",2,"d"),gh("(sink|drink)$",3,"ank"),gh("^swing$",3,"ung"),gh("^be$",2,"was"),gh("^outfight$",4,"ought"),gh("^tarmac",0,"ked"),gh("^abide$",3,"ode"),gh("^aby$",1,"ought"),gh("^become$",3,"ame"),gh("^begird$",3,"irt"),gh("^outlie$",2,"ay"),gh("^rebind$",3,"ound"),gh("^shit$",3,"hat"),gh("^bereave$",4,"eft"),gh("^foreswear$",3,"ore"),gh("^bename$",3,"empt"),gh("^beseech$",4,"ought"),gh("^bethink$",3,"ought"),gh("^bleed$",4,"led"),gh("^bog-down$",5,"ged-down"),gh("^buy$",2,"ought"),gh("^bind$",3,"ound"),gh("^(.*)feed$",4,"fed"),gh("^breed$",4,"red"),gh("^brei$",2,"eid"),gh("^bring$",3,"ought"),gh("^build$",3,"ilt"),gh("^come$",3,"ame"),gh("^catch$",3,"ught"),gh("^clothe$",5,"lad"),gh("^crossbreed$",4,"red"),gh("^deal$",2,"alt"),gh("^dow$",1,"ught"),gh("^dream$",2,"amt"),gh("^dwell$",3,"elt"),gh("^enwind$",3,"ound"),gh("^feel$",3,"elt"),gh("^flee$",3,"led"),gh("^floodlight$",5,"lit"),gh("^arise$",3,"ose"),gh("^eat$",3,"ate"),gh("^backbite$",4,"bit"),gh("^backslide$",4,"lid"),gh("^befall$",3,"ell"),gh("^begin$",3,"gan"),gh("^beget$",3,"got"),gh("^behold$",3,"eld"),gh("^bespeak$",3,"oke"),gh("^bestride$",3,"ode"),gh("^betake$",3,"ook"),gh("^bite$",4,"bit"),gh("^blow$",3,"lew"),gh("^bear$",3,"ore"),gh("^break$",3,"oke"),gh("^choose$",4,"ose"),gh("^cleave$",4,"ove"),gh("^countersink$",3,"ank"),gh("^drink$",3,"ank"),gh("^draw$",3,"rew"),gh("^drive$",3,"ove"),gh("^fall$",3,"ell"),gh("^fly$",2,"lew"),gh("^flyblow$",3,"lew"),gh("^forbid$",2,"ade"),gh("^forbear$",3,"ore"),gh("^foreknow$",3,"new"),gh("^foresee$",3,"saw"),gh("^forespeak$",3,"oke"),gh("^forego$",2,"went"),gh("^forgive$",3,"ave"),gh("^forget$",3,"got"),gh("^forsake$",3,"ook"),gh("^forspeak$",3,"oke"),gh("^forswear$",3,"ore"),gh("^forgo$",2,"went"),gh("^fight$",4,"ought"),gh("^find$",3,"ound"),gh("^freeze$",4,"oze"),gh("^give$",3,"ave"),gh("^geld$",3,"elt"),gh("^gen-up$",3,"ned-up"),gh("^ghostwrite$",3,"ote"),gh("^get$",3,"got"),gh("^grow$",3,"rew"),gh("^grind$",3,"ound"),gh("^hear$",2,"ard"),gh("^hold$",3,"eld"),gh("^hide$",4,"hid"),gh("^honey$",2,"ied"),gh("^inbreed$",4,"red"),gh("^indwell$",3,"elt"),gh("^interbreed$",4,"red"),gh("^interweave$",4,"ove"),gh("^inweave$",4,"ove"),gh("^ken$",2,"ent"),gh("^kneel$",3,"elt"),gh("^^know$$",3,"new"),gh("^leap$",2,"apt"),gh("^learn$",2,"rnt"),gh("^lead$",4,"led"),gh("^leave$",4,"eft"),gh("^light$",5,"lit"),gh("^lose$",3,"ost"),gh("^make$",3,"ade"),gh("^mean$",2,"ant"),gh("^meet$",4,"met"),gh("^misbecome$",3,"ame"),gh("^misdeal$",2,"alt"),gh("^misgive$",3,"ave"),gh("^mishear$",2,"ard"),gh("^mislead$",4,"led"),gh("^mistake$",3,"ook"),gh("^misunderstand$",3,"ood"),gh("^outbreed$",4,"red"),gh("^outgrow$",3,"rew"),gh("^outride$",3,"ode"),gh("^outshine$",3,"one"),gh("^outshoot$",4,"hot"),gh("^outstand$",3,"ood"),gh("^outthink$",3,"ought"),gh("^outgo$",2,"went"),gh("^outwear$",3,"ore"),gh("^overblow$",3,"lew"),gh("^overbear$",3,"ore"),gh("^overbuild$",3,"ilt"),gh("^overcome$",3,"ame"),gh("^overdraw$",3,"rew"),gh("^overdrive$",3,"ove"),gh("^overfly$",2,"lew"),gh("^overgrow$",3,"rew"),gh("^overhear$",2,"ard"),gh("^overpass$",3,"ast"),gh("^override$",3,"ode"),gh("^oversee$",3,"saw"),gh("^overshoot$",4,"hot"),gh("^overthrow$",3,"rew"),gh("^overtake$",3,"ook"),gh("^overwind$",3,"ound"),gh("^overwrite$",3,"ote"),gh("^partake$",3,"ook"),gh("^"+wh+"?run$",2,"an"),gh("^ring$",3,"ang"),gh("^rebuild$",3,"ilt"),gh("^red"),gh("^reave$",4,"eft"),gh("^remake$",3,"ade"),gh("^resit$",3,"sat"),gh("^rethink$",3,"ought"),gh("^retake$",3,"ook"),gh("^rewind$",3,"ound"),gh("^rewrite$",3,"ote"),gh("^ride$",3,"ode"),gh("^rise$",3,"ose"),gh("^reeve$",4,"ove"),gh("^sing$",3,"ang"),gh("^sink$",3,"ank"),gh("^sit$",3,"sat"),gh("^see$",3,"saw"),gh("^shoe$",3,"hod"),gh("^shine$",3,"one"),gh("^shake$",3,"ook"),gh("^shoot$",4,"hot"),gh("^shrink$",3,"ank"),gh("^shrive$",3,"ove"),gh("^sightsee$",3,"saw"),gh("^ski$",1,"i'd"),gh("^skydive$",3,"ove"),gh("^slay$",3,"lew"),gh("^slide$",4,"lid"),gh("^slink$",3,"unk"),gh("^smite$",4,"mit"),gh("^seek$",3,"ought"),gh("^spit$",3,"pat"),gh("^speed$",4,"ped"),gh("^spellbind$",3,"ound"),gh("^spoil$",2,"ilt"),gh("^speak$",3,"oke"),gh("^spotlight$",5,"lit"),gh("^spring$",3,"ang"),gh("^spin$",3,"pun"),gh("^stink$",3,"ank"),gh("^steal$",3,"ole"),gh("^stand$",3,"ood"),gh("^stave$",3,"ove"),gh("^stride$",3,"ode"),gh("^strive$",3,"ove"),gh("^strike$",3,"uck"),gh("^stick$",3,"uck"),gh("^swim$",3,"wam"),gh("^swear$",3,"ore"),gh("^teach$",4,"aught"),gh("^think$",3,"ought"),gh("^throw$",3,"rew"),gh("^take$",3,"ook"),gh("^tear$",3,"ore"),gh("^transship$",4,"hip"),gh("^tread$",4,"rod"),gh("^typewrite$",3,"ote"),gh("^unbind$",3,"ound"),gh("^unclothe$",5,"lad"),gh("^underbuy$",2,"ought"),gh("^undergird$",3,"irt"),gh("^undershoot$",4,"hot"),gh("^understand$",3,"ood"),gh("^undertake$",3,"ook"),gh("^undergo$",2,"went"),gh("^underwrite$",3,"ote"),gh("^unfreeze$",4,"oze"),gh("^unlearn$",2,"rnt"),gh("^unmake$",3,"ade"),gh("^unreeve$",4,"ove"),gh("^unspeak$",3,"oke"),gh("^unstick$",3,"uck"),gh("^unswear$",3,"ore"),gh("^unteach$",4,"aught"),gh("^unthink$",3,"ought"),gh("^untread$",4,"rod"),gh("^unwind$",3,"ound"),gh("^upbuild$",3,"ilt"),gh("^uphold$",3,"eld"),gh("^upheave$",4,"ove"),gh("^uprise$",3,"ose"),gh("^upspring$",3,"ang"),gh("^go$",2,"went"),gh("^wiredraw$",3,"rew"),gh("^withdraw$",3,"rew"),gh("^withhold$",3,"eld"),gh("^withstand$",3,"ood"),gh("^wake$",3,"oke"),gh("^win$",3,"won"),gh("^wear$",3,"ore"),gh("^wind$",3,"ound"),gh("^weave$",4,"ove"),gh("^write$",3,"ote"),gh("^trek$",1,"cked"),gh("^ko$",1,"o'd"),gh("^bid",2,"ade"),gh("^win$",2,"on"),gh("^swim",2,"am"),gh("e$",0,"d",1),gh("^"+wh+"?(cast|thrust|typeset|cut|bid|upset|wet|bet|cut|hit|hurt|inset|let|cost|burst|beat|beset|set|upset|offset|put|quit|wed|typeset|wed|spread|split|slit|read|run|shut|shed|lay)$",0)],Ah=[gh("^aby$",0,"es"),gh("^bog-down$",5,"s-down"),gh("^chivy$",1,"vies"),gh("^gen-up$",3,"s-up"),gh("^prologue$",3,"gs"),gh("^picknic$",0,"ks"),gh("^ko$",0,"'s"),gh("[osz]$",0,"es",1),gh("^have$",2,"s"),gh(kh+"y$",1,"ies",1),gh("^be$",2,"is"),gh("([zsx]|ch|sh)$",0,"es",1)],_h=["abat","abet","abhor","abut","accur","acquit","adlib","admit","aerobat","aerosol","allot","alot","anagram","annul","appal","apparel","armbar","aver","babysit","airdrop","appal","blackleg","bobsled","bur","chum","confab","counterplot","dib","backdrop","backfil","backflip","backlog","backpedal","backslap","backstab","bag","balfun","ballot","ban","bar","barbel","bareleg","barrel","bat","bayonet","becom","bed","bedevil","bedwet","befit","befog","beg","beget","begin","bejewel","benefit","beset","besot","bet","bevel","bewig","bib","bid","billet","bin","bip","bit","bitmap","blab","blag","blam","blan","blat","bles","blim","blip","blob","bloodlet","blot","blub","blur","bob","bog","booby-trap","boobytrap","booksel","bootleg","bop","bot","bowel","bracket","brag","brig","brim","bud","buffet","bug","bullshit","bum","bun","bus","but","cab","cabal","cam","can","cancel","cap","caravan","carburet","carnap","carol","carpetbag","castanet","cat","catcal","catnap","chanel","channel","chap","char","chat","chin","chip","chir","chirrup","chisel","chop","chug","chur","clam","clap","clearcut","clip","clodhop","clog","clop","closet","clot","club","co-star","cob","cobweb","cod","coif","com","combat","comit","commit","compel","con","concur","confer","confiscat","control","cop","coquet","coral","corral","cosset","cotransmit","councel","council","counsel","court-martial","crab","cram","crap","crib","crop","crossleg","cub","cudgel","cum","cun","cup","cut","dab","dag","dam","dan","dap","daysit","deadpan","debag","debar","log","decommit","decontrol","defer","defog","deg","degas","deinstal","demur","den","denet","depig","depip","depit","der","deskil","deter","devil","diagram","dial","dig","dim","din","dip","disbar","disbud","discomfit","disembed","disembowel","dishevel","disinter","dispel","distil","dog","dognap","don","doorstep","dot","dowel","drag","drat","driftnet","distil","egotrip","enrol","enthral","extol","fulfil","gaffe","idyl","inspan","drip","drivel","drop","drub","drug","drum","dub","duel","dun","earwig","eavesdrop","ecolabel","embed","emit","enamel","endlabel","endtrim","enrol","enthral","entrap","enwrap","equal","equip","exaggerat","excel","expel","extol","fag","fan","farewel","fat","featherbed","feget","fet","fib","fig","fin","fingerspel","fingertip","fit","flab","flag","flap","flip","flit","flog","flop","fob","focus","fog","footbal","footslog","fop","forbid","forget","format","fortunetel","fot","foxtrot","frag","freefal","fret","frig","frip","frog","frug","fuel","fufil","fulfil","fullyfit","fun","funnel","fur","furpul","gab","gad","gag","gam","gambol","gap","garot","garrot","gas","gat","gel","gen","get","giftwrap","gig","gimbal","gin","glam","glenden","glendin","globetrot","glug","glut","gob","goldpan","goostep","gossip","grab","gravel","grid","grin","grip","grit","grovel","grub","gum","gun","gunrun","gut","gyp","haircut","ham","han","handbag","handicap","handknit","handset","hap","hareleg","hat","headbut","hedgehop","hem","hen","hiccup","highwal","hip","hit","hobnob","hog","hop","horsewhip","hostel","hot","hotdog","hovel","hug","hum","humbug","hup","hut","illfit","imbed","impel","imperil","incur","infer","infil","inflam","initial","input","inset","instil","inter","interbed","intercrop","intercut","interfer","instal","instil","intermit","jug","mousse","mud","jab","jag","jam","jar","jawdrop","jet","jetlag","jewel","jib","jig","jitterbug","job","jog","jot","jut","ken","kennel","kid","kidnap","kip","kit","knap","kneecap","knit","knob","knot","label","lag","lam","lap","lavel","leafcut","leapfrog","leg","lem","lep","let","level","libel","lid","lig","lip","lob","log","lok","lollop","longleg","lop","lowbal","lug","mackerel","mahom","man","map","mar","marshal","marvel","mat","matchwin","metal","micro-program","microplan","microprogram","milksop","mis-cal","mis-club","mis-spel","miscal","mishit","mislabel","mit","mob","mod","model","mohmam","monogram","mop","mothbal","mug","multilevel","mum","nab","nag","nan","nap","net","nightclub","nightsit","nip","nod","nonplus","norkop","nostril","not","nut","nutmeg","occur","ocur","offput","offset","omit","ommit","onlap","out-general","outbid","outcrop","outfit","outgas","outgun","outhit","outjab","outpol","output","outrun","outship","outshop","outstrip","outswel","outspan","overcrop","pettifog","photostat","pouf","preset","prim","pug","ret","rosin","outwit","overbid","overcal","overcommit","overcontrol","overcrap","overdub","overfil","overhat","overhit","overlap","overman","overplot","overrun","overshop","overstep","overtip","overtop","overwet","overwil","pad","paintbal","pan","panel","paperclip","par","parallel","parcel","pat","patrol","pedal","peg","pen","pencil","pep","permit","pet","petal","photoset","picket","pig","pilot","pin","pinbal","pip","pipefit","pipet","pit","plan","plit","plod","plop","plot","plug","plumet","plummet","pod","policyset","polyfil","pop","pot","pram","prebag","predistil","predril","prefer","prefil","preinstal","prep","preplan","preprogram","prizewin","prod","profer","prog","program","prop","propel","pub","pummel","pun","pup","pushfit","put","quarel","quarrel","quickskim","quickstep","quickwit","quip","quit","quivertip","quiz","rabbit","rabit","radiolabel","rag","ram","ramrod","rap","rat","ratecap","ravel","readmit","reallot","rebel","rebid","rebin","rebut","recap","rechannel","recommit","recrop","recur","recut","red","redril","refer","refit","reformat","refret","refuel","reget","regret","reinter","rejig","rekit","reknot","relabel","relet","rem","remap","remetal","remit","remodel","reoccur","rep","repel","repin","replan","replot","repol","repot","reprogram","rerun","reset","resignal","resit","reskil","resubmit","retransfer","retransmit","retro-fit","retrofit","rev","revel","revet","rewrap","rib","richochet","ricochet","rid","rig","rim","ringlet","rip","rit","rival","rivet","roadrun","rob","rocket","rod","roset","rot","rowel","rub","run","runnel","rut","sab","sad","sag","sandbag","sap","scab","scalpel","scam","scan","scar","scat","schlep","scrag","scram","shall","sled","smut","stet","trepan","unrip","unstop","whir","whop","wig","scrap","scrat","scrub","scrum","scud","scum","scur","sentinel","set","shag","sham","shed","shim","shin","ship","shir","shit","shlap","shop","shopfit","shortfal","shot","shovel","shred","shrinkwrap","shrivel","shrug","shun","shut","side-step","sideslip","sidestep","signal","sin","sinbin","sip","sit","skid","skim","skin","skip","skir","skrag","slab","slag","slam","slap","slim","slip","slit","slob","slog","slop","slot","slowclap","slug","slum","slur","smit","snag","snap","snip","snivel","snog","snorkel","snowcem","snub","snug","sob","sod","softpedal","son","sop","spam","span","spar","spat","spin","spiral","spit","splat","split","spot","sprig","springtip","spud","spur","squat","squirrel","stab","stag","star","stem","sten","stencil","step","stir","stop","storytel","strap","strim","strip","strop","strug","strum","strut","stub","stud","stun","sub","subcrop","sublet","submit","subset","sum","summit","sun","suntan","sup","super-chil","superad","swab","swag","swan","swap","swat","swig","swim","swivel","swot","tab","tag","tan","tansfer","tap","tar","tassel","tat","tefer","teleshop","tendril","thermal","thermostat","thin","throb","thrum","thud","thug","tightlip","tin","tinsel","tip","tittup","toecap","tog","tom","tomorrow","top","tot","total","towel","traget","trainspot","tram","trammel","transfer","tranship","transit","transmit","trap","travel","trek","trendset","trim","trip","tripod","trod","trot","trowel","tub","tug","tunnel","tup","tut","twat","twig","twin","twit","typeset","tyset","un-man","unban","unbar","unbob","uncap","unclip","uncompel","undam","underbid","undercut","underlet","underman","underpin","unfit","unfulfil","unknot","unlip","unlywil","unman","unpad","unpeg","unpin","unplug","unravel","unrol","unscrol","unsnap","unstal","unstep","unstir","untap","unwrap","unzip","up","upset","upskil","upwel","ven","verbal","vet","vignet","wad","wag","wainscot","wan","war","waterfal","waterfil","waterlog","weasel","web","wed","wet","wham","whet","whip","whir","whiz","whup","wildcat","win","windmil","wit","woodchop","woodcut","worship","wrap","wiretap","yen","yak","yap","yip","yodel","zag","zap","zig","zigzag","zip","hocus"],Ch={name:"PAST_PARTICIPLE",defaultRule:gh(zh,0,"ed",2),rules:Th,doubling:!0},Dh={name:"ING_FORM",defaultRule:gh(zh,0,"ing",2),rules:xh,doubling:!0},Lh={name:"PAST",defaultRule:gh(zh,0,"ed",2),rules:Eh,doubling:!0},Rh={name:"PRESENT",defaultRule:gh(zh,0,"s",2),rules:Ah,doubling:!1},Nh=["am","are","is","was","were"];mh.VERB_CONS_DOUBLING=_h;var qh=mh;function Ph(n,e){for(var a=0;a<e.length;a++){var h=e[a];h.enumerable=h.enumerable||!1,h.configurable=!0,"value"in h&&(h.writable=!0),Object.defineProperty(n,h.key,h);}}var Oh=function(){function n(e){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function");}(this,n),this.RiTa=e;}var e,a;return e=n,(a=[{key:"adjustNumber",value:function(n,e,a){if(n&&"string"!=typeof n)throw Error("".concat(e===Fh?"singularize()":"pluralize()"," requires a string as input"));if(!n||0===n.length)return "";var h=(n=n.trim()).toLowerCase();if(Bh.includes(h))return a&&console.log(n+" hit MASS_NOUNS"),n;for(var t=e===Fh?Vh:Gh,r=0;r<t.length;r++){var i=t[r];if(i.applies(h))return a&&console.log(n+" hit rule #"+r,i),t[r].fire(n);}return n;}},{key:"singularize",value:function(n,e){return this.adjustNumber(n,Fh,e&&e.dbug);}},{key:"pluralize",value:function(n,e){return this.adjustNumber(n,$h,e&&e.dbug);}},{key:"isPlural",value:function(n,e){if(n&&"string"!=typeof n)throw Error("isPlural() requires a string as input");if(!n||0===n.length)return !1;var a=e&&e.debug,h=e&&e.fatal;if(n=n.toLowerCase(),Bh.includes(n))return !0;var t=this.RiTa.lexicon()._dict(h),r=this.RiTa.singularize(n);if(r!==n&&t[r]&&2===t[r].length&&t[r][1].split(" ").includes("nn"))return !0;if(n.endsWith("ness")&&r===this.RiTa.pluralize(n))return !0;if(t&&n.endsWith("s")){var i=t[n.substring(0,n.length-1)];if(i&&2===i.length)for(var s=i[1].split(" "),l=0;l<s.length;l++)if("nn"===s[l])return !0;}if(Hh.test(n))return !0;for(var o=Vh,b=0;b<o.length;b++){var d=o[b];if(d.applies(n))return a&&console.log(n+" hit",d),!0;}return a&&console.log("isPlural: no rules hit for "+n),!1;}}])&&Ph(e.prototype,a),n;}(),Ih=l.RE,$h=1,Fh=2,Bh=l.MASS_NOUNS,Mh=Ih("^.*s$",1),Uh=Ih("^((\\w+)(-\\w+)*)(\\s((\\w+)(-\\w+)*))*$",0,"s"),Hh=/(ae|ia|s)$/,Vh=[Ih("(houses|pluses|cases)$",1,""),Ih("^(apices|cortices)$",4,"ex"),Ih("^(meninges|phalanges)$",3,"x"),Ih("^(octopus|pinch|fetus|genus|sinus|tomato|kiss|pelvis)es$",2),Ih("^(whizzes)$",3),Ih("^(abeyance|abode|aborigine|abrasive|absence|absentee|absolute|abstinence|abundance|abuse|acceptance|accolade|accomplice|accordance|ace|acetate|acetone|acetylene|ache|acolyte|acquaintance|acquiescence|acquire|acre|acreage|active|acupuncture|acute|adage|additive|addressee|adherence|adhesive|adjective|admittance|adobe|adolescence|adoptee|adrenaline|advance|advantage|adventure|advocate|aerospace|affiliate|affirmative|affluence|agate|age|aggregate|agriculture|aide|airfare|airframe|airline|airplane|airtime|airwave|aisle|alcove|ale|algae|allegiance|alliance|allowance|allure|alternate|alternative|altitude|ambiance|ambivalence|ambulance|amphetamine|amplitude|analogue|anchorage|anecdote|angle|ankle|annoyance|anode|ante|antelope|antidote|antihistamine|antique|anyone|ape|aperture|apocalypse|apogee|apostle|appearance|appellate|appendage|appetite|apple|appliance|appointee|apprentice|approximate|aptitude|aquamarine|arbitrage|arcade|archetype|architecture|archive|armistice|arrearage|arrogance|artichoke|article|artifice|ashare|assemblage|associate|assurance|athlete|atmosphere|attache|attendance|attendee|attire|attitude|attribute|audience|audiophile|auspice|autoclave|automobile|avalanche|avarice|avenue|average|avoidance|awe|axe|axle|babble|babe|backbone|backhoe|backside|badge|bagpipe|bakeware|balance|bale|bandage|bane|banshee|barbecue|barge|baritone|barnacle|baroque|barrage|barricade|base|baseline|bathrobe|battle|bauble|beadle|bedside|bedtime|bee|beehive|beetle|belligerence|beneficence|benevolence|benzene|beverage|bible|bicarbonate|bicycle|biggie|bike|bile|billionaire|binge|biplane|birdie|birthplace|birthrate|bisque|bite|blade|blame|blanche|blase|blaze|blockade|blockage|bloke|blonde|blouse|blue|boardinghouse|boilerplate|bondage|bone|bonfire|boogie|bookcase|bookie|bookstore|boondoggle|borderline|bore|bottle|bounce|bourgeoisie|boutique|bovine|brace|brake|bramble|breakage|breeze|bribe|bride|bridge|bridle|brie|briefcase|brigade|brilliance|brindle|brine|bristle|broadside|brocade|brochure|brokerage|bromide|bronze|brownie|bruise|brunette|brute|bubble|buckle|bugle|bulge|bundle|bustle|butane|buttonhole|byline|byte|cabbage|cable|cache|cadence|cadre|cafe|caffeine|cage|cake|calorie|camaraderie|camouflage|campfire|campsite|candidate|candle|cane|canine|canoe|cantaloupe|capacitance|cape|capsule|captive|capture|carbide|carbine|carbohydrate|carbonate|care|caricature|carnage|carnivore|carriage|cartilage|cartridge|cascade|case|cashmere|cassette|caste|castle|catalogue|catastrophe|cathode|cattle|cause|cave|cayenne|ceasefire|cellophane|censure|centerpiece|centre|centrifuge|certificate|chaise|challenge|champagne|chance|change|chaperone|charge|charlotte|chase|cheekbone|cheese|cheesecake|chemise|childcare|chimpanzee|chive|chloride|chlorine|chocolate|choice|choke|chore|chrome|chromosome|chronicle|chuckle|chute|cigarette|ciliate|circle|circumference|circumstance|clairvoyance|classmate|clause|clearance|clearinghouse|cleavage|cliche|clientele|climate|clime|clique|closure|cloture|clove|clozapine|clubhouse|clue|coastline|cobblestone|cocaine|code|coexistence|coffee|cognizance|coherence|coincidence|coke|collage|collapse|collarbone|colleague|collective|college|collie|cologne|colonnade|columbine|combine|comeuppance|comfortable|commemorative|commerce|committee|commonplace|commune|communique|commute|comparative|compare|competence|composite|composure|compote|compromise|comrade|concentrate|concessionaire|concierge|conclave|concrete|concurrence|condensate|condolence|cone|conferee|conference|confidante|confidence|confluence|conformance|conglomerate|congruence|conjecture|connivance|conscience|consequence|conservative|consistence|constable|consulate|continuance|contraceptive|contrivance|convalescence|convenience|converse|convertible|conveyance|cookie|cookware|cooperative|coordinate|cope|core|cornerstone|corpse|correspondence|corsage|cortisone|corvette|costume|coterie|cottage|countenance|counterbalance|counterforce|countermeasure|countryside|coupe|couple|courage|course|courthouse|couture|cove|coverage|cowardice|coyote|crackle|cradle|crane|crate|craze|crease|creature|credence|creole|crevice|crime|cripple|critique|crocodile|crone|crossfire|crucible|crude|cruise|crusade|cubbyhole|cube|cue|cuisine|culture|curbside|cure|curse|curve|cyanide|cycle|dale|damage|dame|daminozide|dance|dare|database|date|daytime|daze|deadline|debacle|debate|debutante|decade|decadence|decline|decrease|decree|defense|defensive|deference|defiance|degree|delegate|deliverance|deluge|demagogue|demise|denture|departure|dependence|deportee|deregulate|derivative|designate|designee|desire|detective|detente|deterrence|deviance|device|devotee|dialogue|diatribe|die|difference|dike|dime|dinnertime|dinnerware|dioxide|dipole|directive|directorate|dirge|disadvantage|disallowance|disappearance|discharge|disciple|discipline|disclosure|discontinuance|discotheque|discourse|disease|disgrace|disguise|disincentive|diskette|dislike|disobedience|displeasure|disposable|dispute|disrepute|disservice|dissolve|dissonance|distance|distaste|distillate|disturbance|dive|divergence|divestiture|divide|divine|divorce|divorcee|dockside|doctorate|doctrinaire|doctrine|dodge|doe|doghouse|dole|dome|dominance|dope|dosage|dose|double|dove|downgrade|downside|downtime|draftee|drainage|drape|drawbridge|dribble|drive|drizzle|drone|drove|drugstore|due|duke|dune|dye|dyke|dynamite|eagle|earphone|earthenware|earthquake|ease|eave|eclipse|edge|edifice|effective|electorate|electrode|elegance|eligible|elite|eloquence|else|elsewhere|embrace|emcee|emergence|emigre|eminence|empire|employee|enclave|enclosure|encore|endurance|engine|enrage|enrollee|ensemble|enterprise|entire|entourage|entrance|entre|envelope|enzyme|epicure|epilogue|episode|epitome|equine|equivalence|escapade|escape|escapee|espionage|esplanade|essence|estate|estimate|ethane|ethylene|etiquette|eve|everyone|example|excellence|exchange|excise|exclusive|excuse|executive|exercise|exile|existence|expanse|expatriate|expenditure|expense|experience|expletive|explosive|expose|exposure|extravagance|extreme|exuberance|eye|eyepiece|eyesore|fable|facade|face|facsimile|fade|failure|faire|fake|fame|famine|fanfare|farce|fare|farmhouse|fashionable|fate|fatigue|favorite|feature|fee|female|feminine|fence|fiance|fiancee|fiddle|figure|file|filigree|finale|finance|fine|finesse|finite|fire|firehouse|fireplace|fixture|flagpole|flake|flame|flange|flare|flatware|fleece|flextime|floe|flue|fluke|fluoride|flute|foe|foible|folklore|foodservice|footage|footnote|forage|forbearance|force|fore|foreclosure|forfeiture|forge|formaldehyde|formative|fortitude|fortune|foursome|foxhole|fracture|fragrance|frame|franchise|franchisee|freebie|freeze|fridge|frieze|frigate|fringe|frontage|frostbite|fudge|fugitive|fumble|fungicide|furnace|fuse|fuselage|fusillade|future|gabardine|gable|gaffe|gage|gaggle|gale|gallstone|gamble|game|garage|gasoline|gate|gauge|gaze|gazelle|gemstone|gendarme|gene|genie|genocide|genome|genre|gentile|gesture|giggle|girdle|girlie|glade|glance|glare|glassware|glaze|glee|glimpse|globe|glove|glue|glutamate|gnome|goatee|gobble|goggle|goodbye|google|goose|gorge|governance|grace|grade|graduate|granite|grape|grapevine|graphite|grate|grave|greenhouse|grenade|grievance|grille|grime|grindstone|gripe|groove|grouse|grove|grudge|guarantee|guesstimate|guidance|guide|guideline|guile|guillotine|guise|gunfire|gurgle|gyroscope|habitue|hackle|haggle|hairline|halftime|handle|handshake|happenstance|harborside|hardcore|hardline|hare|hassle|haste|have|headache|headline|headphone|healthcare|hearse|heave|hectare|hedge|heliotrope|hellfire|hemisphere|hemline|hemorrhage|herbicide|heritage|heroine|hide|hike|hillside|hindrance|hinge|hippie|hire|hive|hodgepodge|hoe|hole|homage|home|homicide|hone|honeybee|honorable|hope|horde|hormone|horoscope|horrible|horse|horticulture|hose|hospice|hostage|hostile|hotline|house|houseware|housewife|huddle|hue|hurdle|hurricane|hustle|hydride|hygiene|hype|hyperbole|hypocrite|ideologue|ignorance|image|imbalance|immense|immune|impasse|impatience|imperative|imponderable|importance|impotence|imprudence|impulse|incapable|incentive|incidence|incline|incoherence|income|incompetence|incomprehensible|inconvenience|increase|indefinite|indenture|indifference|indispensable|inductee|indulgence|ineptitude|inexperience|infallible|inference|infinite|influence|infrastructure|inheritance|initiate|initiative|injustice|inmate|innocence|insecticide|inside|insignificance|insistence|insolence|insoluble|instance|institute|insurance|intake|intangible|intelligence|intelligible|intensive|interchange|intercourse|interdependence|interestrate|interface|interference|interlude|interstate|interviewee|intestine|intimate|intolerance|intransigence|intrigue|invective|inverse|invertebrate|invite|invoice|iodide|iodine|ire|irresponsible|irreverence|isle|issuance|issue|jade|jailhouse|jasmine|jawbone|jibe|jingle|joke|joyride|judge|juice|jumble|juncture|jungle|junkie|jute|juvenile|kale|kaleidoscope|kamikaze|karaoke|keepsake|kerosene|kettle|keyhole|keynote|keystone|kiddie|kilobyte|kitchenette|kitchenware|kite|knee|knife|knuckle|lace|ladle|lake|lance|landscape|landslide|lane|language|lapse|largesse|lathe|latitude|lattice|laureate|laxative|league|leakage|lease|leave|lecture|ledge|legislature|legume|leisure|lemonade|lettuce|levamisole|levee|leverage|libertine|license|licensee|lie|life|lifeline|lifestyle|lifetime|lighthouse|lignite|lime|limestone|limousine|linage|line|lineage|lingerie|linkage|liposome|literature|litle|loave|lobe|lobule|locale|locomotive|lodge|longitude|longtime|loophole|lope|lore|lounge|louse|love|lube|luminescence|lunchtime|lure|lustre|lute|lye|lymphocyte|machete|machine|madhouse|madstone|magazine|magistrate|magnate|magnitude|mainframe|mainline|maintenance|make|male|malice|malpractice|mandate|mane|manganese|manhole|manmade|mantle|manufacture|manure|maple|marble|mare|margarine|marine|marketplace|marmalade|marque|marquee|marriage|martingale|masculine|masquerade|massacre|massage|masterpiece|mate|matte|maze|mealtime|meantime|meanwhile|measure|medicare|medicine|megabyte|melamine|melange|melee|membrane|menace|merge|message|methadone|methane|methylene|mettle|microbe|micromanage|microphone|microscope|microwave|middle|midrange|midwife|migraine|mile|mileage|milestone|millionaire|mine|miniature|miniscule|minute|miracle|mire|misadventure|misanthrope|miscarriage|miscue|misfortune|missile|missive|mistake|mistletoe|misuse|mite|mitre|mixture|mode|module|moisture|mole|molecule|mollycoddle|monologue|monotone|montage|moraine|more|morgue|morphine|mortgage|mosque|motive|motorbike|motorcade|motorcycle|mottle|mountainside|mouse|mousse|moustache|mouthpiece|movable|move|movie|moxie|muddle|mule|multiple|multistate|multitude|mumble|muscle|musculature|muse|mustache|muzzle|myrtle|mystique|naive|naivete|name|nameplate|namesake|narrative|native|nature|necklace|necktie|needle|negative|negligence|neophyte|nerve|newswire|nibble|niche|nickname|nicotine|niece|nightingale|nightmare|nighttime|nitrate|node|nodule|noise|nomenclature|nominee|noncompliance|none|nonviolence|noodle|noose|nose|nosedive|note|notice|novice|nowhere|nozzle|nuance|nude|nudge|nuisance|nuke|nurse|nurture|obedience|objective|oblige|observance|obsessive|obstacle|obverse|occurrence|ochre|octane|ode|offense|offensive|office|ogre|ole|olive|omnipotence|omnipresence|onstage|operative|opposite|opulence|oracle|orange|ordinance|ordnance|ore|orifice|orphanage|ounce|outage|outcome|outhouse|outline|outrage|outshone|outside|overdose|overdrive|override|oversize|overtime|overtone|overture|oxide|ozone|pace|package|paddle|page|palace|palate|pale|palette|palisade|panache|pancake|pane|panhandle|pantie|pantomime|parable|parachute|parade|paraphrase|parasite|parentage|parlance|parole|parolee|parsonage|particle|passage|passive|paste|pastime|pasture|pate|patience|patronage|pause|peacetime|pebble|pedigree|penance|pence|penthouse|people|percentage|perchlorate|performance|perfume|permanence|permissible|peroxide|perquisite|persistence|perspective|pesticide|pestilence|petulance|phase|phone|phosphate|phrase|physique|pickle|picture|picturesque|pie|piece|pile|pilgrimage|pimple|pine|pineapple|pinhole|pinnacle|pipe|pipeline|pique|pirate|pittance|place|plague|plane|plaque|plate|platitude|plausible|playhouse|playmate|pleasure|pledge|plumage|plume|plunge|poke|pole|polyurethane|poodle|poolside|pope|populace|porcupine|pore|porpoise|porridge|portable|pose|positive|posse|postage|posture|potentate|pothole|poultice|powerhouse|practice|prairie|praise|prattle|preamble|precedence|precipice|precipitate|predominance|preface|prefecture|preference|prejudice|prelude|premiere|premise|preponderance|preppie|prerequisite|prerogative|presale|presence|preserve|pressure|prestige|pretense|prevalence|preventive|price|primate|prime|primetime|prince|principle|private|privilege|prize|probate|probe|procedure|produce|profile|progressive|projectile|promenade|prominence|promise|propane|propylene|prostate|prostitute|protective|protege|prototype|provenance|providence|province|prude|prudence|prune|psyche|puddle|pulse|purchase|purge|purple|purpose|purse|puzzle|quagmire|quake|questionnaire|queue|quiche|quickie|quince|quinine|quote|rabble|race|racehorse|radiance|rage|ragtime|railbike|raise|rake|rampage|range|rape|rapture|rate|rationale|rattle|rattlesnake|rawhide|realestate|reappearance|reassurance|rebate|rebuke|receivable|receptacle|recharge|recipe|recluse|recognizance|reconfigure|reconnaissance|recourse|rectangle|rectitude|recurrence|redone|referee|reference|refuge|refugee|refuse|reggae|regime|reignite|reinsurance|reissue|relapse|relative|release|relevance|reliance|relocate|reluctance|remade|remembrance|reminiscence|remittance|renaissance|renegade|repartee|repentance|repertoire|reportage|representative|reprieve|reptile|repurchase|repute|resale|rescue|resemblance|reserve|reshuffle|residence|residue|resilience|resistance|resolve|resonance|resource|respite|response|restructure|resume|resurgence|reticence|retinue|retiree|retrospective|revenge|revenue|reverence|reverie|reverse|rewrite|rhinestone|rhyme|riddance|riddle|ride|ridge|ridicule|rifle|ringside|rinse|ripple|rite|riverside|roadside|robe|role|romance|rooftree|rookie|roommate|rope|rose|rosette|rote|rouge|roulette|roundhouse|route|routine|rubble|ruble|rue|rule|rumble|rupee|rupture|ruse|russe|rye|sable|sabotage|sabre|sacrifice|sacrilege|saddle|safe|sage|sake|sale|saline|salute|salvage|salve|sample|sanguine|sardine|satellite|satire|sauce|sausage|savage|saxophone|scale|scare|scene|schedule|scheme|schoolhouse|schoolmate|science|scope|score|scourge|scramble|scrape|scribe|scrimmage|scripture|scuffle|sculpture|seashore|seaside|sedative|seepage|seizure|semblance|senate|sense|sensible|sensitive|sentence|sequence|serenade|serene|serve|service|servitude|sesame|severance|sewage|shade|shake|shape|share|shave|shinbone|shine|shingle|shipmate|shirtsleeve|shoe|shoelace|shore|shoreline|shortage|shortcake|shove|showcase|showpiece|shrine|shrinkage|shuffle|shuttle|side|sideline|siege|sieve|signature|significance|silence|silhouette|silicate|silicone|silverware|simile|simple|sine|single|sinkhole|site|size|sizzle|skyline|skywave|slate|slaughterhouse|slave|sleeve|slice|slide|slime|slippage|slope|sludge|sluice|smile|smoke|smudge|snake|snare|snowflake|socialite|solace|sole|solicitude|solitude|some|someone|someplace|somewhere|sophisticate|sophomore|sore|souffle|source|space|spade|spangle|spate|spectacle|spectre|sphere|spice|spike|spindle|spine|spire|spite|spittle|splice|splurge|spoilage|spoke|sponge|spore|spouse|spree|springtime|sprinkle|spruce|squabble|square|squeegee|squeeze|squire|stable|stage|staircase|stake|stalemate|stampede|stance|staple|stare|state|statue|stature|statute|steakhouse|steppe|stereotype|stethoscope|stockpile|stone|stoneware|stooge|stoppage|storage|store|storehouse|storyline|stove|stratosphere|stricture|stride|strife|strike|stripe|striptease|strobe|stroke|structure|struggle|strychnine|stubble|stumble|stumpage|style|styrene|subcommittee|sublease|sublime|submarine|subordinate|subservience|subsidence|subsistence|substance|substantive|substitute|substrate|subterfuge|subtitle|suburbanite|suede|suffrage|suffragette|sugarcane|suicide|suitcase|suite|sulfide|summertime|sunrise|sunshine|superstore|superstructure|supine|supreme|surcharge|surface|surge|surname|surprise|surrogate|surveillance|susceptible|sustenance|suture|swerve|swipe|sycamore|syllable|synagogue|syndicate|syndrome|syringe|table|tableware|tackle|tadpole|tagline|tailgate|tailpipe|take|tale|tambourine|tangle|tape|taste|teammate|tease|technique|tee|telephone|telescope|teletype|telltale|temperance|temperature|template|temple|tempore|tense|tentacle|tentative|tenure|termite|terrace|testicle|testosterone|textile|texture|theme|thimble|thistle|thoroughfare|threesome|throne|throttle|tide|tie|tightrope|tile|timbre|time|timepiece|timetable|tincture|tine|tintype|tirade|tire|tissue|titanate|title|toe|toffee|tole|tolerance|tombstone|tome|tone|tongue|tonnage|toothpaste|torque|tortoise|torture|touchstone|townhouse|trace|trackage|trade|trance|tranche|transcendence|transience|transverse|trapeze|travelogue|treasure|treatise|treble|tree|tremble|trestle|triage|triangle|tribe|tribute|trickle|trifle|triglyceride|tripe|triple|triumvirate|trombone|trouble|troupe|trove|truce|trudge|trundle|trustee|tube|tumble|tune|turbine|turbulence|turnpike|turntable|turpentine|turquoise|turtle|tussle|tutelage|twaddle|twine|twinge|twinkle|twosome|tyke|type|typeface|umbrage|umpire|unattainable|uncle|undergraduate|underperformance|underscore|underside|undertone|underwrote|undesirable|unfortunate|unique|universe|unlike|unthinkable|update|upgrade|upscale|upside|upsurge|urethane|urge|urine|usage|use|utterance|vaccine|value|valve|vampire|vane|vantage|variable|variance|vase|vaudeville|vegetable|vehicle|venerable|vengeance|venture|venue|verbiage|verge|verisimilitude|verse|vertebrate|verve|vestige|vibe|vice|vicissitude|videocassette|videotape|vigilance|vignette|village|vine|vintage|virtue|virulence|visage|vise|vogue|voice|voltage|volume|vote|voyage|vulture|waffle|wage|waggle|wale|wane|wardrobe|ware|warehouse|warfare|wartime|wattle|wave|wayside|weave|wedge|welcome|welfare|whale|wheeze|while|whine|whistle|white|whole|wholesale|whore|wife|wiggle|wile|wince|windowpane|wine|wintertime|wire|wobble|woe|workforce|workhorse|workplace|wreckage|wrinkle|yardage|yoke|yuppie|zombie|zone)s$",1,""),Ih("(l|w)ives$",3,"fe"),Ih("(men|women)$",2,"an"),Ih("ves$",3,"f"),Ih("^(appendices|matrices)$",3,"x"),Ih("^(indices|apices|cortices)$",4,"ex"),Ih("^(gas|bus)es$",2),Ih("([a-z]+osis|[a-z]+itis|[a-z]+ness)$",0),Ih("^(stimul|alumn|termin)i$",1,"us"),Ih("^(media|millennia|consortia|septa|memorabilia|data)$",1,"um"),Ih("^(memoranda|bacteria|curricula|minima|maxima|referenda|spectra|phenomena|criteria)$",1,"um"),Ih("ora$",3,"us"),Ih("^[lm]ice$",3,"ouse"),Ih("[bcdfghjklmnpqrstvwxyz]ies$",3,"y"),Ih("(ces)$",1),Ih("^feet$",3,"oot"),Ih("^teeth$",4,"ooth"),Ih("children$",3),Ih("geese",4,"oose"),Ih("^concerti$",1,"o"),Ih("people$",4,"rson"),Ih("^(vertebr|larv|minuti)ae$",1),Ih("^oxen",2),Ih("esses$",2),Ih("(treatises|chemises)$",1),Ih("(sh|ch|o|ss|x|z|us)es$",2),Ih("(ses)$",2,"is"),Mh],Gh=[Ih("(human|german|roman)$",0,"s"),Ih("^(monarch|loch|stomach|epoch|ranch)$",0,"s"),Ih("^(piano|photo|solo|ego|tobacco|cargo|taxi)$",0,"s"),Ih("(chief|proof|ref|relief|roof|belief|spoof|golf|grief)$",0,"s"),Ih("^(appendix|index|matrix|apex|cortex)$",2,"ices"),Ih("^concerto$",1,"i"),Ih("^prognosis",2,"es"),Ih("[bcdfghjklmnpqrstvwxyz]o$",0,"es"),Ih("[bcdfghjklmnpqrstvwxyz]y$",1,"ies"),Ih("^ox$",0,"en"),Ih("^(stimul|alumn|termin)us$",2,"i"),Ih("^corpus$",2,"ora"),Ih("(xis|sis)$",2,"es"),Ih("whiz$",0,"zes"),Ih("motif$",0,"s"),Ih("[lraeiou]fe$",2,"ves"),Ih("[lraeiou]f$",1,"ves"),Ih("(eu|eau)$",0,"x"),Ih("(man|woman)$",2,"en"),Ih("person$",4,"ople"),Ih("^meninx|phalanx$",1,"ges"),Ih("schema$",0,"ta"),Ih("^(bus|gas)$",0,"es"),Ih("child$",0,"ren"),Ih("^(vertebr|larv|minuti)a$",0,"e"),Ih("^(maharaj|raj|myn|mull)a$",0,"hs"),Ih("^aide-de-camp$",8,"s-de-camp"),Ih("^weltanschauung$",0,"en"),Ih("^lied$",0,"er"),Ih("^tooth$",4,"eeth"),Ih("^[lm]ouse$",4,"ice"),Ih("^foot$",3,"eet"),Ih("goose",4,"eese"),Ih("^(co|no)$",0,"'s"),Ih("^blond$",0,"es"),Ih("^datum",2,"a"),Ih("([a-z]+osis|[a-z]+itis|[a-z]+ness)$",0),Ih("([zsx]|ch|sh)$",0,"es"),Ih("^(medi|millenni|consorti|sept|memorabili)um$",2,"a"),Ih("^(memorandum|bacterium|curriculum|minimum|maximum|referendum|spectrum|phenomenon|criterion)$",2,"a"),Uh],Wh=Oh;function Yh(n,e){for(var a=0;a<e.length;a++){var h=e[a];h.enumerable=h.enumerable||!1,h.configurable=!0,"value"in h&&(h.writable=!0),Object.defineProperty(n,h.key,h);}}var Kh=function(){function n(){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function");}(this,n),this.N=624,this.M=397,this.MATRIX_A=2567483615,this.UPPER_MASK=2147483648,this.LOWER_MASK=2147483647,this.mt=new Array(this.N),this.mti=this.N+1,this.seed(new Date().getTime());}var e,a;return e=n,(a=[{key:"randomOrdering",value:function(n){if(!Array.isArray(n)&&!l.isNum(n))throw Error("Expects [] or int");for(var e,a,h=Array.isArray(n)?n:Array.from(Array(n).keys()),t=h.length;t;e=parseInt(this.random()*t),a=h[--t],h[t]=h[e],h[e]=a);return h;}},{key:"seed",value:function(n){for(this.mt[0]=n>>>0,this.mti=1;this.mti<this.N;this.mti++){var e=this.mt[this.mti-1]^this.mt[this.mti-1]>>>30;this.mt[this.mti]=(1812433253*((4294901760&e)>>>16)<<16)+1812433253*(65535&e)+this.mti,this.mt[this.mti]>>>=0;}}},{key:"pselect",value:function(n){for(var e=this.randF(),a=0,h=0;h<n.length-1;++h)if(e<(a+=n[h]))return h;return n.length-1;}},{key:"pselect2",value:function(n){var e=n.reduce(function(n,e){return n+e;},0),a=Math.random()*e;return n.find(function(n){return (a-=n)<0;});}},{key:"ndist",value:function(n,e){var a=[],h=0;if(e){e<.01&&(e=.01);for(var t=0;t<n.length;t++){var r=Math.exp(n[t]/e);h+=r,a.push(r);}}else for(var i=0;i<n.length;i++){if(n[i]<0)throw Error("Weights must be positive");h+=n[i],a.push(n[i]);}return a.map(function(n){return n/h;});}},{key:"random",value:function(){var n=this.randF();if(!arguments.length)return n;if(Array.isArray(arguments[0])){var e=arguments[0];return e[Math.floor(n*e.length)];}return 1===arguments.length?n*arguments[0]:n*(arguments[1]-arguments[0])+arguments[0];}},{key:"randI",value:function(){var n,e,a=new Array(0,this.MATRIX_A);if(this.mti>=this.N){for(this.mti==this.N+1&&this.seed(5489),e=0;e<this.N-this.M;e++)n=this.mt[e]&this.UPPER_MASK|this.mt[e+1]&this.LOWER_MASK,this.mt[e]=this.mt[e+this.M]^n>>>1^a[1&n];for(;e<this.N-1;e++)n=this.mt[e]&this.UPPER_MASK|this.mt[e+1]&this.LOWER_MASK,this.mt[e]=this.mt[e+(this.M-this.N)]^n>>>1^a[1&n];n=this.mt[this.N-1]&this.UPPER_MASK|this.mt[0]&this.LOWER_MASK,this.mt[this.N-1]=this.mt[this.M-1]^n>>>1^a[1&n],this.mti=0;}return n=this.mt[this.mti++],n^=n>>>11,n^=n<<7&2636928640,n^=n<<15&4022730752,(n^=n>>>18)>>>0;}},{key:"randF",value:function(){return this.randI()*(1/4294967296);}}])&&Yh(e.prototype,a),n;}();function Jh(n,e,a){return (Jh=Qh()?Reflect.construct:function(n,e,a){var h=[null];h.push.apply(h,e);var t=new(Function.bind.apply(n,h))();return a&&Xh(t,a.prototype),t;}).apply(null,arguments);}function Qh(){if("undefined"==typeof Reflect||!Reflect.construct)return !1;if(Reflect.construct.sham)return !1;if("function"==typeof Proxy)return !0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0;}catch(n){return !1;}}function Xh(n,e){return (Xh=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n;})(n,e);}function Zh(n,e){for(var a=0;a<e.length;a++){var h=e[a];h.enumerable=h.enumerable||!1,h.configurable=!0,"value"in h&&(h.writable=!0),Object.defineProperty(n,h.key,h);}}var nt=function(){function n(){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function");}(this,n);}var e,h,t;return e=n,t=[{key:"addTransform",value:function(){return Sa.addTransform.apply(Sa,arguments);}},{key:"articlize",value:function(n){return Sa.articlize(n);}},{key:"alliterations",value:function(){var e;return (e=n.lexicon()).alliterations.apply(e,arguments);}},{key:"analyze",value:function(){var e;return (e=n.analyzer).analyze.apply(e,arguments);}},{key:"concordance",value:function(){var e;return (e=n.concorder).concordance.apply(e,arguments);}},{key:"conjugate",value:function(){var e;return (e=n.conjugator).conjugate.apply(e,arguments);}},{key:"grammar",value:function(){return Jh(Ca,Array.prototype.slice.call(arguments));}},{key:"markov",value:function(){return Jh(pn,Array.prototype.slice.call(arguments));}},{key:"evaluate",value:function(){return Sa.eval.apply(Sa,arguments);}},{key:"getTransforms",value:function(){return Sa.transforms;}},{key:"hasWord",value:function(e){return n.lexicon().hasWord(e,!0);}},{key:"isAbbrev",value:function(e){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},h=a.caseSensitive,t=void 0!==h&&h;if("string"==typeof e){if(t)return n.ABRV.includes(e.trim());var r=e.trim().toLowerCase();return n.ABRV.filter(function(n){return n.toLowerCase()===r;}).length>0;}}},{key:"isAdjective",value:function(e){return n.tagger.isAdjective(e);}},{key:"isAdverb",value:function(e){return n.tagger.isAdverb(e);}},{key:"isAlliteration",value:function(){var e;return (e=n.lexicon()).isAlliteration.apply(e,arguments);}},{key:"isNoun",value:function(e){return n.tagger.isNoun(e);}},{key:"isPunct",value:function(n){return n&&n.length&&et.test(n);}},{key:"isQuestion",value:function(e){return n.QUESTIONS.includes(n.tokenize(e)[0].toLowerCase());}},{key:"isStopWord",value:function(e){return n.STOP_WORDS.includes(e.toLowerCase());}},{key:"isRhyme",value:function(){var e;return (e=n.lexicon()).isRhyme.apply(e,arguments);}},{key:"isVerb",value:function(e){return n.tagger.isVerb(e);}},{key:"kwic",value:function(){var e;return (e=n.concorder).kwic.apply(e,arguments);}},{key:"pastPart",value:function(){var e;return (e=n.conjugator).pastPart.apply(e,arguments);}},{key:"phones",value:function(){var e;return (e=n.analyzer).analyze.apply(e,arguments).phones;}},{key:"pos",value:function(){var e;return (e=n.tagger).tag.apply(e,arguments);}},{key:"posInline",value:function(e){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return a.inline=!0,n.tagger.tag(e,a);}},{key:"pluralize",value:function(e){var a;return (a=n.inflector).pluralize.apply(a,arguments);}},{key:"presentPart",value:function(){var e;return (e=n.conjugator).presentPart.apply(e,arguments);}},{key:"randomOrdering",value:function(){var e;return (e=n.randomizer).randomOrdering.apply(e,arguments);}},{key:"randomSeed",value:function(){var e;return (e=n.randomizer).seed.apply(e,arguments);}},{key:"randomWord",value:function(){var e;return (e=n.lexicon()).randomWord.apply(e,arguments);}},{key:"rhymes",value:function(){var e;return (e=n.lexicon()).rhymes.apply(e,arguments);}},{key:"scripting",value:function(){return Jh(Sa,Array.prototype.slice.call(arguments));}},{key:"search",value:function(){var e;return (e=n.lexicon()).search.apply(e,arguments);}},{key:"sentences",value:function(){var e;return (e=n.tokenizer).sentences.apply(e,arguments);}},{key:"spellsLike",value:function(){var e;return (e=n.lexicon()).spellsLike.apply(e,arguments);}},{key:"singularize",value:function(){var e;return (e=n.inflector).singularize.apply(e,arguments);}},{key:"soundsLike",value:function(){var e;return (e=n.lexicon()).soundsLike.apply(e,arguments);}},{key:"stem",value:function(){return G.stem.apply(G,arguments);}},{key:"stresses",value:function(){var e;return (e=n.analyzer).analyze.apply(e,arguments).stresses;}},{key:"syllables",value:function(){var e;return (e=n.analyzer).analyze.apply(e,arguments).syllables;}},{key:"tokens",value:function(){var e;return (e=n.tokenizer).tokens.apply(e,arguments);}},{key:"tokenize",value:function(){var e;return (e=n.tokenizer).tokenize.apply(e,arguments);}},{key:"untokenize",value:function(){var e;return (e=n.tokenizer).untokenize.apply(e,arguments);}},{key:"randi",value:function(){var e;return Math.floor((e=n.randomizer).random.apply(e,arguments));}},{key:"random",value:function(){var e;return (e=n.randomizer).random.apply(e,arguments);}},{key:"isVowel",value:function(e){return e&&1===e.length&&n.VOWELS.includes(e);}},{key:"isConsonant",value:function(e){return e&&1===e.length&&!n.VOWELS.includes(e)&&at.test(e);}},{key:"capitalize",value:function(n){return n?n[0].toUpperCase()+n.substring(1):"";}},{key:"lexicon",value:function(){return void 0===n._lexicon&&("undefined"!=typeof __NOLEX__?n._lexicon=new Q(n):n._lexicon=new Q(n,a(52))),n._lexicon;}}],(h=null)&&Zh(e.prototype,h),t&&Zh(e,t),n;}();pn.parent=nt,Ca.parent=nt,Sa.parent=nt,G.parent=nt,nt.RiGrammar=Ca,nt.RiMarkov=pn,nt.RiScript=Sa,nt.Operator=_n,nt.tagger=new j(nt),nt.analyzer=new Ma(nt),nt.concorder=new vh(nt),nt.tokenizer=new ch(nt),nt.inflector=new Wh(nt),nt.conjugator=new qh(nt),nt.randomizer=new Kh(nt),nt._lexicon=void 0,nt.SILENT=!1,nt.SILENCE_LTS=!1,nt.CDN="https://www.unpkg.com/rita/",nt.PHONES=["aa","ae","ah","ao","aw","ay","b","ch","d","dh","eh","er","ey","f","g","hh","ih","iy","jh","k","l","m","n","ng","ow","oy","p","r","s","sh","t","th","uh","uw","v","w","y","z","zh"],nt.VERSION="2.4.91",nt.HAS_LEXICON="undefined"==typeof __NOLEX__,nt.FIRST=1,nt.SECOND=2,nt.THIRD=3,nt.PAST=4,nt.PRESENT=5,nt.FUTURE=6,nt.SINGULAR=7,nt.PLURAL=8,nt.NORMAL=9,nt.STRESS="1",nt.NOSTRESS="0",nt.PHONE_BOUNDARY="-",nt.WORD_BOUNDARY=" ",nt.SYLLABLE_BOUNDARY="/",nt.SENTENCE_BOUNDARY="|",nt.VOWELS="aeiou",nt.ABRV=["Adm.","Capt.","Cmdr.","Col.","Dr.","Gen.","Gov.","Lt.","Maj.","Messrs.","Mr.","Mrs.","Ms.","Prof.","Rep.","Reps.","Rev.","Sen.","Sens.","Sgt.","Sr.","St.","A.k.a.","C.f.","I.e.","E.g.","Vs.","V.","Jan.","Feb.","Mar.","Apr.","Mar.","Jun.","Jul.","Aug.","Sept.","Oct.","Nov.","Dec."],nt.QUESTIONS=["was","what","when","where","which","why","who","will","would","who","how","if","is","could","might","does","are","have"],nt.STOP_WORDS=["and","a","of","in","i","you","is","to","that","it","for","on","have","with","this","be","not","are","as","was","but","or","from","my","at","if","they","your","all","he","by","one","me","what","so","can","will","do","an","about","we","just","would","there","no","like","out","his","has","up","more","who","when","don't","some","had","them","any","their","it's","only","which","i'm","been","other","were","how","then","now","her","than","she","well","also","us","very","because","am","here","could","even","him","into","our","much","too","did","should","over","want","these","may","where","most","many","those","does","why","please","off","going","its","i've","down","that's","can't","you're","didn't","another","around","must","few","doesn't","the","every","yes","each","maybe","i'll","away","doing","oh","else","isn't","he's","there's","hi","won't","ok","they're","yeah","mine","we're","what's","shall","she's","hello","okay","here's","less","didn't","said"],nt.INFINITIVE=1,nt.GERUND=2,nt.SPLIT_CONTRACTIONS=!1,nt.CACHING=!0;var et=/^(?:[!-\/:-<>-@\[-`\{-\}\xA1\xA7\xAB\xB6\xB7\xBB\xBF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u2E52\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65\uFFFD]|\uD800[\uDD00-\uDD02\uDF9F\uDFD0]|\uD801\uDD6F|\uD802[\uDC57\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD803[\uDEAD\uDF55-\uDF59]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC8\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9]|\uD805[\uDC4B-\uDC4F\uDC5A\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDF3C-\uDF3E]|\uD806[\uDC3B\uDD44-\uDD46\uDDE2\uDE3F-\uDE46\uDE9A-\uDE9C\uDE9E-\uDEA2]|\uD807[\uDC41-\uDC45\uDC70\uDC71\uDEF7\uDEF8\uDFFF]|\uD809[\uDC70-\uDC74]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3B\uDF44]|\uD81B[\uDE97-\uDE9A\uDFE2]|\uD82F\uDC9F|\uD836[\uDE87-\uDE8B]|\uD83A[\uDD5E\uDD5F])*$/,at=/^[a-z\u00C0-\u00ff]+$/;e.default=nt;}]).default;});
  });

  var RiTa = /*@__PURE__*/getDefaultExportFromCjs(rita);

  function extractIpa(word) {
    return arpabetToIpa(RiTa.analyze(word) || word);
  } // export function convertToPastTense (sentence: string) {
  //   const basics: Record<string, string> = {
  //     is: 'was',
  //     are: 'were',
  //     has: 'had',
  //     have: 'had'
  //   }
  //   const output: string[] = []
  //   const tokens: string[] = RiTa.tokenize(sentence)
  //   for (const word of tokens) {
  //     if (basics[word]) {
  //       output.push(basics[word])
  //     } else if (RiTa.isVerb(word)) {
  //       output.push(
  //         RiTa.pastPart(
  //           RiTa.singularize(word)))
  //     } else {
  //       output.push(word)
  //     }
  //   }
  //   return RiTa.untokenize(output)
  // }

  function arpabetToIpa(analyze) {
    // const ipaSounds = {
    //   'ɑ': {
    //     examples: ['fast, car, hard, bath'],
    //     type: ''
    //   },
    //   'ɔ': {
    //     examples: ['talk, law, bored, yawn, jaw'],
    //     type: ''
    //   },
    //   'ɚ': {
    //     examples: ['hearse, assert, mirth'],
    //     type: ''
    //   },
    //   'ɝ': {
    //     examples: ['hearse, assert, mirth'],
    //     type: ''
    //   },
    //   'ɨ': {
    //     examples: ['the weak vowel heard in the second syllable of roses'],
    //     type: ''
    //   },
    //   // 'ʉ': {
    //   //   examples: [],
    //   //   type: ''
    //   // },
    //   // 'ɾ': {
    //   //   examples: [],
    //   //   type: ''
    //   // },
    //   // 'l̩': {
    //   //   examples: [],
    //   //   type: ''
    //   // },
    //   // 'm̩': {
    //   //   examples: [],
    //   //   type: ''
    //   // },
    //   // 'n̩': {
    //   //   examples: [],
    //   //   type: ''
    //   // },
    //   // 'ɾ̃': {
    //   //   examples: [],
    //   //   type: ''
    //   // },
    //   // 'ɹ': {
    //   //   examples: [],
    //   //   type: ''
    //   // },
    //   // 'ʍ': {
    //   //   examples: [],
    //   //   type: ''
    //   // },
    //   'ɪə': {
    //     examples: ['ear', 'clear', 'tear', 'beer', 'fear'],
    //     type: ' '
    //   },
    //   'eə': {
    //     examples: ['there', 'care', 'stairs', 'pear'],
    //     type: ' '
    //   },
    //   'əʊ': {
    //     examples: ['no', 'don’t', 'stones', 'alone', 'hole'],
    //     type: ' '
    //   },
    //   'g': {
    //     examples: ['girl', 'green', 'grass', 'flag'],
    //     type: ' '
    //   },
    //   'ʈʃ': {
    //     examples: ['choose', 'cheese', 'church', 'watch'],
    //     type: ' '
    //   },
    //   'ɫ': {
    //     examples: ['law', 'lots', 'leap', 'long', 'pill', 'cold', 'chill', 'melt'],
    //     type: ' '
    //   },
    //   'b': {
    //     examples: ['buy', 'cab'],
    //     type: 'Consonants'
    //   },
    //   'd': {
    //     examples: ['dye', 'cad', 'do'],
    //     type: 'Consonants'
    //   },
    //   'ð': {
    //     examples: ['thy', 'breathe', 'those', 'brothers', 'others', 'father'],
    //     type: 'Consonants'
    //   },
    //   'dʒ': {
    //     examples: ['giant', 'badge', 'jam'],
    //     type: 'Consonants'
    //   },
    //   'f': {
    //     examples: ['fan', 'caff', 'phi'],
    //     type: 'Consonants'
    //   },
    //   'ɡ': {
    //     examples: ['guy', 'bag'],
    //     type: 'Consonants'
    //   },
    //   'h': {
    //     examples: ['high', 'ahead'],
    //     type: 'Consonants'
    //   },
    //   'hw': {
    //     examples: ['why'],
    //     type: 'Consonants'
    //   },
    //   'j': {
    //     examples: ['yes', 'hallelujah'],
    //     type: 'Consonants'
    //   },
    //   'k': {
    //     examples: ['sky', 'crack'],
    //     type: 'Consonants'
    //   },
    //   'l': {
    //     examples: ['lie', 'sly', 'gal'],
    //     type: 'Consonants'
    //   },
    //   'm': {
    //     examples: ['my', 'smile', 'cam'],
    //     type: 'Consonants'
    //   },
    //   'n': {
    //     examples: ['nigh', 'snide', 'can'],
    //     type: 'Consonants'
    //   },
    //   'ŋ': {
    //     examples: ['sang', 'sink', 'singer'],
    //     type: 'Consonants'
    //   },
    //   'θ': {
    //     examples: ['thigh', 'math'],
    //     type: 'Consonants'
    //   },
    //   'p': {
    //     examples: ['pie', 'spy', 'cap'],
    //     type: 'Consonants'
    //   },
    //   'r': {
    //     examples: ['rye', 'try', 'very'],
    //     type: 'Consonants'
    //   },
    //   's': {
    //     examples: ['sigh', 'mass'],
    //     type: 'Consonants'
    //   },
    //   'ʃ': {
    //     examples: ['shy', 'cash', 'emotion'],
    //     type: 'Consonants'
    //   },
    //   't': {
    //     examples: ['tie', 'sty', 'cat', 'atom'],
    //     type: 'Consonants'
    //   },
    //   'tʃ': {
    //     examples: ['china', 'catch'],
    //     type: 'Consonants'
    //   },
    //   'v': {
    //     examples: ['vie', 'have'],
    //     type: 'Consonants'
    //   },
    //   'w': {
    //     examples: ['wye', 'swine'],
    //     type: 'Consonants'
    //   },
    //   'z': {
    //     examples: ['zoo', 'has'],
    //     type: 'Consonants'
    //   },
    //   'ʒ': {
    //     examples: ['equation', 'pleasure', 'vision', 'beige'],
    //     type: 'Consonants'
    //   },
    //   'x': {
    //     examples: ['ugh', 'loch', 'Chanukah'],
    //     type: 'Marginal consonants'
    //   },
    //   'ʔ': {
    //     examples: ['uh-oh /ˈʔʌʔoʊ/'],
    //     type: 'Marginal consonants'
    //   },
    //   '˜': {
    //     examples: ['bon vivant /ˌbɒ̃ viːˈvɒ̃/'],
    //     type: 'Marginal consonants'
    //   },
    //   'ɑː': {
    //     examples: ['palm', 'father', 'bra'],
    //     type: 'Full vowels'
    //   },
    //   'ɒ': {
    //     examples: ['lot', 'pod', 'John'],
    //     type: 'Full vowels'
    //   },
    //   'æ': {
    //     examples: ['trap', 'pad', 'ban'],
    //     type: 'Full vowels'
    //   },
    //   'aɪ': {
    //     examples: ['price', 'ride', 'file', 'fine', 'pie'],
    //     type: 'Full vowels'
    //   },
    //   'aʊ': {
    //     examples: ['mouth', 'loud', 'foul', 'down', 'how'],
    //     type: 'Full vowels'
    //   },
    //   'ɛ': {
    //     examples: ['dress', 'bet', 'fell', 'men'],
    //     type: 'Full vowels'
    //   },
    //   'eɪ': {
    //     examples: ['face', 'made', 'fail', 'vein', 'pay'],
    //     type: 'Full vowels'
    //   },
    //   'ɪ': {
    //     examples: ['kit', 'lid', 'fill', 'bin'],
    //     type: 'Full vowels'
    //   },
    //   'iː': {
    //     examples: ['fleece', 'seed', 'feel', 'mean', 'sea'],
    //     type: 'Full vowels'
    //   },
    //   'ɔː': {
    //     examples: ['thought', 'Maud', 'dawn', 'fall', 'straw'],
    //     type: 'Full vowels'
    //   },
    //   'ɔɪ': {
    //     examples: ['choice', 'void', 'foil', 'coin', 'boy'],
    //     type: 'Full vowels'
    //   },
    //   'oʊ': {
    //     examples: ['goat', 'code', 'foal', 'bone', 'go'],
    //     type: 'Full vowels'
    //   },
    //   'ʊ': {
    //     examples: ['foot', 'good', 'full', 'woman'],
    //     type: 'Full vowels'
    //   },
    //   'uː': {
    //     examples: ['goose', 'food', 'fool', 'soon', 'chew', 'do'],
    //     type: 'Full vowels'
    //   },
    //   'juː': {
    //     examples: ['cute', 'mule', 'puny', 'beauty', 'huge', 'you', 'tune'],
    //     type: 'Full vowels'
    //   },
    //   'ʌ': {
    //     examples: ['strut', 'bud', 'dull', 'gun'],
    //     type: 'Full vowels'
    //   },
    //   'ɑːr': {
    //     examples: ['start', 'bard', 'barn', 'snarl', 'star'],
    //     type: 'Full vowels followed by R'
    //   },
    //   'ɒr': {
    //     examples: ['rob', 'top', 'watch', 'squat', 'moral', 'forage'],
    //     type: 'Full vowels followed by R'
    //   },
    //   'ær': {
    //     examples: ['barrow', 'marry'],
    //     type: 'Full vowels followed by R'
    //   },
    //   'aɪər': {
    //     examples: ['ireland', 'hire (= /aɪr/)'],
    //     type: 'Full vowels followed by R'
    //   },
    //   'aɪ.ər': {
    //     examples: ['higher', 'buyer'],
    //     type: 'Full vowels followed by R'
    //   },
    //   'aʊər': {
    //     examples: ['flour (= /aʊr/)'],
    //     type: 'Full vowels followed by R'
    //   },
    //   'aʊ.ər': {
    //     examples: ['flower'],
    //     type: 'Full vowels followed by R'
    //   },
    //   'ɛr': {
    //     examples: ['error', 'merry'],
    //     type: 'Full vowels followed by R'
    //   },
    //   'ɛər': {
    //     examples: ['square', 'mare', 'scarce', 'cairn', 'Mary (= /eɪr/)'],
    //     type: 'Full vowels followed by R'
    //   },
    //   'eɪ.ər': {
    //     examples: ['layer (one who lays)'],
    //     type: 'Full vowels followed by R'
    //   },
    //   'ɪr': {
    //     examples: ['mirror', 'Sirius'],
    //     type: 'Full vowels followed by R'
    //   },
    //   'ɪər': {
    //     examples: ['near', 'beard', 'fierce', 'serious (= /iːr/)'],
    //     type: 'Full vowels followed by R'
    //   },
    //   'iː.ər': {
    //     examples: ['freer'],
    //     type: 'Full vowels followed by R'
    //   },
    //   'ɔːr': {
    //     examples: ['north', 'born', 'war', 'Laura'],
    //     type: 'Full vowels followed by R'
    //   },
    //   'ɔː.ər': {
    //     examples: ['sawer'],
    //     type: 'Full vowels followed by R'
    //   },
    //   'ɔɪər': {
    //     examples: ['coir (= /ɔɪr/)'],
    //     type: 'Full vowels followed by R'
    //   },
    //   'ɔɪ.ər': {
    //     examples: ['employer'],
    //     type: 'Full vowels followed by R'
    //   },
    //   'ɔər': {
    //     examples: ['force', 'more', 'boar', 'oral (= /oʊr/)'],
    //     type: 'Full vowels followed by R'
    //   },
    //   'oʊ.ər': {
    //     examples: ['mower'],
    //     type: 'Full vowels followed by R'
    //   },
    //   'ʊr': {
    //     examples: ['courier'],
    //     type: 'Full vowels followed by R'
    //   },
    //   'ʊər': {
    //     examples: ['boor', 'moor', 'tourist (= /uːr/)'],
    //     type: 'Full vowels followed by R'
    //   },
    //   'uː.ər': {
    //     examples: ['truer'],
    //     type: 'Full vowels followed by R'
    //   },
    //   'jʊər': {
    //     examples: ['cure (= /juːr/)'],
    //     type: 'Full vowels followed by R'
    //   },
    //   'juː.ər': {
    //     examples: ['fewer'],
    //     type: 'Full vowels followed by R'
    //   },
    //   'ɜː': {
    //     examples: ['nurse', 'word', 'girl', 'fern', 'furry'],
    //     type: 'Full vowels followed by R'
    //   },
    //   'ʌr': {
    //     examples: ['hurry', 'nourish (in the UK)'],
    //     type: 'Full vowels followed by R'
    //   },
    //   'ə': {
    //     examples: ['comma', 'Rosa’s', 'ago', 'quiet', 'focus'],
    //     type: 'Reduced vowels'
    //   },
    //   'i': {
    //     examples: ['happy', 'serious[24] (either /ɪ/ or /iː/)'],
    //     type: 'Reduced vowels'
    //   },
    //   'ᵻ': {
    //     examples: ['roses', 'enough[26] (either /ɪ/ or /ə/)'],
    //     type: 'Reduced vowels'
    //   },
    //   'ər': {
    //     examples: ['letter', 'perceive'],
    //     type: 'Reduced vowels'
    //   },
    //   'əl': {
    //     examples: ['bottle (either [əl] or [l̩])'],
    //     type: 'Reduced vowels'
    //   },
    //   'ən': {
    //     examples: ['button (either [ən] or [n̩])'],
    //     type: 'Reduced vowels'
    //   },
    //   'əm': {
    //     examples: ['rhythm (either [əm] or [m̩])'],
    //     type: 'Reduced vowels'
    //   },
    //   'u': {
    //     examples: ['situation (either /ʊ/ or /uː/)'],
    //     type: 'Reduced vowels'
    //   },
    //   'ᵿ': {
    //     examples: ['beautiful', 'curriculum ([jᵿ])[27] (either /ʊ/ or /ə/)'],
    //     type: 'Reduced vowels'
    //   },
    //   'ˈ': {
    //     examples: ['intonation /ˌɪntəˈneɪʃən/,'],
    //     type: 'Stress'
    //   },
    //   'ˌ': {
    //     examples: ['battleship /ˈbætəlʃɪp'],
    //     type: 'Stress'
    //   },
    //   '.': {
    //     examples: ['/haɪər/ hire', '/haɪ.ər/ higher'],
    //     type: 'Syllabification'
    //   }
    // }
    const arpabetToIpaTable = {
      AA: 'ɑ',
      AE: 'æ',
      AH: 'ʌ',
      AO: 'ɔ',
      AW: 'aʊ',
      AX: 'ə',
      AXR: 'ɚ',
      AY: 'aɪ',
      EH: 'ɛ',
      ER: 'ɝ',
      EY: 'eɪ',
      IH: 'ɪ',
      IX: 'ɨ',
      IY: 'i',
      OW: 'oʊ',
      OY: 'ɔɪ',
      UH: 'ʊ',
      UW: 'u',
      UX: 'ʉ',
      B: 'b',
      CH: 'tʃ',
      D: 'd',
      DH: 'ð',
      DX: 'ɾ',
      EL: 'l̩',
      EM: 'm̩',
      EN: 'n̩',
      F: 'f',
      G: 'ɡ',
      HH: 'h',
      JH: 'dʒ',
      K: 'k',
      L: 'l',
      M: 'm',
      N: 'n',
      NG: 'ŋ',
      NX: 'ɾ̃',
      P: 'p',
      Q: 'ʔ',
      R: 'ɹ',
      S: 's',
      SH: 'ʃ',
      T: 't',
      TH: 'θ',
      V: 'v',
      W: 'w',
      WH: 'ʍ',
      Y: 'j',
      Z: 'z',
      ZH: 'ʒ'
    };
    const arrayOfWords = analyze.phones.split(' ');
    let resultantString = '';

    for (const word of arrayOfWords) {
      const phoneme = word.split('-');

      for (const key of phoneme) {
        resultantString += arpabetToIpaTable[key.toUpperCase()];
      }

      resultantString += ' ';
    } // console.log(arrayOfWords, resultantString)


    return `/${resultantString}/.`;
  }

  const createBadge = (badge, opts) => {
    let url = 'https://img.shields.io';
    Object.assign(badge, opts);
    url += encodeURI(badge.source || '/badge/');

    if (!badge.source) {
      url += encodeURI(`${badge.label}-`);
      url += encodeURI(`${badge.message}-`);
      url += encodeURI(`${badge.color || 'blue'}`);
    } else {
      if (badge.label) url += encodeURI(`?label=${badge.label}`);
    } // ? url += '&' : url += '?'


    if (url.includes('endpoint') || url.includes('?label=')) {
      url += '&';
    } else {
      url += '?';
    }

    url += encodeURI(`style=${badge.style || 'for-the-badge'}`);
    if (badge.source) url += encodeURI(`&color=${badge.color}`);
    if (badge.logo) url += encodeURI(`&logo=${badge.logo}`);
    if (badge.logoWidth) url += encodeURI(`&logoWidth=${badge.logoWidth}`);
    if (badge.labelColor) url += encodeURI(`&labelColor=${badge.labelColor}`);
    const alt = badge.alt || `${badge.label} ${badge.message}` || 'A fun badge';
    let img = `<img alt="${alt}" `;
    if (badge.imgArgs) img += badge.imgArgs;
    img += ` src="${url}">`;
    if (badge.link) return `<a href="${badge.link}" target="_blank">${img}</a>`;
    return img;
  };
  const badges = {
    sensible: [{
      label: 'Coded in',
      message: 'VSCode',
      logo: 'visual-studio-code'
    }, {
      label: 'Linting by',
      message: 'ESLint',
      logo: 'ESLint'
    }, {
      label: 'Uses',
      message: 'TypeScript',
      logo: 'typescript'
    }, {
      label: 'Uses',
      message: 'Google Domains',
      logo: 'Google Domains'
    }, {
      label: 'Sponsor',
      message: 'on GitHub',
      logo: 'Github Sponsors',
      link: 'https://github.com/sponsors/ryceg'
    }, {
      label: 'Buy me',
      message: 'a coffee',
      logo: 'ko-fi',
      link: 'https://ko-fi.com/eigengrausgenerator'
    }, {
      label: 'Follow on',
      message: 'Reddit',
      logo: 'reddit',
      link: 'https://reddit.com/r/eigengrausgenerator'
    }, {
      label: 'Errors by',
      message: 'Sentry',
      logo: 'sentry'
    }],
    fun: [{
      label: 'Made with',
      message: 'real babies',
      color: 'pink'
    }, {
      label: 'Ctrl + C',
      message: 'Ctrl + V'
    }, {
      label: 'Contains',
      message: 'spaghetti code'
    }, {
      label: 'Contains',
      message: 'technical debt'
    }, {
      label: 'Designed in',
      message: 'MS Paint'
    }, {
      label: 'Contains',
      message: 'tree nuts'
    }, {
      label: 'Roll',
      message: 'initiative'
    }, {
      label: 'Roll',
      message: 'to seduce',
      logo: 'tinder',
      color: 'FF6B6B'
    }, {
      label: 'No added',
      message: 'PHP',
      logo: 'php'
    }, {
      label: 'A wizard',
      message: 'did it'
    }, {
      label: 'Boblin',
      message: 'the goblin'
    }, {
      label: 'Just works.',
      message: 'Barely.'
    }, {
      label: 'Heal me',
      message: 'please',
      color: 'pink'
    }, {
      label: 'murder',
      message: 'hobo'
    }, {
      label: 'I have',
      message: 'Darkvision'
    }, {
      label: 'Works on',
      message: 'my machine'
    }, {
      label: 'Bring back',
      message: 'Club Penguin'
    }, {
      label: 'how do you want to',
      message: 'do this'
    }, {
      label: 'Cool motive.',
      message: 'Still murder.'
    }, {
      label: "I'm chaotic",
      message: 'stupid'
    }, {
      label: 'Clickety clackety',
      message: 'roll to attackety'
    }, {
      label: "The poor man's",
      message: 'AI Dungeon',
      logo: 'AI Dungeon' // link: 'https://play.aidungeon.io/'

    }, {
      label: 'No Brain',
      message: 'Required'
    }, {
      label: 'I Cast',
      message: 'Fireball',
      color: 'red'
    }, {
      label: 'Do we',
      message: 'level up yet',
      color: 'green'
    }],
    stats: {
      discordOnline: {
        alt: 'Currently online in Discord',
        label: 'Discord',
        source: '/discord/441105601918009349',
        logo: 'Discord',
        link: 'https://discord.gg/A543VC5',
        color: '7289da',
        labelColor: '2c2f33'
      },
      patreonSupporters: {
        alt: 'Number of patrons currently supporting me',
        link: 'https://patreon.com/join/eigengrausgenerator',
        labelColor: '052d49',
        color: 'f96854',
        source: '/endpoint.svg?url=https://shieldsio-patreon.vercel.app/api?username=eigengrausgenerator'
      },
      subredditSubscribers: {
        alt: 'Subreddit subscribers',
        source: '/reddit/subreddit-subscribers/eigengrausgenerator',
        link: 'https://reddit.com/r/eigengrausgenerator',
        logo: 'reddit',
        color: 'FF5700'
      },
      githubStars: {
        alt: 'GitHub stars',
        label: 'GitHub Stars',
        source: '/github/stars/ryceg/Eigengrau-s-Essential-Establishment-Generator',
        logo: 'github',
        color: '6cc644'
      },
      githubForks: {
        alt: 'GitHub forks',
        label: 'GitHub Forks',
        source: '/github/forks/ryceg/Eigengrau-s-Essential-Establishment-Generator',
        logo: 'github',
        color: '6cc644'
      },
      githubContributors: {
        alt: 'GitHub Contributors',
        source: '/github/contributors/ryceg/Eigengrau-s-Essential-Establishment-Generator',
        logo: 'github',
        link: 'https://github.com/ryceg/Eigengrau-s-Essential-Establishment-Generator/graphs/contributors',
        color: '6cc644'
      },
      commitsSinceLastUpdate: {
        alt: 'Commits since last update',
        source: '/github/commits-since/ryceg/Eigengrau-s-Essential-Establishment-Generator/2.8',
        logo: 'github',
        color: '6cc644'
      },
      monthlyActivity: {
        alt: 'Monthly activity',
        source: '/github/commit-activity/m/ryceg/Eigengrau-s-Essential-Establishment-Generator',
        logo: 'github',
        link: 'https://github.com/ryceg/Eigengrau-s-Essential-Establishment-Generator/graphs/code-frequency',
        color: '6cc644'
      },
      timeSinceLastCommit: {
        alt: 'Time since last commit',
        source: '/github/last-commit/ryceg/Eigengrau-s-Essential-Establishment-Generator',
        logo: 'github',
        link: 'https://github.com/ryceg/Eigengrau-s-Essential-Establishment-Generator/network',
        color: '6cc644'
      },
      linesOfCode: {
        alt: 'Lines of code',
        source: '/tokei/lines/github/ryceg/Eigengrau-s-Essential-Establishment-Generator',
        logo: 'github',
        color: '6cc644'
      },
      issues: {
        alt: 'Issues',
        source: '/github/issues/ryceg/Eigengrau-s-Essential-Establishment-Generator',
        link: 'https://github.com/ryceg/Eigengrau-s-Essential-Establishment-Generator/issues',
        logo: 'github',
        color: 'c9510c'
      },
      issuesClosed: {
        alt: 'Issues closed',
        source: '/github/issues-closed/ryceg/Eigengrau-s-Essential-Establishment-Generator',
        link: 'https://github.com/ryceg/Eigengrau-s-Essential-Establishment-Generator/issues?q=is%3Aissue+is%3Aclosed',
        logo: 'github',
        color: '4078c0'
      },
      pullRequestsClosed: {
        alt: 'Pull requests closed',
        source: '/github/issues-pr-closed/ryceg/Eigengrau-s-Essential-Establishment-Generator',
        logo: 'github',
        color: '4078c0'
      }
    }
  };

  var normal = [
  	"A Study of Elementals: Volume 3: Pain and Tolerance of the Elements",
  	"Typhory’s Guide To Abjurations: Rapid Adaptions To Opposing Forces",
  	"Notes of Death and Undeath: Vykathar’s Endeavours in the Unholy",
  	"The Credits of Lightning and Ice: Shifting Plans and their Collisions",
  	"The Basics of Regeneration: Healing in Many instances",
  	"Blood and the Foul Arts: Dark Practices of Necromancy",
  	"Ethereal and Material: infusing Arcane and Steel",
  	"The Warping of Broken Minds: Eteterveil’s Enchanting of the Mad",
  	"The Walls That Won’t Change: Transmutation and the Laws of Exchange",
  	"Magic in War: Scorched Earth and Seared Minds",
  	"Gynthorn’s Research Notes of Arcane Fauna",
  	"The Call of the Void: the Draw of the Yawning Nothing",
  	"Tides of Chaos: Studies of the Broken Flows",
  	"Null Zones: Hythen & Surich’s Research of Anti Magic Zone",
  	"Compulsion: the Forcing of a Mind",
  	"Seeing Beyond the Sight: Illusionary Hallmarks",
  	"A Brief History of the Magically Corrupted Races",
  	"Tyven’s Folly of Illusion and Enchantment influence - Vol. 3",
  	"To Create and Channel, Evocation and Conjuration: a Study of Flows",
  	"Sight Beyond the Realm: Divination Visions of Maliksin",
  	"The Dangers of the Shadow Weave: Arch Mage Quilore’s Secret War",
  	"The Decay of a Soul: a Study of Resurrection - Vol. 5",
  	"A Study of Foci: To Shape Reality Upon the Physical",
  	"A Fragile Balance: Nature and It’s Secrets",
  	"The Findings of the Wyrm Cult of Asrigah",
  	"Eterhen’s Study of Wyvern: the Lesser Dragons",
  	"Ethereal Enchantments of Magical Materials: Gyhaki’s Work",
  	"Blades of Light in the Howling Night: the Angel’s Decent",
  	"The Hungry Abyss: What Lays Beneath Our Fears",
  	"Blue Fire’s Wrath: Spell Plague Anthology",
  	"Power in the Blood: Elven and Other Fey Descendants",
  	"The Mirroring Planes: Fequries Enquiries To the Planes and their Shared Features",
  	"A Walk Within the Dead Light of Cold Suns: Tales From the Old Ones",
  	"The Study of Gems: Kurin’s Geology - Vol. 7",
  	"The Parables of Circles: infinite Lines and Endless Angles. First Prints",
  	"Salt and Chalk: the Mundane Script of the Arcane",
  	"Chasing Echos: insanity From the Mundane",
  	"The Scaled King: Regime of Shadow - Vol. 6",
  	"The Winds of Change: From Empire To Dust. Gnome Chronicles 6",
  	"Chaotic Minds and Iron Wills: Corruption in Golems",
  	"Uses of the Soul: Vol 5: Soul Lightning",
  	"Chi: the Energies of Balance",
  	"Wyfen’s Advance: a One Man Conquest of the Silver Spires",
  	"Tar’tari Tendary: the City of Cosmic Shadows",
  	"Secrets and Riddles of the Weave: Vol 14",
  	"Shadow and Dust: What Rots and Remains",
  	"Fey Unbound: Study of Entrapped Creatures and their Release",
  	"Evil’s Horde: Hugar and Juik’s Notes On Demons",
  	"Asamokology: the Nature of What Is Fake",
  	"Breaking the Cycle: the Written War Against the Gods - Vol. 146",
  	"Losing Yourself To Be One: Mind Flayer and the Hive Mind",
  	"Stone Eyes: the Myth of Aqytorky"
  ];
  var pun = [
  	"How to make Illusions and Charm People",
  	"The Illithid by Homer",
  	"Memoirs of a Genasi",
  	"The 7 Habits of Highly Effective Peasants (The sequel to 'The Hunger Games: a True Story')",
  	"Diary of a Wimpy Kobold",
  	"A Handmaid's Tail: a collection of short stories by notable Tieflings",
  	"Ready Mindflayer One",
  	"Dragon Turtles All the Way Down",
  	"The Lion, the Witch, and the War-forged",
  	"Gone with the Healing Wind",
  	"To Kill a Manticore",
  	"Planar-shifting for People in a Hurry",
  	"One Flew Over the Kenku's Nest",
  	"The Brothers Dragonbornov",
  	"For Whom the Behir Tolls",
  	"The Power of Mimics: Why Certain Encounters Have Extraordinary Impact",
  	"The Wizard of Ooze",
  	"Fight. Club. - A Comprehensive Guide for Barbarians",
  	"The Secret Life of Bards",
  	"The Giving Treant",
  	"Alice's Adventures in the Underdark",
  	"50 Shades of Fey",
  	"Sense Motive and Sensability",
  	"As I Lay at Zero Hit Points",
  	"Great Incantations",
  	"The Amityville Hook Horror",
  	"Dante's Infernal",
  	"The Girl with the Dragonborn Tattoo",
  	"Lolth's Web",
  	"Satyrs and Sensibility",
  	"Pride and Prestidigitation",
  	"The Constant Scrivener",
  	"The Left Hand Casts Darkness",
  	"The Cockatrice in the Rye",
  	"One Thousand and One Knights",
  	"The Grapes of Wraith: Wining and Dining the Undead",
  	"The Adventures of Nancy Druid"
  ];
  var jsonData$3 = {
  	normal: normal,
  	pun: pun
  };

  const books = jsonData$3;

  const MIN = 1;
  const MAX = 100;
  /**
   * Clamps every value presented to the 1-100 range.
   * Most useful for rolls.
   */

  function clampRolls(rolls) {
    for (const roll of keys(rolls)) {
      if (rolls[roll] < MIN) {
        console.log(`${rolls[roll]} was under ${MIN}.`);
        rolls[roll] = MIN;
        continue;
      }

      if (rolls[roll] > MAX) {
        console.log(`${rolls[roll]} was over ${MAX}.`);
        rolls[roll] = MAX;
      }
    }
  }

  /**
   * This is the function used to handle random encounters.
   * It needs a lot of work, and will change.
   */
  function contentsFetcher(keyTarget, contentsTarget) {
    const key = Array.isArray(keyTarget) ? random(keyTarget) : keyTarget;
    const value = contentsTarget.find(({
      summary
    }) => summary === key);

    if (value == null) {
      // Return a debuggable message instead of throwing.
      return (_, biome) => {
        const result = `!!INVALID[ ${biome} ${key} ${value} ]!!`;
        console.error(result);
        return result;
      };
    }

    if (typeof value.function === 'function') {
      return value.function;
    }

    return () => value.summary;
  }

  function createAlchemy(base) {
    const type = ['alchemical ingredient', 'body part', 'substance', 'preserved herb', 'brewing potion', 'potion'];
    const smallThing = ['bats', 'bees', 'beetles', 'blossoms', 'flowers', 'brains', 'cats', 'centipedes', 'crabs', 'dragonflies', 'earwigs', 'eels', 'eels', 'feathers', 'frogs', 'gallstones', 'geckos', 'hornets', 'imps', 'jellyfish', 'lamprey', 'leeches', 'locusts', 'mice', 'mold', 'lichen', 'moths', 'mushrooms', 'truffles', 'newts', 'octopus-creatures', 'ooze-globules', 'piranha', 'praying mantises', 'rats', 'roaches', 'scarab beetles', 'shrews', 'slugs', 'snails', 'snakes', 'songbirds', 'spiders', 'stinkbugs', 'tapeworms', 'tentacles', 'ticks', 'toads', 'turtles', 'vines', 'wasps', 'worms'];
    const preservationMethod = ['distilled', 'dried', 'ground-up', 'jellied', 'pickled', 'powdered', 'smoked', 'salt-cured', 'smoke-cured', 'stewed'];
    const bodyPart = ['ankle-bone', 'bladder', 'blood', 'brain', 'dung', 'ears', 'entrails', 'eye', 'face', 'finger', 'fingernail', 'foot', 'gallstone', 'hair', 'hand', 'heart', 'intestine', 'kidney', 'kidney stone', 'knee bone', 'knuckle bone', 'liver', 'lung', 'rib', 'shin-bone', 'skin', 'skin', 'skin', 'skull', 'spittle', 'stomach', 'teeth', 'teeth', 'thumbs', 'toenail', 'tongue', 'tongue'];
    const bodyPartOrigin = ['beggar', 'beautiful woman', 'addict', 'accused man', 'assassin', 'artisan', 'barber', 'barbarian', 'cuckold', 'witch', 'wizard', 'warlock', 'priest', 'thief', 'pauper', 'cheat', 'scammer', 'crook', 'pirate', 'princess', 'torturer', 'prisoner', 'rebel', 'traitor', 'traitor', 'coward', 'coward'];
    const herb = ['bloodgrass', 'chromus slime', 'ephedra', 'emetic wax', 'fennel silk', 'gengko bush', 'hyacinth nectar', 'lavender sprigs', 'mandrake root', 'wild sageroot', 'arctic creeper', 'amanita cap', 'basilisk breath', 'cactus juice', 'drakus flower', 'harrada leaf', 'quicksilver lichen', 'radiant synthseed', 'spineflower berries', 'wyrmtongue petals', 'arrow root', 'blue toadshade', 'cosmos glond', "Devil's bloodleaf", "fiend's ivy", 'hydrathistle', 'ironwood heart', 'luminous cap dust', 'mortflesh powder', 'nightshade berries', 'primordial balm', 'rock vine', 'scilia beans', 'silver hibiscus', 'tail leaf', 'verdant nettle', 'voidroot', 'wispstalks', 'wrackwort bulbs'];
    const herbPreservation = ['distilled liquid of', 'essence of', 'oil of', 'paste made from', 'pickled', 'powdered', 'dried', 'preserved'];
    const substanceForm = ['chips', 'cubes', 'disks', 'flakes', 'granules', 'gravel', 'chunks', 'nuggets', 'pebbles', 'polyhedrons', 'powder', 'rocks', 'sequins', 'small cylinders', 'wire'];
    const substanceType = ['amber', 'brimstone', 'bronze', 'brass', 'chitin', 'coal', 'emerald', 'ruby', 'sapphire', 'incense', 'iron', 'steel', 'obsidion', 'turquoise', 'opal', 'jade', 'pearl', 'rust', 'salt'];
    const liquidTitle = ['potion', 'elixir', 'draught', 'vial', 'philter', 'tonic', 'brew', 'ichor', 'juice', 'concoction'];
    const potionPurpose = ['love potion', 'fertility tonic', 'magical cure-all', 'terrible poison', 'component for a summoning ritual', 'component for a necromantic ritual', 'component for a polymorphing hex', 'component for a beguiling charm', 'potent acid solvent', 'potentially explosive substance', 'substitute for alcohol', 'substitute for drugs', 'substitute for food', 'substitute for animal feed'];
    const potionContainer = ['conical smooth glass bottle', 'square glass bottle', 'not quite watertight leather waterskin', 'stone flask', 'metal thermos', 'glass syringe', 'small medical vial', 'small shot sized bottle', 'large metal bottle', 'capped horn', 'rather decorative glass bottle', 'geometric diamond shaped bottle', 'translucent long wine bottle', 'translucent beer bottle', 'leather pouch', 'spray bottle', 'coloured bottle', 'bone flask', 'small metal vial', 'large bottle that can be swigged several times'];
    const vesselDescriptor = ['delicate', 'tiny', 'heavy-bottomed', 'thick', 'grimy', 'polished', 'shiny', 'blackened', 'well-worn', 'round-bottomed', 'quite large', 'comically large'];
    const vesselMaterial = ['ceramic', 'iron', 'copper', 'steel', 'bronze', 'glass', 'glass'];
    const vesselType = ['tea kettle', 'cauldron', 'vat', 'flask with an oddly shaped neck', 'flask', 'pot', 'saucepan'];
    const liquidColour = ['clear', 'blue', 'green', 'red', 'pale green', 'pink', 'light blue', 'white', 'black', 'dark grey', 'light grey', 'yellow', 'orange', 'gold', 'orange', 'bronze', 'metallic', 'purple', 'brown', 'dark red'];
    const liquidSecondary = ['flecks of colour', 'swirls of colour', 'fizzing bubbles', 'bubbles suspended in it', 'some kind of bone floating in it', 'leaves and flowers in it', 'two separating liquid', 'a bright glow', 'a soft glow', 'stripes of colour', 'translucency', 'a cloudy murkiness', 'blood within it', 'dirt floating in it', 'chunks of metal in it', 'some type of gore from a slain creature', 'steam coming from it', 'a face in the liquid', 'constantly moving and shifting liquid', 'a constant heat'];
    const liquidTexture = ['thick and sludgy', 'thin and watery', 'airy and bubbly', 'slimey', 'almost solid', 'oily', 'chunky', 'bitty', 'milky', 'almost gaseous'];
    const smell = ['nothing at all', 'sulphur', 'fresh air', 'baking cookies', 'flowers', 'rotting meat', 'egg', 'rotten eggs', 'fresh bread', 'blood', 'home', 'vomit', 'garlic', 'fruit', 'chocolate', 'beer', 'smoke', 'wood', 'death', 'orc', 'wet dog', 'wet goblin', 'perfume', 'cheap perfume', 'musk', 'garbage', 'sand', 'the forest', 'nuts', 'acid', 'spicy things', 'mint', 'chemicals', 'dirt', 'something bad flavoured to taste better', 'alcohol', 'sugar', 'a damp cave', 'strange', 'something indescribable but nice', 'something indescribable but horrid', 'rain', 'medical equipment', 'bacon', 'coffee', 'cut grass', 'vanilla', 'the sea', 'roast meat', 'festive', 'lavender', 'lilac and gooseberries', 'a fresh baby', 'a new axe', 'citrus', 'leather', 'metal', 'a forge', 'fresh cake', 'paint', 'wine', 'polish', 'cheese', 'fish', 'compost', 'the sewers', 'apples', 'holy oils', 'massage oil', 'a brothel', 'old fruit', 'roses', 'something that stirs memories', 'gingerbread', 'cinnamon', 'candy', 'fumes', 'bark', 'chicken', 'beef', 'human flesh', 'gunpowder', 'a storm', 'success', 'gold', 'mayonnaise', 'barbeque', 'salt', 'pepper', 'aromatic spices', 'fruit punch', 'water', 'fresh water', 'stagnant water', 'mud', 'a colour', 'music', 'the end of the world', 'the worst, most terrible thing ever', 'magically the most desirable thing to you'];
    const potionLabel = ['its name and title in bold letters', 'its description in ornate elvish', 'its description in elvish with a relevant mythic story', 'its description on dwarven', 'Dwarven runes', 'its description in gnomish', 'Gnomish diagrams for its use', 'the words USE ONLY IN EMERGANCIES scrawled on it', 'a mass produced label claiming the company has no fault for any side effects', 'a mass produced label saying that it’s a new flavour', 'very tiny print describing how the potion was made in great detail, around 1000 words', 'its name in Bold words in Giant', 'is scrawled off', 'has faded beyond reading', 'has been scraped off', 'its description and a random fact', 'its description and a small compliment to make your day better', 'its description and a joke', 'its description in infernal', 'its description in some ancient language', 'all in some kind of symbols', 'all in some kind of raised symbols for the blind to read', 'its description in elemental languages', 'its name and flavour', 'its name with a warning about side effects', 'its name and its recommended buying price', 'bloody prints all over it', 'name engraved into the container', 'its name glowing with minor magic', 'a cartoony mascot', 'a warning of an ancient curse', 'its name and description in invisible ink', 'its description in draconic', 'several different names and descriptions plastered over each other', 'a name of a completely different potion to what it does', 'a title describing the exact opposite', 'a money back guarantee', 'a coupon for a free potion', 'a living face looking around', 'its name and recipe for other alchemists', 'a heartfelt love letter for someone', 'a heartfelt hate letter for someone', 'a persons name', "the potion won't work unless asked by its name to do so", 'a strange prophecy', 'a small doodle', 'a note saying DO NOT DRINK', 'a passive aggressive note about other people drinking potions that do not belong to them', 'brightly glowing letters', "that plays a very quiet sing song 'till the bottle is empty", 'ornate and beautiful designs', 'very practical designs', 'holy symbols', 'unholy symbols', 'Fey symbols and Sylvan writing', 'a riddle, the lid not opening unless the riddle is solved', 'saying its designed for babies', 'saying that it shouldn’t be drank by anyone under 18', 'a note saying it is illegal contraband being confiscated', 'a note saying the alchemist thinks it is its greatest work', 'a note saying the alchemist is sorry for ever creating it', 'a note saying that it never should have been made and copius blood stains over the bottle', 'it says you’re being watched', 'its description in Druidic', 'its description in Orcish', 'its description in Goblin', 'its description in Halfling', 'its description in Celestial', 'its description in Undercommon', 'its description in Deep speech', 'its description in strange arcane symbols', 'a map of where the potion was made', 'a small puzzle for kids', 'a list of ingredients in their chemical forms', 'a list of possible side effects as long as the bottle is', 'a red X', 'a sad face', 'an angry face', 'a happy face', 'a healing symbol', 'a cheesy pun potion name', 'growing with vines', 'growing with flowers', 'growing with crystals', 'growing with rock', 'shamanistic symbols and shavings', 'no words just a single colour', 'water damaged but a just barely legible label', 'a label as if it was some kind of present', 'a label showing how many calories it is', 'a warning about potion abuse and to only take in moderation', 'a label with warnings and side effects all scribbled out', 'that only shows the side effects', 'a mysterious number- print random(0, 100)', 'a code name', 'a few unrelated letters', 'the name of one of the party members', 'the name of the bad guy', 'crawling with bugs', 'covered in something unspeakable', 'covered in glitter. It gets everywhere'];
    const potionSideEffect = ['nothing bad at all', 'puts the user to sleep', 'rapid hair growth all over the body', 'bleeding from the eyes', 'vivid hallucinations', 'flashbacks of your own eventual demise', 'the skin to crack and appear distorted', 'spots to grow on the skin', 'diarrhoea', 'vomiting', 'blurred vision', 'blindness', 'deafness', 'mutism', 'health loss via rapid bleeding', 'a sudden horrific accent', 'the irresistible urge to dance', 'the hearing of demons', 'loss of balance', 'everything tasting like dirt for some time', 'excessive drooling', 'loss of intelligence', 'loss of strength', 'loss of speed', 'loss of charisma', 'genuine happiness', 'hunger', 'thirst', 'trouble breathing', 'sudden moustache', 'poisoning', 'petrification', 'stunning', 'immobilisation', 'increased libido', 'fidgeting', 'itchiness', 'rashes', 'attracting bears', 'magically being covered in dirt', 'a horrifying stench', 'baldness', 'swelling', 'loss of a random item', 'curses', '1d8 damage', "weakness to <<print ['shocking', 'fire', 'ice', 'the opposite sex'].random()>>", 'weakness to physical damage', 'feelings of guilt', 'feelings of anxiety', 'feelings of shame', 'sneezing', 'uncontrollable crying', 'need to sing heroic music', 'urge to hug', 'kleptomania', 'burping', 'loss of smell', 'insomnia', 'paranoia', 'bad luck', 'summoning imps that want to kill you', 'summoning angry bees', 'fear of something', 'temporary madness', 'relaxation', 'the appreciation of colours and sound', 'tripping the hell out', 'painful lust', 'light headedness', 'increased confidence', 'recklessness', 'rage', 'sadness', 'dizziness', 'pain', 'slight possession', 'an allergic reaction to your favourite food', 'a strong belief that you are someone else', 'severe debt', 'grumpiness', 'muscle spasms', 'a bloated feeling', 'a cold', 'a fever', 'becoming strangely light', 'weakness', 'the urge to fight', 'the need to make friends', 'nausea', 'mood swings', 'addiction', 'the need for booze', 'drunkeness', 'coughing', 'uncontrollable babbling', 'slight aches', 'a bad taste for some time', 'giddiness', 'laughter'];
    const potionStrength = ['regular with no side effect', 'regular with a slight side effect', 'regular with a strong side effect', 'minor with a strong side effect', 'minor with a slight side effect', 'major with a strong side effect', 'major with a small side effect', 'poisonous. Almost no positive effect and is all side effect', 'temporary, but strong and wears off quickly', 'seemingly permanent'];
    const potionTitle = ['Healing', 'Vigor', 'Vitality', 'Might', 'Courage', 'Giant Strength', 'Flame Resistance', 'Cold Resistance', 'Necro Resistance', 'Radiant Resistance', 'Stoneskin', 'Acid Resistance', 'Lightning Resistance', 'Succubus Charm', 'Shielding', 'Flame Breath', 'Growth', 'Shrinking', 'Comprehension', 'Fertility', 'Intimidation', 'Luck', 'Mana', 'Arcane', 'Animal form', 'Dreams', 'Nightmares', 'Stamina', 'Fleet foot', 'Knowledge', 'The Bard', 'Disguise', 'Feast', 'Youth', 'Age', 'Furnace', 'Eagle Sight', 'Health', 'Invulnerability', 'Riddle me gone', 'Horrifying appearance', 'Beautiful appearance', 'Swordsmanship', 'Bowmanship', 'Nymph breath', 'Midas', 'Berserker', 'Utter Hatred', 'Oracle', 'Demonic Leech', 'Fey Nature', 'Tracelessness', 'Gracefulness', 'Goblin Climb', 'Dead Ringer', 'One Leafed Clover', 'Possession', 'Owls Wake', 'Hawks Flight', 'Peace', 'Rejuvenation', 'Sphinxes Truth', 'Serpent Tongue', 'Navigation', 'Hook Horror', 'Schaffensfreude', 'Invisibility', 'Wild magic', 'Fame', 'Goats Trek', 'Gargoyle Toughness', 'Atomic Clock', 'Transmutation', 'Iron Skin', 'Sex Change', 'Race Change', 'Musical Breath', 'Utter Understanding', 'Split Form', 'Flavour', 'Glimmer', 'Love', 'Poison', 'Rebirth', 'Elemental form', 'True form', 'Gods Touch', 'Antidepressant', 'Ghostly Form', 'Artisans Skill', 'Godly form', 'Bless Weapon', 'Euphoria', 'Bodyguard', 'Babelfish', 'Preservation', 'Fear', 'Night vision', 'Tracking', 'Cure-all'];
    const potionEffect = ['instantly regenerates some health when drank', 'gives temporary health when drank', 'slowly regenerates health over a period of some hours', 'gives a bonus to attack rolls after drinking', 'gives immunity to fear and some temporary inspiration', 'gives the user much more strength', 'gives resistance to fire damage', 'gives resistance to cold damage', 'gives resistance to necrotic damage', 'gives resistance to radiant damage', 'gives resistance to martial damage', 'gives resistance to acid', 'gives resistance to lightning damage', 'makes the drinker irresistible to nearby people', 'gives the user a magical shield of energy', 'gives the user fire breath for a short time', 'makes the user double in size', 'makes the user half in size', 'lets the user understand all languages', 'makes the user very fertile, almost certain to make a baby under its effects', 'gives the user a huge booming voice that terrifies those around', 'gives the user a temporary boost to luck', 'gives the user more magical power to cast with', 'gives the user more powerful spells', 'makes the user turn into a random animal', 'makes the user get lost in a hallucinary dream world of their perfect dream', 'makes the user get lost in a hallucinary dream world of their worst nightmares', 'gives the user more stamina and constitution', 'makes the user have more speed', 'increases the users intelligence temporarily', 'increases the users dexterity temporarily', 'changes the users form to a disguised form of any race and appeance', 'removes all hunger and thirst from the target', 'makes the user grow some years younger', 'makes the user grow some years older', 'makes the user radiate with a damaging aura', 'gives the user strong vision and a bonus to perception', 'cures all diseases and illnesses', 'freezes the user in stasis that makes them immune to damage but they cannot move or act', 'gives the user the cure to a single riddle', 'makes the user look more ugly for a time', 'makes the user appear more attractive for a time', 'makes the user more effective and versatile with a blade', 'makes the user more effective with a bow or ranged weapon', 'gives water breathing', 'makes the user turn things to gold', 'makes the user rage with great strength', 'makes the user have bonuses against a particular type of enemy', 'lets the user divinate the future', 'heals a portion of all damage the user deals', 'lets the user become one with animals and nature around them', 'makes the user very hard to follow', 'makes the user have a better acrobatics skill', 'gives the user a bonus to climbing', 'makes the user appear completely dead to all magic', 'gives the user worst luck', 'lets the user gain control of a nearby creature, their body comatosed while they do', 'makes the user need no sleep for a time', 'lets the user fly', 'makes the user very calm and unable to harm others', 'heals a single scar or bad injury on the user such as a missing arm', 'makes the user tell the truth', 'makes the user only able to lie', 'makes the user unable to get lost and find where they need', 'turns the users hands become sharp weaponised blades', 'makes the enemies take damage as they deal it to the user', 'makes the user invisible', 'taps into wild magic making an absolutely random thing happen', 'makes the user more famous', 'makes the user immune to the toils of long travels and bad weather', 'increases the users constitution', 'lets the user know the exact time and date', 'lets the user have the ability to change somethings properties', 'turns the users skin to metal giving them many resistances', 'changes the users gender', 'changes the users race', 'makes the user say everything in song, and fey music follows them in the air', 'makes the user know very intimately about one exact thing', 'turns the user into two or three tiny versions of themselves and controls them all', 'makes anything and everything taste amazing!', 'makes the user and its gear instantly clean and as good looking as possible', 'makes the user and someone else fall in love', 'poisons the user, weakening them', 'resurrects the user if they die soon after drinking', 'turns the user to an elemental form relevant to their personality', 'turns the user into a familiar like creature similar to their personality', 'gives the user a holy connection to their god or fiendish deity', 'does what it says on the tin', 'makes the user intangible and able to phase through objects', 'gives the user skill in a particular art temporarily', 'improves all stats', 'makes the users weapons do more damage', 'makes the user feel amazing and trip out', 'creates a spectral bodyguard for a short time who obeys orders', 'lets the user speak any language but not understand it', 'stops whatever its poured on from rotting or degrading', 'makes the user terrified', 'gives the ability to see in the dark', 'lets the user track an enemy', 'cures any status effects'];
    const output = {
      type: random(type)
    };
    assign(output, base);

    if (output.type === 'alchemical ingredient') {
      return { ...output,
        preservationMethod: random(preservationMethod),
        smallThing: random(smallThing)
      };
    }

    if (output.type === 'body part') {
      return { ...output,
        preservationMethod: random(preservationMethod),
        bodyPart: random(bodyPart),
        bodyPartOrigin: random(bodyPartOrigin)
      };
    }

    if (output.type === 'substance') {
      return { ...output,
        substanceForm: random(substanceForm),
        substanceType: random(substanceType)
      };
    }

    if (output.type === 'preserved herb') {
      return { ...output,
        herbPreservation: random(herbPreservation),
        herb: random(herb),
        readout: `${random(herbPreservation)} ${random(herb)}`
      };
    }

    if (output.type === 'brewing potion') {
      const temp = {
        vesselDescriptor: random(vesselDescriptor),
        vesselMaterial: random(vesselMaterial),
        vesselType: random(vesselType),
        liquidTexture: random(liquidTexture),
        liquidColour: random(liquidColour),
        liquidSecondary: random(liquidSecondary),
        potionPurpose: random(potionPurpose)
      };
      return { ...output,
        ...temp,
        containerDescription: `${temp.vesselDescriptor} ${temp.vesselMaterial} ${temp.vesselType}`,
        liquidDescription: `${temp.liquidTexture} ${temp.liquidColour} liquid with ${temp.liquidSecondary}`
      };
    }

    if (output.type === 'potion') {
      const potionTitleRoll = random(0, 99);
      assign(output, {
        potionContainer: random(potionContainer),
        potionLabel: random(potionLabel),
        potionStrength: random(potionStrength),
        potionSideEffect: random(potionSideEffect),
        smell: random(smell),
        taste: random(smell),
        liquidTitle: random(liquidTitle),
        liquidColour: random(liquidColour),
        liquidSecondary: random(liquidSecondary),
        liquidTexture: random(liquidTexture),
        potionTitleRoll,
        potionTitle: potionTitle[potionTitleRoll],
        potionEffect: potionEffect[potionTitleRoll]
      });
      assign(output, {
        titleReadout: `${capitalizeFirstLetter(output.liquidTitle)} of ${output.potionTitle}`,
        descriptionReadout: `The potion is in a ${output.potionContainer}, and has a label showing ${output.potionLabel}. It looks ${output.liquidColour} with ${output.liquidSecondary}. ` + `It is ${output.liquidTexture} and smells of ${output.smell} but tastes of ${output.taste}.`
      });

      const getEffectReadout = () => {
        switch (output.potionStrength) {
          case 'regular with no side effect':
            return `The potion's strength is ${output.potionStrength}, and ${output.potionEffect}.`;

          case 'temporary, but strong and wears off quickly':
            return `The potion's strength is ${output.potionStrength}, and ${output.potionEffect}.`;

          case 'seemingly permanent':
            return `The potion's strength is ${output.potionStrength}, and ${output.potionEffect}.`;

          case 'poisonous. Almost no positive effect and is all side effect':
            return `The potion's strength is ${output.potionStrength}, and allegedly ${output.potionEffect} but has the strong side effect of ${output.potionSideEffect}.`;

          default:
            return `The potion's strength is ${output.potionStrength}, and ${output.potionEffect}, with the side effect of ${output.potionSideEffect}.`;
        }
      };

      assign(output, {
        effectReadout: getEffectReadout()
      });
      return output;
    }

    throw new Error(`Invalid type: '${type}'.`);
  }

  /**
   * Fetches a random value from an object.
   * Used to fetch when it's not important which it fetches;
   * any random tavern, or any random Patreon character.
   */

  function getRandomValue(target) {
    return random(Object.values(target));
  }

  function createRing(base) {
    const ringData = createRingData();
    const ring = {
      power: getRandomValue(ringData.power),
      cost: getRandomValue(ringData.cost),
      activation: getRandomValue(ringData.activation),
      ...base
    };
    assign(ring, {
      works: random([// This ring works...
      'perfectly, every time', 'pretty much every time', 'every time its used', 'most of the time with infrequent mishaps', 'almost always, but sometimes with side effects', 'fairly well, but always has a side effect', 'as expected about half the time', 'only half the time', 'whenever it is fully charged', 'occasionally, when the proper conditions are met', 'infrequently, but well when it does', 'rarely and unpredictably', 'every couple of times the user tries to activate it', 'almost never, and only when it feels like it', 'only the first time the wearer uses the power', 'whenever the time is right', 'well, but at a cost']),
      material: random(['gold', 'white gold', 'rose gold', 'tarnished silver', 'polished silver', 'sterling silver', 'gold-plated silver', 'gold-plated brass', 'silver-plated brass', 'gold-plated steel', 'silver-plated steel', 'rhodium', 'black rhodium', 'brass', 'black steel', // animal bones
      `${random(['whale', 'rat', 'dog', 'wolf', 'bear', 'bird', 'cougar', 'gorilla', 'lion', 'fox', 'elephant', 'turtle', 'pig', 'tiger', 'horse', 'deer', 'bat', 'rabbit', 'rhino', 'sheep', 'otter', 'goat', 'hippo', 'coyote', 'giant panda', 'skunk', 'cattle', 'bison', 'emu', 'caragor', 'dire wolf', 'boar', 'elk', 'ram', 'mammoth', 'pegasus', 'unicorn'])} bone`, // monster bones
      `${random(['kobold', 'goblin', 'ogre', 'giant', 'merfolk', 'bullywug', 'grimlock', 'lizardfolk', 'hobgoblin', 'orc', 'gnoll', 'cockatrice', 'dragon', 'bugbear', 'harpy', 'hippogriff', 'imp', 'satyr', 'centaur', 'ettercap', 'griffon', 'sea hag', 'wererat', 'werewolf', 'wereboar', 'basilisk', 'hell hound', 'manticore', 'minotaur', 'owlbear', 'ettin', 'lamia', 'barbed devil', 'bulette', 'troll', 'xorn', 'chimera', 'drider', 'medusa', 'wyvern', 'vrock', 'oni', 'chain devil', 'hezrou', 'hydra', 'glabrezu', 'behir', 'roc', 'horned devil', 'marilith', 'sphinx', 'balor', 'pit fiend', 'kraken'])} bone`, // ivory
      `${random(['elephant', 'elephant', 'elephant', 'dire elephant', 'hippo', 'walrus', 'whale', 'hornbill', 'warthog', 'narwhal'])} ivory`, 'ebony', 'mahogany wood', 'walnut wood', 'birch wood', 'maple wood', 'pine wood', 'oak wood', 'ash wood', 'turquoise', 'jade', 'iron', 'copper', 'platinum', 'bronze', 'tungsten', 'cobalt', 'titanium', 'palladium', 'zirconium', 'obsidian', 'quartz']),
      decoration: random(['handful of small gemstones arrayed around the band', 'two small gemstones with a large gemstone in the center', `${random(['trio of small ', 'trio of large ', 'group of one large and two small flanking ', 'cluster of small ', 'group of several large ', 'small set of ', 'row of ', 'circle of ']) + random(['rose', 'princess', 'emerald', 'square', 'baguette', 'taper', 'fancy', 'heart', 'pear', 'marquise', 'oval', 'round', 'mixed', 'buff top', 'mogul', 'old miners', 'star', 'step'])} cut gemstones`, `${random(['single large ', 'huge ', 'single small ', 'tiny ', 'very large ', 'very small ']) + random(['rose', 'princess', 'emerald', 'square', 'baguette', 'taper', 'fancy', 'heart', 'pear', 'marquise', 'oval', 'round', 'mixed', 'buff top', 'mogul', 'old miners', 'star', 'step'])} cut gemstone`, `cluster of gemstones in the shape of a ${random(['star', 'sun', 'moon', 'heart'])}`, `${random(["snake's", "dragon's", "lion's", "tiger's", "demon's", "devil's", "wolf's", "bear's", "monkey's", "crow's", "eagle's", "hawk's", "vulture's", "fox's", "horse's", "bat's", "rabbit's", "boar's", "medusa's"])} head with gemstones set in its eyes`, `${random(['snake', 'dragon', 'lion', 'tiger', 'demon', 'devil', 'wolf', 'bear', 'monkey', 'crow', 'eagle', 'hawk', 'vulture', 'fox', 'horse', 'bat', 'rabbit', 'boar'])} skull with gemstones set in its eyes`, `${random(['floral', 'leafy', 'thorny', 'hexagonal', 'wavy', 'spider-web', 'cross-hatching', 'vine', 'geometric', 'spiral', 'rune', 'starry', 'swirling'])} ${random(['pattern', 'motif', 'design', 'marking', 'ornamentation'])}`, `band like ${random(['twisting vines', 'rough waves', 'stag horns', 'tree branches', 'rose thorns', 'a craggy mountainside', 'the body of a snake', 'a twisting rope'])}`, `phrase written in ${random(['a Dwarvish script', 'an Elvish script', 'an Infernal script', 'a Draconic script', 'a Celestial script', 'a Common script'])} wrapping around the band`, 'handful of arcane runes']),
      gemstone: random(['diamond', `${random(['yellow', 'pink', 'champagne', 'green', 'blue', 'orange', 'red', 'chameleon', 'argyle', 'purple', 'violet', 'black', 'gray', 'white'])} diamond`, 'ruby', `${random(['fire', 'white', 'black', 'yellow', 'fairy', 'pink', 'crystal', 'honey'])} opal`, 'emerald', 'blue sapphire', 'purple sapphire', 'orange sapphire', 'green sapphire', 'star sapphire', 'garnet', `${random(['white', 'black', 'golden', 'pink', 'lavender', 'blue', 'chocolate'])} pearl`, 'amethyst', 'topaz', 'polished amber', 'moonstone', 'cut onyx', 'peridot', 'quartz', 'aquamarine', 'citrine', 'lapis lazuli', 'spinel', 'tanzanite', 'turquoise', 'zircon', `${random(['blue', 'red', 'green', 'yellow', 'pink', 'brown', 'black'])} tourmaline`]),
      intendedowner: random(['no one in particular', `the ringmaker's ${random(['true love', 'best friend', 'favorite patron', 'ruler who he cared deeply for', 'family member', 'wife', 'husband', 'good friend'])}, but ${random(['they perished long ago', 'they are no longer on this plane', 'it was never delivered', 'the ringmaker perished before it was gifted away', 'they pawned it during times of trouble', "they pawned it after the ringmaker's death", 'it was stolen during the original delivery'])}`, `${random(['a Dwarvish', 'an Elvish', 'a Gnomish', 'a Human', 'a Dragonborn', 'a Half-Orc', 'a Drow', 'a Tiefling', 'a Halfling', 'a Half-Elf', 'a Goblin', 'a Lizardfolk'])} ${random(['king', 'queen', 'princess', 'prince', 'prince', 'noble', 'duke', 'baron', 'lord', 'lady', 'merchant', 'witch of terrible power', 'gemcutter', 'hero from ancient times', 'knight'])} who ${random(['used it to gain power', 'used it to gain fame', 'used it to gain wealth', 'used it against their enemies', 'used it to better their town while they were alive', 'wore it until they died', 'wore it until it was lost during a long journey', 'wore it until it was stolen from them', 'never actually wore the ring', 'gifted it away after a few years'])}`, `${random(['a dark', 'a notorious', 'a legendary', 'a mysterious', 'an ancient', 'a sinister', 'a forgotten', 'a devious', 'an eccentric', 'a powerful', 'a wealthy', 'a conniving', 'an infamous', 'a renowned', 'a famous', 'a heralded', 'a strong-willed', 'a well known', 'a barely known', 'a weak-willed', 'an extremely wealthy'])} ${random(['sorceress', 'sorcerer', 'wizard', 'mage', 'witch', 'high priest', 'lich', 'rogue', 'fiend', 'warlord', 'explorer', 'bard', 'performer', 'druid', 'warlock', 'monk', 'warrior', 'knight', 'fighter', 'fortune teller', 'gladiator', 'king', 'queen', 'prince', 'princess', 'lord', 'lady', 'duke', 'monarch', 'prophet', 'spellcaster', 'hag'])} who ${random(['used it to gain power', 'used it to gain fame', 'used it to gain wealth', 'used it against their enemies', 'used it to better their town in their time', 'wore it until they died', 'wore it until it was lost during a long journey', 'wore it until it was stolen from them', 'never actually wore the ring', 'gifted it away after a few years'])}`]),
      importance: random(['ancient king', 'elder dragon', 'powerful fiend', 'legendary warrior', 'notorious giant', 'well known prophet', 'powerful spellcaster', 'heir to a fallen noble house', 'sitting monarch', 'fiendish prince', 'elemental lord', 'forgotten god', 'ancient evil being', 'dreadful hag']),
      setting: random(['in the centre is a ', 'the gemstone in the middle is a ', 'the focal point of the ring is a ', 'the gems in this ring are mostly ', 'it is set with ', 'it has three gems, two cheap quartz gems flanking a', 'it is bejeweled with a ', 'the band of this ring is surrounded with ', 'in the middle of the ring sits a huge ', 'the middle of the ring has a large cluster of ']),
      cut: random(['rose', 'princess', 'emerald', 'square', 'baguette', 'taper', 'fancy', 'heart', 'pear', 'marquise', 'oval', 'round', 'mixed', 'buff top', 'mogul', 'old miners', 'star', 'step'])
    });
    assign(ring, {
      firstOutputs: random([`This ring is made of ${ring.material} which is decorated with ${articles.output(ring.decoration)}. It was intended for ${ring.intendedowner}. The ring grants the power to ${ring.power}.<blockquote>This ring works ${ring.works}, and works best ${ring.activation}. It grants the power to ${ring.power}, ${random(['but', 'however'])} ${ring.cost}.</blockquote>`, `This ring is made of ${ring.material}, and ${ring.setting} ${ring.cut} cut ${ring.gemstone}. It was intended for ${ring.intendedowner}. The ring grants the power to ${ring.power}.<blockquote>This ring works ${ring.works}, and works best ${ring.activation}. It grants the power to ${ring.power}, ${random(['but', 'however'])} ${ring.cost}.</blockquote>`]),
      secondOutputs: random([`This one's made of ${ring.material} which is decorated with ${articles.output(ring.decoration)}. It was intended for ${ring.intendedowner}. The ring grants the power to ${ring.power}.<blockquote>This ring works ${ring.works}, and works best ${ring.activation}. It grants the power to ${ring.power}, ${random(['but', 'however'])} ${ring.cost}.</blockquote>`, `This one's made of ${ring.material}, and ${ring.setting} ${ring.cut} cut ${ring.gemstone}. It was intended for ${ring.intendedowner}. The ring grants the power to ${ring.power}.<blockquote>This ring works ${ring.works}, and works best ${ring.activation}. It grants the power to ${ring.power}, ${random(['but', 'however'])} ${ring.cost}.</blockquote>`])
    });
    assign(ring, {
      type: 'ring',
      name: `${ring.gemstone} Ring`,
      description: ring.firstOutputs
    });
    return ring;
  }

  const createRingData = () => ({
    power: {
      // The ring grants the power to...
      'absorb': `absorb ${random(['fire damage', 'lightning damage', 'memories', 'souls', 'spells', 'water', 'poison damage', 'ice damage'])}`,
      'attract': `attract ${random(['birds', 'ghosts', 'members of the opposite sex', 'rats', 'snakes', 'stirges', 'fiends', 'undead', 'flies'])}`,
      'avoid': `avoid ${random(['former lovers', 'sobriety', 'trap triggers', 'trolls', 'vampires', 'werewolves'])}`,
      'bolster': `avoid ${random(['agility and reflexes', 'awareness and senses', 'confidence and self-esteem', 'health and toughness', 'intellect and problem-solving skills', 'strength and endurance'])}`,
      'cast a spell': `cast a spell ${random(['at random', "prepared and stored in the ring by the ring's creator'", 'prepared and stored in the ring by you', 'that creates a disguise', 'that restores lost hit points', 'that grants invisibility'])}`,
      'conjure a swarm of': `conjure a swarm of ${random(['bats', 'parrots', 'ravens', 'rats', 'spiders', 'zombies', 'gnats', 'lemurs', 'locust'])}`,
      'control': `control ${random(['demons', 'dwarves', 'elves', 'flames', 'human minds', 'weather'])}`,
      'disappear': `disappear ${random(['into a hole in the earth', 'in a flash of light', 'to a nearby tree', 'in a shimmering mist', 'in a swirl of shadows', 'in a wisp of smoke'])}`,
      'detect the nearest': `detect the nearest ${random(['corpse', 'dragon', 'piece of gold', 'living creature', 'poisonous plant', 'undead', 'unbroken pot', 'unopened chest'])}`,
      'move': `move like a ${random(['dolphin', 'burrowing badger', 'gust of wind', 'jackrabbit', 'ooze', 'spider', 'jaguar'])}`,
      'predict': `predict ${random(['deaths', 'fluctuations in the price of grain', 'future catastrophes', 'military victories', 'storms', 'winning horses'])}`,
      'regain': `regain ${random(['expended spell slots', 'lost dignity', 'lost hitpoints', 'lost gold', 'lost time', 'used torches', 'used arrows', 'a single small lost item'])}`,
      'resist': `resist ${random(['diseases', 'mind-affecting charms', 'persuasion', 'poisons', 'psionic powers', 'seduction', 'temptation'])}`,
      'see': `see ${random(['faraway places', "into others' dreams", 'invisible creatures and objects', 'people dear to you', 'through the eyes of an owl', 'through the eyes of a corpse', "people's deepest desires"])}`,
      'talk to a': `talk to a ${random(['dear friend or lover', 'long-dead person', 'recently deceased person', 'snake', 'spider', 'wolf', 'horse', 'dragon', 'demon', 'random deity'])}`,
      'summon': `summon ${random(['an angel', 'a demon', 'a devil', 'a djinni', 'an efreet', 'a pack of wolves', 'an imp', 'a random takling bird', 'a well bred horse'])}`,
      'teleport': `teleport ${random(['up to ten feet', 'to another room nearby', 'to a well-known temple', 'to a previously prepared teleportation circle', 'to the presence of a powerful fiend', 'to an ancient crypt'])}`,
      'alchemy': `turn ${random(['water into mead', 'mead into wine', 'coal into gold', 'oak wood into copper ore', 'feathers into lead', 'water into ink', 'blood into oil', 'oil into water'])}`,
      'utility': `${random(['light small campfires', 'untie any simple knot', 'always know which way is north', 'conjure a loaf of bread once per day', 'become invisible to any hostile creature', 'always know the correct time of day', 'see 10ft clearly in the dark', 'keep dry in the rain'])}`
    },
    cost: {
      // The ring grants x power, but...
      temporary: `upon activation, it causes temporary ${random(['chills all over', 'fatigue', 'flatulence', 'head-splitting headaches', 'nausea', 'unsightly and rapid hair growth', 'blindness', 'uncontrollable bowel movements', 'deafness', 'feebleness', 'coughing fits', 'madness'])}`,
      chronic: `while attuned, it causes permanent ${random(['blurred vision', 'blindness', 'loss of the power of speech', 'painful scarring and deformity', 'poor wound healing', 'tumorous growths and deformities', 'debilitating nausea', 'deafness', 'coughing fits', 'athletes foot', 'rashes all over the skin', 'scurvy'])}`,
      mental: `it brings on ${random(['anxiety', 'bad dreams', 'compulsive behavior (drinking, smoking, scratching, hygiene, etc.)', 'insomnia', 'a short temper', 'weight gain (stress eating)', 'feelings of existential dread'])} while it is being worn`,
      attention: `it attracts the attention of ${random(['aberrations', 'dragons', 'fiends', 'ghosts and wraiths', 'spiders', 'snakes', 'zombies and wights', 'devils', 'demons', 'liches'])}`,
      accompanied: `activation of its powers is occasionally accompanied by ${random(['a blizzard', 'earthquakes', 'rapid plant growth', 'thick fog', 'thunderstorms', 'volcanic eruptions', 'torrential downpours', 'tornadoes', 'strong gusts of wind'])}`,
      physical: `when in use, it causes the wearer to ${random(['lose control of all their limbs', 'lose control of their speech', 'experience searing pain throughout their body', 'scream uncontrollably', 'burst into a heavy cold sweat', 'feel as if their fingernails are being pulled off', 'have their legs go completely limp', 'be unable to breath', 'completely lose their sight', 'scratch at their skin uncontrollably', 'age rapidly'])}`
    },
    activation: {
      // the ring works best...
      'on a particular plane': `when worn in ${random(['the celestial realm', 'the fiendish realm', 'the mortal world', 'the realm of death', 'the realm of dreams and magic', 'the realm of shadow and death', 'the ethereal plane', 'the astral plane', 'the elemental planes', 'the air elemental plane', 'the fire elemental plane', 'the earth elemental plane', 'the water elemental plane', 'the Upper planes', 'the Lower planes', 'Elysium', 'the Beastlands', 'Bytopia', 'Mount Celestia', 'Arborea', 'Arcadia', 'Ysgard', 'Mechanus', 'Limbo', 'Acheron', 'the Nine Hells', 'Gehenna', 'Hades', 'Carceri', 'the Abyss', 'Pandemonium'])}`,
      'when worn by a': `when worn by a ${random(['dwarf', 'half-dragon', 'high elf', 'serpentfolk', 'shadowfolk', 'wood elf', 'gnome', 'human', 'half-elf', 'half-orc', 'orc', 'halfling', 'tiefling'])}`,
      'sunlight': random(['in full sunlight', "while it's sunny", 'during a sunny day', 'under the light of the sun']),
      'moonlight': `when worn under a ${random(['full moon', 'half-moon', 'waxing crescent moon', 'waning crescent moon', 'moon', 'moon', 'moon', 'moon', 'blood moon', 'blue moon', 'harvest moon', 'new moon'])}`,
      'underground': random(['underground', 'beneath the earth', 'under the ground']),
      'starlight': random(['under starlight', 'under the starlight', 'while the stars shine above', 'beneath the stars']),
      'weather': `when worn in ${random(['slightly cloudy', 'overcast', 'extremely windy', 'very sunny', 'cloudless', 'stormy', 'rainy', 'warm', 'cold', 'moderate', 'bad', 'good'])} weather`,
      'feelings': `when the wearer is feeling ${random(['extremely angry', 'incredibly sad', 'a deep meloncholy', 'an unquenchable rage', 'a lust for revenge', 'completely hopeless', 'utterly betrayed', 'joyous', 'incredibly euphoric', 'very hungry', 'alone in the world', 'lustful'])}`
    }
  });

  var armour = {
  	type: [
  		"Padded Armour",
  		"Leather Armour",
  		"Studded leather Armour",
  		"Hide Armour",
  		"Chain shirt",
  		"Scale mail",
  		"Breastplate",
  		"Half plate",
  		"Ring mail",
  		"Chain mail",
  		"Splint Armour",
  		"Plate Armour",
  		"Shield"
  	],
  	property: [
  		{
  			prefix: "Acolyte's",
  			suffix: "of the Acolyte",
  			effect: "The bearer gains a +1 bonus to Wisdom (Religion) checks."
  		},
  		{
  			prefix: "Amethyst",
  			suffix: "of Amethyst",
  			effect: "Reduces psychic damage to the bearer by 2."
  		},
  		{
  			prefix: "Arboreal",
  			suffix: "of the Woodlands",
  			effect: "Treat as a +1 armor after the bearer has taken a long rest in a forest. If the bearer leaves the forest, this property becomes temporarily inert."
  		},
  		{
  			prefix: "Arid",
  			suffix: "of the Wastelands",
  			effect: "Treat as a +1 armor after the bearer has taken a long rest in a desert. If the bearer leaves the desert, this property becomes temporarily inert."
  		},
  		{
  			prefix: "Astute",
  			suffix: "of the Astute",
  			effect: "It takes half the time to don or doff this armor than a normal armor of this type."
  		},
  		{
  			prefix: "Arctic",
  			suffix: "of the North",
  			effect: "The bearer suffers no harm in temperature as cold as -20 degrees Fahrenheit."
  		},
  		{
  			prefix: "Artisan's",
  			suffix: "of the Artisan",
  			effect: "This armor is a swiss army knife of enchanted appendages that can take the form of any artisan's tools, from Alchemist's and Brewer's supplies to Weaver's and Woodcarver's tools (see p. 154 of the PHB for a complete set of artisan's tools)."
  		},
  		{
  			prefix: "Barbarian's",
  			suffix: "of the Barbarian",
  			effect: "The bearer gains a +1 bonus to Strength (Athletics) checks."
  		},
  		{
  			prefix: "Bard's",
  			suffix: "of the Bard",
  			effect: "The bearer gains +1 to Charisma (Performance) checks."
  		},
  		{
  			prefix: "Blessed",
  			suffix: "of Blessings",
  			effect: "Whenever bearer of this item receives divine healing, they gain an additional 1d4 hit points."
  		},
  		{
  			prefix: "Bloodthirsty",
  			suffix: "of Bloodthirst",
  			effect: "The bearer can expend a hit die to turn this into a +1 armor for 1d4 turns."
  		},
  		{
  			prefix: "Burglar's",
  			suffix: "of the Burglar",
  			effect: "The bearer gains +1 to Dexterity (Sleight of Hand) checks."
  		},
  		{
  			prefix: "Cavernous",
  			suffix: "of the Underdark",
  			effect: "Treat as a +1 armor after the bearer has taken a long rest in a cave. If the bearer leaves the cave, this property becomes temporarily inert."
  		},
  		{
  			prefix: "Cardinal",
  			suffix: "of the Lodestone",
  			effect: "The wielder can use an action to learn which way is north."
  		},
  		{
  			prefix: "Cerulean",
  			suffix: "of Storms",
  			effect: "Reduces lightning damage to the bearer by 2."
  		},
  		{
  			prefix: "Channelling",
  			suffix: "of Channelling",
  			effect: "Once per day, the bearer may ignore the Verbal and/or Somatic components of a spell they are casting."
  		},
  		{
  			prefix: "Charitable",
  			suffix: "of Charity",
  			effect: "If the bearer donates 100gp or more to a temple of a goodly deity, this becomes a +1 armor for the next 24 hours. If they go longer than a month without making any such donations, they gain a -1 AC penalty until a suitable donation is made."
  		},
  		{
  			prefix: "Civilized",
  			suffix: "of the Hearth",
  			effect: "Treat as a +1 armor after the bearer has taken a long rest in an living urban environment. If the bearer leaves the city, this property becomes temporarily inert."
  		},
  		{
  			prefix: "Climber's",
  			suffix: "of the Climber",
  			effect: "This armor is suited with harnesses, rope, and other climbing tools are readily in reach. The bearer may treat this armor as a climbing kit."
  		},
  		{
  			prefix: "Concealing",
  			suffix: "of Concealment",
  			effect: "The bearer may spend one action assembling components of this armor into a dagger. A person searching the bearer for weapons must make a DC 20 Intelligence (Investigation) check to discover this property."
  		},
  		{
  			prefix: "Consecrated",
  			suffix: "of Consecration",
  			effect: "Treat this as a +1 armor when the bearer is being attacked by Undead."
  		},
  		{
  			prefix: "Crystalline",
  			suffix: "of Crystal",
  			effect: "Treat as +1 armor until the bearer takes a critical hit, at which point it then loses this property."
  		},
  		{
  			prefix: "Dancer's",
  			suffix: "of the Dancer",
  			effect: "The bearer gains a +1 bonus to Dexterity (Acrobatics) checks."
  		},
  		{
  			prefix: "Dazzling",
  			suffix: "of Dazzling",
  			effect: "Once per day, the bearer may spend an action to ignite the magic in this armor, causing it to flare brilliantly. Any creature within a 10 foot radius must use their reaction to shield their eyes or be blinded until the end of their next turn."
  		},
  		{
  			prefix: "Debtor's",
  			suffix: "of Debts",
  			effect: "The first 1 bludgeoning, piercing, or slashing damage from any source is negated. However, the total amount of damage prevented from that day acts as a negative modifier on death saving throws. So, if the armor prevented 5 points of damage that day, the bearer has a -5 penalty on death saving throws."
  		},
  		{
  			prefix: "Defensive",
  			suffix: "of Defence",
  			effect: "Whenever the bearer takes a dodge action, they may move an additional 5 feet."
  		},
  		{
  			prefix: "Deflecting",
  			suffix: "of Deflection",
  			effect: "The bearer may spend their reaction to treat this as +1 armor vs. ranged weapon attacks until the beginning of their next turn."
  		},
  		{
  			prefix: "Delver's",
  			suffix: "of the Delver",
  			effect: "While underground, the bearer of this item always knows the item's depth below the surface and the direction to the nearest staircase, ramp, or other path leading upward."
  		},
  		{
  			prefix: "Diplomatic",
  			suffix: "of Diplomacy",
  			effect: "The bearer gains proficiency in a language of the DM's choice."
  		},
  		{
  			prefix: "Druid's",
  			suffix: "of the Druid",
  			effect: "The bearer gains a +1 bonus to Intelligence (Nature) checks."
  		},
  		{
  			prefix: "Ephemeral",
  			suffix: "of Transience",
  			effect: "Once per day, the bearer may spend their reaction to gain their Wisdom modifier to their AC until the beginning of their next turn."
  		},
  		{
  			prefix: "Evasive",
  			suffix: "of Evasion",
  			effect: "Whenever the wearer takes a dodge action, they gain +1 AC until the end of the turn."
  		},
  		{
  			prefix: "Fair-weather",
  			suffix: "of Fair-weather",
  			effect: "The bearer may treat this as +1 armor if the bearer has more than half of their maximum hit points."
  		},
  		{
  			prefix: "Lying",
  			suffix: "of Falsehoods",
  			effect: "The bearer gains a +1 bonus to Charisma (Deception) checks."
  		},
  		{
  			prefix: "Favored",
  			suffix: "of the Favored",
  			effect: "Once per day, the bearer may roll a saving throw with advantage."
  		},
  		{
  			prefix: "Feinting",
  			suffix: "of Feinting",
  			effect: "Whenever the bearer uses the help action in combat, they may treat this as a +1 armor until the beginning of their next turn."
  		},
  		{
  			prefix: "Fen",
  			suffix: "of the Glade",
  			effect: "Treat as a +1 armor after the bearer has taken a long rest in a swamp. If the bearer leaves the swamp, this property becomes temporarily inert."
  		},
  		{
  			prefix: "Flanked",
  			suffix: "of the Flanked",
  			effect: "The wearer may treat this as +1 armor if two or more enemies are adjacent to them."
  		},
  		{
  			prefix: "First",
  			suffix: "of Reflexes",
  			effect: "The bearer gain a +1 bonus to initiative rolls."
  		},
  		{
  			prefix: "Fresh",
  			suffix: "of Cleansing",
  			effect: "This armor never gets dirty and remains odorless, even in the most filthy dungeon."
  		},
  		{
  			prefix: "Forgotten",
  			suffix: "of the Forgotten",
  			effect: "The bearer may spend an action to attempt to ignite the old magic in this armor with a DC 13 Charisma check. If successful, treat this as a +1 armor as long as the bearer maintains concentration on this effect, maximum 10 minutes."
  		},
  		{
  			prefix: "Furious",
  			suffix: "of Fury",
  			effect: "Treat as a +1 armor when the bearer is raging."
  		},
  		{
  			prefix: "Garnet",
  			suffix: "of Garnet",
  			effect: "Reduces fire damage to the bearer by 2."
  		},
  		{
  			prefix: "Glass",
  			suffix: "of Glass",
  			effect: "The bearer may treat this as +1 armor as long as the bearer is at full health."
  		},
  		{
  			prefix: "Granite",
  			suffix: "of the Mountain",
  			effect: "Any effect that would move the bearer against their will is reduced in distance by 5 feet."
  		},
  		{
  			prefix: "Grim",
  			suffix: "of Coercion",
  			effect: "The bearer gains a +1 bonus to Charisma (Intimidation) checks if their armor is visible."
  		},
  		{
  			prefix: "Harmonious",
  			suffix: "of Harmony",
  			effect: "Attuning to this item takes only 1 minute."
  		},
  		{
  			prefix: "Heroic",
  			suffix: "of Heroes",
  			effect: "The bearer has advantage on saving throws vs. fear."
  		},
  		{
  			prefix: "Histrionic",
  			suffix: "of Histrionics",
  			effect: "the bearer gains +1 to Charisma (Performance) checks."
  		},
  		{
  			prefix: "Holy",
  			suffix: "of Faith",
  			effect: "When the bearer of this item rolls hit dice, they can choose to re-roll them and take the second result."
  		},
  		{
  			prefix: "Inquisitor's",
  			suffix: "of the Inquisitor",
  			effect: "The bearer gains a +1 bonus to Intelligence (Investigation) checks."
  		},
  		{
  			prefix: "Inspired",
  			suffix: "of Inspiration",
  			effect: "The bearer regains their Constitution modifier in temporary hit points whenever they gain or use inspiration."
  		},
  		{
  			prefix: "Invisible",
  			suffix: "of Invisibility",
  			effect: "Once worn, this armor turns invisible (although not the wearer)."
  		},
  		{
  			prefix: "Lightweight",
  			suffix: "of Mobility",
  			effect: "This armor is 10% lighter than normal armor of this type. If it has a Strength requirement to use, it is reduced by 1."
  		},
  		{
  			prefix: "Loquacious",
  			suffix: "of the Silver Tongue",
  			effect: "The bearer gains +1 to Charisma (Persuasion) checks."
  		},
  		{
  			prefix: "Mage Killer's",
  			suffix: "of the Mage Killer",
  			effect: "The bearer may spend their reaction to treat this as +1 armor vs. spell attacks until the beginning of their next turn."
  		},
  		{
  			prefix: "Malachite",
  			suffix: "of Malachite",
  			effect: "Reduces poison damage to the bearer by 2."
  		},
  		{
  			prefix: "Masquarading",
  			suffix: "of the Masquarade",
  			effect: "The bearer has advantage on skill checks involving disguise kits."
  		},
  		{
  			prefix: "Medic's",
  			suffix: "of the Caduceus",
  			effect: "Lined with pockets and compartments and stocked with medical supplies, the bearer may treat this armor as a healer's kit."
  		},
  		{
  			prefix: "Moonlit",
  			suffix: "of the Moon",
  			effect: "The bearer may treat this as +1 armor when moonlight is shining directly on this armor."
  		},
  		{
  			prefix: "Mortals'",
  			suffix: "of Mortals",
  			effect: "At the end of a turn where the bearer failed a death saving throw, the magic within this armor will attempt to stabilize the bearer. It rolls a Wisdom (Medicine) check with a +3 modifier."
  		},
  		{
  			prefix: "Mournful",
  			suffix: "of Sorrow",
  			effect: "When an ally falls unconscious in battle, the bearer gains a +1 AC bonus for the next 10 minutes. If that ally stabilizes or awakens, the bearer loses this bonus."
  		},
  		{
  			prefix: "Obsidian",
  			suffix: "of Obsidian",
  			effect: "Reduces acid damage to the bearer by 2."
  		},
  		{
  			prefix: "Opal",
  			suffix: "of Opal",
  			effect: "Reduces cold damage to the bearer by 2."
  		},
  		{
  			prefix: "Pious",
  			suffix: "of the Pious",
  			effect: "Whenever the bearer shaves their head, treat this as a +1 armor until the end of the day. They must wait a week until they have long enough hair to re-enact this ritual."
  		},
  		{
  			prefix: "Prairie",
  			suffix: "of the Plains",
  			effect: "Treat as a +1 armor after the bearer has taken a long rest in a grassland. If the bearer leaves the grassland, this property becomes temporarily inert."
  		},
  		{
  			prefix: "Preacher's",
  			suffix: "of the Preacher",
  			effect: "The bearer may extend the range of their Channel Divinity by 5 feet."
  		},
  		{
  			prefix: "Precipice",
  			suffix: "of the Crags",
  			effect: "Treat as a +1 armor after the bearer has taken a long rest in the mountains. If the bearer leaves the mountain, this property becomes temporarily inert."
  		},
  		{
  			prefix: "Primeval",
  			suffix: "of the Jungle",
  			effect: "Treat as a +1 armor after the bearer has taken a long rest in a jungle. If the bearer leaves the jungle, this property becomes temporarily inert."
  		},
  		{
  			prefix: "Reflexive",
  			suffix: "of Reflexes",
  			effect: "If the bearer is first in initiative order, treat this as +1 armor for 1 minute."
  		},
  		{
  			prefix: "Renaissance",
  			suffix: "of the Renaissance",
  			effect: "Once per day, the bearer may gain +1 to any skill check."
  		},
  		{
  			prefix: "Resonant",
  			suffix: "of Resonance",
  			effect: "The bearer can spend an action and 1 ki point to treat this as +1 armor for 1 minute."
  		},
  		{
  			prefix: "Righteous",
  			suffix: "of Righteousness",
  			effect: "Treat this as +1 armor during the day when attuned to a good aligned character."
  		},
  		{
  			prefix: "Regal",
  			suffix: "of Royalty",
  			effect: "This armor is richly decorated and fashionable. Although it retains a hint of the ruggedness of a military garment, it could function as well in a ballroom as the battlefield. To the outside observer, you appear to be keeping an Aristocratic lifestyle expense."
  		},
  		{
  			prefix: "Runic",
  			suffix: "of Runes",
  			effect: "Whenever bearer casts a spell, treat this as +1 armor until the beginning of their next turn."
  		},
  		{
  			prefix: "Sacred",
  			suffix: "of the Sacred",
  			effect: "The bearer may increase their Lay on Hands hit point pool by 5."
  		},
  		{
  			prefix: "Sagacious",
  			suffix: "of Acumen",
  			effect: "The bearer gains +1 to Wisdom (Insight) checks."
  		},
  		{
  			prefix: "Sage's",
  			suffix: "of the Sage",
  			effect: "The bearer gains a +1 bonus to Intelligence (History) checks."
  		},
  		{
  			prefix: "Sailor's",
  			suffix: "of the Sea",
  			effect: "Treat as a +1 armor after the bearer has taken a long rest on the high seas. If the bearer leaves the ocean, this property becomes temporarily inert."
  		},
  		{
  			prefix: "Scribe's",
  			suffix: "of the Scribe",
  			effect: "This armor unfolds to reveal animated appendages that are equipped with writing implements, magnifying glasses, and book stands. The armor aids the bearer in transcription tasks: it knows 3 languages of the DM's choice and halves the amount of time it takes the bearer to copy any text, including spells into spellbooks."
  		},
  		{
  			prefix: "Shading",
  			suffix: "of Shade",
  			effect: "The bearer suffers no harm in temperatures as high as 120 degrees Fahrenheit."
  		},
  		{
  			prefix: "Shadow",
  			suffix: "of Shadows",
  			effect: "Treat as a +1 armor when in dim light."
  		},
  		{
  			prefix: "Shepherd's",
  			suffix: "of the Shepherd",
  			effect: "The bearer gains a +1 bonus to (Wisdom) Animal Handling checks."
  		},
  		{
  			prefix: "Shifting",
  			suffix: "of Shifting",
  			effect: "The bearer may change minor aspects of the physical appearance of this item."
  		},
  		{
  			prefix: "Silent",
  			suffix: "of the Night",
  			effect: "If this armor imposed disadvantage to stealth, it no longer does. Otherwise, the bearer gains a +1 bonus to Dexterity (Stealth) checks."
  		},
  		{
  			prefix: "Solar",
  			suffix: "of the Sun",
  			effect: "The bearer may treat this as +1 armor when in direct sunlight."
  		},
  		{
  			prefix: "Spiked",
  			suffix: "of Teeth",
  			effect: "Whenever a creature begins their turn grappling or being grappled by the bearer, they take 1d4 piercing damage."
  		},
  		{
  			prefix: "Spiritual",
  			suffix: "of the Divine",
  			effect: "This armor is naught but a prayer written on a scrap of vellum, decorated with religious motifs of a particular god. Once per day, the bearer may spend 1 minute to read the prayer out loud, and at the end this armor will manifest and encase the bearer. The armor disappears if you act in any way that is not in accordance to the god's teachings."
  		},
  		{
  			prefix: "Subtle",
  			suffix: "of Subtleties",
  			effect: "The bearer gains proficiency in Thieves' Cant."
  		},
  		{
  			prefix: "Surgeon's",
  			suffix: "of the Surgeon",
  			effect: "The bearer gains a +1 bonus to Wisdom (Medicine) checks."
  		},
  		{
  			prefix: "Tenacious",
  			suffix: "of the Tenacious",
  			effect: "When the bearer takes a long rest, they gain back one additional hit die."
  		},
  		{
  			prefix: "Tracker's",
  			suffix: "of the Tracker",
  			effect: "The bearer gains a +1 to Wisdom (Survival) checks."
  		},
  		{
  			prefix: "Trusty",
  			suffix: "of Resurgence",
  			effect: "Treat this as +1 armor if the bearer has half their maximum hit points or less."
  		},
  		{
  			prefix: "Turquoise",
  			suffix: "of Turquoise",
  			effect: "Reduces thunder damage to the bearer by 2."
  		},
  		{
  			prefix: "Twilight",
  			suffix: "of Twilight",
  			effect: "Within 1 hour before or after the rising and setting of the sun, or during a solar eclipse, the armor comes alive with magic and the bearer may treat this as +1 armor."
  		},
  		{
  			prefix: "Undertaker's",
  			suffix: "of the Undertaker",
  			effect: "Once deceased, the body wearing this armor cannot be animated or raised from the dead."
  		},
  		{
  			prefix: "Unyielding",
  			suffix: "of the Unyielding",
  			effect: "The bearer may treat this as +1 armor if they have taken damage since the beginning of their last turn. This effect ends at the beginning of their next turn."
  		},
  		{
  			prefix: "Vanguard",
  			suffix: "of the Vanguard",
  			effect: "The bearer may spend their reaction to gain a +1 AC bonus vs. melee weapon attacks until the beginning of their next turn."
  		},
  		{
  			prefix: "Veiled",
  			suffix: "of the Veil",
  			effect: "The wearer gains a +1 bonus to Dexterity (Stealth) checks when taking a hide action."
  		},
  		{
  			prefix: "Victorious",
  			suffix: "of Victory",
  			effect: "Whenever the bearer kills a creature while wearing this amror, they gain temporary hit points equal to the creature's CR."
  		},
  		{
  			prefix: "Vigilant",
  			suffix: "of Vigilance",
  			effect: "The bearer gains +2 to their Passive Perception."
  		},
  		{
  			prefix: "Vile",
  			suffix: "of Villains",
  			effect: "Treat this as +1 armor at night when attuned to an evil aligned character."
  		},
  		{
  			prefix: "Violent",
  			suffix: "of Violence",
  			effect: "The bearer may choose to treat the heavy metal gauntlets of this armor as a Mace."
  		},
  		{
  			prefix: "War Leader's",
  			suffix: "of the War Leader",
  			effect: "The bearer can use an action to amplify their voice so that it clearly carries for up to 300 feet."
  		},
  		{
  			prefix: "Warded",
  			suffix: "of Wards",
  			effect: "The wearer cannot be possessed while wearing this armor."
  		},
  		{
  			prefix: "Watcher's",
  			suffix: "of the Watcher",
  			effect: "Treat as +1 armor during surprise rounds."
  		},
  		{
  			prefix: "Waterborne",
  			suffix: "of the Sea",
  			effect: "The item floats on water or other liquids. Its bearer has advantage on Strength (Athletics) checks to swim."
  		},
  		{
  			prefix: "Winged",
  			suffix: "of Wings",
  			effect: "The bearer gains +5 speed."
  		},
  		{
  			prefix: "Wizard's",
  			suffix: "of the Wizard",
  			effect: "The bearer gains a +1 to Intelligence (Arcana) checks."
  		},
  		{
  			prefix: "Zen",
  			suffix: "of Zen",
  			effect: "Treat this as +1 armor for one minute after meditating with it for one minute."
  		},
  		{
  			prefix: "Zircon",
  			suffix: "of Zircon",
  			effect: "Reduces force damage to the bearer by 2."
  		},
  		{
  			prefix: "Abyssal",
  			suffix: "of the Abyss",
  			effect: "When on the plane of the Abyss, the bearer has advantage on saving throws against Abyssal Corruption. (DMG p. 62)."
  		},
  		{
  			prefix: "Alarming",
  			suffix: "of Alarms",
  			effect: "Contains 1d4 unreplenishable charges of the Alarm spell (1st level)."
  		},
  		{
  			prefix: "Arborean",
  			suffix: "of Arborea",
  			effect: "When on the plane of Arborea, the bearer has advantage on saving throws against the effects of Intense Yearning. (DMG p. 61)."
  		},
  		{
  			prefix: "Arcadian",
  			suffix: "of Arcadia",
  			effect: "When on the plane of Arcardia, the bearer is unaffected by Planar Vitality (DMG p. 67)."
  		},
  		{
  			prefix: "Astral",
  			suffix: "of the Astral Sea",
  			effect: "When travelling the Astral Sea, it takes half the number of hours to locate a Color Pool to a specific plane. You have advantage on saving throws vs. the effects of Psychic Wind (DMG p. 47-48)."
  		},
  		{
  			prefix: "Beastial",
  			suffix: "of the Beastlands",
  			effect: "When on the plane of The Beastlands, the bearer has advantage on saving throws vs. Beast Transformation (DMG p. 60)."
  		},
  		{
  			prefix: "Beastspeaker's",
  			suffix: "of Beastspeakers",
  			effect: "Contains 1d4 unreplenishable charges of the Speak with Animals spell (1st level)."
  		},
  		{
  			prefix: "Benedictine",
  			suffix: "of Benediction",
  			effect: "Contains 1d4 unreplenishable charges of the Healing Word spell (1st level)."
  		},
  		{
  			prefix: "Blasted",
  			suffix: "of Blasting",
  			effect: "Contains 1d4 unreplenishable charges of the Fire Bolt spell (1st level)."
  		},
  		{
  			prefix: "Bold",
  			suffix: "of Boldness",
  			effect: "Contains 1d4 unreplenishable charges of the Heroism spell (1st level)."
  		},
  		{
  			prefix: "Bountiful",
  			suffix: "of Bounty",
  			effect: "Contains 1d4 unreplenishable charges of the Goodberry spell (1st level)."
  		},
  		{
  			prefix: "Bytopian",
  			suffix: "of Bytopia",
  			effect: "When on the plane of Bytopia, the bearer has advantage on saving throws against Pervasive Goodwill. (DMG p. 59-60)."
  		},
  		{
  			prefix: "Carcerian",
  			suffix: "of Carceri",
  			effect: "When on the plane of Carceri, the bearer knows the direction to the closest secret exit from this prison plane. (DMG p. 63)."
  		},
  		{
  			prefix: "Cartographic",
  			suffix: "of Cartography",
  			effect: "On its own volition, the item records a map of the environments that the bearer is exploring, and can magically project it for the bearer to see."
  		},
  		{
  			prefix: "Chill",
  			suffix: "of Chills",
  			effect: "Contains 1d4 unreplenishable charges of the Ray of Frost spell (1st level)."
  		},
  		{
  			prefix: "Clockwork",
  			suffix: "of Gears",
  			effect: "When on the plane of Mechanus, the bearer has advantage on saving throws against Imposing Order (DMG p. 66)."
  		},
  		{
  			prefix: "Cloy",
  			suffix: "of Cloying",
  			effect: "The bearer may cast Friends once per day."
  		},
  		{
  			prefix: "Compassionate",
  			suffix: "of Compassion",
  			effect: "Contains 1d4 unreplenishable charges of the Cure Wounds spell (1st level)."
  		},
  		{
  			prefix: "Concordant",
  			suffix: "of Concordance",
  			effect: "The bearer has advantage on saving throws vs. Psychic Dissonance when travelling the Outer Planes. (DMG p. 59)."
  		},
  		{
  			prefix: "Conjurer's",
  			suffix: "of the Conjurer",
  			effect: "The bearer may cast Prestidigitation once per day."
  		},
  		{
  			prefix: "Corrosive",
  			suffix: "of Dissolving",
  			effect: "Contains 1d4 unreplenishable charges of the Acid Splash spell (1st level)."
  		},
  		{
  			prefix: "Crawling",
  			suffix: "of Vermin",
  			effect: "The crawling things of the earth, such as insects, snakes, and vermin, are attracted to this item. When placed on the ground, such creatures will scurry toward the item like moths drawn to the flame."
  		},
  		{
  			prefix: "Drunkard's",
  			suffix: "of Taverns",
  			effect: "The bearer always knows the direction to the closest alcoholic beverage."
  		},
  		{
  			prefix: "Elysian",
  			suffix: "of Elysium",
  			effect: "When on the plane of Elysium, the bearer has advantage on saving throws against the effects of Overwhelming Joy (DMG p. 60)."
  		},
  		{
  			prefix: "Etherbound",
  			suffix: "of Ethereal Shores",
  			effect: "The bearer can see creatures in the Border Ethereal that overlap with their plane as clearly as if they were fully in the bearer's plane. Such creatures appear as apparitions or ghosts."
  		},
  		{
  			prefix: "Exalting",
  			suffix: "of Exaltation",
  			effect: "Contains 1d4 unreplenishable charges of the Bless spell (1st level)."
  		},
  		{
  			prefix: "Expeditious",
  			suffix: "of Expedience",
  			effect: "Contains 1d4 unreplenishable charges of the Expeditious Retreat spell."
  		},
  		{
  			prefix: "Fathoming",
  			suffix: "of Tongues",
  			effect: "Contains 1d4 unreplenishable charges of the Comprehend Languages spell."
  		},
  		{
  			prefix: "Feathered",
  			suffix: "of Feathers",
  			effect: "Contains 1d4 unreplenishable charges of the Feather Fall spell (1st level)."
  		},
  		{
  			prefix: "Feybound",
  			suffix: "of the Fey",
  			effect: "The bearer knows the general direction to the closest Fey Crossing within a 60 mile radius. (DMG p. 50)."
  		},
  		{
  			prefix: "Forgiven",
  			suffix: "of Forgiveness",
  			effect: "When on the plane of Mount Celestia, the bearer of this item can receive the benefits of Blessed Beneficence regardless of their alignment."
  		},
  		{
  			prefix: "Fortune Teller's",
  			suffix: "of the Fortune Teller",
  			effect: "Every time you hit by a monster, you glimpse a random image of its future or past."
  		},
  		{
  			prefix: "Friendly",
  			suffix: "of Friendship",
  			effect: "Contains 1d4 unreplenishable charges of the Animal Friendship spell (1st level)."
  		},
  		{
  			prefix: "Gehennan",
  			suffix: "of Gehenna",
  			effect: "When on the plane of Gehenna, the bearer has advantage on saving throws against Cruel Hindrance. (DMG p. 63)."
  		},
  		{
  			prefix: "Gracious",
  			suffix: "of Grace",
  			effect: "The bearer may cast Spare the Dying once per day."
  		},
  		{
  			prefix: "Hadean",
  			suffix: "of Hades",
  			effect: "When on the plane of Hades, the bearer has advantage on saving throws against Vile Transformation. (DMG p. 63)."
  		},
  		{
  			prefix: "Healing",
  			suffix: "of Healing",
  			effect: "This item contains 4 weak healing nodes. As an action, a character can use one node to heal 1d4 hit points at touch range. The item regains 1d4 charges at sunrise."
  		},
  		{
  			prefix: "Hellish",
  			suffix: "of the Nine Hells",
  			effect: "When in the Nine Hells, the bearer has advantage on saving throws against Pervasive Evil. (DMG p. 64)."
  		},
  		{
  			prefix: "Desperate",
  			suffix: "of Last Chances",
  			effect: "The bearer has advantage on perception checks when searching for items long lost in the the Swamp of Oblivion on the Plane of Earth. (DMG p. 54)."
  		},
  		{
  			prefix: "Leaping",
  			suffix: "of Leaping",
  			effect: "Contains 1d4 unreplenishable charges of the Jump spell (1st level)."
  		},
  		{
  			prefix: "Liar's",
  			suffix: "of Lies",
  			effect: "Contains 1d4 unreplenishable charges of the Silent Image spell (1st level)."
  		},
  		{
  			prefix: "Limbo",
  			suffix: "of Limbo",
  			effect: "When on the plane of Limbo, the bearer has advantage to Intelligence checks to alter or move non-magical objects within the plane. (DMG p. 61-62)."
  		},
  		{
  			prefix: "Locating",
  			suffix: "of Locating",
  			effect: "Once attuned, the bearer always knows the exact location of this item."
  		},
  		{
  			prefix: "Malediction",
  			suffix: "of Malediction",
  			effect: "Contains 1d4 unreplenishable charges of the Bane spell(1st level)."
  		},
  		{
  			prefix: "Manipulating",
  			suffix: "of Manipulation",
  			effect: "The bearer may cast Mage Hand once per day."
  		},
  		{
  			prefix: "Master's",
  			suffix: "of Servants",
  			effect: "Contains 1d4 unreplenishable charges of the Unseen Servant spell (1st level)."
  		},
  		{
  			prefix: "Maverick",
  			suffix: "of the Maverick",
  			effect: "The bearer has a +1 bonus to any skill check involving gambling and games of chance (Insight, Sleight of Hand, Investigation, etc)."
  		},
  		{
  			prefix: "Messenger",
  			suffix: "of Messages",
  			effect: "The bearer may cast Message once per day."
  		},
  		{
  			prefix: "Meteoric",
  			suffix: "of Falling Stars",
  			effect: "Contains 1 unreplenishable charge of Scorching Ray cast at 2nd level."
  		},
  		{
  			prefix: "Miraculous",
  			suffix: "of Miracles",
  			effect: "The bearer may cast Thaumaturgy once per day."
  		},
  		{
  			prefix: "Mocking",
  			suffix: "of Mockery",
  			effect: "The bearer may cast Vicious Mockery once per day."
  		},
  		{
  			prefix: "Natural",
  			suffix: "of Nature",
  			effect: "Contains 1d4 unreplenishable charges of the Locate Animals or Plants spell (1st level)."
  		},
  		{
  			prefix: "Neutralizing",
  			suffix: "of Neutrality",
  			effect: "Contains 1d4 unreplenishable charges of the Protection from Good and Evil spell (1st level)."
  		},
  		{
  			prefix: "Nourishing",
  			suffix: "of Nourishment",
  			effect: "The bearer rarely feels hungry, and only needs to consume one-fifth the usual amount of food."
  		},
  		{
  			prefix: "Pandemonium",
  			suffix: "of Pandemonium",
  			effect: "When on the plane of Pandemonium, the bearer has advantage on saving throws against the Mad Winds. (DMG p. 62)."
  		},
  		{
  			prefix: "Projecting",
  			suffix: "of Projection",
  			effect: "The bearer can send messages mentally to willing characters within 30 feet. This communication is one-way only."
  		},
  		{
  			prefix: "Protective",
  			suffix: "of Protection",
  			effect: "The bearer may cast Blade Ward once per day."
  		},
  		{
  			prefix: "Revealing",
  			suffix: "of Revelation",
  			effect: "Contains 1d4 unreplenishable charges of the Detect Magic spell (1st level)."
  		},
  		{
  			prefix: "Riutal",
  			suffix: "of Rituals",
  			effect: "Whenever the bearer is casting a spell as a ritual, they have advantage to maintain concentration during the ritual."
  		},
  		{
  			prefix: "Sailor's",
  			suffix: "of the Sea",
  			effect: "Treat as a +1 weapon after the bearer has taken a long rest at sea. If the bearer steps on dry land, this property becomes temporarily inert."
  		},
  		{
  			prefix: "Secret",
  			suffix: "of Secrets",
  			effect: "Contains 1d4 unreplenishable charges of the Illusory Script spell (1st level)."
  		},
  		{
  			prefix: "Shadowbound",
  			suffix: "of the Shadowfell",
  			effect: "The bearer knows the general direction to the closest Shadow Crossing within a 60 mile radius. They have advantage on saving throws vs. Shadowfell Despair (DMG p. 51-52)."
  		},
  		{
  			prefix: "Shielding",
  			suffix: "of Shielding",
  			effect: "This item contains 1d4 unreplenishable charges of the Shield spell."
  		},
  		{
  			prefix: "Smith's",
  			suffix: "of Reparations",
  			effect: "The bearer may cast Mending once per day."
  		},
  		{
  			prefix: "Sparkling",
  			suffix: "of Lights",
  			effect: "The bearer may cast Dancing Lights once per day."
  		},
  		{
  			prefix: "Striding",
  			suffix: "of Strides",
  			effect: "Contains 1d4 unreplenishable charges of the Longstrider spell (1st level)."
  		},
  		{
  			prefix: "Translucent",
  			suffix: "of Translucence",
  			effect: "The bearer gains an extra level one spell slot, which recovers only after a full moon rises."
  		},
  		{
  			prefix: "Trickster's",
  			suffix: "of Trickery",
  			effect: "The bearer may cast Minor Illusion once per day."
  		},
  		{
  			prefix: "Accurate",
  			suffix: "of Truth",
  			effect: "The bearer may cast True Strike once per day."
  		},
  		{
  			prefix: "Verdant",
  			suffix: "of Druidcraft",
  			effect: "The bearer may cast Druidcraft once per day."
  		},
  		{
  			prefix: "Windborne",
  			suffix: "of the Labyrinth Wind",
  			effect: "When in the Plane of Air, the bearer can navigate the Labyrinth Wind intuitively, and knows the path to the nearest Earth Mote within 60 miles."
  		},
  		{
  			prefix: "Wrathful",
  			suffix: "of Ysgard",
  			effect: "When on the plane of Ysgard, the bearer is unaffected by Immortal Wrath. (DMG p. 61)."
  		},
  		{
  			prefix: "Thunderous",
  			suffix: "of the Rolling Thunder",
  			effect: "Contains 1 unreplenishable charge of Shatter cast at 2nd level."
  		},
  		{
  			prefix: "Chained",
  			suffix: "of Chains",
  			effect: "Contains 1 unreplenishable charge of Hold Person cast at 2nd level."
  		},
  		{
  			prefix: "Spider's",
  			suffix: "of the Spider",
  			effect: "Contains 1 unreplenishable charge of Web cast at 2nd level."
  		},
  		{
  			prefix: "Heliacal",
  			suffix: "of the Sun",
  			effect: "Contains 1 unreplenishable charge of Flaming Sphere cast at 2nd level."
  		},
  		{
  			prefix: "Crippling",
  			suffix: "of Crippling",
  			effect: "Contains 1 unreplenishable charge of Ray of Enfeeblement cast at 2nd level."
  		},
  		{
  			prefix: "Lunar",
  			suffix: "of the Moon",
  			effect: "Contains 1 unreplenishable charge of Moonbeam cast at 2nd level."
  		},
  		{
  			prefix: "Fatespinner's",
  			suffix: "of the Fates",
  			effect: "Contains 1 unreplenishable charge of Augury cast at 2nd level."
  		},
  		{
  			prefix: "Rooting",
  			suffix: "of Roots",
  			effect: "Contains 1 unreplenishable charge of Entanglement cast at 2nd level."
  		},
  		{
  			prefix: "Mirrored",
  			suffix: "of Mirrors",
  			effect: "Contains 1 unreplenishable charge of Mirror Image cast at 2nd level."
  		},
  		{
  			prefix: "Vulpine",
  			suffix: "of the Fox",
  			effect: "Characters trying to track the bearer have a -1 penalty to their skill checks."
  		},
  		{
  			prefix: "Submerged",
  			suffix: "of the Depths",
  			effect: "Treat as a +1 armor when completely submerged in water."
  		},
  		{
  			prefix: "Comforting",
  			suffix: "of Comfort",
  			effect: "Treat as a +1 armor if the bearer has any levels of exhaustion."
  		},
  		{
  			prefix: "Brawler's",
  			suffix: "of Brawling",
  			effect: "Whenever a bearer makes an attack with an improvised weapon, treat as a +1 armor until the beginning of the bearer's next turn."
  		},
  		{
  			prefix: "Eagle-eye",
  			suffix: "of the Eagle",
  			effect: "The bearer can clearly see twice as far and gains advantage on Wisdom (perception) checks that use sight."
  		},
  		{
  			prefix: "Lupine",
  			suffix: "of the Wolf",
  			effect: "The bearer can detect and distinguish scents like a wolf and gains advantage on Wisdom (Perception) checks that use smell."
  		},
  		{
  			prefix: "Chiropteran",
  			suffix: "of the Bat",
  			effect: "The bearer can hear a pin drop in a crowded room and gains advantage on Wisdom (Perception) checks that use hearing."
  		},
  		{
  			prefix: "Black",
  			suffix: "of Darkness",
  			effect: "Contains 1 unreplenishable charge of Darkness cast at 2nd level."
  		}
  	]
  };
  var weapon = {
  	type: [
  		"Club",
  		"Dagger",
  		"Greatclub",
  		"Handaxe",
  		"Javelin",
  		"Light Hammer",
  		"Mace",
  		"Quarterstaff",
  		"Sickle",
  		"Spear",
  		"Crossbow, Light",
  		"Dart",
  		"Shortbow",
  		"Sling",
  		"Battleaxe",
  		"Flail",
  		"Glaive",
  		"Greataxe",
  		"Greatsword",
  		"Halberd",
  		"Lance",
  		"Longsword",
  		"Maul",
  		"Morningstar",
  		"Pike",
  		"Rapier",
  		"Scimitar",
  		"Shortsword",
  		"Trident",
  		"War Pick",
  		"Warhammer",
  		"Whip",
  		"Blowgun",
  		"Crossbow, Hand",
  		"Crossbow, Heavy",
  		"Longbow",
  		"Net"
  	],
  	property: [
  		{
  			prefix: "Aberrant Slayer's",
  			suffix: "of Aberration Slaying",
  			effect: "This weapon gains a +1 bonus to damage rolls against aberrations."
  		},
  		{
  			prefix: "Adamantine",
  			suffix: "of Adamantine",
  			effect: "This item is indestructible."
  		},
  		{
  			prefix: "Acidic",
  			suffix: "of Acid",
  			effect: "As an action you can cast acid splash. You gain a +5 bonus to the spell's attack roll. You cannot use this ability again until you complete a short or long rest."
  		},
  		{
  			prefix: "Alien",
  			suffix: "of Lunacy",
  			effect: "Once attuned, the bearer constantly hears the ongoing, utterly insane mutterings of an alien intelligence trapped inside this weapon. Should this weapon be destroyed, the being will be released."
  		},
  		{
  			prefix: "Amorphous",
  			suffix: "of Ooze Detection",
  			effect: "The weapon sheds 30 feet of bright green light and another 30 feet of dim light after that whenever an ooze is within 100 feet of it."
  		},
  		{
  			prefix: "Ancient",
  			suffix: "of Old",
  			effect: "This worn weapon inscribed with ancient runes can be used as a Spellcasting Focus."
  		},
  		{
  			prefix: "Anomalous",
  			suffix: "of Aberration Detection",
  			effect: "The weapon sheds 30 feet of bright purple light and another 30 feet of dim light after that whenever an aberration is within 100 feet of it."
  		},
  		{
  			prefix: "Antikytheran",
  			suffix: "of Mechanisms",
  			effect: "An ancient mechanism is housed within this weapon that never configures the same way twice. Once per long rest the bearer can spend one minute to attempt a DC 20 investigation check to configure the device. If successful, the weapon becomes a +1 weapon until the end of the next long rest."
  		},
  		{
  			prefix: "Arcane",
  			suffix: "of Arcana",
  			effect: "This weapon can project a spectral tome suspended in mid-air that the bearer can interact with like a physical book. This tome can be used as a spellbook and may contain some spells from its previous bearer."
  		},
  		{
  			prefix: "Arctic",
  			suffix: "of Snow",
  			effect: "Icy wind and snowflakes bluster around this weapon, even in warm environments. The bearer can walk on the surface of the lightest snow, leaving no footprints."
  		},
  		{
  			prefix: "Artist's",
  			suffix: "of the Artist",
  			effect: "The bearer may use this weapon to make colored marks on any surface. The marks will fade away in 24 hours."
  		},
  		{
  			prefix: "Assassin's",
  			suffix: "of the Assassin",
  			effect: "The bearer may add 1d4 poison damage to all attacks made during surprise rounds."
  		},
  		{
  			prefix: "Autumn",
  			suffix: "of Falling Leaves",
  			effect: "The weapon contains a reservoir of natural magic that can a sustain a cascade of falling leaves for up to 30 seconds. The bearer may use an action to plant this weapon in the ground and release this magic. While planted and undepleted, creatures within 10 feet of this weapon have half cover. A long rest restores 1d6 sconds of energy to the weapon's resevoir."
  		},
  		{
  			prefix: "Barbed",
  			suffix: "of Barbs",
  			effect: "After an attack roll, the bearer may use their reaction to add 1d4 to the damage roll and take 1d4 damage."
  		},
  		{
  			prefix: "Beast's",
  			suffix: "of Beast Senses",
  			effect: "While carrying this weapon you have advantage on Wisdom (Perception) checks that rely on smell."
  		},
  		{
  			prefix: "Beast Slayer's",
  			suffix: "of Beast Slaying",
  			effect: "This weapon gains a +1 bonus to damage rolls against beasts."
  		},
  		{
  			prefix: "Binding",
  			suffix: "of Binding",
  			effect: "When you hit a creature with this weapon, the ground beneath binds to its feet, slowing its speed by 5 feet until the end of its next turn. This has no effect on creatures that are flying or swimming."
  		},
  		{
  			prefix: "Blasted",
  			suffix: "of Detonation",
  			effect: "The bearer may use a bonus action to activate destructive magic withing this weapon. It begins to glow with white-hot intensely, and at the beginning of the bearer's next turn, the weapon casts a level 1 Shatter spell (DC 12) centered on the weapon. The weapon then loses this property."
  		},
  		{
  			prefix: "Blessed",
  			suffix: "of Parables",
  			effect: "Whenever the bearer of this item receives magical healing from a spell on the Cleric’s spell list, they gain an additional amount of hit points equal to their Wisdom (Religion) skill."
  		},
  		{
  			prefix: "Blind",
  			suffix: "of Eyes",
  			effect: "Garrish eyes are painted on this weapon. The bearer can use an action to see/unsee through the eyes, even if their own senses are compromised."
  		},
  		{
  			prefix: "Blind Man's",
  			suffix: "of Missing",
  			effect: "When an attack roll made with this weapon results in a miss, you gain 1 temporary hit point."
  		},
  		{
  			prefix: "Blithe",
  			suffix: "of Mirth",
  			effect: "The bearer is filled with inexplicable joy. All charisma skill and saving throw rolls gain a +1 bonus, but all wisdom skill and saving throw rolls gain a -1 penalty."
  		},
  		{
  			prefix: "Bloodthirsty",
  			suffix: "of Bloodthirst",
  			effect: "The bearer of this weapon spend a bonus action and a hit die to turn this weapon into a +1 magic weapon for 1d4 turns."
  		},
  		{
  			prefix: "Bogwalker's",
  			suffix: "of Undead Detection",
  			effect: "The weapon sheds 30 feet of bright light and another 30 feet of dim light after that whenever an undead is within 100 feet of it."
  		},
  		{
  			prefix: "Bonded",
  			suffix: "of Twins",
  			effect: "This item is part of a pair of identical items. The bearer of either knows the location of the other at all times."
  		},
  		{
  			prefix: "Booming",
  			suffix: "of Thunder",
  			effect: "The bearer may choose to deal Thunder damage with this weapon and gain a +1 bonus to damage."
  		},
  		{
  			prefix: "Braided",
  			suffix: "of Knots",
  			effect: "The bearer may use their action to cause the weapon to become a 50 ft length of hemp rope at will."
  		},
  		{
  			prefix: "Brutal",
  			suffix: "of Brutality",
  			effect: "Critical hits made with this weapon deal 2 extra damage of the weapon’s type."
  		},
  		{
  			prefix: "Deep",
  			suffix: "of the Deep",
  			effect: "The bearer can hold their breath for 5 minutes before the onset of asphyxiation."
  		},
  		{
  			prefix: "Broken",
  			suffix: "of Shards",
  			effect: "This weapon is badly damaged. It is a testament to its former power that it is still serviceable. If reforged, it might regain its former power."
  		},
  		{
  			prefix: "Captivating",
  			suffix: "of Saving Graces",
  			effect: "While the bearer is at 0 hp, they begin to hear the most beautiful music they have ever heard. The bearer has advantage on death saving throws and cannot recall details about the music if they wake."
  		},
  		{
  			prefix: "Capricious",
  			suffix: "of Chance",
  			effect: "If the weapon is attuned to a Chaotic aligned character, they may roll a die after completing a long rest. If the result was an even number, treat this as a +1 magic weapon until they finish a long rest."
  		},
  		{
  			prefix: "Cardinal",
  			suffix: "of the Lodestone",
  			effect: "The bearer always knows which way is north and has advantage on Wisdom (Survival) checks for land navigation."
  		},
  		{
  			prefix: "Caustic",
  			suffix: "of Corrosion",
  			effect: "The bearer may choose to deal Acid damage with this weapon and gain a +1 bonus to damage."
  		},
  		{
  			prefix: "Celestial",
  			suffix: "of Celestial Detection",
  			effect: "The weapon sheds 30 feet of bright light and another 30 feet of dim light after that whenever a celestial is within 100 feet of it."
  		},
  		{
  			prefix: "Chained",
  			suffix: "of Chains",
  			effect: "The bearer can spend an action to mystically bind or unbind themselves to this weapon. While bound, the bearer can no longer be disarmed but cannot switch out or throw this weapon."
  		},
  		{
  			prefix: "Charged",
  			suffix: "of Lightning",
  			effect: "The bearer may choose to deal Lightning damage with this weapon and gain a +1 bonus to damage."
  		},
  		{
  			prefix: "Chill",
  			suffix: "of Chills",
  			effect: "The air around the bearer of this weapon is always unnaturally cold. One's breath becomes visible, and frost continually forms on the surface of the bearer's hair, weapons, and armor. The bearer suffers no ill effect from being in extremely cold environments."
  		},
  		{
  			prefix: "Civilized",
  			suffix: "of the Capital",
  			effect: "The bearer gains +1 to intelligence saving thows."
  		},
  		{
  			prefix: "Cobra's",
  			suffix: "of Acid Spitting",
  			effect: "As an action you can cast poison spray (spell save DC 13). You cannot use this ability again until you complete a short or long rest."
  		},
  		{
  			prefix: "Compassionate",
  			suffix: "of Compassion",
  			effect: "Wounds inflicted with this weapon cause no pain."
  		},
  		{
  			prefix: "Consecrated",
  			suffix: "of Consecration",
  			effect: "Treat as a +1 magic weapon when attacking Undead. Any creature slain with this weapon cannot be raised as undead."
  		},
  		{
  			prefix: "Concentrated",
  			suffix: "of Concentration",
  			effect: "As an action you gain advantage on your next ability check made before the end of your next turn. You cannot use this ability again until you complete a short or long rest."
  		},
  		{
  			prefix: "Corrosive",
  			suffix: "of Dissolving",
  			effect: "When the bearer hits a creature with this weapon, they may deal their proficiency bonus in acid damage to a different creature within 5 feet of the target."
  		},
  		{
  			prefix: "Courser's",
  			suffix: "of the Hostler",
  			effect: "The bearer can placate and calm any mount not under the influence of a spell or possession."
  		},
  		{
  			prefix: "Crashing",
  			suffix: "of the Crashing Waves",
  			effect: "Whenever the bearer deals damage to a hostile creature, this weapon gains a charge. As a bonus action, the bearer can use any number of charges to deal that much extra lightning damage on their next attack. If a round (6 seconds) goes by and the weapon has not struck a foe, it loses all charges."
  		},
  		{
  			prefix: "Crawling",
  			suffix: "of Vermin",
  			effect: "The crawling things of the earth, such as insects, snakes, and vermin, are attracted to this item. When placed on the ground, such creatures will scurry toward the item like moths drawn to the flame."
  		},
  		{
  			prefix: "Cruel",
  			suffix: "of Cruelty",
  			effect: "The bearer may re-roll damage from critical hits scored with this weapon and take the second result."
  		},
  		{
  			prefix: "Dancing",
  			suffix: "of Strings",
  			effect: "The bearer may spend an action to permanently animate this weapon. Use the Flying Sword stat block from the Monster Manual p. 20. Also, the weapon retains any other magical properties. Once the animated weapon is reduced to 0 hp or unattuned, the weapon shatters like glass."
  		},
  		{
  			prefix: "Dark",
  			suffix: "of Darkness",
  			effect: "The bearer may choose to deal Necrotic damage with this weapon and gain a +1 bonus to damage."
  		},
  		{
  			prefix: "Dead",
  			suffix: "of Rigor Mortis",
  			effect: "If this weapon is entombed within a corpse for 8 hours, the bearer may treat it as a +1 magic weapon until the end of their next long rest."
  		},
  		{
  			prefix: "Deceptive",
  			suffix: "of Deception",
  			effect: "When the bearer attunes this item, choose a harmless object within sight such as a tea cup, a ball of yarn, or a hairpin. If the bearer is touching the item, they may use an action to transform the weapon in or out of this form."
  		},
  		{
  			prefix: "Defensive",
  			suffix: "of Defense",
  			effect: "Whenever the bearer takes a dodge or disengage action, they may move an additional 5 feet that round."
  		},
  		{
  			prefix: "Delver's",
  			suffix: "of the Delver",
  			effect: "While underground, the bearer of this item always knows the item's depth below the surface and the direction to the nearest path leading upward."
  		},
  		{
  			prefix: "Desperate",
  			suffix: "of Desperation",
  			effect: "The bearer may use an action to release divine magic within, equivalent to a level 1 Cure Wounds spell being cast on all creatures (friend or foe) within 5 feet of the bearer. The weapon is destroyed and loses all magical properties."
  		},
  		{
  			prefix: "Disguized",
  			suffix: "of Many Appearances",
  			effect: "As an action you make this weapon appear to others as a similarly shaped and sized object of your choice. Anyone interacting with the weapon instantly realizes its true nature and if you make an attack with the weapon others see it for what it truly is. With another action you can make it appear to be a weapon again."
  		},
  		{
  			prefix: "Dissassembler's",
  			suffix: "of Dissassembly",
  			effect: "This weapon gains a +1 bonus to damage rolls against constructs."
  		},
  		{
  			prefix: "Diplomatic",
  			suffix: "of Diplomacy",
  			effect: "The bearer gains one language proficiency chosen by the DM."
  		},
  		{
  			prefix: "Dowsing",
  			suffix: "of Dowsing",
  			effect: "As an action you command the weapon to point in the direction of the closest source of water."
  		},
  		{
  			prefix: "Draconic",
  			suffix: "of Dragons",
  			effect: "Treat as a +1 weapon when attacking Dragons."
  		},
  		{
  			prefix: "Draining",
  			suffix: "of Draining",
  			effect: "When the bearer makes a successful attack with this weapon, they gain 10% of the damage as temporary hit points (round down, minimum of 1)."
  		},
  		{
  			prefix: "Dreamscribe's",
  			suffix: "of the Dreamscribe",
  			effect: "The bearer can read books they are touching while sleeping."
  		},
  		{
  			prefix: "Drunkard's",
  			suffix: "of Taverns",
  			effect: "The bearer always knows the direction to the nearest tavern in a 60 mile radius."
  		},
  		{
  			prefix: "Dryad's",
  			suffix: "of the Dryad",
  			effect: "When the bearer is outdoors, harmless creatures such as squirrels and birds flock to them when they sing songs for a minute or longer."
  		},
  		{
  			prefix: "Eager",
  			suffix: "of Yearning",
  			effect: "The bearer does not require an interaction to draw or sheath this weapon."
  		},
  		{
  			prefix: "Earthen",
  			suffix: "of Rooting",
  			effect: "The bearer of this weapon is firmly rooted to the ground. When standing on solid earth or stone, if an effect would move the bearer against his will the distance is reduced by 5 feet."
  		},
  		{
  			prefix: "Eastern",
  			suffix: "of the East",
  			effect: "The bearer gains +1 to wisdom saving throws."
  		},
  		{
  			prefix: "Effortless",
  			suffix: "of Ease",
  			effect: "This weapon takes only one minute to attune."
  		},
  		{
  			prefix: "Effulgent",
  			suffix: "of Light",
  			effect: "The bearer can use this item to cast the Light cantrip on itself at will. While lit, it deals radiant damage instead of its usual damage type."
  		},
  		{
  			prefix: "Eidolic",
  			suffix: "of Apparitions",
  			effect: "Dark apparitions bound to this weapon haunt the edges of the bearer's peripheral vision, becoming hideously visible to devour the bodies of beings slain by this weapon. Once 666 bodies have been devoured, the apparitions will be released to prey upon our world and the sword becomes a permanent +3 weapon. So far, the weapon has eaten 1d6 x 100 + 3d20 bodies."
  		},
  		{
  			prefix: "Elemental",
  			suffix: "of Elemental Detection",
  			effect: "The weapon sheds 30 feet of bright light and another 30 feet of dim light after that whenever an elemental is within 100 feet of it."
  		},
  		{
  			prefix: "Elementalist's",
  			suffix: "of Elemental Slaying",
  			effect: "This weapon gains a +1 bonus to damage rolls against elementals."
  		},
  		{
  			prefix: "Enchanting",
  			suffix: "of the Enchantress",
  			effect: "Treat this as a +1 weapon as long as the bearer is enchanted by a spell from the enchantment school of magic."
  		},
  		{
  			prefix: "Enervating",
  			suffix: "of Inner Strength",
  			effect: "Once per long rest, the bearer may spend one minute contemplating the patterns etched on this weapon's surface and regain 1 expended ki point."
  		},
  		{
  			prefix: "Epistemological",
  			suffix: "of Truth",
  			effect: "The bearer has advantage on investigation checks to see through illusions. In addition the bearer can gains advantage on an Insight check to check if someone is lying and disadvantage on all Deception checks."
  		},
  		{
  			prefix: "Equanimeous",
  			suffix: "of Balance",
  			effect: "When attuned to neutral aligned characters, this weapon has a +1 attack bonus during the day and a +1 damage bonus at night."
  		},
  		{
  			prefix: "Etched",
  			suffix: "of Allegories",
  			effect: "Ancient glyphs adorn the surface of this weapon, telling a story with a moral of the player's choosing (such as 'One good turn deserves another' or 'United we stand, divided we fall'). While attuning to this weapon, the glyphs spread across the entire skin of the bearer and the moral of the story becomes a bond trait for this character."
  		},
  		{
  			prefix: "Expanding",
  			suffix: "of Expansion",
  			effect: "You may add 1d10 to a damage roll made with this weapon. You cannot use this ability again until you complete a long rest."
  		},
  		{
  			prefix: "Exuberant",
  			suffix: "of Expertise",
  			effect: "As a bonus action you may gain advantage on your next attack roll made before the end of your next turn. You cannot use this ability again until you complete a long rest."
  		},
  		{
  			prefix: "Fabricated",
  			suffix: "of Construct Detection",
  			effect: "The weapon sheds 30 feet of bright light and another 30 feet of dim light after that whenever a construct is within 100 feet of it."
  		},
  		{
  			prefix: "Faceless",
  			suffix: "of Many Identities",
  			effect: "As an action you can cast disguise self (spell save DC 13). You cannot use this ability again until you complete a long rest."
  		},
  		{
  			prefix: "Fairweather",
  			suffix: "of Fairweather",
  			effect: "Treat this as a +1 weapon if the bearer has more than half of their maximum hit points."
  		},
  		{
  			prefix: "Fatespun",
  			suffix: "of Intertwined Fates",
  			effect: "Once per short rest, when the bearer crits with this weapon they gain inspiration."
  		},
  		{
  			prefix: "Favored",
  			suffix: "of the Favored",
  			effect: "Once per long rest, the bearer may roll a saving throw with advantage."
  		},
  		{
  			prefix: "Feathered",
  			suffix: "of Feathers",
  			effect: "The bearer may use their reaction to reduce fall damage by 1d6 until the end of turn. They cannot use this feature again until completing a long rest."
  		},
  		{
  			prefix: "Feeding",
  			suffix: "of Food",
  			effect: "As an action the weapon can turn a small, worthless, unattended, organic object (such as a clump of dirt) into a bland, edible substance. This substance provides enough food to feed a Small or Medium sized creature for one day. You cannot use this ability again until you complete a long rest."
  		},
  		{
  			prefix: "Feindish",
  			suffix: "of Fiend Detection",
  			effect: "The weapon sheds 30 feet of bright red light and another 30 feet of dim light after that whenever a fiend is within 100 feet of it."
  		},
  		{
  			prefix: "Feind-Slayer's",
  			suffix: "of Fiend Slaying",
  			effect: "This weapon gains a +1 bonus to damage rolls against fiends."
  		},
  		{
  			prefix: "Final",
  			suffix: "of Last Hope",
  			effect: "The bearer may spend an action beseaching the spirits within this weapon. Roll a DC 20 Persuasion check or make a sufficiently impassioned plea. If successful, the spirits will sacrifice themselves so that for the next minute the next attack with this weapon will be a crit. The weapon then loses this property forever."
  		},
  		{
  			prefix: "First",
  			suffix: "of Speed",
  			effect: "The bearer gains a +1 bonus to initiative rolls. As long as the bearer is first in the initiative order, their speed increases by 5 feet."
  		},
  		{
  			prefix: "Flickering",
  			suffix: "of Candlelight",
  			effect: "As an action you can make the weapon shed bright light in a 10-foot radius and dim light in another 10 feet. You can use another action to make the weapon stop shedding light."
  		},
  		{
  			prefix: "Focused",
  			suffix: "of Focus",
  			effect: "As a bonus action you gain advantage on your next ability check made before the end of your next turn. You cannot use this ability again until you complete a long rest."
  		},
  		{
  			prefix: "Focusing",
  			suffix: "of Concentrating",
  			effect: "As an action you may gain advantage on your next attack roll made before the end of your next turn. You cannot use this ability again until you complete a short rest."
  		},
  		{
  			prefix: "Force",
  			suffix: "of Force",
  			effect: "The bearer may choose to deal Force damage with this weapon and gain a +1 bonus to damage."
  		},
  		{
  			prefix: "Forgotten",
  			suffix: "of the Forgotten",
  			effect: "The bearer may spend an action to attempt to ignite the old magic in this weapon with a DC 13 Charisma check. If successful, treat the weapon as a +1 weapon as long as the bearer maintains concentration on this effect, maximum 10 minutes."
  		},
  		{
  			prefix: "Friendly",
  			suffix: "of Friendship",
  			effect: "Contains 1d4 unreplenishable charges of the Animal Friendship spell (1st level)."
  		},
  		{
  			prefix: "Frozen",
  			suffix: "of Ice",
  			effect: "The bearer may choose to deal Cold damage with this weapon and gain a +1 bonus to damage."
  		},
  		{
  			prefix: "Furious",
  			suffix: "of Fury",
  			effect: "Treat as a +1 magic weapon when the bearer is raging."
  		},
  		{
  			prefix: "Ghost-Tipped",
  			suffix: "of the Ranks",
  			effect: "Whenever the bearer crits with this weapon, it gains the reach property (10 ft) for 1 minute. If it already had the reach property, increase its reach by 5 ft."
  		},
  		{
  			prefix: "Ghost-Touched",
  			suffix: "of Remembered Glory",
  			effect: "This weapon can be wielded by a missing limb. If so, it becomes a +1 weapon."
  		},
  		{
  			prefix: "Giant Slayer's",
  			suffix: "of Giant Slaying",
  			effect: "This weapon gains a +1 bonus to damage rolls against giants."
  		},
  		{
  			prefix: "Glorious",
  			suffix: "of Glory",
  			effect: "The bearer may choose to change the damage type of weapon to Radiant and its damage roll gains a +1 bonus."
  		},
  		{
  			prefix: "Goading",
  			suffix: "of Duels",
  			effect: "Once per short rest, when the bearer crits with this weapon it casts Compelled Duel on the creature it hit, DC 12."
  		},
  		{
  			prefix: "Graverobber's",
  			suffix: "of Undead Slaying",
  			effect: "This weapon gains a +1 bonus to damage rolls against undead."
  		},
  		{
  			prefix: "Guardian",
  			suffix: "of Protection",
  			effect: "When the bearer attunes this weapon they must choose a being in their mind. Henceforth, if the bearer is within 5 feet of the chosen being they may use their reaction to impose disadvantage on an attack roll against that creature. They cannot do this again until they have finished a short or long rest."
  		},
  		{
  			prefix: "Halfling's",
  			suffix: "of Giant Detection",
  			effect: "The weapon sheds 30 feet of bright light and another 30 feet of dim light after that whenever a giant is within 100 feet of it."
  		},
  		{
  			prefix: "Halucinating",
  			suffix: "of Halucinations",
  			effect: "As an action you can cast minor illusion (spell save DC 13). You cannot use this ability again until you complete a short or long rest."
  		},
  		{
  			prefix: "Harkening",
  			suffix: "of Eavesdropping",
  			effect: "As long as it is on the same plane of existence, the bearer can hear through this weapon as if they were present."
  		},
  		{
  			prefix: "Haunted",
  			suffix: "of Vengeful Spirits",
  			effect: "Smoke rises from this weapon revealing the apparitions that haunt it. They lash out at living targets every time the bearer scores a hit, doing an additional +2 necrotic damage."
  		},
  		{
  			prefix: "Healer's",
  			suffix: "of Health",
  			effect: "As an action you can heal 1d4+1 hit points. You cannot use this ability again until you complete a long rest."
  		},
  		{
  			prefix: "Healing",
  			suffix: "of Healing",
  			effect: "This item contains a healing node. Once per long rest the bearer can use the node and an action to heal 1d4 hit points at touch range."
  		},
  		{
  			prefix: "Heroic",
  			suffix: "of Heroes",
  			effect: "Ancient heroes have wielded this weapon throughout the ages, and their courage still lingers. The bearer has advantage on saving throws vs. fear effects."
  		},
  		{
  			prefix: "Holy",
  			suffix: "of Faith",
  			effect: "When the bearer of this item rolls hit dice, they can choose to re-roll them and take the second result."
  		},
  		{
  			prefix: "Icy",
  			suffix: "of Icicles",
  			effect: "As an action you can cast ray of frost. You gain a +5 bonus to the spell's attack roll. You cannot use this ability again until you complete a short or long rest."
  		},
  		{
  			prefix: "Iconic",
  			suffix: "of Symbols",
  			effect: "The weapon is inscribed with holy symbols of the God of the DM's choice. A cleric or paladin that serves that god may use this weapon as a divine focus."
  		},
  		{
  			prefix: "Illuminating",
  			suffix: "of Illumination",
  			effect: "As an action you can cast light. You cannot use this ability again until you complete a short or long rest."
  		},
  		{
  			prefix: "Imaginary",
  			suffix: "of the Imagination",
  			effect: "Once attuned, this weapon exists only in the bearer's imagination until held with intent to do harm. It becomes imaginary again after a short rest."
  		},
  		{
  			prefix: "Impact",
  			suffix: "of Impact",
  			effect: "Once per long rest, the bearer may spend an action to activate an ancient mechanism within the weapon. Gears turn and parts shift as the weapon reconfigures itself into a more menacing version of the original. For 1 minute, attacks made with this weapon ignore resistances (but not immunities)."
  		},
  		{
  			prefix: "Indifferent",
  			suffix: "of Indifference",
  			effect: "The bearer no longer feels emotions. They have immunity to fear effects but disadvantage on Insight and Performance checks, and cannot Rage."
  		},
  		{
  			prefix: "Indomitable",
  			suffix: "of Surging Strength",
  			effect: "When the bearer is grappled by multiple targets, they may choose to break the strongest grapple. If they succeed, then all grapples are broken."
  		},
  		{
  			prefix: "Inspired",
  			suffix: "of Inspiration",
  			effect: "The bearer gains their Constitution modifier in temporary hit points whenever they gain or use inspiration."
  		},
  		{
  			prefix: "Jagged",
  			suffix: "of Teeth",
  			effect: "Once hit by this weapon, the victim cannot regain hit points until the beginning of their next turn."
  		},
  		{
  			prefix: "Jester's",
  			suffix: "of Madness",
  			effect: "Once per short rest, when the bearer crits with this weapon it casts Crown of Madness on the creature it hit, DC 12."
  		},
  		{
  			prefix: "Jumper's",
  			suffix: "of Jumping",
  			effect: "As an action you can cast jump on yourself. You cannot use this ability again until you complete a long rest."
  		},
  		{
  			prefix: "Leaping",
  			suffix: "of Leaping",
  			effect: "Contains 1d4 unreplenishable charges of the Jump spell (1st level)."
  		},
  		{
  			prefix: "Liar's",
  			suffix: "of Lies",
  			effect: "Contains 1d4 unreplenishable charges of the Silent Image spell (1st level)."
  		},
  		{
  			prefix: "Lifting",
  			suffix: "of Lifting",
  			effect: "As an action you can cast mage hand. You cannot use this ability again until you complete a short or long rest."
  		},
  		{
  			prefix: "Lightfooted",
  			suffix: "of Dodging",
  			effect: "As a reaction you may gain a +1 bonus to AC which lasts until the start of your next turn. You cannot use this ability again until you complete a short or long rest."
  		},
  		{
  			prefix: "Gambler's",
  			suffix: "of Luck",
  			effect: "You can reroll a natural 1 rolled on a d20 for an ability check, attack roll, or saving throw. You cannot use this ability again until you complete a long rest."
  		},
  		{
  			prefix: "Mage Killer's",
  			suffix: "of the Mage Killer",
  			effect: "Ignores the AC bonuses given by spells such as Mage Armor and Shield."
  		},
  		{
  			prefix: "Malediction",
  			suffix: "of Malediction",
  			effect: "Contains 1d4 unreplenishable charges of the Bane spell(1st level)."
  		},
  		{
  			prefix: "Maligning",
  			suffix: "of Maligning",
  			effect: "This weapon does an additional 1d4 damage on attacks of opportunity."
  		},
  		{
  			prefix: "Marquis'",
  			suffix: "of the Maquis",
  			effect: "Once per short rest, when you crit with this weapon it casts Command on its target with the word 'grovel', DC 12."
  		},
  		{
  			prefix: "Masked",
  			suffix: "of Still Winds",
  			effect: "The bearer and all of their possessions are completely odorless."
  		},
  		{
  			prefix: "Master's",
  			suffix: "of Servants",
  			effect: "Contains 1d4 unreplenishable charges of the Unseen Servant spell (1st level)."
  		},
  		{
  			prefix: "Meadowforged",
  			suffix: "of the Meadow",
  			effect: "A gentle kaleidoscope of butterflies always accompanies this weapon. The bearer has advantage on persuasion checks with Fae creatures less than CR 3."
  		},
  		{
  			prefix: "Memorial",
  			suffix: "of Memories",
  			effect: "When the bearer kills a monster with this weapon, treat this weapon as a +1 weapon whenever you fight another monster of this kind. When the weapon is unattuned, it loses its memory."
  		},
  		{
  			prefix: "Merciful",
  			suffix: "of Mercy",
  			effect: "As an action you can cast spare the dying. You cannot use this ability again until you complete a short or long rest."
  		},
  		{
  			prefix: "Messaging",
  			suffix: "of Sending",
  			effect: "As an action you can cast message. You cannot use this ability again until you complete a short or long rest."
  		},
  		{
  			prefix: "Mimicking",
  			suffix: "of Mimicry",
  			effect: "When the bearer places this weapon beside another melee weapon for 1 minute, this weapon changes weapon type, size, and physical qualities to become an exact replica of the other weapon. It does not gain any of the other weapon's magical properties."
  		},
  		{
  			prefix: "Mindscour",
  			suffix: "of Countermeasures",
  			effect: "This weapon disrupts all telepathic communication within 20 feet. Psychic attacks are not affected."
  		},
  		{
  			prefix: "Mind's Eye",
  			suffix: "of the Mind's Eye",
  			effect: "The bearer may choose to deal Psychic damage with this weapon and gain a +1 bonus to damage."
  		},
  		{
  			prefix: "Monster Hunter's",
  			suffix: "of Monstrosity Detection",
  			effect: "The weapon sheds 30 feet of bright light and another 30 feet of dim light after that whenever a monstrosity is within 100 feet of it."
  		},
  		{
  			prefix: "Monster-Killing",
  			suffix: "of Monster Killing",
  			effect: "This weapon gains a +1 bonus to damage rolls against monstrosities."
  		},
  		{
  			prefix: "Mortuary",
  			suffix: "of the Mortal Coil",
  			effect: "The bearer's vital signs, such as a pulse and breathing, are masked by this weapon and are undetectable by non-magical inspection."
  		},
  		{
  			prefix: "Mourner's",
  			suffix: "of Last Words",
  			effect: "Contains one charge of the Speak With Dead spell. It regains the charge when the bearer dies."
  		},
  		{
  			prefix: "Murderous",
  			suffix: "of Slaughter",
  			effect: "When the bearer reduces a creature to zero hit points they may use a bonus action to move half their movement speed towards another hostile creature."
  		},
  		{
  			prefix: "Northern",
  			suffix: "of the North",
  			effect: "The bearer gains +1 to constitution saving throws."
  		},
  		{
  			prefix: "Nourishing",
  			suffix: "of Comfort",
  			effect: "Once per long rest, the bearer may lay this weapon beside a bowl of water. After a moment, the bowl of water will begin to boil and after a minute it will transform into a hot meal of special significance to the bearer (Their mother's noodle soup or father's elk stew). Eating this delicious meal is so satisfying that it counts as nourishment for an entire day and restores 1d4 hit points. To anyone other than the bearer, the bowl and its contents appears unchanged."
  		},
  		{
  			prefix: "Nullifying",
  			suffix: "of Nullification",
  			effect: "Any spell of 1st level or lower that includes the bearer as a target has a 10% chance to fail, cast by both friendly and enemy spellcasters."
  		},
  		{
  			prefix: "Ooze Hunter's",
  			suffix: "of Ooze Slaying",
  			effect: "This weapon gains a +1 bonus to damage rolls against oozes."
  		},
  		{
  			prefix: "Painstrike",
  			suffix: "of Pain",
  			effect: "Treat this as a +1 weapon for 1 minute if the bearer takes 13 or more damage in a single round of combat."
  		},
  		{
  			prefix: "Paranoid",
  			suffix: "of Paranoia",
  			effect: "As an action you can cast detect magic. You cannot use this ability again until you complete a long rest."
  		},
  		{
  			prefix: "Parrying",
  			suffix: "of Parrying",
  			effect: "The bearer may use their reaction to gain a +1 AC bonus until the end of the turn."
  		},
  		{
  			prefix: "Patient",
  			suffix: "of Patience",
  			effect: "Whenever the bearer readies an action, they have advantage on constitution saving throws to maintain concentration."
  		},
  		{
  			prefix: "Pernicious",
  			suffix: "of the Snake",
  			effect: "The bearer may choose to deal Poison damage with this weapon and gain a +1 bonus to damage."
  		},
  		{
  			prefix: "Phantom",
  			suffix: "of the Phantasm",
  			effect: "Damage inflicted with this weapon leaves no physical sign of injury, such as cuts and bruises, and draws no blood."
  		},
  		{
  			prefix: "Pious",
  			suffix: "of the Pious",
  			effect: "The bearer may spend ten minutes paying honor to the spirits that govern this weapon, shaving their head in tribute. Once the ceremony is finished, it becomes a +1 weapon until the end of the next long rest. They must wait 10 days until they have long enough hair to re-enact this ritual."
  		},
  		{
  			prefix: "Prospecter's",
  			suffix: "of Gem Detection",
  			effect: "As an action you command the weapon to point in the direction of the closest gem worth 50 gp or more."
  		},
  		{
  			prefix: "Preacher's",
  			suffix: "of the Preacher",
  			effect: "This weapon increases the bearer's Channel Divinity range by 5 feet."
  		},
  		{
  			prefix: "Pyromancer's",
  			suffix: "of Pyromancy",
  			effect: "As an action you can control flames. You cannot use this ability again until you complete a short or long rest."
  		},
  		{
  			prefix: "Quantum",
  			suffix: "of Uncertainty",
  			effect: "Every time the bearer takes a long rest, this weapon changes in appearance and function. It retains this property but any other properties are lost. However, it gains a new random ability from this chart."
  		},
  		{
  			prefix: "Quicksilver",
  			suffix: "of Quicksilver",
  			effect: "The bearer may use a bonus action to change the form of the weapon to any other simple or martial melee weapon. It always counts as a silvered weapon no matter what form it takes."
  		},
  		{
  			prefix: "Rainbow",
  			suffix: "of Rainbows",
  			effect: "The bearer may change the damage type of a spell they cast once per long rest."
  		},
  		{
  			prefix: "Reader's",
  			suffix: "of Literacy",
  			effect: "As an action you can cast comprehend languages. You cannot use this ability again until you complete a long rest."
  		},
  		{
  			prefix: "Refined",
  			suffix: "of Quality",
  			effect: "This weapon is so finely constructed it never needs maintenance, cannot rust or tarnish, and gains a +1 to damage rolls."
  		},
  		{
  			prefix: "Reliable",
  			suffix: "of Reliance",
  			effect: "When attacking with this weapon, crit fails (rolling 1) on attack rolls do not automatically miss the target."
  		},
  		{
  			prefix: "Renaissance",
  			suffix: "of the Renaissance",
  			effect: "Once per long rest, the bearer may gain +1 to any skill check."
  		},
  		{
  			prefix: "Repairing",
  			suffix: "of Repairs",
  			effect: "As an action you can cast mending. You cannot use this ability again until you complete a short or long rest."
  		},
  		{
  			prefix: "Resisting",
  			suffix: "of Resistances",
  			effect: "As an action you can gain resistance to all damage types until the end of your next turn. You cannot use this ability again until you complete a long rest."
  		},
  		{
  			prefix: "Resonant",
  			suffix: "of Resonance",
  			effect: "The bearer can spend an action and 1 ki point to treat this as a +1 weapon for 1 minute."
  		},
  		{
  			prefix: "Restrained",
  			suffix: "of Subdual",
  			effect: "This weapon only deals non-lethal damage to living targets."
  		},
  		{
  			prefix: "Righteous",
  			suffix: "of Righteousness",
  			effect: "Treat this as a +1 weapon during the day when attuned to a good aligned character."
  		},
  		{
  			prefix: "Rosen",
  			suffix: "of Roses",
  			effect: "A ruby worth 30gp is the center stone in a rose-shaped setting on the weapon. If the bearer removes the ruby, the weapon grows a new one at the end of the month. The weapon always smells of roses while the ruby is in its setting."
  		},
  		{
  			prefix: "Runic",
  			suffix: "of Runes",
  			effect: "Whenever bearer casts a spell, treat this weapon as a +1 weapon until the beginning of their next turn."
  		},
  		{
  			prefix: "Saving",
  			suffix: "of Saves",
  			effect: "You gain advantage on a saving throw. You cannot use this ability again until you complete a long rest."
  		},
  		{
  			prefix: "Scarlet",
  			suffix: "of Bleeding",
  			effect: "This weapon perpetually drips the blood of a monstrous race, chosen by the DM. The bearer can speak that race's language and has advantage on intimidation checks against monsters of that race when the weapon is revealed."
  		},
  		{
  			prefix: "Seige",
  			suffix: "of Sieges",
  			effect: "This weapon does maximum damage against man-made, inanimate objects."
  		},
  		{
  			prefix: "Serrated",
  			suffix: "of Serration",
  			effect: "You may add 1d4 to a damage roll made with this weapon. You cannot use this ability again until you complete a short or long rest."
  		},
  		{
  			prefix: "Shading",
  			suffix: "of Shade",
  			effect: "The bearer suffers no harm or discomfort in temperatures as high as 120 degrees Fahrenheit."
  		},
  		{
  			prefix: "Shadow",
  			suffix: "of Shadows",
  			effect: "Treat as a +1 magic weapon when in dim light."
  		},
  		{
  			prefix: "Shamanic",
  			suffix: "of Rituals",
  			effect: "Whenever the bearer is casting a spell as a ritual, they have advantage to maintain concentration during the ritual."
  		},
  		{
  			prefix: "Shaming",
  			suffix: "of Disgrace",
  			effect: "Any humanoid creature hit with this weapon loses all of the hair on their head and face."
  		},
  		{
  			prefix: "Shieldmaden's",
  			suffix: "of the Targe",
  			effect: "As a reaction you may gain a +1d4 bonus to AC that lasts until the start of your next turn. You cannot use this ability again until you complete a long rest."
  		},
  		{
  			prefix: "Shielding",
  			suffix: "of Shielding",
  			effect: "This item contains 1d4 unreplenishable charges of the Shield spell."
  		},
  		{
  			prefix: "Singing",
  			suffix: "of Singes",
  			effect: "As an action you can cast fire bolt. You gain a +5 bonus to the spell's attack roll. You cannot use this ability again until you complete a short or long rest."
  		},
  		{
  			prefix: "Skyward",
  			suffix: "of Unusual Gravity",
  			effect: "This weapon falls up instead of down. Its weight does not contribute towards encumberance."
  		},
  		{
  			prefix: "Slayer's",
  			suffix: "of Slaying",
  			effect: "Treat as a +1 weapon when attacking Demons and Devils."
  		},
  		{
  			prefix: "Smoldering",
  			suffix: "of Flame",
  			effect: "The bearer may choose to deal Fire damage with this weapon and gain a +1 bonus to damage."
  		},
  		{
  			prefix: "Smuggler's",
  			suffix: "of Smuggling",
  			effect: "This weapon contains a small, secret compartment. A character must succeed on a DC 20 Wisdom (Perception) check to reveal the compartment when searching the bearer."
  		},
  		{
  			prefix: "Sojourner's",
  			suffix: "of the Sojourner",
  			effect: "A poem, story, or map that describes a long-forgotten treasure that will make this weapon more powerful is etched on the surface of the weapon."
  		},
  		{
  			prefix: "Solemn",
  			suffix: "of Solemnity",
  			effect: "The bearer may spend an action to stabilize a dying creature within 5 feet. They cannot do so again until they have completed a long rest."
  		},
  		{
  			prefix: "Soulbound",
  			suffix: "of Imprisonment",
  			effect: "A powerful malevolent being is bound within this weapon and it will be released upon the weapon's destruction."
  		},
  		{
  			prefix: "Southern",
  			suffix: "of the South",
  			effect: "The bearer gains +1 to dexterity saving throws."
  		},
  		{
  			prefix: "Spring",
  			suffix: "of Spring Rain",
  			effect: "The weapon contains a pool of healing energy that can restore up to 30 hp. The bearer may use an action to plant this weapon in the ground and release this energy. While planted and undepleted, creatures that end their turn within 10 feet of the weapon are showered in warm rain that restores 1 hp per round. A long rest restores 1d6 hp of energy to the weapon's pool."
  		},
  		{
  			prefix: "Staunch",
  			suffix: "of Security",
  			effect: "Anyone except the bearer must attempt a DC 10+x Charisma check to pick up this weapon, where x is the bearer's level. Any attack made with this weapon against the bearer has disadvantage."
  		},
  		{
  			prefix: "Stepping",
  			suffix: "of Misty Step",
  			effect: "As an action you teleport 10 feet to a space you can see. You cannot use this ability again until you complete a long rest."
  		},
  		{
  			prefix: "Strange",
  			suffix: "of the Far Realm",
  			effect: "Treat this as a +1 weapon when attacking Aboleths and other creatures from the Far Realm."
  		},
  		{
  			prefix: "Strapping",
  			suffix: "of the Undaunted",
  			effect: "Whenever the bearer breaks a grapple, they may choose to push the grappler up to 10 feet away from them as a bonus action."
  		},
  		{
  			prefix: "Striding",
  			suffix: "of Strides",
  			effect: "Contains 1d4 unreplenishable charges of the Longstrider spell (1st level)."
  		},
  		{
  			prefix: "Summer",
  			suffix: "of the Scorching Sun",
  			effect: "The weapon contains a reservoir of scorching light that can deal up to 30 hp of radiant damage. The bearer may use an action to plant this weapon in the ground and release this energy. While planted and undepleted, creatures that end their turn within 10 feet of the weapon are brightly illuminated and seared for 1 radiant damage per round. A long rest restores 1d6 hp of energy to the weapon's resevoir."
  		},
  		{
  			prefix: "Surgeon's",
  			suffix: "of the Surgeon",
  			effect: "The bearer may use a bonus action to gain advantage to Wisdom (Medicine) checks for the rest of the turn."
  		},
  		{
  			prefix: "Swift",
  			suffix: "of Reflexes",
  			effect: "If the bearer is first in the initiative order, they may treat this as a +1 weapon."
  		},
  		{
  			prefix: "Tenacious",
  			suffix: "of the Tenacious",
  			effect: "When the bearer takes a long rest, they gain back one additional hit die."
  		},
  		{
  			prefix: "Tithing",
  			suffix: "of Tithes",
  			effect: "The bearer may lay 10 gold coins along the surface of the weapon and pray to a God of their choice for 10 minutes. At the end of this ritual, the weapon becomes a +1 weapon until the next long rest and the 10 gold coins are permanently gone. This boon will be lost if the bearer acts in a way that is contradictory to that deity's teachings."
  		},
  		{
  			prefix: "Trailblazer's",
  			suffix: "of the Lost",
  			effect: "As an action you can command the weapon to point in the direction of the closest settlement of humanoids with a population over 100."
  		},
  		{
  			prefix: "Transient",
  			suffix: "of the Breaking Seal",
  			effect: "Over the course of a long rest, the bearer may transfer the other magic properties of this weapon to a melee weapon of their choosing. This weapon then loses those properties."
  		},
  		{
  			prefix: "Translucent",
  			suffix: "of Translucence",
  			effect: "The bearer gains an extra level one spell slot, which recovers only after a full moon rises."
  		},
  		{
  			prefix: "Trusty",
  			suffix: "of Resurgence",
  			effect: "Treat this as a +1 weapon if the bearer has half their maximum hit points or less."
  		},
  		{
  			prefix: "Tsunami",
  			suffix: "of Crashing Waves",
  			effect: "Once per short rest, when the bearer crits with this weapon, all creatures other than the bearer within 5 feet of the target (including the target) must roll a DC 12 constitution saving throw or be knocked prone by a wave of concussive force."
  		},
  		{
  			prefix: "Twilight's",
  			suffix: "of the Setting Sun",
  			effect: "Once per short rest, when you crit with this weapon it casts Hex on the target. Roll a d6 to determine which of the target's attributes is weakened. The bearer cannot transfer the curse to another creature."
  		},
  		{
  			prefix: "Unity",
  			suffix: "of Unity",
  			effect: "Whenever the bearer of this weapon takes a help action in combat, the aided ally may treat their weapon as a +1 magic weapon until the end of their next turn."
  		},
  		{
  			prefix: "Victorious",
  			suffix: "of Victory",
  			effect: "Whenever the bearer kills a creature with this weapon, they gain temporary hit points equal to the creature's CR (minimum of 1)."
  		},
  		{
  			prefix: "Vigilant",
  			suffix: "of Vigilance",
  			effect: "The bearer gains +1 to their Passive Perception."
  		},
  		{
  			prefix: "Vile",
  			suffix: "of Villains",
  			effect: "Treat this as a +1 weapon at night when attuned to an evil aligned character."
  		},
  		{
  			prefix: "Violent",
  			suffix: "of Violence",
  			effect: "Every time you crit with this weapon, it gains 1 charge. As a bonus action, use a charge to make this a +1 weapon for 1 minute. All charges are lost at the end of a long rest."
  		},
  		{
  			prefix: "Visionary",
  			suffix: "of the Visionary",
  			effect: "The weapon does an additional 1 elemental damage based on the color of the bearer's eyes: (amber: lightning, black: necrotic, blue: cold, brown: acid, green: force, gray: thunder, hazel: poison, purple: psychic, red: fire, white: radiant)."
  		},
  		{
  			prefix: "Vital",
  			suffix: "of Vitality",
  			effect: "The bearer's maximum hit points increases by their constitution modifier while attuned to this item. These hit points are lost when the bearer unattunes the item."
  		},
  		{
  			prefix: "Voidstone",
  			suffix: "of the Void",
  			effect: "This weapon cannot be detected by the 'Detect Magic' spell unless the caster touches the weapon."
  		},
  		{
  			prefix: "Voltaic",
  			suffix: "of Conduits",
  			effect: "Whenever the bearer deals damage to a creature, this weapon gains a charge. As a bonus action, the bearer can use any number of charges to deal that much extra lightning damage on their next attack. If a round (6 seconds) goes by and the weapon has not struck a foe, it loses all charges."
  		},
  		{
  			prefix: "War Leader's",
  			suffix: "of the War Leader",
  			effect: "The bearer can use an action to amplify their voice three times louder than normal."
  		},
  		{
  			prefix: "Warded",
  			suffix: "of Warding",
  			effect: "Once per long rest the bearer may draw a 20 foot line in the ground with this weapon that lasts for 1 minute. The Undead must succeed on a DC 12 wisdom saving throw to move across this line. If they fail, they cannot move again until their next turn."
  		},
  		{
  			prefix: "Waterborne",
  			suffix: "of the Sea",
  			effect: "of Exuberance."
  		},
  		{
  			prefix: "Weave-touched",
  			suffix: "of the Weave",
  			effect: "Whenever the bearer casts a spell, this weapon gains charges equal to the spell's level. The bearer can use a bonus action to remove 13 charges and make this a +1 weapon until the start of the next round. All charges are lost during a long rest."
  		},
  		{
  			prefix: "Western",
  			suffix: "of the West",
  			effect: "The bearer gains +1 to charisma saving throws."
  		},
  		{
  			prefix: "Windy",
  			suffix: "of the Winds",
  			effect: "As an action you can cast gust (spell save DC 13). You cannot use this ability again until you complete a short or long rest."
  		},
  		{
  			prefix: "Wild",
  			suffix: "of the Wilds",
  			effect: "The bearer gains +1 to strength saving throws."
  		},
  		{
  			prefix: "Winged",
  			suffix: "of Wings",
  			effect: "Once per long rest, the bearer may use an action to transform this weapon into a magical raven that can deliver a message to anyone in a 50 mile radius, provided the bearer knows their name and face. When the raven returns, it reverts into its weapon form. If the bird should die en route, it reverts into weapon form and unattunes from the bearer."
  		},
  		{
  			prefix: "Winter",
  			suffix: "of Winter Ice",
  			effect: "The weapon contains a reservoir of ice magic that can a freeze the ground for up to 30 seconds. The bearer may use an action to plant this weapon in the ground and release the ice magic within. While planted and undepleted, the ground in a 10 foot radius of this weapon becomes difficult terrain. A long rest restores 1d6 seconds of energy to the weapon's resevoir."
  		},
  		{
  			prefix: "Woodsman's",
  			suffix: "of Felling",
  			effect: "This weapon does maximum damage against plant creatures."
  		},
  		{
  			prefix: "Wyrmling Hunter's",
  			suffix: "of Wyrmling Slaying",
  			effect: "This weapon gains a +1 bonus to damage rolls against dragons."
  		},
  		{
  			prefix: "Wyrm-like",
  			suffix: "of Wyrm Detection",
  			effect: "The weapon sheds 30 feet of bright light and another 30 feet of dim light after that whenever a dragon is within 100 feet of it."
  		},
  		{
  			prefix: "Zen",
  			suffix: "of Zen",
  			effect: "Treat this as a +1 weapon for 1 minute after meditating with it for 1 minute."
  		}
  	]
  };
  var trinket = {
  	type: [
  		"Belt",
  		"Bracers",
  		"Circlet",
  		"Gauntlets",
  		"Amulet",
  		"Boots",
  		"Hat",
  		"Helm",
  		"Scabbard",
  		"Orb",
  		"Cap",
  		"Amulet",
  		"Pendant",
  		"Medallion",
  		"Mask",
  		"Cloak",
  		"Ring",
  		"Quiver",
  		"Tiara",
  		"Collar",
  		"Gloves",
  		"Candlestick",
  		"Brooch",
  		"Decorative Dagger",
  		"Mirror",
  		"Jade Pyramid",
  		"Bronze Figurine",
  		"Dragon Fang Pendant",
  		"Pawn",
  		"Puzzlebox",
  		"Linen Handkerchief",
  		"Iron Key",
  		"Cloth Doll",
  		"Oil Lamp",
  		"Ale Stine",
  		"Imp's Skull",
  		"Walking Stick",
  		"Ingot",
  		"Meteor Stone Fragment",
  		"Torch",
  		"Silver Bell",
  		"Coin",
  		"Leather Pouch",
  		"Quill Pen",
  		"Scales",
  		"Gaming Die",
  		"Small Brass Cage",
  		"Chime",
  		"Iron Ring",
  		"Amulet",
  		"Emblem",
  		"Hourglass",
  		"Padlock",
  		"Magnifying glass",
  		"Manacles",
  		"Perfume Vial",
  		"Miner's Pick",
  		"Pouch",
  		"Robes",
  		"Shovel",
  		"Signal Whistle",
  		"Spyglass",
  		"Vial",
  		"Waterskin",
  		"Abacus",
  		"Crystal",
  		"Staff",
  		"Wand",
  		"Book",
  		"Glass Bottle",
  		"Crowbar",
  		"Totem",
  		"Flask",
  		"Tankard",
  		"Instrument",
  		"Playing Card Set"
  	],
  	property: [
  		{
  			prefix: "Abyssal",
  			suffix: "of the Abyss",
  			effect: "When on the plane of the Abyss, the bearer has advantage on saving throws against Abyssal Corruption. (DMG p. 62)."
  		},
  		{
  			prefix: "Acolyte's",
  			suffix: "of the Acolyte",
  			effect: "The bearer gains a +1 bonus to Wisdom (Religion) checks."
  		},
  		{
  			prefix: "Adamantine",
  			suffix: "of Adamantine",
  			effect: "The item is indestructible."
  		},
  		{
  			prefix: "Adroit",
  			suffix: "of Intellect",
  			effect: "The bearer gains +1 bonus to Intelligence saving throws."
  		},
  		{
  			prefix: "Alarming",
  			suffix: "of Alarms",
  			effect: "Contains 1d4 unreplenishable charges of the Alarm spell (1st level)."
  		},
  		{
  			prefix: "Arborean",
  			suffix: "of Arborea",
  			effect: "When on the plane of Arborea, the bearer has advantage on saving throws against the effects of Intense Yearning. (DMG p. 61)."
  		},
  		{
  			prefix: "Arcadian",
  			suffix: "of Arcadia",
  			effect: "When on the plane of Arcardia, the bearer is unaffected by Planar Vitality (DMG p. 67)."
  		},
  		{
  			prefix: "Arctic",
  			suffix: "of the North",
  			effect: "The bearer suffers no harm in temperature as cold as -20 degrees Fahrenheit."
  		},
  		{
  			prefix: "Arresting",
  			suffix: "of Safety",
  			effect: "Once per day, the bearer may use their reaction to reduce fall damage by 1d6 until the end of turn."
  		},
  		{
  			prefix: "Assassin's",
  			suffix: "of the Assassin",
  			effect: "The bearer may add their proficiency bonus to damage rolls dealt during surprise rounds."
  		},
  		{
  			prefix: "Astral",
  			suffix: "of the Astral Sea",
  			effect: "When travelling the Astral Sea, it takes half the number of hours to locate a Color Pool to a specific plane. You have advantage on saving throws vs. the effects of Psychic Wind (DMG p. 47-48)."
  		},
  		{
  			prefix: "Barbarian's",
  			suffix: "of the Barbarian",
  			effect: "The bearer gains a +1 bonus to Strength (Athletics) checks."
  		},
  		{
  			prefix: "Bard's",
  			suffix: "of the Bard",
  			effect: "The bearer gains +1 to Charisma (Performance) checks."
  		},
  		{
  			prefix: "Beastial",
  			suffix: "of the Beastlands",
  			effect: "When on the plane of The Beastlands, the bearer has advantage on saving throws vs. Beast Transformation (DMG p. 60)."
  		},
  		{
  			prefix: "Beastspeaker's",
  			suffix: "of Beastspeakers",
  			effect: "Contains 1d4 unreplenishable charges of the Speak with Animals spell (1st level)."
  		},
  		{
  			prefix: "Benedictine",
  			suffix: "of Benediction",
  			effect: "Contains 1d4 unreplenishable charges of the Healing Word spell (1st level)."
  		},
  		{
  			prefix: "Blasted",
  			suffix: "of Blasting",
  			effect: "Contains 1d4 unreplenishable charges of the Fire Bolt spell (1st level)."
  		},
  		{
  			prefix: "Blessed",
  			suffix: "of Blessings",
  			effect: "Whenever bearer of this item receives divine healing, they gain an additional 1d4 hit points."
  		},
  		{
  			prefix: "Bold",
  			suffix: "of Boldness",
  			effect: "Contains 1d4 unreplenishable charges of the Heroism spell (1st level)."
  		},
  		{
  			prefix: "Bountiful",
  			suffix: "of Bounty",
  			effect: "Contains 1d4 unreplenishable charges of the Goodberry spell (1st level)."
  		},
  		{
  			prefix: "Burglar's",
  			suffix: "of the Burglar",
  			effect: "The bearer gains +1 to Dexterity (Sleight of Hand) checks."
  		},
  		{
  			prefix: "Bytopian",
  			suffix: "of Bytopia",
  			effect: "When on the plane of Bytopia, the bearer has advantage on saving throws against Pervasive Goodwill. (DMG p. 59-60)."
  		},
  		{
  			prefix: "Carcerian",
  			suffix: "of Carceri",
  			effect: "When on the plane of Carceri, the bearer knows the direction to the closest secret exit from this prison plane. (DMG p. 63)."
  		},
  		{
  			prefix: "Cardinal",
  			suffix: "of the Lodestone",
  			effect: "The wielder can use an action to learn which way is north."
  		},
  		{
  			prefix: "Cartographic",
  			suffix: "of Cartography",
  			effect: "On its own volition, the item records a map of the environments that the bearer is exploring, and can magically project it for the bearer to see."
  		},
  		{
  			prefix: "Channelling",
  			suffix: "of Channelling",
  			effect: "Once per day, the bearer may ignore the Verbal and/or Somatic components of a spell they are casting."
  		},
  		{
  			prefix: "Chill",
  			suffix: "of Chills",
  			effect: "Contains 1d4 unreplenishable charges of the Ray of Frost spell (1st level)."
  		},
  		{
  			prefix: "Clockwork",
  			suffix: "of Gears",
  			effect: "When on the plane of Mechanus, the bearer has advantage on saving throws against Imposing Order (DMG p. 66)."
  		},
  		{
  			prefix: "Cloy",
  			suffix: "of Cloying",
  			effect: "The bearer may cast Friends once per day."
  		},
  		{
  			prefix: "Compassionate",
  			suffix: "of Compassion",
  			effect: "Contains 1d4 unreplenishable charges of the Cure Wounds spell (1st level)."
  		},
  		{
  			prefix: "Concordant",
  			suffix: "of Concordance",
  			effect: "The bearer has advantage on saving throws vs. Psychic Dissonance when travelling the Outer Planes. (DMG p. 59)."
  		},
  		{
  			prefix: "Conjurer's",
  			suffix: "of the Conjurer",
  			effect: "The bearer may cast Prestidigitation once per day."
  		},
  		{
  			prefix: "Corrosive",
  			suffix: "of Dissolving",
  			effect: "Contains 1d4 unreplenishable charges of the Acid Splash spell (1st level)."
  		},
  		{
  			prefix: "Crawling",
  			suffix: "of Vermin",
  			effect: "The crawling things of the earth, such as insects, snakes, and vermin, are attracted to this item. When placed on the ground, such creatures will scurry toward the item like moths drawn to the flame."
  		},
  		{
  			prefix: "Dancer's",
  			suffix: "of the Dancer",
  			effect: "The bearer gains a +1 bonus to Dexterity (Acrobatics) checks."
  		},
  		{
  			prefix: "Defensive",
  			suffix: "of Defence",
  			effect: "Whenever the bearer takes a dodge action, they may move an additional 5 feet."
  		},
  		{
  			prefix: "Delver's",
  			suffix: "of the Delver",
  			effect: "While underground, the bearer of this item always knows the item's depth below the surface and the direction to the nearest staircase, ramp, or other path leading upward."
  		},
  		{
  			prefix: "Desperate",
  			suffix: "of Last Chances",
  			effect: "The bearer has advantage on perception checks when searching for items long lost in the the Swamp of Oblivion on the Plane of Earth. (DMG p. 54)."
  		},
  		{
  			prefix: "Druid's",
  			suffix: "of the Druid",
  			effect: "The bearer gains a +1 bonus to Intelligence (Nature) checks."
  		},
  		{
  			prefix: "Drunkard's",
  			suffix: "of Taverns",
  			effect: "The bearer always knows the direction to the closest alcoholic beverage."
  		},
  		{
  			prefix: "Dynamic",
  			suffix: "of the Dynamo",
  			effect: "The bearer has +1 to Charisma saving throws."
  		},
  		{
  			prefix: "Eavesdropper's",
  			suffix: "of Eavesdropping",
  			effect: "As long as it is on the same plane, the bearer can hear through this item as if they were present."
  		},
  		{
  			prefix: "Elysian",
  			suffix: "of Elysium",
  			effect: "When on the plane of Elysium, the bearer has advantage on saving throws against the effects of Overwhelming Joy (DMG p. 60)."
  		},
  		{
  			prefix: "Etherbound",
  			suffix: "of Ethereal Shores",
  			effect: "The bearer can see creatures in the Border Ethereal that overlap with their plane as clearly as if they were fully in the bearer's plane. Such creatures appear as apparitions or ghosts."
  		},
  		{
  			prefix: "Exalting",
  			suffix: "of Exaltation",
  			effect: "Contains 1d4 unreplenishable charges of the Bless spell (1st level)."
  		},
  		{
  			prefix: "Expeditious",
  			suffix: "of Expedience",
  			effect: "Contains 1d4 unreplenishable charges of the Expeditious Retreat spell."
  		},
  		{
  			prefix: "Inaccurate",
  			suffix: "of Falsehoods",
  			effect: "The bearer gains a +1 bonus to Charisma (Deception) checks."
  		},
  		{
  			prefix: "Fathoming",
  			suffix: "of Tongues",
  			effect: "Contains 1d4 unreplenishable charges of the Comprehend Languages spell."
  		},
  		{
  			prefix: "Favored",
  			suffix: "of the Favored",
  			effect: "Once per day, the bearer may roll a saving throw with advantage."
  		},
  		{
  			prefix: "Feathered",
  			suffix: "of Feathers",
  			effect: "Contains 1d4 unreplenishable charges of the Feather Fall spell (1st level)."
  		},
  		{
  			prefix: "Feybound",
  			suffix: "of the Fey",
  			effect: "The bearer knows the general direction to the closest Fey Crossing within a 60 mile radius. (DMG p. 50)."
  		},
  		{
  			prefix: "First",
  			suffix: "of Speed",
  			effect: "The bearer gain a +1 bonus to initiative rolls."
  		},
  		{
  			prefix: "Forgiven",
  			suffix: "of Forgiveness",
  			effect: "When on the plane of Mount Celestia, the bearer of this item can receive the benefits of Blessed Beneficence regardless of their alignment."
  		},
  		{
  			prefix: "Fortune Teller's",
  			suffix: "of the Fortune Teller",
  			effect: "Every time you are hit by a monster, you glimpse a random image of its future or past."
  		},
  		{
  			prefix: "Friendly",
  			suffix: "of Friendship",
  			effect: "Contains 1d4 unreplenishable charges of the Animal Friendship spell (1st level)."
  		},
  		{
  			prefix: "Gehennan",
  			suffix: "of Gehenna",
  			effect: "When on the plane of Gehenna, the bearer has advantage on saving throws against Cruel Hindrance. (DMG p. 63)."
  		},
  		{
  			prefix: "Gracious",
  			suffix: "of Grace",
  			effect: "The bearer may cast Spare the Dying once per day."
  		},
  		{
  			prefix: "Grim",
  			suffix: "of Coercion",
  			effect: "The bearer gains a +1 bonus to Charisma (Intimidation) checks if the target can see this item."
  		},
  		{
  			prefix: "Hadean",
  			suffix: "of Hades",
  			effect: "When on the plane of Hades, the bearer has advantage on saving throws against Vile Transformation. (DMG p. 63)."
  		},
  		{
  			prefix: "Harmonious",
  			suffix: "of Harmony",
  			effect: "Attuning to this item takes only 1 minute."
  		},
  		{
  			prefix: "Healing",
  			suffix: "of Healing",
  			effect: "This item contains 4 weak healing nodes. As an action, a character can use one node to heal 1d4 hit points at touch range. The item regains 1d4 charges at sunrise."
  		},
  		{
  			prefix: "Hellish",
  			suffix: "of the Nine Hells",
  			effect: "When in the Nine Hells, the bearer has advantage on saving throws against Pervasive Evil. (DMG p. 64)."
  		},
  		{
  			prefix: "Heroic",
  			suffix: "of Heroes",
  			effect: "The bearer has advantage on saving throws vs. fear."
  		},
  		{
  			prefix: "Histrionic",
  			suffix: "of Histrionics",
  			effect: "the bearer gains +1 to Charisma (Performance) checks."
  		},
  		{
  			prefix: "Holy",
  			suffix: "of Faith",
  			effect: "When the bearer of this item rolls hit dice, they can choose to re-roll them and take the second result."
  		},
  		{
  			prefix: "Iconic",
  			suffix: "of Symbols",
  			effect: "The item is inscribed with holy symbols of the God of the DM's choice. A cleric or paladin that serves that god may use this item as a divine focus."
  		},
  		{
  			prefix: "Inquisitor's",
  			suffix: "of the Inquisitor",
  			effect: "The bearer gains a +1 bonus to Intelligence (Investigation) checks."
  		},
  		{
  			prefix: "Inspired",
  			suffix: "of Inspiration",
  			effect: "The bearer regains their Constitution modifier in temporary hit points whenever they gain or use inspiration."
  		},
  		{
  			prefix: "Leaping",
  			suffix: "of Leaping",
  			effect: "Contains 1d4 unreplenishable charges of the Jump spell (1st level)."
  		},
  		{
  			prefix: "Liar's",
  			suffix: "of Lies",
  			effect: "Contains 1d4 unreplenishable charges of the Silent Image spell (1st level)."
  		},
  		{
  			prefix: "Limbo",
  			suffix: "of Limbo",
  			effect: "When on the plane of Limbo, the bearer has advantage to Intelligence checks to alter or move non-magical objects within the plane. (DMG p. 61-62)."
  		},
  		{
  			prefix: "Locating",
  			suffix: "of Locating",
  			effect: "Once attuned, the bearer always knows the exact location of this item."
  		},
  		{
  			prefix: "Loquacious",
  			suffix: "of the Silver Tongue",
  			effect: "The bearer gains +1 to Charisma (Persuasion) checks."
  		},
  		{
  			prefix: "Malediction",
  			suffix: "of Malediction",
  			effect: "Contains 1d4 unreplenishable charges of the Bane spell(1st level)."
  		},
  		{
  			prefix: "Manipulating",
  			suffix: "of Manipulation",
  			effect: "The bearer may cast Mage Hand once per day."
  		},
  		{
  			prefix: "Master's",
  			suffix: "of Servants",
  			effect: "Contains 1d4 unreplenishable charges of the Unseen Servant spell (1st level)."
  		},
  		{
  			prefix: "Maverick",
  			suffix: "of the Maverick",
  			effect: "The bearer has a +1 bonus to any skill check involving gambling and games of chance (Insight, Sleight of Hand, Investigation, etc)."
  		},
  		{
  			prefix: "Messenger",
  			suffix: "of Messages",
  			effect: "The bearer may cast Message once per day."
  		},
  		{
  			prefix: "Meteoric",
  			suffix: "of Falling Stars",
  			effect: "Contains 1 unreplenishable charge of Scorching Ray (1st level)."
  		},
  		{
  			prefix: "Mindful",
  			suffix: "of Mindfulness",
  			effect: "The bearer gains a +1 bonus to Wisdom saving throws."
  		},
  		{
  			prefix: "Miraculous",
  			suffix: "of Miracles",
  			effect: "The bearer may cast Thaumaturgy once per day."
  		},
  		{
  			prefix: "Mocking",
  			suffix: "of Mockery",
  			effect: "The bearer may cast Vicious Mockery once per day."
  		},
  		{
  			prefix: "Natural",
  			suffix: "of Nature",
  			effect: "Contains 1d4 unreplenishable charges of the Locate Animals or Plants spell (1st level)."
  		},
  		{
  			prefix: "Neutralizing",
  			suffix: "of Neutrality",
  			effect: "Contains 1d4 unreplenishable charges of the Protection from Good and Evil spell (1st level)."
  		},
  		{
  			prefix: "Nimble",
  			suffix: "of Agility",
  			effect: "The bearer gains a +1 bonus to Dexterity saving throws."
  		},
  		{
  			prefix: "Nourishing",
  			suffix: "of Nourishment",
  			effect: "The bearer rarely feels hungry, and only needs to consume one-fifth the usual amount of food."
  		},
  		{
  			prefix: "Pandemonium",
  			suffix: "of Pandemonium",
  			effect: "When on the plane of Pandemonium, the bearer has advantage on saving throws against the Mad Winds. (DMG p. 62)."
  		},
  		{
  			prefix: "Preacher's",
  			suffix: "of the Preacher",
  			effect: "The bearer may extend the range of their Channel Divinity by 5 feet."
  		},
  		{
  			prefix: "Projecting",
  			suffix: "of Projection",
  			effect: "The bearer can send messages mentally to willing characters within 30 feet. This communication is one-way only."
  		},
  		{
  			prefix: "Protective",
  			suffix: "of Protection",
  			effect: "The bearer may cast Blade Ward once per day."
  		},
  		{
  			prefix: "Reaper's",
  			suffix: "of the Reaper",
  			effect: "The bearer has advantage on death saving throws."
  		},
  		{
  			prefix: "Renaissance",
  			suffix: "of the Renaissance",
  			effect: "Once per day, the bearer may gain +1 to any skill check."
  		},
  		{
  			prefix: "Revealing",
  			suffix: "of Revelation",
  			effect: "Contains 1d4 unreplenishable charges of the Detect Magic spell (1st level)."
  		},
  		{
  			prefix: "Riutal",
  			suffix: "of Rituals",
  			effect: "Whenever the bearer casts a spell as a ritual, they have advantage to maintain concentration during the ritual."
  		},
  		{
  			prefix: "Sacred",
  			suffix: "of the Sacred",
  			effect: "The bearer may increase their Lay on Hands hit point pool by 5."
  		},
  		{
  			prefix: "Sagacious",
  			suffix: "of Acumen",
  			effect: "The bearer gains +1 to Wisdom (Insight) checks."
  		},
  		{
  			prefix: "Sage's",
  			suffix: "of the Sage",
  			effect: "The bearer gains a +1 bonus to Intelligence (History) checks."
  		},
  		{
  			prefix: "Secret",
  			suffix: "of Secrets",
  			effect: "Contains 1d4 unreplenishable charges of the Illusory Script spell (1st level)."
  		},
  		{
  			prefix: "Sentinel",
  			suffix: "of the Sentinel",
  			effect: "Faintly glows when creatures of a certain race (DMs choice) are within a 100 foot radius."
  		},
  		{
  			prefix: "Shading",
  			suffix: "of Shade",
  			effect: "The bearer suffers no harm in temperatures as high as 120 degrees Fahrenheit."
  		},
  		{
  			prefix: "Shadowbound",
  			suffix: "of the Shadowfell",
  			effect: "The bearer knows the general direction to the closest Shadow Crossing within a 60 mile radius. They have advantage on saving throws vs. Shadowfell Despair (DMG p. 51-52)."
  		},
  		{
  			prefix: "Shepherd's",
  			suffix: "of the Shepherd",
  			effect: "The bearer gains a +1 bonus to (Wisdom) Animal Handling checks."
  		},
  		{
  			prefix: "Shielding",
  			suffix: "of Shielding",
  			effect: "This item contains 1d4 unreplenishable charges of the Shield spell."
  		},
  		{
  			prefix: "Shifting",
  			suffix: "of Shifting",
  			effect: "The bearer may change minor aspects of the physical appearance of this item."
  		},
  		{
  			prefix: "Silent",
  			suffix: "of the Night",
  			effect: "The bearer gains a +1 bonus to Dexterity (Stealth) checks."
  		},
  		{
  			prefix: "Smith's",
  			suffix: "of Reparations",
  			effect: "The bearer may cast Mending once per day."
  		},
  		{
  			prefix: "Sojourner's",
  			suffix: "of the Sojouner",
  			effect: "A poem, story, or map that describes a long-forgotten treasure is etched on the surface of the item."
  		},
  		{
  			prefix: "Solemn",
  			suffix: "of Solemnity",
  			effect: "The bearer may spend an action removing all the failed death saving throws from a target within 5 feet of them. The target is still not stabilized."
  		},
  		{
  			prefix: "Sparkling",
  			suffix: "of Lights",
  			effect: "The bearer may cast Dancing Lights once per day."
  		},
  		{
  			prefix: "Striding",
  			suffix: "of Strides",
  			effect: "Contains 1d4 unreplenishable charges of the Longstrider spell (1st level)."
  		},
  		{
  			prefix: "Surgeon's",
  			suffix: "of the Surgeon",
  			effect: "The bearer gains a +1 bonus to Wisdom (Medicine) checks."
  		},
  		{
  			prefix: "Tenacious",
  			suffix: "of the Tenacious",
  			effect: "When the bearer takes a long rest, they gain back one additional hit die."
  		},
  		{
  			prefix: "Tracker's",
  			suffix: "of the Tracker",
  			effect: "The bearer gains a +1 to Wisdom (Survival) checks."
  		},
  		{
  			prefix: "Translucent",
  			suffix: "of Translucence",
  			effect: "The bearer gains an extra level one spell slot, which recovers only after a full moon rises."
  		},
  		{
  			prefix: "Trickster's",
  			suffix: "of Trickery",
  			effect: "The bearer may cast Minor Illusion once per day."
  		},
  		{
  			prefix: "Accurate",
  			suffix: "of Truth",
  			effect: "The bearer may cast True Strike once per day."
  		},
  		{
  			prefix: "Unbroken",
  			suffix: "of Heart",
  			effect: "The bearer gains a +1 bonus to Constitution saving throws."
  		},
  		{
  			prefix: "Verdant",
  			suffix: "of Druidcraft",
  			effect: "The bearer may cast Druidcraft once per day."
  		},
  		{
  			prefix: "Victorious",
  			suffix: "of Victory",
  			effect: "Whenever the bearer kills a creature they gain temporary hit points equal to the creature's CR."
  		},
  		{
  			prefix: "Vigilant",
  			suffix: "of Vigilance",
  			effect: "The bearer gains +2 to their Passive Perception."
  		},
  		{
  			prefix: "Vigorous",
  			suffix: "of Vigor",
  			effect: "The bearer gains a +1 bonus to Strength saving throws."
  		},
  		{
  			prefix: "Vital",
  			suffix: "of Vitality",
  			effect: "The bearer's maximum hit points increases by their constitution modifier while attuned to this item. These hit points are lost when the bearer unattunes the item."
  		},
  		{
  			prefix: "War Leader's",
  			suffix: "of the War Leader",
  			effect: "The bearer can use an action to amplify their voice so that it clearly carries for up to 300 feet."
  		},
  		{
  			prefix: "Waterborne",
  			suffix: "of the Sea",
  			effect: "The item floats on water or other liquids. Its bearer has advantage on Strength (Athletics) checks to swim."
  		},
  		{
  			prefix: "Windborne",
  			suffix: "of the Labyrinth Wind",
  			effect: "When in the Plane of Air, the bearer can navigate the Labyrinth Wind intuitively, and knows the path to the nearest Earth Mote within 60 miles."
  		},
  		{
  			prefix: "Wizard's",
  			suffix: "of the Wizard",
  			effect: "The bearer gains a +1 to Intelligence (Arcana) checks."
  		},
  		{
  			prefix: "Wrathful",
  			suffix: "of Ysgard",
  			effect: "When on the plane of Ysgard, the bearer is unaffected by Immortal Wrath. (DMG p. 61)."
  		}
  	]
  };
  var jsonData$2 = {
  	armour: armour,
  	weapon: weapon,
  	trinket: trinket
  };

  const magicData = jsonData$2;

  function createMagic(type) {
    console.log(`Type: ${type}`);

    if (type === 'ring') {
      const magic = createRing();
      console.log('Ring:', magic);
      return magic;
    }

    const data = magicData[type];
    const prefixRoll = random(data.property.length - 1);
    const suffixRoll = random(data.property.length - 1);
    const magic = {
      type: random(data.type),
      prefix: data.property[prefixRoll].prefix,
      suffix: data.property[suffixRoll].suffix,
      prefixProperty: data.property[prefixRoll].effect,
      suffixProperty: data.property[suffixRoll].effect
    };
    assign(magic, {
      description: `${magic.prefixProperty} ${magic.suffixProperty}`,
      name: `${magic.prefix} ${magic.type} ${magic.suffix}`
    });
    console.log(magic);
    return magic;
  }

  function createPubRumour() {
    const origin = random(['a child', 'a fat merchant', 'a priest', 'a sailor', 'a soldier', 'a magician', 'a noble', 'a rogue', 'a crazy monk', 'a drunken farmer', 'the butcher', 'the tailor']);
    const complication = random(getComplications(origin));
    const discovery = random(getDiscoveries(complication));
    const result = random(getResults(discovery));
    const opening = random(['Did you hear?', 'Did you hear the news?', 'Did you hear about the news?', 'Did you hear?']);
    return `${opening} ${origin.toUpperFirst()} ${complication} and discovered ${discovery}, and now ${result}`;
  }

  function getComplications(origin) {
    if (origin === 'a child') {
      return ["got drunk off his dad's grog", 'got washed out to sea', 'got stuck on a runaway horse', 'found an old well', 'disappeared for 3 days', 'found an old tomb', 'met a weird stranger', 'found a magic item', 'saw a ghost', 'was sleepwalking', 'walked off into the forest', 'stole a loaf of bread from the hermit'];
    }

    if (origin === 'a fat merchant') {
      return ['got drunk', 'got washed out to sea', 'went to an auction', 'went to buy out a competitor in the next town over', 'went to discuss trade terms in the next town over', 'went to find a better horse for his cart', 'got stuck on a runaway horse', 'found an old well', 'disappeared for 3 days', 'found an old tomb', 'met a weird stranger', 'found a magic item', 'was sleepwalking', 'walked off into the forest'];
    }

    if (origin === 'a priest') {
      return ['got drunk off the sacramental wine', 'got washed out to sea', 'was seen in bed with the barmaid $barmaid.name', 'was seen in the brothel', 'accidentally made a pilgrimage to the wrong temple', 'accidentally made a pilgrimage to the wrong god', 'accidentally made a sacrifice to the wrong god', 'accidentally blessed people with regular water instead of holy water', 'got stuck on a runaway horse', 'disappeared for 3 days', 'found an old tomb', 'met a weird stranger', 'found a magic item', 'saw a ghost', 'was sleepwalking', 'walked off into the forest'];
    }

    if (origin === 'a sailor') {
      return ['got drunk', 'got drunk', 'got really drunk', 'got washed out to sea', 'got washed out to sea', 'got washed out to sea', 'got washed out to sea', 'went to an auction', 'tried to abandon his ship', 'tried to sneak one of the whores onboard his ship', 'tried to woo the barmaid, $barmaid.name', 'got stuck on a runaway horse', 'found an old well', 'disappeared for 3 days', 'found an old tomb', 'met a weird stranger', 'found a magic item', 'was sleepwalking', 'walked off into the forest'];
    }

    if (origin === 'a soldier') {
      return ['got drunk', 'got drunk', 'got really drunk', 'got washed out to sea', 'went to an auction', 'accidentally stabbed a guy', 'accidentally insulted the lord', 'tried to cheat one of the whores', 'tried to woo the barmaid, $barmaid.name', 'got stuck on a runaway horse', 'found an old well', 'disappeared for 3 days', 'found an old tomb', 'met a weird stranger', 'found a magic item', 'was sleepwalking', 'walked off into the forest'];
    }

    if (origin === 'a magician') {
      return ['got drunk', 'got drunk', 'got really drunk', 'got washed out to sea', 'went to an auction', 'tried to cast a tricky spell', 'tried to show off in front of the barmaid, $barmaid.name', 'tried to woo the barmaid, $barmaid.name', 'got stuck on a runaway horse', 'found an old well', 'disappeared for 3 days', 'found an old tomb', 'tried to perform an old magic spell', 'tried to cast a spell way above his abilities', 'found a magic item', 'was sleepwalking', 'walked off into the forest'];
    }

    if (origin === 'a noble') {
      return ['got drunk', 'got drunk', 'got really drunk', 'got washed out to sea', 'went to an auction', 'was seen in the brothel', 'tried to buy out a merchant in the next town over', "tried to buy the Lord's horse from the stablemaster behind his back", 'tried to woo the barmaid, $barmaid.name', 'got stuck on a runaway horse', 'found an old well', 'disappeared for 3 days', 'found an old tomb', 'met a weird stranger', 'found a magic item', 'was sleepwalking', 'walked off into the forest'];
    }

    if (origin === 'a rogue') {
      return ['got drunk', 'got drunk', 'got really drunk', 'got washed out to sea', 'went to an auction', 'accidentally stabbed a guy', 'stabbed the wrong guy', 'stole something from the lord', 'accidentally insulted the lord', 'tried to cheat one of the whores', 'tried to woo the barmaid, $barmaid.name', 'got stuck on a runaway horse', 'found an old well', 'disappeared for 3 days', 'found an old tomb', 'met a weird stranger', 'found a magic item', 'was sleepwalking', 'walked off into the forest'];
    }

    if (origin === 'a crazy monk') {
      return ['got drunk', 'got drunk', 'got really drunk', 'brewed something really strong', 'got washed out to sea', 'tried to woo the barmaid, $barmaid.name', 'got stuck on a runaway horse', 'found an old well', 'disappeared for 3 days', 'found an old tomb', 'met a weird stranger', 'found a magic item', 'was sleepwalking', 'walked off into the forest'];
    }

    if (origin === 'a drunken farmer') {
      return ['got drunk', 'got drunk', 'got really drunk', 'brewed something really strong', 'got washed out to sea', 'tried to woo the barmaid, $barmaid.name', 'got stuck on a runaway horse', 'found an old well', 'disappeared for 3 days', 'found an old tomb', 'met a weird stranger', 'found a magic item', 'was sleepwalking', 'walked off into the forest'];
    }

    if (origin === 'the butcher') {
      return ['got drunk', 'got drunk', 'got really drunk', 'was cutting up meat and found something weird', 'was cutting up meat and found something weird', 'was cutting up meat and found something weird', 'was cutting up a cow which came alive', 'got washed out to sea', 'tried to woo the barmaid, $barmaid.name', 'got stuck on a runaway horse', 'found an old well', 'disappeared for 3 days', 'found an old tomb', 'met a weird stranger', 'found a magic item', 'was sleepwalking', 'walked off into the forest'];
    }

    if (origin === 'the tailor') {
      return ['got drunk', 'got drunk', 'got really drunk', 'tried to circumcize a noble while he was taking his measurements', 'got washed out to sea', 'tried to woo the barmaid, $barmaid.name', 'got stuck on a runaway horse', 'found an old well', 'disappeared for 3 days', 'found an old tomb', 'met a weird stranger', 'found a magic item', 'was sleepwalking', 'walked off into the forest'];
    }

    return ['got drunk'];
  }

  function getDiscoveries(complication) {
    if (complication === 'got drunk') {
      return ['a new disease', 'a cursed item', 'a sleeping monster', 'a treasure map', 'a villain thought dead, returned to life', 'a book of secrets', 'a key to a vast fortune', 'a supressed truth about the ruling kingdom', 'a door to another plane'];
    }

    if (complication === 'got really drunk') {
      return ['a new disease', 'a cursed item', 'a sleeping monster', 'a treasure map', 'a villain thought dead, returned to life', 'a book of secrets', 'a key to a vast fortune', 'a supressed truth about the ruling kingdom', 'a door to another plane', 'a really good reason to not drink so much'];
    }

    if (complication === 'got washed out to sea') {
      return ['a new disease', 'a cursed item', 'a sleeping monster', 'a treasure map', 'a villain thought dead, returned to life', 'a book of secrets', 'a key to a vast fortune', 'a supressed truth about the ruling kingdom', 'a door to another plane', 'a type of goblin with fins'];
    }

    if (complication === 'got stuck on a runaway horse') {
      return ['a new disease', 'a cursed item', 'a sleeping monster', 'a treasure map', 'a book of secrets', 'a key to a vast fortune', 'a supressed truth about the ruling kingdom', 'a door to another plane', 'saddles exist for a reason'];
    }

    if (complication === 'found an old well') {
      return ['a new disease', 'a cursed item', 'a sleeping monster', 'a treasure map', 'a villain thought dead, returned to life', 'a book of secrets', 'a key to a vast fortune', 'a supressed truth about the ruling kingdom', 'a bucket'];
    }

    if (complication === 'disappeared for 3 days') {
      return ['a new disease', 'a cursed item', 'a sleeping monster', 'a treasure map', 'a villain thought dead, returned to life', 'a book of secrets', 'a key to a vast fortune', 'a supressed truth about the ruling kingdom', 'a door to another plane'];
    }

    if (complication === 'found an old tomb') {
      return ['a new disease', 'a cursed item', 'a sleeping monster', 'a sleeping monster', 'a treasure map', 'a villain thought dead, returned to life', 'a book of secrets', 'a key to a vast fortune', 'a supressed truth about the ruling kingdom', 'a door to another plane'];
    }

    if (complication === 'met a weird stranger') {
      return ['a new venereal disease', 'a cursed item', 'a treasure map', 'it was actually three midgets in a trench coat', 'a book of secrets', 'a key to a vast fortune', 'a supressed truth about the ruling kingdom', 'a door to another plane'];
    }

    if (complication === 'found a magic item') {
      return ['a new disease', 'it was cursed', 'a sleeping monster', 'swords are sharp', 'a supressed truth about the ruling kingdom', 'a door to another plane'];
    }

    if (complication === 'tried to woo the barmaid, $barmaid.name') {
      return ['a new disease', 'a cursed item', 'swords are sharp', 'it was actually three midgets in a trench coat', 'a new venereal disease', 'a sleeping monster', 'a treasure map', 'a key to a vast fortune', 'a supressed truth about the ruling kingdom', 'a door to another plane'];
    }

    if (complication === 'tried to circumcize a noble while he was taking his measurements') {
      return ['a cursed item', 'a sleeping monster', 'a treasure map', 'swords are sharp', 'swords are sharp', 'a book of secrets', 'a key to a vast fortune', 'a supressed truth about the ruling kingdom', 'a door to another plane'];
    }

    if (complication === 'was cutting up meat and found something weird') {
      return ['a new disease', 'a cursed item', 'a sleeping monster', 'a sleeping monster', 'a treasure map', 'a really good reason to not drink so much', 'a book of secrets', 'a key to a vast fortune', 'a supressed truth about the ruling kingdom', 'a door to another plane'];
    }

    if (complication === 'brewed something really strong') {
      return ['a new disease', 'a cursed item', 'a sleeping monster', 'a sleeping monster', 'a treasure map', 'a really good reason to not drink so much', 'a book of secrets', 'a key to a vast fortune', 'a supressed truth about the ruling kingdom', 'a door to another plane'];
    }

    if (complication === "tried to buy the Lord's horse from the stablemaster behind his back") {
      return ['a new disease', 'a cursed item', 'a sleeping monster', 'a sleeping monster', 'a treasure map', 'swords are sharp', 'a book of secrets', 'a key to a vast fortune', 'a supressed truth about the ruling kingdom'];
    }

    if (complication === 'tried to cheat one of the whores') {
      return ['a new disease', 'a new venereal disease', 'a cursed item', 'a sleeping monster', 'a sleeping monster', 'a treasure map', 'swords are sharp', 'a book of secrets', 'a key to a vast fortune', 'a supressed truth about the ruling kingdom', 'a door to another plane'];
    }

    if (complication === 'tried to cast a tricky spell') {
      return ['a new disease', 'a cursed item', 'a sleeping monster', 'a really good reason to stop drinking so much', 'a treasure map', 'a villain thought dead, returned to life', 'a book of secrets', 'a key to a vast fortune', 'a supressed truth about the ruling kingdom', 'a door to another plane'];
    }

    if (complication === 'was seen in the brothel') {
      return ['a new disease', 'a cursed item', 'a new venereal disease', 'a sleeping monster', 'a sleeping monster', 'a treasure map', 'a villain thought dead, returned to life', 'a book of secrets', 'a key to a vast fortune', 'a supressed truth about the ruling kingdom', 'a door to another plane'];
    }

    return ['a new disease', 'a cursed item', 'a sleeping monster', 'a sleeping monster', 'a treasure map', 'a villain thought dead, returned to life', 'a book of secrets', 'a key to a vast fortune', 'a supressed truth about the ruling kingdom', 'a door to another plane'];
  }

  function getResults(discovery) {
    if (discovery === 'a new disease') {
      return ['people are disappearing!', 'people are sick!', 'the king has decreed strange new laws!', 'the temple has issued strange new tenets!', 'the sun might not come back up!', 'my bum itches!', 'people are having bad dreams every night!', 'people are unable to sleep!', 'people are afraid to come outside!'];
    }

    if (discovery === 'swords are sharp') {
      return ['people are disappearing!', 'people are sick!', "there's blood everywhere!", 'the king has decreed strange new laws!', 'the temple has issued strange new tenets!', 'the sun might not come back up!', 'people are having bad dreams every night!', 'people are unable to sleep!', 'people are afraid to come outside!'];
    }

    if (discovery === 'a new venereal disease') {
      return ['people are disappearing!', 'people are sick!', "there's blood everywhere!", 'the king has decreed strange new laws!', 'the temple has issued strange new tenets!', 'the sun might not come back up!', 'my bum itches!', 'people are having bad dreams every night!', 'people are unable to sleep!', 'people are afraid to come outside!'];
    }

    if (discovery === 'a cursed item') {
      return ['people are disappearing!', 'people are sick!', "if you don't tell ten other people about this in ten days, you'll die!", 'the king has decreed strange new laws!', 'the temple has issued strange new tenets!', 'the sun might not come back up!', 'my bum itches!', 'people are having bad dreams every night!', 'people are unable to sleep!', 'people are afraid to come outside!'];
    }

    if (discovery === 'a sleeping monster') {
      return ['people are disappearing!', "if you don't tell ten other people about this in ten days, you'll die!", 'the king has decreed strange new laws!', 'the temple has issued strange new tenets!', 'the sun might not come back up!', 'people are having bad dreams every night!', 'people are unable to sleep!', 'people are afraid to come outside!'];
    }

    if (discovery === 'a treasure map') {
      return ['people are disappearing!', 'people are sick!', "I'm looking for a shovel!", "I'm trying to get in on the action!", 'the king has decreed strange new laws!', 'the temple has issued strange new tenets!', 'the sun might not come back up!', 'people are having bad dreams every night!', 'people are unable to sleep!', 'people are afraid to come outside!'];
    }

    if (discovery === 'a villain thought dead, returned to life') {
      return ['people are disappearing!', 'people are sick!', "if you don't tell ten other people about this in ten days, you'll die!", 'the king has decreed strange new laws!', 'the temple has issued strange new tenets!', 'the sun might not come back up!', 'people are having bad dreams every night!', 'people are unable to sleep!', 'people are afraid to come outside!'];
    }

    if (discovery === 'a book of secrets') {
      return ['people are disappearing!', 'people are sick!', "if you don't tell ten other people about this in ten days, you'll die!", 'the king has decreed strange new laws!', 'the temple has issued strange new tenets!', 'the sun might not come back up!', 'the word on the street is that the priest was sleeping with $barmaid.name!', 'they found out about my hemmorhoids!', 'people are having bad dreams every night!', 'people are unable to sleep!', 'people are afraid to come outside!'];
    }

    if (discovery === 'a key to a vast fortune') {
      return ['people are disappearing!', 'people are sick!', "if you don't tell ten other people about this in ten days, you'll die!", 'the king has decreed strange new laws!', 'the temple has issued strange new tenets!', 'the sun might not come back up!', "we're just looking for a lock!", 'people are having bad dreams every night!', 'people are unable to sleep!', 'people are afraid to come outside!'];
    }

    if (discovery === 'a supressed truth about the ruling kingdom') {
      return ['people are disappearing!', 'people are sick!', "there's blood everywhere!", "if you don't tell ten other people about this in ten days, you'll die!", 'the king has decreed strange new laws!', 'the temple has issued strange new tenets!', 'the sun might not come back up!', 'people are having bad dreams every night!', 'people are unable to sleep!', 'people are afraid to come outside!'];
    }

    if (discovery === 'a door to another plane') {
      return ['people are disappearing!', 'people are sick!', "there's blood everywhere!", "if you don't tell ten other people about this in ten days, you'll die!", 'the king has decreed strange new laws!', 'the temple has issued strange new tenets!', 'the sun might not come back up!', 'my bum itches!', 'people are having bad dreams every night!', 'people are unable to sleep!', 'people are afraid to come outside!'];
    }

    return ['people are disappearing!', 'people are sick!', "if you don't tell ten other people about this in ten days, you'll die!", 'the king has decreed strange new laws!', 'the temple has issued strange new tenets!', 'the sun might not come back up!', 'people are having bad dreams every night!', 'people are unable to sleep!', 'people are afraid to come outside!'];
  }

  function createRoad() {
    const type = random(['trail', 'path', 'path', 'road', 'road', 'road']);
    const noEncounter = random([true, true, true, false, false]);
    const road = {
      type,
      noEncounter,
      ...getRoadTypeAttributes(type)
    };
    const intro = random(['You walk along the', 'You trudge along the', 'Making your way across the countryside on the', 'You make your way along the', 'You walk along the']);

    if (noEncounter) {
      return `${intro} ${road.descriptiveType}, ${road.traffic}.`;
    }

    const twist = random([random(['until you come across', 'and encounter', 'and cross paths with', 'and come across', 'and see in the distance', 'and spy in the distance']), `. ${random(['Turning the corner, you come across', 'Then, in the distance, you see', 'You walk for a while, and then come across', 'You walk for a few more minutes, until you come across', 'You walk along for a while, and then encounter'])}`]);
    return `${intro} ${road.descriptiveType}, ${road.traffic} ${twist} ${road.encounter}.`;
  }

  function getRoadTypeAttributes(type) {
    switch (type) {
      case 'trail':
        return {
          descriptiveType: random(["hunter's trail", 'animal trail', 'dirt trail']),
          traffic: random(['which seems to have been recently used', 'which is overgrown with weeds', 'that has blood spatters in the grass which indicate a recent hunt', 'with canopy trees providing shade overhead']),
          encounter: random(['the border patrol', 'a travelling peddler', 'a hunting party', 'another adventuring party', 'some escaped convicts', 'a group of bandits operating a toll road', 'an itinerant priest', 'a dead body', 'a small merchant caravan', 'a diseased animal corpse', 'a group of dwarves', 'a solitary hunter', 'a handful of farmers', 'a solitary bandit', 'an injured knight', 'a party of raiders', 'a ranger', '[monster encounter]', '[monster encounter]', 'some herdsmen', 'a band of robbers', 'some particularly dense overgrowth', 'some tribesmen', 'a hermit', 'the undead'])
        };

      case 'path':
        return {
          descriptiveType: random(['simple path', 'overgrown dirt path', 'riding path']),
          traffic: random(['which looks to be desolate and abandoned', 'dotted with hoof prints', 'with heavy boot prints in the dirt', 'with the occasional burnt out campfire on the side']),
          encounter: random(['the road wardens', 'a merchant caravan', 'a work gang heading home', 'another adventuring party', 'some escaped convicts', 'some of the local militia', 'a pair of travelling clerics', 'some grave robbers', 'a traveling peddler', 'some farmers', 'a plague-infested cabin', 'a hunting party', 'some farmers', 'some bandits', 'an adventurer on a horse', 'a band of mercenaries', 'a solitary troubadour', 'a mounted messenger', 'some berserkers', 'some robbers', '[monster encounter]', 'some tribesmen', 'a caravan of gypsies', 'the undead', 'some raiders'])
        };

      case 'road':
        return {
          descriptiveType: random(['crossroads', 'droveway', 'patrol road', 'dirt road', 'busy droveway', 'busy dirt road', 'military road', 'cobblestone road', 'busy cobblestone road', 'crumbling cobblestone road', 'paved road', 'busy paved road', 'crumbling paved road']),
          traffic: random(['which is dotted with dead campsites where many a weary traveler has made camp for the night', ', occassionally passing a patrol shack', 'that has plenty of wheel tracks', 'that has road markers and signage dotted every now and then', 'that has checkpoints or guard posts every couple of miles', 'which seems to have been marred by time or, perhaps warfare', 'which passes a tavern that seems to be doing very well']),
          encounter: random(['a marching army', 'a merchant caravan', 'a wedding party', 'another adventuring party', 'a group of pilgrims', 'some escaped convicts', 'a funeral procession', 'a plague cart', 'some farmers', 'a knight errant', 'a wounded knight', 'a lone horse, trotting the other way', 'a band of mercenaries', 'a traveling theatre troupe', 'a courier', 'some beggars', 'a caravan of slavers', 'a traveling lady', 'some robbers', 'a caravan of gypsies', 'a lone zombie'])
        };
    }

    throw new TypeError(`Invalid road type "${type}".`);
  }

  function createRoleplayQuestion() {
    return random(['what was a bad memory of your family?', 'what was a good memory of your family?', 'what is a faction you strongly agree with?', 'what is a faction you strongly disagree with?', 'what is a game you like to play?', 'what was a happy moment from your childhood?', "what is a monster that you don't believe is real?", 'is there a person you are afraid of?', "was there ever a person you couldn't help?", 'is there a person you hate?', 'is there someone you love?', 'who do you respect?', 'is there a person you want to meet?', 'is there a place you would love to visit?', 'what was a sad moment from your childhood?', 'what was a time you embarrassed yourself?', 'what was a time you got away with something?', 'what was a time you got a sibling into trouble?', 'what was a time you got really drunk?', 'what was a time you hurt someone?', 'what was a time you made something?', 'what was a time you were afraid?', 'what was a time you were heroic?', 'what was a time you were powerless?', 'what was a time you were proud of someone?', 'what was a time you were smarter than everyone else?', 'are you a dog person or a cat person?', 'are you closer to your mother or your father?', 'is there a food that you think is disgusting?', 'what was something that happened on your last birthday?', 'is there something you are ashamed of?', 'is there something you are proud of doing?', 'what is something you would love to do?', "what was the best dinner you've ever had?", 'what was the best gift you ever received?', "what was the funniest thing you've ever seen?", 'what are you looking forward to?', 'what would you do if you were king?', 'what would you do with a million gold pieces?', 'where are your family now?', 'who or what would you die for?', 'who was your first kiss?', 'why are you with the party?', 'why would the party fall apart without you?', 'can you share your favourite story?', 'can you share your favourite thing about your hometown?', 'what is your favourite way to relax?', 'what has been your greatest achievement?', 'what is your greatest fear?', 'what was your last nightmare?']);
  }

  function createTrap() {
    const types = ['mechanical', 'arcane', 'mechanical', 'arcane', 'indirect'];
    const trap = {
      type: random(types)
    };
    assign(trap, getTrapTypeAttributes(trap.type));
    assign(trap, {
      description: `${random(['This trap is activated by', 'This trap is triggered by'])} ${trap.trigger}. When activated, ${trap.signal}. ${random(['The trap then delivers its payload:', 'Then,', 'And then,'])} ${trap.payload}.`
    });
    return trap;
  }

  function getTrapTypeAttributes(type) {
    switch (type) {
      case 'mechanical':
        return {
          trigger: random(['trip wire', 'pressure plate', 'opening a door', 'lifting the lid on a chest', 'grabbing a certain rung of a ladder', 'removing an object from it’s resting place', 'touching anything in the room, including the floor', 'breaking the beam of a light source', 'disturbing a source of water in the room', 'pulling on a suspicious looking rope hanging from the ceiling']),
          signal: random(['gears can be heard grinding from inside the walls', 'a low boom is heard that echoes out through the dungeon', 'a high pitched whirring can be heard', 'various ticking sounds are heard', 'a quick release of steam followed by a bang', 'a low rumbling that shakes the room for a moment', 'a single click emanates from the trap', 'the sound of chains sliding across stone', 'a thumping sound that starts slow and begins picking up speed', 'nothing. There’s just silence']),
          payload: random(['the floor opens downward into a 40 foot pit', 'from unseen slits in the wall, poisoned needles fly out', 'a wall opens revealing a golem to ambush the party', 'a large log swings down from the ceiling', 'the parts of the dungeon begin collapsing, blocking off areas', 'vents on the ceiling begin emptying noxious fumes into the room', 'a large blade swings horizontally across the room attempting to decapitate', 'the room begins filling with water after the doors slam shut', 'the walls slowly begin closing inwards', 'a large rolling boulder drops from the ceiling towards the party'])
        };

      case 'arcane':
        return {
          trigger: random(['an arcane rune on the floor', 'arcane markings around a door frame', 'a pillar that has a low hum to it', 'a jeweled eye that scans the room', 'a stone statue that has glowing red eyes', 'a mysterious green fog that rolls around the base of the room', 'a very dimly lit candle that could be extinguished with the faintest breath', 'a phrase scrawled on the wall that activates when said out loud', 'failing to cast any spell on a dull crystal floating in the center of the room', 'lighting a rather inviting looking torch in the center of the room']),
          signal: random(['a low hum is heard', 'a very unnatural light begins glowing brightly from an unknown source', 'any runes in the room begin glowing a bright red', 'the room suddenly drops drastically in temperature', 'the room gets uncomfortably hot', 'a soft hiss is heard', 'a fizzling sound is heard', 'a high pitched hum rings out', 'a crackling of energy is heard through the room', 'one can hear a deathly silence']),
          payload: random(['sleep is cast on the room', 'victim must resist being petrified', 'a fireball explodes throughout the room', 'all surfaces of the room begin to become too hot to touch (effectively heat metal)', 'fumes begin materializing as if stinking cloud was cast', 'a wall of lightning races towards the victim and any others in its way', 'all people in the room have blindness cast on them', 'the victim is sent to the astral plane for one minute', 'everything in the room begins to levitate, no save', 'the spell confusion is cast on everyone'])
        };

      case 'indirect':
        return {
          trigger: random(['trip wire', 'pressure plate', 'opening a door', 'lifting the lid on a chest', 'grabbing a certain rung of a ladder', 'removing an object from it’s resting place', 'touching anything in the room, including the floor', 'breaking the beam of a light source', 'disturbing a source of water in the room', 'pulling on a suspicious looking rope hanging from the ceiling']),
          signal: random(['gears can be heard grinding from inside the walls', 'a low boom is heard that echoes out through the dungeon', 'a high pitched whirring can be heard', 'various ticking sounds are heard', 'a quick release of steam followed by a bang', 'a low rumbling that shakes the room for a moment', 'a single click emanates from the trap', 'the sound of chains sliding across stone', 'a thumping sound that starts slow and begins picking up speed', 'nothing. There’s just silence']),
          payload: random(['a torch is lit in another room, alerting enemies', 'a door in another room closes, hiding a secret passage', 'chests in the dungeon lock up', 'a dangerous enemy is freed that could normally be avoided', 'all other traps that have already been triggered get reset', 'all lights are extinguished', 'golems begin patrolling the dungeon', 'all doors in the dungeon lock themselves', 'an alarm bell begins ringing alerting all enemies of the party', 'another more sinister trap is set in another room'])
        };

      default:
        return {
          trigger: random(['trip wire', 'pressure plate', 'opening a door', 'lifting the lid on a chest', 'grabbing a certain rung of a ladder', 'removing an object from it’s resting place', 'touching anything in the room, including the floor', 'breaking the beam of a light source', 'disturbing a source of water in the room', 'pulling on a suspicious looking rope hanging from the ceiling']),
          signal: random(['gears can be heard grinding from inside the walls', 'a low boom is heard that echoes out through the dungeon', 'a high pitched whirring can be heard', 'various ticking sounds are heard', 'a quick release of steam followed by a bang', 'a low rumbling that shakes the room for a moment', 'a single click emanates from the trap', 'the sound of chains sliding across stone', 'a thumping sound that starts slow and begins picking up speed', 'nothing. There’s just silence']),
          payload: random(['the floor opens downward into a 40 foot pit', 'from unseen slits in the wall, poisoned needles fly out', 'a wall opens revealing a golem to ambush the party', 'a large log swings down from the ceiling', 'the parts of the dungeon begin collapsing, blocking off areas', 'vents on the ceiling begin emptying noxious fumes into the room', 'a large blade swings horizontally across the room attempting to decapitate', 'the room begins filling with water after the doors slam shut', 'the walls slowly begin closing inwards', 'a large rolling boulder drops from the ceiling towards the party'])
        };
    }
  }

  /**
   * This is run on start up.
   * It returns the available town professions, with their support values.
   *
   * Individual professions are returned by the `fetchProfessionChance()`
   * function located in `NPCGeneration/fetchProfessionChance.js`
   */

  function fetchProfessions(town) {
    const allProfessions = Object.entries(professions);
    const townProfessions = {};

    for (const [name, profession] of allProfessions) {
      const population = getProfessionPopulation(town.population, profession);

      if (population >= 1) {
        townProfessions[name] = { ...profession,
          name,
          population
        };
      }
    }

    return townProfessions;
  }

  function getProfessionPopulation(townPop, profession) {
    const newSv = profession.sv + dice('4d4-10') * 10;
    const professionRoll = townPop / newSv;
    /* Set the number of professions equal = the town's population divided by how many people are needed = support that type of business */

    const professionRollPercentage = townPop / profession.sv * 100;
    const professionRollHundred = randomFloat(1, 100);

    if (professionRoll < 1 && professionRollPercentage >= professionRollHundred) {
      return 1;
    }

    if (professionRoll < 1 && professionRollPercentage < professionRollHundred) {
      return 0;
    }

    return Math.trunc(professionRoll);
    /* Truncate the number = a whole number */
  }

  function firstCharacter(word) {
    return `<span class="first-character">${word.slice(0, 1)}</span>${word.slice(1)}`;
  }

  const getPath = () => {

    return '../';
  };

  const getCustomImage = (url, id = 'illustration') => {
    const img = document.createElement('img');
    img.id = id;
    img.src = url;
    img.alt = 'A custom-defined image.';
    return img.outerHTML;
  };
  const getLocalImage = illustration => {
    const img = document.createElement('img');
    const path = getPath();
    img.id = 'illustration';
    img.src = `${path}src/Resources/img/hero/${illustration}.jpg`;
    img.alt = `An image depicting ${lib.articles.output(illustration)}, created by artist Juho Huttunen.`;
    return img.outerHTML;
  };

  const inventory = [{
    name: 'Dagger',
    cost: 200,
    availabilityLocation: ['smithy', 'generalStore'],
    availability: 1,
    type: 'weapon'
  }, {
    name: 'Handaxe',
    cost: 500,
    availabilityLocation: ['smithy', 'generalStore'],
    availability: 1,
    type: 'weapon'
  }, {
    name: 'Javelin',
    cost: 50,
    availabilityLocation: ['smithy'],
    availability: 2,
    type: 'weapon'
  }, {
    name: 'Light Hammer',
    cost: 200,
    availabilityLocation: ['smithy', 'generalStore'],
    availability: 1,
    type: 'weapon'
  }, {
    name: 'Sickle',
    cost: 100,
    availabilityLocation: ['smithy', 'generalStore'],
    availability: 1,
    type: 'weapon'
  }, {
    name: 'Spear',
    cost: 100,
    availabilityLocation: ['smithy', 'generalStore'],
    availability: 1,
    type: 'weapon'
  }, {
    name: 'Battleaxe',
    cost: 1000,
    availabilityLocation: ['smithy'],
    availability: 2,
    type: 'weapon'
  }, {
    name: 'Flail',
    cost: 1000,
    availabilityLocation: ['smithy'],
    availability: 2,
    type: 'weapon'
  }, {
    name: 'Glaive',
    cost: 2000,
    availabilityLocation: ['smithy'],
    availability: 3,
    type: 'weapon'
  }, {
    name: 'Greataxe',
    cost: 3000,
    availabilityLocation: ['smithy'],
    availability: 3,
    type: 'weapon'
  }, {
    name: 'Greatsword',
    cost: 5000,
    availabilityLocation: ['smithy'],
    availability: 4,
    type: 'weapon'
  }, {
    name: 'Halberd',
    cost: 2000,
    availabilityLocation: ['smithy'],
    availability: 4,
    type: 'weapon'
  }, {
    name: 'Lance',
    cost: 1000,
    availabilityLocation: ['smithy'],
    availability: 4,
    type: 'weapon'
  }, {
    name: 'Longsword',
    cost: 1500,
    availabilityLocation: ['smithy'],
    availability: 2,
    type: 'weapon'
  }, {
    name: 'Maul',
    cost: 1000,
    availabilityLocation: ['smithy'],
    availability: 2,
    type: 'weapon'
  }, {
    name: 'Morningstar',
    cost: 1500,
    availabilityLocation: ['smithy'],
    availability: 2,
    type: 'weapon'
  }, {
    name: 'Pike',
    cost: 500,
    availabilityLocation: ['smithy'],
    availability: 1,
    type: 'weapon'
  }, {
    name: 'Rapier',
    cost: 2500,
    availabilityLocation: ['smithy'],
    availability: 3,
    type: 'weapon'
  }, {
    name: 'Scimitar',
    cost: 2500,
    availabilityLocation: ['smithy'],
    availability: 2,
    type: 'weapon'
  }, {
    name: 'Shortsword',
    cost: 1000,
    availabilityLocation: ['smithy'],
    availability: 1,
    type: 'weapon'
  }, {
    name: 'Arrows (20)',
    cost: 100,
    availabilityLocation: ['smithy'],
    availability: 1,
    type: 'weapon'
  }, {
    name: 'Crossbow Bolts (20)',
    cost: 100,
    availabilityLocation: ['smithy'],
    availability: 2,
    type: 'weapon'
  }, {
    name: 'Padded Armour',
    cost: 500,
    availabilityLocation: ['generalStore'],
    availability: 2,
    type: 'armour'
  }, {
    name: 'Hide Armour',
    cost: 500,
    availabilityLocation: ['generalStore'],
    availability: 1,
    type: 'armour'
  }, {
    name: 'Leather Armor',
    cost: 2000,
    availabilityLocation: ['generalStore'],
    availability: 2,
    type: 'armour'
  }, {
    name: 'Studded Leather Armor',
    cost: 4500,
    availabilityLocation: ['smithy', 'generalStore'],
    availability: 3,
    type: 'armour'
  }, {
    name: 'Chain Shirt',
    cost: 5000,
    availabilityLocation: ['smithy'],
    availability: 1,
    type: 'armour'
  }, {
    name: 'Scale Mail',
    cost: 5000,
    availabilityLocation: ['smithy'],
    availability: 1,
    type: 'armour'
  }, {
    name: 'Breastplate',
    cost: 40000,
    availabilityLocation: ['smithy'],
    availability: 2,
    type: 'armour'
  }, {
    name: 'Half Plate',
    cost: 75000,
    availabilityLocation: ['smithy'],
    availability: 4,
    type: 'armour'
  }, {
    name: 'Ring Mail',
    cost: 3000,
    availabilityLocation: ['smithy'],
    availability: 2,
    type: 'armour'
  }, {
    name: 'Chain Mail',
    cost: 7500,
    availabilityLocation: ['smithy'],
    availability: 2,
    type: 'armour'
  }, {
    name: 'Splint',
    cost: 20000,
    availabilityLocation: ['smithy'],
    availability: 3,
    type: 'armour'
  }, {
    name: 'Plate',
    cost: 150000,
    availabilityLocation: ['smithy'],
    availability: 4,
    type: 'armour'
  }, {
    name: 'Shield',
    cost: 1000,
    availabilityLocation: ['smithy'],
    availability: 1,
    type: 'armour'
  }, {
    name: 'Ball Bearings (1000)',
    cost: 100,
    availabilityLocation: ['smithy'],
    availability: 2,
    type: 'adventuring gear'
  }, {
    name: 'Bell',
    cost: 100,
    availabilityLocation: ['smithy', 'temple'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Block and Tackle',
    cost: 100,
    availabilityLocation: ['smithy'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Chain (10 feet)',
    cost: 500,
    availabilityLocation: ['smithy'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Caltrops (Bag of 20)',
    cost: 100,
    availabilityLocation: ['smithy'],
    availability: 2,
    type: 'adventuring gear'
  }, {
    name: 'Crowbar',
    cost: 200,
    availabilityLocation: ['smithy', 'generalStore'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Grappling Hook',
    cost: 200,
    availabilityLocation: ['smithy', 'generalStore'],
    availability: 3,
    type: 'adventuring gear'
  }, {
    name: 'Hammer',
    cost: 100,
    availabilityLocation: ['smithy', 'generalStore'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Sledge Hammer',
    cost: 200,
    availabilityLocation: ['smithy'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Hunting Trap',
    cost: 500,
    availabilityLocation: ['smithy'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Lamp',
    cost: 50,
    availabilityLocation: ['smithy', 'temple'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Lantern, Bullseye',
    cost: 1000,
    availabilityLocation: ['smithy', 'generalStore'],
    availability: 4,
    type: 'adventuring gear'
  }, {
    name: 'Lantern, Hooded',
    cost: 500,
    availabilityLocation: ['smithy', 'temple'],
    availability: 3,
    type: 'adventuring gear'
  }, {
    name: 'Lock',
    cost: 1000,
    availabilityLocation: ['smithy'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Manacles',
    cost: 200,
    availabilityLocation: ['smithy', 'generalStore'],
    availability: 2,
    type: 'adventuring gear'
  }, {
    name: 'Mirror, Steel',
    cost: 500,
    availabilityLocation: ['smithy'],
    availability: 2,
    type: 'adventuring gear'
  }, {
    name: "Pick, Miner's",
    cost: 200,
    availabilityLocation: ['smithy', 'generalStore'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Piton',
    cost: 5,
    availabilityLocation: ['smithy', 'generalStore'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Pot, Iron',
    cost: 200,
    availabilityLocation: ['smithy', 'generalStore'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Ram, Portable',
    cost: 400,
    availabilityLocation: ['smithy'],
    availability: 4,
    type: 'adventuring gear'
  }, {
    name: 'Spikes, Iron (10)',
    cost: 100,
    availabilityLocation: ['smithy'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: "Mason's Tools",
    cost: 1000,
    availabilityLocation: ['smithy', 'generalStore'],
    availability: 2,
    type: 'tools'
  }, {
    name: "Smith's Tools",
    cost: 2000,
    availabilityLocation: ['smithy'],
    availability: 1,
    type: 'tools'
  }, {
    name: "Tinker's Tools",
    cost: 5000,
    availabilityLocation: ['smithy', 'generalStore'],
    availability: 3,
    type: 'tools'
  }, {
    name: 'Horn',
    cost: 300,
    availabilityLocation: ['smithy'],
    availability: 4,
    type: 'tools'
  }, {
    name: 'Club',
    cost: 10,
    availabilityLocation: ['generalStore'],
    availability: 1,
    type: 'weapon'
  }, {
    name: 'Dagger',
    cost: 200,
    availabilityLocation: ['generalStore', 'smithy'],
    availability: 1,
    type: 'weapon'
  }, {
    name: 'Greatclub',
    cost: 20,
    availabilityLocation: ['generalStore'],
    availability: 1,
    type: 'weapon'
  }, {
    name: 'Handaxe',
    cost: 500,
    availabilityLocation: ['generalStore', 'smithy'],
    availability: 1,
    type: 'weapon'
  }, {
    name: 'Light Hammer',
    cost: 200,
    availabilityLocation: ['generalStore', 'smithy'],
    availability: 1,
    type: 'weapon'
  }, {
    name: 'Quarterstaff',
    cost: 20,
    availabilityLocation: ['generalStore'],
    availability: 1,
    type: 'weapon'
  }, {
    name: 'Light Crossbow',
    cost: 2500,
    availabilityLocation: ['generalStore'],
    availability: 2,
    type: 'weapon'
  }, {
    name: 'Dart',
    cost: 5,
    availabilityLocation: ['generalStore'],
    availability: 1,
    type: 'weapon'
  }, {
    name: 'Shortbow',
    cost: 2500,
    availabilityLocation: ['generalStore'],
    availability: 1,
    type: 'weapon'
  }, {
    name: 'Sling',
    cost: 10,
    availabilityLocation: ['generalStore'],
    availability: 1,
    type: 'weapon'
  }, {
    name: 'Whip',
    cost: 200,
    availabilityLocation: ['generalStore'],
    availability: 1,
    type: 'weapon'
  }, {
    name: 'Hand Crossbow',
    cost: 7500,
    availabilityLocation: ['generalStore'],
    availability: 3,
    type: 'weapon'
  }, {
    name: 'Heavy Crossbow',
    cost: 5000,
    availabilityLocation: ['generalStore'],
    availability: 4,
    type: 'weapon'
  }, {
    name: 'Longbow',
    cost: 5000,
    availabilityLocation: ['generalStore'],
    availability: 1,
    type: 'weapon'
  }, {
    name: 'Backpack',
    cost: 200,
    availabilityLocation: ['generalStore'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Bedroll',
    cost: 100,
    availabilityLocation: ['generalStore'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Blanket',
    cost: 50,
    availabilityLocation: ['generalStore'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Block and Tackle',
    cost: 100,
    availabilityLocation: ['generalStore', 'smithy'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Book',
    cost: 250,
    availabilityLocation: ['generalStore', 'temple'],
    availability: 2,
    type: 'adventuring gear'
  }, {
    name: 'Bottle, Glass',
    cost: 200,
    availabilityLocation: ['generalStore', 'alchemist'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Bucket',
    cost: 5,
    availabilityLocation: ['generalStore'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Candle',
    cost: 1,
    availabilityLocation: ['generalStore', 'temple'],
    availability: 2,
    type: 'adventuring gear'
  }, {
    name: 'Case, Crossbow Bolt',
    cost: 500,
    availabilityLocation: ['generalStore'],
    availability: 2,
    type: 'adventuring gear'
  }, {
    name: 'Case, Map or Scroll',
    cost: 100,
    availabilityLocation: ['generalStore'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Chain, 10 feet',
    cost: 500,
    availabilityLocation: ['generalStore', 'smithy'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Chest',
    cost: 500,
    availabilityLocation: ['generalStore'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Climbers Kit',
    cost: 2500,
    availabilityLocation: ['generalStore'],
    availability: 2,
    type: 'adventuring gear'
  }, {
    name: "Clothes, Traveler's",
    cost: 200,
    availabilityLocation: ['generalStore'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Component Pouch',
    cost: 2500,
    availabilityLocation: ['generalStore', 'alchemist'],
    availability: 2,
    type: 'adventuring gear'
  }, {
    name: 'Fishing Tackle',
    cost: 100,
    availabilityLocation: ['generalStore'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Flask or tankard',
    cost: 2,
    availabilityLocation: ['generalStore', 'alchemist', 'temple'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Hourglass',
    cost: 2500,
    availabilityLocation: ['generalStore'],
    availability: 3,
    type: 'adventuring gear'
  }, {
    name: 'Hunting Trap',
    cost: 500,
    availabilityLocation: ['generalStore'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Ink (1 ounce)',
    cost: 1000,
    availabilityLocation: ['generalStore', 'alchemist', 'temple'],
    availability: 3,
    type: 'adventuring gear'
  }, {
    name: 'Ink Pen',
    cost: 2,
    availabilityLocation: ['generalStore', 'temple'],
    availability: 3,
    type: 'adventuring gear'
  }, {
    name: 'Ladder, 10ft.',
    cost: 10,
    availabilityLocation: ['generalStore'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Lantern, Bullseye',
    cost: 1000,
    availabilityLocation: ['generalStore', 'smithy'],
    availability: 3,
    type: 'adventuring gear'
  }, {
    name: 'Lantern, Hooded',
    cost: 500,
    availabilityLocation: ['generalStore', 'smithy'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Magnifying Glass',
    cost: 10000,
    availabilityLocation: ['generalStore'],
    availability: 3,
    type: 'adventuring gear'
  }, {
    name: 'Mess Kit',
    cost: 20,
    availabilityLocation: ['generalStore'],
    availability: 3,
    type: 'adventuring gear'
  }, {
    name: 'Steel Mirror',
    cost: 500,
    availabilityLocation: ['generalStore'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Oil, flask',
    cost: 10,
    availabilityLocation: ['generalStore', 'alchemist', 'temple'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Paper (one sheet)',
    cost: 20,
    availabilityLocation: ['generalStore', 'temple'],
    availability: 4,
    type: 'adventuring gear'
  }, {
    name: 'Parchment (one sheet)',
    cost: 10,
    availabilityLocation: ['generalStore', 'temple'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Pole (10 ft.)',
    cost: 5,
    availabilityLocation: ['generalStore'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Pouch',
    cost: 50,
    availabilityLocation: ['generalStore'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Quiver',
    cost: 500,
    availabilityLocation: ['generalStore'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Rope, Hemp (50ft)',
    cost: 100,
    availabilityLocation: ['generalStore'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Rope, Silk (50ft)',
    cost: 1000,
    availabilityLocation: ['generalStore'],
    availability: 4,
    type: 'adventuring gear'
  }, {
    name: 'Sack',
    cost: 1,
    availabilityLocation: ['generalStore'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Shovel',
    cost: 200,
    availabilityLocation: ['generalStore'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Signal whistle',
    cost: 5,
    availabilityLocation: ['generalStore'],
    availability: 3,
    type: 'adventuring gear'
  }, {
    name: 'Spikes, Iron (10)',
    cost: 100,
    availabilityLocation: ['generalStore', 'smithy'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Spyglass',
    cost: 100000,
    availabilityLocation: ['generalStore'],
    availability: 4,
    type: 'adventuring gear'
  }, {
    name: 'Two person tent',
    cost: 200,
    availabilityLocation: ['generalStore'],
    availability: 2,
    type: 'adventuring gear'
  }, {
    name: 'Tinderbox',
    cost: 50,
    availabilityLocation: ['generalStore'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Torch',
    cost: 1,
    availabilityLocation: ['generalStore', 'temple'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Vial',
    cost: 100,
    availabilityLocation: ['generalStore', 'alchemist', 'temple'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Waterskin',
    cost: 20,
    availabilityLocation: ['generalStore', 'temple'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: "Cartographer's Tools",
    cost: 1500,
    availabilityLocation: ['generalStore'],
    availability: 2,
    type: 'tools'
  }, {
    name: "Calligrapher's Tools",
    cost: 1000,
    availabilityLocation: ['temple'],
    availability: 2,
    type: 'tools'
  }, {
    name: 'Herbalism Kit',
    cost: 500,
    availabilityLocation: ['generalStore', 'temple'],
    availability: 2,
    type: 'tools'
  }, {
    name: "Healer's Kit",
    cost: 500,
    availabilityLocation: ['generalStore', 'alchemist', 'temple'],
    availability: 2,
    type: 'tools'
  }, {
    name: "Navigator's Tools",
    cost: 2500,
    availabilityLocation: ['generalStore'],
    availability: 1,
    type: 'tools'
  }, {
    name: "Painter's Supplies",
    cost: 1000,
    availabilityLocation: ['generalStore'],
    availability: 3,
    type: 'tools'
  }, {
    name: "Potter's Tools",
    cost: 1000,
    availabilityLocation: ['generalStore'],
    availability: 1,
    type: 'tools'
  }, {
    name: 'Dice Set',
    cost: 10,
    availabilityLocation: ['generalStore'],
    availability: 1,
    type: 'tools'
  }, {
    name: 'Playing Card Set',
    cost: 50,
    availabilityLocation: ['generalStore'],
    availability: 1,
    type: 'tools'
  }, {
    name: 'Flute',
    cost: 200,
    availabilityLocation: ['temple'],
    availability: 3,
    type: 'tools'
  }, {
    name: 'Lyre',
    cost: 3000,
    availabilityLocation: ['temple'],
    availability: 3,
    type: 'tools'
  }, {
    name: 'Horn',
    cost: 300,
    availabilityLocation: ['temple'],
    availability: 3,
    type: 'tools'
  }, {
    name: 'Poison, Basic',
    cost: 10000,
    availabilityLocation: ['alchemist'],
    availability: 1,
    type: 'consumable'
  }, {
    name: 'Potion, Common',
    cost: 50000,
    availabilityLocation: ['alchemist'],
    availability: 1,
    type: 'consumable'
  }, {
    name: 'Potion, Uncommon',
    cost: 250000,
    availabilityLocation: ['alchemist'],
    availability: 1,
    type: 'consumable'
  }, {
    name: 'Potion, Rare',
    cost: 2500000,
    availabilityLocation: ['alchemist'],
    availability: 3,
    type: 'consumable'
  }, {
    name: 'Potion of Healing',
    cost: 5000,
    availabilityLocation: ['alchemist', 'temple'],
    availability: 1,
    type: 'consumable'
  }, {
    name: 'Potion of Poison',
    cost: 10000,
    availabilityLocation: ['alchemist'],
    availability: 2,
    type: 'consumable'
  }, {
    name: 'Potion of Health',
    cost: 12000,
    availabilityLocation: ['alchemist'],
    availability: 4,
    type: 'consumable'
  }, {
    name: 'Potion of Fire Breath',
    cost: 150000,
    availabilityLocation: ['alchemist'],
    availability: 3,
    type: 'consumable'
  }, {
    name: 'Potion of Greater Healing',
    cost: 15000,
    availabilityLocation: ['alchemist'],
    availability: 2,
    type: 'consumable'
  }, {
    name: 'Potion of Climbing',
    cost: 18000,
    availabilityLocation: ['alchemist'],
    availability: 1,
    type: 'consumable'
  }, {
    name: 'Potion of Heroism',
    cost: 18000,
    availabilityLocation: ['alchemist'],
    availability: 4,
    type: 'consumable'
  }, {
    name: 'Potion of Invisibility',
    cost: 18000,
    availabilityLocation: ['alchemist'],
    availability: 4,
    type: 'consumable'
  }, {
    name: 'Potion of Mind Reading',
    cost: 18000,
    availabilityLocation: ['alchemist'],
    availability: 4,
    type: 'consumable'
  }, {
    name: 'Potion of Water Breathing',
    cost: 18000,
    availabilityLocation: ['alchemist'],
    availability: 2,
    type: 'consumable'
  }, {
    name: 'Potion of Animal Friendship',
    cost: 20000,
    availabilityLocation: ['alchemist'],
    availability: 3,
    type: 'consumable'
  }, {
    name: 'Potion of Diminution',
    cost: 27000,
    availability: 4,
    availabilityLocation: ['alchemist'],
    type: 'consumable'
  }, {
    name: 'Potion of Growth',
    cost: 27000,
    availability: 3,
    availabilityLocation: ['alchemist'],
    type: 'consumable'
  }, {
    name: 'Potion of Gaseous Form',
    cost: 30000,
    availability: 4,
    availabilityLocation: ['alchemist'],
    type: 'consumable'
  }, {
    name: 'Potion of Resistance',
    cost: 30000,
    availability: 3,
    availabilityLocation: ['alchemist'],
    type: 'consumable'
  }, {
    name: 'Potion of Speed',
    cost: 40000,
    availability: 4,
    availabilityLocation: ['alchemist'],
    type: 'consumable'
  }, {
    name: 'Potion of Superior Healing',
    cost: 45000,
    availability: 3,
    availabilityLocation: ['alchemist'],
    type: 'consumable'
  }, {
    name: 'Potion of Flying',
    cost: 50000,
    availability: 4,
    availabilityLocation: ['alchemist'],
    type: 'consumable'
  }, {
    name: 'Potion of Clairvoyance',
    cost: 96000,
    availability: 4,
    availabilityLocation: ['alchemist'],
    type: 'consumable'
  }, {
    name: 'Potion of Vitality',
    cost: 96000,
    availability: 4,
    availabilityLocation: ['alchemist'],
    type: 'consumable'
  }, {
    name: 'Potion of Supreme Healing',
    cost: 135000,
    availability: 4,
    availabilityLocation: ['alchemist'],
    type: 'consumable'
  }, {
    name: 'Potion of Invulnerability',
    cost: 384000,
    availability: 4,
    availabilityLocation: ['alchemist'],
    type: 'consumable'
  }, {
    name: 'Potion of Diminution',
    cost: 27000,
    availabilityLocation: ['alchemist'],
    availability: 4,
    type: 'consumable'
  }, {
    name: 'Potion of Growth',
    cost: 27000,
    availabilityLocation: ['alchemist'],
    availability: 3,
    type: 'consumable'
  }, {
    name: 'Potion of Gaseous Form',
    cost: 30000,
    availabilityLocation: ['alchemist'],
    availability: 4,
    type: 'consumable'
  }, {
    name: 'Potion of Resistance',
    cost: 30000,
    availabilityLocation: ['alchemist'],
    availability: 3,
    type: 'consumable'
  }, {
    name: 'Potion of Speed',
    cost: 40000,
    availabilityLocation: ['alchemist'],
    availability: 4,
    type: 'consumable'
  }, {
    name: 'Potion of Superior Healing',
    cost: 45000,
    availabilityLocation: ['alchemist'],
    availability: 3,
    type: 'consumable'
  }, {
    name: 'Potion of Flying',
    cost: 50000,
    availabilityLocation: ['alchemist'],
    availability: 4,
    type: 'consumable'
  }, {
    name: 'Potion of Clairvoyance',
    cost: 96000,
    availabilityLocation: ['alchemist'],
    availability: 4,
    type: 'consumable'
  }, {
    name: 'Potion of Vitality',
    cost: 96000,
    availabilityLocation: ['alchemist'],
    availability: 4,
    type: 'consumable'
  }, {
    name: 'Potion of Supreme Healing',
    cost: 135000,
    availabilityLocation: ['alchemist'],
    availability: 4,
    type: 'consumable'
  }, {
    name: 'Potion of Invulnerability',
    cost: 384000,
    availabilityLocation: ['alchemist'],
    availability: 4,
    type: 'consumable'
  }, {
    name: 'Jug',
    cost: 2,
    availabilityLocation: ['alchemist'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Anti-toxin (vial)',
    cost: 5000,
    availabilityLocation: ['alchemist'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: "Brewer's Supplies",
    cost: 2000,
    availabilityLocation: ['alchemist'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Acid',
    cost: 2500,
    availabilityLocation: ['alchemist'],
    availability: 2,
    type: 'adventuring gear'
  }, {
    name: "Poisoner's Kit",
    cost: 50000,
    availabilityLocation: ['alchemist'],
    availability: 2,
    type: 'tools'
  }, {
    name: "Alchemist's Supplies",
    cost: 50000,
    availabilityLocation: ['alchemist'],
    availability: 2,
    type: 'tools'
  }, {
    name: "Cook's Utensils",
    cost: 20,
    availabilityLocation: ['alchemist'],
    availability: 3,
    type: 'tools'
  }, {
    name: "Alchemist's Fire (flask)",
    cost: 5000,
    availabilityLocation: ['alchemist'],
    availability: 3,
    type: 'adventuring gear'
  }, {
    name: 'Perfume (vial)',
    cost: 500,
    availabilityLocation: ['alchemist', 'temple'],
    availability: 4,
    type: 'adventuring gear'
  }, {
    name: "Alm's box",
    cost: 500,
    availabilityLocation: ['temple'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Scripture Book',
    cost: 2500,
    availabilityLocation: ['temple'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Censer',
    cost: 500,
    availabilityLocation: ['temple'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Chalk (one piece)',
    cost: 1,
    availabilityLocation: ['temple'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Holy symbol',
    cost: 500,
    availabilityLocation: ['temple'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Flask of Holy Water',
    cost: 2500,
    availabilityLocation: ['temple'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Incense (1 block)',
    cost: 1,
    availabilityLocation: ['temple'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Rations (1 day)',
    cost: 50,
    availabilityLocation: ['temple'],
    availability: 1,
    type: 'adventuring gear'
  }, {
    name: 'Crisped Worm and Potatoes',
    cost: 3,
    availabilityLocation: ['tavern'],
    availability: 1,
    dietary: 'omni'
  }, {
    name: 'Frogs on Skewers',
    cost: 4,
    availabilityLocation: ['tavern'],
    availability: 1,
    dietary: 'carni'
  }, {
    name: 'Green Chili Stew',
    cost: 3,
    availabilityLocation: ['tavern'],
    availability: 1,
    dietary: 'veg'
  }, {
    name: 'Grilled Snake and Macadamia',
    cost: 3,
    availabilityLocation: ['tavern'],
    availability: 1,
    dietary: 'carni'
  }, {
    name: 'Humble Pie (tripe or cow heel)',
    cost: 2,
    availabilityLocation: ['tavern'],
    availability: 1,
    dietary: 'veg'
  }, {
    name: 'Lizard Gruel with Nutbread',
    cost: 3,
    availabilityLocation: ['tavern'],
    availability: 1,
    dietary: 'carni'
  }, {
    name: 'Plain porridge',
    cost: 2,
    availabilityLocation: ['tavern'],
    availability: 1,
    dietary: 'veg'
  }, {
    name: 'Spiced porridge',
    cost: 3,
    availabilityLocation: ['tavern'],
    availability: 1,
    dietary: 'veg'
  }, {
    name: 'Pot of cured meats',
    cost: 4,
    availabilityLocation: ['tavern'],
    availability: 1,
    dietary: 'carni'
  }, {
    name: 'Bacon and Eggs',
    cost: 6,
    availabilityLocation: ['tavern'],
    availability: 1,
    dietary: 'carni'
  }, {
    name: 'Bread and cheese',
    cost: 3,
    availabilityLocation: ['tavern'],
    availability: 1,
    dietary: 'veg'
  }, {
    name: 'Vegetable Stew',
    cost: 4,
    availabilityLocation: ['tavern'],
    availability: 1,
    dietary: 'veg'
  }, {
    name: 'Eggs on toast',
    cost: 5,
    availabilityLocation: ['tavern'],
    availability: 1,
    dietary: 'veg'
  }, {
    name: 'Honeybread',
    cost: 3,
    availabilityLocation: ['tavern'],
    availability: 1,
    dietary: 'veg'
  }, {
    name: 'Greenspear',
    cost: 3,
    availabilityLocation: ['tavern'],
    availability: 1,
    dietary: 'veg'
  }, {
    name: 'Baked potatoes',
    cost: 3,
    availabilityLocation: ['tavern'],
    availability: 1,
    dietary: 'veg'
  }, {
    name: 'Catch of the Day fish, served with lemon',
    availabilityLocation: ['tavern'],
    cost: 11,
    availability: 2,
    dietary: 'carni'
  }, {
    name: 'Barbecued Gopher Legs',
    cost: 6,
    availabilityLocation: ['tavern'],
    availability: 1,
    dietary: 'carni'
  }, {
    name: 'Bog-Beetle Dumplings',
    cost: 4,
    availabilityLocation: ['tavern'],
    availability: 1,
    dietary: 'carni'
  }, {
    name: 'Bread-bowl stew',
    cost: 5,
    availabilityLocation: ['tavern'],
    availability: 2,
    dietary: 'veg'
  }, {
    name: 'Leg of Mutton and eggs',
    cost: 6,
    availabilityLocation: ['tavern'],
    availability: 2,
    dietary: 'carni'
  }, {
    name: 'Mushroom Stew with Bread',
    cost: 5,
    availabilityLocation: ['tavern'],
    availability: 2,
    dietary: 'veg'
  }, {
    name: 'Rabbit and Baked Pumpkin',
    cost: 6,
    availabilityLocation: ['tavern'],
    availability: 2,
    dietary: 'omni'
  }, {
    name: 'Roseapple pie',
    cost: 3,
    availabilityLocation: ['tavern'],
    availability: 1,
    dietary: 'veg'
  }, {
    name: 'Squash and Fish Soup',
    cost: 8,
    availabilityLocation: ['tavern'],
    availability: 2,
    dietary: 'omni'
  }, {
    name: 'Broiled Salmon and Potatoes',
    cost: 30,
    availabilityLocation: ['tavern'],
    availability: 2,
    dietary: 'omni'
  }, {
    name: 'Cheese Pie and Onion Soup',
    cost: 25,
    availabilityLocation: ['tavern'],
    availability: 2,
    dietary: 'veg'
  }, {
    name: 'Grilled Wild Boar Chops',
    cost: 35,
    availabilityLocation: ['tavern'],
    availability: 2,
    dietary: 'carni'
  }, {
    name: 'Baked Loin of Pork with Gravy',
    cost: 56,
    availabilityLocation: ['tavern'],
    availability: 3,
    dietary: 'carni'
  }, {
    name: 'Beef Steak and Kidney Pie',
    cost: 78,
    availabilityLocation: ['tavern'],
    availability: 3,
    dietary: 'carni'
  }, {
    name: 'Pecan Pie',
    cost: 35,
    availabilityLocation: ['tavern'],
    availability: 3,
    dietary: 'veg'
  }, {
    name: 'Buffaloaf and Honeyed Corn',
    cost: 70,
    availabilityLocation: ['tavern'],
    availability: 3,
    dietary: 'carni'
  }, {
    name: 'Elven Bread',
    cost: 60,
    availabilityLocation: ['tavern'],
    availability: 3,
    dietary: 'veg'
  }, {
    name: 'Honey Braised Boar Ribs',
    cost: 85,
    availabilityLocation: ['tavern'],
    availability: 3,
    dietary: 'carni'
  }, {
    name: 'Pork Chop and Curds',
    cost: 92,
    availabilityLocation: ['tavern'],
    availability: 3,
    dietary: 'carni'
  }, {
    name: 'Rack of Lamb Platter',
    cost: 95,
    availabilityLocation: ['tavern'],
    availability: 3,
    dietary: 'carni'
  }, {
    name: 'Barbecued Tiger Fish and Papaya',
    cost: 200,
    availabilityLocation: ['tavern'],
    availability: 4,
    dietary: 'omni'
  }];

  function linguisticDrift(name) {
    // These rules get applied repeatedly until they cannot be applied any more
    const fix = [// Some vowels should never be doubled
    [1, /aa/g, 'a'], [1, /ii/g, 'i'], [1, /uu/g, 'u'], // Some bad vowel combos
    [1, /ae/g, 'a'], [1, /eu/g, 'e'], // Some consonants should never be doubled
    [1, /([hjkqvwxy])\1/g, '$1'], // No tripled letters
    [1, /([a-z])\1\1/, '$1$1'], // Remove a doubled consonant when it has a consonant on both? ends
    [1, /([bcdfghjklmnpqrstvwxz])([bcdfghjklmnpqrstvwxz])\2([bcdfghjklmnpqrstvwxz])/g, '$1$2$3'], // [1, /([bcdfghjklmnpqrstvwxz])\1([bcdfghjklmnpqrstvwxz])/g, '$1$2'],
    // No -lee at the end of a word
    [1, /([^Ff][^r])ee /g, '$1ey '], [1, /([^Ff][^r])ee$/, '$1ey'], // ror, rur, rar, etc., are hard to say
    [1, /r([aeiou])r/, '$1r'], // no vowel before -ington
    [1, /([aeiou])ington$/, 'ington'], // No -ttown
    [1, /ttown$/, 'town']]; // Simplify out some problematic combinations

    const modify = [// Sometimes remove a doubled consonant no matter where
    [0.50, /([bcdfghjkmnpqrstvwxyz])\1(\w)/, '$1$2'], // Some of the time turn a ph into f
    [0.50, /ph/, 'f'], // Convert y to i
    [0.50, /([bcdfghjklmnpqrstvwxyz])y([bcdfghjklmnpqrstvwxyz])/, '$1ie$2'], // chrim => krim?
    [0.50, /chrim/, 'krim'], // [^c]kr => $1
    [0.50, /([^c])kr/, '$1cr'], // oa => o
    [0.50, /oa/g, 'o'], // Randomly swap vowels
    [0.05, VOWEL_SWAP, 'a'], [0.05, VOWEL_SWAP, 'e'], [0.05, VOWEL_SWAP, 'i'], [0.05, VOWEL_SWAP, 'o'], [0.05, VOWEL_SWAP, 'u'], // Randomly swap consonants
    // Thu Jun 21 17:07:45 2018 -- Scott R. Turner
    // Don't swap one consonant of a pair
    [0.01, CONSONANT_SWAP, '$1b$2'], [0.01, CONSONANT_SWAP, '$1c$2'], [0.01, CONSONANT_SWAP, '$1d$2'], [0.01, CONSONANT_SWAP, '$1f$2'], [0.01, CONSONANT_SWAP, '$1g$2'], [0.01, CONSONANT_SWAP, '$1j$2'], [0.01, CONSONANT_SWAP, '$1k$2'], [0.01, CONSONANT_SWAP, '$1l$2'], [0.01, CONSONANT_SWAP, '$1m$2'], [0.01, CONSONANT_SWAP, '$1n$2'], [0.01, CONSONANT_SWAP, '$1p$2'], [0.01, CONSONANT_SWAP, '$1r$2'], [0.01, CONSONANT_SWAP, '$1s$2'], [0.01, CONSONANT_SWAP, '$1t$2'], [0.01, CONSONANT_SWAP, '$1v$2'], [0.01, CONSONANT_SWAP, '$1w$2'], [0.01, CONSONANT_SWAP, '$1y$2'], // Adding an superfluous e to the end...
    [0.50, /([bcdfghjklmnpqrstvwxyz])([bcdfghjklmnpqrtvwxyz])$/, '$1$2e'], [0.50, /oor/, 'ore'], [0.50, /(\w)y(\w)/, '$1i$2'], [0.50, /ph/, 'f'], [0.50, /f/, 'ph'], [0.50, /nge/, 'nj'], [0.50, /earl/, 'url'], [0.50, /oung/, 'ung'], [0.50, /ake/, 'eak']];

    for (const [threshold, regExp, value] of [...fix, ...modify]) {
      if (randomFloat(1) <= threshold) {
        name = name.replace(regExp, value);
      }
    }

    return name;
  }
  const VOWEL_SWAP = /[aeiou]+/;
  const CONSONANT_SWAP = /([aeiou])[bcdfghjklmnpqrstvwxyz]([aeiou])/;

  const makeList = (array, opts) => {
    opts = Object.assign({
      noAnd: false,
      limit: -1
    }, opts);
    if (opts.noAnd) return commas(array, 0);
    if (array.length === 1) return array[0];
    if (array.length === 2) return `${array[0]} and ${array[1]}`;
    if (array.length === 3) return `${array[0]}, ${array[1]}, and ${array[2]}`;

    if (array.length > 3) {
      if (array.length > opts.limit && opts.limit !== -1) {
        let temp = commas(array, 0, opts.limit - 1);
        temp += `and ${array[opts.limit]}`;
        return temp;
      } else {
        let temp = commas(array, 0, opts.limit);
        temp += `and ${array[array.length - 1]}`;
        return temp;
      }
    }

    return commas(array, 0);
  };

  const commas = (array, start, end) => {
    let temp = '';

    for (const item of array.slice(start, end)) {
      temp += `${item}, `;
    }

    return temp;
  };

  var vendors = {
  	selling: [
  		"ale by the pint",
  		"amulets and totems",
  		"apples",
  		"attractive young slaves (bedmates)",
  		"axes and hammers",
  		"bearskin rugs and capes",
  		"beer by the barrel",
  		"biscuits and rolls",
  		"blankets and pillows",
  		"blessings",
  		"bouquets of flowers",
  		"bows and arrows",
  		"brass candlesticks, plates, and lamps",
  		"brass horns and flutes",
  		"cabbages",
  		"candles and candlesticks",
  		"carrots",
  		"carved stone figures",
  		"carved wooden figures",
  		"ceramic vases and cups",
  		"cheap jewellery and trinkets",
  		"cherries",
  		"clay pots, bowls, cups, and vases",
  		"coal",
  		"copper bowls, spoons, kettles, cups",
  		"corn on the cob",
  		"cotton shirts and pants",
  		"dogs and cats",
  		"domestic slaves (maidservants)",
  		"dried fish",
  		"dried herbs",
  		"dried venison",
  		"dried whole grain",
  		"drums and bells",
  		"exotic spices",
  		"exotic teas",
  		"feathered hats",
  		"firewood",
  		"flower seeds",
  		"foreign books",
  		"foreign coins",
  		"fresh bread",
  		"fresh fish",
  		"fruit pies",
  		"glass bottles, jars, vials, and cups",
  		"hardy slaves (laborers)",
  		"hot soup",
  		"iron candlesticks and tools",
  		"iron pots and pans",
  		"knives, forks, spoons and cooking utensils",
  		"lamps, lanterns, and oil",
  		"leather boots and caps",
  		"leather gloves",
  		"live poultry",
  		"lutes and fiddles",
  		"manure",
  		"meat pies",
  		"medicinal teas",
  		"onions",
  		"pears and plums",
  		"perfumes and scented oils",
  		"piglets",
  		"poisons and remedies",
  		"polished stones and crystals",
  		"potatoes",
  		"potions",
  		"potted herbs",
  		"quarrels and crossbows",
  		"rats and pigeons",
  		"rope",
  		"rough-cut gems",
  		"saddles and bridles",
  		"salted pork",
  		"saplings",
  		"scented candles",
  		"seasonal berries",
  		"shields and helms",
  		"shiny leather shoes",
  		"silk shirts and scarves",
  		"snakeskin boots",
  		"soap",
  		"stone-ground flour",
  		"sturdy leather shoes",
  		"swords and spears",
  		"tables and chairs",
  		"tankards and mugs",
  		"tarot readings",
  		"torches and rations",
  		"traditional spices",
  		"turnips",
  		"used books",
  		"used horses and ponies",
  		"wagons and carts",
  		"waterskins and wineskins",
  		"whale oil",
  		"wine by the barrel",
  		"wine by the bottle",
  		"wolfskin rugs and capes",
  		"wooden-soled shoes",
  		"wool shirts and caps",
  		"woven baskets",
  		"young horses and ponies",
  		"low tier enchanted items",
  		"knockoff enchanted items",
  		"oddly shaped vials of unknown liquids",
  		"ancient tomes",
  		"copper sculptures",
  		"aged cheeses",
  		"spiced meats",
  		"hand painted pottery",
  		"carpets and tapestries",
  		"backpacks, pouches, and other bags",
  		"silver and gold jewellery",
  		"jewel encrusted knives, forks, and spoons",
  		"strange and exotic pets",
  		"preserved jams and jellies",
  		"ancient trinkets and knick knacks",
  		"palm readings",
  		"fortune telling",
  		"halfling grown pipe leaf",
  		"halfling carvings and jewellery",
  		"smelly halfling cheeses",
  		"rich and hearty dwarven breads",
  		"knockoff dwarven ale",
  		"traditional dwarven ale",
  		"dwarf-made tools and farming equipment",
  		"elven silk",
  		"fruity elven wines",
  		"fragrant elven incense",
  		"elven medicinal herbs",
  		"strangely shaped orcish vegetables",
  		"greasy and fragrant orcish meat pies",
  		"orcish knives and cutlery",
  		"slices from an auroch roasting on a spit",
  		"magical dice",
  		"lost and found items at reasonable prices",
  		"chickens, rabbits, ducks, and other small game",
  		"venoms and poisons (all medicinal of course)",
  		"snake oils of every variety",
  		"wooden toys for children",
  		"psychedelic plants",
  		"lesser known tomes",
  		"a variety of animal hides",
  		"pickled animal eyes",
  		"shrunken heads",
  		"what appears to be literal garbage",
  		"homemade pastries",
  		"several different types of chain",
  		"wigs in all different colors",
  		"a number of different disguise kits",
  		"makeup from far off lands",
  		"pet rocks"
  	],
  	shouts: [
  		"Tasty meat pies, baked into the shape of otters! Delicious!",
  		"Bows carved into the likeness of swans! Everyone's buying them!",
  		"Giant spider silk role! Ideal for adventuring! <blockquote>This is just spider silk in a bag, which is incredibly sticky.</blockquote>",
  		"Amuse your friends and family with my famous Otyugh hand-puppets!",
  		"Painted shields! Of all different shapes and sizes! You supply it, we paint it!",
  		"Statues of griffons with moving heads! Very realistic!",
  		"Luxury leather carriage seats! Keep your seat sweet!",
  		"Buy a fantastical shrinking head!",
  		"Colored rope! Handy for all occasions!",
  		"Four-pint pewter mugs carved into the shape of a dragon! For those with a dragon-like thirst!",
  		"Huge candles! Designed to burn for weeks! Very useful!",
  		"Spades, shovels, picks!",
  		"Who dares buy my purple worm whistle?",
  		"Outrageously purple velvet robes! The latest in fashion!",
  		"Wear a wig, look quite big!",
  		"Scabbards with monsters getting stabbed on them! Scare them before you even start!",
  		"Foldable large weapons stands! Be the envy of your friends!",
  		"Stuffed sturges to hurl at your enemies!",
  		"Breastplates with gargoyles faces engraved on them!",
  		"Gargoyles with breasts engraved on them!",
  		"Mulled cider and wine to warm your bones!",
  		"Castle Cakes! Looks like a castle, but not as crunchy!",
  		"The latest in belts! We have brown! Black! Grey! More brown!",
  		"Dire rat traps! Bigger the rat, bigger the trap!",
  		"Owlbear pelt scarves! You'll be cold without one!",
  		"Lost? Why not find your way home with a homing badger! Guaranteed to find their way home!",
  		"Who'll buy my lovely sweet meats?",
  		"Cabbages! Specially imported!",
  		"Rusty swords? Why not return it to new with my patented miracle cloth?",
  		"Keep beholders away with this special beholder repellant!",
  		"Guaranteed dragon bones!",
  		"Scented oil lamps! Make your parlour fragrant!",
  		"Herbs and spices, all in one place!",
  		"Light the way with my candle helmet!",
  		"Lost your voice, and can't be heard? Buy my mega-talk! Conical device to help those around you hear you!",
  		"Dire ferret skins! Dire ferret skins!",
  		"Certified musical sheep!",
  		"Toffee apples! Who wants some toffee apples?",
  		"Sledges for sale! Going fast!",
  		"Jugs for sale! Shaped like your favourite woodland creatures! Rabbits! Mice! Owls! Owlbears! Hedgehogs!",
  		"Folding seats! Relax where others can't!",
  		"Hammocks for sale! All sizes and colours!",
  		"Who'll buy their child a pet newt? Latest craze at the courts!",
  		"Be a star with the puppet theatre! Comes with wooden sticks, cloth, and stage for you to perform your very own shows!",
  		"Homely? Repulsive? Just plain ugly? Buy my guaranteed dryad powder! Look like a hundred year old elf in minutes!",
  		"Scare off swarms with my magical incense!",
  		"Don't lose your quart, buy my manacle tankard! For those that need to be pulled away from the grog!",
  		"Fancy pavilions!",
  		"Give me money!",
  		"Life advice! Just five copper! <blockquote>The life advice is 'don't buy life advice from a peasant.'</blockquote>",
  		"Hand bells for sale!",
  		"Bells for sale!",
  		"Hands for sale! Don't ask where they came from!",
  		"Get noticed in battle! Buy a personal flag!",
  		"Go unseen at night with my patented darkmagic body paint!",
  		"Muffins! Fresh muffins! Cinnamon and clove!",
  		"Spicy ale for sale!",
  		"Arrows! Nice and pointy!<blockquote>Unbeknownst to the seller, some of the arrows are indeed, quite pointy- masterwork, even.</blockquote>",
  		"Carts and wagons! Nicely brightly painted!",
  		"Powdered carrion crawler! Warts cured instantly!<blockquote>Not carrion crawler, not curative, smells like nettles, acts like nettles, is nettles.</blockquote>",
  		"Owlbear beaks for sale! Guaranteed protection from scurvy!<blockquote>Well, no protection against anything really.</blockquote>",
  		"Buy your love a rose that never dies!<blockquote>A picture of a rose</blockquote>",
  		"The finest wines you've ever tasted! Fruity or dry, oaky or herbal, we have them all!",
  		"Cure that painful boil with my all-in-one healing tincture!<blockquote>It's just rancid vinegar</blockquote>",
  		"Pies! Fruit pies! Apple, cherry, peach, and plum!",
  		"Never lose another bet! Get yourself some rigged dice!",
  		"Magical items for any occasion!",
  		"Self cleaning handkerchiefs in any color you want!",
  		"Pirelli's Miracle Elixir! For all your hair problems!",
  		"Skeleton keys from real skeletons!",
  		"Never forget another note! Buy my self playing instruments!"
  	],
  	suffix: [
  		"Be the envy of your friends!",
  		"Essential for the intrepid adventurer!",
  		"Half price!",
  		"Going fast!",
  		"I'm practically giving it away!",
  		"Best price in all the lands!",
  		"Don't waste any more time, buy today!",
  		"You'd be a fool to pass it up!",
  		"Be the big cheese on your block!",
  		"Buy it now!",
  		"I've got kids to feed, buy it!",
  		"Trade your money for goods and services here!",
  		"Even a dwarf would buy at this price!",
  		"Your next purchase is right here!",
  		"Love yourself and buy something nice!",
  		"Only a moron would ignore these low prices!",
  		"Don't miss this chance!",
  		"This bargain can't be beat!"
  	],
  	tent: [
  		"little push cart",
  		"small, mule-drawn cart",
  		"sizable ox-drawn wagon",
  		"sizable horse-drawn wagon",
  		"handful of crates or chests the vendor has set up",
  		"large rug on which the vendor has laid out the merchandise",
  		"flimsy wooden booth",
  		"sturdy wooden booth with a cotton awning",
  		"semi-permanent wooden stall",
  		"permanent stone stall",
  		"huge sack the merchant has set down on the ground",
  		"one- or two-man tent",
  		"myriad of pockets in the vendor's clothes",
  		"permanent table with a tent set up around it",
  		"racks of goods set up in a circle",
  		"group of flat stones with merchandise piled on them",
  		"pile of dirty rags laid on the ground",
  		"long foldout table",
  		"hammock the vendor has set up",
  		"makeshift looking storeftont",
  		"makeshift looking booth",
  		"nice looking storefront",
  		"ramshackle storefront",
  		"very colorful caravan wagon"
  	]
  };
  var location = [
  	"a wide, rectangular plaza",
  	"a large, circular plaza",
  	"a large plaza in a pentagon shape",
  	"the intersection of two wide roads",
  	"a sprawling maze of small alleyways",
  	"a sprawling maze of tunnels beneath the city streets",
  	"a huge pavilion with a solid roof overhead",
  	"a disorganized series of large tents",
  	"a single long, wide, road stretching through the town",
  	"a large clearing on the outside of town",
  	"a circle of tents around a huge bonfire",
  	"a scattered number of tents set randomly throughout town",
  	"an enormous rundown looking building",
  	"a small, muddy plaza",
  	"a series of rooftops connected by large wooden planks",
  	"a series of small buildings connected by covered awnings",
  	"the very center of town",
  	"a large gated plaza",
  	"the seedier side of town",
  	"the hull of a large beached boat"
  ];
  var size = [
  	"large and bustling",
  	"somewhat cramped",
  	"rather packed",
  	"relatively large",
  	"huge and hectic",
  	"claustrophobic",
  	"large but nearly empty",
  	"large enough to service an entire kingdom",
  	"too small for the growing town"
  ];
  var cleanliness = [
  	"rather dirty",
  	"somewhat dirty",
  	"riddled with the refuse of merchant horses and other livestock",
  	"overflowing with refuse",
  	"surprisingly clean",
  	"astonishingly well-kempt",
  	"surprisingly tidy",
  	"a victim to the chaos that is so common in markets",
  	"religiously cleaned",
  	"scattered with discarded food (and vermin eating it)",
  	"a bit muddy in places",
  	"dirtier the further in you go",
  	"cleaner than one might imagine",
  	"littered with discarded junk and trash"
  ];
  var draw = [
  	"the hot mead",
  	"the delicious spiced wines",
  	"cutthroat merchants",
  	"having either absolute trash, or total bargains",
  	"rather pushy merchants",
  	"being a pickpocketing hotspot",
  	"the outrageous prices some of the vendors charge",
  	"the hilarious stuff that vendors will do to get a sale",
  	"having all sorts of knick-knacks",
  	"having some really great magical stuff",
  	"having exotic pets running about",
  	"being a popular place for a first date",
  	"being open at practically all hours",
  	"being open once in a blue moon",
  	"the fights that break out",
  	"the excellent bargains one can often find",
  	"the merchants fighting each other for your business",
  	"the interesting things you can find",
  	"the wonderful scents and colors of the merchandise",
  	"the lovely and attractive merchants",
  	"the entertainers and musicians set up around the bazaar",
  	"having every type of food imaginable",
  	"having trinkets from every corner of the world",
  	"having cheap prices and friendly merchants",
  	"having a lot of knockoff goods",
  	"the loud phrases you hear buskers shout at passersby",
  	"being a pretty rough and tumble place"
  ];
  var organisation = [
  	"type of merchandise",
  	"nation of origin of the merchandise",
  	"race or ethnicity of the merchants",
  	"nothing; the place is a big disorganized mess",
  	"religious or political affiliation of the merchants",
  	"raw materials and commodities on one half of the market, finished products on the other half",
  	"imported goods on one half of the market, local goods on the other half",
  	"an intricate and archaic system put down in an ancient civic or religious document",
  	"the social class to which the vendor caters",
  	"order of arrival at the marketplace on any given day",
  	"whoever got to what spot first",
  	"who bribed the market runners the most for the month"
  ];
  var crowd = [
  	"basically empty, and no one is around to hear the cries of the merchants",
  	"mostly empty, and only a few people are wandering around looking at the goods laid out",
  	"decently busy, and several people are going between shops examining all the different merchandise",
  	"fairly packed, and people are bustling about and jostling each other to get to certain merchants",
  	"incredibly busy, and people are piled up at different stalls all trying to look at the goods on display",
  	"in absolute chaos, and absolutely swamped with people who are pushing and shoving to try to get to the different stalls",
  	"moderately crowded, with some merchants drawing large crowds and others left open for more customers",
  	"a little crowded, but the crowds have parted way for a noble who is passing through with an envoy looking for a specific item"
  ];
  var jsonData$1 = {
  	vendors: vendors,
  	location: location,
  	size: size,
  	cleanliness: cleanliness,
  	draw: draw,
  	organisation: organisation,
  	crowd: crowd
  };

  const market = jsonData$1;

  const matchFirst = {
    equalTo: createMatchFirst((value, key) => {
      return value === key;
    }),
    notEqualTo: createMatchFirst((value, key) => {
      return value !== key;
    }),
    largerThan: createMatchFirst((value, key) => {
      return value > key;
    }),
    largerThanOrEqualTo: createMatchFirst((value, key) => {
      return value >= key;
    }),
    smallerThan: createMatchFirst((value, key) => {
      return value < key;
    }),
    smallerThanOrEqualTo: createMatchFirst((value, key) => {
      return value <= key;
    })
  };

  function createMatchFirst(callback) {
    const modifier = (value, map, defaultValue) => {
      for (const key of keys(map).reverse()) {
        if (callback(value, Number(key))) {
          return map[key];
        }
      }

      return defaultValue;
    };

    return modifier;
  }

  const medal = {
    create: base => {
      const medal = {
        metal: random(data$1.metals),
        material: random(data$1.materials),
        emblem: random(data$1.emblems),
        colour: random(data$1.colours),
        ...base
      };
      assign(medal, {
        readout: `This medal's emblem is made of ${medal.metal} and has a ${medal.material} ribbon. The emblem is ${medal.emblem} and the ribbon is coloured ${medal.colour}.`
      });
      assign(medal, {
        tip: `<span class="dotted"><<tooltip "medal"${JSON.stringify(medal.readout)}>></span>`
      });
      return medal;
    }
  };
  const data$1 = {
    metals: ['iron', 'steel', 'silver', 'bronze', 'gold', 'copper', 'aluminum', 'lead', 'tin', 'nickel', 'oak wood', 'pine wood', 'brass', 'marble', 'onyx', 'tempered glass'],
    materials: ['cloth', 'wool', 'fleece', 'silk', 'cotton', 'leather', 'burlap', 'horse hair', 'lion mane hair', 'dragon scales', 'braided hemp', 'snake skin'],
    emblems: ['a pair of wings', 'a downward facing sword', 'an upward facing sword', 'a skull', 'an eagle', 'an arrow', 'an embossed circle', 'an axe', 'a heart', 'a cross', 'a holy symbol', 'the symbol of a local noble', 'a lion', 'a pair of clasped hands', 'an eye', 'a pyramid', 'a key', 'a raven', 'a feather', 'a wreath', 'a sturdy tree'],
    colours: ['red', 'crimson', 'maroon', 'gold', 'yellow', 'peridot', 'peach', 'purple', 'orange', 'green', 'white', 'black', 'brown', 'blue', 'indigo', 'azure', 'mauve', 'teal', 'emerald']
  };

  var jsonData = [
  	"NPC attempts to become player, ridiculed.",
  	"Underground homunculi fights discovered - homunculi sales increase.",
  	"Wizard house vanishes in the night, locals suspect shenanigans.",
  	"Doppelganger discovered in mayor's place. Townsfolk agree he's better than the old.",
  	"Tiefling, dragonborn, and hobbit visit tavern, local economy booming. (Adventures visited)",
  	"Werewolf suspected to live in town, buy your silver at Jameson's general store!",
  	"Goblins threaten to kill all townsfolk, distracted by 'shiny things'",
  	"Dragon flies over town, local illusionist jailed.",
  	"Lawyer discovered to be vampire, surprising no one.",
  	"Dwarf and human proclaim love, refused wedding ceremony by cleric.",
  	"Dragon rider gives birth to half dragon.",
  	"Centaur's father jailed for bestially.",
  	"Cultists file for rights to be called clerics.",
  	"Forest gnome discovered in wood elf elementary school, been 'stealing our food for years.'",
  	"Portal to elemental plane discovered, hot springs are rejuvenating says discoverer.",
  	"Fey found making old man's shoes, old man to be jailed for slavery.",
  	"Jack steals gold from 'giant in sky' giants pissed.",
  	"Necromancer family man caught trying to raise a family.",
  	"Drunken old ramblings of future discovered to be 90% accurate.",
  	"Dragonborn day-care suspected to be kobold infiltration team.",
  	"Local dungeon deliver finds 'artefact with a demonic presence' leaves it due to lack of modifiers.",
  	"Travelling circus to visit soon.",
  	"Farmer discovers wishing well works.",
  	"Druid makes farm animals talk, town goes vegetarian.",
  	"Druid threatens to awaken plants.",
  	"House pet discovered to be archdruid.",
  	"30 year old half elf sick of 'being treated like a child.'",
  	"Low level adventurers causing trouble in town; seeking rat infested basement to start them on a long quest.",
  	"Lost: Pet invisible stalker, if found return to Wash gust (Wizard). Poster includes a picture of the pet",
  	"Small medium at large; a poster for an escaped gnomish diviner",
  	"Familiars getting too familiar? Please spay or neuter your animal companions.",
  	"'Blurry face of something, angel or demon? Who knows' Do you trust your sight? MADD Magicians Against Drunken Divining.",
  	"St. Cuthbert's school of phrenology and trepanning",
  	"'Beware of doppelgangers!'",
  	"'Local wizard went missing after experimenting with a bag of holding'",
  	"'You will not believe your eyes when you read what this Halfling found in a dungeon!!!'",
  	"'Apprentice sorcerer blew up himself and started a forest fire'",
  	"'Thieves' guild revealed to be just a rumour'",
  	"'Gnome banished from town after drinking 200 potions of inappropriate yodelling'",
  	"'Banshee was still alive hours before she died!'",
  	"'City unsure why the sewer smells.'",
  	"'City guard's raid smithy, find +1 weapons'",
  	"'Goose attacked by aggressive dog, goose refused medical treatment.'",
  	"'Ilitrasee an obstakul for billboards, studee finds.'",
  	"'Group of adventurers mugged by a parrot.'",
  	"'Guard investigation reveals suspicious gold coin to be a copper coin.'",
  	"'Cows lose their jobs as milk prices drop'",
  	"Seeking apprentice cook/tavern staff",
  	"Seeking wizard to remove awaken from my pots and broom.",
  	"Local wizard apprentice blamed for recent flood, discovered to be awakened mouse",
  	"'Local merchant arrested for selling mimics disguised as furniture and appliances, scheme discovered after customer noticed his refrigerator was running.'",
  	"'Rampaging beast destroys slum, townsfolk celebrate new town square.'",
  	"Local instrument shop has massive blowout on Large-sized Lutes, due to a hilarious misunderstanding with local adventurers.",
  	"Help! Help! I'm being held here and made to write these signs!",
  	"Fourth-annual dwarf-throwing competition dissolves into chaos, bloodshed. 'We're looking forward to the fifth year!' says local dwarven merchant.",
  	"Bloodknife the Deathrager, level 20 Barbarian, buys local farm. Interviewed while re-forging a sword into a ploughshare, he said 'My DM doesn't support Epic levels.'",
  	"Strange ill rumours heard from those fleeing from the north. 'Probably nothing,' agrees city council.",
  	"Local wizard's attempt at opening a portal to the Plane of Uncertain Outcomes has succeeded and failed.",
  	"Local church erupts into violence over the usage of non-blunt weaponry among clergy. 'What's next,' cried a local priest, 'Paladins with no alignment restrictions?!'",
  	"Magical cobblers continue to take heavy losses on sales of Boots of Striding and Springing. Demand continues to drop as more editions are released.",
  	"Copyright permit for 11-foot pole denied by local council. 'It IS different!' cried the merchant, as he was escorted from the premises.",
  	"Market share for d12 weapons at an all time low. A local blacksmith was reached for comment, 'Orcs just ain't buyin' no more.'",
  	"A local village has reached a settlement to recompense a magical tailor for injury and losses sustained after the villagers ran him out of town. The elder of the village said, 'We thought t'were one of them parables! Turns out he does sell invisible cloth. We're truly sorry.'",
  	"Dairy farmer to begin offering 'milk for the Khorne flakes'. In an interview, he says 'Well, I began by getting Chaotic Evil cows.'",
  	"Orcs-no-eat insurance! You want not get eat, you pay us gold. Our motto are, 'Your money or you get eat.'",
  	"A local scientist claims 'Humans are slowly being replaced.' He went on to state that, 'These so-called 'variant humans' look exactly like us, and it is nearly impossible to tell if someone you know is one.'",
  	"The town of Westbrynn is under investigation after allegations surfaced that they are offering incentives for higher level creatures to move into the area. Authorities were tipped off after shipments of +5 weapons were intercepted on their way to the town.",
  	"Steampunk genres threaten takeover. Coastal wizards decline to comment",
  	"Lvl 3 familiars unionized! Necromancers at a loss for words",
  	"Gravity subject to change over the next few weeks: alchemists give assurances",
  	"Due to the recent rise in tectonic activity, all elemental mages are advised to avoid using materials near riverbanks and volcanoes",
  	"Dragon scale market plummets as advances in metalwork create stronger materials",
  	"Recent reports confirm health potions to cause loss in bone density. Heavy users of these potions argue that they usually don't live long enough to be effected",
  	"Theoretical alchemists argue the universe was created in a failed transmutation event coined 'The Big Bang'",
  	"'Local gangsters are putting up false notice boards to an excess.'",
  	"Kobold seeks dragon wing for no particular reason.",
  	"Local human scholar in need of parchment urgently.",
  	"Gnome mystic requires escort to deathly swamp.",
  	"Family wedding requires cooks. Will eat any one thing.",
  	"The Order of the Magi requires help in procuring the whereabouts of Magus Ornathuss.",
  	"Animated sword seeks better life; tired of being used in one way relationship.",
  	"Half-elf Baron Faelin Merrybrook found dead at his home. An investigation is still ongoing.",
  	"Finals of the annual tavern brawl to take place tomorrow!",
  	"Doppelganger suffering from identity crisis trying to find purpose in life.",
  	"The Wandering Troupe in town for two days only! Have the minstrels on the run from a bunch of bandits they fleeced and inadvertently involve the characters in their acts.",
  	"Local farmer requires assistance. I am unable to pay you for your troubles I am afraid.",
  	"Dwarf having some trouble removing a ring. The ring is actually a symbiotic ring and has fused with its new owner. It responds well to gluttony, which the dwarf is afflicted by. As the dwarf becomes more charitable, the ring loosens. If anyone wants to wear the ring, it gives 10 temporary hit points at dawn, each day.",
  	"Waresloth seeking help on slow nights.",
  	"Dwarf tossing championship at local tavern, bring your own dwarf.",
  	"Three gnomes in long coat arrested for impersonating human.",
  	"Trigeraian's Used Armour: Eh, it should serve you better than the previous wearer.",
  	"Castle executioner found using illegal muscle enchantments.",
  	"Local elven leader, famously against interracial breeding, found in orc brothel.",
  	"Charngroc's Custom Chimeras: personalized pets for any personality.",
  	"Local oracle revealed to be fraud. 'I just wanted to make a prophet' he says.",
  	"A Capella singing competition finished. Winner was a buomman asking for directions.",
  	"Adventurer teaches blink dog Common. 'Wow. Very language.' comments dog.",
  	"Unidentified kobold mage summons sarrukh. Apocalypse scheduled for 6 PM.",
  	"Evil Lich Necromancer escaped prison. Wanted dead or alive.",
  	"Impersonator discovers his house is a mimic"
  ];

  /**
   * Contains a variety of newspaper headlines.
   */

  const newspaper = jsonData;

  const patreonCharacters = {
    'Tylien Birchbottom': {
      firstName: 'Tylien',
      lastName: 'Birchbottom',
      gender: 'man',
      age: 'about twenty four',
      ageYears: 24,
      hasClass: true,
      isThrowaway: false,
      race: 'halfling',
      profession: 'warlock',
      height: 'rather diminutive',
      heightInches: 34,
      weight: 'small and light',
      idle: ['gently whispering to his petrified mouse', 'writing something in a well-worn notebook'],
      background: 'outlander',
      hairColour: 'brown',
      hairType: 'wispy',
      scar: 'lashes on his back that have scarred over',
      physicalTrait: 'lashes on his back that have scarred over',
      trait: 'constantly forgets things, and has to write things down in his journal to be able to remember them properly.',
      greeting: ['nods at you', 'welcomes you warmly', 'smiles and greets you', 'raises a hand with a wave'],
      professionOrigin: "I've been making a decent living hunting game, selling the pelts to the blacksmith for spare change. I'm searching for a cure to my memory decay- every day, I have to write more things down. I need to learn why these things are happening to me... To find out who or whatever the beast of shadows that stalks me is.",
      backgroundOrigin: "I was kidnapped by a cult at the age of 14. They used me in a ritual to summon an ancient being known as 'the beast of shadows'. Half-way through, guards rescued me. Things got better, and then got a lot worse- I woke speaking tongues, and found myself losing time. As my powers grew, so did my lost time, so I started to keep a journal. Nowadays I can barely remember more than a week into my past now.",
      owner: 'owner',
      calmTrait: 'unintentionally funny',
      stressTrait: 'distant',
      vocalPattern: 'speaks rather quickly',
      note: "Tylien is Patreon supporter Jasher Drake's PC."
    },
    'Galder Fendt': {
      firstName: 'Galder',
      lastName: 'Fendt',
      name: 'Galder Fendt',
      gender: 'man',
      age: 'venerable',
      eyes: 'green',
      ageYears: 84,
      hasClass: true,
      isThrowaway: false,
      race: 'human',
      height: 'some five and a half feet',
      heightInches: 66,
      weight: 'slightly pot-bellied',
      hairColour: 'brilliant white',
      scar: 'a faint cut of a Drow dagger from a long-forgotten skirmish',
      beard: 'a quite respectable beard',
      physicalTrait: 'a respectable beard',
      trait: "doesn't like to boast, and lets his enemies' perception of an unassuming old man be their downfall.",
      calmTrait: 'quiet',
      stressTrait: 'distant',
      vocalPattern: 'speaks slowly and deliberately',
      idle: [],
      profession: 'wizard',
      background: 'sage',
      note: "Galder Fendt is the wizard of /u/SomeHairyGuy, a Reddit user who suffered from advanced pelvic RMS. It's his wish that his character, Galder, be used in games around the world. #CreateAgainstCancer"
    },
    "Brugo Gul'Moth": {
      firstName: 'Brugo',
      lastName: "Gul'Moth",
      name: "Brugo Gul'Moth",
      gender: 'man',
      age: 'some eighteen years old',
      eyes: 'red',
      ageYears: 18,
      race: 'half-orc',
      height: 'tall, but with a bit of a slouch',
      heightInches: 72,
      weight: 'muscular',
      weightPounds: 180,
      hairColour: 'shaved bald',
      hairType: 'shiny',
      scar: 'scars everywhere. Not even in cool places. Just everywhere. Hands, legs, arms, chest, back, neck, face, ears, knees, some too close to the groin.',
      beard: 'a quite respectable beard',
      physicalTrait: 'a respectable beard',
      inventory: 'a ritual wooden mask',
      trait: 'Brugo always tries to relate to people through pain, which is often not a great topic for conversation',
      stressTrait: 'begin to hurt himself when under stress. Scratching, hitting, and biting his lip. Never hurts himself with a weapon or to do permanent damage',
      calmTrait: 'stoic and pensive. Brugo likes to observe the world and people around him when he has a peaceful moment.',
      vocalPattern: 'speak in third person. <div class="descriptive">Hello friend! Brugo has happy to see you! Brugo also have bad commonspeak. Is nature. What is "head-you-kay-shun?" Brugo understand your pain. See? This is where Brugo have scar. 12 years old, mountain lion. Brugo last 5 minutes before elders have to rescue. Claw pain was not bad. The true pain was shame. This why Brugo understand. Brugo is friends with you now? Hmm! (Hmm! = Brugo humming+grunting in a way that can be approval, "OK," excitement, or generally any positive affirmation that he cannot find the words to describe). It is his catch-phrase. "Hey Brugo, do you like ale?" "HMM!" "I almost died of hypothermia one time when I was young." "Hmm, Brugo know this pain." "My mother died when I was a baby." "Hmm, Brugo feel this third pain. Please explain third pain with more story, because Brugo have no mother. So Brugo cannot know this pain."</div>',
      idle: ['Brugo stares at his blood-red, wooden ritual mask, which is carved with an incredible number of horrible and frightening scars.'],
      profession: 'monk',
      hasClass: true,
      isThrowaway: false,
      background: 'acolyte',
      familyUnit: "Brugo's single father; Brugo has no clue who his mother was.",
      parentalLineage: "Brugo's father was an orc, and his mother a human. He doesn't know who she was, though.",
      professionOrigin: 'Brugo has always liked fight. Brugo discover that being punched is most common pain among outsiders. So Brugo decide that is friendliest profession. Brugo tried other pains but outsiders were lot more scared of them. Brugo get respect for good punches for curious reason.',
      backgroundOrigin: 'Brugo is Son of Gul, Leader of the Cult of Pain. Brugo is of age to be sent on the Pain Quest to discover new methods of pain. Brugo must etch a new scar in ritual mask for each new pain learned.',
      note: 'Brugo is the character of Patreon supporter NaviSaysListen.'
    }
  };

  // function makeTerrain<T extends X> () {
  const terrain = {
    temperate: {
      start: {
        'seashore': 4,
        'forest': 2,
        'river coast': 2,
        'hills': 1,
        'plains': 1,
        'mountains': 1
      },
      weather: {
        tempVariation: {
          95: {
            temperature: () => dice(3, 10),
            temperatureTimer: () => random(24, 48)
          },
          85: {
            temperature: () => dice(2, 10),
            temperatureTimer: () => random(24, 96)
          },
          65: {
            temperature: () => random(1, 10),
            temperatureTimer: () => random(48, 120)
          },
          35: {
            temperature: () => random(-5, 5),
            temperatureTimer: () => random(48, 144)
          },
          15: {
            temperature: () => random(-1, -10),
            temperatureTimer: () => random(48, 120)
          },
          5: {
            temperature: () => 0 - dice(2, 10),
            temperatureTimer: () => random(24, 96)
          },
          0: {
            temperature: () => random(-1, -24),
            temperatureTimer: () => random(24, 48)
          }
        },
        season: {
          summer: {
            precipitationLevel: 4,
            precipitationIntensity: 1,
            baseTemp: 80
          },
          autumn: {
            precipitationLevel: 3,
            precipitationIntensity: 1,
            baseTemp: 60
          },
          winter: {
            precipitationLevel: 2,
            precipitationIntensity: 1,
            baseTemp: 30
          },
          spring: {
            precipitationLevel: 3,
            precipitationIntensity: 1,
            baseTemp: 60
          }
        }
      },
      location: {
        // town.Name is located in the _
        'seashore': {
          preposition: 'on',
          precipitationIntensity: 3,
          // town.Name grew around _
          origin: ['a coastal harbor', 'a calm, coastal bay', 'a large freshwater lake', 'a wide, navigable river', 'a river navigable by small craft', 'the mouth of a river', 'the confluence of two rivers', 'a series of natural springs', 'a well-traveled crossroads', 'a water source and a well-traveled road'],
          // where the vegetation is _
          vegetation: {
            sparse: 1,
            lush: 4,
            thick: 3
          },
          plants: {
            'shrubs': 1,
            'bush': 1,
            'windswept trees': 1
          },
          possibleMaterials: ['hewn rock', 'stone', 'cobblestone', 'wood', 'brick', 'limestone']
        },
        'forest': {
          preposition: 'in',
          precipitationIntensity: 2,
          origin: ['a large freshwater lake', 'a wide, navigable river', 'a river navigable by small craft', 'the mouth of a river', 'a deep freshwater river', 'a river that runs through the forest', 'a series of natural springs', 'a well-traveled crossroads', 'a road that passes through the forests', 'a water source and a well-traveled road leading through the forest'],
          vegetation: {
            sparse: 1,
            lush: 3,
            thick: 6
          },
          plants: {
            'oak trees': 3,
            'pine trees': 1,
            'maple trees': 1,
            'birch trees': 1,
            'ash trees': 1,
            'elm trees': 1,
            'fir trees': 1,
            'spruce trees': 1,
            'sycamore trees': 1,
            'alder trees': 1,
            'cypress trees': 1,
            'yew trees': 1
          },
          possibleMaterials: ['hewn rock', 'stone', 'cobblestone', 'wood', 'brick', 'limestone', 'plaster', 'gypsum', 'adobe', 'daub', 'cob']
        },
        'hills': {
          preposition: 'in',
          precipitationIntensity: 2,
          origin: ['a large freshwater lake', 'a wide, navigable river', 'a river navigable by small craft', 'a road traveled by merchants on the way to another, larger city', 'a well maintained road', 'a road that connects two other cities', 'a well-traveled crossroads', 'a water source and a well-traveled road'],
          vegetation: {
            sparse: 1,
            lush: 3,
            thick: 6
          },
          plants: {
            // TODO: expand out the plants for everything past this point- they're all placeholder text.
            shrubs: 1,
            bush: 1,
            trees: 2
          },
          possibleMaterials: ['hewn rock', 'stone', 'cobblestone', 'wood', 'brick', 'limestone', 'plaster', 'gypsum', 'adobe', 'daub', 'cob']
        },
        'plains': {
          preposition: 'on',
          precipitationIntensity: 2,
          origin: ['a wide, navigable river', 'a road traveled by merchants on the way to another, larger city', 'a well maintained road', 'a road that connects two other cities', 'a well-traveled crossroads', 'a water source and a well-traveled road'],
          vegetation: {
            sparse: 5,
            lush: 1,
            thick: 1
          },
          plants: {
            shrubs: 1,
            bush: 1,
            trees: 2
          },
          possibleMaterials: ['hewn rock', 'stone', 'cobblestone', 'wood', 'brick', 'limestone', 'plaster', 'gypsum', 'adobe', 'daub', 'cob']
        },
        'mountains': {
          preposition: 'in',
          precipitationIntensity: 2,
          origin: ['a large freshwater lake', 'a river navigable by small craft', 'a series of natural springs', 'a road that connects two other cities', 'a road that leads through the mountains', 'a trade route through the mountains', 'a well-traveled crossroads', 'a water source and a well-traveled road'],
          vegetation: {
            sparse: 5,
            lush: 1,
            thick: 1
          },
          plants: {
            shrubs: 1,
            bush: 1,
            trees: 2
          },
          possibleMaterials: ['hewn rock', 'stone', 'cobblestone', 'wood', 'brick', 'limestone', 'plaster', 'gypsum', 'adobe', 'daub', 'cob']
        },
        'river coast': {
          preposition: 'on',
          precipitationIntensity: 2,
          origin: ['a coastal harbor', 'a calm, coastal bay', 'a wide, navigable river', 'a river navigable by small craft'],
          vegetation: {
            sparse: 1,
            lush: 4,
            thick: 3
          },
          plants: {
            shrubs: 1,
            bush: 1,
            trees: 2
          },
          possibleMaterials: ['hewn rock', 'stone', 'cobblestone', 'wood', 'brick', 'limestone', 'plaster', 'gypsum', 'adobe', 'daub', 'cob']
        }
      }
    },
    tropical: {
      start: {
        'seacoast': 1,
        'forest': 1,
        'river coast': 2,
        'jungle': 1,
        'volcanic field': 1,
        'hills': 1,
        'plains': 1,
        'mountains': 1
      },
      weather: {
        tempVariation: {
          85: {
            temperature: () => dice(2, 10),
            temperatureTimer: () => random(24, 48)
          },
          55: {
            temperature: () => random(1, 10),
            temperatureTimer: () => random(48, 120)
          },
          25: {
            temperature: () => 0 - random(-5, 5),
            temperatureTimer: () => random(48, 120)
          },
          10: {
            temperature: () => 0 - random(1, 10),
            temperatureTimer: () => random(24, 48)
          },
          0: {
            temperature: () => 0 - dice(2, 10),
            temperatureTimer: () => random(24, 48)
          }
        },
        season: {
          summer: {
            precipitationLevel: 3,
            precipitationIntensity: 1,
            baseTemp: 90
          },
          autumn: {
            precipitationLevel: 3,
            precipitationIntensity: 1,
            baseTemp: 75
          },
          winter: {
            precipitationLevel: 2,
            precipitationIntensity: 1,
            baseTemp: 50
          },
          spring: {
            precipitationLevel: 4,
            precipitationIntensity: 1,
            baseTemp: 75
          }
        }
      },
      location: {
        'seacoast': {
          preposition: 'on',
          precipitationIntensity: 3,
          origin: ['a coastal harbor', 'a calm, coastal bay', 'a large freshwater lake', 'a wide, navigable river', 'a river navigable by small craft', 'the mouth of a river', 'the confluence of two rivers', 'a series of natural springs', 'a well-traveled crossroads', 'a water source and a well-traveled road'],
          vegetation: {
            sparse: 1,
            lush: 4,
            thick: 3
          },
          plants: {
            shrubs: 1,
            bush: 1,
            trees: 2
          },
          possibleMaterials: ['hewn rock', 'stone', 'cobblestone', 'wood', 'brick', 'limestone', 'adobe', 'daub', 'cob', 'straw', 'terra cotta', 'clay']
        },
        'forest': {
          preposition: 'in',
          precipitationIntensity: 2,
          origin: ['a large freshwater lake', 'a wide, navigable river', 'a river navigable by small craft', 'the mouth of a river', 'a deep freshwater river', 'a river that runs through the forest', 'a series of natural springs', 'a well-traveled crossroads', 'a road that passes through the forests', 'a water source and a well-traveled road leading through the forest'],
          vegetation: {
            sparse: 1,
            lush: 3,
            thick: 6
          },
          plants: {
            shrubs: 1,
            bush: 1,
            trees: 2
          },
          possibleMaterials: ['hewn rock', 'stone', 'cobblestone', 'wood', 'brick', 'limestone', 'plaster', 'gypsum', 'adobe', 'daub', 'cob', 'straw', 'terra cotta', 'clay']
        },
        'hills': {
          preposition: 'in',
          precipitationIntensity: 2,
          origin: ['a large freshwater lake', 'a wide, navigable river', 'a river navigable by small craft', 'a road traveled by merchants on the way to another, larger city', 'a well maintained road', 'a road that connects two other cities', 'a well-traveled crossroads'],
          vegetation: {
            sparse: 1,
            lush: 4,
            thick: 3
          },
          plants: {
            shrubs: 1,
            bush: 1,
            trees: 2
          },
          possibleMaterials: ['hewn rock', 'stone', 'cobblestone', 'wood', 'brick', 'limestone', 'plaster', 'gypsum', 'adobe', 'daub', 'cob', 'straw', 'terra cotta', 'clay']
        },
        'plains': {
          preposition: 'on',
          precipitationIntensity: 2,
          origin: ['a wide, navigable river', 'a road traveled by merchants on the way to another, larger city', 'a well maintained road', 'a road that connects two other cities', 'a well-traveled crossroads', 'a water source and a well-traveled road'],
          vegetation: {
            sparse: 5,
            lush: 1,
            thick: 1
          },
          plants: {
            shrubs: 1,
            bush: 1,
            trees: 2
          },
          possibleMaterials: ['hewn rock', 'stone', 'cobblestone', 'wood', 'brick', 'limestone', 'plaster', 'gypsum', 'adobe', 'daub', 'cob', 'straw', 'terra cotta', 'clay']
        },
        'mountains': {
          preposition: 'in',
          precipitationIntensity: 2,
          origin: ['a large freshwater lake', 'a river navigable by small craft', 'a series of natural springs', 'a road that connects two other cities', 'a road that leads through the mountains', 'a trade route through the mountains', 'a well-traveled crossroads', 'a water source and a well-traveled road'],
          vegetation: {
            sparse: 5,
            lush: 1,
            thick: 1
          },
          plants: {
            shrubs: 1,
            bush: 1,
            trees: 2
          },
          possibleMaterials: ['hewn rock', 'stone', 'cobblestone', 'wood', 'brick', 'limestone', 'plaster', 'gypsum', 'adobe', 'daub', 'cob', 'straw', 'terra cotta', 'clay']
        },
        'river coast': {
          preposition: 'on',
          precipitationIntensity: 2,
          origin: ['a coastal harbor', 'a calm, coastal bay', 'a wide, navigable river', 'a river navigable by small craft'],
          vegetation: {
            sparse: 1,
            lush: 4,
            thick: 3
          },
          plants: {
            shrubs: 1,
            bush: 1,
            trees: 2
          },
          possibleMaterials: ['hewn rock', 'stone', 'cobblestone', 'wood', 'brick', 'limestone', 'plaster', 'gypsum', 'adobe', 'daub', 'cob', 'straw', 'terra cotta', 'clay']
        },
        'jungle': {
          preposition: 'in',
          precipitationIntensity: 2,
          origin: ['a river navigable by small craft', 'a series of natural springs', 'a road that connects two other cities', 'a road that leads through the jungle', 'a trade route through the jungle', 'a water source and a well-traveled road that leads through the jungle'],
          vegetation: {
            sparse: 1,
            lush: 1,
            thick: 9
          },
          plants: {
            shrubs: 1,
            bush: 1,
            trees: 2
          },
          possibleMaterials: ['hewn rock', 'stone', 'cobblestone', 'wood', 'brick', 'limestone', 'plaster', 'gypsum', 'adobe', 'daub', 'cob', 'straw', 'terra cotta', 'clay']
        },
        'volcanic field': {
          preposition: 'on',
          precipitationIntensity: 3,
          origin: ['a large freshwater lake', 'a wide, navigable river', 'a river navigable by small craft', 'the mouth of a river', 'a series of natural springs', 'a series of natural springs', 'a series of natural springs', 'a water source and a well-traveled road'],
          // vegetation: ['desolate', 'desolate', 'desolate', 'desolate', 'desolate', 'desolate', 'desolate', 'sparse', 'sparse', 'sparse', 'lush'],
          vegetation: {
            desolate: 7,
            sparse: 3,
            lush: 1
          },
          plants: {
            shrubs: 1,
            bush: 1,
            trees: 2
          },
          possibleMaterials: ['hewn rock', 'stone', 'cobblestone', 'wood', 'cobblestone', 'brick', 'limestone', 'plaster', 'gypsum', 'adobe', 'daub', 'cob', 'straw', 'terra cotta', 'clay']
        }
      }
    },
    arid: {
      start: {
        'oasis': 2,
        'river coast': 2,
        'desert': 1,
        'wastelant': 1,
        'hills': 1,
        'plains': 1,
        'mountains': 1
      },
      weather: {
        tempVariation: {
          95: {
            temperature: () => dice(3, 10),
            temperatureTimer: () => random(24, 48)
          },
          85: {
            temperature: () => dice(2, 10),
            temperatureTimer: () => random(24, 96)
          },
          65: {
            temperature: () => random(1, 10),
            temperatureTimer: () => random(48, 120)
          },
          35: {
            temperature: () => 0 - random(-5, 5),
            temperatureTimer: () => random(48, 144)
          },
          15: {
            temperature: () => 0 - random(1, 4),
            temperatureTimer: () => random(48, 120)
          },
          5: {
            temperature: () => 0 - dice(1, 10),
            temperatureTimer: () => random(24, 96)
          },
          0: {
            temperature: () => 0 - dice(2, 6),
            temperatureTimer: () => random(24, 48)
          }
        },
        season: {
          summer: {
            precipitationLevel: 3,
            precipitationIntensity: -1,
            baseTemp: 95
          },
          autumn: {
            precipitationLevel: 3,
            precipitationIntensity: -1,
            baseTemp: 75
          },
          winter: {
            precipitationLevel: 2,
            precipitationIntensity: -1,
            baseTemp: 50
          },
          spring: {
            precipitationLevel: 2,
            precipitationIntensity: -1,
            baseTemp: 75
          }
        }
      },
      location: {
        'desert': {
          preposition: 'in',
          precipitationIntensity: 2,
          origin: ['a coastal harbor', 'a calm, coastal bay', 'a large freshwater lake', 'a wide, navigable river', 'a river navigable by small craft', 'the mouth of a river', 'the confluence of two rivers', 'a series of natural springs', 'a well-traveled crossroads', 'a water source and a well-traveled road'],
          vegetation: {
            desolate: 5,
            sparse: 4
          },
          plants: {
            shrubs: 1,
            bush: 1,
            trees: 2
          },
          possibleMaterials: ['hewn rock', 'stone', 'cobblestone', 'brick', 'limestone', 'plaster', 'gypsum', 'adobe', 'daub', 'cob', 'straw']
        },
        'forest': {
          preposition: 'in',
          precipitationIntensity: 2,
          origin: ['a large freshwater lake', 'a wide, navigable river', 'a river navigable by small craft', 'the mouth of a river', 'a deep freshwater river', 'a river that runs through the forest', 'a series of natural springs', 'a well-traveled crossroads', 'a road that passes through the forests', 'a water source and a well-traveled road leading through the forest'],
          vegetation: {
            desolate: 2,
            sparse: 1,
            lush: 2,
            thick: 6
          },
          plants: {
            shrubs: 1,
            bush: 1,
            trees: 2
          },
          possibleMaterials: ['hewn rock', 'stone', 'cobblestone', 'wood', 'brick', 'limestone', 'plaster', 'gypsum', 'adobe', 'daub', 'cob', 'straw', 'terra cotta', 'clay']
        },
        'hills': {
          preposition: 'in',
          precipitationIntensity: 2,
          origin: ['a large freshwater lake', 'a wide, navigable river', 'a river navigable by small craft', 'a road traveled by merchants on the way to another, larger city', 'a well maintained road', 'a road that connects two other cities', 'a well-traveled crossroads', 'a water source and a well-traveled road'],
          vegetation: {
            desolate: 5,
            sparse: 5,
            lush: 1,
            thick: 1
          },
          plants: {
            shrubs: 1,
            bush: 1,
            trees: 2
          },
          possibleMaterials: ['hewn rock', 'stone', 'cobblestone', 'wood', 'brick', 'limestone', 'plaster', 'gypsum', 'adobe', 'daub', 'cob', 'straw', 'terra cotta', 'clay']
        },
        'plains': {
          preposition: 'on',
          precipitationIntensity: 2,
          origin: ['a wide, navigable river', 'a road traveled by merchants on the way to another, larger city', 'a well maintained road', 'a road that connects two other cities', 'a well-traveled crossroads', 'a water source and a well-traveled road'],
          vegetation: {
            desolate: 3,
            sparse: 5
          },
          plants: {
            shrubs: 1,
            bush: 1,
            trees: 2
          },
          possibleMaterials: ['hewn rock', 'stone', 'cobblestone', 'wood', 'brick', 'limestone', 'plaster', 'gypsum', 'adobe', 'daub', 'cob', 'straw', 'terra cotta', 'clay']
        },
        'mountains': {
          preposition: 'in',
          precipitationIntensity: 2,
          origin: ['a large freshwater lake', 'a river navigable by small craft', 'a series of natural springs', 'a road that connects two other cities', 'a road that leads through the mountains', 'a trade route through the mountains', 'a well-traveled crossroads', 'a water source and a well-traveled road'],
          vegetation: {
            desolate: 5,
            sparse: 5,
            lush: 1
          },
          plants: {
            shrubs: 1,
            bush: 1,
            trees: 2
          },
          possibleMaterials: ['hewn rock', 'stone', 'cobblestone', 'wood', 'brick', 'limestone', 'plaster', 'gypsum', 'adobe', 'daub', 'cob', 'straw', 'terra cotta', 'clay']
        },
        'river coast': {
          preposition: 'on',
          precipitationIntensity: 2,
          origin: ['a coastal harbor', 'a calm, coastal bay', 'a wide, navigable river', 'a river navigable by small craft'],
          vegetation: {
            desolate: 3,
            sparse: 1,
            lush: 4,
            thick: 3
          },
          plants: {
            shrubs: 1,
            bush: 1,
            trees: 2
          },
          possibleMaterials: ['hewn rock', 'stone', 'cobblestone', 'wood', 'brick', 'limestone', 'plaster', 'gypsum', 'adobe', 'daub', 'cob', 'straw', 'terra cotta', 'clay']
        },
        'wasteland': {
          preposition: 'in',
          precipitationIntensity: 2,
          origin: ['a road traveled by merchants on the way to another, larger city', 'a well maintained road', 'a road that connects two other cities', 'a well-traveled crossroads', 'a water source and a well-traveled road'],
          vegetation: {
            desolate: 7,
            sparse: 3,
            lush: 1
          },
          plants: {
            shrubs: 1,
            bush: 1,
            trees: 2
          },
          possibleMaterials: ['hewn rock', 'stone', 'cobblestone', 'wood', 'brick', 'limestone', 'plaster', 'gypsum', 'adobe', 'daub', 'cob']
        },
        'oasis': {
          preposition: 'in',
          precipitationIntensity: 1,
          origin: ['a series of natural springs', 'a series of natural springs', 'a large oasis of water', 'a large oasis of water', 'a large oasis of water', 'a large oasis of water', 'a water source and a well-traveled road'],
          vegetation: {
            sparse: 1,
            lush: 4,
            thick: 3
          },
          plants: {
            shrubs: 1,
            bush: 1,
            trees: 2
          },
          possibleMaterials: ['hewn rock', 'stone', 'cobblestone', 'wood', 'brick', 'limestone', 'plaster', 'gypsum', 'adobe', 'daub', 'cob', 'straw', 'terra cotta', 'clay']
        }
      }
    },
    polar: {
      start: {
        'seacoast': 2,
        'forest': 2,
        'river coast': 1,
        'hills': 1,
        'plains': 1,
        'mountains': 1,
        'tundra': 1,
        'ice sheet': 1
      },
      weather: {
        tempVariation: {
          100: {
            temperature: () => dice(3, 10),
            temperatureTimer: () => random(24, 48)
          },
          95: {
            temperature: () => dice(2, 10),
            temperatureTimer: () => random(24, 96)
          },
          80: {
            temperature: () => random(1, 10),
            temperatureTimer: () => random(48, 120)
          },
          60: {
            temperature: () => random(-5, 5),
            temperatureTimer: () => random(48, 144)
          },
          40: {
            temperature: () => random(0, -10),
            temperatureTimer: () => random(48, 120)
          },
          20: {
            temperature: () => random(-2, -20),
            temperatureTimer: () => random(24, 96)
          },
          0: {
            temperature: () => random(-3, -30),
            temperatureTimer: () => random(24, 48)
          }
        },
        season: {
          summer: {
            precipitationLevel: 4,
            precipitationIntensity: 1,
            baseTemp: 40
          },
          autumn: {
            precipitationLevel: 4,
            precipitationIntensity: 1,
            baseTemp: 30
          },
          winter: {
            precipitationLevel: 2,
            precipitationIntensity: 1,
            baseTemp: 20
          },
          spring: {
            precipitationLevel: 3,
            precipitationIntensity: 1,
            baseTemp: 30
          }
        }
      },
      location: {
        'seacoast': {
          preposition: 'on',
          precipitationIntensity: 3,
          origin: ['a coastal harbor', 'a calm, coastal bay', 'a large freshwater lake', 'a wide, navigable river', 'a river navigable by small craft', 'the mouth of a river', 'the confluence of two rivers', 'a series of natural springs', 'a well-traveled crossroads', 'a water source and a well-traveled road'],
          vegetation: {
            desolate: 3,
            sparse: 1,
            lush: 4,
            thick: 3
          },
          plants: {
            shrubs: 1,
            bush: 1,
            trees: 2
          },
          possibleMaterials: ['hewn rock', 'stone', 'cobblestone', 'wood', 'brick', 'limestone']
        },
        'forest': {
          preposition: 'in',
          precipitationIntensity: 2,
          origin: ['a large freshwater lake', 'a wide, navigable river', 'a river navigable by small craft', 'the mouth of a river', 'a deep freshwater river', 'a river that runs through the forest', 'a series of natural springs', 'a well-traveled crossroads', 'a road that passes through the forests', 'a water source and a well-traveled road leading through the forest'],
          vegetation: {
            desolate: 2,
            sparse: 1,
            lush: 3,
            thick: 6
          },
          plants: {
            shrubs: 1,
            bush: 1,
            trees: 2
          },
          possibleMaterials: ['hewn rock', 'stone', 'cobblestone', 'wood', 'brick', 'limestone']
        },
        'hills': {
          preposition: 'in',
          precipitationIntensity: 2,
          origin: ['a large freshwater lake', 'a wide, navigable river', 'a river navigable by small craft', 'a road traveled by merchants on the way to another, larger city', 'a well maintained road', 'a road that connects two other cities', 'a well-traveled crossroads', 'a water source and a well-traveled road'],
          vegetation: {
            desolate: 4,
            sparse: 1,
            lush: 4,
            thick: 3
          },
          plants: {
            shrubs: 1,
            bush: 1,
            trees: 2
          },
          possibleMaterials: ['hewn rock', 'stone', 'cobblestone', 'wood', 'brick', 'limestone']
        },
        'plains': {
          preposition: 'on',
          precipitationIntensity: 2,
          origin: ['a wide, navigable river', 'a road traveled by merchants on the way to another, larger city', 'a well maintained road', 'a road that connects two other cities', 'a well-traveled crossroads', 'a water source and a well-traveled road'],
          vegetation: {
            desolate: 5,
            sparse: 5,
            lush: 1,
            thick: 1
          },
          plants: {
            shrubs: 1,
            bush: 1,
            trees: 2
          },
          possibleMaterials: ['hewn rock', 'stone', 'cobblestone', 'wood', 'brick', 'limestone']
        },
        'mountains': {
          preposition: 'in',
          precipitationIntensity: 2,
          origin: ['a large freshwater lake', 'a river navigable by small craft', 'a series of natural springs', 'a road that connects two other cities', 'a road that leads through the mountains', 'a trade route through the mountains', 'a well-traveled crossroads', 'a water source and a well-traveled road'],
          vegetation: {
            desolate: 5,
            sparse: 5,
            lush: 1,
            thick: 1
          },
          plants: {
            shrubs: 1,
            bush: 1,
            trees: 2
          },
          possibleMaterials: ['hewn rock', 'stone', 'cobblestone', 'wood', 'brick', 'limestone']
        },
        'river coast': {
          preposition: 'on',
          precipitationIntensity: 2,
          origin: ['a coastal harbor', 'a calm, coastal bay', 'a wide, navigable river', 'a river navigable by small craft'],
          vegetation: {
            desolate: 3,
            sparse: 1,
            lush: 4,
            thick: 3
          },
          plants: {
            shrubs: 1,
            bush: 1,
            trees: 2
          },
          possibleMaterials: ['hewn rock', 'stone', 'cobblestone', 'wood', 'brick', 'limestone']
        },
        'tundra': {
          preposition: 'on',
          precipitationIntensity: 2,
          origin: ['a wide, navigable river', 'a road traveled by merchants on the way to another, larger city', 'a well maintained road', 'a road that connects two other cities', 'a well-traveled crossroads', 'a water source and a well-traveled road'],
          vegetation: {
            desolate: 7,
            sparse: 3,
            lush: 1
          },
          plants: {
            shrubs: 1,
            bush: 1,
            trees: 2
          },
          possibleMaterials: ['hewn rock', 'stone', 'cobblestone', 'wood', 'brick', 'limestone']
        },
        'ice sheet': {
          preposition: 'on',
          precipitationIntensity: 3,
          origin: ['a wide, navigable river', 'a road traveled by merchants on the way to another, larger city', 'a well maintained road', 'a road that connects two other cities', 'a well-traveled crossroads', 'a water source and a well-traveled road'],
          vegetation: {
            desolate: 7,
            sparse: 3,
            lush: 1
          },
          plants: {
            shrubs: 1,
            bush: 1,
            trees: 2
          },
          possibleMaterials: ['hewn rock', 'stone', 'cobblestone', 'wood', 'brick', 'limestone']
        }
      }
    }
  }; // return terrain
  // }
  // export const terrain = makeTerrain()
  // eslint-disable-next-line @typescript-eslint/no-explicit-any

  const treasureMap = {
    create: base => {
      const map = {
        one: random(data.one()),
        two: random(data.two()),
        three: random(data.three()),
        four: random(data.four()),
        five: random(data.five()),
        six: random(data.six()),
        seven: random(data.seven()),
        ...base
      };
      assign(map, {
        readout: `${random(['Find the', 'Start at the'])} ${map.one} Then, ${map.two} until you find the ${map.three} Then, ${map.four} until you reach ${map.five} Then, ${map.six} You will find the treasure ${map.seven}`
      });
      assign(map, {
        tippy: createTippy(map.readout)
      });
      assign(map, {
        tippyWord: createTippyWord(map.tippy, 'map')
      });
      return map;
    }
  };
  const data = {
    one: () => ['big cracked boulder.', 'lightning-blasted oak tree.', 'rock shaped like a horse.', 'stone wall with a piece of volcanic glass .', 'exact center of the village/town/city.', 'statue of a famous person.', 'shipwreck of an infamous pirate ship.', 'bones of the black dragon.', 'cavern near the waterfall.', 'top of the volcano.', 'exact center of the lake.', 'abandoned temple.', 'old fort.', 'old standing circle.', 'road marker leading south.', 'exact center of the longest bridge.', "hangman's scaffold.", "king's/queens throne room.", 'crossroads.', 'largest tomb in the cemetery.', 'last waterfall on the great river', 'big well', 'yellow barn outside of town'],
    two: () => [`go north for ${random(1, 4)} miles`, `go south for ${random(1, 4)} miles`, `go east for ${random(1, 4)} miles`, `go west for ${random(1, 4)} miles`, `go northeast for ${random(1, 4)} miles`, `go northwest for ${random(1, 4)} miles`, `go southeast for ${random(1, 4)} miles`, `go southwest for ${random(1, 4)} miles`],
    three: () => ['mountain shaped like a tooth.', 'hill shaped like a saddle.', 'cliffs of red stone.', 'tiny caves in a white hill.', 'old fortress ruins.', 'dried up creekbed.', 'swift-running river.', 'waterfall.', 'abandoned village.', 'tree with a large hole in it.', 'toppled statue of a deity.', 'landslide of shale and gravel.', 'steep-sided valley with blue flowers.', 'beach strewn with black seashells.', 'broken remains of a watchtower.', 'road marker pointing east.', "dilapidated hunter's shack.", 'crossroads.', 'hand-cut stairway into the hillside.', 'the canyon with natural stairs leading down.', 'white tree.', 'exposed dragon skull.', 'stone island in the center of a small lake.'],
    four: () => [`go north for ${random(1, 4)} miles`, `go south for ${random(1, 4)} miles`, `go east for ${random(1, 4)} miles`, `go west for ${random(1, 4)} miles`, `go northeast for ${random(1, 4)} miles`, `go northwest for ${random(1, 4)} miles`, `go southeast for ${random(1, 4)} miles`, `go southwest for ${random(1, 4)} miles`],
    five: () => ['rock shaped like a heart.', "mountain shaped like a bird's head.", 'petrified forest.', 'salt lake.', 'dried up swampland.', 'broken bridge.', 'old abandoned mill.', 'the ruined tower of a famous mage.', 'the ancient cemetery.', 'the mossy limestone cliffs.', 'the old granite quarry.', 'the abandoned campgrounds.', 'the vandalized statue of a former ruler.', 'the crossroads.', 'the road marker pointing west.', 'shipwreck of a well-known war ship.', 'minaret.', 'quicksand.', 'hills honeycombed with caves.', "old king's forest.", 'edge of the great desert.', 'great pine tree.', 'boulder split in two.', 'enormous sacrificial altar.', 'unholy temple to a forgotten god.', 'eternally burning campfire.'],
    six: () => [`go north for ${random(1, 4)} miles.`, `go south for ${random(1, 4)} miles.`, `go east for ${random(1, 4)} miles.`, `go west for ${random(1, 4)} miles.`, `go northeast for ${random(1, 4)} miles.`, `go northwest for ${random(1, 4)} miles.`, `go southeast for ${random(1, 4)} miles.`, `go southwest for ${random(1, 4)} miles.`],
    seven: () => ['buried at the foot of a cliff.', 'buried under a mighty oak tree.', 'buried under some tower ruins.', 'buried under a pile of skulls.', 'buried in the grave of a famous person.', 'hidden at the top of an old tower.', 'hidden behind an old painting.', "hidden at the bottom of an old rabbit's warren.", 'hidden in the bole of an ancient elm tree.', "hidden in a shipwreck's hold.", 'guarded by assassins.', 'guarded by monsters.', 'guarded by soldiers.', 'guarded by spirits.', 'guarded by a big monster.', 'protected by magical wards.', 'protected by astral locks.', 'protected by physical traps.', 'protected by necromantic curses.', 'protected by spiritual prayers.', 'protected by a terrible riddle.', 'locked behind a holy ward.', 'buried in an old latrine.', "mixed into a dragon's horde.", 'hidden at the bottom of the chasm.', 'locked behind arcane spells.', 'stuck at the top of a great elm tree.', 'buried in an iron chest.', 'in a wooden chest in the basement of the cabin.', 'stuffed in the crack between two boulders.', 'buried at the end of the black alleyway.']
  };

  var adjectives = [
  	"able",
  	"absolute",
  	"academic",
  	"acceptable",
  	"acclaimed",
  	"accomplished",
  	"accurate",
  	"aching",
  	"acidic",
  	"acrobatic",
  	"adorable",
  	"adventurous",
  	"babyish",
  	"back",
  	"bad",
  	"baggy",
  	"bare",
  	"barren",
  	"basic",
  	"beautiful",
  	"belated",
  	"beloved",
  	"calculating",
  	"calm",
  	"candid",
  	"canine",
  	"capital",
  	"carefree",
  	"careful",
  	"careless",
  	"caring",
  	"cautious",
  	"cavernous",
  	"celebrated",
  	"charming",
  	"damaged",
  	"damp",
  	"dangerous",
  	"dapper",
  	"daring",
  	"dark",
  	"darling",
  	"dazzling",
  	"dead",
  	"deadly",
  	"deafening",
  	"dear",
  	"dearest",
  	"each",
  	"eager",
  	"early",
  	"earnest",
  	"easy",
  	"easygoing",
  	"ecstatic",
  	"edible",
  	"educated",
  	"fabulous",
  	"failing",
  	"faint",
  	"fair",
  	"faithful",
  	"fake",
  	"familiar",
  	"famous",
  	"fancy",
  	"fantastic",
  	"far",
  	"faraway",
  	"farflung",
  	"faroff",
  	"gargantuan",
  	"gaseous",
  	"general",
  	"generous",
  	"gentle",
  	"genuine",
  	"giant",
  	"giddy",
  	"gigantic",
  	"hairy",
  	"half",
  	"handmade",
  	"handsome",
  	"handy",
  	"happy",
  	"happygolucky",
  	"hard",
  	"icky",
  	"icy",
  	"ideal",
  	"idealistic",
  	"identical",
  	"idiotic",
  	"idle",
  	"idolized",
  	"ignorant",
  	"ill",
  	"illegal",
  	"jaded",
  	"jagged",
  	"jampacked",
  	"kaleidoscopic",
  	"keen",
  	"lame",
  	"lanky",
  	"large",
  	"last",
  	"lasting",
  	"late",
  	"lavish",
  	"lawful",
  	"mad",
  	"madeup",
  	"magnificent",
  	"majestic",
  	"major",
  	"male",
  	"mammoth",
  	"married",
  	"marvelous",
  	"naive",
  	"narrow",
  	"nasty",
  	"natural",
  	"naughty",
  	"obedient",
  	"obese",
  	"oblong",
  	"oblong",
  	"obvious",
  	"occasional",
  	"oily",
  	"palatable",
  	"pale",
  	"paltry",
  	"parallel",
  	"parched",
  	"partial",
  	"passionate",
  	"past",
  	"pastel",
  	"peaceful",
  	"peppery",
  	"perfect",
  	"perfumed",
  	"quaint",
  	"qualified",
  	"radiant",
  	"ragged",
  	"rapid",
  	"rare",
  	"rash",
  	"raw",
  	"recent",
  	"reckless",
  	"rectangular",
  	"sad",
  	"safe",
  	"salty",
  	"same",
  	"sandy",
  	"sane",
  	"sarcastic",
  	"sardonic",
  	"satisfied",
  	"scaly",
  	"scarce",
  	"scared",
  	"scary",
  	"scented",
  	"scholarly",
  	"scientific",
  	"scornful",
  	"scratchy",
  	"scrawny",
  	"second",
  	"secondary",
  	"secondhand",
  	"secret",
  	"selfassured",
  	"selfish",
  	"selfreliant",
  	"sentimental",
  	"talkative",
  	"tall",
  	"tame",
  	"tan",
  	"tangible",
  	"tart",
  	"tasty",
  	"tattered",
  	"taut",
  	"tedious",
  	"teeming",
  	"ugly",
  	"ultimate",
  	"unacceptable",
  	"unaware",
  	"uncomfortable",
  	"uncommon",
  	"unconscious",
  	"understated",
  	"unequaled",
  	"vacant",
  	"vague",
  	"vain",
  	"valid",
  	"wan",
  	"warlike",
  	"warm",
  	"warmhearted",
  	"warped",
  	"wary",
  	"wasteful",
  	"watchful",
  	"waterlogged",
  	"watery",
  	"wavy",
  	"yawning",
  	"yearly",
  	"zany",
  	"FALSE",
  	"active",
  	"actual",
  	"adept",
  	"admirable",
  	"admired",
  	"adolescent",
  	"adorable",
  	"adored",
  	"advanced",
  	"affectionate",
  	"afraid",
  	"aged",
  	"aggravating",
  	"beneficial",
  	"best",
  	"better",
  	"bewitched",
  	"big",
  	"bighearted",
  	"biodegradable",
  	"bitesized",
  	"bitter",
  	"black",
  	"cheap",
  	"cheerful",
  	"cheery",
  	"chief",
  	"chilly",
  	"chubby",
  	"circular",
  	"classic",
  	"clean",
  	"clear",
  	"clearcut",
  	"clever",
  	"close",
  	"closed",
  	"decent",
  	"decimal",
  	"decisive",
  	"deep",
  	"defenseless",
  	"defensive",
  	"defiant",
  	"deficient",
  	"definite",
  	"definitive",
  	"delayed",
  	"delectable",
  	"delicious",
  	"elaborate",
  	"elastic",
  	"elated",
  	"elderly",
  	"electric",
  	"elegant",
  	"elementary",
  	"elliptical",
  	"embarrassed",
  	"fast",
  	"fat",
  	"fatal",
  	"fatherly",
  	"favorable",
  	"favorite",
  	"fearful",
  	"fearless",
  	"feisty",
  	"feline",
  	"female",
  	"feminine",
  	"few",
  	"fickle",
  	"gifted",
  	"giving",
  	"glamorous",
  	"glaring",
  	"glass",
  	"gleaming",
  	"gleeful",
  	"glistening",
  	"glittering",
  	"hardtofind",
  	"harmful",
  	"harmless",
  	"harmonious",
  	"harsh",
  	"hasty",
  	"hateful",
  	"haunting",
  	"illfated",
  	"illinformed",
  	"illiterate",
  	"illustrious",
  	"imaginary",
  	"imaginative",
  	"immaculate",
  	"immaterial",
  	"immediate",
  	"immense",
  	"impassioned",
  	"jaunty",
  	"jealous",
  	"jittery",
  	"key",
  	"kind",
  	"lazy",
  	"leading",
  	"leafy",
  	"lean",
  	"left",
  	"legal",
  	"legitimate",
  	"light",
  	"masculine",
  	"massive",
  	"mature",
  	"meager",
  	"mealy",
  	"mean",
  	"measly",
  	"meaty",
  	"medical",
  	"mediocre",
  	"nautical",
  	"near",
  	"neat",
  	"necessary",
  	"needy",
  	"odd",
  	"oddball",
  	"offbeat",
  	"offensive",
  	"official",
  	"old",
  	"periodic",
  	"perky",
  	"personal",
  	"pertinent",
  	"pesky",
  	"pessimistic",
  	"petty",
  	"phony",
  	"physical",
  	"piercing",
  	"pink",
  	"pitiful",
  	"plain",
  	"quarrelsome",
  	"quarterly",
  	"ready",
  	"real",
  	"realistic",
  	"reasonable",
  	"red",
  	"reflecting",
  	"regal",
  	"regular",
  	"separate",
  	"serene",
  	"serious",
  	"serpentine",
  	"several",
  	"severe",
  	"shabby",
  	"shadowy",
  	"shady",
  	"shallow",
  	"shameful",
  	"shameless",
  	"sharp",
  	"shimmering",
  	"shiny",
  	"shocked",
  	"shocking",
  	"shoddy",
  	"short",
  	"shortterm",
  	"showy",
  	"shrill",
  	"shy",
  	"sick",
  	"silent",
  	"silky",
  	"tempting",
  	"tender",
  	"tense",
  	"tepid",
  	"terrible",
  	"terrific",
  	"testy",
  	"thankful",
  	"that",
  	"these",
  	"uneven",
  	"unfinished",
  	"unfit",
  	"unfolded",
  	"unfortunate",
  	"unhappy",
  	"unhealthy",
  	"uniform",
  	"unimportant",
  	"unique",
  	"valuable",
  	"vapid",
  	"variable",
  	"vast",
  	"velvety",
  	"weak",
  	"wealthy",
  	"weary",
  	"webbed",
  	"wee",
  	"weekly",
  	"weepy",
  	"weighty",
  	"weird",
  	"welcome",
  	"welldocumented",
  	"yellow",
  	"zealous",
  	"aggressive",
  	"agile",
  	"agitated",
  	"agonizing",
  	"agreeable",
  	"ajar",
  	"alarmed",
  	"alarming",
  	"alert",
  	"alienated",
  	"alive",
  	"all",
  	"altruistic",
  	"blackandwhite",
  	"bland",
  	"blank",
  	"blaring",
  	"bleak",
  	"blind",
  	"blissful",
  	"blond",
  	"blue",
  	"blushing",
  	"cloudy",
  	"clueless",
  	"clumsy",
  	"cluttered",
  	"coarse",
  	"cold",
  	"colorful",
  	"colorless",
  	"colossal",
  	"comfortable",
  	"common",
  	"compassionate",
  	"competent",
  	"complete",
  	"delightful",
  	"delirious",
  	"demanding",
  	"dense",
  	"dental",
  	"dependable",
  	"dependent",
  	"descriptive",
  	"deserted",
  	"detailed",
  	"determined",
  	"devoted",
  	"different",
  	"embellished",
  	"eminent",
  	"emotional",
  	"empty",
  	"enchanted",
  	"enchanting",
  	"energetic",
  	"enlightened",
  	"enormous",
  	"filthy",
  	"fine",
  	"finished",
  	"firm",
  	"first",
  	"firsthand",
  	"fitting",
  	"fixed",
  	"flaky",
  	"flamboyant",
  	"flashy",
  	"flat",
  	"flawed",
  	"flawless",
  	"flickering",
  	"gloomy",
  	"glorious",
  	"glossy",
  	"glum",
  	"golden",
  	"good",
  	"goodnatured",
  	"gorgeous",
  	"graceful",
  	"healthy",
  	"heartfelt",
  	"hearty",
  	"heavenly",
  	"heavy",
  	"hefty",
  	"helpful",
  	"helpless",
  	"impartial",
  	"impeccable",
  	"imperfect",
  	"imperturbable",
  	"impish",
  	"impolite",
  	"important",
  	"impossible",
  	"impractical",
  	"impressionable",
  	"impressive",
  	"improbable",
  	"joint",
  	"jolly",
  	"jovial",
  	"kindhearted",
  	"kindly",
  	"lighthearted",
  	"likable",
  	"likely",
  	"limited",
  	"limp",
  	"limping",
  	"linear",
  	"lined",
  	"liquid",
  	"medium",
  	"meek",
  	"mellow",
  	"melodic",
  	"memorable",
  	"menacing",
  	"merry",
  	"messy",
  	"metallic",
  	"mild",
  	"negative",
  	"neglected",
  	"negligible",
  	"neighboring",
  	"nervous",
  	"new",
  	"oldfashioned",
  	"only",
  	"open",
  	"optimal",
  	"optimistic",
  	"opulent",
  	"plaintive",
  	"plastic",
  	"playful",
  	"pleasant",
  	"pleased",
  	"pleasing",
  	"plump",
  	"plush",
  	"pointed",
  	"pointless",
  	"poised",
  	"polished",
  	"polite",
  	"political",
  	"queasy",
  	"querulous",
  	"reliable",
  	"relieved",
  	"remarkable",
  	"remorseful",
  	"remote",
  	"repentant",
  	"required",
  	"respectful",
  	"responsible",
  	"silly",
  	"silver",
  	"similar",
  	"simple",
  	"simplistic",
  	"sinful",
  	"single",
  	"sizzling",
  	"skeletal",
  	"skinny",
  	"sleepy",
  	"slight",
  	"slim",
  	"slimy",
  	"slippery",
  	"slow",
  	"slushy",
  	"small",
  	"smart",
  	"smoggy",
  	"smooth",
  	"smug",
  	"snappy",
  	"snarling",
  	"sneaky",
  	"sniveling",
  	"snoopy",
  	"thick",
  	"thin",
  	"third",
  	"thirsty",
  	"this",
  	"thorny",
  	"thorough",
  	"those",
  	"thoughtful",
  	"threadbare",
  	"united",
  	"unkempt",
  	"unknown",
  	"unlawful",
  	"unlined",
  	"unlucky",
  	"unnatural",
  	"unpleasant",
  	"unrealistic",
  	"venerated",
  	"vengeful",
  	"verifiable",
  	"vibrant",
  	"vicious",
  	"wellgroomed",
  	"wellinformed",
  	"welllit",
  	"wellmade",
  	"welloff",
  	"welltodo",
  	"wellworn",
  	"wet",
  	"which",
  	"whimsical",
  	"whirlwind",
  	"whispered",
  	"yellowish",
  	"zesty",
  	"amazing",
  	"ambitious",
  	"ample",
  	"amused",
  	"amusing",
  	"anchored",
  	"ancient",
  	"angelic",
  	"angry",
  	"anguished",
  	"animated",
  	"annual",
  	"another",
  	"antique",
  	"bogus",
  	"boiling",
  	"bold",
  	"bony",
  	"boring",
  	"bossy",
  	"both",
  	"bouncy",
  	"bountiful",
  	"bowed",
  	"complex",
  	"complicated",
  	"composed",
  	"concerned",
  	"concrete",
  	"confused",
  	"conscious",
  	"considerate",
  	"constant",
  	"content",
  	"conventional",
  	"cooked",
  	"cool",
  	"cooperative",
  	"difficult",
  	"digital",
  	"diligent",
  	"dim",
  	"dimpled",
  	"dimwitted",
  	"direct",
  	"disastrous",
  	"discrete",
  	"disfigured",
  	"disgusting",
  	"disloyal",
  	"dismal",
  	"enraged",
  	"entire",
  	"envious",
  	"equal",
  	"equatorial",
  	"essential",
  	"esteemed",
  	"ethical",
  	"euphoric",
  	"flimsy",
  	"flippant",
  	"flowery",
  	"fluffy",
  	"fluid",
  	"flustered",
  	"focused",
  	"fond",
  	"foolhardy",
  	"foolish",
  	"forceful",
  	"forked",
  	"formal",
  	"forsaken",
  	"gracious",
  	"grand",
  	"grandiose",
  	"granular",
  	"grateful",
  	"grave",
  	"gray",
  	"great",
  	"greedy",
  	"green",
  	"hidden",
  	"hideous",
  	"high",
  	"highlevel",
  	"hilarious",
  	"hoarse",
  	"hollow",
  	"homely",
  	"impure",
  	"inborn",
  	"incomparable",
  	"incompatible",
  	"incomplete",
  	"inconsequential",
  	"incredible",
  	"indelible",
  	"indolent",
  	"inexperienced",
  	"infamous",
  	"infantile",
  	"joyful",
  	"joyous",
  	"jubilant",
  	"klutzy",
  	"knobby",
  	"little",
  	"live",
  	"lively",
  	"livid",
  	"loathsome",
  	"lone",
  	"lonely",
  	"long",
  	"milky",
  	"mindless",
  	"miniature",
  	"minor",
  	"minty",
  	"miserable",
  	"miserly",
  	"misguided",
  	"misty",
  	"mixed",
  	"next",
  	"nice",
  	"nifty",
  	"nimble",
  	"nippy",
  	"orange",
  	"orderly",
  	"ordinary",
  	"organic",
  	"ornate",
  	"ornery",
  	"poor",
  	"popular",
  	"portly",
  	"posh",
  	"positive",
  	"possible",
  	"potable",
  	"powerful",
  	"powerless",
  	"practical",
  	"precious",
  	"present",
  	"prestigious",
  	"questionable",
  	"quick",
  	"repulsive",
  	"revolving",
  	"rewarding",
  	"rich",
  	"right",
  	"rigid",
  	"ringed",
  	"ripe",
  	"sociable",
  	"soft",
  	"soggy",
  	"solid",
  	"somber",
  	"some",
  	"sophisticated",
  	"sore",
  	"sorrowful",
  	"soulful",
  	"soupy",
  	"sour",
  	"spanish",
  	"sparkling",
  	"sparse",
  	"specific",
  	"spectacular",
  	"speedy",
  	"spherical",
  	"spicy",
  	"spiffy",
  	"spirited",
  	"spiteful",
  	"splendid",
  	"spotless",
  	"spotted",
  	"spry",
  	"thrifty",
  	"thunderous",
  	"tidy",
  	"tight",
  	"timely",
  	"tinted",
  	"tiny",
  	"tired",
  	"torn",
  	"total",
  	"unripe",
  	"unruly",
  	"unselfish",
  	"unsightly",
  	"unsteady",
  	"unsung",
  	"untidy",
  	"untimely",
  	"untried",
  	"victorious",
  	"vigilant",
  	"vigorous",
  	"villainous",
  	"violet",
  	"white",
  	"whole",
  	"whopping",
  	"wicked",
  	"wide",
  	"wideeyed",
  	"wiggly",
  	"wild",
  	"willing",
  	"wilted",
  	"winding",
  	"windy",
  	"young",
  	"zigzag",
  	"anxious",
  	"any",
  	"apprehensive",
  	"appropriate",
  	"apt",
  	"arctic",
  	"arid",
  	"aromatic",
  	"artistic",
  	"ashamed",
  	"assured",
  	"astonishing",
  	"athletic",
  	"brave",
  	"breakable",
  	"brief",
  	"bright",
  	"brilliant",
  	"brisk",
  	"broken",
  	"bronze",
  	"brown",
  	"bruised",
  	"coordinated",
  	"corny",
  	"corrupt",
  	"costly",
  	"courageous",
  	"courteous",
  	"crafty",
  	"crazy",
  	"creamy",
  	"creative",
  	"creepy",
  	"criminal",
  	"crisp",
  	"dirty",
  	"disguised",
  	"dishonest",
  	"dismal",
  	"distant",
  	"distant",
  	"distinct",
  	"distorted",
  	"dizzy",
  	"dopey",
  	"downright",
  	"dreary",
  	"even",
  	"evergreen",
  	"everlasting",
  	"every",
  	"evil",
  	"exalted",
  	"excellent",
  	"excitable",
  	"exemplary",
  	"exhausted",
  	"forthright",
  	"fortunate",
  	"fragrant",
  	"frail",
  	"frank",
  	"frayed",
  	"free",
  	"french",
  	"frequent",
  	"fresh",
  	"friendly",
  	"frightened",
  	"frightening",
  	"frigid",
  	"gregarious",
  	"grim",
  	"grimy",
  	"gripping",
  	"grizzled",
  	"gross",
  	"grotesque",
  	"grouchy",
  	"grounded",
  	"honest",
  	"honorable",
  	"honored",
  	"hopeful",
  	"horrible",
  	"hospitable",
  	"hot",
  	"huge",
  	"infatuated",
  	"inferior",
  	"infinite",
  	"informal",
  	"innocent",
  	"insecure",
  	"insidious",
  	"insignificant",
  	"insistent",
  	"instructive",
  	"insubstantial",
  	"judicious",
  	"juicy",
  	"jumbo",
  	"knotty",
  	"knowing",
  	"knowledgeable",
  	"longterm",
  	"loose",
  	"lopsided",
  	"lost",
  	"loud",
  	"lovable",
  	"lovely",
  	"loving",
  	"modern",
  	"modest",
  	"moist",
  	"monstrous",
  	"monthly",
  	"monumental",
  	"moral",
  	"mortified",
  	"motherly",
  	"motionless",
  	"nocturnal",
  	"noisy",
  	"nonstop",
  	"normal",
  	"notable",
  	"noted",
  	"original",
  	"other",
  	"our",
  	"outgoing",
  	"outlandish",
  	"outlying",
  	"precious",
  	"pretty",
  	"previous",
  	"pricey",
  	"prickly",
  	"primary",
  	"prime",
  	"pristine",
  	"private",
  	"prize",
  	"probable",
  	"productive",
  	"profitable",
  	"quickwitted",
  	"quiet",
  	"quintessential",
  	"roasted",
  	"robust",
  	"rosy",
  	"rotating",
  	"rotten",
  	"rough",
  	"round",
  	"rowdy",
  	"square",
  	"squeaky",
  	"squiggly",
  	"stable",
  	"staid",
  	"stained",
  	"stale",
  	"standard",
  	"starchy",
  	"stark",
  	"starry",
  	"steel",
  	"steep",
  	"sticky",
  	"stiff",
  	"stimulating",
  	"stingy",
  	"stormy",
  	"straight",
  	"strange",
  	"strict",
  	"strident",
  	"striking",
  	"striped",
  	"strong",
  	"studious",
  	"stunning",
  	"tough",
  	"tragic",
  	"trained",
  	"traumatic",
  	"treasured",
  	"tremendous",
  	"tremendous",
  	"triangular",
  	"tricky",
  	"trifling",
  	"trim",
  	"untrue",
  	"unused",
  	"unusual",
  	"unwelcome",
  	"unwieldy",
  	"unwilling",
  	"unwitting",
  	"unwritten",
  	"upbeat",
  	"violent",
  	"virtual",
  	"virtuous",
  	"visible",
  	"winged",
  	"wiry",
  	"wise",
  	"witty",
  	"wobbly",
  	"woeful",
  	"wonderful",
  	"wooden",
  	"woozy",
  	"wordy",
  	"worldly",
  	"worn",
  	"youthful",
  	"attached",
  	"attentive",
  	"attractive",
  	"austere",
  	"authentic",
  	"authorized",
  	"automatic",
  	"avaricious",
  	"average",
  	"aware",
  	"awesome",
  	"awful",
  	"awkward",
  	"bubbly",
  	"bulky",
  	"bumpy",
  	"buoyant",
  	"burdensome",
  	"burly",
  	"bustling",
  	"busy",
  	"buttery",
  	"buzzing",
  	"critical",
  	"crooked",
  	"crowded",
  	"cruel",
  	"crushing",
  	"cuddly",
  	"cultivated",
  	"cultured",
  	"cumbersome",
  	"curly",
  	"curvy",
  	"cute",
  	"cylindrical",
  	"doting",
  	"double",
  	"downright",
  	"drab",
  	"drafty",
  	"dramatic",
  	"dreary",
  	"droopy",
  	"dry",
  	"dual",
  	"dull",
  	"dutiful",
  	"excited",
  	"exciting",
  	"exotic",
  	"expensive",
  	"experienced",
  	"expert",
  	"extralarge",
  	"extraneous",
  	"extrasmall",
  	"extroverted",
  	"frilly",
  	"frivolous",
  	"frizzy",
  	"front",
  	"frosty",
  	"frozen",
  	"frugal",
  	"fruitful",
  	"full",
  	"fumbling",
  	"functional",
  	"funny",
  	"fussy",
  	"fuzzy",
  	"growing",
  	"growling",
  	"grown",
  	"grubby",
  	"gruesome",
  	"grumpy",
  	"guilty",
  	"gullible",
  	"gummy",
  	"humble",
  	"humiliating",
  	"humming",
  	"humongous",
  	"hungry",
  	"hurtful",
  	"husky",
  	"intelligent",
  	"intent",
  	"intentional",
  	"interesting",
  	"internal",
  	"international",
  	"intrepid",
  	"ironclad",
  	"irresponsible",
  	"irritating",
  	"itchy",
  	"jumpy",
  	"junior",
  	"juvenile",
  	"known",
  	"kooky",
  	"kosher",
  	"low",
  	"loyal",
  	"lucky",
  	"lumbering",
  	"luminous",
  	"lumpy",
  	"lustrous",
  	"luxurious",
  	"mountainous",
  	"muddy",
  	"muffled",
  	"multicolored",
  	"mundane",
  	"murky",
  	"mushy",
  	"musty",
  	"muted",
  	"mysterious",
  	"noteworthy",
  	"novel",
  	"noxious",
  	"numb",
  	"nutritious",
  	"nutty",
  	"onerlooked",
  	"outrageous",
  	"outstanding",
  	"oval",
  	"overcooked",
  	"overdue",
  	"overjoyed",
  	"profuse",
  	"proper",
  	"proud",
  	"prudent",
  	"punctual",
  	"pungent",
  	"puny",
  	"pure",
  	"purple",
  	"pushy",
  	"putrid",
  	"puzzled",
  	"puzzling",
  	"quirky",
  	"quixotic",
  	"quizzical",
  	"royal",
  	"rubbery",
  	"ruddy",
  	"rude",
  	"rundown",
  	"runny",
  	"rural",
  	"rusty",
  	"stupendous",
  	"stupid",
  	"sturdy",
  	"stylish",
  	"subdued",
  	"submissive",
  	"substantial",
  	"subtle",
  	"suburban",
  	"sudden",
  	"sugary",
  	"sunny",
  	"super",
  	"superb",
  	"superficial",
  	"superior",
  	"supportive",
  	"surefooted",
  	"surprised",
  	"suspicious",
  	"svelte",
  	"sweaty",
  	"sweet",
  	"sweltering",
  	"swift",
  	"sympathetic",
  	"trivial",
  	"troubled",
  	"trusting",
  	"trustworthy",
  	"trusty",
  	"truthful",
  	"tubby",
  	"turbulent",
  	"twin",
  	"upright",
  	"upset",
  	"urban",
  	"usable",
  	"used",
  	"useful",
  	"useless",
  	"utilized",
  	"utter",
  	"vital",
  	"vivacious",
  	"vivid",
  	"voluminous",
  	"worried",
  	"worrisome",
  	"worse",
  	"worst",
  	"worthless",
  	"worthwhile",
  	"worthy",
  	"wrathful",
  	"wretched",
  	"writhing",
  	"wrong",
  	"wry",
  	"yummy",
  	"TRUE",
  	"aliceblue",
  	"antiquewhite",
  	"aqua",
  	"aquamarine",
  	"azure",
  	"beige",
  	"bisque",
  	"black",
  	"blanchedalmond",
  	"blue",
  	"blueviolet",
  	"brown",
  	"burlywood",
  	"cadetblue",
  	"chartreuse",
  	"chocolate",
  	"coral",
  	"cornflowerblue",
  	"cornsilk",
  	"crimson",
  	"cyan",
  	"darkblue",
  	"darkcyan",
  	"darkgoldenrod",
  	"darkgray",
  	"darkgreen",
  	"darkgrey",
  	"darkkhaki",
  	"darkmagenta",
  	"darkolivegreen",
  	"darkorange",
  	"darkorchid",
  	"darkred",
  	"darksalmon",
  	"darkseagreen",
  	"darkslateblue",
  	"darkslategray",
  	"darkslategrey",
  	"darkturquoise",
  	"darkviolet",
  	"deeppink",
  	"deepskyblue",
  	"dimgray",
  	"dimgrey",
  	"dodgerblue",
  	"firebrick",
  	"floralwhite",
  	"forestgreen",
  	"fractal",
  	"fuchsia",
  	"gainsboro",
  	"ghostwhite",
  	"gold",
  	"goldenrod",
  	"gray",
  	"green",
  	"greenyellow",
  	"honeydew",
  	"hotpink",
  	"indianred",
  	"indigo",
  	"ivory",
  	"khaki",
  	"lavender",
  	"lavenderblush",
  	"lawngreen",
  	"lemonchiffon",
  	"lightblue",
  	"lightcoral",
  	"lightcyan",
  	"lightgoldenrod",
  	"lightgoldenrodyellow",
  	"lightgray",
  	"lightgreen",
  	"lightgrey",
  	"lightpink",
  	"lightsalmon",
  	"lightseagreen",
  	"lightskyblue",
  	"lightslateblue",
  	"lightslategray",
  	"lightsteelblue",
  	"lightyellow",
  	"lime",
  	"limegreen",
  	"linen",
  	"magenta",
  	"maroon",
  	"mediumaquamarine",
  	"mediumblue",
  	"mediumforestgreen",
  	"mediumgoldenrod",
  	"mediumorchid",
  	"mediumpurple",
  	"mediumseagreen",
  	"mediumslateblue",
  	"mediumspringgreen",
  	"mediumturquoise",
  	"mediumvioletred",
  	"midnightblue",
  	"mintcream",
  	"mistyrose",
  	"moccasin",
  	"navajowhite",
  	"navy",
  	"navyblue",
  	"oldlace",
  	"olive",
  	"olivedrab",
  	"opaque",
  	"orange",
  	"orangered",
  	"orchid",
  	"palegoldenrod",
  	"palegreen",
  	"paleturquoise",
  	"palevioletred",
  	"papayawhip",
  	"peachpuff",
  	"peru",
  	"pink",
  	"plum",
  	"powderblue",
  	"purple",
  	"red",
  	"rosybrown",
  	"royalblue",
  	"saddlebrown",
  	"salmon",
  	"sandybrown",
  	"seagreen",
  	"seashell",
  	"sienna",
  	"silver",
  	"skyblue",
  	"slateblue",
  	"slategray",
  	"slategrey",
  	"snow",
  	"springgreen",
  	"steelblue",
  	"tan",
  	"teal",
  	"thistle",
  	"tomato",
  	"transparent",
  	"turquoise",
  	"violet",
  	"violetred",
  	"wheat",
  	"white",
  	"whitesmoke",
  	"yellow",
  	"yellowgreen"
  ];

  var animals = [
  	"aardwolf",
  	"abalone",
  	"abyssiniancat",
  	"abyssiniangroundhornbill",
  	"acaciarat",
  	"achillestang",
  	"acornbarnacle",
  	"acornweevil",
  	"acornwoodpecker",
  	"acouchi",
  	"adamsstaghornedbeetle",
  	"addax",
  	"adder",
  	"adeliepenguin",
  	"admiralbutterfly",
  	"adouri",
  	"aegeancat",
  	"affenpinscher",
  	"afghanhound",
  	"africanaugurbuzzard",
  	"africanbushviper",
  	"africancivet",
  	"africanclawedfrog",
  	"africanelephant",
  	"africanfisheagle",
  	"africangoldencat",
  	"africangroundhornbill",
  	"africanharrierhawk",
  	"africanhornbill",
  	"africanjacana",
  	"africanmolesnake",
  	"africanparadiseflycatcher",
  	"africanpiedkingfisher",
  	"africanporcupine",
  	"africanrockpython",
  	"africanwildcat",
  	"africanwilddog",
  	"agama",
  	"agouti",
  	"aidi",
  	"airedale",
  	"airedaleterrier",
  	"akitainu",
  	"alabamamapturtle",
  	"alaskajingle",
  	"alaskanhusky",
  	"alaskankleekai",
  	"alaskanmalamute",
  	"albacoretuna",
  	"albatross",
  	"albertosaurus",
  	"albino",
  	"aldabratortoise",
  	"allensbigearedbat",
  	"alleycat",
  	"alligator",
  	"alligatorgar",
  	"alligatorsnappingturtle",
  	"allosaurus",
  	"alpaca",
  	"alpinegoat",
  	"alpineroadguidetigerbeetle",
  	"altiplanochinchillamouse",
  	"amazondolphin",
  	"amazonparrot",
  	"amazontreeboa",
  	"amberpenshell",
  	"ambushbug",
  	"americanalligator",
  	"americanavocet",
  	"americanbadger",
  	"americanbittern",
  	"americanblackvulture",
  	"americanbobtail",
  	"americanbulldog",
  	"americancicada",
  	"americancrayfish",
  	"americancreamdraft",
  	"americancrocodile",
  	"americancrow",
  	"americancurl",
  	"americangoldfinch",
  	"americanindianhorse",
  	"americankestrel",
  	"americanlobster",
  	"americanmarten",
  	"americanpainthorse",
  	"americanquarterhorse",
  	"americanratsnake",
  	"americanredsquirrel",
  	"americanriverotter",
  	"americanrobin",
  	"americansaddlebred",
  	"americanshorthair",
  	"americantoad",
  	"americanwarmblood",
  	"americanwigeon",
  	"americanwirehair",
  	"amethystgemclam",
  	"amethystinepython",
  	"amethystsunbird",
  	"ammonite",
  	"amoeba",
  	"amphibian",
  	"amphiuma",
  	"amurminnow",
  	"amurratsnake",
  	"amurstarfish",
  	"anaconda",
  	"anchovy",
  	"andalusianhorse",
  	"andeancat",
  	"andeancockoftherock",
  	"andeancondor",
  	"anemone",
  	"anemonecrab",
  	"anemoneshrimp",
  	"angelfish",
  	"angelwingmussel",
  	"anglerfish",
  	"angora",
  	"angwantibo",
  	"anhinga",
  	"ankole",
  	"ankolewatusi",
  	"annashummingbird",
  	"annelid",
  	"annelida",
  	"anole",
  	"anophelesmosquito",
  	"ant",
  	"antarcticfurseal",
  	"antarcticgiantpetrel",
  	"antbear",
  	"anteater",
  	"antelope",
  	"antelopegroundsquirrel",
  	"antipodesgreenparakeet",
  	"antlion",
  	"anura",
  	"aoudad",
  	"apatosaur",
  	"ape",
  	"aphid",
  	"apisdorsatalaboriosa",
  	"aplomadofalcon",
  	"appaloosa",
  	"aquaticleech",
  	"arabianhorse",
  	"arabianoryx",
  	"arabianwildcat",
  	"aracari",
  	"arachnid",
  	"arawana",
  	"archaeocete",
  	"archaeopteryx",
  	"archerfish",
  	"arcticduck",
  	"arcticfox",
  	"arctichare",
  	"arcticseal",
  	"arcticwolf",
  	"argali",
  	"argentinehornedfrog",
  	"argentineruddyduck",
  	"argusfish",
  	"arieltoucan",
  	"arizonaalligatorlizard",
  	"arkshell",
  	"armadillo",
  	"armedcrab",
  	"armednylonshrimp",
  	"armyant",
  	"armyworm",
  	"arrowana",
  	"arrowcrab",
  	"arrowworm",
  	"arthropods",
  	"aruanas",
  	"asianconstablebutterfly",
  	"asiandamselfly",
  	"asianelephant",
  	"asianlion",
  	"asianpiedstarling",
  	"asianporcupine",
  	"asiansmallclawedotter",
  	"asiantrumpetfish",
  	"asianwaterbuffalo",
  	"asiaticgreaterfreshwaterclam",
  	"asiaticlesserfreshwaterclam",
  	"asiaticmouflon",
  	"asiaticwildass",
  	"asp",
  	"ass",
  	"assassinbug",
  	"astarte",
  	"astrangiacoral",
  	"atlanticblackgoby",
  	"atlanticbluetang",
  	"atlanticridleyturtle",
  	"atlanticsharpnosepuffer",
  	"atlanticspadefish",
  	"atlasmoth",
  	"attwatersprairiechicken",
  	"auk",
  	"auklet",
  	"aurochs",
  	"australiancattledog",
  	"australiancurlew",
  	"australianfreshwatercrocodile",
  	"australianfurseal",
  	"australiankelpie",
  	"australiankestrel",
  	"australianshelduck",
  	"australiansilkyterrier",
  	"austrianpinscher",
  	"avians",
  	"avocet",
  	"axisdeer",
  	"axolotl",
  	"ayeaye",
  	"aztecant",
  	"azurevase",
  	"azurevasesponge",
  	"azurewingedmagpie",
  	"babirusa",
  	"baboon",
  	"backswimmer",
  	"bactrian",
  	"badger",
  	"bagworm",
  	"baiji",
  	"baldeagle",
  	"baleenwhale",
  	"balloonfish",
  	"ballpython",
  	"bandicoot",
  	"bangeltiger",
  	"bantamrooster",
  	"banteng",
  	"barasinga",
  	"barasingha",
  	"barb",
  	"barbet",
  	"barebirdbat",
  	"barnacle",
  	"barnowl",
  	"barnswallow",
  	"barracuda",
  	"basenji",
  	"basil",
  	"basilisk",
  	"bass",
  	"bassethound",
  	"bat",
  	"bats",
  	"beagle",
  	"bear",
  	"beardedcollie",
  	"beardeddragon",
  	"beauceron",
  	"beaver",
  	"bedbug",
  	"bedlingtonterrier",
  	"bee",
  	"beetle",
  	"bellfrog",
  	"bellsnake",
  	"belugawhale",
  	"bengaltiger",
  	"bergerpicard",
  	"bernesemountaindog",
  	"betafish",
  	"bettong",
  	"bichonfrise",
  	"bighorn",
  	"bighornedsheep",
  	"bighornsheep",
  	"bigmouthbass",
  	"bilby",
  	"billygoat",
  	"binturong",
  	"bird",
  	"birdofparadise",
  	"bison",
  	"bittern",
  	"blackandtancoonhound",
  	"blackbear",
  	"blackbird",
  	"blackbuck",
  	"blackcrappie",
  	"blackfish",
  	"blackfly",
  	"blackfootedferret",
  	"blacklab",
  	"blacklemur",
  	"blackmamba",
  	"blacknorwegianelkhound",
  	"blackpanther",
  	"blackrhino",
  	"blackrussianterrier",
  	"blackwidowspider",
  	"blesbok",
  	"blobfish",
  	"blowfish",
  	"blueandgoldmackaw",
  	"bluebird",
  	"bluebottle",
  	"bluebottlejellyfish",
  	"bluebreastedkookaburra",
  	"bluefintuna",
  	"bluefish",
  	"bluegill",
  	"bluejay",
  	"bluemorphobutterfly",
  	"blueshark",
  	"bluet",
  	"bluetickcoonhound",
  	"bluetonguelizard",
  	"bluewhale",
  	"boa",
  	"boaconstrictor",
  	"boar",
  	"bobcat",
  	"bobolink",
  	"bobwhite",
  	"boilweevil",
  	"bongo",
  	"bonobo",
  	"booby",
  	"bordercollie",
  	"borderterrier",
  	"borer",
  	"borzoi",
  	"boto",
  	"boubou",
  	"boutu",
  	"bovine",
  	"brahmanbull",
  	"brahmancow",
  	"brant",
  	"bream",
  	"brocketdeer",
  	"bronco",
  	"brontosaurus",
  	"brownbear",
  	"brownbutterfly",
  	"bubblefish",
  	"buck",
  	"buckeyebutterfly",
  	"budgie",
  	"bufeo",
  	"buffalo",
  	"bufflehead",
  	"bug",
  	"bull",
  	"bullfrog",
  	"bullmastiff",
  	"bumblebee",
  	"bunny",
  	"bunting",
  	"burro",
  	"bushbaby",
  	"bushsqueaker",
  	"bustard",
  	"butterfly",
  	"buzzard",
  	"caecilian",
  	"caiman",
  	"caimanlizard",
  	"calf",
  	"camel",
  	"canadagoose",
  	"canary",
  	"canine",
  	"canvasback",
  	"capeghostfrog",
  	"capybara",
  	"caracal",
  	"cardinal",
  	"caribou",
  	"carp",
  	"carpenterant",
  	"cassowary",
  	"cat",
  	"catbird",
  	"caterpillar",
  	"catfish",
  	"cats",
  	"cattle",
  	"caudata",
  	"cavy",
  	"centipede",
  	"cero",
  	"chafer",
  	"chameleon",
  	"chamois",
  	"chanticleer",
  	"cheetah",
  	"chevrotain",
  	"chick",
  	"chickadee",
  	"chicken",
  	"chihuahua",
  	"chimneyswift",
  	"chimpanzee",
  	"chinchilla",
  	"chinesecrocodilelizard",
  	"chipmunk",
  	"chital",
  	"chrysalis",
  	"chrysomelid",
  	"chuckwalla",
  	"chupacabra",
  	"cicada",
  	"cirriped",
  	"civet",
  	"clam",
  	"cleanerwrasse",
  	"clingfish",
  	"clownanemonefish",
  	"clumber",
  	"coati",
  	"cob",
  	"cobra",
  	"cock",
  	"cockatiel",
  	"cockatoo",
  	"cockerspaniel",
  	"cockroach",
  	"cod",
  	"coelacanth",
  	"collardlizard",
  	"collie",
  	"colt",
  	"comet",
  	"commabutterfly",
  	"commongonolek",
  	"conch",
  	"condor",
  	"coney",
  	"conure",
  	"cony",
  	"coot",
  	"cooter",
  	"copepod",
  	"copperbutterfly",
  	"copperhead",
  	"coqui",
  	"coral",
  	"cormorant",
  	"cornsnake",
  	"corydorascatfish",
  	"cottonmouth",
  	"cottontail",
  	"cougar",
  	"cow",
  	"cowbird",
  	"cowrie",
  	"coyote",
  	"coypu",
  	"crab",
  	"crane",
  	"cranefly",
  	"crayfish",
  	"creature",
  	"cricket",
  	"crocodile",
  	"crocodileskink",
  	"crossbill",
  	"crow",
  	"crownofthornsstarfish",
  	"crustacean",
  	"cub",
  	"cuckoo",
  	"cur",
  	"curassow",
  	"curlew",
  	"cuscus",
  	"cusimanse",
  	"cuttlefish",
  	"cutworm",
  	"cygnet",
  	"dachshund",
  	"daddylonglegs",
  	"dairycow",
  	"dalmatian",
  	"damselfly",
  	"danishswedishfarmdog",
  	"darklingbeetle",
  	"dartfrog",
  	"darwinsfox",
  	"dassie",
  	"dassierat",
  	"davidstiger",
  	"deer",
  	"deermouse",
  	"degu",
  	"degus",
  	"deinonychus",
  	"desertpupfish",
  	"devilfish",
  	"deviltasmanian",
  	"diamondbackrattlesnake",
  	"dikdik",
  	"dikkops",
  	"dingo",
  	"dinosaur",
  	"diplodocus",
  	"dipper",
  	"discus",
  	"dobermanpinscher",
  	"doctorfish",
  	"dodo",
  	"dodobird",
  	"doe",
  	"dog",
  	"dogfish",
  	"dogwoodclubgall",
  	"dogwoodtwigborer",
  	"dolphin",
  	"donkey",
  	"dorado",
  	"dore",
  	"dorking",
  	"dormouse",
  	"dotterel",
  	"douglasfirbarkbeetle",
  	"dove",
  	"dowitcher",
  	"drafthorse",
  	"dragon",
  	"dragonfly",
  	"drake",
  	"drever",
  	"dromaeosaur",
  	"dromedary",
  	"drongo",
  	"duck",
  	"duckbillcat",
  	"duckbillplatypus",
  	"duckling",
  	"dugong",
  	"duiker",
  	"dungbeetle",
  	"dungenesscrab",
  	"dunlin",
  	"dunnart",
  	"dutchshepherddog",
  	"dutchsmoushond",
  	"dwarfmongoose",
  	"dwarfrabbit",
  	"eagle",
  	"earthworm",
  	"earwig",
  	"easternglasslizard",
  	"easternnewt",
  	"easteuropeanshepherd",
  	"eastrussiancoursinghounds",
  	"eastsiberianlaika",
  	"echidna",
  	"eel",
  	"eelelephant",
  	"eeve",
  	"eft",
  	"egg",
  	"egret",
  	"eider",
  	"eidolonhelvum",
  	"ekaltadeta",
  	"eland",
  	"electriceel",
  	"elephant",
  	"elephantbeetle",
  	"elephantseal",
  	"elk",
  	"elkhound",
  	"elver",
  	"emeraldtreeskink",
  	"emperorpenguin",
  	"emperorshrimp",
  	"emu",
  	"englishpointer",
  	"englishsetter",
  	"equestrian",
  	"equine",
  	"erin",
  	"ermine",
  	"erne",
  	"eskimodog",
  	"esok",
  	"estuarinecrocodile",
  	"ethiopianwolf",
  	"europeanfiresalamander",
  	"europeanpolecat",
  	"ewe",
  	"eyas",
  	"eyelashpitviper",
  	"eyra",
  	"fairybluebird",
  	"fairyfly",
  	"falcon",
  	"fallowdeer",
  	"fantail",
  	"fanworms",
  	"fattaileddunnart",
  	"fawn",
  	"feline",
  	"fennecfox",
  	"ferret",
  	"fiddlercrab",
  	"fieldmouse",
  	"fieldspaniel",
  	"finch",
  	"finnishspitz",
  	"finwhale",
  	"fireant",
  	"firebelliedtoad",
  	"firecrest",
  	"firefly",
  	"fish",
  	"fishingcat",
  	"flamingo",
  	"flatcoatretriever",
  	"flatfish",
  	"flea",
  	"flee",
  	"flicker",
  	"flickertailsquirrel",
  	"flies",
  	"flounder",
  	"fluke",
  	"fly",
  	"flycatcher",
  	"flyingfish",
  	"flyingfox",
  	"flyinglemur",
  	"flyingsquirrel",
  	"foal",
  	"fossa",
  	"fowl",
  	"fox",
  	"foxhound",
  	"foxterrier",
  	"frenchbulldog",
  	"freshwatereel",
  	"frigatebird",
  	"frilledlizard",
  	"frillneckedlizard",
  	"fritillarybutterfly",
  	"frog",
  	"frogmouth",
  	"fruitbat",
  	"fruitfly",
  	"fugu",
  	"fulmar",
  	"funnelweaverspider",
  	"furseal",
  	"gadwall",
  	"galago",
  	"galah",
  	"galapagosalbatross",
  	"galapagosdove",
  	"galapagoshawk",
  	"galapagosmockingbird",
  	"galapagospenguin",
  	"galapagossealion",
  	"galapagostortoise",
  	"gallinule",
  	"gallowaycow",
  	"gander",
  	"gangesdolphin",
  	"gannet",
  	"gar",
  	"gardensnake",
  	"garpike",
  	"gartersnake",
  	"gaur",
  	"gavial",
  	"gazelle",
  	"gecko",
  	"geese",
  	"gelada",
  	"gelding",
  	"gemsbok",
  	"gemsbuck",
  	"genet",
  	"gentoopenguin",
  	"gerbil",
  	"gerenuk",
  	"germanpinscher",
  	"germanshepherd",
  	"germanshorthairedpointer",
  	"germanspaniel",
  	"germanspitz",
  	"germanwirehairedpointer",
  	"gharial",
  	"ghostshrimp",
  	"giantschnauzer",
  	"gibbon",
  	"gilamonster",
  	"giraffe",
  	"glassfrog",
  	"globefish",
  	"glowworm",
  	"gnat",
  	"gnatcatcher",
  	"gnu",
  	"goa",
  	"goat",
  	"godwit",
  	"goitered",
  	"goldeneye",
  	"goldenmantledgroundsquirrel",
  	"goldenretriever",
  	"goldfinch",
  	"goldfish",
  	"gonolek",
  	"goose",
  	"goosefish",
  	"gopher",
  	"goral",
  	"gordonsetter",
  	"gorilla",
  	"goshawk",
  	"gosling",
  	"gossamerwingedbutterfly",
  	"gourami",
  	"grackle",
  	"grasshopper",
  	"grassspider",
  	"grayfox",
  	"grayling",
  	"grayreefshark",
  	"graysquirrel",
  	"graywolf",
  	"greatargus",
  	"greatdane",
  	"greathornedowl",
  	"greatwhiteshark",
  	"grebe",
  	"greendarnerdragonfly",
  	"greyhounddog",
  	"grison",
  	"grizzlybear",
  	"grosbeak",
  	"groundbeetle",
  	"groundhog",
  	"grouper",
  	"grouse",
  	"grub",
  	"grunion",
  	"guanaco",
  	"guernseycow",
  	"guillemot",
  	"guineafowl",
  	"guineapig",
  	"gull",
  	"guppy",
  	"gypsymoth",
  	"gyrfalcon",
  	"hackee",
  	"haddock",
  	"hadrosaurus",
  	"hagfish",
  	"hairstreak",
  	"hairstreakbutterfly",
  	"hake",
  	"halcyon",
  	"halibut",
  	"halicore",
  	"hamadryad",
  	"hamadryas",
  	"hammerheadbird",
  	"hammerheadshark",
  	"hammerkop",
  	"hamster",
  	"hanumanmonkey",
  	"hapuka",
  	"hapuku",
  	"harborporpoise",
  	"harborseal",
  	"hare",
  	"harlequinbug",
  	"harpseal",
  	"harpyeagle",
  	"harrier",
  	"harrierhawk",
  	"hart",
  	"hartebeest",
  	"harvestmen",
  	"harvestmouse",
  	"hatchetfish",
  	"hawaiianmonkseal",
  	"hawk",
  	"hectorsdolphin",
  	"hedgehog",
  	"heifer",
  	"hellbender",
  	"hen",
  	"herald",
  	"herculesbeetle",
  	"hermitcrab",
  	"heron",
  	"herring",
  	"heterodontosaurus",
  	"hind",
  	"hippopotamus",
  	"hoatzin",
  	"hochstettersfrog",
  	"hog",
  	"hogget",
  	"hoiho",
  	"hoki",
  	"homalocephale",
  	"honeybadger",
  	"honeybee",
  	"honeycreeper",
  	"honeyeater",
  	"hookersealion",
  	"hoopoe",
  	"hornbill",
  	"hornedtoad",
  	"hornedviper",
  	"hornet",
  	"hornshark",
  	"horse",
  	"horsechestnutleafminer",
  	"horsefly",
  	"horsemouse",
  	"horseshoebat",
  	"horseshoecrab",
  	"hound",
  	"housefly",
  	"hoverfly",
  	"howlermonkey",
  	"huemul",
  	"huia",
  	"human",
  	"hummingbird",
  	"humpbackwhale",
  	"husky",
  	"hydatidtapeworm",
  	"hydra",
  	"hyena",
  	"hylaeosaurus",
  	"hypacrosaurus",
  	"hypsilophodon",
  	"hyracotherium",
  	"hyrax",
  	"iaerismetalmark",
  	"ibadanmalimbe",
  	"iberianbarbel",
  	"iberianchiffchaff",
  	"iberianemeraldlizard",
  	"iberianlynx",
  	"iberianmidwifetoad",
  	"iberianmole",
  	"iberiannase",
  	"ibex",
  	"ibis",
  	"ibisbill",
  	"ibizanhound",
  	"iceblueredtopzebra",
  	"icefish",
  	"icelandgull",
  	"icelandichorse",
  	"icelandicsheepdog",
  	"ichidna",
  	"ichneumonfly",
  	"ichthyosaurs",
  	"ichthyostega",
  	"icterinewarbler",
  	"iggypops",
  	"iguana",
  	"iguanodon",
  	"illadopsis",
  	"ilsamochadegu",
  	"imago",
  	"impala",
  	"imperatorangel",
  	"imperialeagle",
  	"incatern",
  	"inchworm",
  	"indianabat",
  	"indiancow",
  	"indianelephant",
  	"indianglassfish",
  	"indianhare",
  	"indianjackal",
  	"indianpalmsquirrel",
  	"indianpangolin",
  	"indianrhinoceros",
  	"indianringneckparakeet",
  	"indianrockpython",
  	"indianskimmer",
  	"indianspinyloach",
  	"indigobunting",
  	"indigowingedparrot",
  	"indochinahogdeer",
  	"indochinesetiger",
  	"indri",
  	"indusriverdolphin",
  	"inexpectatumpleco",
  	"inganue",
  	"insect",
  	"intermediateegret",
  	"invisiblerail",
  	"iraniangroundjay",
  	"iridescentshark",
  	"iriomotecat",
  	"irishdraughthorse",
  	"irishredandwhitesetter",
  	"irishsetter",
  	"irishterrier",
  	"irishwaterspaniel",
  	"irishwolfhound",
  	"irrawaddydolphin",
  	"irukandjijellyfish",
  	"isabellineshrike",
  	"isabellinewheatear",
  	"islandcanary",
  	"islandwhistler",
  	"isopod",
  	"italianbrownbear",
  	"italiangreyhound",
  	"ivorybackedwoodswallow",
  	"ivorybilledwoodpecker",
  	"ivorygull",
  	"izuthrush",
  	"jabiru",
  	"jackal",
  	"jackrabbit",
  	"jaeger",
  	"jaguar",
  	"jaguarundi",
  	"janenschia",
  	"japanesebeetle",
  	"javalina",
  	"jay",
  	"jellyfish",
  	"jenny",
  	"jerboa",
  	"joey",
  	"johndory",
  	"juliabutterfly",
  	"jumpingbean",
  	"junco",
  	"junebug",
  	"kagu",
  	"kakapo",
  	"kakarikis",
  	"kangaroo",
  	"karakul",
  	"katydid",
  	"kawala",
  	"kentrosaurus",
  	"kestrel",
  	"kid",
  	"killdeer",
  	"killerwhale",
  	"killifish",
  	"kingbird",
  	"kingfisher",
  	"kinglet",
  	"kingsnake",
  	"kinkajou",
  	"kiskadee",
  	"kissingbug",
  	"kite",
  	"kitfox",
  	"kitten",
  	"kittiwake",
  	"kitty",
  	"kiwi",
  	"koala",
  	"koalabear",
  	"kob",
  	"kodiakbear",
  	"koi",
  	"komododragon",
  	"koodoo",
  	"kookaburra",
  	"kouprey",
  	"krill",
  	"kronosaurus",
  	"kudu",
  	"kusimanse",
  	"labradorretriever",
  	"lacewing",
  	"ladybird",
  	"ladybug",
  	"lamb",
  	"lamprey",
  	"langur",
  	"lark",
  	"larva",
  	"laughingthrush",
  	"lcont",
  	"leafbird",
  	"leafcutterant",
  	"leafhopper",
  	"leafwing",
  	"leech",
  	"lemming",
  	"lemur",
  	"leonberger",
  	"leopard",
  	"leopardseal",
  	"leveret",
  	"lhasaapso",
  	"lice",
  	"liger",
  	"lightningbug",
  	"limpet",
  	"limpkin",
  	"ling",
  	"lion",
  	"lionfish",
  	"littlenightmonkeys",
  	"lizard",
  	"llama",
  	"lobo",
  	"lobster",
  	"locust",
  	"loggerheadturtle",
  	"longhorn",
  	"longhornbeetle",
  	"longspur",
  	"loon",
  	"lorikeet",
  	"loris",
  	"louse",
  	"lovebird",
  	"lowchen",
  	"lunamoth",
  	"lungfish",
  	"lynx",
  	"lynxÂ ",
  	"macaque",
  	"macaw",
  	"macropod",
  	"madagascarhissingroach",
  	"maggot",
  	"magpie",
  	"maiasaura",
  	"majungatholus",
  	"malamute",
  	"mallard",
  	"maltesedog",
  	"mamba",
  	"mamenchisaurus",
  	"mammal",
  	"mammoth",
  	"manatee",
  	"mandrill",
  	"mangabey",
  	"manta",
  	"mantaray",
  	"mantid",
  	"mantis",
  	"mantisray",
  	"manxcat",
  	"mara",
  	"marabou",
  	"marbledmurrelet",
  	"mare",
  	"marlin",
  	"marmoset",
  	"marmot",
  	"marten",
  	"martin",
  	"massasauga",
  	"massospondylus",
  	"mastiff",
  	"mastodon",
  	"mayfly",
  	"meadowhawk",
  	"meadowlark",
  	"mealworm",
  	"meerkat",
  	"megalosaurus",
  	"megalotomusquinquespinosus",
  	"megaraptor",
  	"merganser",
  	"merlin",
  	"metalmarkbutterfly",
  	"metamorphosis",
  	"mice",
  	"microvenator",
  	"midge",
  	"milksnake",
  	"milkweedbug",
  	"millipede",
  	"minibeast",
  	"mink",
  	"minnow",
  	"mite",
  	"moa",
  	"mockingbird",
  	"mole",
  	"mollies",
  	"mollusk",
  	"molly",
  	"monarch",
  	"mongoose",
  	"mongrel",
  	"monkey",
  	"monkfishÂ ",
  	"monoclonius",
  	"montanoceratops",
  	"moorhen",
  	"moose",
  	"moray",
  	"morayeel",
  	"morpho",
  	"mosasaur",
  	"mosquito",
  	"moth",
  	"motmot",
  	"mouflon",
  	"mountaincat",
  	"mountainlion",
  	"mouse",
  	"mouse/mice",
  	"mousebird",
  	"mudpuppy",
  	"mule",
  	"mullet",
  	"muntjac",
  	"murrelet",
  	"muskox",
  	"muskrat",
  	"mussaurus",
  	"mussel",
  	"mustang",
  	"mutt",
  	"myna",
  	"mynah",
  	"myotisÂ ",
  	"nabarlek",
  	"nag",
  	"naga",
  	"nagapies",
  	"nakedmolerat",
  	"nandine",
  	"nandoo",
  	"nandu",
  	"narwhal",
  	"narwhale",
  	"natterjacktoad",
  	"nauplius",
  	"nautilus",
  	"needlefish",
  	"needletail",
  	"nematode",
  	"nene",
  	"neonblueguppy",
  	"neonbluehermitcrab",
  	"neondwarfgourami",
  	"neonrainbowfish",
  	"neonredguppy",
  	"neontetra",
  	"nerka",
  	"nettlefish",
  	"newfoundlanddog",
  	"newt",
  	"newtnutria",
  	"nightcrawler",
  	"nighthawk",
  	"nightheron",
  	"nightingale",
  	"nightjar",
  	"nijssenissdwarfchihlid",
  	"nilgai",
  	"ninebandedarmadillo",
  	"noctilio",
  	"noctule",
  	"noddy",
  	"noolbenger",
  	"northerncardinals",
  	"northernelephantseal",
  	"northernflyingsquirrel",
  	"northernfurseal",
  	"northernhairynosedwombat",
  	"northernpike",
  	"northernseahorse",
  	"northernspottedowl",
  	"norwaylobster",
  	"norwayrat",
  	"nubiangoat",
  	"nudibranch",
  	"numbat",
  	"nurseshark",
  	"nutcracker",
  	"nuthatch",
  	"nutria",
  	"nyala",
  	"nymph",
  	"ocelot",
  	"octopus",
  	"okapi",
  	"olingo",
  	"olm",
  	"opossum",
  	"orangutan",
  	"orca",
  	"oregonsilverspotbutterfly",
  	"oriole",
  	"oropendola",
  	"oropendula",
  	"oryx",
  	"osprey",
  	"ostracod",
  	"ostrich",
  	"otter",
  	"ovenbird",
  	"owl",
  	"owlbutterfly",
  	"ox",
  	"oxen",
  	"oxpecker",
  	"oyster",
  	"ozarkbigearedbat",
  	"pacaÂ ",
  	"pachyderm",
  	"pacificparrotlet",
  	"paddlefish",
  	"paintedladybutterfly",
  	"panda",
  	"pangolin",
  	"panther",
  	"paperwasp",
  	"papillon",
  	"parakeet",
  	"parrot",
  	"partridge",
  	"peacock",
  	"peafowl",
  	"peccary",
  	"pekingese",
  	"pelican",
  	"pelicinuspetrel",
  	"penguin",
  	"perch",
  	"peregrinefalcon",
  	"pewee",
  	"phalarope",
  	"pharaohhound",
  	"pheasant",
  	"phoebe",
  	"phoenix",
  	"pig",
  	"pigeon",
  	"piglet",
  	"pika",
  	"pike",
  	"pikeperchÂ ",
  	"pilchard",
  	"pinemarten",
  	"pinkriverdolphin",
  	"pinniped",
  	"pintail",
  	"pipistrelle",
  	"pipit",
  	"piranha",
  	"pitbull",
  	"pittabird",
  	"plainsqueaker",
  	"plankton",
  	"planthopper",
  	"platypus",
  	"plover",
  	"polarbear",
  	"polecat",
  	"polliwog",
  	"polyp",
  	"polyturator",
  	"pomeranian",
  	"pondskater",
  	"pony",
  	"pooch",
  	"poodle",
  	"porcupine",
  	"porpoise",
  	"portuguesemanofwar",
  	"possum",
  	"prairiedog",
  	"prawn",
  	"prayingmantid",
  	"prayingmantis",
  	"primate",
  	"pronghorn",
  	"pseudodynerusquadrisectus",
  	"ptarmigan",
  	"pterodactyls",
  	"pterosaurs",
  	"puffer",
  	"pufferfish",
  	"puffin",
  	"pug",
  	"pullet",
  	"puma",
  	"pupa",
  	"pupfish",
  	"puppy",
  	"purplemarten",
  	"pussycat",
  	"pygmy",
  	"python",
  	"quadrisectus",
  	"quagga",
  	"quahog",
  	"quail",
  	"queenalexandrasbirdwing",
  	"queenalexandrasbirdwingbutterfly",
  	"queenant",
  	"queenbee",
  	"queenconch",
  	"queenslandgrouper",
  	"queenslandheeler",
  	"queensnake",
  	"quelea",
  	"quetzal",
  	"quetzalcoatlus",
  	"quillback",
  	"quinquespinosus",
  	"quokka",
  	"quoll",
  	"rabbit",
  	"rabidsquirrel",
  	"raccoon",
  	"racer",
  	"racerunner",
  	"ragfish",
  	"rail",
  	"rainbowfish",
  	"rainbowlorikeet",
  	"rainbowtrout",
  	"ram",
  	"raptors",
  	"rasbora",
  	"rat",
  	"ratfish",
  	"rattail",
  	"rattlesnake",
  	"raven",
  	"ray",
  	"redhead",
  	"redheadedwoodpecker",
  	"redpoll",
  	"redstart",
  	"redtailedhawk",
  	"reindeer",
  	"reptile",
  	"reynard",
  	"rhea",
  	"rhesusmonkey",
  	"rhino",
  	"rhinoceros",
  	"rhinocerosbeetle",
  	"rhodesianridgeback",
  	"ringtailedlemur",
  	"ringworm",
  	"riograndeescuerzo",
  	"roach",
  	"roadrunner",
  	"roan",
  	"robberfly",
  	"robin",
  	"rockrat",
  	"rodent",
  	"roebuck",
  	"roller",
  	"rook",
  	"rooster",
  	"rottweiler",
  	"sable",
  	"sableantelope",
  	"sablefishÂ ",
  	"saiga",
  	"sakimonkey",
  	"salamander",
  	"salmon",
  	"saltwatercrocodile",
  	"sambar",
  	"samoyeddog",
  	"sandbarshark",
  	"sanddollar",
  	"sanderling",
  	"sandpiper",
  	"sapsucker",
  	"sardine",
  	"sawfish",
  	"scallop",
  	"scarab",
  	"scarletibis",
  	"scaup",
  	"schapendoes",
  	"schipperke",
  	"schnauzer",
  	"scorpion",
  	"scoter",
  	"screamer",
  	"seabird",
  	"seagull",
  	"seahog",
  	"seahorse",
  	"seal",
  	"sealion",
  	"seamonkey",
  	"seaslug",
  	"seaurchin",
  	"senegalpython",
  	"seriema",
  	"serpent",
  	"serval",
  	"shark",
  	"shearwater",
  	"sheep",
  	"sheldrake",
  	"shelduck",
  	"shibainu",
  	"shihtzu",
  	"shorebird",
  	"shoveler",
  	"shrew",
  	"shrike",
  	"shrimp",
  	"siamang",
  	"siamesecat",
  	"siberiantiger",
  	"sidewinder",
  	"sifaka",
  	"silkworm",
  	"silverfish",
  	"silverfox",
  	"silversidefish",
  	"siskin",
  	"skimmer",
  	"skink",
  	"skipper",
  	"skua",
  	"skunk",
  	"skylark",
  	"sloth",
  	"slothbear",
  	"slug",
  	"smelts",
  	"smew",
  	"snail",
  	"snake",
  	"snipe",
  	"snoutbutterfly",
  	"snowdog",
  	"snowgeese",
  	"snowleopard",
  	"snowmonkey",
  	"snowyowl",
  	"sockeyesalmon",
  	"solenodon",
  	"solitaire",
  	"songbird",
  	"sora",
  	"southernhairnosedwombat",
  	"sow",
  	"spadefoot",
  	"sparrow",
  	"sphinx",
  	"spider",
  	"spidermonkey",
  	"spiketail",
  	"spittlebug",
  	"sponge",
  	"spoonbill",
  	"spotteddolphin",
  	"spreadwing",
  	"springbok",
  	"springpeeper",
  	"springtail",
  	"squab",
  	"squamata",
  	"squeaker",
  	"squid",
  	"squirrel",
  	"stag",
  	"stagbeetle",
  	"stallion",
  	"starfish",
  	"starling",
  	"steed",
  	"steer",
  	"stegosaurus",
  	"stickinsect",
  	"stickleback",
  	"stilt",
  	"stingray",
  	"stinkbug",
  	"stinkpot",
  	"stoat",
  	"stonefly",
  	"stork",
  	"stud",
  	"sturgeon",
  	"sugarglider",
  	"sulphurbutterfly",
  	"sunbear",
  	"sunbittern",
  	"sunfish",
  	"swallow",
  	"swallowtail",
  	"swallowtailbutterfly",
  	"swan",
  	"swellfish",
  	"swift",
  	"swordfish",
  	"tadpole",
  	"tahr",
  	"takin",
  	"tamarin",
  	"tanager",
  	"tapaculo",
  	"tapeworm",
  	"tapir",
  	"tarantula",
  	"tarpan",
  	"tarsier",
  	"taruca",
  	"tasmaniandevil",
  	"tasmaniantiger",
  	"tattler",
  	"tayra",
  	"teal",
  	"tegus",
  	"teledu",
  	"tench",
  	"tenrec",
  	"termite",
  	"tern",
  	"terrapin",
  	"terrier",
  	"thoroughbred",
  	"thrasher",
  	"thrip",
  	"thrush",
  	"thunderbird",
  	"thylacine",
  	"tick",
  	"tiger",
  	"tigerbeetle",
  	"tigermoth",
  	"tigershark",
  	"tilefish",
  	"tinamou",
  	"titi",
  	"titmouse",
  	"toad",
  	"toadfish",
  	"tomtitÂ ",
  	"topi",
  	"tortoise",
  	"toucan",
  	"towhee",
  	"tragopan",
  	"treecreeper",
  	"trex",
  	"triceratops",
  	"trogon",
  	"trout",
  	"trumpeterbird",
  	"trumpeterswan",
  	"tsetsefly",
  	"tuatara",
  	"tuna",
  	"turaco",
  	"turkey",
  	"turnstone",
  	"turtle",
  	"turtledove",
  	"uakari",
  	"ugandakob",
  	"uintagroundsquirrel",
  	"ulyssesbutterfly",
  	"umbrellabird",
  	"umbrette",
  	"unau",
  	"ungulate",
  	"unicorn",
  	"upupa",
  	"urchin",
  	"urial",
  	"uromastyxmaliensis",
  	"uromastyxspinipes",
  	"urson",
  	"urubu",
  	"urus",
  	"urutu",
  	"urva",
  	"utahprairiedog",
  	"vampirebat",
  	"vaquita",
  	"veery",
  	"velociraptor",
  	"velvetcrab",
  	"velvetworm",
  	"venomoussnake",
  	"verdin",
  	"vervet",
  	"viceroybutterfly",
  	"vicuna",
  	"viper",
  	"viperfish",
  	"vipersquid",
  	"vireo",
  	"virginiaopossum",
  	"vixen",
  	"vole",
  	"volvox",
  	"vulpesvelox",
  	"vulpesvulpes",
  	"vulture",
  	"walkingstick",
  	"wallaby",
  	"wallaroo",
  	"walleye",
  	"walrus",
  	"warbler",
  	"warthog",
  	"wasp",
  	"waterboatman",
  	"waterbuck",
  	"waterbuffalo",
  	"waterbug",
  	"waterdogs",
  	"waterdragons",
  	"watermoccasin",
  	"waterstrider",
  	"waterthrush",
  	"wattlebird",
  	"watussi",
  	"waxwing",
  	"weasel",
  	"weaverbird",
  	"weevil",
  	"westafricanantelope",
  	"whale",
  	"whapuku",
  	"whelp",
  	"whimbrel",
  	"whippet",
  	"whippoorwill",
  	"whitebeakeddolphin",
  	"whiteeye",
  	"whitepelican",
  	"whiterhino",
  	"whitetaileddeer",
  	"whitetippedreefshark",
  	"whooper",
  	"whoopingcrane",
  	"widgeon",
  	"widowspider",
  	"wildcat",
  	"wildebeast",
  	"wildebeest",
  	"willet",
  	"wireworm",
  	"wisent",
  	"wobbegongshark",
  	"wolf",
  	"wolfspider",
  	"wolverine",
  	"wombat",
  	"woodborer",
  	"woodchuck",
  	"woodcock",
  	"woodnymphbutterfly",
  	"woodpecker",
  	"woodstorks",
  	"woollybearcaterpillar",
  	"worm",
  	"wrasse",
  	"wreckfish",
  	"wren",
  	"wrenchbird",
  	"wryneck",
  	"wuerhosaurus",
  	"wyvern",
  	"xanclomys",
  	"xanthareel",
  	"xantus",
  	"xantusmurrelet",
  	"xeme",
  	"xenarthra",
  	"xenoposeidon",
  	"xenops",
  	"xenopterygii",
  	"xenopus",
  	"xenotarsosaurus",
  	"xenurine",
  	"xenurusunicinctus",
  	"xerus",
  	"xiaosaurus",
  	"xinjiangovenator",
  	"xiphias",
  	"xiphiasgladius",
  	"xiphosuran",
  	"xoloitzcuintli",
  	"xoni",
  	"xrayfish",
  	"xraytetra",
  	"xuanhanosaurus",
  	"xuanhuaceratops",
  	"xuanhuasaurus",
  	"yaffle",
  	"yak",
  	"yapok",
  	"yardant",
  	"yearling",
  	"yellowbelliedmarmot",
  	"yellowbellylizard",
  	"yellowhammer",
  	"yellowjacket",
  	"yellowlegs",
  	"yellowthroat",
  	"yellowwhitebutterfly",
  	"yeti",
  	"ynambu",
  	"yorkshireterrier",
  	"yosemitetoad",
  	"yucker",
  	"zander",
  	"zanzibardaygecko",
  	"zebra",
  	"zebradove",
  	"zebrafinch",
  	"zebrafish",
  	"zebralongwingbutterfly",
  	"zebraswallowtailbutterfly",
  	"zebratailedlizard",
  	"zebu",
  	"zenaida",
  	"zeren",
  	"zethusspinipes",
  	"zethuswasp",
  	"zigzagsalamander",
  	"zonetailedpigeon",
  	"zooplankton",
  	"zopilote",
  	"zorilla"
  ];

  const urlData = {
    adjectives,
    animals
  };

  const weather = {
    precipitationIntensity: {
      1: {
        cloud(weather) {
          if (weather.roll.cloud > 85) {
            weather.cloudIntensity = 'overcast';
            weather.timer.cloud = random(8, 12);
          } else if (weather.roll.cloud > 70) {
            weather.cloudIntensity = 'medium clouds';
            weather.timer.cloud = random(8, 16);
          } else if (weather.roll.cloud > 50) {
            weather.cloudIntensity = 'light clouds';
            weather.timer.cloud = random(6, 10);
          } else if (weather.roll.cloud <= 50 && weather.precipitation === false) {
            weather.cloudIntensity = 'clear';
            weather.timer.cloud = dice(3, 6);
          } else {
            weather.cloudIntensity = 'light clouds';
            weather.timer.cloud = dice(2, 12);
          }
        },

        freezing(weather) {
          if (weather.roll.precipitationIntensity > 75) {
            weather.precipitation = 'light snow';
            weather.timer.precipitation = dice(2, 12);
          } else if (weather.roll.precipitationIntensity > 60) {
            weather.precipitation = 'light snow';
            weather.timer.precipitation = dice(1, 4);
          } else if (weather.roll.precipitationIntensity > 50) {
            weather.precipitation = 'light snow';
            weather.timer.precipitation = 1;
          } else if (weather.roll.precipitationIntensity > 40) {
            weather.precipitation = 'medium fog';
            weather.timer.precipitation = random(1, 4);
          } else if (weather.roll.precipitationIntensity > 20) {
            weather.precipitation = 'light fog';
            weather.timer.precipitation = random(1, 8);
          } else if (weather.roll.precipitationIntensity <= 20) {
            weather.precipitation = 'light snow';
            weather.timer.precipitation = random(1, 6);
          }
        },

        raining(weather) {
          if (weather.roll.precipitationIntensity > 90) {
            weather.precipitation = 'light rain';
            weather.timer.precipitation = 1;
          } else if (weather.roll.precipitationIntensity > 60) {
            weather.precipitation = 'light rain';
            weather.timer.precipitation = dice(1, 4);
          } else if (weather.roll.precipitationIntensity > 50) {
            weather.precipitation = 'drizzle';
            weather.timer.precipitation = dice(2, 12);
          } else if (weather.roll.precipitationIntensity > 40) {
            weather.precipitation = 'drizzle';
            weather.timer.precipitation = random(1, 4);
          } else if (weather.roll.precipitationIntensity > 20) {
            weather.precipitation = 'medium fog';
            weather.timer.precipitation = random(1, 6);
          } else if (weather.roll.precipitationIntensity <= 20) {
            weather.precipitation = 'light fog';
            weather.timer.precipitation = random(1, 8);
          }
        }

      },
      2: {
        cloud(weather) {
          if (weather.roll.cloud > 85) {
            weather.cloudIntensity = 'overcast';
            weather.timer.cloud = random(8, 12);
          } else if (weather.roll.cloud > 70) {
            weather.cloudIntensity = 'medium clouds';
            weather.timer.cloud = random(8, 16);
          } else if (weather.roll.cloud > 50) {
            weather.cloudIntensity = 'light clouds';
            weather.timer.cloud = random(6, 10);
          } else if (weather.roll.cloud <= 50 && weather.precipitation === false) {
            weather.cloudIntensity = 'clear';
            weather.timer.cloud = random(8, 12);
          } else {
            weather.cloudIntensity = 'light clouds';
            weather.timer.cloud = random(6, 10);
          }
        },

        freezing(weather) {
          if (weather.roll.precipitationIntensity > 90) {
            weather.precipitation = 'medium snow';
            weather.timer.precipitation = dice(2, 12);
          } else if (weather.roll.precipitationIntensity > 50) {
            weather.precipitation = 'medium snow';
            weather.timer.precipitation = dice(1, 8);
          } else if (weather.roll.precipitationIntensity > 30) {
            weather.precipitation = 'heavy fog';
            weather.timer.precipitation = random(1, 4);
          } else if (weather.roll.precipitationIntensity > 20) {
            weather.precipitation = 'medium fog';
            weather.timer.precipitation = random(1, 4);
          } else if (weather.roll.precipitationIntensity > 10) {
            weather.precipitation = 'medium fog';
            weather.timer.precipitation = random(1, 8);
          } else if (weather.roll.precipitationIntensity <= 10) {
            weather.precipitation = 'medium snow';
            weather.timer.precipitation = random(1, 6);
          }
        },

        raining(weather) {
          if (weather.roll.precipitationIntensity > 90) {
            weather.precipitation = 'rain';
            weather.timer.precipitation = dice(1, 4);
          } else if (weather.roll.precipitationIntensity > 70) {
            weather.precipitation = 'rain';
            weather.timer.precipitation = dice(2, 12);
          } else if (weather.roll.precipitationIntensity > 35) {
            weather.precipitation = 'rain';
            weather.timer.precipitation = random(1, 4);
          } else if (weather.roll.precipitationIntensity > 20) {
            weather.precipitation = 'heavy fog';
            weather.timer.precipitation = random(1, 4);
          } else if (weather.roll.precipitationIntensity > 10) {
            weather.precipitation = 'medium fog';
            weather.timer.precipitation = random(1, 12);
          } else if (weather.roll.precipitationIntensity <= 10) {
            weather.precipitation = 'medium fog';
            weather.timer.precipitation = random(1, 8);
          }
        }

      },
      3: {
        cloud(weather) {
          if (weather.roll.cloud > 35) {
            weather.cloudIntensity = 'extremely overcase';
            weather.timer.cloud = random(8, 12);
          } else if (weather.roll.cloud > 10) {
            weather.cloudIntensity = 'thick clouds';
            weather.timer.cloud = random(8, 16);
          } else if (weather.roll.cloud <= 10) {
            weather.cloudIntensity = 'heavy clouds';
            weather.timer.cloud = random(6, 10);
          }
        },

        freezing(weather) {
          if (weather.roll.precipitationIntensity > 90) {
            weather.precipitation = 'heavy snow';
            weather.timer.precipitation = dice(1, 6);
          } else if (weather.roll.precipitationIntensity > 60) {
            weather.precipitation = 'medium snow';
            weather.timer.precipitation = dice(1, 8);
          } else if (weather.roll.precipitationIntensity > 20) {
            weather.precipitation = 'light snow';
            weather.timer.precipitation = dice(2, 12);
          } else if (weather.roll.precipitationIntensity > 10) {
            weather.precipitation = 'heavy fog';
            weather.timer.precipitation = dice(2, 6);
          } else if (weather.roll.precipitationIntensity <= 10) {
            weather.precipitation = 'medium fog';
            weather.timer.precipitation = random(1, 6);
          }
        },

        raining(weather) {
          if (weather.roll.precipitationIntensity > 90) {
            weather.precipitation = 'thunderstorm';
            weather.timer.precipitation = dice(1, 3);
          } else if (weather.roll.precipitationIntensity > 85) {
            weather.precipitation = 'thunderstorm';
            weather.timer.precipitation = 1;
          } else if (weather.roll.precipitationIntensity > 70) {
            weather.precipitation = 'heavy rain';
            weather.timer.precipitation = dice(1, 8);
          } else if (weather.roll.precipitationIntensity > 50) {
            weather.precipitation = 'heavy rain';
            weather.timer.precipitation = dice(2, 12);
          } else if (weather.roll.precipitationIntensity > 20) {
            weather.precipitation = 'heavy rain';
            weather.timer.precipitation = dice(1, 12);
          } else if (weather.roll.precipitationIntensity > 10) {
            weather.precipitation = 'heavy fog';
            weather.timer.precipitation = dice(2, 6);
          } else if (weather.roll.precipitationIntensity <= 10) {
            weather.precipitation = 'heavy fog';
            weather.timer.precipitation = random(1, 6);
          }
        }

      },
      4: {
        cloud(weather) {
          if (weather.roll.cloud > 35) {
            weather.cloudIntensity = 'extremely overcast';
            weather.timer.cloud = random(8, 12);
          } else if (weather.roll.cloud > 10) {
            weather.cloudIntensity = 'thick clouds';
            weather.timer.cloud = random(8, 16);
          } else if (weather.roll.cloud <= 10) {
            weather.cloudIntensity = 'heavy clouds';
            weather.timer.cloud = random(6, 10);
          }
        },

        freezing(weather) {
          if (weather.roll.precipitationIntensity > 90) {
            weather.precipitation = 'heavy snow';
            weather.timer.precipitation = dice(2, 12);
          } else if (weather.roll.precipitationIntensity > 50) {
            weather.precipitation = 'heavy snow';
            weather.timer.precipitation = dice(1, 8);
          } else if (weather.roll.precipitationIntensity > 10) {
            weather.precipitation = 'heavy snow';
            weather.timer.precipitation = dice(1, 4);
          } else if (weather.roll.precipitationIntensity > 5) {
            weather.precipitation = 'heavy fog';
            weather.timer.precipitation = dice(2, 6);
          } else if (weather.roll.precipitationIntensity <= 5) {
            weather.precipitation = 'heavy fog';
            weather.timer.precipitation = random(1, 7);
          }
        },

        raining(weather) {
          if (weather.roll.precipitationIntensity > 95) {
            weather.precipitation = 'thunderstorm';
            weather.timer.precipitation = dice(1, 6);
          } else if (weather.roll.precipitationIntensity > 80) {
            weather.precipitation = 'thunderstorm';
            weather.timer.precipitation = dice(1, 3);
          } else if (weather.roll.precipitationIntensity > 60) {
            weather.precipitation = 'heavy snow';
            weather.timer.precipitation = dice(2, 6);
          } else if (weather.roll.precipitationIntensity > 30) {
            weather.precipitation = 'heavy fog';
            weather.timer.precipitation = dice(2, 12);
          } else if (weather.roll.precipitationIntensity > 10) {
            weather.precipitation = 'heavy rain';
            weather.timer.precipitation = dice(2, 6);
          } else if (weather.roll.precipitationIntensity > 5) {
            weather.precipitation = 'heavy fog';
            weather.timer.precipitation = dice(2, 6);
          } else if (weather.roll.precipitationIntensity <= 5) {
            weather.precipitation = 'heavy fog';
            weather.timer.precipitation = random(1, 8);
          }
        }

      }
    },
    precipitationLevel: {
      1: weather => weather.roll.precipitation >= 95,
      2: weather => weather.roll.precipitation >= 85,
      3: weather => weather.roll.precipitation >= 70,
      4: weather => weather.roll.precipitation >= 40,
      5: weather => weather.roll.precipitation >= 5
    },
    precipitationDescriptors: {
      'no precipitation': ["it's a fine day", "it's a fair day", "it's a nice day out"],
      'light fog': ["there's a light fog, although it doesn't obscure much", "there's a fresh fog which hazes the view slightly", "there's a light fog dusting the horizon"],
      'medium fog': ["there's a bit of fog that obscures the horizon a little", "there's some fog on the horizon", "there's a decent bit of fog"],
      'heavy fog': ["there's a heavy fog, which obscures everything further than some fifty feet ahead of you", "there's a thick fog looming in the air", "it's extremely foggy, and it's difficult to see things further than fifty feet ahead of you", "there's a thick blanket of fog which covers the area"],
      'light rain': ["there's a light rain falling from the few clouds that are in the sky", "there's a slight bit of rain falling from the sky", "there's a gentle patter of rain falling down"],
      'drizzle': ["there's a steady drizzle streaming down", "there's a bit of a drizzle of rain", "there's a steady drizzle going"],
      'rain': ["it's currently raining", "it's raining at the moment", "there's some rain at the moment"],
      'heavy rain': ["there's a heavy rain going at the moment", "there's a steady and quite heavy drizzle of rain going on at the moment", "there's a heavy downpour, which seems to have no end in sight"],
      'light snow': ["there's a light dusting of snow covering the ground, and you see some flakes falling down", "it's snowing- just a little bit, but enough to make a satisfying crunch underneath your feet", "it's currently snowing lightly, with a cool breeze carrying the snowflakes a fair distance"],
      'medium snow': ["it's snowing, bringing the unique silence that comes with a dusting of snow on everything", "it's currently snowing", 'You can see your breath, and the crunch of snow underfoot is satisfying'],
      'heavy snow': ["it's snowing quite heavily at the moment, and trekking through the snow is a little difficult", 'the heavy snowfall makes movement a little difficult. The wind which carries the snow is freezing cold, and stings your eyes'],
      'thunderstorm': ['the ominous booms of thunder go off in the distance', "there's a flash of bright, white light, and several seconds later, there's a low boom in the distance"]
    },
    cloudIntensityDescriptors: {
      'extremely overcast': ['above your heads, there is not a bit of sky not covered by the dark clouds', 'you cannot see the sky for the thick blanket of cloudcover'],
      'overcast': ['it is overcast', 'stratus clouds hang overhead, resembling a thick fog clinging to the horizon, instead of the ground'],
      'thick clouds': ['a sheet of dark, threatening clouds are on the horizon', 'a dark blanket of clouds cover the sky, blotting out the sun'],
      'heavy clouds': ['dark nimbostratus clouds cover the horizon, looming threateningly', 'a dark blanket of clouds cover the sky, blotting out the sun'],
      'medium clouds': ['there are low, puffy, dark grey clumps of clouds in the sky', 'there are some clouds similar to the wool of a sheep floating abovehead', 'the clouds in the sky overhead have a similar resemblance to the scales of a mackerel fish'],
      'light clouds': ["there's a couple clouds in the sky", 'there are a couple cumulonimbus clouds lazily drifting across the sky', "there are a couple clouds, but it's not quite overcast"],
      'none': ["there's not a cloud in sight", "there aren't any clouds in the sky", 'there are no clouds on the horizon', 'there are no clouds in the sky']
    },
    temperatureDescriptors: [[200, 'impossibly hot'], [120, 'unliveably hot'], [105, 'dangerously hot'], [110, 'painfully hot'], [100, 'extremely hot'], [95, 'swelteringly hot'], [90, 'very hot'], [85, 'quite hot'], [80, 'quite warm'], [75, 'pleasant and warm'], [70, 'quite pleasant'], [65, 'nice and pleasant'], [60, 'pleasant and cool'], [55, 'cool'], [50, 'rather cool'], [45, 'nice and brisk'], [40, 'brisk'], [35, 'quite brisk'], [30, 'chilly'], [25, 'freezing'], [20, 'quite cold'], [15, 'rather cold'], [10, 'very cold'], [5, 'extremely cold'], [0, 'extremely cold'], [-5, 'bitterly cold'], [-10, 'painfully cold']]
  };

  /**
   * For specifying the origin of material.
   *
   * * 'earth' - for specifying things like June 12, etc.
   *
   * * 'fr': Forgotten Realms - DnD specific content.
   *
   * * 'pf': Pathfinder specific content.
   */
  const WizardSchool = {
    'Bladesinging': {
      source: 'TCoE'
    },
    'Chronurgy': {
      source: 'EGtW'
    },
    'Graviturgy': {
      source: 'EGtW'
    },
    'Order of the Scribes': {
      source: 'PHB'
    },
    'School of Abjuration': {
      source: 'PHB'
    },
    'School of Conjuration': {
      source: 'PHB'
    },
    'School of Divination': {
      source: 'PHB'
    },
    'School of Enchantment': {
      source: 'PHB'
    },
    'School of Evocation': {
      source: 'PHB'
    },
    'School of Illusion': {
      source: 'PHB'
    },
    'School of Necromancy': {
      source: 'PHB'
    },
    'School of Transmutation': {
      source: 'PHB'
    },
    'War Magic': {
      source: 'XGtE'
    }
  };
  const ClericDomain = {
    arcana: {
      source: 'SCAG'
    },
    death: {
      source: 'DMG'
    },
    forge: {
      source: 'XGtE'
    },
    grave: {
      source: 'XGtE'
    },
    knowledge: {
      source: 'PHB'
    },
    life: {
      source: 'PHB'
    },
    light: {
      source: 'PHB'
    },
    nature: {
      source: 'PHB'
    },
    order: {
      source: 'TCoE'
    },
    peace: {
      source: 'TCoE'
    },
    tempest: {
      source: 'PHB'
    },
    trickery: {
      source: 'PHB'
    },
    twilight: {
      source: 'TCoE'
    },
    war: {
      source: 'PHB'
    }
  };

  function findIndexInArray(array, key, value) {
    for (const [index, element] of array.entries()) {
      if (element[key] === value) {
        console.log(`Found matching key value of ${key}: ${value}!`);
        console.log(element, index);
        return index;
      }
    }

    throw new Error(`Could not find object matching the key/value of: "${key}"/"${value}"!`);
  }

  /**
   * Removes all null entries.
   */
  function filterNull(obj) {
    if (typeof obj === 'undefined') return;
    const propNames = Object.getOwnPropertyNames(obj);

    for (let i = 0; i < propNames.length; i++) {
      const propName = propNames[i];

      if (obj[propName] === null || obj[propName] === undefined) {
        delete obj[propName];
      }
    }
  }

  function createTavernName() {
    const verb = random(['Moping', 'Drowning', 'Hanging', 'Belching', 'Running', 'Walking', 'Hunting', 'Fighting', 'Swinging', 'Breaking', 'Working', 'Fermenting', 'Flowering', 'Worrying', 'Following', 'Flowing', 'Complaining', 'Standing', 'Joking', 'Laughing', 'Panting', 'Boarding', 'Lounging', 'Cutting', 'Singing', 'Staring', 'Goading', 'Disappointing', 'Faltering', 'Binding', 'Winding', 'Sundering', 'Longing', 'Fumbling', 'Bumbling', 'Stumbling', 'Pining', 'Whining', 'Flying', 'Hoarding', 'Whoring', 'Warring', 'Winking', 'Skittering', 'Slithering', 'Snoring', 'Snorting', 'Playing', 'Practicing', 'Grappling', 'Burning', 'Flaming', 'Freezing', 'Poisoning', 'Burying', 'Throwing', 'Sparking', 'Steaming', 'Smiting', 'Chittering', 'Chattering', 'Mumbling', 'Grating', 'Plowing', 'Biting', 'Howling', 'Roaring', 'Shouting', 'Pouring', 'Squeaking', 'Stinging', 'Charging', 'Bleating', 'Stabbing', 'Goring', 'Poking', 'Swallowing', 'Sucking', 'Drinking', 'Sneaking', 'Hiding', 'Slashing', 'Limping', 'Tripping', 'Shifting', 'Sliding', 'Blinding', 'Piercing', 'Bludgeoning', 'Crushing', 'Hopping', 'Thundering', 'Hushing', 'Crying', 'Wailing', 'Mourning', 'Darkening', 'Piling', 'Digging', 'Flinging']);
    const nounA = random(['Warhorse', 'Horseman', 'Maiden', 'Mage', 'Bachelor', 'King', 'Magistrate', 'Warchief', 'Warrior', 'Mare', 'Wolf', 'Fox', 'Lion', 'Lamb', 'Warden', 'Mule', 'Assassin', 'Swordsman', 'Lady', 'Knight', 'Soldier', 'Wizard', 'Warlock', 'Ranger', 'Bard', 'Druid', 'Monk', 'Paladin', 'Sorcerer', 'Rogue', 'Cleric', 'Bear', 'Goblin', 'Kobold', 'Gnome', 'Halfling', 'Dwarf', 'Fool', 'Virgin', 'Horde', 'Squire', 'Eagle', 'Rooster', 'Piglet', 'Thief', 'Priest', 'Friar', 'Blacksmith', 'Guard', 'Stag', 'Hag', 'Devil', 'Angel', 'Serpent', 'Snake', 'Rat', 'Mouse', 'Bandit', 'Chieftain', 'Griffon', 'Dragon', 'Lizard', 'Pony', 'Baron', 'Heifer', 'Bull', 'Hound', 'Goat', 'Toad', 'Stallion', 'Monster', 'Vermin', 'Beholder', 'Monkey', 'Elephant', 'Boar', 'Beagle', 'Bat', 'Demon', 'Imp', 'Sprite', 'Fey', 'Spirit', 'Bitch', 'Starling', 'Minotaur', 'Barbarian', 'Prophet', 'Merchant', 'Cobbler', 'Unicorn', 'Ogre', 'Nymph', 'Butcher', 'Captain', 'Angler', 'Lover', 'Mason', 'Tinker', 'Whale']);
    const nounB = random(['Mount', 'Saddle', 'Guild', 'Fangs', 'Man', 'Pardon', 'Pleasure', 'Belt', 'Staff', 'Shield', 'Prince', 'Master', 'Servant', 'Meal', 'Prince', 'Favor', 'Love', 'Word', 'Scribe', 'Apprentice', 'Acolyte', 'Dress', 'Goddess', 'God', 'Gold', 'Purse', 'Trap', 'King', 'Son', 'Sister', 'Mother', 'Daughter', 'Cry', 'Shout', 'Cupboard', 'Pantry', 'Queen', 'Wealth', 'Star', 'Void', 'Woman', 'Man', 'Whore', 'Butcher', 'Anvil', 'Tome', 'Sacrifice', 'Armor', 'Cup', 'Pot', 'Stove', 'Stool', 'Princess', 'Chain', 'Sword', 'Pork', 'Grain', 'Tooth', 'Lance', 'Axe', 'Scabbard', 'Knife', 'Dagger', 'Spear', 'Bow', 'Crossbow', 'Quarterstaff', 'Staff', 'Fire', 'Ice', 'Wind', 'Earth', 'Water', 'Stone', 'Ladle', 'Monastery', 'Chalice', 'Goblet', 'Dungeon', 'Lust', 'Lantern', 'Bone', 'Life', 'Stone', 'Mistress', 'Mind', 'Treasure', 'Barter', 'Armorer', 'Butler', 'Page', 'Tome', 'Feather', 'Shadow', 'Friend', 'Labyrinth', 'Mountain', 'Hope', 'Boot', 'Gauntlet']);
    const adjective = random(['Wayward', 'Quiet', 'Jolly', 'Good', 'Crooked', 'White', 'Gray', 'Blackened', 'Harried', 'Crimson', 'Silver', 'Golden', 'Disturbed', 'Filthy', 'Ugly', 'Bastard', 'Faltering', 'Glorious', 'Beautiful', 'Handsome', 'Wrinkled', 'Unhappy', 'Intelligent', 'Lovely', 'Ignorant', 'Senile', 'Sour', 'Sweet', 'Lonely', 'Green', 'Blind', 'Hungry', 'Worried', 'Educated', 'Stupid', 'Emboldened', 'Honorary', 'Stinky', 'Bottomless', 'Greasy', 'Sloppy', 'Stylish', 'Distressed', 'Harrowed', 'Tormented', 'Mortified', 'Lopsided', 'Broken', 'Moldy', 'Gooey', 'Fermented', 'Blighted', 'Ornate', 'Drowned', 'Murdered', 'Widowed', 'Hanged', 'Angry', 'Lusty', 'Haunted', 'Strong', 'Withered', 'Comely', 'Pious', 'Penitent', 'Patient', 'Drunk', 'Worthy', 'Wealthy', 'Loathsome', 'Weak', 'Miniscule', 'Miniature', 'Enormous', 'Enlarged', 'Engorged', 'Lecherous', 'Despicable', 'Lewd', 'Portly', 'Violent', 'Bumbling', 'Faulty', 'Pristine', 'Cleanly', 'Cracked', 'Splintered', 'Jeweled', 'Superior', 'Flawless', 'Common', 'Exquisite', 'Elegant', 'Fine', 'Dull', 'Brittle', 'Fragile', 'Effeminate', 'Masculine', 'Supine']);

    switch (random(1, 5)) {
      case 1:
        return toTitleCase(`The ${adjective} ${nounA}`);

      case 2:
        return toTitleCase(`The ${nounA} and ${nounB}`);

      case 3:
        return toTitleCase(`The ${nounA} and the ${nounB}`);

      case 4:
        return toTitleCase(`The ${verb} ${nounA}`);

      case 5:
        return toTitleCase(`The ${verb} ${nounA} and the ${nounB}`);
    }

    throw new Error('Roll out of bounds.');
  }

  function getTavernSin(tavern) {
    console.log(`Fetching ${tavern.name} sin.`);

    if (tavern.roll.sin > 80) {
      return 'corrupt';
    }

    if (tavern.roll.sin > 70) {
      return 'venal';
    }

    if (tavern.roll.sin > 60) {
      return 'sleazy';
    }

    if (tavern.roll.sin > 50) {
      return 'seedy';
    }

    if (tavern.roll.sin > 40 && tavern.roll.reputation > 60) {
      return 'surprisingly trustworthy';
    }

    if (tavern.roll.sin > 40) {
      return 'trustworthy';
    }

    if (tavern.roll.sin > 30 && tavern.roll.reputation > 60) {
      return 'surprisingly reliable';
    }

    if (tavern.roll.sin > 30) {
      return 'reliable';
    }

    if (tavern.roll.sin <= 20 && tavern.roll.reputation > 60) {
      return 'surprisingly honest';
    }

    return 'honest';
  }

  function tavernModifiers(town, tavern) {
    const townRoll = town.roll;
    const tavernRoll = tavern.roll;

    if (townRoll.wealth > 95) {
      tavernRoll.wealth += 10;
    } else if (townRoll.wealth > 80) {
      tavernRoll.wealth += 7;
    } else if (townRoll.wealth > 70) {
      tavernRoll.wealth += 5;
    } else if (townRoll.wealth > 60) {
      tavernRoll.wealth += 3;
      tavernRoll.activity += 1;
    } else if (townRoll.wealth > 50) {
      tavernRoll.wealth += 1;
      tavernRoll.activity += 3;
    } else if (townRoll.wealth > 40) {
      tavernRoll.wealth -= 1;
      tavernRoll.activity += 2;
    } else if (townRoll.wealth > 30) {
      tavernRoll.wealth -= 2;
    } else if (townRoll.wealth > 20) {
      tavernRoll.wealth -= 10;
      tavernRoll.sin += 1;
    } else if (townRoll.wealth <= 20) {
      tavernRoll.wealth -= 15;
      tavernRoll.sin += 5;
      tavernRoll.activity -= 3;
    }

    switch (tavern.type) {
      case 'brothel':
        tavernRoll.sin += 20;
        tavernRoll.roughness += 4;
        tavernRoll.cleanliness -= 5;
        break;

      case 'gambling den':
        tavernRoll.sin += 20;
        tavernRoll.roughness += 4;
        tavernRoll.cleanliness -= 5;
        break;

      case 'quiet and low-key bar':
        tavernRoll.sin -= 15;
        tavernRoll.activity -= 5;
        tavernRoll.roughness -= 10;
        tavernRoll.cleanliness += 3;
        break;

      case 'raucous dive':
        tavernRoll.sin += 5;
        tavernRoll.activity += 15;
        tavernRoll.roughness += 5;
        tavernRoll.cleanliness -= 5;
        break;

      case "thieves' guild hangout":
        tavernRoll.sin += 15;
        tavernRoll.roughness += 5;
        break;

      case 'high-end dining club':
        tavernRoll.sin -= 10;
        tavernRoll.wealth += 5;
        tavernRoll.roughness -= 10;
        tavernRoll.cleanliness += 10;
        break;

      case 'members-only club':
        tavernRoll.sin -= 10;
        tavernRoll.wealth += 5;
        tavernRoll.roughness -= 10;
        tavernRoll.cleanliness += 10;
        break;

      case 'gathering place for a secret society':
        tavernRoll.sin += 5;
        tavernRoll.activity -= 5;
        break;
    }
    /* ------------------------- DRAW -------------------------- */


    switch (tavern.draw) {
      case 'attractive waitstaff':
        tavernRoll.roughness += 3;
        tavernRoll.sin += 1;
        break;

      case 'crude jokes the bartender makes':
        tavernRoll.roughness += 3;
        tavernRoll.sin += 1;
        break;

      case "proximity to the thieves' guild headquarters":
        tavernRoll.roughness += 1;
        tavernRoll.sin += 3;
        break;

      case 'proximity to the brothel':
        tavernRoll.roughness += 1;
        tavernRoll.sin += 3;
        break;

      case 'witty banter with the waitstaff':
        tavernRoll.roughness -= 1;
        tavernRoll.sin -= 3;
        tavernRoll.cleanliness += 1;
        break;

      case 'incredible view':
        tavernRoll.roughness -= 1;
        tavernRoll.sin -= 3;
        tavernRoll.cleanliness += 1;
        break;

      case 'nice view':
        tavernRoll.roughness -= 1;
        tavernRoll.sin -= 3;
        tavernRoll.cleanliness += 1;
        break;

      case 'proximity to the church':
        tavernRoll.roughness -= 1;
        tavernRoll.sin -= 3;
        tavernRoll.cleanliness += 1;
        break;

      case 'warmth inside':
        tavernRoll.roughness -= 2;
        tavernRoll.sin -= 1;
        tavernRoll.cleanliness += 1;
        break;

      case 'huge fireplace':
        tavernRoll.roughness -= 2;
        tavernRoll.sin -= 1;
        tavernRoll.cleanliness += 1;
        break;

      case 'lack of bedbugs':
        tavernRoll.roughness -= 4;
        tavernRoll.sin -= 1;
        tavernRoll.cleanliness += 15;
        break;

      case 'clean beds':
        tavernRoll.roughness -= 4;
        tavernRoll.sin -= 1;
        tavernRoll.cleanliness += 15;
        break;
    }
    /* ---------------------- TAVERN STRUCTURE MATERIAL ----------------------- */


    switch (tavern.material.noun) {
      case 'hewn rock':
        tavernRoll.roughness += 3;
        break;

      case 'chiseled stone':
        tavernRoll.roughness -= 1;
        break;

      case 'marble':
        tavernRoll.cleanliness += 5;
        tavernRoll.wealth += 6;
        break;
    }
    /* ======================= RENDERS ======================= */

    /* ------------------------- WEALTH -------------------------- */


    if (tavernRoll.wealth > 95) {
      tavern.priceModifier += 4;
      tavernRoll.size += 3;
      tavernRoll.cleanliness += 15;
      tavernRoll.roughness -= 10;
    } else if (tavernRoll.wealth > 80) {
      tavern.priceModifier += 3;
      tavernRoll.cleanliness += 10;
    } else if (tavernRoll.wealth > 70) {
      tavern.priceModifier += 2;
      tavernRoll.cleanliness += 6;
    } else if (tavernRoll.wealth > 60) {
      tavern.priceModifier += 1;
      tavernRoll.activity += 5;
      tavernRoll.cleanliness += 4;
    } else if (tavernRoll.wealth > 50) {
      tavernRoll.activity += 5;
      tavernRoll.reputation -= 5;
      tavernRoll.cleanliness += 2;
    } else if (tavernRoll.wealth > 30) {
      tavern.priceModifier -= 1;
      tavernRoll.reputation -= 7;
      tavernRoll.cleanliness -= 15;
    } else if (tavernRoll.wealth <= 30) {
      tavern.priceModifier -= 2;
      tavernRoll.reputation -= 10;
      tavernRoll.cleanliness -= 25;
    }
    /* ------------------------- SIZE -------------------------- */


    if (tavernRoll.size > 80) {
      tavernRoll.activity += 5;
      tavernRoll.roughness += 3;
      tavernRoll.cleanliness -= 2;
    } else if (tavernRoll.size > 60) {
      tavernRoll.activity += 4;
      tavernRoll.roughness += 1;
    } else if (tavernRoll.size > 40) {
      tavernRoll.activity += 3;
    } else if (tavernRoll.size > 20) {
      tavernRoll.activity -= 2;
      tavernRoll.sin -= 5;
    } else if (tavernRoll.size <= 20) {
      tavernRoll.sin -= 5;
      tavernRoll.activity -= 5;
      tavernRoll.roughness -= 3;
    }
    /* ------------------------- ROUGHNESS -------------------------- */


    if (tavernRoll.roughness > 80) {
      tavernRoll.activity += 3;
      tavernRoll.sin += 5;
      tavernRoll.cleanliness -= 4;
    } else if (tavernRoll.roughness > 60) {
      tavernRoll.activity += 1;
      tavernRoll.sin += 3;
      tavernRoll.cleanliness -= 2;
    } else if (tavernRoll.roughness > 50) {
      tavernRoll.activity += 1;
      tavernRoll.sin -= 1;
    } else if (tavernRoll.roughness > 40) {
      tavernRoll.activity += 2;
      tavernRoll.sin -= 3;
    } else if (tavernRoll.roughness > 30) {
      tavernRoll.activity -= 5;
      tavernRoll.sin -= 1;
      tavernRoll.wealth += 1;
    } else if (tavernRoll.roughness > 20) {
      tavernRoll.activity -= 10;
      tavernRoll.sin -= 3;
      tavernRoll.wealth -= 1;
    } else if (tavernRoll.roughness <= 20) {
      tavernRoll.activity -= 15;
      tavernRoll.sin -= 5;
      tavernRoll.wealth -= 3;
    }

    if (tavernRoll.cleanliness > 80) {
      tavernRoll.wealth += 3;
      tavernRoll.roughness -= 3;
    } else if (tavernRoll.cleanliness > 70) {
      tavernRoll.wealth += 2;
      tavernRoll.roughness -= 3;
    } else if (tavernRoll.cleanliness > 60) {
      tavernRoll.wealth += 1;
      tavernRoll.roughness -= 2;
    } else if (tavernRoll.cleanliness > 50) {
      tavernRoll.roughness -= 2;
    } else if (tavernRoll.cleanliness > 40) {
      tavernRoll.roughness -= 1;
    } else if (tavernRoll.cleanliness > 30) {
      tavernRoll.activity -= 1;
      tavernRoll.sin += 1;
      tavernRoll.wealth -= 2;
    } else if (tavernRoll.cleanliness > 20) {
      tavernRoll.activity -= 2;
      tavernRoll.sin += 3;
      tavernRoll.wealth -= 4;
    } else if (tavernRoll.cleanliness <= 20) {
      tavernRoll.activity -= 3;
      tavernRoll.sin += 5;
      tavernRoll.wealth -= 8;
    }
  }

  function tavernRooms(tavern) {
    return getRoomsBySize(tavern.roll.size) + getPopulationModifier(tavern.roll.activity);
  }

  function getRoomsBySize(roll) {
    if (roll > 80) return random(6, 10);
    if (roll > 60) return random(5, 9);
    if (roll > 40) return random(4, 8);
    if (roll > 20) return random(3, 6);
    return random(2, 4);
  }

  function getPopulationModifier(roll) {
    if (roll > 80) return -3;
    if (roll > 60) return -2;
    if (roll > 40) return -1;
    if (roll > 20) return 2;
    return 3;
  }

  function tavernSleep(tavern) {
    const sleepData = [{
      restfulness: 90,
      sleepEasy: 2,
      note: "You unsurprisingly get an excellent night's sleep, and awake feeling refreshed and reinvigorated"
    }, {
      restfulness: 90,
      sleepEasy: 0,
      note: "You get an excellent night's sleep, and awake feeling refreshed and reinvigorated"
    }, {
      restfulness: 90,
      sleepEasy: -2,
      note: "You surprisingly get an excellent night's sleep, and awake feeling refreshed and reinvigorated"
    }, {
      restfulness: 80,
      sleepEasy: 2,
      note: "You unsurprisingly get a great night's sleep, and awake feeling refreshed and reinvigorated"
    }, {
      restfulness: 80,
      sleepEasy: 0,
      note: "You get a great night's sleep, and awake feeling refreshed and reinvigorated"
    }, {
      restfulness: 80,
      sleepEasy: -2,
      note: "You surprisingly get a great night's sleep, and awake feeling refreshed and reinvigorated"
    }, {
      restfulness: 70,
      sleepEasy: 2,
      note: "You unsurprisingly get a good night's sleep, and awake feeling refreshed"
    }, {
      restfulness: 70,
      sleepEasy: 0,
      note: "You get a good night's sleep, and awake feeling refreshed"
    }, {
      restfulness: 70,
      sleepEasy: -2,
      note: "You surprisingly get a good night's sleep, and awake feeling refreshed"
    }, {
      restfulness: 50,
      sleepEasy: 2,
      note: `You get an alright night's sleep, which is disappointing considering the quality of ${tavern.name}, but you awake feeling reasonably refreshed`
    }, {
      restfulness: 50,
      sleepEasy: 0,
      note: "You get an alright night's sleep, and awake feeling reasonably refreshed"
    }, {
      restfulness: 50,
      sleepEasy: -2,
      note: `You get an alright night's sleep despite the poor quality of ${tavern.name}, but you awake feeling reasonably refreshed`
    }, {
      restfulness: 30,
      sleepEasy: 2,
      note: `You get an awful night's sleep, which is disappointing considering the quality of ${tavern.name}, and awake with a sore back; it might have been how you were sleeping, or the bed, but you feel pretty awful`
    }, {
      restfulness: 30,
      sleepEasy: 0,
      note: "You get an awful night's sleep, and awake with a sore back; it might have been how you were sleeping, or the bed, but you feel pretty awful"
    }, {
      restfulness: 30,
      sleepEasy: -2,
      note: `You get an awful night's sleep, which is unsurprising considering the quality of ${tavern.name}, and awake with a sore back; it might have been how you were sleeping, or the bed, but you feel pretty awful`
    }, {
      restfulness: 10,
      sleepEasy: 2,
      note: "The night seems to go on forever, and you just can't get to sleep, despite the comforts provided. You awake in the morning to the roosters outside, and feel groggy, and not at all rested"
    }, {
      restfulness: 10,
      sleepEasy: 0,
      note: "The night seems to go on forever, and you just can't get to sleep. You awake in the morning to the roosters outside, and feel groggy, and not at all rested"
    }, {
      restfulness: 10,
      sleepEasy: -2,
      note: "The night seems to go on forever, and you just can't get to sleep, probably due to the conditions that you were expected to sleep in. You awake in the morning to the roosters outside, and feel groggy, and not at all rested"
    }];
    let restfulness = random(1, 100);
    let sleepEasy = 0;

    if (tavern.wealth === 'kingly') {
      restfulness += 30;
      sleepEasy += 3;
    } else if (tavern.wealth === 'aristocratic') {
      restfulness += 15;
      sleepEasy += 2;
    } else if (tavern.wealth === 'wealthy') {
      restfulness += 7;
      sleepEasy += 1;
    } else if (tavern.wealth === 'modest') {
      restfulness -= 2;
    } else if (tavern.wealth === 'poor') {
      restfulness -= 5;
      sleepEasy -= 2;
    } else {
      restfulness -= 10;
      sleepEasy -= 3;
    }

    if (tavern.roll.cleanliness > 90) {
      restfulness += 30;
    } else if (tavern.roll.cleanliness > 80) {
      restfulness += 15;
      sleepEasy += 3;
    } else if (tavern.roll.cleanliness > 70) {
      restfulness += 5;
      sleepEasy += 2;
    } else if (tavern.roll.cleanliness > 60) {
      restfulness += 3;
      sleepEasy += 1;
    } else if (tavern.roll.cleanliness > 50) {
      restfulness -= 2;
    } else if (tavern.roll.cleanliness > 40) {
      restfulness -= 5;
    } else if (tavern.roll.cleanliness > 30) {
      restfulness -= 10;
      sleepEasy -= 1;
    } else if (tavern.roll.cleanliness > 20) {
      restfulness -= 15;
      sleepEasy -= 2;
    } else {
      restfulness -= 20;
      sleepEasy -= 3;
    }

    if (tavern.roll.bedCleanliness > 90) {
      restfulness += 30;
      sleepEasy += 4;
    } else if (tavern.roll.bedCleanliness > 80) {
      restfulness += 15;
      sleepEasy += 3;
    } else if (tavern.roll.bedCleanliness > 70) {
      restfulness += 5;
      sleepEasy += 2;
    } else if (tavern.roll.bedCleanliness > 60) {
      restfulness += 3;
      sleepEasy += 1;
    } else if (tavern.roll.bedCleanliness > 50) {
      restfulness -= 2;
    } else if (tavern.roll.bedCleanliness > 40) {
      restfulness -= 5;
    } else if (tavern.roll.bedCleanliness > 30) {
      restfulness -= 10;
      sleepEasy -= 1;
    } else if (tavern.roll.bedCleanliness > 20) {
      restfulness -= 15;
      sleepEasy -= 2;
    } else {
      restfulness -= 20;
      sleepEasy -= 3;
    }

    let sleepOutput = closestMatch(sleepData, 'note', 'restfulness', 'sleepEasy', restfulness, sleepEasy);
    sleepOutput += ` ${getWakeUpByType(tavern)}.`;
    return sleepOutput;
  }
  /**
   * @param {Tavern} tavern
   * @returns {string}
   */

  function getWakeUpByType(tavern) {
    switch (tavern.type) {
      case 'brothel':
        return 'in spite of the whores moaning';

      case 'gambling den':
        return 'in spite of the commotion whenever something interesting happened at the gambling tables';
    }

    return '';
  }

  function getGuardFunding(town) {
    const roll = town.roll.guardFunding;
    if (roll > 90) return 'The guards are extremely well funded, and are extensively armed. They regularly have training exercises, and their officers are held to extremely high standards.';
    if (roll > 80) return 'The guards are well funded, and are armed more than adequately. They regularly have training exercises, and their officers are held to high standards.';
    if (roll > 70) return 'The guards are well funded, and are armed. They perform annual training exercises, and their officers are held to high standards.';
    if (roll > 60) return 'The guard is well funded, and armed according to budget. They have training exercises, and their officers are held accountable for their actions.';
    if (roll > 50) return 'The guard is funded and armed according to the town budget. Their officers are held accountable for their actions.';
    if (roll > 40) return `The guard is slightly underfunded, and their equipment sometimes falls into slight disrepair. Their officers are held accountable for their actions, though ${town.guard.name} does not have the funding to perform regular training exercises.`;
    if (roll > 30) return `The guard is underfunded, and their equipment is always in slight disrepair. Their officers are held accountable for their actions when public pressure fors for it, though ${town.guard.name} does not have the funding to perform training exercises.`;
    if (roll > 20) return `The guard is quite underfunded, and their equipment is always in disrepair. Their officers are held accountable for their actions only when public pressure calls for it, though ${town.guard.name} does not have the funding to perform any training exercises.`;
    return `The guard is severely underfunded, and their equipment is always in disrepair. Their officers are held accountable for their actions only when ${town.rulerType} calls for it, though ${town.guard.name} does not have the funding to train their recruits, resulting in bullies being commonplace.`;
  }

  function getPredominantRace(percentages) {
    console.log('Getting the predominant race...'); // Pick out the primary & secondary Race name percentages.

    const [primary, secondary] = sortArray(percentages).reverse();
    const [primaryRace, percentile] = primary;
    const majorRaceWords = raceTraits[primaryRace].raceWords;
    const [secondaryRace] = secondary;
    const secondaryRaceWords = raceTraits[secondaryRace].raceWords;

    if (percentile > 99) {
      return {
        percentile,
        secondaryPercentile: secondary[1],
        amount: 'completely',
        amountDescriptive: `entirely, without fail, of ${majorRaceWords.racePlural}`,
        primaryRace,
        secondaryRace
      };
    }

    if (percentile > 90) {
      return {
        percentile,
        secondaryPercentile: secondary[1],
        amount: 'completely',
        amountDescriptive: `almost uniformly of ${majorRaceWords.racePlural}`,
        primaryRace,
        secondaryRace
      };
    }

    if (percentile > 80) {
      return {
        percentile,
        secondaryPercentile: secondary[1],
        amount: 'overwhelmingly',
        amountDescriptive: `overwhelmingly of ${majorRaceWords.racePlural}`,
        primaryRace,
        secondaryRace
      };
    }

    if (percentile > 70) {
      return {
        percentile,
        secondaryPercentile: secondary[1],
        amount: 'predominantly',
        amountDescriptive: `predominantly of ${majorRaceWords.racePlural}`,
        primaryRace,
        secondaryRace
      };
    }

    if (percentile > 65) {
      return {
        percentile,
        secondaryPercentile: secondary[1],
        amount: 'largely',
        amountDescriptive: `largely of ${majorRaceWords.racePlural}`,
        primaryRace,
        secondaryRace
      };
    }

    if (percentile > 60) {
      return {
        percentile,
        secondaryPercentile: secondary[1],
        amount: 'mostly',
        amountDescriptive: `mostly of ${majorRaceWords.racePlural}`,
        primaryRace,
        secondaryRace
      };
    }

    if (percentile > 55) {
      return {
        percentile,
        secondaryPercentile: secondary[1],
        amount: 'mostly',
        amountDescriptive: `mostly of ${majorRaceWords.racePlural}, with some ${secondaryRaceWords.racePlural}`,
        primaryRace,
        secondaryRace
      };
    }

    if (percentile > 50) {
      return {
        percentile,
        secondaryPercentile: secondary[1],
        amount: 'mostly',
        amountDescriptive: `of ${majorRaceWords.racePlural}, with a slim majority, along with some ${secondaryRaceWords.racePlural}`,
        primaryRace,
        secondaryRace
      };
    }

    if (percentile > 40) {
      return {
        percentile,
        secondaryPercentile: secondary[1],
        amount: 'fairly diverse',
        amountDescriptive: `of many different races, with the most common race being ${majorRaceWords.raceAdjective}`,
        primaryRace,
        secondaryRace
      };
    }

    if (percentile > 35) {
      return {
        percentile,
        secondaryPercentile: secondary[1],
        amount: 'rather diverse',
        amountDescriptive: `of many different races, with the most common race of ${majorRaceWords.raceAdjective} just barely making up slightly over a third of the population`,
        primaryRace,
        secondaryRace
      };
    }

    if (percentile > 30) {
      return {
        percentile,
        secondaryPercentile: secondary[1],
        amount: 'incredibly diverse',
        amountDescriptive: 'of almost every race, no one race being the clear majority',
        primaryRace,
        secondaryRace
      };
    }

    if (percentile > 20) {
      return {
        percentile,
        secondaryPercentile: secondary[1],
        amount: 'melting pot of races',
        amountDescriptive: 'of a melting pot of all different races',
        primaryRace,
        secondaryRace
      };
    }

    return {
      percentile,
      secondaryPercentile: secondary[1],
      amount: 'diverse melting pot of races',
      amountDescriptive: 'of a melting pot of all different races',
      primaryRace,
      secondaryRace
    };
  }
  function formatPercentile(percentages) {
    const sortedCopy = percentages.slice().sort((a, b) => b[1] - a[1]);
    return sortedCopy.map(([name, percentile]) => {
      return ` ${toTitleCase(name)}: ${percentile.toFixed(2)}%`;
    });
  }
  function formatAsList(text) {
    const obj = $('<ol>');

    for (const key in text) {
      $(obj).append($('<li>').text(`${key}: ${text[key].toFixed(2)}%`));
    }

    return obj.get(0);
  }
  function formatArrayAsList(text) {
    const obj = $('<ol>');

    for (const item of text) {
      $(obj).append($('<li>').text(item));
    }

    return obj.get(0);
  }
  function returnStringList(text) {
    let obj = '<ol>';

    for (const item of text) {
      obj += `<li>${item}</li>`;
    }

    obj += '</ol>';
    return obj;
  }

  function getPolice(factions) {
    return first(getPoliceFactions(factions));
  }

  function getPoliceFactions(factions) {
    return Object.values(factions).filter(faction => faction.isPolicing);
  }

  function getTaxRate(town) {
    let totalTax = 0;

    for (const tax of Object.values(town.taxes)) {
      if (typeof tax === 'number') {
        totalTax += tax;
        continue;
      }

      console.log('non-integer tax!', town.taxes[tax]);
    }

    return Math.round(totalTax * 100) / 100;
  }

  function getTownArcana(town) {
    const roll = town.roll.arcana;

    if (town.politicalIdeology === 'magocracy') {
      if (roll > 90) return `Magic is reserved for the ruling class of mages, who govern ${town.name}. Those found practicing magic without a license are considered to be undermining the council of wizards' authority.`;
      if (roll > 80) return `Magic is reserved only for the ruling class of mages and those who manage to procure a license, which is an intentionally confusing affair of different forms that need signatures from the council of wizards that govern ${town.name}.`;
      if (roll > 70) return `Magic is typically only for the ruling class of mages who govern ${town.name}. Those who cast spells within ${town.name} are seen as politicians more than awe-inspiring heroes.`;
      if (roll > 60) return `Magic is not codified into the laws, though the wizard council that governs ${town.name} have instructed the local guards would be more likely to treat it as a threat rather than not.`;
      if (roll > 50) return 'Magic has not been codified into the laws by the wizard council to keep the powers that allow them to rule to be open to all.';
      if (roll > 40) return `Magic is not codified into the laws as anything specific, though the wizard council that governs ${town.name} have instructed the local guards would be more likely to treat it as a threat rather than not.`;
      if (roll > 30) return `Magic is treated with suspicion, and the wizard council that governs ${town.name} treat anybody practicing magic as a threat to their rule.`;
      if (roll > 20) return `Magic is treated with suspicion and fear, and the people of ${town.name} trust only the wizard council with magic.`;
      if (roll > 10) return `Those that do not sit on the wizard council that governs ${town.name} are not permitted to cast magic. It is coded into law as a restricted activity.`;
      return `Magic is outlawed. Only the wizards that govern ${town.name} are permitted to cast any spells beyond a cantrip level.`;
    } else {
      if (roll > 90) return "Magic is reserved only for those with a license, which is a relatively simple form to fill out, stating what type of magic you wish to practice, your contact details, a non-refundable bond to cover public liability, and whether it's for commercial or personal use.";
      if (roll > 80) return "Magic is reserved only for those with a license, which is a relatively simple form to fill out, stating what type of magic you wish to practice, a public liability bond, and whether it's for commercial or personal use.";
      if (roll > 70) return 'Magic is typically reserved for those with a license. There is some magic, but is mostly for personal use, and sometimes commercial.';
      if (roll > 60) return 'Magic is not codified into the laws, though the local guards would be more likely to treat it as a threat rather than not.';
      if (roll > 50) return 'Magic has not been codified into the laws.';
      if (roll > 40) return 'Magic is not codified into the laws as anything specific, though the local guards would be more likely to treat it as a threat rather than not.';
      if (roll > 30) return 'Magic is treated with suspicion, and guards look for any excuse to put a magic user away behind bars.';
      if (roll > 20) return 'Magic is treated with extreme suspicion, and is coded into law as a restricted activity.';
      if (roll > 10) return 'Magic is reviled by the guards, and they look for any excuse to put away a magic user. It is coded into law as a restricted activity, so they have an easy time of doing it, too.';
      return 'Magic is outlawed, and guards look for any excuse to put away anyone that looks like a magic user. It is coded into law as a tightly restricted activity.';
    }
  }

  function getTownEconomics(town) {
    const roll = town.roll.economics;
    const {
      name
    } = town;
    const wealth = lib.getTownWealth(town.roll.wealth);
    if (roll > 90) return `Trade in ${name} is heavily regulated, with taxes, tariffs, and restrictions on what can be brought in and out of the ${town.type}, and people live ${articles.output(wealth)} existence because of it. The trade guild strictly enforces the rules, and costs of doing business in ${name} are high.`;
    if (roll > 80) return `Trade in ${name} is regulated, with taxes and restrictions on what can be brought in and out of the ${town.type}, and people live ${articles.output(wealth)} existence because of it. The trade guild enforces rules, with stiff penalties and trade bans for rule-breakers.`;
    if (roll > 70) return `Trade in ${name} is regulated, with taxes applied to all goods and services rendered, and people live ${articles.output(wealth)} existence because of it. The trade guild enforces rules, with penalties for rule-breakers.`;
    if (roll > 60) return `Trade in ${name} is mostly free, with some taxes applied to goods and services rendered in the city. People live ${articles.output(wealth)} existence because of it.`;
    if (roll > 50) return `Trade is reasonable in ${name}, and people live ${articles.output(wealth)} existence because of it; some taxes are applied to certain goods and services that are rendered in the city.`;
    if (roll > 40) return `Trade is reasonable in ${name}, and people live ${articles.output(wealth)} existence because of it; some taxes are applied to certain goods and services that are rendered in the city, but the more creative entrepreneurs can find loopholes to make a better profit.`;
    if (roll > 30) return `Trade is rather free in ${name}, and people live ${articles.output(wealth)} existence because of it. There are few taxes, and there is little regulation from the authorities on what merchants can and cannot sell.`;
    if (roll > 20) return `Trade is free in ${name}, and people live ${articles.output(wealth)} existence because of it. There are no taxes or regulations to speak of.`;
    return `Caveat emptor is the guiding philosophy of ${name}, and people live ${articles.output(wealth)} existence because of it. Without any taxes or regulations, the free market reigns supreme here.`;
  }

  function getTownLaw(town) {
    const roll = town.roll.law;

    if (town.politicalIdeology === 'kleptocracy') {
      if (roll > 90) return `Law in ${town.name} is completely one sided. Those that breach the complex and codified list of laws and do not have the protection of the Thieves' Guild can expect hard labor, incarceration, or public execution. The Thieves' Guild controls the law, and have free reign as a result.`;
      if (roll > 80) return `Law in ${town.name} is totally one sided. Those that breach the complex list of laws and do not have the protection of the Thieves' Guild can expect hard labor, incarceration, or sometimes, even public execution. The Thieves' Guild controls the law, and have free reign as a result.`;
      if (roll > 70) return `Law in ${town.name} is very much in favour of the Thieves' Guild that runs the town. Their political power renders them virtually immune to the law, and criminals fear them more than the judicial system.`;
      if (roll > 60) return `Law in ${town.name} is in favour of the Thieves' Guild that runs the town. Their political power renders them largely above the law, and criminals fear them more than the judicial system.`;
      if (roll > 50) return `Law in ${town.name} is in favour of the Thieves' Guild that run the kleptocratic government. Their political power renders them mostly the law, and crime is rampant.`;
      if (roll > 40) return `Law in ${town.name} is slack, perhaps intentionally so- the Thieves' Guild that control the government would not be above bending the laws in their favour.`;
      if (roll > 30) return `Law in ${town.name} is quite slack as a result of a kleptocratic government. Those not aligned with the Thieves' Guild can expect harsh fines for crime.`;
      if (roll > 20) return `Law in ${town.name} is almost non existant for the members of the kleptocratic government that controls ${town.name}. For the common people, though, one can expect to lose a hand for stealing a loaf of bread without paying your Guild membership fees.`;
      return `Law in ${town.name} is basically non existant for the Thieves' Guild members that control the government. Common folk can lose a hand or their head for stealing a loaf of bread without paying their Guild membership fees, though.`;
    } else {
      if (roll > 90) return `Law in ${town.name} is overwhelmingly punitive, and those that breach the complex and codified list of laws can expect hard labor, incarceration, or public execution. Crime is seen as a stain, which cannot be erased, and only through retribution can it be redeemed.`;
      if (roll > 80) return `Law in ${town.name} is extremely punitive, and those that breach the complex list of laws can expect hard labor, incarceration, or sometimes public execution. Crime is an ugly stain on humanity, to be punished wherever possible.`;
      if (roll > 70) return `Law in ${town.name} is very much punitive based, and those that breach the laws can expect hard labor, incarceration, or sometimes public execution. Crime is an ugly stain on humanity, to be punished.`;
      if (roll > 60) return `Law in ${town.name} is punitive based, and those that breach the laws can expect hard labor, incarceration, fines, or, in some instances, public execution. Crime is an ugly stain on humanity, to be removed wherever possible.`;
      if (roll > 50) return `Law in ${town.name} is punitive, and those that breach the laws can expect hard labor, incarceration, fines, or, in rare instances, execution.`;
      if (roll > 40) return `Law in ${town.name} is somewhat reform-based, and those that breach the laws can expect hard labor, incarceration, or fines. The death penalty is typically reserved for traitors to the state.`;
      if (roll > 30) return `Law in ${town.name} is reform-based, and those that breach the laws can expect incarceration, fines, or going to an asylum for reform. The death penalty is reserved only for traitors to the state.`;
      if (roll > 20) return `Law in ${town.name} is reform-based, and those that breach the laws can expect incarceration, fines, asylums, or work-release programs to provide them with the chance to not become a recidivist. The death penalty is reserved only for traitors to the state.`;
      return `Law in ${town.name} is reform-based, and those that breach the laws can expect fines, penalties, or work-release programs to provide them with the best possible chance to not become a recidivist.`;
    }
  }

  function getTownMaterial(startLocationMaterials, wealth, size) {
    if (!startLocationMaterials) {
      console.error('Main town building material has not initialized!');
      startLocationMaterials = terrain.temperate.location.plains.possibleMaterials;
    }

    const isPossibleMaterial = material => {
      return startLocationMaterials.includes(material);
    };

    const materialDecider = wealth + size * 0.1;

    if (materialDecider > 70) {
      return getHighTierMaterial(isPossibleMaterial);
    }

    if (materialDecider > 50) {
      return getMidTierMaterial(isPossibleMaterial);
    }

    return getLowTierMaterial(isPossibleMaterial);
  }

  function getHighTierMaterial(filterFn) {
    const materials = ['plaster', 'brick', 'limestone', 'gypsum'];
    return random(materials.filter(filterFn));
  }

  function getMidTierMaterial(filterFn) {
    const materials = ['hewn rock', 'stone', 'cobblestone', 'wood'];
    return random(materials.filter(filterFn));
  }

  function getLowTierMaterial(filterFn) {
    const materials = ['wood', 'adobe', 'daub', 'cob', 'straw', 'rock', 'terra cotta', 'clay', 'cobblestone'];
    return random(materials.filter(filterFn));
  }

  function getTownMilitary(town) {
    const police = getPolice(town.factions);
    const roll = town.roll.military;

    if (police.type === 'guards') {
      if (roll > 90) return 'The guard is extremely strict, with citizens being forced to carry licenses, identification papers, and travel permits. The local guard, <<profile $town.guard>>, is extremely well armed, and brutality is commonplace.';
      if (roll > 80) return 'The guards are very strict, with citizens being forced to carry licenses and travel permits. The local guard, <<profile $town.guard>>, is well armed, and brutality is common.';
      if (roll > 70) return 'There is a strong policing presence, with citizens seeking to live in the city being forced to undergo background checks. The local guard, <<profile $town.guard>>, is well armed, and brutality is not unheard of.';
      if (roll > 60) return "There's a decent policing presence, and citizens know better than to step out of line, as <<profile $town.guard>> are armed. Despite this, brutality is rare, and citizens with nothing to hide have nothing to fear.";
      if (roll > 50) return `There is a policing presence in ${town.name}, but it is more for outside intruders rather than the population inside. Citizens are expected to follow the laws, and those that do have nothing to fear from <<profile $town.guard>>.`;
      if (roll > 30) return `The policing presence in ${town.name} is more of a militia; some of the members of <<profile $town.guard>> are part time, and there is little need for the use of force outside of intruders.`;
      if (roll > 20) return `The policing presence in ${town.name} is a militia; most of the guards of <<profile $town.guard>> are part time, and there is little need for the use of force. Citizens act with honesty, and have no need for 24/7 guards.`;
      return `The policing presence in ${town.name} is a militia; the guards of <<profile $town.guard>> are part time, and there is rarely any need for the use of force. Law breakers are judged by community tribunals.`;
    }

    if (roll > 90) return `The policing carried out by ${police.name} is extremely strict, with citizens being forced to carry licenses, identification papers, and travel permits. <<profile $town.guard>> control the $town.type, and are extremely well armed, with brutality being commonplace.`;
    if (roll > 80) return `${police.name} are very strict, with citizens being forced to carry licenses and travel permits. The law is enforced by <<profile $town.guard>>, who are well armed, and brutality is common.'`;
    if (roll > 70) return `There is a strong guard presence enacted by ${police.name}, with citizens seeking to live in the city being forced to undergo background checks. <<profile $town.guard>> are well armed, and brutality is not unheard of.'`;
    if (roll > 60) return "There's a decent guard presence, and citizens know better than to step out of line, as <<profile $town.guard>> are armed. Despite this, brutality is rare, and citizens with nothing to hide have nothing to fear.";
    if (roll > 50) return `There is a guard presence in ${town.name}, but it is more for outside intruders rather than the population inside. Citizens are expected to follow the laws, and those that do have nothing to fear from <<profile $town.guard>>, who take care of policing matters.`;
    if (roll > 40) return `The guard presence in ${town.name} is somewhat smaller than one would expect for its size, perhaps due in part because law enforcement is carried out by <<profile $town.guard>>, who are seen as friends and drinking buddies, rather than horrible tyrants.`;
    if (roll > 30) return `The guard presence in ${town.name} is small, and policing is carried out by <<profile $town.guard>>. There is usually little need for the use of force outside of intruders.`;
    if (roll > 20) return `The guard presence in ${town.name} is a militia; policing is carried out by <<profile $town.guard>>, and there is little need for the use of force. Citizens act with honesty, and have no need for 24/7 guards.`;
    return `The guard presence in ${town.name} is a militia; policing is carried out by <<profile $town.guard>>, and there is rarely any need for the use of force. Law breakers are judged by community tribunals.`;
  }

  function getTownWelfare(town) {
    const welfareRoll = town.roll.welfare;
    const wealthRoll = town.roll.wealth;

    if (welfareRoll > 90 && wealthRoll > 50) {
      return 'Welfare is excellent. Citizens can expect free healthcare, education, child care, death services, safety nets, and other programs beneficial to the health of the public.';
    }

    if (welfareRoll > 90) {
      return `Welfare is as good as it possibly can be, given the wealth of ${town.name}. Citizens can expect healthcare, education, child care, and death services.`;
    }

    if (welfareRoll > 80 && wealthRoll > 50) {
      return 'Welfare is very good. Citizens can expect education, subsidised healthcare, death services, safety nets, and other programs beneficial to the health of the public.';
    }

    if (welfareRoll > 80) {
      return `Welfare is very good, considering the wealth of ${town.name}. Citizens can expect education, somewhat subsidised healthcare, death services, and other programs beneficial to the health of the public.`;
    }

    if (welfareRoll > 70 && wealthRoll > 50) {
      return 'Welfare is good. Citizens can expect death services, and other services such as healthcare and education, provided they are able to pay for it.';
    }

    if (welfareRoll > 70) {
      return 'Welfare is good, all things considered. Citizens can expect death services, and other services such as healthcare and education, provided they are able to pay for it.';
    }

    if (welfareRoll > 60 && wealthRoll > 40) {
      return `Welfare is above average, considering the ${lib.getTownWealth(town.roll.wealth)} quality of life. Citizens can expect a decent education, provided they can pay for it. Healthcare is overtaxed and underfunded, though.`;
    }

    if (welfareRoll > 60) {
      return 'Welfare is above average. Citizens can expect a decent education, provided they can pay for it. Healthcare is overtaxed and underfunded.';
    }

    if (welfareRoll > 50) {
      return 'Welfare is average. Citizens can find an education, provided they can pay for it. Healthcare is overtaxed and underfunded, and the government hides behind layers of bureaucracy to dodge complaints.';
    }

    if (welfareRoll > 40) {
      return 'Welfare is below average. Citizens are largely left to their own fate except in extreme cases. Healthcare is neglected, and education is an afterthought. Most citizens would have better luck from private benefactors or the church than relying on the government.';
    }

    if (welfareRoll > 30) {
      return 'Welfare is bad. Citizens can expect the bare minimum of death services. Healthcare and education are fringe cases, and citizens would do better to seek a private benefactor than try and receive treatment from the government.';
    }

    if (welfareRoll > 20) {
      return "Welfare is terrible. Citizens can expect the absolute bare minimum of death services. Healthcare and education are ignored, and those unable to fend for themselves would go hungry if it weren't for private benefactors.";
    }

    return 'Welfare is non existent. Citizens can expect the absolute bare minimum of death services. Healthcare and education are totally ignored, and those unable to fend for themselves starve.';
  }

  const townData = {
    name: {
      prefix: ['Green', 'Elms', 'Oak', 'Fair', 'Farren', 'Tall', 'Nar', 'Alla', 'Lans', 'San', 'Col', 'Fri', 'Plain', 'Hon', 'Far', 'Barrow', 'Shi', 'Mel', 'Mal', 'Bon', 'Bie', 'Can', 'Pol', 'Pan', 'Fald', 'Frior', 'Pol', 'Stone', 'Water', 'Leaf', 'Ice', 'Flame', 'Sol', 'Storm', 'Earth', 'Gleam', 'Star', 'Art', 'War', 'Heart', 'Hard', 'Fall', 'Rock', 'Doom', 'Oak', 'Tear', 'Raven', 'Badger', 'Snake', 'Lion', 'Hell', 'Rage', 'Brine', 'Rat', 'Buck', 'Lily', 'Core', 'Stench', 'Mage', 'God', 'Soil', 'Pure', 'Mal', 'Cam', 'Fen', 'Clear', 'Split', 'Founders', 'Heir', 'Spin', 'Aber', 'Acc', 'Ock', 'Avon', 'Ar', 'Ard', 'Druin', 'Ash', 'Ast', 'Auchen', 'Ach', 'Usk', 'Axe', 'Balla', 'Bal', 'Bannock', 'Bannau', 'Bre', 'Bry', 'Crag', 'Cul', 'Dinas', 'Drum', 'Holm', 'Keld', 'West', 'Wind', 'Nor', 'Nant', 'Porth', 'Swin', 'Sud', 'Sut', 'Wes', 'Alt', 'Alten', 'Kies', 'Klein', 'Neu', 'Nieder', 'Ober', 'Oberst', 'Unter', 'Lichten', 'Pyr', 'Kron', 'Frank', 'Ber', 'Berg', 'Kirch', 'Uk', 'Rus', 'Ban', 'Cha', 'Agni', 'Val', 'Vas', 'Bug', 'Tre', 'Haj', 'Par', 'Roz', 'Hlod', 'Lunin', 'Lun', 'Jast', 'Cherry', 'Rose', 'Elk', 'Clay', 'New', 'Bear', 'Moss', 'Pine', 'Cedar', 'Ever'],
      suffix: ['dale', 'ten', 'den', 'ven', 'gen', 'len', 'lun', 'stun', 'ville', 'burn', 'view', 'nen', 'lan', 'sed', 'folk', 'ork', 'len', 'pan', 'rel', 'old', 'ten', 'tan', 'lend', 'vorn', 'vant', 'lid', 'lin', 'crest', 'bridge', 'run', 'catch', 'blade', 'haven', 'rise', 'more', 'light', 'main', 'blaze', 'place', 'tear', 'fold', 'rest', 'host', 'craft', 'lair', 'hollow', 'vale', 'hammer', 'pike', 'rail', 'spike', 'ring', 'henge', 'coil', 'spring', 'jaw', 'mark', 'hail', 'loch', 'child', 'keep', 'fort', 'brook', 'forth', 'melt', 'borourgh', 'ford', 'crawl', 'moral', 'combe', 'glen', 'garden', 'wish', 'fellow', 'ridge', 'ward', 'bury', 'hamm', 'hurst', 'ley', 'lee', 'leigh', 'ney', 'port', 'sted', 'stead', 'stow', 'stowe', 'tun', 'wick', 'wich', 'sex', 'ex', 'lia', 'ia', 'lass', 'ter', 'ton', 'beck', 'bach', 'bost', 'mouth', 'bourne', 'born', 'borough', 'by', 'bie', 'caster', 'chester', 'cott', 'don', 'den', 'eig', 'ey', 'field', 'firth', 'lynn', 'lin', 'mere', 'ness', 'medden', 'stoke', 'ster', 'rigg', 'toft', 'tun', 'worth', 'brough', 'ingen', 'mar', 'jung', 'berg', 'bruch', 'bruck', 'burg', 'bühl', 'büttel', 'dorf', 'ede', 'feld', 'furt', 'graben', 'hag', 'hau', 'hausen', 'heim', 'hof', 'horn', 'horst', 'hoven', 'ich', 'in', 'itz', 'kirch', 'leben', 'leiten', 'loh', 'ow', 'siefen', 'stadt', 'stein', 'wald', 'weg', 'werder', 'weiger', 'winkel', 'tal', 'ki', 'halas', 'wek', 'diu', 'arsk', 'glod', 'wharf', 'lake', 'grove', 'root', 'wood', 'hill', 'abbey', 'gate', 'harbor', 'landing', 'post', 'pass', 'polis', 'hold', 'watch', 'mill', 'bluff', 'cairn', 'edge', 'moor', 'point', 'shaw', 'shire', 'thorpe', 'valley', 'wallow']
    },
    // Prefixes and Suffixes for the road names of the town
    roads: {
      name: ['Castle', 'Keep', 'Kings', 'Queens', 'Prince', 'Princess', 'Lords', 'Ladies', 'Noble', 'Duke', 'Duchess', 'Rogue', 'Priest', 'Abbott', 'Pope', 'Spring', 'Winter', 'Summer', 'Autumn', 'Butcher', 'Tailor', 'Smith', 'Potter', 'Baker', 'Farrier', 'Old', 'New', 'Common', 'Main', 'High', 'Low', 'Butcher', 'Tailor', 'Smith', 'Potter', 'Baker', 'Farrier', 'Old', 'New', 'Common', 'Main', 'High', 'Low', 'North', 'South', 'West', 'East'],
      type: ['Street', 'Street', 'Street', 'Street', 'Lane', 'Lane', 'Lane', 'Road', 'Road', 'Road', 'Road', 'Square', 'Square', 'Market', 'Way', 'Crescent', 'Close', 'Wynd', 'Row', 'Avenue', 'Alley', 'Drive', 'Boulevard', 'Plaza']
    },
    defaults: {
      type: {
        hamlet: 1,
        village: 2,
        town: 3,
        city: 2
      },
      terrain: {
        temperate: 3,
        tropical: 1,
        polar: 1,
        arid: 1
      },
      season: {
        summer: 1,
        autumn: 1,
        winter: 1,
        spring: 1
      }
    },
    lifestyleStandards: [[1000, 'aristocratic'], [400, 'wealthy'], [200, 'comfortable'], [100, 'modest'], [20, 'poor'], [10, 'squalid'], [0, 'wretched']],
    rollData: {
      equality: {
        man: {
          tooltip: 'How sexist is the society here?',
          preceding: 'Totally sexist and oppressive -- Bastion of equality',
          rolls: [[90, 'egalitarian', "Gender is totally irrelevant to one's place in society here."], [80, 'egalitarian', "Gender is irrelevant to one's place in society here."], [70, 'egalitarian', 'It is a relatively egalitarian society, although men are expected to be the primary breadwinners.'], [60, 'egalitarian-ish', 'It is supposedly egalitarian society, though women face barriers socially and economically if they do not conform.'], [40, 'patriarchal', 'It is largely a patriarchal society. Women are pressured to conform socially, but not legally.'], [40, 'patriarchal', 'Women are oppressed, and do not enjoy many of the social liberties afforded to men.'], [20, 'patriarchal', 'Men occupy most positions of authority.'], [0, 'overwhelmingly patriarchal', 'Almost all positions of authority are occupied by men.']]
        },
        woman: {
          tooltip: 'How sexist is the society here?',
          preceding: 'Totally sexist and oppressive -- Bastion of equality',
          rolls: [[90, 'egalitarian', "Gender is totally irrelevant to one's place in society here."], [80, 'egalitarian', "Gender is irrelevant to one's place in society here."], [70, 'egalitarian', 'Femininity is celebrated, and women enjoy equal opportunities here.'], [50, 'matriarchal', 'Women have cooler heads than men, and are therefore the heads of households here.'], [40, 'matriarchal', 'The brawn of men is utilised where necessary, but men are largely kept at home.'], [20, 'matriarchal', 'Women occupy most positions of authority.'], [0, 'overwhelmingly matriarchal', 'Almost all positions of authority are occupied by women.']]
        }
      },
      wealth: {
        tooltip: 'How wealthy is the town?',
        preceding: 'Dirt poor -- Fabulously wealthy',
        rolls: [[95, 'kingly'], [80, 'aristocratic'], [70, 'wealthy'], [60, 'comfortable'], [50, 'modest'], [25, 'poor'], [15, 'squalid'], [0, 'destitute']]
      },
      size: {
        tooltip: 'How much land is covered?',
        isHidden: true,
        preceding: 'Tiny -- Sprawling'
      },
      reputation: {
        tooltip: 'How well known is this town?',
        preceding: 'Virtually unheard of -- Known throughout the region',
        isHidden: true,
        hasRolls: false
      },
      religiosity: {
        tooltip: 'How religious are they here?',
        preceding: 'Atheistic -- Extremely Religious',
        hasRolls: false
      },
      diversity: {
        isHidden: true,
        tooltip: 'How diverse is the population?',
        preceding: 'Monoracial -- Totally diverse',
        hasRolls: false
      },
      economics: {
        tooltip: 'How free is the market, and how many regulations are there?',
        preceding: 'Free Trade -- Regulated trade:',
        hasRolls: false
      },
      welfare: {
        tooltip: 'How do they treat their less fortunate citizens?',
        preceding: 'Indifferent welfare -- Benevolent Welfare:',
        hasRolls: false
      },
      military: {
        tooltip: 'How heavy is the armed presence here?',
        preceding: 'Relaxed military -- Strict military:',
        hasRolls: false
      },
      law: {
        tooltip: 'How do they treat law-breakers here?',
        preceding: 'Reform-based law -- Punishment-based law:',
        hasRolls: false
      },
      arcana: {
        tooltip: 'How is magic seen here? Slide to the left for magic to be seen less favourably, keep it in the middle for the government to have no opinion, and slide it to the right for a more regulated magic.',
        preceding: 'Restricted magic -- Regulated magic:',
        hasRolls: false
      },
      magic: {
        tooltip: 'How common is it for a peasant to see magic here?',
        preceding: 'Gritty low-magic -- Magic is commonplace',
        isHidden: true,
        hasRolls: false
      },
      sin: {
        tooltip: 'How much of a culture of crime is there?',
        preceding: 'Squeaky clean -- Wretched hive of scum and villainy',
        hasRolls: false
      },
      genderMakeup: {
        tooltip: 'What percentage of the population does the \'dominant\' gender make up?',
        preceding: 'Gender makeup (percentage of people that are the dominant gender):',
        hasRolls: false
      },
      guardFunding: {
        tooltip: 'How much funding is put towards keeping the peace here?',
        preceding: 'Next to no funding -- Well funded',
        isHidden: true,
        hasRolls: false
      }
    },
    type: {
      // This sets socio-economics for the different sized towns. It sets up the potential demographics, economic system, political system, number of factions, and other modifiers.
      hamlet: {
        demographics: () => [{
          // demographics must be in alphabetical order until I fix it to not be buggy
          probability: 50,
          popPercentages: {
            'dragonborn': randomFloat(1, 2),
            'dwarf': randomFloat(1, 10),
            'elf': randomFloat(1, 5),
            'gnome': randomFloat(1, 5),
            'goblin': randomFloat(0, 0.5),
            'half-elf': randomFloat(1, 5),
            'half-orc': randomFloat(1, 3),
            'halfling': randomFloat(5, 10),
            'human': randomFloat(85, 95),
            'lizardfolk': randomFloat(1, 2),
            'tiefling': randomFloat(1, 2)
          }
        }, {
          probability: 5,
          popPercentages: {
            'dragonborn': randomFloat(1, 2),
            'dwarf': randomFloat(1, 10),
            'elf': randomFloat(1, 5),
            'gnome': randomFloat(1, 5),
            'goblin': randomFloat(10, 15),
            'half-elf': randomFloat(1, 5),
            'half-orc': randomFloat(85, 95),
            'halfling': randomFloat(5, 10),
            'human': randomFloat(5, 15),
            'lizardfolk': randomFloat(1, 2),
            'tiefling': randomFloat(1, 2)
          }
        }, {
          probability: 2,
          popPercentages: {
            'dragonborn': randomFloat(1, 5),
            'dwarf': randomFloat(1, 10),
            'elf': randomFloat(1, 5),
            'gnome': randomFloat(1, 5),
            'goblin': randomFloat(1, 5),
            'half-elf': randomFloat(1, 5),
            'half-orc': randomFloat(5, 10),
            'halfling': randomFloat(5, 10),
            'human': randomFloat(5, 15),
            'lizardfolk': randomFloat(1, 2),
            'tiefling': randomFloat(3, 10)
          }
        }, {
          probability: 7,
          popPercentages: {
            'dragonborn': randomFloat(1, 2),
            'dwarf': randomFloat(1, 10),
            'elf': randomFloat(1, 5),
            'gnome': randomFloat(1, 5),
            'goblin': randomFloat(0, 1),
            'half-elf': randomFloat(1, 5),
            'half-orc': randomFloat(1, 3),
            'halfling': randomFloat(70, 90),
            'human': randomFloat(5, 15),
            'lizardfolk': randomFloat(1, 2),
            'tiefling': randomFloat(1, 2)
          }
        }, {
          probability: 10,
          popPercentages: {
            'dragonborn': randomFloat(1, 2),
            'dwarf': randomFloat(1, 10),
            'elf': randomFloat(70, 80),
            'gnome': randomFloat(1, 5),
            'goblin': randomFloat(1, 2),
            'half-elf': randomFloat(20, 40),
            'half-orc': randomFloat(1, 2),
            'halfling': randomFloat(5, 15),
            'human': randomFloat(5, 15),
            'lizardfolk': randomFloat(1, 2),
            'tiefling': randomFloat(1, 2)
          }
        }, {
          probability: 10,
          popPercentages: {
            'dragonborn': randomFloat(1, 2),
            'dwarf': randomFloat(80, 90),
            'elf': randomFloat(1, 5),
            'gnome': randomFloat(25, 35),
            'goblin': randomFloat(1, 5),
            'half-elf': randomFloat(1, 5),
            'half-orc': randomFloat(1, 3),
            'halfling': randomFloat(5, 10),
            'human': randomFloat(5, 15),
            'lizardfolk': randomFloat(1, 2),
            'tiefling': randomFloat(1, 2)
          }
        }],
        ideologies: {
          economicIdeology: {
            feudalism: 50,
            capitalism: 10,
            syndicalism: 3,
            communism: 2,
            primitivism: 10
          },
          politicalSource: {
            'absolute monarchy': 2,
            'republic': 50,
            'anarchy': 10,
            'constitutional monarchy': 1
          }
        },
        population: () => {
          return random([random(30, 150), random(100, 300), random(450, 800), random(500, 700), random(800, 950), random(900, 999)]);
        },
        startFactionsNumber: () => random([1, 1, 1, 1, 1, 2]),
        // roadDuplication: d100 of whether to create a new road (new one if under).
        roadDuplication: 40,
        modifiers: {
          wealth: -20,
          reputation: -40,
          sin: -25,
          diversity: -20
        }
      },
      village: {
        demographics: () => [{
          // demographics must be in alphabetical order until I fix it to not be buggy
          probability: 50,
          popPercentages: {
            'dragonborn': randomFloat(1, 2),
            'dwarf': randomFloat(1, 10),
            'elf': randomFloat(1, 10),
            'gnome': randomFloat(1, 10),
            'goblin': randomFloat(1, 5),
            'half-elf': randomFloat(1, 10),
            'half-orc': randomFloat(1, 5),
            'halfling': randomFloat(5, 10),
            'human': randomFloat(85, 95),
            'lizardfolk': randomFloat(1, 2),
            'tiefling': randomFloat(1, 2)
          }
        }, {
          probability: 5,
          popPercentages: {
            'dragonborn': randomFloat(1, 5),
            'dwarf': randomFloat(1, 10),
            'elf': randomFloat(1, 3),
            'gnome': randomFloat(1, 5),
            'goblin': randomFloat(10, 20),
            'half-elf': randomFloat(1, 3),
            'half-orc': randomFloat(85, 95),
            'halfling': randomFloat(5, 7),
            'human': randomFloat(8, 15),
            'lizardfolk': randomFloat(1, 2),
            'tiefling': randomFloat(1, 5)
          }
        }, {
          probability: 2,
          popPercentages: {
            'dragonborn': randomFloat(1, 5),
            'dwarf': randomFloat(1, 10),
            'elf': randomFloat(1, 5),
            'gnome': randomFloat(1, 5),
            'goblin': randomFloat(1, 5),
            'half-elf': randomFloat(1, 5),
            'half-orc': randomFloat(5, 10),
            'halfling': randomFloat(5, 10),
            'human': randomFloat(5, 20),
            'lizardfolk': randomFloat(1, 2),
            'tiefling': randomFloat(3, 10)
          }
        }, {
          probability: 7,
          popPercentages: {
            'dragonborn': randomFloat(1, 2),
            'dwarf': randomFloat(1, 10),
            'elf': randomFloat(1, 5),
            'gnome': randomFloat(5, 10),
            'goblin': randomFloat(0, 1),
            'half-elf': randomFloat(1, 10),
            'half-orc': randomFloat(1, 4),
            'halfling': randomFloat(70, 90),
            'human': randomFloat(5, 15),
            'lizardfolk': randomFloat(1, 2),
            'tiefling': randomFloat(1, 4)
          }
        }, {
          probability: 10,
          popPercentages: {
            'dragonborn': randomFloat(1, 4),
            'dwarf': randomFloat(3, 10),
            'elf': randomFloat(70, 80),
            'gnome': randomFloat(2, 7),
            'goblin': randomFloat(1, 2),
            'half-elf': randomFloat(20, 40),
            'half-orc': randomFloat(1, 2),
            'halfling': randomFloat(5, 15),
            'human': randomFloat(5, 15),
            'lizardfolk': randomFloat(1, 2),
            'tiefling': randomFloat(1, 3)
          }
        }, {
          probability: 10,
          popPercentages: {
            'dragonborn': randomFloat(1, 2),
            'dwarf': randomFloat(80, 90),
            'elf': randomFloat(1, 7),
            'gnome': randomFloat(25, 35),
            'goblin': randomFloat(1, 2),
            'half-elf': randomFloat(1, 6),
            'half-orc': randomFloat(1, 3),
            'halfling': randomFloat(5, 10),
            'human': randomFloat(10, 15),
            'lizardfolk': randomFloat(1, 2),
            'tiefling': randomFloat(1, 3)
          }
        }],
        ideologies: {
          economicIdeology: {
            feudalism: 50,
            capitalism: 10,
            syndicalism: 3,
            communism: 2,
            primitivism: 5
          },
          politicalSource: {
            'absolute monarchy': 2,
            'republic': 50,
            'anarchy': 10,
            'constitutional monarchy': 1
          }
        },
        population: () => {
          return random([random(1000, 1200), random(1000, 1300), random(1400, 1800), random(1700, 2300), random(2000, 3000), random(2500, 3000)]);
        },
        startFactionsNumber: () => random([1, 1, 1, 2, 2, 2]),
        roadDuplication: 50,
        modifiers: {
          wealth: -10,
          reputation: -20,
          sin: -15,
          diversity: 10
        }
      },
      town: {
        demographics: () => [{
          // demographics must be in alphabetical order until I fix it to not be buggy
          probability: 50,
          popPercentages: {
            'dragonborn': randomFloat(1, 2),
            'dwarf': randomFloat(1, 15),
            'elf': randomFloat(1, 10),
            'gnome': randomFloat(1, 10),
            'goblin': randomFloat(1, 2),
            'half-elf': randomFloat(3, 15),
            'half-orc': randomFloat(1, 5),
            'halfling': randomFloat(5, 10),
            'human': randomFloat(75, 95),
            'lizardfolk': randomFloat(1, 2),
            'tiefling': randomFloat(1, 2)
          }
        }, {
          probability: 3,
          popPercentages: {
            'dragonborn': randomFloat(1, 7),
            'dwarf': randomFloat(5, 15),
            'elf': randomFloat(1, 3),
            'gnome': randomFloat(1, 10),
            'goblin': randomFloat(10, 25),
            'half-elf': randomFloat(1, 3),
            'half-orc': randomFloat(85, 95),
            'halfling': randomFloat(5, 7),
            'human': randomFloat(8, 25),
            'lizardfolk': randomFloat(1, 2),
            'tiefling': randomFloat(4, 10)
          }
        }, {
          probability: 2,
          popPercentages: {
            'dragonborn': randomFloat(1, 5),
            'dwarf': randomFloat(1, 10),
            'elf': randomFloat(1, 5),
            'gnome': randomFloat(1, 5),
            'goblin': randomFloat(1, 5),
            'half-elf': randomFloat(1, 5),
            'half-orc': randomFloat(5, 10),
            'halfling': randomFloat(5, 10),
            'human': randomFloat(5, 20),
            'lizardfolk': randomFloat(1, 2),
            'tiefling': randomFloat(3, 10)
          }
        }, {
          probability: 7,
          popPercentages: {
            'dragonborn': randomFloat(1, 2),
            'dwarf': randomFloat(1, 10),
            'elf': randomFloat(5, 20),
            'gnome': randomFloat(5, 15),
            'goblin': randomFloat(1, 2),
            'half-elf': randomFloat(1, 15),
            'half-orc': randomFloat(1, 4),
            'halfling': randomFloat(50, 80),
            'human': randomFloat(25, 40),
            'lizardfolk': randomFloat(1, 2),
            'tiefling': randomFloat(1, 7)
          }
        }, {
          probability: 10,
          popPercentages: {
            'dragonborn': randomFloat(1, 4),
            'dwarf': randomFloat(3, 10),
            'elf': randomFloat(70, 80),
            'gnome': randomFloat(2, 7),
            'goblin': randomFloat(1, 2),
            'half-elf': randomFloat(10, 30),
            'half-orc': randomFloat(1, 2),
            'halfling': randomFloat(5, 20),
            'human': randomFloat(5, 15),
            'lizardfolk': randomFloat(1, 2),
            'tiefling': randomFloat(1, 3)
          }
        }, {
          probability: 10,
          popPercentages: {
            'dragonborn': randomFloat(1, 2),
            'dwarf': randomFloat(80, 90),
            'elf': randomFloat(1, 7),
            'gnome': randomFloat(25, 35),
            'goblin': randomFloat(1, 2),
            'half-elf': randomFloat(1, 6),
            'half-orc': randomFloat(1, 3),
            'halfling': randomFloat(3, 7),
            'human': randomFloat(10, 20),
            'lizardfolk': randomFloat(1, 2),
            'tiefling': randomFloat(1, 3)
          }
        }],
        ideologies: {
          economicIdeology: {
            feudalism: 40,
            capitalism: 20,
            syndicalism: 5,
            communism: 3,
            primitivism: 2
          },
          politicalSource: {
            'absolute monarchy': 2,
            'republic': 50,
            'anarchy': 10,
            'constitutional monarchy': 1
          }
        },
        population: () => {
          return random([random(3000, 3300), random(3200, 3400), random(3000, 4500), random(3700, 4200), random(4000, 5300), random(5000, 5500), random(5500, 6000)]);
        },
        startFactionsNumber: () => random([1, 1, 2, 2, 2, 3, 3]),
        roadDuplication: 60,
        modifiers: {
          wealth: 15,
          reputation: 5,
          sin: 5,
          diversity: 15
        }
      },
      city: {
        demographics: () => [{
          // demographics must be in alphabetical order until I fix it to not be buggy
          probability: 50,
          popPercentages: {
            'dragonborn': randomFloat(1, 4),
            'dwarf': randomFloat(1, 20),
            'elf': randomFloat(1, 15),
            'gnome': randomFloat(1, 15),
            'goblin': randomFloat(1, 5),
            'half-elf': randomFloat(1, 20),
            'half-orc': randomFloat(1, 10),
            'halfling': randomFloat(5, 15),
            'human': randomFloat(70, 95),
            'lizardfolk': randomFloat(1, 2),
            'tiefling': randomFloat(1, 2)
          }
        }, {
          probability: 1,
          popPercentages: {
            'dragonborn': randomFloat(1, 7),
            'dwarf': randomFloat(5, 15),
            'elf': randomFloat(1, 3),
            'gnome': randomFloat(1, 10),
            'goblin': randomFloat(10, 25),
            'half-elf': randomFloat(1, 3),
            'half-orc': randomFloat(85, 95),
            'halfling': randomFloat(5, 7),
            'human': randomFloat(8, 25),
            'lizardfolk': randomFloat(1, 2),
            'tiefling': randomFloat(4, 10)
          }
        }, {
          probability: 2,
          popPercentages: {
            'dragonborn': randomFloat(1, 5),
            'dwarf': randomFloat(1, 10),
            'elf': randomFloat(1, 5),
            'gnome': randomFloat(1, 5),
            'goblin': randomFloat(1, 5),
            'half-elf': randomFloat(1, 5),
            'half-orc': randomFloat(5, 10),
            'halfling': randomFloat(5, 10),
            'human': randomFloat(5, 20),
            'lizardfolk': randomFloat(1, 2),
            'tiefling': randomFloat(3, 10)
          }
        }, {
          probability: 3,
          popPercentages: {
            'dragonborn': randomFloat(1, 2),
            'dwarf': randomFloat(1, 10),
            'elf': randomFloat(5, 30),
            'gnome': randomFloat(5, 15),
            'goblin': randomFloat(1, 2),
            'half-elf': randomFloat(1, 25),
            'half-orc': randomFloat(1, 4),
            'halfling': randomFloat(50, 60),
            'human': randomFloat(25, 40),
            'lizardfolk': randomFloat(1, 2),
            'tiefling': randomFloat(1, 10)
          }
        }, {
          probability: 15,
          popPercentages: {
            'dragonborn': randomFloat(1, 5),
            'dwarf': randomFloat(3, 10),
            'elf': randomFloat(70, 95),
            'gnome': randomFloat(2, 7),
            'goblin': randomFloat(1, 2),
            'half-elf': randomFloat(10, 25),
            'half-orc': randomFloat(1, 2),
            'halfling': randomFloat(5, 15),
            'human': randomFloat(5, 25),
            'lizardfolk': randomFloat(1, 2),
            'tiefling': randomFloat(1, 5)
          }
        }, {
          probability: 15,
          popPercentages: {
            'dragonborn': randomFloat(1, 3),
            'dwarf': randomFloat(80, 95),
            'elf': randomFloat(1, 4),
            'gnome': randomFloat(25, 35),
            'goblin': randomFloat(1, 2),
            'half-elf': randomFloat(1, 6),
            'half-orc': randomFloat(1, 5),
            'halfling': randomFloat(3, 7),
            'human': randomFloat(10, 25),
            'lizardfolk': randomFloat(1, 2),
            'tiefling': randomFloat(1, 3)
          }
        }],
        ideologies: {
          economicIdeology: {
            feudalism: 20,
            capitalism: 30,
            syndicalism: 3,
            communism: 1,
            primitivism: 1
          },
          politicalSource: {
            'absolute monarchy': 70,
            'republic': 50,
            'anarchy': 1,
            'constitutional monarchy': 50
          }
        },
        population: () => {
          return random([random(4000, 4300), random(4200, 4400), random(4000, 5500), random(4700, 5200), random(5000, 7300), random(6000, 6500), random(6500, 9000), random(8500, 9500)]);
        },
        startFactionsNumber: () => random([1, 1, 2, 2, 2, 3, 3, 3, 3, 4]),
        roadDuplication: 70,
        modifiers: {
          wealth: 5,
          reputation: 20,
          sin: 25,
          diversity: 25
        }
      }
    },
    economicIdeology: {
      feudalism: {
        modifiers: {
          economics: 15,
          welfare: -25,
          law: 15,
          military: 20
        },
        descriptors: {
          economicIdeologyIC: 'feudalistic',
          economicIdeologyIST: 'feudalist',
          economicIdeologyDescription: "The people of $town.name work the land in exchange for working their lord's lands.",
          tippy: "The crown gives land to the nobles in exchange for military service. Peasants work, tithe, and fight for the nobles in exchange for being able to live on the noble's lands."
        }
      },
      capitalism: {
        modifiers: {
          economics: -20,
          welfare: -25,
          law: 15,
          military: 20
        },
        descriptors: {
          economicIdeologyIC: 'capitalistic',
          economicIdeologyIST: 'capitalist',
          economicIdeologyDescription: 'The people of $town.name work in exchange for payment from their employers, which they use to buy the necessities.',
          tippy: 'Trade and industry are controlled by private owners for profit, rather than the state.'
        }
      },
      syndicalism: {
        modifiers: {
          economics: 35,
          welfare: 25,
          law: -15,
          military: -15,
          equality: 25
        },
        descriptors: {
          economicIdeologyIC: 'syndicalistic',
          economicIdeologyIST: 'syndicalist',
          economicIdeologyDescription: 'The people of $town.name own the lands they work on collectively, and together benefit from its prosperity.',
          tippy: 'The workers own the lands they work on collectively, and together benefit from its prosperity.'
        }
      },
      communism: {
        modifiers: {
          economics: 40,
          welfare: 30,
          law: -15,
          military: -30,
          equality: 25
        },
        descriptors: {
          economicIdeologyIC: 'communistic',
          economicIdeologyIST: 'communist',
          economicIdeologyDescription: 'The people of $town.name work the jobs that they are able to, and are paid according to their needs. Excess profits are reinvested to strengthen the society as a whole.',
          tippy: 'People work the jobs that they are able to, and are paid according to their needs. Excess profits are reinvested to strengthen the society as a whole.'
        }
      },
      primitivism: {
        modifiers: {
          economics: 40,
          welfare: -25,
          law: -30,
          military: -30,
          equality: -25
        },
        descriptors: {
          economicIdeologyIC: 'primitivistic',
          economicIdeologyIST: 'primitivist',
          economicIdeologyDescription: "The people of $town.name work the land in a loosely organised sense; there is no concept of ownership, and the majority of the $town.type's citizens are hunter-gatherers.",
          tippy: 'There is no formal government, and people are largely hunter-gatherers with no concept of ownership; might makes right.'
        }
      }
    },
    politicalSource: {
      'absolute monarchy': {
        politicalIdeology: ['autocracy', 'autocracy', 'autocracy', 'meritocracy', 'democracy', 'kleptocracy', 'magocracy', 'militocracy', 'oligarchy', 'sophocracy', 'theocracy', 'technocracy'],
        autocracy: {
          politicalSourceDescription: "<<print $town.leader.title.toUpperFirst()>> <<profile $npcs[$town.leader.key]>> is the supreme ruler, and all laws and affairs are governed by the crown's will.",
          description: 'The crown holds both supreme executive and judicial powers.'
        },
        default: {
          politicalSourceDescription: '<<print $town.ruler.title.toUpperFirst()>> <<profile $npcs[$town.ruler.key]>> is technically the head of state, but affairs are handled by a parliamentary consisting of $town.leaderType, the head of whom is $town.leader.title <<profile $npcs[$town.leader.key]>>.',
          description: 'The crown holds supreme judicial power, but the executive power is held by a parliamentary.'
        }
      },
      'constitutional monarchy': {
        politicalIdeology: ['autocracy', 'autocracy', 'meritocracy', 'democracy', 'democracy', 'democracy', 'kleptocracy', 'magocracy', 'militocracy', 'oligarchy', 'sophocracy', 'theocracy', 'technocracy'],
        autocracy: {
          politicalSourceDescription: '<<print $town.ruler.title.toUpperFirst()>> <<profile $npcs[$town.ruler.key]>> is technically the head of state, but affairs are handled by the prime minister, <<profile $npcs[$town.leader.key]>>, who controls all executive decisions.',
          description: 'The crown holds supreme judicial powers, but executive power is held by the prime minister.'
        },
        default: {
          politicalSourceDescription: '<<print $town.ruler.title.toUpperFirst()>> <<profile $npcs[$town.ruler.key]>> is the head of state, but affairs are handled by $town.leaderType, the head of whom is $town.leader.title <<profile $npcs[$town.leader.key]>>.',
          description: 'The crown holds supreme judicial power, but day to day affairs are held by parliament.'
        }
      },
      'republic': {
        politicalIdeology: ['meritocracy', 'meritocracy', 'democracy', 'democracy', 'democracy', 'democracy', 'kleptocracy', 'magocracy', 'militocracy', 'oligarchy', 'sophocracy', 'theocracy', 'technocracy'],
        politicalSourceDescription: 'Affairs are handled by $town.leaderType, the head of whom is $town.leader.title <<profile $npcs[$town.leader.key]>>',
        description: 'An elected body of representatives wield the powers of government.'
      },
      'anarchy': {
        politicalIdeology: ['meritocracy', 'meritocracy', 'democracy', 'democracy', 'democracy', 'democracy', 'kleptocracy', 'magocracy', 'militocracy', 'oligarchy', 'sophocracy', 'theocracy', 'technocracy'],
        politicalSourceDescription: 'None take responsibility for the stewardship of $town.name, but $town.leaderType hold the best semblance of order, the head of whom is $town.leader.title <<profile $npcs[$town.leader.key]>>.',
        description: 'No formal political system exists.'
      }
    },
    politicalIdeology: {
      autocracy: {
        leaderTraits: () => ({
          hasClass: false,
          profession: 'lord',
          background: 'noble',
          title: 'Lord',
          socialClass: 'nobility'
        }),
        modifiers: {
          economics: 45,
          welfare: -25,
          law: 15,
          military: 25,
          arcana: -5
        },
        data: {
          isFaction: false,
          leaderType: 'the supreme leader',
          governmentType: 'nobles',
          politicalIdeologyIC: 'autocratic',
          description: 'Governed by one person.'
        }
      },
      meritocracy: {
        leaderTraits: () => ({
          hasClass: false,
          background: 'noble',
          title: 'Lord',
          socialClass: 'nobility'
        }),
        modifiers: {
          economics: 15,
          welfare: 5,
          law: -5,
          military: -5,
          arcana: 15,
          equality: 25
        },
        data: {
          isFaction: false,
          leaderType: 'the competent',
          governmentType: 'commoners',
          politicalIdeologyIC: 'meritocratic',
          description: 'Governed by the best.'
        }
      },
      democracy: {
        leaderTraits: () => ({
          hasClass: false,
          profession: 'prime minister',
          background: 'commoner',
          title: 'Lord',
          socialClass: 'nobility'
        }),
        modifiers: {
          economics: -15,
          welfare: 25,
          law: 15,
          military: -5,
          arcana: 15,
          equality: 25
        },
        data: {
          isFaction: false,
          leaderType: 'the people',
          governmentType: 'commoners',
          politicalIdeologyIC: 'democratic',
          description: 'Governed by the elected.'
        }
      },
      kleptocracy: {
        leaderTraits: () => ({
          hasClass: true,
          profession: 'rogue',
          background: 'criminal',
          title: 'High Thief',
          socialClass: 'nobility'
        }),
        modifiers: {
          economics: -35,
          welfare: -25,
          law: -30,
          military: -5,
          arcana: 15
        },
        data: {
          isFaction: true,
          leaderType: "the Thieves' Guild",
          governmentType: 'thieves',
          politicalIdeologyIC: 'kleptocratic',
          description: 'Governed by the thieves.'
        }
      },
      magocracy: {
        leaderTraits: () => ({
          hasClass: true,
          profession: 'wizard',
          background: 'sage',
          title: 'Archchancellor',
          socialClass: 'nobility'
        }),
        modifiers: {
          economics: 2,
          welfare: 5,
          law: -5,
          military: -5,
          arcana: 50
        },
        data: {
          isFaction: true,
          leaderType: 'the wizards',
          governmentType: 'wizards',
          politicalIdeologyIC: 'magocratic',
          description: 'Governed by the wizards.'
        }
      },
      militocracy: {
        leaderTraits: () => ({
          hasClass: true,
          profession: 'fighter',
          background: 'soldier',
          title: 'Commander',
          socialClass: 'nobility'
        }),
        modifiers: {
          economics: 25,
          welfare: -5,
          law: 30,
          military: 50,
          arcana: -15,
          equality: -25
        },
        data: {
          isFaction: true,
          leaderType: 'the military',
          governmentType: 'military',
          politicalIdeologyIC: 'militocratic',
          description: 'Governed by the military.'
        }
      },
      oligarchy: {
        leaderTraits: () => ({
          hasClass: false,
          profession: 'noble',
          background: 'noble',
          title: 'Lord',
          socialClass: 'nobility'
        }),
        modifiers: {
          economics: 15,
          welfare: -15,
          law: 5,
          military: 5,
          arcana: -5
        },
        data: {
          isFaction: false,
          leaderType: 'the powerful few',
          governmentType: 'nobles',
          politicalIdeologyIC: 'oligarchic',
          description: 'Governed by the powerful few.'
        }
      },
      sophocracy: {
        leaderTraits: () => ({
          hasClass: false,
          profession: random(['scholar', 'philosopher', 'horologist', 'mathematician']),
          background: 'sage',
          title: 'Sir',
          socialClass: 'nobility'
        }),
        modifiers: {
          economics: 15,
          welfare: 50,
          law: -5,
          military: -5,
          arcana: 15,
          equality: 25
        },
        data: {
          isFaction: true,
          leaderType: 'the scholars',
          governmentType: 'scholars',
          politicalIdeologyIC: 'sophocratic',
          description: 'Governed by the scholars.'
        }
      },
      theocracy: {
        leaderTraits: () => ({
          hasClass: true,
          profession: 'cleric',
          background: 'acolyte',
          title: 'High Priest',
          gender: 'man',
          socialClass: 'nobility'
        }),
        modifiers: {
          economics: 15,
          welfare: 30,
          law: 15,
          military: -15,
          arcana: 35
        },
        data: {
          isFaction: true,
          leaderType: 'the holy',
          governmentType: 'priests',
          politicalIdeologyIC: 'theocratic',
          description: 'Governed by the church.'
        }
      },
      technocracy: {
        leaderTraits: () => ({
          hasClass: false,
          profession: 'architect',
          background: 'guild artisan',
          title: 'Architect',
          socialClass: 'nobility'
        }),
        modifiers: {
          economics: 35,
          welfare: 15,
          law: -15,
          military: -5,
          arcana: 25
        },
        data: {
          isFaction: false,
          leaderType: 'the engineers',
          governmentType: 'craftsmen',
          politicalIdeologyIC: 'technocratic',
          description: 'Governed by the engineers.'
        }
      }
    },
    misc: {
      // They harvest _
      primaryCrop: ['barley and oats', 'beans and corn', 'nuts and olives', 'rice', 'wheat', 'potatoes and leeks', 'sugar cane', 'tobacco', 'cotton', 'sweet apples', 'cabbages and beets', 'cattle', 'dairy cows', 'sheep', 'carrots and cucumbers', 'leeks', 'corn', 'fish'],
      // the nearby region is rich with_
      primaryExport: ['iron ore', 'copper ore', 'cobalt ore', 'nickel ore', 'bauxite deposits', 'gold deposits', 'silver deposits', 'clay and granite deposits', 'salt deposits', 'quartz deposits', 'coal deposits', 'peat deposits', 'hardwood lumber', 'softwood lumber', 'ruby deposits', 'sapphire deposits', 'emerald deposits', 'opal deposits', 'amethyst deposits', 'wild game', 'common fauna used in alchemy', 'rare fauna used in alchemy'],
      // __ is currently taking place.
      currentEvent: ["an anniversary of a monarch's reign", 'an anniversary of an important event', 'an arena event', 'an arrival of a caravan or ship', 'an arrival of a circus', 'an arrival of an important npc', 'an arrival of marching modrons', 'an artistic performance', 'an athletic event', 'a birth of a child', 'a birthday of an important npc', 'a civic festival', 'a comet appearance', 'a commemoration of a past tragedy', 'a consecration of a new temple', 'a coronation', 'a council meeting', 'a equinox or solstice', 'an execution', 'a fertility festival', 'a full moon', 'a funeral', 'a graduation of cadets or wizards', 'a harvest festival', 'a holy day', 'an investiture of a knight or other noble', 'a lunar eclipse', 'a midsummer festival', 'a midwinter festival', 'a migration of monsters', "a monarch's ball", 'a new moon', 'a new year', 'a pardoning of a prisoner', 'a planar conjunction', 'a planetary alignment', 'a priestly investiture', 'a procession of ghosts', 'a remembrance for soldiers lost in war', 'a royal address or proclamation', 'a royal audience day', 'a signing of a treaty', 'a solar eclipse', 'a tournament', 'a trial', 'a violent uprising', 'a wedding or wedding anniversary', 'a travelling carnival'],
      microEvent: ["a gnarled old man offers to sell you a 'lucky' trinket for a gold coin", 'a young boy wants to see a demonstration of your weapon', 'a little girl is crying because she broke her favorite toy', 'a little gem falls out of the pocket of the man walking ahead of you', 'a guard stops you and asks you a few questions because you sort of match the description of a wanted criminal', 'a simpleton relaxing in the shade challenges you to a milk-drinking contest', 'a handful of giggling teenagers badger you for some adventuring stories', 'a middle-aged noble accuses you of cheating with their spouse', 'a young man bumps into you and falls to the ground.', 'a man and a woman are having an argument and are blocking your way forward.', 'a young woman approaches you and offers you a good time. But only to you, not the rest of your party.', 'a woman empties a chamber pot from a second storey window. Some of it splashes on you.', 'a group of children suddenly run across the road, chasing each other. Your horse is startled, and rears suddenly. (Maybe ask for a ride check to remain mounted)', 'a cart blocks the road forward. An elderly man stares at the broken axle and scratches his head.', 'a cat runs out of nowhere, bats at your foot frantically, then runs back into its hiding place.', 'a scrawny dog has started following you around. When you stop, it sits next to you and whines gently.', 'a man lays on the side of the road, unconscious. You can smell alcohol and urine as you pass him.', 'a man in tattered clothing offers to shine your shoes for a copper piece', 'a town crier stands on the corner. When you meet his gaze, he offers to recite the news for a coin.', "a bard passes you going the other direction atop a horse. as you pass, you can hear him muttering the lyrics to a song you haven't heard.", "a person who looks just like someone you know, but shouldn't be here turns the corner onto another street. Do you ignore it? Follow it?", "a lost dog starts to follow the group of PC's.", 'a bauble or trinket is found on the ground with the initials P.C.', 'a man in a dark cloak falls in pace with one of the PCs. Continues walking silently for a block or so.', "the PC's are being shadowed. When they turn to look whoever or whatever it is ducks into an alley/behind a barrel/runs away.", 'street hawkers try to sell the characters nearly everything, or anything. Bonus points if they actually do, and there is a hidden catch.', "street clerics spouting off religion. again bonus points if the characters catch a bit that doesn't fit with the way they believe that religion works.", 'foreigners come to the characters with a book or map and are looking for help in deciphering it. They will not be fluent in the local language.', "a 'lady of the evening' approaches the most pious member of the party begging for a religious blessing.", 'a firebrand preacher is in a town square or on a corner and points out a PC as an example of either piety or paganism.', 'a young street urchin is being beaten with a riding crop by a wealthier merchant.', 'a toothless old hag offers to read a PCs fortune in tarot cards.', 'a schizophrenic beggar begins speaking in tongues or has a conversation with himself.', 'a random fellow gets thrown out a bar/tavern/inn window with no warning in front of the PCs.', "a poor young girl ask you to buy some food for her pet rat (bonus fun if it's actually a tamed dire rat).", 'a wealthy and overdressed noble is thrown from his horse.', 'a young prostitute is getting slapped around by her pimp in an alleyway.', 'a young and very wealthy heir gets drunk and makes a spectacle of himself at a party/ball/dance.', 'a vengeful wife slaps the shit out of her husband right next to the party.', "a young couple is making out in the shadow of a doorway. Was it a priest and a famous noble's daughter, or someone else?!", 'a runaway horse charges through a marketplace, causing chaos.', 'a magical device malfunctions blowing the windows out of a shop.', 'a huge barrel of ale gets loose during a delivery and rolls down the street toward the party.', 'an older woman lets out a mightily creepy cackle, but it was just over a joke her sister told her.', 'a young poet asks the party for inspiration.', 'a down on his luck artist asks if they might commission him for a portrait of one of them.', 'a cutpurse is tackled and beaten by two city watch officers.', "a screaming child throws a tantrum because his/her mother/father won't buy him a trinket.", 'an old man says that his cookoo bird will tell your fortune.', 'a sleeping dragon (because snorelax is copyrighted) blocks your path', 'you run into a random acolyte in a temple with a bag on his head handing out grease scrolls', "a woman asks you to take this soup to her brother. He works at the store across town. The soup has orange things in it that don't quite look like carrots", 'a little old man with a heavy foreign accent offers to sell you one of his bizarre monkey-like creatures as a pet.', "a middle aged man roughly grabs you by the shoulder, and growls, 'You the fella what knocked up my daughter?!'", 'two mustachioed gentlemen are in the market square on top of boxes, giving away samples of a new kind of alcoholic beverages. Reactions so far are very mixed.', 'a bloody knife lays on the ground. Nobody else seems to have noticed it yet.', "you witness the guards arresting a man, apparently for deserting his military unit. The young man wails, 'I don't want to fight! I don't want to die! Please! No!'", 'a young boy excitedly points at you and jumps up and down, soon the party is swarmed by young kids asking for autographs.', 'two bearded men approach the largest member of your group and offer to sponsor him in a local pit-fighting tournament', "as the group is stopped, a particularly gaunt half-elf starts measuring one of the party's arms and legs with a marked string. If permitted, he takes measurements for the entire party. He is an undertaker.", 'a group of teenage girls are performing a strenuous dance routine on the street corner while a scarred halfling limps around taking donations.', 'you notice a WaNTED poster with your face on it. The name listed, however, is Vhargle the Black; and the crime is desecration of a holy site.', 'everyone in this town keeps trying to sell you everything imaginable, but they all make a point that they will not, under any circumstances, be selling you their hair. Not that you ever asked.', "an old man with piercing blue eyes stops you. He is clearly starving to death. He holds up a purse bulging with coins. 'Does this belong to you?'", "a small girl is crying in the road. She looks lost. If asked, her father told her to wait here for him while he went into the pub 'for a minute'. That was six hours ago.", 'a couple are having sex in a pile of straw near the road. They are loud, and a crowd is starting to gather.', 'a young urchin is running full speed toward the party carrying a live chicken. Chasing after him is a screaming older man in a fancy cloak, swinging a walking stick.', 'you find a piece of gold just laying on the ground. No one has noticed it yet.', "someone walking by catches your attention. It appears to be a beggar, and he says he'll sketch your caricature in exchange for some soup.", "you wake up and head down to the common room of the inn for some breakfast. Your companions aren't awake yet, but you do notice a little commotion outside the window. Looks like some street thugs are accosting a young woman!", 'you see guards searching the contents of a canvas covered cart that belongs to a woman. She is sitting on the ground crying into her hands.', 'a store clerk hands you back too much change. If you try to give it back he winks at you and turns to tend to another customer.', "as you are entering a store a young man exits forcibly and runs down the street. The clerk appears in front of you right after and asks you 'What way did that thief go!?'", 'you see a group of young women harassing a young man outside of a bar.', 'a blind reagent seller shows up at your keep. How do you react?', "a street side salesman hails the players and offers to sell them powerful magic items. He's got loads- 'boots of levitation,' 'rock of undead destruction' 'vampire repellant amulet' and the like. They totally aren't just some boots with five inch heels, or just a rock as big as your head, or a string with garlic on it. No way. Powerful magic in each one.", "a couple of town guards approach the party to ask a few questions. They're not intimidating: quite the contrary. The PCs are obviously new arrivals and could bring good tales and rumors. If the meeting goes well the guards might offer them a pint each after their shift.", "the party witness a merchant being bullied by two guards and the town's guard captain. after some harsh word exchanges the merchant is forced out of town with threats of jail. This is not a fascist show of force: the merchant refuses to pay the agreed fee to sell on the market and is often accused of selling bad goods, and the guards feel forced to remove him to make place for honest merchants.", "as the party enters town they are asked to deposit they're weapons at the town guard armory. If they refuse, there will be questions. at no point is anyone being intolerant and mean, however. The guards just want to make sure the PCs aren't troublemakers, and repeatedly point out that the safety of the populace is what matters.", "an old woman approach the party in tears. She proceeds to embrace a random character. 'Oh Garvus, I knew you weren't dead!' She has mistaken the character for her son. The son went missing in action in a war over a decade ago.", 'a man in rags is standing on a wooden box and proclaiming he had a vision. He proceeds to describe how the god of milk fairies wants the people to stop eating cheese. They should instead burn all the cheese ceremonially at midnight to receive magic powers. Locals ignore him.', "a parchment flies through the street and the wind flaps it on your face. It is a saucy love letter to 'My burly bear' from 'Your naughty little minx'.", "a demented (and obviously harmless) old man causes a scene by blaming a random female character for being his adulterous wife. He then tries to pick a fight with the burliest male character, blaming he has seduced the old man's wife.", 'there is a maimed beggar on the street, asking for alms. Someone recognizes him as the famous adventurer / war hero, who was his/her idol when s/he was a child.', 'a fake mystic offers to read their fortune. It is all cold reading and fake, but it is a good act, just without an ounce of magic in it.', 'despite it being winter, there are butterflies following a small girl walking past the characters.', 'the characters see an innkeeper refuse to serve a person of different ethnicity/species/something followed by obviously racist slurs.', "an annoying youngster starts pestering a magician (or someone looking like one!) to teach him magic, because he wants to 'kill monsters, loot dungeons and get all the girls!'.", 'the character witness a public execution for a relatively minor crime. The crowd cheers on as the executioners struts his stuff like a rock star on the stage before getting on with the business.', 'a cart transporting beer/bread/fresh fruit has fallen over. a mob of poor people are now grabbing free goodies, while the teamster tries to shout them off.', "two middle aged bards have a high brow version of a rap battle in the street. They're competing against one another to entice customers into their respective establishments.", "a group of junior mages are using a cantrip leveled version of 'gust of wind' to blow up women's skirts.", 'a traveling troupe of monks showcase their skills for food and minor coin.', "an aquatic elf offers underwater tours at a coastal city's port.", "a carnival is in town, showing off their newest ride: a vertical iron wheel with seats meant to let people see the whole town at once. They nicknamed it the 'ferric wheel' due to it being made mostly of iron.", 'a merchant in a heavily corroded outfit tries to sell his dishwashing invention. (contains a black pudding)', 'you notice two thugs following a young woman from a distance, trying to look inconspicuous.', 'a gnome accosts you, insisting you help him find his runaway pet cat, a tabby named Blingtangle. He offers no reward.'],
      // The nearest landmark is _
      landmark: ['a large oak tree that is swarming with beautiful blue butterflies in the morning, and blue fireflies at night.', "a cave hidden deep in the forest, with walls and floors that seem to shine with a fortunes worth of priceless gems that sparkle without any light. These 'priceless gems' immediately turn to useless stones once removed from the cave.", 'a large cave system found in the middle of a jungle. The only known opening to the cave was found by a group of locals who were hunting in the jungle that day. The cave entrance spans an opening of roughly 100ft, and if seen from the sky looks like a large impact crater. The depth of the cave is unknown, and no one knows if it is inhabited by monsters.', 'a large tree that has a village of sprites living in it. The tree moves to one of three positions in the forest every week.', 'a tiny island in the center of a lake. There is a single bullywug sitting on the island eating fish on an improvised raft.', 'a magical floating bush. It hovers around in circles.', 'a hollow tree stump with a friendly faerie dragon.', 'erosion has carved what appears to be a face into the side of a cliff.', 'a giant skeleton sticking out of the ground. Looks like a triceratops, but larger.', 'a giant flower with lots of bees surrounding it. Thousands of flowers similar to the giant one grow around it at a wide range of heights. Different kinds of fey live around it too.', 'an overgrown, moss-covered, patinaed statue that looks oddly .', 'a pond of sulphide water, with a geyser regularly rising at its centre.', 'a cliff face with geometric crystal structures jutting out of the side.', 'a cave entrance with several sharp rocks resembling the maw and teeth of a large beast.', 'a tremendous pillar of rock in the exact center of a dried lakebed.', 'a small pond in the center of a clearing. The pond is faintly luminescent and flowers grow around its edge.', 'a large smooth stone with runes in an ancient language adorning its surface.', 'a beached shipwreck that has been looted and broken on the shore. Overgrown with algae, seaweed, and barnacles.', 'a cliff with sharp rocks below known to locals as the maw of the sea.', 'a large tree that is over 30 feet in diameter. This hulking monstrosity of nature has been cared for by locals and some revere it as a god.', 'a frozen lake with a polished ice surface. If you look closely enough, you can see dead floating beneath the surface.', 'a rock formation that looks eerily like a grinning goblin if viewed from the proper angle.', 'a mountain range that when viewed from above looks like a gigantic quadruped monster.', 'the ribcage of a giant whale that fell out of the sky a long time ago, surrounded by a field of petunias. Local legends differ in how it got there, but the most accepted answer is that it was an unexpected side effect of a wizards reckless attempt to mess with the nature of probability.', 'a rocky, windy precipice rises above the surroundings, with vultures perched on every available foothold. Locals say the place is terribly cursed, but in reality the vultures only congregate there because the wind allows them to smell corpses from a great distance.', "a mountain known as the Stone God’s Thumb; it's a large fist of a mountain with a peak resembling a thumb. A plot of onions and a natural spring are located at the top.", 'the Carved Oni Heads: Early Dwarven cultures carved these stone markers to ward off demons. They break the tree line and denote a path between two prehistoric dwarf cities each stone just within sight of the other.', 'the Firefall: A rare geological phenomenon causes a plume of fire to escape a lone lava tube and cascade down instead of up. There might be something special hidden behind it…but mostly the charred remains of people who thought there was something behind it.', 'a rotting, moss covered bookshelf in a forest clearing. Its decrepit shelves are filled with molding tomes in various states of decay. What is still legible in the books is a variety of languages and dialects, some unknown.', 'a massive mushroom with a wide, flat top. Only the top is visible, and the rest is below ground. It will slowly rise from the the ground when it thinks no one is watching. If something looks at it while it is extended, it will quickly slam back into the ground.', 'an old and gnarled tree has grown over and half-swallowed what appears to be the remains of a cart – the wood has rotted away, but the metal axel is still visible.', 'a tree has fallen over a creek, its trunk forming a narrow bridge. It would be easy for a small-sized creature to walk across, but medium-sized creatures might have difficulty.', 'a cluster of bright pink and yellow mushrooms have grown over and completely blanketed a rotted tree trunk.', 'a series of miniature arches that is nearly always in the shadow of a larger arch.', 'an extremely deep and narrow slot canyon. It’s easy to jump over, but if you fell in it would mean certain death.', 'an enormous boulder balanced precariously on a thin, natural pillar.', 'enormous bones are scattered densely in this area. It’s a graveyard where large beasts come to die.', 'a set of standing stones with intricate carvings cut into them. When the wind blows a certain way, the stones make a low humming sound that can be heard from miles away. The sound fills anyone that can here it with dread and despair.', 'a small dark cave with with an extremely narrow crack in the floor, with steam billowing out. Due to the nature of the steam and the shape of the cave, it creates a low whistling sound at all times of the day.', 'a magical Island that is invisible to those who don’t or can’t use magic; because of this may ship captains have crushed on its beach with no survivors due to the island’s security system. From the outside the island appears to a cluster of destroyed ships that have created a ring around the island, but when most captains see this mysterious landmark they write it off as ships running aground on a reef.', 'the ruins of a Tower once connected to a series of watch stations that surround this area or did in the ancient world. There are several of these towers, each with their own secrets.', 'an area of land in a forest where no plants can grow.', 'a Forest with many small trees with 1 very large tree in the center of the same species.', 'a pond of water that rotates one direction in the morning and the other direction in the evening.', 'a cliff face that appears to have a large portion removed by a giant bite.', 'a tall rock formation with two boulders at the bottom… Totally not phallic… (It is).', 'a small statue of a hooded sitting hunched figure that always points slightly northwest.', "a large stone monolith towering upon a hillside. Along the back, a single rune written in charcoal and in the language of giants, the symbol for 'help'.", 'a dried up river or stream, with the remains of a long forgotten exodus. Bones stick up through the mud at strange angles.', 'a small chasm cutting across an otherwise open field.', 'a pair of tall pines which hold up the skeletal remains of a behemoth.', 'a massive multi-faceted field of quartz.', 'a roughly circular depression overgrown with strangely warped vegetation. The very middle is raised and bare rock looking almost like cracked dark glass.', 'two trees, an ash and an elm, which have grown up so close that they spiral around each other as they grew trunks and branches pressed together and entwined.', 'the Stone Queen’s Bed: A stone giant made the mistake of picking a fight with a pack of druids. Rooted and slammed into the earth they planted Somnus trees all around the raised crater. The constant stream of pollen keeps her in a perpetual dream state.', 'the Volcano Coral Tubes: A sulphuric smoke constantly rises from these inhospitable series of rock tubes. Large filter feeding red fronds rake the air in an effort to capture nutrients from the plumes of smoke. Glows red and attracts lightning strikes.', 'Morla’s Daughter: In the middle of a swamp is a lone mountain with a small town at the top. There is something weird about the tortle settlement that leads visitors to think they are hiding something…even the mountain is shaped like a turtle shell.', 'a sudden 12ft escarpment running roughly north-south for as far as the eye can see. Almost as if the all the land to the east as far as the sea had suddenly dropped 4 yards overnight.', 'a region of open sand dunes a half days hike across and several days hike long that has swallowed a northern rainforest. Only the tops of verdant hills peek through like tree islands in an ocean of sand.', 'a weathered treestump about the height of a man. Dozens of age-tarnished coins have been hammered into one side of the stump.', 'a large black obelisk stationed in the middle of a small island that is within what is now a lake. A river eroded the area and over the course of time the river carved out a small lake around the obelisk.', 'a small cave at the start of river or brook. Inside the cave is small oasis, a waterfall, pool of crisp clear water, and flowering vines crawling up the walls leading to an opening that lets in sunlight.', 'an old tree with a fox shaped canopy when viewed from the South East.', 'a small clearing between some rocks, with three sitting petrified trolls, with horrified looks in their faces.', 'two extremely close peaks with a river flowing between them. Looks like a mountain that was cut in half by the water.', 'a big colorful crystal coming out of the ground, that separates the light that comes through it, creating miniature rainbows.', 'a tiny volcano, that spews small embers, burning the vegetation directly next to it.', 'huge bones are in the area, sticking out from ground. An elephant could fit in the middle of them. They belonged to the abdomen of a really large creature.', 'a giant’s skeleton on the side of a cliff. A large sword still stuck through it’s chest.', 'a flooded pit quarry; standing neck-deep in the murky green water is the 75′ statue of a human king, his features fixed in a contemptuous snarl. Birds nest in his nostrils.', 'a collection of tar pits that are rumored to have claimed the lives of various monstrosities.', 'a winding path of high ground through a swamp, called the Witches Walk', 'a tall rock surrounded by 20 evenly spaced smaller rocks. The smaller rocks have ancient number tunes on them, this structure is clearly some ancient sundial.', 'a statue of a panicked witch in between a fork in the road.', 'a pine tree that curves wildly. They say if you listen closely for a while you can hear the wails of the ghost trapped inside.', 'a pit that is at least 50 feet deep. The bottom is always obscured in the darkest shadow.', 'a native hobgoblin burial ground that brings pets back to life with the fiend subtype added. Anything you bury will come back and try to kill you. (A groundskeeper named Sking optional.)', 'three treefolk that have pinned down a stone golem. Roots have all but immobilized the once rampaging construct. It’s been 100 years since the battle and the treefolk are still sleepy from all the action.', 'a group of islands with a mountain range in them. From the distance the peaks resemble a dragon’s claw emerging from the sea.', 'what appears to be a puddle is actually a 30 foot deep pool of water with a 10 foot radius. Upon diving under, it appears to be full of tropical ocean life, and those submerged can hear what sounds like waves crashing on the surface.', 'an invisible mountain. The only way this mountain is visible is by a seemingly floating waterfall beginning at 50 feet in the sky. (it is coming from a cave in the mountain.)', 'a twenty foot high mushroom, enclosed in a circle of smaller mushrooms of varying heights(up to 5 feet). A history check reveals this location to have been home to a giant toad who would rest on the largest mushroom. Occasionally a ghostly ribbit pierces the air.', 'a snow-covered field that looks flat, but the powdery snow covers up areas that are much deeper than expected. Heavy creatures could fall chest-deep (or worse) at any time.', 'a small tropical oasis that exists year-round in the middle of a frozen tundra.', 'something about the weather of this place makes it rain perpetually.', 'a volcano that is constantly spewing forth smoke. It’s never erupted, however.', 'a swamp that experiences daily earth-tremors. When these happen, the water drains briefly and then refills over the next day.', 'a clear, cold mountain spring that releases the same liquid as a healing potion. When the liquid has been out of the spring for more than an hour, it becomes normal water.', 'the Drow Stone – Jutting at an odd angle off the side of the path is a towering pillar of stone which is made of a dark glass like material. Stories abound of how it marks the entrance to the Underdark, however, it’s simply Volcanic glass from an ancient volcano.', 'the Salt Chasm – Rock shafts, split into hexagonal patterns, known as Columnar Basalt pervade this small valley. Their presence precludes the growth of any significant plant life.', 'the Cascading Quagmire – a series of shallow broad drops in a slow moving swamp river. The combination of floating peat moss and thick algal blooms makes what would be waterfalls instead a viscous slime dribble.', "'Howlker’s Rise'; A naturally formed column of earth and stone that is only around 75 feet in diameter with a roughly circular shape, but goes up almost 300 feet straight up. It is covered in moss, plants and even a few sideway-growing trees, it is said to have a lake on top and has a plunging waterfall that goes from the top all the way down to the pond at is souther footside. The climb is brutal. A Dwarven man named Howlker Dirtnose is said to have lived a top it for a time, after finding", 'some very tricky caverns leading upwards along the inside of it, but no one ever manages to even find an entrance.', 'the Lonely Sentinel: A massive oak tree stands alone in a vast field, not far from a cliffside overlooking the sea. It bears the scars of numerous lightning strikes and more than one attempt to chop it down, but it is still healthy and strong.', 'a natural bridge of dirt that goes over a wide area of reed thicket marshes. The wind slowly sways the cat tails and tall grasses as squishing sounds and croaks can be heard from either side of the bridge.', 'a very large tree covered in clear stones. If a creature of good approaches the tree, the stones and the leaves will grow green and blue, and flowers bloom on the tree. Neutral creatures makes them turn brown and orange. An evil creature makes them turn dark purple and red. Unaligned creatures make them turn different shades of gray.', 'a bush that seems unaffected by the wind. If a lawful creature approaches the bush, the feeding of a calm wind will pass both the bush and the creature. A neutral creature will cause a moderately strong wind to affect the two. A chaotic creature causes hurricane level winds to hit both of them.', 'a cave full of phosphorescent mushrooms that glow at night.']
    }
  };

  function politicsWeightedRoll(size, type) {
    const townType = townData.type[size];
    const ideologyType = townType.ideologies[type];
    const pool = keys(ideologyType);

    const getValue = key => {
      return ideologyType[key];
    };

    const totalWeight = pool.reduce((total, key) => {
      return total + getValue(key);
    }, 0);
    let random = Math.floor(randomFloat(1) * totalWeight);

    for (const key of pool) {
      random -= getValue(key);

      if (random < 0) {
        return key;
      }
    }
  }

  function setMaterialProbability(town, possibleMaterials) {
    for (const material of keys(town.materialProbability)) {
      for (const possibleMaterial of possibleMaterials) {
        if (possibleMaterial !== material && !structureData.material.types[possibleMaterial].alwaysAvailable) {
          town.materialProbability[possibleMaterial].probability = 0;
        }
      }
    }
  }

  const townOrCity = town => {
    if (town.type === 'city' || town.type === 'town') return 'city-illustration';
    return 'town-illustration';
  };
  function townRender(town) {
    console.log(`Rendering ${town.name}...`);
    town.localImage = townOrCity(town);
    town.roll.guardFunding = 0;
    const police = getPolice(town.factions);
    console.log(police);

    switch (police.type) {
      case 'guards':
        if (town.roll.military > 90) {
          town.roll.guardFunding += 60;
        } else if (town.roll.military > 80) {
          town.roll.guardFunding += 50;
        } else if (town.roll.military > 70) {
          town.roll.guardFunding += 40;
        } else if (town.roll.military > 60) {
          town.roll.guardFunding += 30;
        } else if (town.roll.military > 50) {
          town.roll.guardFunding += 30;
        } else if (town.roll.military > 40) {
          town.roll.guardFunding += 25;
        } else if (town.roll.military > 30) {
          town.roll.guardFunding += 25;
        } else if (town.roll.military > 20) {
          town.roll.guardFunding += 15;
        } else if (town.roll.military <= 20) {
          town.roll.guardFunding += 10;
        }

        break;

      default:
        if (town.roll.military > 90) {
          town.roll.guardFunding += 60;
        } else if (town.roll.military > 80) {
          town.roll.guardFunding += 50;
        } else if (town.roll.military > 70) {
          town.roll.guardFunding += 40;
        } else if (town.roll.military > 60) {
          town.roll.guardFunding += 30;
        } else if (town.roll.military > 50) {
          town.roll.guardFunding += 30;
        } else if (town.roll.military > 40) {
          town.roll.guardFunding += 25;
        } else if (town.roll.military > 30) {
          town.roll.guardFunding += 25;
        } else if (town.roll.military > 20) {
          town.roll.guardFunding += 15;
        } else if (town.roll.military <= 20) {
          town.roll.guardFunding += 10;
        }

    }

    switch (town.politicalIdeology) {
      case 'kleptocracy':
        break;

      default:
        if (town.roll.law > 90) {
          town.roll.guardFunding += 25;
        } else if (town.roll.law > 80) {
          town.roll.guardFunding += 20;
        } else if (town.roll.law > 70) {
          town.roll.guardFunding += 15;
        } else if (town.roll.law > 60) {
          town.roll.guardFunding += 15;
        } else if (town.roll.law > 50) {
          town.roll.guardFunding += 15;
        } else if (town.roll.law > 40) {
          town.roll.guardFunding += 10;
        } else if (town.roll.law > 30) {
          town.roll.guardFunding += 10;
        } else if (town.roll.law > 20) {
          town.roll.guardFunding += 5;
        }

    }

    switch (town.politicalIdeology) {
      case 'magocracy':
        if (town.roll.arcana > 90) {
          town.roll.guardFunding += 15;
        } else if (town.roll.arcana > 80) {
          town.roll.guardFunding += 10;
        } else if (town.roll.arcana > 70) {
          town.roll.guardFunding += 5;
        } else if (town.roll.arcana > 20) {
          town.roll.guardFunding += 5;
        } else if (town.roll.arcana > 10) {
          town.roll.guardFunding += 10;
        } else if (town.roll.arcana <= 10) {
          town.roll.guardFunding += 25;
        }

    }

    return town;
  }
  function getTownWealth(roll) {
    if (roll > 95) return 'kingly';
    if (roll > 90) return 'aristocratic';
    if (roll > 80) return 'wealthy';
    if (roll > 70) return 'comfortable';
    if (roll > 30) return 'modest';
    if (roll > 25) return 'poor';
    return 'squalid';
  }

  function updateTownSocioPolitics(town) {
    updateEconomicIdeology(town);
    updateTownPoliticalIdeology(town);
  }

  function updateEconomicIdeology(town) {
    const economicIdeologyData = townData.economicIdeology[town.economicIdeology];

    if (town.economicIdeologyIST !== economicIdeologyData.descriptors.economicIdeologyIST) {
      town.economicIdeology = economicPairs[town.economicIdeologyIST];
    }

    assign(town, economicIdeologyData.descriptors);
  }

  function updateTownPoliticalIdeology(town) {
    const politicalIdeologyData = townData.politicalIdeology[town.politicalIdeology];

    if (town.politicalIdeologyIC !== politicalIdeologyData.data.politicalIdeologyIC) {
      town.politicalIdeology = politicalIdeologyPairs[town.politicalIdeologyIC];
    }

    assign(town, politicalIdeologyData.data);
  }

  const economicPairs = freeze({
    feudalist: 'feudalism',
    capitalist: 'capitalism',
    syndicalist: 'syndicalism',
    primitivist: 'primitivism',
    communist: 'communism'
  });
  const politicalIdeologyPairs = freeze({
    autocratic: 'autocracy',
    meritocratic: 'meritocracy',
    democratic: 'democracy',
    kleptocratic: 'kleptocracy',
    magocratic: 'magocracy',
    militocratic: 'militocracy',
    oligarchic: 'oligarchy',
    sophocratic: 'sophocracy',
    theocratic: 'theocracy',
    technocratic: 'technocracy'
  });

  // TODO: finish fixing TypeScript issues
  function townDemographics(town) {
    console.log(`Creating ${town.type} demographics.`);
    const townType = townData.type[town.type];
    town._baseDemographics = weightedRandomFetcher(town, townType.demographics(), undefined, undefined, 'popPercentages');
  }
  function updateDemographics(town, newDemographics) {
    console.log('Updating demographics.');
    console.log('New:');
    console.log(newDemographics);

    for (const byRace of keys(newDemographics)) {
      town._baseDemographics[byRace] = newDemographics[byRace];
    } // Get an array of the demographic keys (race names).


    const races = Object.keys(town.baseDemographics); // Calculate the sum of the raw demographic values.

    const sum = races.map(byRace => town._baseDemographics[byRace]).reduce((acc, cur) => acc + cur, 0); // Calculate the demographic percentages.

    races.forEach(byRace => {
      town._demographicPercentile[byRace] = town._baseDemographics[byRace] / sum * 100;
    });
  }

  exports.AssertionError = AssertionError;
  exports.ClericDomain = ClericDomain;
  exports.WizardSchool = WizardSchool;
  exports.addIfDefined = addIfDefined;
  exports.addTippyAccessibility = addTippyAccessibility;
  exports.alchemistData = alchemistData;
  exports.alchemistModifiers = alchemistModifiers;
  exports.applyFMtoTrait = applyFMtoTrait;
  exports.arpabetToIpa = arpabetToIpa;
  exports.articles = articles;
  exports.assert = assert;
  exports.assign = assign;
  exports.assignFunctionalGenderRoll = assignFunctionalGenderRoll;
  exports.backgroundTraits = backgroundTraits;
  exports.badges = badges;
  exports.bandits = bandits;
  exports.bodyParts = bodyParts;
  exports.books = books;
  exports.breakGenderNorms = breakGenderNorms;
  exports.bunny = bunny;
  exports.cabin = cabin;
  exports.calcPercentage = calcPercentage;
  exports.capitalizeFirstLetter = capitalizeFirstLetter;
  exports.cat = cat;
  exports.cavern = cavern;
  exports.cheese = cheese;
  exports.clamp = clamp;
  exports.clampRolls = clampRolls;
  exports.classTraits = classTraits;
  exports.closestMatch = closestMatch;
  exports.colours = colours;
  exports.compareRollToTarget = compareRollToTarget;
  exports.compileWeightToPercentile = compileWeightToPercentile;
  exports.contentsFetcher = contentsFetcher;
  exports.createAlchemistName = createAlchemistName;
  exports.createAlchemy = createAlchemy;
  exports.createAllies = createAllies;
  exports.createAutoTippy = createAutoTippy;
  exports.createBackground = createBackground;
  exports.createBadge = createBadge;
  exports.createBuilding = createBuilding;
  exports.createClass = createClass;
  exports.createColour = createColour;
  exports.createDescriptors = createDescriptors;
  exports.createFamily = createFamily;
  exports.createFamilyHouse = createFamilyHouse;
  exports.createFamilyLifestyle = createFamilyLifestyle;
  exports.createLeaderGroup = createLeaderGroup;
  exports.createLifestyleStandards = createLifestyleStandards;
  exports.createLivery = createLivery;
  exports.createMagic = createMagic;
  exports.createName = createName;
  exports.createNamesake = createNamesake;
  exports.createPersonality = createPersonality;
  exports.createPubRumour = createPubRumour;
  exports.createReciprocalRelationship = createReciprocalRelationship;
  exports.createReligiosity = createReligiosity;
  exports.createRing = createRing;
  exports.createRivals = createRivals;
  exports.createRoad = createRoad;
  exports.createRoleplayQuestion = createRoleplayQuestion;
  exports.createSocialClass = createSocialClass;
  exports.createStructure = createStructure;
  exports.createTavernName = createTavernName;
  exports.createTippy = createTippy;
  exports.createTippyFull = createTippyFull;
  exports.createTippyWord = createTippyWord;
  exports.createTownReligion = createTownReligion;
  exports.createTrap = createTrap;
  exports.cullBuildings = cullBuildings;
  exports.deepFreeze = deepFreeze;
  exports.defineRollDataGetter = defineRollDataGetter;
  exports.deityIsWas = deityIsWas;
  exports.deityStatus = deityStatus;
  exports.deityUsesUsed = deityUsesUsed;
  exports.deleteReciprocalRelationship = deleteReciprocalRelationship;
  exports.dice = dice;
  exports.economicPairs = economicPairs;
  exports.extractIpa = extractIpa;
  exports.factionData = factionData;
  exports.factionSliders = factionSliders;
  exports.familyRelationships = familyRelationships;
  exports.fetchGender = fetchGender;
  exports.fetchProfessionChance = fetchProfessionChance;
  exports.fetchProfessions = fetchProfessions;
  exports.fetchRace = fetchRace;
  exports.filterNpcByProfession = filterNpcByProfession;
  exports.filterNull = filterNull;
  exports.filterTraits = filterTraits;
  exports.findBuilding = findBuilding;
  exports.findBuildingIndex = findBuildingIndex;
  exports.findChildRace = findChildRace;
  exports.findInArray = findInArray;
  exports.findInContainer = findInContainer;
  exports.findIndexInArray = findIndexInArray;
  exports.findIndexOfReciprocalRelationship = findIndexOfReciprocalRelationship;
  exports.findParentRaces = findParentRaces;
  exports.findPartnerRace = findPartnerRace;
  exports.findProfession = findProfession;
  exports.findReciprocalRelationships = findReciprocalRelationships;
  exports.first = first;
  exports.firstCharacter = firstCharacter;
  exports.flora = flora;
  exports.fm = fm;
  exports.formatArrayAsList = formatArrayAsList;
  exports.formatAsList = formatAsList;
  exports.formatPercentile = formatPercentile;
  exports.freeze = freeze;
  exports.genderData = genderData;
  exports.generalStore = generalStore;
  exports.generalStoreModifiers = generalStoreModifiers;
  exports.generalStoreRenders = generalStoreRenders;
  exports.generateBuildingMaterial = generateBuildingMaterial;
  exports.getAgeInYears = getAgeInYears;
  exports.getAllColours = getAllColours;
  exports.getAllPantheonPercentages = getAllPantheonPercentages;
  exports.getAllPantheons = getAllPantheons;
  exports.getAllTraits = getAllTraits;
  exports.getBuildingRoad = getBuildingRoad;
  exports.getBuildingTier = getBuildingTier;
  exports.getCustomImage = getCustomImage;
  exports.getCustomPantheon = getCustomPantheon;
  exports.getDeity = getDeity;
  exports.getDeityProbabilities = getDeityProbabilities;
  exports.getFallbackDeities = getFallbackDeities;
  exports.getFallbackPantheon = getFallbackPantheon;
  exports.getGenderTrait = getGenderTrait;
  exports.getGuardFunding = getGuardFunding;
  exports.getLocalImage = getLocalImage;
  exports.getMarriages = getMarriages;
  exports.getNpcGender = getNpcGender;
  exports.getOppositeGender = getOppositeGender;
  exports.getPantheon = getPantheon;
  exports.getPantheonDeities = getPantheonDeities;
  exports.getPantheonNames = getPantheonNames;
  exports.getPantheonPercentages = getPantheonPercentages;
  exports.getPolice = getPolice;
  exports.getPredominantRace = getPredominantRace;
  exports.getPredominantReligion = getPredominantReligion;
  exports.getRandomValue = getRandomValue;
  exports.getReligiosityDescription = getReligiosityDescription;
  exports.getSellingTalk = getSellingTalk;
  exports.getTavernSin = getTavernSin;
  exports.getTaxRate = getTaxRate;
  exports.getTownArcana = getTownArcana;
  exports.getTownDeityWeightings = getTownDeityWeightings;
  exports.getTownEconomics = getTownEconomics;
  exports.getTownLaw = getTownLaw;
  exports.getTownMaterial = getTownMaterial;
  exports.getTownMilitary = getTownMilitary;
  exports.getTownWealth = getTownWealth;
  exports.getTownWelfare = getTownWelfare;
  exports.getTrait = getTrait;
  exports.getTraitDescription = getTraitDescription;
  exports.getTraitsReadout = getTraitsReadout;
  exports.getUUID = getUUID;
  exports.getUnalteredTownDeityWeightings = getUnalteredTownDeityWeightings;
  exports.ghost = ghost;
  exports.goblin = goblin;
  exports.goblins = goblins;
  exports.gradeDeityWeightings = gradeDeityWeightings;
  exports.guardhouseData = guardhouseData;
  exports.horse = horse;
  exports.initSexistProfession = initSexistProfession;
  exports.inventory = inventory;
  exports.isBreakingGenderNorms = isBreakingGenderNorms;
  exports.isDefined = isDefined;
  exports.isDominantGender = isDominantGender;
  exports.isInformationEmpty = isInformationEmpty;
  exports.isOfAge = isOfAge;
  exports.isUndefined = isUndefined;
  exports.isUsingCustomPantheon = isUsingCustomPantheon;
  exports.keys = keys;
  exports.knewParents = knewParents;
  exports.last = last;
  exports.lifestyleStandards = lifestyleStandards;
  exports.linguisticDrift = linguisticDrift;
  exports.makeList = makeList;
  exports.market = market;
  exports.marriagePools = marriagePools;
  exports.matchFirst = matchFirst;
  exports.medal = medal;
  exports.modifyTownWeights = modifyTownWeights;
  exports.newspaper = newspaper;
  exports.npcGrossIncome = npcGrossIncome;
  exports.npcLifestyleExpenses = npcLifestyleExpenses;
  exports.npcLifestyleStandard = npcLifestyleStandard;
  exports.npcNetIncome = npcNetIncome;
  exports.npcProfit = npcProfit;
  exports.npcTaxRate = npcTaxRate;
  exports.npcTotalLifestyleExpenses = npcTotalLifestyleExpenses;
  exports.ogre = ogre;
  exports.orcs = orcs;
  exports.parseTraitIntoSentences = parseTraitIntoSentences;
  exports.parseTraitIntoTop = parseTraitIntoTop;
  exports.pastry = pastry;
  exports.patreonCharacters = patreonCharacters;
  exports.personalityTraitExists = personalityTraitExists;
  exports.personalityTraits = personalityTraits;
  exports.pickDeity = pickDeity;
  exports.politicalIdeologyPairs = politicalIdeologyPairs;
  exports.politicsWeightedRoll = politicsWeightedRoll;
  exports.printInformation = printInformation;
  exports.professions = professions;
  exports.raceTraits = raceTraits;
  exports.random = random;
  exports.randomFloat = randomFloat;
  exports.rankProbabilities = rankProbabilities;
  exports.readoutLivery = readoutLivery;
  exports.religion = religion;
  exports.removeFromArray = removeFromArray;
  exports.removeFromArrayByPredicate = removeFromArrayByPredicate;
  exports.repeat = repeat;
  exports.returnStringList = returnStringList;
  exports.roads = roads;
  exports.rollFromTable = rollFromTable;
  exports.seeIfCustomPantheonExists = seeIfCustomPantheonExists;
  exports.setAge = setAge;
  exports.setFactionAge = setFactionAge;
  exports.setFactionInfluence = setFactionInfluence;
  exports.setFactionJoinStats = setFactionJoinStats;
  exports.setFactionMisc = setFactionMisc;
  exports.setFactionName = setFactionName;
  exports.setFactionReputation = setFactionReputation;
  exports.setFactionResources = setFactionResources;
  exports.setFactionSize = setFactionSize;
  exports.setFactionStability = setFactionStability;
  exports.setMaterialProbability = setMaterialProbability;
  exports.setRace = setRace;
  exports.setRandom = setRandom;
  exports.setRandomFloat = setRandomFloat;
  exports.smithyData = smithyData;
  exports.socialClass = socialClass;
  exports.sortArray = sortArray;
  exports.sortTraitList = sortTraitList;
  exports.sortTraitListByMostExtreme = sortTraitListByMostExtreme;
  exports.spider = spider;
  exports.structureData = structureData;
  exports.sumWeights = sumWeights;
  exports.swapNPCs = swapNPCs;
  exports.tavernModifiers = tavernModifiers;
  exports.tavernRooms = tavernRooms;
  exports.tavernSleep = tavernSleep;
  exports.terrain = terrain;
  exports.toTitleCase = toTitleCase;
  exports.toUpperFirst = toUpperFirst;
  exports.townData = townData;
  exports.townDemographics = townDemographics;
  exports.townOrCity = townOrCity;
  exports.townRender = townRender;
  exports.traitDescriptions = traitDescriptions;
  exports.traits = traits$1;
  exports.treasureMap = treasureMap;
  exports.tree = tree;
  exports.updateDemographics = updateDemographics;
  exports.updateTownSocioPolitics = updateTownSocioPolitics;
  exports.urlData = urlData;
  exports.validateNpcGender = validateNpcGender;
  exports.validateWeight = validateWeight;
  exports.wageVariation = wageVariation;
  exports.weather = weather;
  exports.weightRandom = weightRandom;
  exports.weightedRandomFetcher = weightedRandomFetcher;
  exports.wolf = wolf;

  Object.defineProperty(exports, '__esModule', { value: true });

  return exports;

}({}));
//# sourceMappingURL=main.js.map
